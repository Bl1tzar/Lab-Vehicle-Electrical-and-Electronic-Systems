

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 11:22:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    85                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    86  0000                     
    87                           ; Version 2.10
    88                           ; Generated 31/07/2019 GMT
    89                           ; 
    90                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F46K80 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataBANK0
   123  003F88                     __pidataBANK0:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for stoa@F1152
   127  003F88  28                 	db	40
   128  003F89  6E                 	db	110
   129  003F8A  75                 	db	117
   130  003F8B  6C                 	db	108
   131  003F8C  6C                 	db	108
   132  003F8D  29                 	db	41
   133  003F8E  00                 	db	0
   134                           
   135                           	psect	mediumconst
   136  00F1DE                     __pmediumconst:
   137                           	opt callstack 0
   138  00F1DE  00                 	db	0
   139  00F1DF                     _font:
   140                           	opt callstack 0
   141  00F1DF  0004               	dw	4
   142  00F1E1  0000               	dw	0
   143  00F1E3  0000               	dw	0
   144  00F1E5  0000               	dw	0
   145  00F1E7  0000               	dw	0
   146  00F1E9  0000               	dw	0
   147  00F1EB  0000               	dw	0
   148  00F1ED  0000               	dw	0
   149  00F1EF  0000               	dw	0
   150  00F1F1  0003               	dw	3
   151  00F1F3  0000               	dw	0
   152  00F1F5  0000               	dw	0
   153  00F1F7  00FE               	dw	254
   154  00F1F9  001B               	dw	27
   155  00F1FB  0000               	dw	0
   156  00F1FD  0000               	dw	0
   157  00F1FF  0005               	dw	5
   158  00F201  001E               	dw	30
   159  00F203  0000               	dw	0
   160  00F205  0000               	dw	0
   161  00F207  0000               	dw	0
   162  00F209  0000               	dw	0
   163  00F20B  0000               	dw	0
   164  00F20D  001E               	dw	30
   165  00F20F  0000               	dw	0
   166  00F211  0000               	dw	0
   167  00F213  0000               	dw	0
   168  00F215  000B               	dw	11
   169  00F217  0000               	dw	0
   170  00F219  0000               	dw	0
   171  00F21B  0010               	dw	16
   172  00F21D  0001               	dw	1
   173  00F21F  0010               	dw	16
   174  00F221  001D               	dw	29
   175  00F223  00F0               	dw	240
   176  00F225  0003               	dw	3
   177  00F227  001E               	dw	30
   178  00F229  0001               	dw	1
   179  00F22B  0010               	dw	16
   180  00F22D  0001               	dw	1
   181  00F22F  0010               	dw	16
   182  00F231  001D               	dw	29
   183  00F233  00F0               	dw	240
   184  00F235  0003               	dw	3
   185  00F237  001E               	dw	30
   186  00F239  0001               	dw	1
   187  00F23B  0010               	dw	16
   188  00F23D  0001               	dw	1
   189  00F23F  0000               	dw	0
   190  00F241  0000               	dw	0
   191  00F243  0009               	dw	9
   192  00F245  0000               	dw	0
   193  00F247  0004               	dw	4
   194  00F249  001C               	dw	28
   195  00F24B  0008               	dw	8
   196  00F24D  0022               	dw	34
   197  00F24F  0010               	dw	16
   198  00F251  0042               	dw	66
   199  00F253  0010               	dw	16
   200  00F255  00FF               	dw	255
   201  00F257  007F               	dw	127
   202  00F259  0042               	dw	66
   203  00F25B  0010               	dw	16
   204  00F25D  0084               	dw	132
   205  00F25F  0010               	dw	16
   206  00F261  0000               	dw	0
   207  00F263  000F               	dw	15
   208  00F265  0000               	dw	0
   209  00F267  0000               	dw	0
   210  00F269  000C               	dw	12
   211  00F26B  001C               	dw	28
   212  00F26D  0000               	dw	0
   213  00F26F  0022               	dw	34
   214  00F271  0010               	dw	16
   215  00F273  0022               	dw	34
   216  00F275  0008               	dw	8
   217  00F277  0022               	dw	34
   218  00F279  0006               	dw	6
   219  00F27B  001C               	dw	28
   220  00F27D  0001               	dw	1
   221  00F27F  00C0               	dw	192
   222  00F281  0000               	dw	0
   223  00F283  0020               	dw	32
   224  00F285  000E               	dw	14
   225  00F287  0018               	dw	24
   226  00F289  0011               	dw	17
   227  00F28B  0004               	dw	4
   228  00F28D  0011               	dw	17
   229  00F28F  0002               	dw	2
   230  00F291  0011               	dw	17
   231  00F293  0000               	dw	0
   232  00F295  000E               	dw	14
   233  00F297  0000               	dw	0
   234  00F299  0000               	dw	0
   235  00F29B  000B               	dw	11
   236  00F29D  0000               	dw	0
   237  00F29F  0000               	dw	0
   238  00F2A1  0000               	dw	0
   239  00F2A3  000E               	dw	14
   240  00F2A5  001C               	dw	28
   241  00F2A7  0011               	dw	17
   242  00F2A9  00A2               	dw	162
   243  00F2AB  0010               	dw	16
   244  00F2AD  00C2               	dw	194
   245  00F2AF  0010               	dw	16
   246  00F2B1  0022               	dw	34
   247  00F2B3  0011               	dw	17
   248  00F2B5  001C               	dw	28
   249  00F2B7  000A               	dw	10
   250  00F2B9  0000               	dw	0
   251  00F2BB  000C               	dw	12
   252  00F2BD  0000               	dw	0
   253  00F2BF  000C               	dw	12
   254  00F2C1  0000               	dw	0
   255  00F2C3  0012               	dw	18
   256  00F2C5  0000               	dw	0
   257  00F2C7  0000               	dw	0
   258  00F2C9  0003               	dw	3
   259  00F2CB  0000               	dw	0
   260  00F2CD  0000               	dw	0
   261  00F2CF  001E               	dw	30
   262  00F2D1  0000               	dw	0
   263  00F2D3  0000               	dw	0
   264  00F2D5  0000               	dw	0
   265  00F2D7  0006               	dw	6
   266  00F2D9  0000               	dw	0
   267  00F2DB  0000               	dw	0
   268  00F2DD  0000               	dw	0
   269  00F2DF  0000               	dw	0
   270  00F2E1  00E0               	dw	224
   271  00F2E3  001F               	dw	31
   272  00F2E5  001C               	dw	28
   273  00F2E7  0060               	dw	96
   274  00F2E9  0002               	dw	2
   275  00F2EB  0080               	dw	128
   276  00F2ED  0000               	dw	0
   277  00F2EF  0000               	dw	0
   278  00F2F1  0004               	dw	4
   279  00F2F3  0000               	dw	0
   280  00F2F5  0000               	dw	0
   281  00F2F7  0006               	dw	6
   282  00F2F9  00C0               	dw	192
   283  00F2FB  00F8               	dw	248
   284  00F2FD  003F               	dw	63
   285  00F2FF  0000               	dw	0
   286  00F301  0000               	dw	0
   287  00F303  0006               	dw	6
   288  00F305  0024               	dw	36
   289  00F307  0000               	dw	0
   290  00F309  0018               	dw	24
   291  00F30B  0000               	dw	0
   292  00F30D  007E               	dw	126
   293  00F30F  0000               	dw	0
   294  00F311  0018               	dw	24
   295  00F313  0000               	dw	0
   296  00F315  0024               	dw	36
   297  00F317  0000               	dw	0
   298  00F319  0000               	dw	0
   299  00F31B  0000               	dw	0
   300  00F31D  0009               	dw	9
   301  00F31F  0000               	dw	0
   302  00F321  0000               	dw	0
   303  00F323  0080               	dw	128
   304  00F325  0000               	dw	0
   305  00F327  0080               	dw	128
   306  00F329  0000               	dw	0
   307  00F32B  0080               	dw	128
   308  00F32D  0000               	dw	0
   309  00F32F  00F0               	dw	240
   310  00F331  0007               	dw	7
   311  00F333  0080               	dw	128
   312  00F335  0000               	dw	0
   313  00F337  0080               	dw	128
   314  00F339  0000               	dw	0
   315  00F33B  0080               	dw	128
   316  00F33D  0000               	dw	0
   317  00F33F  0000               	dw	0
   318  00F341  0000               	dw	0
   319  00F343  0004               	dw	4
   320  00F345  0000               	dw	0
   321  00F347  0000               	dw	0
   322  00F349  0000               	dw	0
   323  00F34B  0060               	dw	96
   324  00F34D  0000               	dw	0
   325  00F34F  0018               	dw	24
   326  00F351  0000               	dw	0
   327  00F353  0000               	dw	0
   328  00F355  0005               	dw	5
   329  00F357  0000               	dw	0
   330  00F359  0001               	dw	1
   331  00F35B  0000               	dw	0
   332  00F35D  0001               	dw	1
   333  00F35F  0000               	dw	0
   334  00F361  0001               	dw	1
   335  00F363  0000               	dw	0
   336  00F365  0001               	dw	1
   337  00F367  0000               	dw	0
   338  00F369  0000               	dw	0
   339  00F36B  0004               	dw	4
   340  00F36D  0000               	dw	0
   341  00F36F  0000               	dw	0
   342  00F371  0000               	dw	0
   343  00F373  0018               	dw	24
   344  00F375  0000               	dw	0
   345  00F377  0018               	dw	24
   346  00F379  0000               	dw	0
   347  00F37B  0000               	dw	0
   348  00F37D  0008               	dw	8
   349  00F37F  0000               	dw	0
   350  00F381  0000               	dw	0
   351  00F383  0000               	dw	0
   352  00F385  0040               	dw	64
   353  00F387  0000               	dw	0
   354  00F389  0038               	dw	56
   355  00F38B  0000               	dw	0
   356  00F38D  0007               	dw	7
   357  00F38F  00E0               	dw	224
   358  00F391  0000               	dw	0
   359  00F393  001C               	dw	28
   360  00F395  0000               	dw	0
   361  00F397  0002               	dw	2
   362  00F399  0000               	dw	0
   363  00F39B  0000               	dw	0
   364  00F39D  0000               	dw	0
   365  00F39F  0009               	dw	9
   366  00F3A1  00F8               	dw	248
   367  00F3A3  0007               	dw	7
   368  00F3A5  0004               	dw	4
   369  00F3A7  0008               	dw	8
   370  00F3A9  0002               	dw	2
   371  00F3AB  0010               	dw	16
   372  00F3AD  0002               	dw	2
   373  00F3AF  0010               	dw	16
   374  00F3B1  0002               	dw	2
   375  00F3B3  0010               	dw	16
   376  00F3B5  0002               	dw	2
   377  00F3B7  0010               	dw	16
   378  00F3B9  0004               	dw	4
   379  00F3BB  0008               	dw	8
   380  00F3BD  00F8               	dw	248
   381  00F3BF  0007               	dw	7
   382  00F3C1  0000               	dw	0
   383  00F3C3  0000               	dw	0
   384  00F3C5  0006               	dw	6
   385  00F3C7  0000               	dw	0
   386  00F3C9  0000               	dw	0
   387  00F3CB  0000               	dw	0
   388  00F3CD  0000               	dw	0
   389  00F3CF  0002               	dw	2
   390  00F3D1  0000               	dw	0
   391  00F3D3  0002               	dw	2
   392  00F3D5  0000               	dw	0
   393  00F3D7  00FE               	dw	254
   394  00F3D9  001F               	dw	31
   395  00F3DB  0000               	dw	0
   396  00F3DD  0000               	dw	0
   397  00F3DF  0009               	dw	9
   398  00F3E1  0018               	dw	24
   399  00F3E3  0010               	dw	16
   400  00F3E5  0004               	dw	4
   401  00F3E7  0018               	dw	24
   402  00F3E9  0002               	dw	2
   403  00F3EB  0014               	dw	20
   404  00F3ED  0002               	dw	2
   405  00F3EF  0012               	dw	18
   406  00F3F1  0002               	dw	2
   407  00F3F3  0011               	dw	17
   408  00F3F5  0082               	dw	130
   409  00F3F7  0010               	dw	16
   410  00F3F9  0044               	dw	68
   411  00F3FB  0010               	dw	16
   412  00F3FD  0038               	dw	56
   413  00F3FF  0010               	dw	16
   414  00F401  0000               	dw	0
   415  00F403  0000               	dw	0
   416  00F405  0009               	dw	9
   417  00F407  0008               	dw	8
   418  00F409  000C               	dw	12
   419  00F40B  0004               	dw	4
   420  00F40D  0010               	dw	16
   421  00F40F  0002               	dw	2
   422  00F411  0010               	dw	16
   423  00F413  0042               	dw	66
   424  00F415  0010               	dw	16
   425  00F417  0042               	dw	66
   426  00F419  0010               	dw	16
   427  00F41B  0044               	dw	68
   428  00F41D  0010               	dw	16
   429  00F41F  00B8               	dw	184
   430  00F421  0008               	dw	8
   431  00F423  0000               	dw	0
   432  00F425  0007               	dw	7
   433  00F427  0000               	dw	0
   434  00F429  0000               	dw	0
   435  00F42B  0009               	dw	9
   436  00F42D  0000               	dw	0
   437  00F42F  0002               	dw	2
   438  00F431  0000               	dw	0
   439  00F433  0003               	dw	3
   440  00F435  0080               	dw	128
   441  00F437  0002               	dw	2
   442  00F439  0060               	dw	96
   443  00F43B  0002               	dw	2
   444  00F43D  0010               	dw	16
   445  00F43F  0002               	dw	2
   446  00F441  0008               	dw	8
   447  00F443  0002               	dw	2
   448  00F445  00FE               	dw	254
   449  00F447  001F               	dw	31
   450  00F449  0000               	dw	0
   451  00F44B  0002               	dw	2
   452  00F44D  0000               	dw	0
   453  00F44F  0000               	dw	0
   454  00F451  0009               	dw	9
   455  00F453  0000               	dw	0
   456  00F455  0004               	dw	4
   457  00F457  0070               	dw	112
   458  00F459  0008               	dw	8
   459  00F45B  002E               	dw	46
   460  00F45D  0010               	dw	16
   461  00F45F  0022               	dw	34
   462  00F461  0010               	dw	16
   463  00F463  0022               	dw	34
   464  00F465  0010               	dw	16
   465  00F467  0022               	dw	34
   466  00F469  0010               	dw	16
   467  00F46B  0042               	dw	66
   468  00F46D  0008               	dw	8
   469  00F46F  0082               	dw	130
   470  00F471  0007               	dw	7
   471  00F473  0000               	dw	0
   472  00F475  0000               	dw	0
   473  00F477  0009               	dw	9
   474  00F479  0000               	dw	0
   475  00F47B  0000               	dw	0
   476  00F47D  0000               	dw	0
   477  00F47F  0007               	dw	7
   478  00F481  00C0               	dw	192
   479  00F483  0008               	dw	8
   480  00F485  0060               	dw	96
   481  00F487  0010               	dw	16
   482  00F489  0058               	dw	88
   483  00F48B  0010               	dw	16
   484  00F48D  0044               	dw	68
   485  00F48F  0010               	dw	16
   486  00F491  0082               	dw	130
   487  00F493  0008               	dw	8
   488  00F495  0000               	dw	0
   489  00F497  0007               	dw	7
   490  00F499  0000               	dw	0
   491  00F49B  0000               	dw	0
   492  00F49D  0009               	dw	9
   493  00F49F  0000               	dw	0
   494  00F4A1  0000               	dw	0
   495  00F4A3  0002               	dw	2
   496  00F4A5  0010               	dw	16
   497  00F4A7  0002               	dw	2
   498  00F4A9  000C               	dw	12
   499  00F4AB  0002               	dw	2
   500  00F4AD  0003               	dw	3
   501  00F4AF  00C2               	dw	194
   502  00F4B1  0000               	dw	0
   503  00F4B3  0032               	dw	50
   504  00F4B5  0000               	dw	0
   505  00F4B7  000E               	dw	14
   506  00F4B9  0000               	dw	0
   507  00F4BB  0002               	dw	2
   508  00F4BD  0000               	dw	0
   509  00F4BF  0000               	dw	0
   510  00F4C1  0000               	dw	0
   511  00F4C3  0009               	dw	9
   512  00F4C5  0000               	dw	0
   513  00F4C7  0007               	dw	7
   514  00F4C9  0098               	dw	152
   515  00F4CB  0008               	dw	8
   516  00F4CD  0064               	dw	100
   517  00F4CF  0010               	dw	16
   518  00F4D1  0042               	dw	66
   519  00F4D3  0010               	dw	16
   520  00F4D5  0042               	dw	66
   521  00F4D7  0010               	dw	16
   522  00F4D9  0064               	dw	100
   523  00F4DB  0010               	dw	16
   524  00F4DD  0098               	dw	152
   525  00F4DF  0008               	dw	8
   526  00F4E1  0000               	dw	0
   527  00F4E3  0007               	dw	7
   528  00F4E5  0000               	dw	0
   529  00F4E7  0000               	dw	0
   530  00F4E9  0009               	dw	9
   531  00F4EB  0000               	dw	0
   532  00F4ED  0000               	dw	0
   533  00F4EF  0038               	dw	56
   534  00F4F1  0000               	dw	0
   535  00F4F3  0044               	dw	68
   536  00F4F5  0010               	dw	16
   537  00F4F7  0082               	dw	130
   538  00F4F9  0008               	dw	8
   539  00F4FB  0082               	dw	130
   540  00F4FD  0004               	dw	4
   541  00F4FF  0082               	dw	130
   542  00F501  0003               	dw	3
   543  00F503  0084               	dw	132
   544  00F505  0000               	dw	0
   545  00F507  0078               	dw	120
   546  00F509  0000               	dw	0
   547  00F50B  0000               	dw	0
   548  00F50D  0000               	dw	0
   549  00F50F  0004               	dw	4
   550  00F511  0000               	dw	0
   551  00F513  0000               	dw	0
   552  00F515  0030               	dw	48
   553  00F517  0018               	dw	24
   554  00F519  0030               	dw	48
   555  00F51B  0018               	dw	24
   556  00F51D  0000               	dw	0
   557  00F51F  0000               	dw	0
   558  00F521  0004               	dw	4
   559  00F523  0000               	dw	0
   560  00F525  0000               	dw	0
   561  00F527  0030               	dw	48
   562  00F529  0060               	dw	96
   563  00F52B  0030               	dw	48
   564  00F52D  0018               	dw	24
   565  00F52F  0000               	dw	0
   566  00F531  0000               	dw	0
   567  00F533  000A               	dw	10
   568  00F535  0000               	dw	0
   569  00F537  0000               	dw	0
   570  00F539  0080               	dw	128
   571  00F53B  0000               	dw	0
   572  00F53D  0080               	dw	128
   573  00F53F  0000               	dw	0
   574  00F541  0040               	dw	64
   575  00F543  0001               	dw	1
   576  00F545  0020               	dw	32
   577  00F547  0002               	dw	2
   578  00F549  0020               	dw	32
   579  00F54B  0002               	dw	2
   580  00F54D  0010               	dw	16
   581  00F54F  0004               	dw	4
   582  00F551  0010               	dw	16
   583  00F553  0004               	dw	4
   584  00F555  0008               	dw	8
   585  00F557  0008               	dw	8
   586  00F559  0000               	dw	0
   587  00F55B  0000               	dw	0
   588  00F55D  000A               	dw	10
   589  00F55F  0000               	dw	0
   590  00F561  0000               	dw	0
   591  00F563  0020               	dw	32
   592  00F565  0001               	dw	1
   593  00F567  0020               	dw	32
   594  00F569  0001               	dw	1
   595  00F56B  0020               	dw	32
   596  00F56D  0001               	dw	1
   597  00F56F  0020               	dw	32
   598  00F571  0001               	dw	1
   599  00F573  0020               	dw	32
   600  00F575  0001               	dw	1
   601  00F577  0020               	dw	32
   602  00F579  0001               	dw	1
   603  00F57B  0020               	dw	32
   604  00F57D  0001               	dw	1
   605  00F57F  0020               	dw	32
   606  00F581  0001               	dw	1
   607  00F583  0000               	dw	0
   608  00F585  0000               	dw	0
   609  00F587  000A               	dw	10
   610  00F589  0000               	dw	0
   611  00F58B  0000               	dw	0
   612  00F58D  0008               	dw	8
   613  00F58F  0008               	dw	8
   614  00F591  0010               	dw	16
   615  00F593  0004               	dw	4
   616  00F595  0010               	dw	16
   617  00F597  0004               	dw	4
   618  00F599  0020               	dw	32
   619  00F59B  0002               	dw	2
   620  00F59D  0020               	dw	32
   621  00F59F  0002               	dw	2
   622  00F5A1  0040               	dw	64
   623  00F5A3  0001               	dw	1
   624  00F5A5  0080               	dw	128
   625  00F5A7  0000               	dw	0
   626  00F5A9  0080               	dw	128
   627  00F5AB  0000               	dw	0
   628  00F5AD  0000               	dw	0
   629  00F5AF  0000               	dw	0
   630  00F5B1  0008               	dw	8
   631  00F5B3  0000               	dw	0
   632  00F5B5  0000               	dw	0
   633  00F5B7  000C               	dw	12
   634  00F5B9  0000               	dw	0
   635  00F5BB  0082               	dw	130
   636  00F5BD  0001               	dw	1
   637  00F5BF  0042               	dw	66
   638  00F5C1  0002               	dw	2
   639  00F5C3  0022               	dw	34
   640  00F5C5  001A               	dw	26
   641  00F5C7  0022               	dw	34
   642  00F5C9  001A               	dw	26
   643  00F5CB  009C               	dw	156
   644  00F5CD  0001               	dw	1
   645  00F5CF  0000               	dw	0
   646  00F5D1  0000               	dw	0
   647  00F5D3  000E               	dw	14
   648  00F5D5  0000               	dw	0
   649  00F5D7  0000               	dw	0
   650  00F5D9  00F0               	dw	240
   651  00F5DB  0003               	dw	3
   652  00F5DD  0008               	dw	8
   653  00F5DF  0004               	dw	4
   654  00F5E1  0004               	dw	4
   655  00F5E3  0008               	dw	8
   656  00F5E5  00C2               	dw	194
   657  00F5E7  0011               	dw	17
   658  00F5E9  0022               	dw	34
   659  00F5EB  0012               	dw	18
   660  00F5ED  0012               	dw	18
   661  00F5EF  0012               	dw	18
   662  00F5F1  0012               	dw	18
   663  00F5F3  0012               	dw	18
   664  00F5F5  00E2               	dw	226
   665  00F5F7  0011               	dw	17
   666  00F5F9  0012               	dw	18
   667  00F5FB  0012               	dw	18
   668  00F5FD  0004               	dw	4
   669  00F5FF  0012               	dw	18
   670  00F601  0008               	dw	8
   671  00F603  0009               	dw	9
   672  00F605  00F0               	dw	240
   673  00F607  0004               	dw	4
   674  00F609  0000               	dw	0
   675  00F60B  0000               	dw	0
   676  00F60D  000D               	dw	13
   677  00F60F  0000               	dw	0
   678  00F611  0000               	dw	0
   679  00F613  0000               	dw	0
   680  00F615  0010               	dw	16
   681  00F617  0000               	dw	0
   682  00F619  000E               	dw	14
   683  00F61B  0080               	dw	128
   684  00F61D  0001               	dw	1
   685  00F61F  0060               	dw	96
   686  00F621  0001               	dw	1
   687  00F623  001C               	dw	28
   688  00F625  0001               	dw	1
   689  00F627  0002               	dw	2
   690  00F629  0001               	dw	1
   691  00F62B  001C               	dw	28
   692  00F62D  0001               	dw	1
   693  00F62F  0060               	dw	96
   694  00F631  0001               	dw	1
   695  00F633  0080               	dw	128
   696  00F635  0001               	dw	1
   697  00F637  0000               	dw	0
   698  00F639  000E               	dw	14
   699  00F63B  0000               	dw	0
   700  00F63D  0010               	dw	16
   701  00F63F  0000               	dw	0
   702  00F641  0000               	dw	0
   703  00F643  0009               	dw	9
   704  00F645  0000               	dw	0
   705  00F647  0000               	dw	0
   706  00F649  0000               	dw	0
   707  00F64B  0000               	dw	0
   708  00F64D  00FE               	dw	254
   709  00F64F  001F               	dw	31
   710  00F651  0042               	dw	66
   711  00F653  0010               	dw	16
   712  00F655  0042               	dw	66
   713  00F657  0010               	dw	16
   714  00F659  0064               	dw	100
   715  00F65B  0010               	dw	16
   716  00F65D  0098               	dw	152
   717  00F65F  0008               	dw	8
   718  00F661  0000               	dw	0
   719  00F663  0007               	dw	7
   720  00F665  0000               	dw	0
   721  00F667  0000               	dw	0
   722  00F669  000D               	dw	13
   723  00F66B  0000               	dw	0
   724  00F66D  0000               	dw	0
   725  00F66F  00F0               	dw	240
   726  00F671  0003               	dw	3
   727  00F673  0008               	dw	8
   728  00F675  0004               	dw	4
   729  00F677  0004               	dw	4
   730  00F679  0008               	dw	8
   731  00F67B  0002               	dw	2
   732  00F67D  0010               	dw	16
   733  00F67F  0002               	dw	2
   734  00F681  0010               	dw	16
   735  00F683  0002               	dw	2
   736  00F685  0010               	dw	16
   737  00F687  0002               	dw	2
   738  00F689  0010               	dw	16
   739  00F68B  0002               	dw	2
   740  00F68D  0010               	dw	16
   741  00F68F  0004               	dw	4
   742  00F691  0008               	dw	8
   743  00F693  0004               	dw	4
   744  00F695  0008               	dw	8
   745  00F697  0008               	dw	8
   746  00F699  0004               	dw	4
   747  00F69B  0000               	dw	0
   748  00F69D  0000               	dw	0
   749  00F69F  000C               	dw	12
   750  00F6A1  0000               	dw	0
   751  00F6A3  0000               	dw	0
   752  00F6A5  0000               	dw	0
   753  00F6A7  0000               	dw	0
   754  00F6A9  00FE               	dw	254
   755  00F6AB  001F               	dw	31
   756  00F6AD  0002               	dw	2
   757  00F6AF  0010               	dw	16
   758  00F6B1  0002               	dw	2
   759  00F6B3  0010               	dw	16
   760  00F6B5  0002               	dw	2
   761  00F6B7  0010               	dw	16
   762  00F6B9  0002               	dw	2
   763  00F6BB  0010               	dw	16
   764  00F6BD  0002               	dw	2
   765  00F6BF  0010               	dw	16
   766  00F6C1  0004               	dw	4
   767  00F6C3  0008               	dw	8
   768  00F6C5  0008               	dw	8
   769  00F6C7  0004               	dw	4
   770  00F6C9  00F0               	dw	240
   771  00F6CB  0003               	dw	3
   772  00F6CD  0000               	dw	0
   773  00F6CF  0000               	dw	0
   774  00F6D1  0009               	dw	9
   775  00F6D3  0000               	dw	0
   776  00F6D5  0000               	dw	0
   777  00F6D7  0000               	dw	0
   778  00F6D9  0000               	dw	0
   779  00F6DB  00FE               	dw	254
   780  00F6DD  001F               	dw	31
   781  00F6DF  0042               	dw	66
   782  00F6E1  0010               	dw	16
   783  00F6E3  0042               	dw	66
   784  00F6E5  0010               	dw	16
   785  00F6E7  0042               	dw	66
   786  00F6E9  0010               	dw	16
   787  00F6EB  0042               	dw	66
   788  00F6ED  0010               	dw	16
   789  00F6EF  0042               	dw	66
   790  00F6F1  0010               	dw	16
   791  00F6F3  0000               	dw	0
   792  00F6F5  0000               	dw	0
   793  00F6F7  0008               	dw	8
   794  00F6F9  0000               	dw	0
   795  00F6FB  0000               	dw	0
   796  00F6FD  0000               	dw	0
   797  00F6FF  0000               	dw	0
   798  00F701  00FE               	dw	254
   799  00F703  001F               	dw	31
   800  00F705  0042               	dw	66
   801  00F707  0000               	dw	0
   802  00F709  0042               	dw	66
   803  00F70B  0000               	dw	0
   804  00F70D  0042               	dw	66
   805  00F70F  0000               	dw	0
   806  00F711  0042               	dw	66
   807  00F713  0000               	dw	0
   808  00F715  0000               	dw	0
   809  00F717  0000               	dw	0
   810  00F719  000E               	dw	14
   811  00F71B  0000               	dw	0
   812  00F71D  0000               	dw	0
   813  00F71F  00F0               	dw	240
   814  00F721  0003               	dw	3
   815  00F723  0008               	dw	8
   816  00F725  0004               	dw	4
   817  00F727  0004               	dw	4
   818  00F729  0008               	dw	8
   819  00F72B  0002               	dw	2
   820  00F72D  0010               	dw	16
   821  00F72F  0002               	dw	2
   822  00F731  0010               	dw	16
   823  00F733  0002               	dw	2
   824  00F735  0010               	dw	16
   825  00F737  0002               	dw	2
   826  00F739  0010               	dw	16
   827  00F73B  0082               	dw	130
   828  00F73D  0010               	dw	16
   829  00F73F  0084               	dw	132
   830  00F741  0010               	dw	16
   831  00F743  0084               	dw	132
   832  00F745  0008               	dw	8
   833  00F747  0088               	dw	136
   834  00F749  0004               	dw	4
   835  00F74B  0080               	dw	128
   836  00F74D  0003               	dw	3
   837  00F74F  0000               	dw	0
   838  00F751  0000               	dw	0
   839  00F753  000A               	dw	10
   840  00F755  0000               	dw	0
   841  00F757  0000               	dw	0
   842  00F759  0000               	dw	0
   843  00F75B  0000               	dw	0
   844  00F75D  00FE               	dw	254
   845  00F75F  001F               	dw	31
   846  00F761  0040               	dw	64
   847  00F763  0000               	dw	0
   848  00F765  0040               	dw	64
   849  00F767  0000               	dw	0
   850  00F769  0040               	dw	64
   851  00F76B  0000               	dw	0
   852  00F76D  0040               	dw	64
   853  00F76F  0000               	dw	0
   854  00F771  0040               	dw	64
   855  00F773  0000               	dw	0
   856  00F775  00FE               	dw	254
   857  00F777  001F               	dw	31
   858  00F779  0000               	dw	0
   859  00F77B  0000               	dw	0
   860  00F77D  0004               	dw	4
   861  00F77F  0000               	dw	0
   862  00F781  0000               	dw	0
   863  00F783  0000               	dw	0
   864  00F785  0000               	dw	0
   865  00F787  00FE               	dw	254
   866  00F789  001F               	dw	31
   867  00F78B  0000               	dw	0
   868  00F78D  0000               	dw	0
   869  00F78F  0007               	dw	7
   870  00F791  0000               	dw	0
   871  00F793  0000               	dw	0
   872  00F795  0000               	dw	0
   873  00F797  0008               	dw	8
   874  00F799  0000               	dw	0
   875  00F79B  0010               	dw	16
   876  00F79D  0000               	dw	0
   877  00F79F  0010               	dw	16
   878  00F7A1  0000               	dw	0
   879  00F7A3  0008               	dw	8
   880  00F7A5  00FE               	dw	254
   881  00F7A7  0007               	dw	7
   882  00F7A9  0000               	dw	0
   883  00F7AB  0000               	dw	0
   884  00F7AD  0009               	dw	9
   885  00F7AF  0000               	dw	0
   886  00F7B1  0000               	dw	0
   887  00F7B3  0000               	dw	0
   888  00F7B5  0000               	dw	0
   889  00F7B7  00FE               	dw	254
   890  00F7B9  001F               	dw	31
   891  00F7BB  0060               	dw	96
   892  00F7BD  0000               	dw	0
   893  00F7BF  0090               	dw	144
   894  00F7C1  0001               	dw	1
   895  00F7C3  0008               	dw	8
   896  00F7C5  0002               	dw	2
   897  00F7C7  0004               	dw	4
   898  00F7C9  000C               	dw	12
   899  00F7CB  0002               	dw	2
   900  00F7CD  0010               	dw	16
   901  00F7CF  0000               	dw	0
   902  00F7D1  0000               	dw	0
   903  00F7D3  0008               	dw	8
   904  00F7D5  0000               	dw	0
   905  00F7D7  0000               	dw	0
   906  00F7D9  0000               	dw	0
   907  00F7DB  0000               	dw	0
   908  00F7DD  00FE               	dw	254
   909  00F7DF  001F               	dw	31
   910  00F7E1  0000               	dw	0
   911  00F7E3  0010               	dw	16
   912  00F7E5  0000               	dw	0
   913  00F7E7  0010               	dw	16
   914  00F7E9  0000               	dw	0
   915  00F7EB  0010               	dw	16
   916  00F7ED  0000               	dw	0
   917  00F7EF  0010               	dw	16
   918  00F7F1  0000               	dw	0
   919  00F7F3  0000               	dw	0
   920  00F7F5  000F               	dw	15
   921  00F7F7  0000               	dw	0
   922  00F7F9  0000               	dw	0
   923  00F7FB  0000               	dw	0
   924  00F7FD  001C               	dw	28
   925  00F7FF  00F8               	dw	248
   926  00F801  0003               	dw	3
   927  00F803  0006               	dw	6
   928  00F805  0000               	dw	0
   929  00F807  0038               	dw	56
   930  00F809  0000               	dw	0
   931  00F80B  00C0               	dw	192
   932  00F80D  0001               	dw	1
   933  00F80F  0000               	dw	0
   934  00F811  000E               	dw	14
   935  00F813  0000               	dw	0
   936  00F815  0010               	dw	16
   937  00F817  0000               	dw	0
   938  00F819  000E               	dw	14
   939  00F81B  00C0               	dw	192
   940  00F81D  0001               	dw	1
   941  00F81F  0038               	dw	56
   942  00F821  0000               	dw	0
   943  00F823  0006               	dw	6
   944  00F825  0000               	dw	0
   945  00F827  00F8               	dw	248
   946  00F829  0003               	dw	3
   947  00F82B  0000               	dw	0
   948  00F82D  001C               	dw	28
   949  00F82F  0000               	dw	0
   950  00F831  0000               	dw	0
   951  00F833  000B               	dw	11
   952  00F835  0000               	dw	0
   953  00F837  0000               	dw	0
   954  00F839  0000               	dw	0
   955  00F83B  0000               	dw	0
   956  00F83D  00FE               	dw	254
   957  00F83F  001F               	dw	31
   958  00F841  0008               	dw	8
   959  00F843  0000               	dw	0
   960  00F845  0030               	dw	48
   961  00F847  0000               	dw	0
   962  00F849  0040               	dw	64
   963  00F84B  0000               	dw	0
   964  00F84D  0080               	dw	128
   965  00F84F  0000               	dw	0
   966  00F851  0000               	dw	0
   967  00F853  0003               	dw	3
   968  00F855  0000               	dw	0
   969  00F857  0004               	dw	4
   970  00F859  00FE               	dw	254
   971  00F85B  001F               	dw	31
   972  00F85D  0000               	dw	0
   973  00F85F  0000               	dw	0
   974  00F861  000E               	dw	14
   975  00F863  0000               	dw	0
   976  00F865  0000               	dw	0
   977  00F867  00F0               	dw	240
   978  00F869  0003               	dw	3
   979  00F86B  0008               	dw	8
   980  00F86D  0004               	dw	4
   981  00F86F  0004               	dw	4
   982  00F871  0008               	dw	8
   983  00F873  0002               	dw	2
   984  00F875  0010               	dw	16
   985  00F877  0002               	dw	2
   986  00F879  0010               	dw	16
   987  00F87B  0002               	dw	2
   988  00F87D  0010               	dw	16
   989  00F87F  0002               	dw	2
   990  00F881  0010               	dw	16
   991  00F883  0002               	dw	2
   992  00F885  0010               	dw	16
   993  00F887  0002               	dw	2
   994  00F889  0010               	dw	16
   995  00F88B  0004               	dw	4
   996  00F88D  0008               	dw	8
   997  00F88F  0008               	dw	8
   998  00F891  0004               	dw	4
   999  00F893  00F0               	dw	240
  1000  00F895  0003               	dw	3
  1001  00F897  0000               	dw	0
  1002  00F899  0000               	dw	0
  1003  00F89B  0009               	dw	9
  1004  00F89D  0000               	dw	0
  1005  00F89F  0000               	dw	0
  1006  00F8A1  0000               	dw	0
  1007  00F8A3  0000               	dw	0
  1008  00F8A5  00FE               	dw	254
  1009  00F8A7  001F               	dw	31
  1010  00F8A9  0042               	dw	66
  1011  00F8AB  0000               	dw	0
  1012  00F8AD  0042               	dw	66
  1013  00F8AF  0000               	dw	0
  1014  00F8B1  0042               	dw	66
  1015  00F8B3  0000               	dw	0
  1016  00F8B5  0024               	dw	36
  1017  00F8B7  0000               	dw	0
  1018  00F8B9  0018               	dw	24
  1019  00F8BB  0000               	dw	0
  1020  00F8BD  0000               	dw	0
  1021  00F8BF  0000               	dw	0
  1022  00F8C1  000E               	dw	14
  1023  00F8C3  0000               	dw	0
  1024  00F8C5  0000               	dw	0
  1025  00F8C7  00F0               	dw	240
  1026  00F8C9  0003               	dw	3
  1027  00F8CB  0008               	dw	8
  1028  00F8CD  0004               	dw	4
  1029  00F8CF  0004               	dw	4
  1030  00F8D1  0008               	dw	8
  1031  00F8D3  0002               	dw	2
  1032  00F8D5  0010               	dw	16
  1033  00F8D7  0002               	dw	2
  1034  00F8D9  0010               	dw	16
  1035  00F8DB  0002               	dw	2
  1036  00F8DD  0010               	dw	16
  1037  00F8DF  0002               	dw	2
  1038  00F8E1  0011               	dw	17
  1039  00F8E3  0002               	dw	2
  1040  00F8E5  0012               	dw	18
  1041  00F8E7  0002               	dw	2
  1042  00F8E9  000C               	dw	12
  1043  00F8EB  0004               	dw	4
  1044  00F8ED  0008               	dw	8
  1045  00F8EF  0008               	dw	8
  1046  00F8F1  0016               	dw	22
  1047  00F8F3  00F0               	dw	240
  1048  00F8F5  0021               	dw	33
  1049  00F8F7  0000               	dw	0
  1050  00F8F9  0000               	dw	0
  1051  00F8FB  000A               	dw	10
  1052  00F8FD  0000               	dw	0
  1053  00F8FF  0000               	dw	0
  1054  00F901  0000               	dw	0
  1055  00F903  0000               	dw	0
  1056  00F905  00FE               	dw	254
  1057  00F907  001F               	dw	31
  1058  00F909  0042               	dw	66
  1059  00F90B  0000               	dw	0
  1060  00F90D  00C2               	dw	194
  1061  00F90F  0000               	dw	0
  1062  00F911  0042               	dw	66
  1063  00F913  0001               	dw	1
  1064  00F915  0042               	dw	66
  1065  00F917  0006               	dw	6
  1066  00F919  0024               	dw	36
  1067  00F91B  0008               	dw	8
  1068  00F91D  0018               	dw	24
  1069  00F91F  0010               	dw	16
  1070  00F921  0000               	dw	0
  1071  00F923  0000               	dw	0
  1072  00F925  0008               	dw	8
  1073  00F927  0000               	dw	0
  1074  00F929  0004               	dw	4
  1075  00F92B  0018               	dw	24
  1076  00F92D  0008               	dw	8
  1077  00F92F  0024               	dw	36
  1078  00F931  0010               	dw	16
  1079  00F933  0042               	dw	66
  1080  00F935  0010               	dw	16
  1081  00F937  0042               	dw	66
  1082  00F939  0010               	dw	16
  1083  00F93B  0084               	dw	132
  1084  00F93D  0008               	dw	8
  1085  00F93F  0008               	dw	8
  1086  00F941  0007               	dw	7
  1087  00F943  0000               	dw	0
  1088  00F945  0000               	dw	0
  1089  00F947  0008               	dw	8
  1090  00F949  0002               	dw	2
  1091  00F94B  0000               	dw	0
  1092  00F94D  0002               	dw	2
  1093  00F94F  0000               	dw	0
  1094  00F951  0002               	dw	2
  1095  00F953  0000               	dw	0
  1096  00F955  00FE               	dw	254
  1097  00F957  001F               	dw	31
  1098  00F959  0002               	dw	2
  1099  00F95B  0000               	dw	0
  1100  00F95D  0002               	dw	2
  1101  00F95F  0000               	dw	0
  1102  00F961  0002               	dw	2
  1103  00F963  0000               	dw	0
  1104  00F965  0000               	dw	0
  1105  00F967  0000               	dw	0
  1106  00F969  000A               	dw	10
  1107  00F96B  0000               	dw	0
  1108  00F96D  0000               	dw	0
  1109  00F96F  0000               	dw	0
  1110  00F971  0000               	dw	0
  1111  00F973  00FE               	dw	254
  1112  00F975  0007               	dw	7
  1113  00F977  0000               	dw	0
  1114  00F979  0008               	dw	8
  1115  00F97B  0000               	dw	0
  1116  00F97D  0010               	dw	16
  1117  00F97F  0000               	dw	0
  1118  00F981  0010               	dw	16
  1119  00F983  0000               	dw	0
  1120  00F985  0010               	dw	16
  1121  00F987  0000               	dw	0
  1122  00F989  0008               	dw	8
  1123  00F98B  00FE               	dw	254
  1124  00F98D  0007               	dw	7
  1125  00F98F  0000               	dw	0
  1126  00F991  0000               	dw	0
  1127  00F993  000C               	dw	12
  1128  00F995  0002               	dw	2
  1129  00F997  0000               	dw	0
  1130  00F999  001C               	dw	28
  1131  00F99B  0000               	dw	0
  1132  00F99D  0060               	dw	96
  1133  00F99F  0000               	dw	0
  1134  00F9A1  0080               	dw	128
  1135  00F9A3  0001               	dw	1
  1136  00F9A5  0000               	dw	0
  1137  00F9A7  000E               	dw	14
  1138  00F9A9  0000               	dw	0
  1139  00F9AB  0010               	dw	16
  1140  00F9AD  0000               	dw	0
  1141  00F9AF  000E               	dw	14
  1142  00F9B1  0080               	dw	128
  1143  00F9B3  0001               	dw	1
  1144  00F9B5  0060               	dw	96
  1145  00F9B7  0000               	dw	0
  1146  00F9B9  001C               	dw	28
  1147  00F9BB  0000               	dw	0
  1148  00F9BD  0002               	dw	2
  1149  00F9BF  0000               	dw	0
  1150  00F9C1  0000               	dw	0
  1151  00F9C3  0000               	dw	0
  1152  00F9C5  000F               	dw	15
  1153  00F9C7  0000               	dw	0
  1154  00F9C9  0000               	dw	0
  1155  00F9CB  0006               	dw	6
  1156  00F9CD  0000               	dw	0
  1157  00F9CF  0078               	dw	120
  1158  00F9D1  0000               	dw	0
  1159  00F9D3  0080               	dw	128
  1160  00F9D5  0007               	dw	7
  1161  00F9D7  0000               	dw	0
  1162  00F9D9  0018               	dw	24
  1163  00F9DB  0080               	dw	128
  1164  00F9DD  0007               	dw	7
  1165  00F9DF  0078               	dw	120
  1166  00F9E1  0000               	dw	0
  1167  00F9E3  0006               	dw	6
  1168  00F9E5  0000               	dw	0
  1169  00F9E7  0078               	dw	120
  1170  00F9E9  0000               	dw	0
  1171  00F9EB  0080               	dw	128
  1172  00F9ED  0007               	dw	7
  1173  00F9EF  0000               	dw	0
  1174  00F9F1  0018               	dw	24
  1175  00F9F3  0080               	dw	128
  1176  00F9F5  0007               	dw	7
  1177  00F9F7  0078               	dw	120
  1178  00F9F9  0000               	dw	0
  1179  00F9FB  0006               	dw	6
  1180  00F9FD  0000               	dw	0
  1181  00F9FF  0000               	dw	0
  1182  00FA01  0000               	dw	0
  1183  00FA03  0009               	dw	9
  1184  00FA05  0000               	dw	0
  1185  00FA07  0000               	dw	0
  1186  00FA09  0006               	dw	6
  1187  00FA0B  0018               	dw	24
  1188  00FA0D  0008               	dw	8
  1189  00FA0F  0004               	dw	4
  1190  00FA11  0030               	dw	48
  1191  00FA13  0003               	dw	3
  1192  00FA15  00C0               	dw	192
  1193  00FA17  0000               	dw	0
  1194  00FA19  0030               	dw	48
  1195  00FA1B  0003               	dw	3
  1196  00FA1D  0008               	dw	8
  1197  00FA1F  0004               	dw	4
  1198  00FA21  0006               	dw	6
  1199  00FA23  0018               	dw	24
  1200  00FA25  0000               	dw	0
  1201  00FA27  0000               	dw	0
  1202  00FA29  000B               	dw	11
  1203  00FA2B  0000               	dw	0
  1204  00FA2D  0000               	dw	0
  1205  00FA2F  0002               	dw	2
  1206  00FA31  0000               	dw	0
  1207  00FA33  0004               	dw	4
  1208  00FA35  0000               	dw	0
  1209  00FA37  0018               	dw	24
  1210  00FA39  0000               	dw	0
  1211  00FA3B  0060               	dw	96
  1212  00FA3D  0000               	dw	0
  1213  00FA3F  0080               	dw	128
  1214  00FA41  001F               	dw	31
  1215  00FA43  0060               	dw	96
  1216  00FA45  0000               	dw	0
  1217  00FA47  0018               	dw	24
  1218  00FA49  0000               	dw	0
  1219  00FA4B  0004               	dw	4
  1220  00FA4D  0000               	dw	0
  1221  00FA4F  0002               	dw	2
  1222  00FA51  0000               	dw	0
  1223  00FA53  0000               	dw	0
  1224  00FA55  0000               	dw	0
  1225  00FA57  0008               	dw	8
  1226  00FA59  0002               	dw	2
  1227  00FA5B  0010               	dw	16
  1228  00FA5D  0002               	dw	2
  1229  00FA5F  001C               	dw	28
  1230  00FA61  0002               	dw	2
  1231  00FA63  0013               	dw	19
  1232  00FA65  00C2               	dw	194
  1233  00FA67  0010               	dw	16
  1234  00FA69  0032               	dw	50
  1235  00FA6B  0010               	dw	16
  1236  00FA6D  000E               	dw	14
  1237  00FA6F  0010               	dw	16
  1238  00FA71  0002               	dw	2
  1239  00FA73  0010               	dw	16
  1240  00FA75  0000               	dw	0
  1241  00FA77  0000               	dw	0
  1242  00FA79  0006               	dw	6
  1243  00FA7B  0000               	dw	0
  1244  00FA7D  0000               	dw	0
  1245  00FA7F  0000               	dw	0
  1246  00FA81  0000               	dw	0
  1247  00FA83  00FE               	dw	254
  1248  00FA85  00FF               	dw	255
  1249  00FA87  0002               	dw	2
  1250  00FA89  0080               	dw	128
  1251  00FA8B  0002               	dw	2
  1252  00FA8D  0080               	dw	128
  1253  00FA8F  0000               	dw	0
  1254  00FA91  0000               	dw	0
  1255  00FA93  000A               	dw	10
  1256  00FA95  0002               	dw	2
  1257  00FA97  0000               	dw	0
  1258  00FA99  000C               	dw	12
  1259  00FA9B  0000               	dw	0
  1260  00FA9D  0010               	dw	16
  1261  00FA9F  0000               	dw	0
  1262  00FAA1  0060               	dw	96
  1263  00FAA3  0000               	dw	0
  1264  00FAA5  0080               	dw	128
  1265  00FAA7  0001               	dw	1
  1266  00FAA9  0000               	dw	0
  1267  00FAAB  0006               	dw	6
  1268  00FAAD  0000               	dw	0
  1269  00FAAF  0008               	dw	8
  1270  00FAB1  0000               	dw	0
  1271  00FAB3  0030               	dw	48
  1272  00FAB5  0000               	dw	0
  1273  00FAB7  0040               	dw	64
  1274  00FAB9  0000               	dw	0
  1275  00FABB  0000               	dw	0
  1276  00FABD  0005               	dw	5
  1277  00FABF  0000               	dw	0
  1278  00FAC1  0000               	dw	0
  1279  00FAC3  0002               	dw	2
  1280  00FAC5  0080               	dw	128
  1281  00FAC7  0002               	dw	2
  1282  00FAC9  0080               	dw	128
  1283  00FACB  00FE               	dw	254
  1284  00FACD  00FF               	dw	255
  1285  00FACF  0000               	dw	0
  1286  00FAD1  0000               	dw	0
  1287  00FAD3  000B               	dw	11
  1288  00FAD5  0000               	dw	0
  1289  00FAD7  0000               	dw	0
  1290  00FAD9  0000               	dw	0
  1291  00FADB  0002               	dw	2
  1292  00FADD  0080               	dw	128
  1293  00FADF  0001               	dw	1
  1294  00FAE1  0070               	dw	112
  1295  00FAE3  0000               	dw	0
  1296  00FAE5  000C               	dw	12
  1297  00FAE7  0000               	dw	0
  1298  00FAE9  0002               	dw	2
  1299  00FAEB  0000               	dw	0
  1300  00FAED  000C               	dw	12
  1301  00FAEF  0000               	dw	0
  1302  00FAF1  0070               	dw	112
  1303  00FAF3  0000               	dw	0
  1304  00FAF5  0080               	dw	128
  1305  00FAF7  0001               	dw	1
  1306  00FAF9  0000               	dw	0
  1307  00FAFB  0002               	dw	2
  1308  00FAFD  0000               	dw	0
  1309  00FAFF  0000               	dw	0
  1310  00FB01  0009               	dw	9
  1311  00FB03  0000               	dw	0
  1312  00FB05  0040               	dw	64
  1313  00FB07  0000               	dw	0
  1314  00FB09  0040               	dw	64
  1315  00FB0B  0000               	dw	0
  1316  00FB0D  0040               	dw	64
  1317  00FB0F  0000               	dw	0
  1318  00FB11  0040               	dw	64
  1319  00FB13  0000               	dw	0
  1320  00FB15  0040               	dw	64
  1321  00FB17  0000               	dw	0
  1322  00FB19  0040               	dw	64
  1323  00FB1B  0000               	dw	0
  1324  00FB1D  0040               	dw	64
  1325  00FB1F  0000               	dw	0
  1326  00FB21  0040               	dw	64
  1327  00FB23  0000               	dw	0
  1328  00FB25  0000               	dw	0
  1329  00FB27  0005               	dw	5
  1330  00FB29  0000               	dw	0
  1331  00FB2B  0000               	dw	0
  1332  00FB2D  0000               	dw	0
  1333  00FB2F  0000               	dw	0
  1334  00FB31  0002               	dw	2
  1335  00FB33  0000               	dw	0
  1336  00FB35  0004               	dw	4
  1337  00FB37  0000               	dw	0
  1338  00FB39  0000               	dw	0
  1339  00FB3B  0000               	dw	0
  1340  00FB3D  000B               	dw	11
  1341  00FB3F  0000               	dw	0
  1342  00FB41  0000               	dw	0
  1343  00FB43  00C0               	dw	192
  1344  00FB45  0007               	dw	7
  1345  00FB47  0020               	dw	32
  1346  00FB49  0008               	dw	8
  1347  00FB4B  0010               	dw	16
  1348  00FB4D  0010               	dw	16
  1349  00FB4F  0010               	dw	16
  1350  00FB51  0010               	dw	16
  1351  00FB53  0010               	dw	16
  1352  00FB55  0010               	dw	16
  1353  00FB57  0010               	dw	16
  1354  00FB59  0010               	dw	16
  1355  00FB5B  0010               	dw	16
  1356  00FB5D  0010               	dw	16
  1357  00FB5F  0020               	dw	32
  1358  00FB61  0008               	dw	8
  1359  00FB63  00F0               	dw	240
  1360  00FB65  001F               	dw	31
  1361  00FB67  0000               	dw	0
  1362  00FB69  0000               	dw	0
  1363  00FB6B  000B               	dw	11
  1364  00FB6D  0000               	dw	0
  1365  00FB6F  0000               	dw	0
  1366  00FB71  00FE               	dw	254
  1367  00FB73  001F               	dw	31
  1368  00FB75  0020               	dw	32
  1369  00FB77  0008               	dw	8
  1370  00FB79  0010               	dw	16
  1371  00FB7B  0010               	dw	16
  1372  00FB7D  0010               	dw	16
  1373  00FB7F  0010               	dw	16
  1374  00FB81  0010               	dw	16
  1375  00FB83  0010               	dw	16
  1376  00FB85  0010               	dw	16
  1377  00FB87  0010               	dw	16
  1378  00FB89  0010               	dw	16
  1379  00FB8B  0010               	dw	16
  1380  00FB8D  0020               	dw	32
  1381  00FB8F  0008               	dw	8
  1382  00FB91  00C0               	dw	192
  1383  00FB93  0007               	dw	7
  1384  00FB95  0000               	dw	0
  1385  00FB97  0000               	dw	0
  1386  00FB99  000A               	dw	10
  1387  00FB9B  0000               	dw	0
  1388  00FB9D  0000               	dw	0
  1389  00FB9F  00C0               	dw	192
  1390  00FBA1  0007               	dw	7
  1391  00FBA3  0020               	dw	32
  1392  00FBA5  0008               	dw	8
  1393  00FBA7  0010               	dw	16
  1394  00FBA9  0010               	dw	16
  1395  00FBAB  0010               	dw	16
  1396  00FBAD  0010               	dw	16
  1397  00FBAF  0010               	dw	16
  1398  00FBB1  0010               	dw	16
  1399  00FBB3  0010               	dw	16
  1400  00FBB5  0010               	dw	16
  1401  00FBB7  0020               	dw	32
  1402  00FBB9  0008               	dw	8
  1403  00FBBB  0040               	dw	64
  1404  00FBBD  0004               	dw	4
  1405  00FBBF  0000               	dw	0
  1406  00FBC1  0000               	dw	0
  1407  00FBC3  000B               	dw	11
  1408  00FBC5  0000               	dw	0
  1409  00FBC7  0000               	dw	0
  1410  00FBC9  00C0               	dw	192
  1411  00FBCB  0007               	dw	7
  1412  00FBCD  0020               	dw	32
  1413  00FBCF  0008               	dw	8
  1414  00FBD1  0010               	dw	16
  1415  00FBD3  0010               	dw	16
  1416  00FBD5  0010               	dw	16
  1417  00FBD7  0010               	dw	16
  1418  00FBD9  0010               	dw	16
  1419  00FBDB  0010               	dw	16
  1420  00FBDD  0010               	dw	16
  1421  00FBDF  0010               	dw	16
  1422  00FBE1  0010               	dw	16
  1423  00FBE3  0010               	dw	16
  1424  00FBE5  0020               	dw	32
  1425  00FBE7  0008               	dw	8
  1426  00FBE9  00FE               	dw	254
  1427  00FBEB  001F               	dw	31
  1428  00FBED  0000               	dw	0
  1429  00FBEF  0000               	dw	0
  1430  00FBF1  000A               	dw	10
  1431  00FBF3  0000               	dw	0
  1432  00FBF5  0000               	dw	0
  1433  00FBF7  00C0               	dw	192
  1434  00FBF9  0007               	dw	7
  1435  00FBFB  0020               	dw	32
  1436  00FBFD  0009               	dw	9
  1437  00FBFF  0010               	dw	16
  1438  00FC01  0011               	dw	17
  1439  00FC03  0010               	dw	16
  1440  00FC05  0011               	dw	17
  1441  00FC07  0010               	dw	16
  1442  00FC09  0011               	dw	17
  1443  00FC0B  0010               	dw	16
  1444  00FC0D  0011               	dw	17
  1445  00FC0F  0020               	dw	32
  1446  00FC11  0009               	dw	9
  1447  00FC13  00C0               	dw	192
  1448  00FC15  0005               	dw	5
  1449  00FC17  0000               	dw	0
  1450  00FC19  0000               	dw	0
  1451  00FC1B  0006               	dw	6
  1452  00FC1D  0000               	dw	0
  1453  00FC1F  0000               	dw	0
  1454  00FC21  0010               	dw	16
  1455  00FC23  0000               	dw	0
  1456  00FC25  00FC               	dw	252
  1457  00FC27  001F               	dw	31
  1458  00FC29  0012               	dw	18
  1459  00FC2B  0000               	dw	0
  1460  00FC2D  0012               	dw	18
  1461  00FC2F  0000               	dw	0
  1462  00FC31  0000               	dw	0
  1463  00FC33  0000               	dw	0
  1464  00FC35  000B               	dw	11
  1465  00FC37  0000               	dw	0
  1466  00FC39  0000               	dw	0
  1467  00FC3B  00C0               	dw	192
  1468  00FC3D  0027               	dw	39
  1469  00FC3F  0020               	dw	32
  1470  00FC41  0048               	dw	72
  1471  00FC43  0010               	dw	16
  1472  00FC45  0090               	dw	144
  1473  00FC47  0010               	dw	16
  1474  00FC49  0090               	dw	144
  1475  00FC4B  0010               	dw	16
  1476  00FC4D  0090               	dw	144
  1477  00FC4F  0010               	dw	16
  1478  00FC51  0090               	dw	144
  1479  00FC53  0010               	dw	16
  1480  00FC55  0090               	dw	144
  1481  00FC57  0020               	dw	32
  1482  00FC59  0048               	dw	72
  1483  00FC5B  00F0               	dw	240
  1484  00FC5D  003F               	dw	63
  1485  00FC5F  0000               	dw	0
  1486  00FC61  0000               	dw	0
  1487  00FC63  000A               	dw	10
  1488  00FC65  0000               	dw	0
  1489  00FC67  0000               	dw	0
  1490  00FC69  00FE               	dw	254
  1491  00FC6B  001F               	dw	31
  1492  00FC6D  0020               	dw	32
  1493  00FC6F  0000               	dw	0
  1494  00FC71  0010               	dw	16
  1495  00FC73  0000               	dw	0
  1496  00FC75  0010               	dw	16
  1497  00FC77  0000               	dw	0
  1498  00FC79  0010               	dw	16
  1499  00FC7B  0000               	dw	0
  1500  00FC7D  0010               	dw	16
  1501  00FC7F  0000               	dw	0
  1502  00FC81  0020               	dw	32
  1503  00FC83  0000               	dw	0
  1504  00FC85  00C0               	dw	192
  1505  00FC87  001F               	dw	31
  1506  00FC89  0000               	dw	0
  1507  00FC8B  0000               	dw	0
  1508  00FC8D  0003               	dw	3
  1509  00FC8F  0000               	dw	0
  1510  00FC91  0000               	dw	0
  1511  00FC93  00F6               	dw	246
  1512  00FC95  001F               	dw	31
  1513  00FC97  0000               	dw	0
  1514  00FC99  0000               	dw	0
  1515  00FC9B  0003               	dw	3
  1516  00FC9D  0000               	dw	0
  1517  00FC9F  0080               	dw	128
  1518  00FCA1  00F6               	dw	246
  1519  00FCA3  007F               	dw	127
  1520  00FCA5  0000               	dw	0
  1521  00FCA7  0000               	dw	0
  1522  00FCA9  0008               	dw	8
  1523  00FCAB  0000               	dw	0
  1524  00FCAD  0000               	dw	0
  1525  00FCAF  00FE               	dw	254
  1526  00FCB1  001F               	dw	31
  1527  00FCB3  0000               	dw	0
  1528  00FCB5  0001               	dw	1
  1529  00FCB7  0080               	dw	128
  1530  00FCB9  0002               	dw	2
  1531  00FCBB  0040               	dw	64
  1532  00FCBD  0004               	dw	4
  1533  00FCBF  0020               	dw	32
  1534  00FCC1  0008               	dw	8
  1535  00FCC3  0010               	dw	16
  1536  00FCC5  0010               	dw	16
  1537  00FCC7  0000               	dw	0
  1538  00FCC9  0000               	dw	0
  1539  00FCCB  0003               	dw	3
  1540  00FCCD  0000               	dw	0
  1541  00FCCF  0000               	dw	0
  1542  00FCD1  00FE               	dw	254
  1543  00FCD3  001F               	dw	31
  1544  00FCD5  0000               	dw	0
  1545  00FCD7  0000               	dw	0
  1546  00FCD9  000F               	dw	15
  1547  00FCDB  0000               	dw	0
  1548  00FCDD  0000               	dw	0
  1549  00FCDF  00F0               	dw	240
  1550  00FCE1  001F               	dw	31
  1551  00FCE3  0020               	dw	32
  1552  00FCE5  0000               	dw	0
  1553  00FCE7  0010               	dw	16
  1554  00FCE9  0000               	dw	0
  1555  00FCEB  0010               	dw	16
  1556  00FCED  0000               	dw	0
  1557  00FCEF  0010               	dw	16
  1558  00FCF1  0000               	dw	0
  1559  00FCF3  0020               	dw	32
  1560  00FCF5  0000               	dw	0
  1561  00FCF7  00C0               	dw	192
  1562  00FCF9  001F               	dw	31
  1563  00FCFB  0020               	dw	32
  1564  00FCFD  0000               	dw	0
  1565  00FCFF  0010               	dw	16
  1566  00FD01  0000               	dw	0
  1567  00FD03  0010               	dw	16
  1568  00FD05  0000               	dw	0
  1569  00FD07  0010               	dw	16
  1570  00FD09  0000               	dw	0
  1571  00FD0B  0020               	dw	32
  1572  00FD0D  0000               	dw	0
  1573  00FD0F  00C0               	dw	192
  1574  00FD11  001F               	dw	31
  1575  00FD13  0000               	dw	0
  1576  00FD15  0000               	dw	0
  1577  00FD17  000A               	dw	10
  1578  00FD19  0000               	dw	0
  1579  00FD1B  0000               	dw	0
  1580  00FD1D  00F0               	dw	240
  1581  00FD1F  001F               	dw	31
  1582  00FD21  0020               	dw	32
  1583  00FD23  0000               	dw	0
  1584  00FD25  0010               	dw	16
  1585  00FD27  0000               	dw	0
  1586  00FD29  0010               	dw	16
  1587  00FD2B  0000               	dw	0
  1588  00FD2D  0010               	dw	16
  1589  00FD2F  0000               	dw	0
  1590  00FD31  0010               	dw	16
  1591  00FD33  0000               	dw	0
  1592  00FD35  0020               	dw	32
  1593  00FD37  0000               	dw	0
  1594  00FD39  00C0               	dw	192
  1595  00FD3B  001F               	dw	31
  1596  00FD3D  0000               	dw	0
  1597  00FD3F  0000               	dw	0
  1598  00FD41  000A               	dw	10
  1599  00FD43  0000               	dw	0
  1600  00FD45  0000               	dw	0
  1601  00FD47  00C0               	dw	192
  1602  00FD49  0007               	dw	7
  1603  00FD4B  0020               	dw	32
  1604  00FD4D  0008               	dw	8
  1605  00FD4F  0010               	dw	16
  1606  00FD51  0010               	dw	16
  1607  00FD53  0010               	dw	16
  1608  00FD55  0010               	dw	16
  1609  00FD57  0010               	dw	16
  1610  00FD59  0010               	dw	16
  1611  00FD5B  0010               	dw	16
  1612  00FD5D  0010               	dw	16
  1613  00FD5F  0020               	dw	32
  1614  00FD61  0008               	dw	8
  1615  00FD63  00C0               	dw	192
  1616  00FD65  0007               	dw	7
  1617  00FD67  0000               	dw	0
  1618  00FD69  0000               	dw	0
  1619  00FD6B  000B               	dw	11
  1620  00FD6D  0000               	dw	0
  1621  00FD6F  0000               	dw	0
  1622  00FD71  00F0               	dw	240
  1623  00FD73  00FF               	dw	255
  1624  00FD75  0020               	dw	32
  1625  00FD77  0008               	dw	8
  1626  00FD79  0010               	dw	16
  1627  00FD7B  0010               	dw	16
  1628  00FD7D  0010               	dw	16
  1629  00FD7F  0010               	dw	16
  1630  00FD81  0010               	dw	16
  1631  00FD83  0010               	dw	16
  1632  00FD85  0010               	dw	16
  1633  00FD87  0010               	dw	16
  1634  00FD89  0010               	dw	16
  1635  00FD8B  0010               	dw	16
  1636  00FD8D  0020               	dw	32
  1637  00FD8F  0008               	dw	8
  1638  00FD91  00C0               	dw	192
  1639  00FD93  0007               	dw	7
  1640  00FD95  0000               	dw	0
  1641  00FD97  0000               	dw	0
  1642  00FD99  000B               	dw	11
  1643  00FD9B  0000               	dw	0
  1644  00FD9D  0000               	dw	0
  1645  00FD9F  00C0               	dw	192
  1646  00FDA1  0007               	dw	7
  1647  00FDA3  0020               	dw	32
  1648  00FDA5  0008               	dw	8
  1649  00FDA7  0010               	dw	16
  1650  00FDA9  0010               	dw	16
  1651  00FDAB  0010               	dw	16
  1652  00FDAD  0010               	dw	16
  1653  00FDAF  0010               	dw	16
  1654  00FDB1  0010               	dw	16
  1655  00FDB3  0010               	dw	16
  1656  00FDB5  0010               	dw	16
  1657  00FDB7  0010               	dw	16
  1658  00FDB9  0010               	dw	16
  1659  00FDBB  0020               	dw	32
  1660  00FDBD  0008               	dw	8
  1661  00FDBF  00F0               	dw	240
  1662  00FDC1  00FF               	dw	255
  1663  00FDC3  0000               	dw	0
  1664  00FDC5  0000               	dw	0
  1665  00FDC7  0006               	dw	6
  1666  00FDC9  0000               	dw	0
  1667  00FDCB  0000               	dw	0
  1668  00FDCD  00F0               	dw	240
  1669  00FDCF  001F               	dw	31
  1670  00FDD1  0020               	dw	32
  1671  00FDD3  0000               	dw	0
  1672  00FDD5  0010               	dw	16
  1673  00FDD7  0000               	dw	0
  1674  00FDD9  0010               	dw	16
  1675  00FDDB  0000               	dw	0
  1676  00FDDD  0000               	dw	0
  1677  00FDDF  0000               	dw	0
  1678  00FDE1  0006               	dw	6
  1679  00FDE3  0060               	dw	96
  1680  00FDE5  0008               	dw	8
  1681  00FDE7  0090               	dw	144
  1682  00FDE9  0010               	dw	16
  1683  00FDEB  0010               	dw	16
  1684  00FDED  0011               	dw	17
  1685  00FDEF  0010               	dw	16
  1686  00FDF1  0011               	dw	17
  1687  00FDF3  0020               	dw	32
  1688  00FDF5  000E               	dw	14
  1689  00FDF7  0000               	dw	0
  1690  00FDF9  0000               	dw	0
  1691  00FDFB  0007               	dw	7
  1692  00FDFD  0000               	dw	0
  1693  00FDFF  0000               	dw	0
  1694  00FE01  0010               	dw	16
  1695  00FE03  0000               	dw	0
  1696  00FE05  0010               	dw	16
  1697  00FE07  0000               	dw	0
  1698  00FE09  00FE               	dw	254
  1699  00FE0B  001F               	dw	31
  1700  00FE0D  0010               	dw	16
  1701  00FE0F  0000               	dw	0
  1702  00FE11  0010               	dw	16
  1703  00FE13  0000               	dw	0
  1704  00FE15  0000               	dw	0
  1705  00FE17  0000               	dw	0
  1706  00FE19  000A               	dw	10
  1707  00FE1B  0000               	dw	0
  1708  00FE1D  0000               	dw	0
  1709  00FE1F  00F0               	dw	240
  1710  00FE21  0007               	dw	7
  1711  00FE23  0000               	dw	0
  1712  00FE25  0008               	dw	8
  1713  00FE27  0000               	dw	0
  1714  00FE29  0010               	dw	16
  1715  00FE2B  0000               	dw	0
  1716  00FE2D  0010               	dw	16
  1717  00FE2F  0000               	dw	0
  1718  00FE31  0010               	dw	16
  1719  00FE33  0000               	dw	0
  1720  00FE35  0010               	dw	16
  1721  00FE37  0000               	dw	0
  1722  00FE39  0008               	dw	8
  1723  00FE3B  00F0               	dw	240
  1724  00FE3D  0007               	dw	7
  1725  00FE3F  0000               	dw	0
  1726  00FE41  0000               	dw	0
  1727  00FE43  000A               	dw	10
  1728  00FE45  0010               	dw	16
  1729  00FE47  0000               	dw	0
  1730  00FE49  0060               	dw	96
  1731  00FE4B  0000               	dw	0
  1732  00FE4D  0080               	dw	128
  1733  00FE4F  0003               	dw	3
  1734  00FE51  0000               	dw	0
  1735  00FE53  000C               	dw	12
  1736  00FE55  0000               	dw	0
  1737  00FE57  0010               	dw	16
  1738  00FE59  0000               	dw	0
  1739  00FE5B  000C               	dw	12
  1740  00FE5D  0080               	dw	128
  1741  00FE5F  0003               	dw	3
  1742  00FE61  0060               	dw	96
  1743  00FE63  0000               	dw	0
  1744  00FE65  0010               	dw	16
  1745  00FE67  0000               	dw	0
  1746  00FE69  0000               	dw	0
  1747  00FE6B  0000               	dw	0
  1748  00FE6D  000E               	dw	14
  1749  00FE6F  0010               	dw	16
  1750  00FE71  0000               	dw	0
  1751  00FE73  00E0               	dw	224
  1752  00FE75  0000               	dw	0
  1753  00FE77  0000               	dw	0
  1754  00FE79  0007               	dw	7
  1755  00FE7B  0000               	dw	0
  1756  00FE7D  0018               	dw	24
  1757  00FE7F  0000               	dw	0
  1758  00FE81  0007               	dw	7
  1759  00FE83  00E0               	dw	224
  1760  00FE85  0000               	dw	0
  1761  00FE87  0010               	dw	16
  1762  00FE89  0000               	dw	0
  1763  00FE8B  00E0               	dw	224
  1764  00FE8D  0000               	dw	0
  1765  00FE8F  0000               	dw	0
  1766  00FE91  0007               	dw	7
  1767  00FE93  0000               	dw	0
  1768  00FE95  0018               	dw	24
  1769  00FE97  0000               	dw	0
  1770  00FE99  0007               	dw	7
  1771  00FE9B  00E0               	dw	224
  1772  00FE9D  0000               	dw	0
  1773  00FE9F  0010               	dw	16
  1774  00FEA1  0000               	dw	0
  1775  00FEA3  0000               	dw	0
  1776  00FEA5  0000               	dw	0
  1777  00FEA7  0009               	dw	9
  1778  00FEA9  0010               	dw	16
  1779  00FEAB  0010               	dw	16
  1780  00FEAD  0020               	dw	32
  1781  00FEAF  0008               	dw	8
  1782  00FEB1  0040               	dw	64
  1783  00FEB3  0004               	dw	4
  1784  00FEB5  0080               	dw	128
  1785  00FEB7  0003               	dw	3
  1786  00FEB9  0080               	dw	128
  1787  00FEBB  0003               	dw	3
  1788  00FEBD  0040               	dw	64
  1789  00FEBF  0004               	dw	4
  1790  00FEC1  0020               	dw	32
  1791  00FEC3  0008               	dw	8
  1792  00FEC5  0010               	dw	16
  1793  00FEC7  0010               	dw	16
  1794  00FEC9  0000               	dw	0
  1795  00FECB  0000               	dw	0
  1796  00FECD  0009               	dw	9
  1797  00FECF  0010               	dw	16
  1798  00FED1  0000               	dw	0
  1799  00FED3  00E0               	dw	224
  1800  00FED5  0000               	dw	0
  1801  00FED7  0000               	dw	0
  1802  00FED9  0083               	dw	131
  1803  00FEDB  0000               	dw	0
  1804  00FEDD  007C               	dw	124
  1805  00FEDF  0000               	dw	0
  1806  00FEE1  000C               	dw	12
  1807  00FEE3  0000               	dw	0
  1808  00FEE5  0003               	dw	3
  1809  00FEE7  00E0               	dw	224
  1810  00FEE9  0000               	dw	0
  1811  00FEEB  0010               	dw	16
  1812  00FEED  0000               	dw	0
  1813  00FEEF  0000               	dw	0
  1814  00FEF1  0000               	dw	0
  1815  00FEF3  0008               	dw	8
  1816  00FEF5  0010               	dw	16
  1817  00FEF7  0010               	dw	16
  1818  00FEF9  0010               	dw	16
  1819  00FEFB  0018               	dw	24
  1820  00FEFD  0010               	dw	16
  1821  00FEFF  0016               	dw	22
  1822  00FF01  0010               	dw	16
  1823  00FF03  0011               	dw	17
  1824  00FF05  00D0               	dw	208
  1825  00FF07  0010               	dw	16
  1826  00FF09  0030               	dw	48
  1827  00FF0B  0010               	dw	16
  1828  00FF0D  0010               	dw	16
  1829  00FF0F  0010               	dw	16
  1830  00FF11  0000               	dw	0
  1831  00FF13  0000               	dw	0
  1832  00FF15  0007               	dw	7
  1833  00FF17  0000               	dw	0
  1834  00FF19  0000               	dw	0
  1835  00FF1B  0000               	dw	0
  1836  00FF1D  0001               	dw	1
  1837  00FF1F  0080               	dw	128
  1838  00FF21  0002               	dw	2
  1839  00FF23  00FC               	dw	252
  1840  00FF25  007E               	dw	126
  1841  00FF27  0002               	dw	2
  1842  00FF29  0080               	dw	128
  1843  00FF2B  0002               	dw	2
  1844  00FF2D  0080               	dw	128
  1845  00FF2F  0000               	dw	0
  1846  00FF31  0000               	dw	0
  1847  00FF33  0007               	dw	7
  1848  00FF35  0000               	dw	0
  1849  00FF37  0000               	dw	0
  1850  00FF39  0000               	dw	0
  1851  00FF3B  0000               	dw	0
  1852  00FF3D  0000               	dw	0
  1853  00FF3F  0000               	dw	0
  1854  00FF41  0000               	dw	0
  1855  00FF43  0000               	dw	0
  1856  00FF45  0000               	dw	0
  1857  00FF47  0000               	dw	0
  1858  00FF49  00FE               	dw	254
  1859  00FF4B  00FF               	dw	255
  1860  00FF4D  0000               	dw	0
  1861  00FF4F  0000               	dw	0
  1862  00FF51  0006               	dw	6
  1863  00FF53  0002               	dw	2
  1864  00FF55  0080               	dw	128
  1865  00FF57  0002               	dw	2
  1866  00FF59  0080               	dw	128
  1867  00FF5B  00FC               	dw	252
  1868  00FF5D  007E               	dw	126
  1869  00FF5F  0080               	dw	128
  1870  00FF61  0002               	dw	2
  1871  00FF63  0000               	dw	0
  1872  00FF65  0001               	dw	1
  1873  00FF67  0000               	dw	0
  1874  00FF69  0000               	dw	0
  1875  00FF6B  000A               	dw	10
  1876  00FF6D  0000               	dw	0
  1877  00FF6F  0000               	dw	0
  1878  00FF71  0080               	dw	128
  1879  00FF73  0000               	dw	0
  1880  00FF75  0040               	dw	64
  1881  00FF77  0000               	dw	0
  1882  00FF79  0040               	dw	64
  1883  00FF7B  0000               	dw	0
  1884  00FF7D  0040               	dw	64
  1885  00FF7F  0000               	dw	0
  1886  00FF81  0080               	dw	128
  1887  00FF83  0000               	dw	0
  1888  00FF85  0080               	dw	128
  1889  00FF87  0000               	dw	0
  1890  00FF89  0080               	dw	128
  1891  00FF8B  0000               	dw	0
  1892  00FF8D  0040               	dw	64
  1893  00FF8F  0000               	dw	0
  1894  00FF91  0000               	dw	0
  1895  00FF93  0000               	dw	0
  1896  00FF95  0005               	dw	5
  1897  00FF97  00FF               	dw	255
  1898  00FF99  000F               	dw	15
  1899  00FF9B  0001               	dw	1
  1900  00FF9D  0008               	dw	8
  1901  00FF9F  0001               	dw	1
  1902  00FFA1  0008               	dw	8
  1903  00FFA3  00FF               	dw	255
  1904  00FFA5  000F               	dw	15
  1905  00FFA7  0000               	dw	0
  1906  00FFA9  0000               	dw	0
  1907  00FFAB                     __end_of_font:
  1908                           	opt callstack 0
  1909  00FFAB                     _spi_configuration:
  1910                           	opt callstack 0
  1911  00FFAB  00                 	db	0
  1912  00FFAC  40                 	db	64
  1913  00FFAD  01                 	db	1
  1914  00FFAE  00                 	db	0
  1915  00FFAF                     __end_of_spi_configuration:
  1916                           	opt callstack 0
  1917  00FFAF                     STR_2:
  1918  00FFAF  50                 	db	80	;'P'
  1919  00FFB0  4F                 	db	79	;'O'
  1920  00FFB1  54                 	db	84	;'T'
  1921  00FFB2  3A                 	db	58	;':'
  1922  00FFB3  20                 	db	32
  1923  00FFB4  2D                 	db	45
  1924  00FFB5  2D                 	db	45
  1925  00FFB6  2D                 	db	45
  1926  00FFB7  20                 	db	32
  1927  00FFB8  20                 	db	32
  1928  00FFB9  20                 	db	32
  1929  00FFBA  20                 	db	32
  1930  00FFBB  20                 	db	32
  1931  00FFBC  20                 	db	32
  1932  00FFBD  20                 	db	32
  1933  00FFBE  20                 	db	32
  1934  00FFBF  00                 	db	0
  1935  00FFC0                     STR_1:
  1936  00FFC0  50                 	db	80	;'P'
  1937  00FFC1  4F                 	db	79	;'O'
  1938  00FFC2  54                 	db	84	;'T'
  1939  00FFC3  3A                 	db	58	;':'
  1940  00FFC4  20                 	db	32
  1941  00FFC5  25                 	db	37
  1942  00FFC6  64                 	db	100	;'d'
  1943  00FFC7  25                 	db	37
  1944  00FFC8  25                 	db	37
  1945  00FFC9  20                 	db	32
  1946  00FFCA  20                 	db	32
  1947  00FFCB  20                 	db	32
  1948  00FFCC  20                 	db	32
  1949  00FFCD  00                 	db	0
  1950  00FFCE                     STR_79:
  1951  00FFCE  68                 	db	104	;'h'
  1952  00FFCF  68                 	db	104	;'h'
  1953  00FFD0  58                 	db	88	;'X'
  1954  00FFD1  00                 	db	0
  1955  00FFD2                     STR_3:
  1956  00FFD2  68                 	db	104	;'h'
  1957  00FFD3  68                 	db	104	;'h'
  1958  00FFD4  64                 	db	100	;'d'
  1959  00FFD5  00                 	db	0
  1960  00FFD6                     STR_7:
  1961  00FFD6  68                 	db	104	;'h'
  1962  00FFD7  68                 	db	104	;'h'
  1963  00FFD8  69                 	db	105	;'i'
  1964  00FFD9  00                 	db	0
  1965  00FFDA                     STR_45:
  1966  00FFDA  68                 	db	104	;'h'
  1967  00FFDB  68                 	db	104	;'h'
  1968  00FFDC  6E                 	db	110	;'n'
  1969  00FFDD  00                 	db	0
  1970  00FFDE                     STR_30:
  1971  00FFDE  68                 	db	104	;'h'
  1972  00FFDF  68                 	db	104	;'h'
  1973  00FFE0  6F                 	db	111	;'o'
  1974  00FFE1  00                 	db	0
  1975  00FFE2                     STR_60:
  1976  00FFE2  68                 	db	104	;'h'
  1977  00FFE3  68                 	db	104	;'h'
  1978  00FFE4  75                 	db	117	;'u'
  1979  00FFE5  00                 	db	0
  1980  00FFE6                     STR_75:
  1981  00FFE6  68                 	db	104	;'h'
  1982  00FFE7  68                 	db	104	;'h'
  1983  00FFE8  78                 	db	120	;'x'
  1984  00FFE9  00                 	db	0
  1985  00FFEA                     STR_97:
  1986  00FFEA  7A                 	db	122	;'z'
  1987  00FFEB  58                 	db	88	;'X'
  1988  00FFEC  00                 	db	0
  1989  00FFED                     STR_21:
  1990  00FFED  7A                 	db	122	;'z'
  1991  00FFEE  64                 	db	100	;'d'
  1992  00FFEF  00                 	db	0
  1993  00FFF0                     STR_25:
  1994  00FFF0  7A                 	db	122	;'z'
  1995  00FFF1  69                 	db	105	;'i'
  1996  00FFF2  00                 	db	0
  1997  00FFF3                     STR_55:
  1998  00FFF3  7A                 	db	122	;'z'
  1999  00FFF4  6E                 	db	110	;'n'
  2000  00FFF5  00                 	db	0
  2001  00FFF6                     STR_40:
  2002  00FFF6  7A                 	db	122	;'z'
  2003  00FFF7  6F                 	db	111	;'o'
  2004  00FFF8  00                 	db	0
  2005  00FFF9                     STR_70:
  2006  00FFF9  7A                 	db	122	;'z'
  2007  00FFFA  75                 	db	117	;'u'
  2008  00FFFB  00                 	db	0
  2009  00FFFC                     STR_93:
  2010  00FFFC  7A                 	db	122	;'z'
  2011  00FFFD  78                 	db	120	;'x'
  2012  00FFFE  00                 	db	0
  2013  0000                     
  2014                           ; #config settings
  2015  00FFFF  00                 	db	0	; dummy byte at the end
  2016  0000                     
  2017                           	psect	nvBANK0
  2018  0000F3                     __pnvBANK0:
  2019                           	opt callstack 0
  2020  0000F3                     _INT0_InterruptHandler:
  2021                           	opt callstack 0
  2022  0000F3                     	ds	2
  2023  0000F5                     _timer1ReloadVal:
  2024                           	opt callstack 0
  2025  0000F5                     	ds	2
  2026  0000F7                     _IOCB4_InterruptHandler:
  2027                           	opt callstack 0
  2028  0000F7                     	ds	2
  2029  0000                     _IOCBbits	set	3930
  2030  0000                     _WPUB	set	3931
  2031  0000                     _ANCON1	set	3932
  2032  0000                     _ANCON0	set	3933
  2033  0000                     _LATEbits	set	3981
  2034  0000                     _SSPSTATbits	set	4039
  2035  0000                     _LATAbits	set	3977
  2036  0000                     _T1GCONbits	set	4010
  2037  0000                     _T1CONbits	set	4045
  2038  0000                     _T1CON	set	4045
  2039  0000                     _TMR1L	set	4046
  2040  0000                     _TMR1H	set	4047
  2041  0000                     _T1GCON	set	4010
  2042  0000                     _ADCON0bits	set	4034
  2043  0000                     _ADRESL	set	4035
  2044  0000                     _ADRESH	set	4036
  2045  0000                     _ADCON2	set	4032
  2046  0000                     _ADCON1	set	4033
  2047  0000                     _ADCON0	set	4034
  2048  0000                     _PIR1bits	set	3998
  2049  0000                     _SSPBUF	set	4041
  2050  0000                     _SSPCON2	set	4037
  2051  0000                     _SSPCON1bits	set	4038
  2052  0000                     _TRISCbits	set	3988
  2053  0000                     _SSPADD	set	4040
  2054  0000                     _SSPCON1	set	4038
  2055  0000                     _SSPSTAT	set	4039
  2056  0000                     _INTCON2bits	set	4081
  2057  0000                     _TRISD	set	3989
  2058  0000                     _TRISC	set	3988
  2059  0000                     _TRISB	set	3987
  2060  0000                     _TRISA	set	3986
  2061  0000                     _TRISE	set	3990
  2062  0000                     _LATC	set	3979
  2063  0000                     _LATB	set	3978
  2064  0000                     _LATA	set	3977
  2065  0000                     _LATD	set	3980
  2066  0000                     _LATE	set	3981
  2067  0000                     _INTCONbits	set	4082
  2068  0000                     _RCONbits	set	4048
  2069  0000                     _REFOCON	set	3994
  2070  0000                     _OSCTUNE	set	3995
  2071  0000                     _OSCCON2	set	4050
  2072  0000                     _OSCCON	set	4051
  2073                           
  2074                           	psect	cinit
  2075  003A66                     __pcinit:
  2076                           	opt callstack 0
  2077  003A66                     start_initialization:
  2078                           	opt callstack 0
  2079  003A66                     __initialization:
  2080                           	opt callstack 0
  2081                           
  2082                           ; Initialize objects allocated to BANK0 (7 bytes)
  2083                           ; load TBLPTR registers with __pidataBANK0
  2084  003A66  0E88               	movlw	low __pidataBANK0
  2085  003A68  6EF6               	movwf	tblptrl,c
  2086  003A6A  0E3F               	movlw	high __pidataBANK0
  2087  003A6C  6EF7               	movwf	tblptrh,c
  2088  003A6E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2089  003A70  6EF8               	movwf	tblptru,c
  2090  003A72  EE00  F0EC         	lfsr	0,__pdataBANK0
  2091  003A76  EE10 F007          	lfsr	1,7
  2092  003A7A                     copy_data0:
  2093  003A7A  0009               	tblrd		*+
  2094  003A7C  CFF5 FFEE          	movff	tablat,postinc0
  2095  003A80  50E5               	movf	postdec1,w,c
  2096  003A82  50E1               	movf	fsr1l,w,c
  2097  003A84  E1FA               	bnz	copy_data0
  2098                           
  2099                           ; Clear objects allocated to BANK1 (20 bytes)
  2100  003A86  EE01  F000         	lfsr	0,__pbssBANK1
  2101  003A8A  0E14               	movlw	20
  2102  003A8C                     clear_0:
  2103  003A8C  6AEE               	clrf	postinc0,c
  2104  003A8E  06E8               	decf	wreg,f,c
  2105  003A90  E1FD               	bnz	clear_0
  2106                           
  2107                           ; Clear objects allocated to BANK0 (43 bytes)
  2108  003A92  EE00  F0C1         	lfsr	0,__pbssBANK0
  2109  003A96  0E2B               	movlw	43
  2110  003A98                     clear_1:
  2111  003A98  6AEE               	clrf	postinc0,c
  2112  003A9A  06E8               	decf	wreg,f,c
  2113  003A9C  E1FD               	bnz	clear_1
  2114                           
  2115                           ; Clear objects allocated to COMRAM (4 bytes)
  2116  003A9E  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2117  003AA0  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2118  003AA2  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2119  003AA4  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2120  003AA6                     end_of_initialization:
  2121                           	opt callstack 0
  2122  003AA6                     __end_of__initialization:
  2123                           	opt callstack 0
  2124  003AA6  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2125  003AA8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2126  003AAA  0100               	movlb	0
  2127  003AAC  EF15  F012         	goto	_main	;jump to C main() function
  2128                           
  2129                           	psect	bssCOMRAM
  2130  000057                     __pbssCOMRAM:
  2131                           	opt callstack 0
  2132  000057                     _prec:
  2133                           	opt callstack 0
  2134  000057                     	ds	2
  2135  000059                     _flags:
  2136                           	opt callstack 0
  2137  000059                     	ds	2
  2138                           
  2139                           	psect	bssBANK0
  2140  0000C1                     __pbssBANK0:
  2141                           	opt callstack 0
  2142  0000C1                     _errno:
  2143                           	opt callstack 0
  2144  0000C1                     	ds	2
  2145  0000C3                     _nout:
  2146                           	opt callstack 0
  2147  0000C3                     	ds	2
  2148  0000C5                     _width:
  2149                           	opt callstack 0
  2150  0000C5                     	ds	2
  2151  0000C7                     _global_bg_color:
  2152                           	opt callstack 0
  2153  0000C7                     	ds	2
  2154  0000C9                     _ADC_InterruptHandler:
  2155                           	opt callstack 0
  2156  0000C9                     	ds	2
  2157  0000CB                     _mode:
  2158                           	opt callstack 0
  2159  0000CB                     	ds	1
  2160  0000CC                     _dbuf:
  2161                           	opt callstack 0
  2162  0000CC                     	ds	32
  2163                           
  2164                           	psect	dataBANK0
  2165  0000EC                     __pdataBANK0:
  2166                           	opt callstack 0
  2167  0000EC                     stoa@F1152:
  2168                           	opt callstack 0
  2169  0000EC                     	ds	7
  2170                           
  2171                           	psect	bssBANK1
  2172  000100                     __pbssBANK1:
  2173                           	opt callstack 0
  2174  000100                     	ds	20
  2175                           
  2176                           	psect	cstackBANK0
  2177  000060                     __pcstackBANK0:
  2178                           	opt callstack 0
  2179  000060                     vfpfcnvrt@cp:
  2180                           	opt callstack 0
  2181                           
  2182                           ; 2 bytes @ 0x0
  2183  000060                     	ds	2
  2184  000062                     vfpfcnvrt@done:
  2185                           	opt callstack 0
  2186                           
  2187                           ; 2 bytes @ 0x2
  2188  000062                     	ds	2
  2189  000064                     _vfpfcnvrt$1363:
  2190                           	opt callstack 0
  2191                           
  2192                           ; 2 bytes @ 0x4
  2193  000064                     	ds	2
  2194  000066                     _vfpfcnvrt$1364:
  2195                           	opt callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x6
  2198  000066                     	ds	2
  2199  000068                     vfpfcnvrt@ll:
  2200                           	opt callstack 0
  2201                           
  2202                           ; 8 bytes @ 0x8
  2203  000068                     	ds	8
  2204  000070                     vfpfcnvrt@vp:
  2205                           	opt callstack 0
  2206                           
  2207                           ; 2 bytes @ 0x10
  2208  000070                     	ds	2
  2209  000072                     vfpfcnvrt@c:
  2210                           	opt callstack 0
  2211                           
  2212                           ; 1 bytes @ 0x12
  2213  000072                     	ds	1
  2214  000073                     vfpfcnvrt@llu:
  2215                           	opt callstack 0
  2216                           
  2217                           ; 8 bytes @ 0x13
  2218  000073                     	ds	8
  2219  00007B                     ?_vsnprintf:
  2220                           	opt callstack 0
  2221  00007B                     vsnprintf@s:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x1B
  2225  00007B                     	ds	2
  2226  00007D                     vsnprintf@n:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 2 bytes @ 0x1D
  2230  00007D                     	ds	2
  2231  00007F                     vsnprintf@fmt:
  2232                           	opt callstack 0
  2233                           
  2234                           ; 2 bytes @ 0x1F
  2235  00007F                     	ds	2
  2236  000081                     vsnprintf@ap:
  2237                           	opt callstack 0
  2238                           
  2239                           ; 2 bytes @ 0x21
  2240  000081                     	ds	2
  2241  000083                     ??_vsnprintf:
  2242                           
  2243                           ; 1 bytes @ 0x23
  2244  000083                     	ds	4
  2245  000087                     _vsnprintf$2064:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x27
  2249  000087                     	ds	2
  2250  000089                     vsnprintf@cnt:
  2251                           	opt callstack 0
  2252                           
  2253                           ; 2 bytes @ 0x29
  2254  000089                     	ds	2
  2255  00008B                     vsnprintf@f:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 6 bytes @ 0x2B
  2259  00008B                     	ds	6
  2260  000091                     ?_snprintf:
  2261                           	opt callstack 0
  2262  000091                     snprintf@s:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x31
  2266  000091                     	ds	2
  2267  000093                     snprintf@n:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x33
  2271  000093                     	ds	2
  2272  000095                     snprintf@fmt:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 2 bytes @ 0x35
  2276  000095                     	ds	8
  2277  00009D                     snprintf@ap:
  2278                           	opt callstack 0
  2279                           
  2280                           ; 2 bytes @ 0x3D
  2281  00009D                     	ds	2
  2282  00009F                     ??_main:
  2283                           
  2284                           ; 1 bytes @ 0x3F
  2285  00009F                     	ds	4
  2286  0000A3                     main@string:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 20 bytes @ 0x43
  2290  0000A3                     	ds	20
  2291  0000B7                     main@percentage:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 2 bytes @ 0x57
  2295  0000B7                     	ds	2
  2296  0000B9                     main@perc_val:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 4 bytes @ 0x59
  2300  0000B9                     	ds	4
  2301  0000BD                     main@pot_val:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 4 bytes @ 0x5D
  2305  0000BD                     	ds	4
  2306                           
  2307                           	psect	cstackCOMRAM
  2308  000001                     __pcstackCOMRAM:
  2309                           	opt callstack 0
  2310  000001                     ??_INTERRUPT_InterruptManager:
  2311  000001                     
  2312                           ; 1 bytes @ 0x0
  2313  000001                     	ds	2
  2314  000003                     ??_TMR1_Initialize:
  2315  000003                     ??_SPI_Open:
  2316  000003                     ??_msDelay:
  2317  000003                     ?_strlen:
  2318                           	opt callstack 0
  2319  000003                     ?_isupper:
  2320                           	opt callstack 0
  2321  000003                     ?_isalpha:
  2322                           	opt callstack 0
  2323  000003                     ?_isdigit:
  2324                           	opt callstack 0
  2325  000003                     ?_strncmp:
  2326                           	opt callstack 0
  2327  000003                     ?_isspace:
  2328                           	opt callstack 0
  2329  000003                     ?_islower:
  2330                           	opt callstack 0
  2331  000003                     ?_ADC_GetConversionResult:
  2332                           	opt callstack 0
  2333  000003                     ?___wmul:
  2334                           	opt callstack 0
  2335  000003                     ?___lmul:
  2336                           	opt callstack 0
  2337  000003                     ?___xxtofl:
  2338                           	opt callstack 0
  2339  000003                     ?___aodiv:
  2340                           	opt callstack 0
  2341  000003                     ?___aomod:
  2342                           	opt callstack 0
  2343  000003                     ?___lodiv:
  2344                           	opt callstack 0
  2345  000003                     ?___lomod:
  2346                           	opt callstack 0
  2347  000003                     SPI_ExchangeByte@data:
  2348                           	opt callstack 0
  2349  000003                     IOCB4_SetInterruptHandler@InterruptHandler:
  2350                           	opt callstack 0
  2351  000003                     INT0_SetInterruptHandler@InterruptHandler:
  2352                           	opt callstack 0
  2353  000003                     ___wmul@multiplier:
  2354                           	opt callstack 0
  2355  000003                     isalpha@c:
  2356                           	opt callstack 0
  2357  000003                     isdigit@c:
  2358                           	opt callstack 0
  2359  000003                     isspace@c:
  2360                           	opt callstack 0
  2361  000003                     isupper@c:
  2362                           	opt callstack 0
  2363  000003                     fputc@c:
  2364                           	opt callstack 0
  2365  000003                     strlen@s:
  2366                           	opt callstack 0
  2367  000003                     strncmp@_l:
  2368                           	opt callstack 0
  2369  000003                     islower@c:
  2370                           	opt callstack 0
  2371  000003                     ___lmul@multiplier:
  2372                           	opt callstack 0
  2373  000003                     ___xxtofl@val:
  2374                           	opt callstack 0
  2375  000003                     ___aodiv@dividend:
  2376                           	opt callstack 0
  2377  000003                     ___aomod@dividend:
  2378                           	opt callstack 0
  2379  000003                     ___lodiv@dividend:
  2380                           	opt callstack 0
  2381  000003                     ___lomod@dividend:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 8 bytes @ 0x2
  2385  000003                     	ds	1
  2386  000004                     SPI_Open@spiUniqueConfiguration:
  2387                           	opt callstack 0
  2388  000004                     msDelay@ms:
  2389                           	opt callstack 0
  2390  000004                     lcd_send@value:
  2391                           	opt callstack 0
  2392                           
  2393                           ; 1 bytes @ 0x3
  2394  000004                     	ds	1
  2395  000005                     ??_isupper:
  2396  000005                     ??_isalpha:
  2397  000005                     ??_isdigit:
  2398  000005                     ??_isspace:
  2399  000005                     ??_islower:
  2400  000005                     ??_ADC_GetConversionResult:
  2401  000005                     msDelay@k:
  2402                           	opt callstack 0
  2403  000005                     lcd_send@dc:
  2404                           	opt callstack 0
  2405  000005                     ___wmul@multiplicand:
  2406                           	opt callstack 0
  2407  000005                     fputc@fp:
  2408                           	opt callstack 0
  2409  000005                     strlen@a:
  2410                           	opt callstack 0
  2411  000005                     strncmp@_r:
  2412                           	opt callstack 0
  2413                           
  2414                           ; 2 bytes @ 0x4
  2415  000005                     	ds	1
  2416  000006                     lcd_set_cursor_x@x:
  2417                           	opt callstack 0
  2418  000006                     lcd_set_cursor_y@y:
  2419                           	opt callstack 0
  2420  000006                     lcd_draw_pixel@color:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x5
  2424  000006                     	ds	1
  2425  000007                     ??_fputc:
  2426  000007                     ??___xxtofl:
  2427  000007                     ___wmul@product:
  2428                           	opt callstack 0
  2429  000007                     strncmp@n:
  2430                           	opt callstack 0
  2431  000007                     ___lmul@multiplicand:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 4 bytes @ 0x6
  2435  000007                     	ds	1
  2436  000008                     lcd_set_cursor@x:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x7
  2440  000008                     	ds	1
  2441  000009                     ??_strncmp:
  2442  000009                     ?_toupper:
  2443                           	opt callstack 0
  2444  000009                     _isspace$1952:
  2445                           	opt callstack 0
  2446  000009                     toupper@c:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x8
  2450  000009                     	ds	1
  2451  00000A                     ?_atoi:
  2452                           	opt callstack 0
  2453  00000A                     lcd_set_cursor@y:
  2454                           	opt callstack 0
  2455  00000A                     atoi@s:
  2456                           	opt callstack 0
  2457  00000A                     strncmp@l:
  2458                           	opt callstack 0
  2459                           
  2460                           ; 2 bytes @ 0x9
  2461  00000A                     	ds	1
  2462  00000B                     ??_toupper:
  2463  00000B                     ___xxtofl@sign:
  2464                           	opt callstack 0
  2465  00000B                     ___lmul@product:
  2466                           	opt callstack 0
  2467  00000B                     ___aodiv@divisor:
  2468                           	opt callstack 0
  2469  00000B                     ___aomod@divisor:
  2470                           	opt callstack 0
  2471  00000B                     ___lodiv@divisor:
  2472                           	opt callstack 0
  2473  00000B                     ___lomod@divisor:
  2474                           	opt callstack 0
  2475                           
  2476                           ; 8 bytes @ 0xA
  2477  00000B                     	ds	1
  2478  00000C                     ??_atoi:
  2479  00000C                     ?_stoa:
  2480                           	opt callstack 0
  2481  00000C                     ___xxtofl@exp:
  2482                           	opt callstack 0
  2483  00000C                     lcd_fill@bg_color:
  2484                           	opt callstack 0
  2485  00000C                     lcd_draw_char@x:
  2486                           	opt callstack 0
  2487  00000C                     stoa@fp:
  2488                           	opt callstack 0
  2489  00000C                     fputs@s:
  2490                           	opt callstack 0
  2491  00000C                     strncmp@r:
  2492                           	opt callstack 0
  2493                           
  2494                           ; 2 bytes @ 0xB
  2495  00000C                     	ds	1
  2496  00000D                     ___xxtofl@arg:
  2497                           	opt callstack 0
  2498                           
  2499                           ; 4 bytes @ 0xC
  2500  00000D                     	ds	1
  2501  00000E                     lcd_fill@height:
  2502                           	opt callstack 0
  2503  00000E                     lcd_draw_char@y:
  2504                           	opt callstack 0
  2505  00000E                     stoa@s:
  2506                           	opt callstack 0
  2507  00000E                     fputs@fp:
  2508                           	opt callstack 0
  2509                           
  2510                           ; 2 bytes @ 0xD
  2511  00000E                     	ds	1
  2512  00000F                     ?___lldiv:
  2513                           	opt callstack 0
  2514  00000F                     _toupper$2032:
  2515                           	opt callstack 0
  2516  00000F                     ___lldiv@dividend:
  2517                           	opt callstack 0
  2518                           
  2519                           ; 4 bytes @ 0xE
  2520  00000F                     	ds	1
  2521  000010                     ??_stoa:
  2522  000010                     fputs@c:
  2523                           	opt callstack 0
  2524  000010                     lcd_fill@width:
  2525                           	opt callstack 0
  2526  000010                     lcd_draw_char@fIndex:
  2527                           	opt callstack 0
  2528  000010                     atoi@neg:
  2529                           	opt callstack 0
  2530                           
  2531                           ; 2 bytes @ 0xF
  2532  000010                     	ds	1
  2533  000011                     ?___flmul:
  2534                           	opt callstack 0
  2535  000011                     fputs@i:
  2536                           	opt callstack 0
  2537  000011                     ___flmul@b:
  2538                           	opt callstack 0
  2539  000011                     stoa@nuls:
  2540                           	opt callstack 0
  2541                           
  2542                           ; 7 bytes @ 0x10
  2543  000011                     	ds	1
  2544  000012                     lcd_draw_char@fg_color:
  2545                           	opt callstack 0
  2546  000012                     _atoi$1925:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x11
  2550  000012                     	ds	1
  2551  000013                     ?_pad:
  2552                           	opt callstack 0
  2553  000013                     ___aodiv@counter:
  2554                           	opt callstack 0
  2555  000013                     ___aomod@counter:
  2556                           	opt callstack 0
  2557  000013                     ___lomod@counter:
  2558                           	opt callstack 0
  2559  000013                     pad@fp:
  2560                           	opt callstack 0
  2561  000013                     ___lldiv@divisor:
  2562                           	opt callstack 0
  2563  000013                     ___lodiv@quotient:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 8 bytes @ 0x12
  2567  000013                     	ds	1
  2568  000014                     ___aodiv@sign:
  2569                           	opt callstack 0
  2570  000014                     ___aomod@sign:
  2571                           	opt callstack 0
  2572  000014                     lcd_draw_char@bg_color:
  2573                           	opt callstack 0
  2574  000014                     _atoi$1927:
  2575                           	opt callstack 0
  2576                           
  2577                           ; 2 bytes @ 0x13
  2578  000014                     	ds	1
  2579  000015                     ?_abs:
  2580                           	opt callstack 0
  2581  000015                     pad@buf:
  2582                           	opt callstack 0
  2583  000015                     abs@a:
  2584                           	opt callstack 0
  2585  000015                     ___flmul@a:
  2586                           	opt callstack 0
  2587  000015                     ___aodiv@quotient:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 8 bytes @ 0x14
  2591  000015                     	ds	1
  2592  000016                     ??_lcd_draw_char:
  2593  000016                     _atoi$1926:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 1 bytes @ 0x15
  2597  000016                     	ds	1
  2598  000017                     ??_abs:
  2599  000017                     pad@p:
  2600                           	opt callstack 0
  2601  000017                     atoi@n:
  2602                           	opt callstack 0
  2603  000017                     ___lldiv@quotient:
  2604                           	opt callstack 0
  2605                           
  2606                           ; 4 bytes @ 0x16
  2607  000017                     	ds	1
  2608  000018                     stoa@i:
  2609                           	opt callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x17
  2612  000018                     	ds	1
  2613  000019                     ??___flmul:
  2614  000019                     ??_pad:
  2615                           
  2616                           ; 1 bytes @ 0x18
  2617  000019                     	ds	1
  2618  00001A                     pad@i:
  2619                           	opt callstack 0
  2620  00001A                     stoa@w:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x19
  2624  00001A                     	ds	1
  2625  00001B                     ___lldiv@counter:
  2626                           	opt callstack 0
  2627  00001B                     ___lodiv@counter:
  2628                           	opt callstack 0
  2629                           
  2630                           ; 1 bytes @ 0x1A
  2631  00001B                     	ds	1
  2632  00001C                     pad@w:
  2633                           	opt callstack 0
  2634  00001C                     stoa@cp:
  2635                           	opt callstack 0
  2636                           
  2637                           ; 2 bytes @ 0x1B
  2638  00001C                     	ds	1
  2639  00001D                     ___flmul@sign:
  2640                           	opt callstack 0
  2641                           
  2642                           ; 1 bytes @ 0x1C
  2643  00001D                     	ds	1
  2644  00001E                     ?_ctoa:
  2645                           	opt callstack 0
  2646  00001E                     ?_dtoa:
  2647                           	opt callstack 0
  2648  00001E                     ?_otoa:
  2649                           	opt callstack 0
  2650  00001E                     ?_utoa:
  2651                           	opt callstack 0
  2652  00001E                     ?_xtoa:
  2653                           	opt callstack 0
  2654  00001E                     ctoa@fp:
  2655                           	opt callstack 0
  2656  00001E                     dtoa@fp:
  2657                           	opt callstack 0
  2658  00001E                     otoa@fp:
  2659                           	opt callstack 0
  2660  00001E                     stoa@p:
  2661                           	opt callstack 0
  2662  00001E                     utoa@fp:
  2663                           	opt callstack 0
  2664  00001E                     xtoa@fp:
  2665                           	opt callstack 0
  2666  00001E                     ___flmul@grs:
  2667                           	opt callstack 0
  2668                           
  2669                           ; 4 bytes @ 0x1D
  2670  00001E                     	ds	1
  2671  00001F                     lcd_draw_char@j:
  2672                           	opt callstack 0
  2673                           
  2674                           ; 1 bytes @ 0x1E
  2675  00001F                     	ds	1
  2676  000020                     lcd_draw_char@k:
  2677                           	opt callstack 0
  2678  000020                     ctoa@c:
  2679                           	opt callstack 0
  2680  000020                     stoa@l:
  2681                           	opt callstack 0
  2682  000020                     dtoa@d:
  2683                           	opt callstack 0
  2684  000020                     otoa@d:
  2685                           	opt callstack 0
  2686  000020                     utoa@d:
  2687                           	opt callstack 0
  2688  000020                     xtoa@d:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 8 bytes @ 0x1F
  2692  000020                     	ds	1
  2693  000021                     lcd_draw_char@i:
  2694                           	opt callstack 0
  2695  000021                     ctoa@w:
  2696                           	opt callstack 0
  2697                           
  2698                           ; 2 bytes @ 0x20
  2699  000021                     	ds	1
  2700  000022                     ___flmul@aexp:
  2701                           	opt callstack 0
  2702  000022                     lcd_draw_string@x:
  2703                           	opt callstack 0
  2704                           
  2705                           ; 2 bytes @ 0x21
  2706  000022                     	ds	1
  2707  000023                     ___flmul@bexp:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 1 bytes @ 0x22
  2711  000023                     	ds	1
  2712  000024                     lcd_draw_string@y:
  2713                           	opt callstack 0
  2714  000024                     ___flmul@prod:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 4 bytes @ 0x23
  2718  000024                     	ds	2
  2719  000026                     lcd_draw_string@pS:
  2720                           	opt callstack 0
  2721                           
  2722                           ; 2 bytes @ 0x25
  2723  000026                     	ds	2
  2724  000028                     ??_dtoa:
  2725  000028                     ??_otoa:
  2726  000028                     ??_utoa:
  2727  000028                     xtoa@x:
  2728                           	opt callstack 0
  2729  000028                     lcd_draw_string@fg_color:
  2730                           	opt callstack 0
  2731  000028                     ___flmul@temp:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 2 bytes @ 0x27
  2735  000028                     	ds	1
  2736  000029                     ??_xtoa:
  2737                           
  2738                           ; 1 bytes @ 0x28
  2739  000029                     	ds	1
  2740  00002A                     ?___fltol:
  2741                           	opt callstack 0
  2742  00002A                     lcd_draw_string@bg_color:
  2743                           	opt callstack 0
  2744  00002A                     ___fltol@f1:
  2745                           	opt callstack 0
  2746                           
  2747                           ; 4 bytes @ 0x29
  2748  00002A                     	ds	2
  2749  00002C                     ??_lcd_draw_string:
  2750                           
  2751                           ; 1 bytes @ 0x2B
  2752  00002C                     	ds	2
  2753  00002E                     ??___fltol:
  2754                           
  2755                           ; 1 bytes @ 0x2D
  2756  00002E                     	ds	2
  2757  000030                     lcd_draw_string@k:
  2758                           	opt callstack 0
  2759  000030                     _dtoa$1312:
  2760                           	opt callstack 0
  2761  000030                     otoa@p:
  2762                           	opt callstack 0
  2763  000030                     utoa@p:
  2764                           	opt callstack 0
  2765                           
  2766                           ; 2 bytes @ 0x2F
  2767  000030                     	ds	1
  2768  000031                     _xtoa$1348:
  2769                           	opt callstack 0
  2770                           
  2771                           ; 2 bytes @ 0x30
  2772  000031                     	ds	1
  2773  000032                     ___fltol@sign1:
  2774                           	opt callstack 0
  2775  000032                     lcd_draw_string@lIndex:
  2776                           	opt callstack 0
  2777  000032                     dtoa@p:
  2778                           	opt callstack 0
  2779  000032                     otoa@t:
  2780                           	opt callstack 0
  2781  000032                     utoa@w:
  2782                           	opt callstack 0
  2783                           
  2784                           ; 2 bytes @ 0x31
  2785  000032                     	ds	1
  2786  000033                     ___fltol@exp1:
  2787                           	opt callstack 0
  2788  000033                     _xtoa$1349:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 2 bytes @ 0x32
  2792  000033                     	ds	1
  2793  000034                     dtoa@w:
  2794                           	opt callstack 0
  2795  000034                     otoa@w:
  2796                           	opt callstack 0
  2797  000034                     utoa@n:
  2798                           	opt callstack 0
  2799                           
  2800                           ; 8 bytes @ 0x33
  2801  000034                     	ds	1
  2802  000035                     xtoa@p:
  2803                           	opt callstack 0
  2804                           
  2805                           ; 2 bytes @ 0x34
  2806  000035                     	ds	1
  2807  000036                     dtoa@s:
  2808                           	opt callstack 0
  2809  000036                     otoa@n:
  2810                           	opt callstack 0
  2811                           
  2812                           ; 8 bytes @ 0x35
  2813  000036                     	ds	1
  2814  000037                     xtoa@w:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 2 bytes @ 0x36
  2818  000037                     	ds	1
  2819  000038                     dtoa@n:
  2820                           	opt callstack 0
  2821                           
  2822                           ; 8 bytes @ 0x37
  2823  000038                     	ds	1
  2824  000039                     xtoa@n:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 8 bytes @ 0x38
  2828  000039                     	ds	3
  2829  00003C                     utoa@i:
  2830                           	opt callstack 0
  2831                           
  2832                           ; 2 bytes @ 0x3B
  2833  00003C                     	ds	2
  2834  00003E                     otoa@i:
  2835                           	opt callstack 0
  2836                           
  2837                           ; 2 bytes @ 0x3D
  2838  00003E                     	ds	2
  2839  000040                     dtoa@i:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x3F
  2843  000040                     	ds	1
  2844  000041                     xtoa@i:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 2 bytes @ 0x40
  2848  000041                     	ds	2
  2849  000043                     xtoa@c:
  2850                           	opt callstack 0
  2851                           
  2852                           ; 2 bytes @ 0x42
  2853  000043                     	ds	2
  2854  000045                     ?_vfpfcnvrt:
  2855                           	opt callstack 0
  2856  000045                     vfpfcnvrt@fp:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 2 bytes @ 0x44
  2860  000045                     	ds	2
  2861  000047                     vfpfcnvrt@fmt:
  2862                           	opt callstack 0
  2863                           
  2864                           ; 2 bytes @ 0x46
  2865  000047                     	ds	2
  2866  000049                     vfpfcnvrt@ap:
  2867                           	opt callstack 0
  2868                           
  2869                           ; 2 bytes @ 0x48
  2870  000049                     	ds	2
  2871  00004B                     ??_vfpfcnvrt:
  2872                           
  2873                           ; 1 bytes @ 0x4A
  2874  00004B                     	ds	4
  2875  00004F                     ?_vfprintf:
  2876                           	opt callstack 0
  2877  00004F                     vfprintf@fp:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 2 bytes @ 0x4E
  2881  00004F                     	ds	2
  2882  000051                     vfprintf@fmt:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 2 bytes @ 0x50
  2886  000051                     	ds	2
  2887  000053                     vfprintf@ap:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 2 bytes @ 0x52
  2891  000053                     	ds	2
  2892  000055                     vfprintf@cfmt:
  2893                           	opt callstack 0
  2894                           
  2895                           ; 2 bytes @ 0x54
  2896  000055                     	ds	2
  2897  000057                     
  2898                           ; 1 bytes @ 0x56
  2899 ;;
  2900 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2901 ;;
  2902 ;; *************** function _main *****************
  2903 ;; Defined at:
  2904 ;;		line 28 in file "main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  string         20   67[BANK0 ] unsigned char [20]
  2909 ;;  pot_val         4   93[BANK0 ] unsigned long 
  2910 ;;  perc_val        4   89[BANK0 ] unsigned long 
  2911 ;;  percentage      2   87[BANK0 ] int 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;Total ram usage:       34 bytes
  2926 ;; Hardware stack levels required when called:   13
  2927 ;; This function calls:
  2928 ;;		_ADC_GetConversionResult
  2929 ;;		_INT0_SetInterruptHandler
  2930 ;;		_IOCB4_SetInterruptHandler
  2931 ;;		_SPI_Open
  2932 ;;		_SYSTEM_Initialize
  2933 ;;		___flmul
  2934 ;;		___fltol
  2935 ;;		___lldiv
  2936 ;;		___lmul
  2937 ;;		___xxtofl
  2938 ;;		_lcd_draw_string
  2939 ;;		_lcd_init
  2940 ;;		_snprintf
  2941 ;; This function is called by:
  2942 ;;		Startup code after reset
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text0
  2947  00242A                     __ptext0:
  2948                           	opt callstack 0
  2949  00242A                     _main:
  2950                           	opt callstack 18
  2951  00242A                     
  2952                           ;main.c: 31:     SYSTEM_Initialize();
  2953  00242A  EC39  F01F         	call	_SYSTEM_Initialize	;wreg free
  2954  00242E                     
  2955                           ;main.c: 32:     SPI_Open(SPI_DEFAULT);
  2956  00242E  0E00               	movlw	0
  2957  002430  EC5C  F01B         	call	_SPI_Open
  2958  002434                     
  2959                           ;main.c: 33:     lcd_init();
  2960  002434  EC84  F00B         	call	_lcd_init	;wreg free
  2961  002438                     
  2962                           ;main.c: 36:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  2963  002438  0E98               	movlw	low _IOCB4_InterruptCall
  2964  00243A  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  2965  00243C  0E3F               	movlw	high _IOCB4_InterruptCall
  2966  00243E  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  2967  002440  ECB6  F01F         	call	_IOCB4_SetInterruptHandler	;wreg free
  2968  002444                     
  2969                           ;main.c: 37:     INT0_SetInterruptHandler(INT0_InterruptCall);
  2970  002444  0EAA               	movlw	low _INT0_InterruptCall
  2971  002446  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2972  002448  0E3E               	movlw	high _INT0_InterruptCall
  2973  00244A  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2974  00244C  ECBB  F01F         	call	_INT0_SetInterruptHandler	;wreg free
  2975  002450                     
  2976                           ;main.c: 40:     (INTCONbits.GIE = 1);
  2977  002450  8EF2               	bsf	242,7,c	;volatile
  2978  002452                     
  2979                           ;main.c: 52:     int percentage=95;
  2980  002452  0E00               	movlw	0
  2981  002454  0100               	movlb	0	; () banked
  2982  002456  6FB8               	movwf	(main@percentage+1)& (0+255),b
  2983  002458  0E5F               	movlw	95
  2984  00245A  6FB7               	movwf	main@percentage& (0+255),b
  2985  00245C                     
  2986                           ; BSR set to: 0
  2987                           ;main.c: 53:     char string[20]="";
  2988  00245C  EE20  F0A3         	lfsr	2,main@string
  2989  002460  0E13               	movlw	19
  2990  002462                     u5381:
  2991  002462  6ADE               	clrf	postinc2,c
  2992  002464  06E8               	decf	wreg,f,c
  2993  002466  E2FD               	bc	u5381
  2994  002468                     l5360:
  2995                           
  2996                           ;main.c: 56:     {;main.c: 59:         if (mode==1){
  2997  002468  0100               	movlb	0	; () banked
  2998  00246A  05CB               	decf	_mode& (0+255),w,b
  2999  00246C  A4D8               	btfss	status,2,c
  3000  00246E  EF3B  F012         	goto	u5391
  3001  002472  EF3D  F012         	goto	u5390
  3002  002476                     u5391:
  3003  002476  EFE0  F012         	goto	l5370
  3004  00247A                     u5390:
  3005  00247A                     
  3006                           ; BSR set to: 0
  3007                           ;main.c: 60:             pot_val=ADC_GetConversionResult();
  3008  00247A  EC9A  F01F         	call	_ADC_GetConversionResult	;wreg free
  3009  00247E  C003  F0BD         	movff	?_ADC_GetConversionResult,main@pot_val
  3010  002482  C004  F0BE         	movff	?_ADC_GetConversionResult+1,main@pot_val+1
  3011  002486  0100               	movlb	0	; () banked
  3012  002488  6BBF               	clrf	(main@pot_val+2)& (0+255),b
  3013  00248A  6BC0               	clrf	(main@pot_val+3)& (0+255),b
  3014                           
  3015                           ;main.c: 61:             perc_val= ((uint32_t) (pot_val*100)/4095);
  3016  00248C  C0BD  F003         	movff	main@pot_val,___lmul@multiplier
  3017  002490  C0BE  F004         	movff	main@pot_val+1,___lmul@multiplier+1
  3018  002494  C0BF  F005         	movff	main@pot_val+2,___lmul@multiplier+2
  3019  002498  C0C0  F006         	movff	main@pot_val+3,___lmul@multiplier+3
  3020  00249C  0E64               	movlw	100
  3021  00249E  6E07               	movwf	___lmul@multiplicand^0,c
  3022  0024A0  0E00               	movlw	0
  3023  0024A2  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  3024  0024A4  0E00               	movlw	0
  3025  0024A6  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  3026  0024A8  0E00               	movlw	0
  3027  0024AA  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  3028  0024AC  EC47  F01C         	call	___lmul	;wreg free
  3029  0024B0  C003  F00F         	movff	?___lmul,___lldiv@dividend
  3030  0024B4  C004  F010         	movff	?___lmul+1,___lldiv@dividend+1
  3031  0024B8  C005  F011         	movff	?___lmul+2,___lldiv@dividend+2
  3032  0024BC  C006  F012         	movff	?___lmul+3,___lldiv@dividend+3
  3033  0024C0  0EFF               	movlw	255
  3034  0024C2  6E13               	movwf	___lldiv@divisor^0,c
  3035  0024C4  0E0F               	movlw	15
  3036  0024C6  6E14               	movwf	(___lldiv@divisor+1)^0,c
  3037  0024C8  0E00               	movlw	0
  3038  0024CA  6E15               	movwf	(___lldiv@divisor+2)^0,c
  3039  0024CC  0E00               	movlw	0
  3040  0024CE  6E16               	movwf	(___lldiv@divisor+3)^0,c
  3041  0024D0  ECB4  F01B         	call	___lldiv	;wreg free
  3042  0024D4  C00F  F0B9         	movff	?___lldiv,main@perc_val
  3043  0024D8  C010  F0BA         	movff	?___lldiv+1,main@perc_val+1
  3044  0024DC  C011  F0BB         	movff	?___lldiv+2,main@perc_val+2
  3045  0024E0  C012  F0BC         	movff	?___lldiv+3,main@perc_val+3
  3046  0024E4                     
  3047                           ;main.c: 62:             snprintf(string,sizeof(string),"POT: %d%%    ", perc_val );
  3048  0024E4  0EA3               	movlw	low main@string
  3049  0024E6  0100               	movlb	0	; () banked
  3050  0024E8  6F91               	movwf	snprintf@s& (0+255),b
  3051  0024EA  0E00               	movlw	high main@string
  3052  0024EC  6F92               	movwf	(snprintf@s+1)& (0+255),b
  3053  0024EE  0E00               	movlw	0
  3054  0024F0  6F94               	movwf	(snprintf@n+1)& (0+255),b
  3055  0024F2  0E14               	movlw	20
  3056  0024F4  6F93               	movwf	snprintf@n& (0+255),b
  3057  0024F6  0EC0               	movlw	low STR_1
  3058  0024F8  6F95               	movwf	snprintf@fmt& (0+255),b
  3059  0024FA  0EFF               	movlw	high STR_1
  3060  0024FC  6F96               	movwf	(snprintf@fmt+1)& (0+255),b
  3061  0024FE  C0B9  F097         	movff	main@perc_val,?_snprintf+6
  3062  002502  C0BA  F098         	movff	main@perc_val+1,?_snprintf+7
  3063  002506  C0BB  F099         	movff	main@perc_val+2,?_snprintf+8
  3064  00250A  C0BC  F09A         	movff	main@perc_val+3,?_snprintf+9
  3065  00250E  ECB3  F01E         	call	_snprintf	;wreg free
  3066  002512                     
  3067                           ;main.c: 63:             lcd_draw_string(0,0,string,0xFFFF,0x0000);
  3068  002512  0E00               	movlw	0
  3069  002514  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3070  002516  0E00               	movlw	0
  3071  002518  6E22               	movwf	lcd_draw_string@x^0,c
  3072  00251A  0E00               	movlw	0
  3073  00251C  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3074  00251E  0E00               	movlw	0
  3075  002520  6E24               	movwf	lcd_draw_string@y^0,c
  3076  002522  0EA3               	movlw	low main@string
  3077  002524  6E26               	movwf	lcd_draw_string@pS^0,c
  3078  002526  0E00               	movlw	high main@string
  3079  002528  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3080  00252A  0EFF               	movlw	255
  3081  00252C  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3082  00252E  6828               	setf	lcd_draw_string@fg_color^0,c
  3083  002530  0E00               	movlw	0
  3084  002532  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3085  002534  0E00               	movlw	0
  3086  002536  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3087  002538  EC9D  F017         	call	_lcd_draw_string	;wreg free
  3088  00253C                     
  3089                           ;main.c: 65:             if(pot_val > ((int)(percentage*40.95)) ) do { LATAbits.LATA5 = 
      +                          1; } while(0);
  3090  00253C  0ECD               	movlw	205
  3091  00253E  6E15               	movwf	___flmul@a^0,c
  3092  002540  0ECC               	movlw	204
  3093  002542  6E16               	movwf	(___flmul@a+1)^0,c
  3094  002544  0E23               	movlw	35
  3095  002546  6E17               	movwf	(___flmul@a+2)^0,c
  3096  002548  0E42               	movlw	66
  3097  00254A  6E18               	movwf	(___flmul@a+3)^0,c
  3098  00254C  C0B7  F003         	movff	main@percentage,___xxtofl@val
  3099  002550  C0B8  F004         	movff	main@percentage+1,___xxtofl@val+1
  3100  002554  0E00               	movlw	0
  3101  002556  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  3102  002558  0EFF               	movlw	-1
  3103  00255A  6E05               	movwf	(___xxtofl@val+2)^0,c
  3104  00255C  6E06               	movwf	(___xxtofl@val+3)^0,c
  3105  00255E  0E01               	movlw	1
  3106  002560  EC02  F013         	call	___xxtofl
  3107  002564  C003  F011         	movff	?___xxtofl,___flmul@b
  3108  002568  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3109  00256C  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3110  002570  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3111  002574  EC6F  F009         	call	___flmul	;wreg free
  3112  002578  C011  F02A         	movff	?___flmul,___fltol@f1
  3113  00257C  C012  F02B         	movff	?___flmul+1,___fltol@f1+1
  3114  002580  C013  F02C         	movff	?___flmul+2,___fltol@f1+2
  3115  002584  C014  F02D         	movff	?___flmul+3,___fltol@f1+3
  3116  002588  ECBE  F018         	call	___fltol	;wreg free
  3117  00258C  C02A  F09F         	movff	?___fltol,??_main
  3118  002590  C02B  F0A0         	movff	?___fltol+1,??_main+1
  3119  002594  0E00               	movlw	0
  3120  002596  0100               	movlb	0	; () banked
  3121  002598  BFA0               	btfsc	(??_main+1)& (0+255),7,b
  3122  00259A  0EFF               	movlw	255
  3123  00259C  6FA1               	movwf	(??_main+2)& (0+255),b
  3124  00259E  6FA2               	movwf	(??_main+3)& (0+255),b
  3125  0025A0  51BD               	movf	main@pot_val& (0+255),w,b
  3126  0025A2  5D9F               	subwf	??_main& (0+255),w,b
  3127  0025A4  51BE               	movf	(main@pot_val+1)& (0+255),w,b
  3128  0025A6  59A0               	subwfb	(??_main+1)& (0+255),w,b
  3129  0025A8  51BF               	movf	(main@pot_val+2)& (0+255),w,b
  3130  0025AA  59A1               	subwfb	(??_main+2)& (0+255),w,b
  3131  0025AC  51C0               	movf	(main@pot_val+3)& (0+255),w,b
  3132  0025AE  59A2               	subwfb	(??_main+3)& (0+255),w,b
  3133  0025B0  B0D8               	btfsc	status,0,c
  3134  0025B2  EFDD  F012         	goto	u5401
  3135  0025B6  EFDF  F012         	goto	u5400
  3136  0025BA                     u5401:
  3137  0025BA  EFE0  F012         	goto	l5370
  3138  0025BE                     u5400:
  3139  0025BE                     
  3140                           ; BSR set to: 0
  3141  0025BE  8A89               	bsf	137,5,c	;volatile
  3142  0025C0                     l5370:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;main.c: 67:         if (mode==0){
  3146  0025C0  51CB               	movf	_mode& (0+255),w,b
  3147  0025C2  A4D8               	btfss	status,2,c
  3148  0025C4  EFE6  F012         	goto	u5411
  3149  0025C8  EFE8  F012         	goto	u5410
  3150  0025CC                     u5411:
  3151  0025CC  EF34  F012         	goto	l5360
  3152  0025D0                     u5410:
  3153  0025D0                     
  3154                           ; BSR set to: 0
  3155                           ;main.c: 68:             lcd_draw_string(0,0,"POT: ---        ",0xFFFF,0x0000);
  3156  0025D0  0E00               	movlw	0
  3157  0025D2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3158  0025D4  0E00               	movlw	0
  3159  0025D6  6E22               	movwf	lcd_draw_string@x^0,c
  3160  0025D8  0E00               	movlw	0
  3161  0025DA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3162  0025DC  0E00               	movlw	0
  3163  0025DE  6E24               	movwf	lcd_draw_string@y^0,c
  3164  0025E0  0EAF               	movlw	low STR_2
  3165  0025E2  6E26               	movwf	lcd_draw_string@pS^0,c
  3166  0025E4  0EFF               	movlw	high STR_2
  3167  0025E6  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3168  0025E8  0EFF               	movlw	255
  3169  0025EA  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3170  0025EC  6828               	setf	lcd_draw_string@fg_color^0,c
  3171  0025EE  0E00               	movlw	0
  3172  0025F0  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3173  0025F2  0E00               	movlw	0
  3174  0025F4  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3175  0025F6  EC9D  F017         	call	_lcd_draw_string	;wreg free
  3176  0025FA  9A89               	bcf	137,5,c	;volatile
  3177  0025FC  EF34  F012         	goto	l5360
  3178  002600  EF31  F000         	goto	start
  3179  002604                     __end_of_main:
  3180                           	opt callstack 0
  3181                           
  3182 ;; *************** function _snprintf *****************
  3183 ;; Defined at:
  3184 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  s               2   49[BANK0 ] PTR unsigned char 
  3187 ;;		 -> main@string(20), 
  3188 ;;  n               2   51[BANK0 ] unsigned int 
  3189 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  3190 ;;		 -> STR_1(14), 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  ap              2   61[BANK0 ] PTR void [1]
  3193 ;;		 -> ?_snprintf(2), 
  3194 ;;  ret             2    0        int 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  2   49[BANK0 ] int 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3204 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3205 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;Total ram usage:       14 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:   12
  3211 ;; This function calls:
  3212 ;;		_vsnprintf
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text1
  3219  003D66                     __ptext1:
  3220                           	opt callstack 0
  3221  003D66                     _snprintf:
  3222                           	opt callstack 18
  3223  003D66  0E97               	movlw	low (?_snprintf+6)
  3224  003D68  0100               	movlb	0	; () banked
  3225  003D6A  6F9D               	movwf	snprintf@ap& (0+255),b
  3226  003D6C  0E00               	movlw	high (?_snprintf+6)
  3227  003D6E  6F9E               	movwf	(snprintf@ap+1)& (0+255),b
  3228  003D70                     
  3229                           ; BSR set to: 0
  3230  003D70  C091  F07B         	movff	snprintf@s,vsnprintf@s
  3231  003D74  C092  F07C         	movff	snprintf@s+1,vsnprintf@s+1
  3232  003D78  C093  F07D         	movff	snprintf@n,vsnprintf@n
  3233  003D7C  C094  F07E         	movff	snprintf@n+1,vsnprintf@n+1
  3234  003D80  C095  F07F         	movff	snprintf@fmt,vsnprintf@fmt
  3235  003D84  C096  F080         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3236  003D88  0E9D               	movlw	low snprintf@ap
  3237  003D8A  6F81               	movwf	vsnprintf@ap& (0+255),b
  3238  003D8C  0E00               	movlw	high snprintf@ap
  3239  003D8E  6F82               	movwf	(vsnprintf@ap+1)& (0+255),b
  3240  003D90  EC36  F018         	call	_vsnprintf	;wreg free
  3241  003D94  0012               	return		;funcret
  3242  003D96                     __end_of_snprintf:
  3243                           	opt callstack 0
  3244                           
  3245 ;; *************** function _vsnprintf *****************
  3246 ;; Defined at:
  3247 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  s               2   27[BANK0 ] PTR unsigned char 
  3250 ;;		 -> main@string(20), 
  3251 ;;  n               2   29[BANK0 ] unsigned int 
  3252 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  3253 ;;		 -> STR_1(14), 
  3254 ;;  ap              2   33[BANK0 ] PTR PTR void 
  3255 ;;		 -> snprintf@ap(2), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  f               6   43[BANK0 ] struct _IO_FILE
  3258 ;;  cnt             2   41[BANK0 ] int 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  2   27[BANK0 ] int 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3268 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3272 ;;Total ram usage:       22 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:   11
  3275 ;; This function calls:
  3276 ;;		_vfprintf
  3277 ;; This function is called by:
  3278 ;;		_snprintf
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text2
  3283  00306C                     __ptext2:
  3284                           	opt callstack 0
  3285  00306C                     _vsnprintf:
  3286                           	opt callstack 18
  3287  00306C  0E80               	movlw	128
  3288  00306E  0100               	movlb	0	; () banked
  3289  003070  5D7E               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3290  003072  A0D8               	btfss	status,0,c
  3291  003074  EF3E  F018         	goto	u5331
  3292  003078  EF40  F018         	goto	u5330
  3293  00307C                     u5331:
  3294  00307C  EF48  F018         	goto	l5310
  3295  003080                     u5330:
  3296  003080                     
  3297                           ; BSR set to: 0
  3298  003080  0E00               	movlw	0
  3299  003082  6FC2               	movwf	(_errno+1)& (0+255),b
  3300  003084  0E4B               	movlw	75
  3301  003086  6FC1               	movwf	_errno& (0+255),b
  3302  003088                     
  3303                           ; BSR set to: 0
  3304  003088  697B               	setf	?_vsnprintf& (0+255),b
  3305  00308A  697C               	setf	(?_vsnprintf+1)& (0+255),b
  3306  00308C  EFBD  F018         	goto	l1513
  3307  003090                     l5310:
  3308                           
  3309                           ; BSR set to: 0
  3310  003090  C07B  F08B         	movff	vsnprintf@s,vsnprintf@f
  3311  003094  C07C  F08C         	movff	vsnprintf@s+1,vsnprintf@f+1
  3312  003098  517E               	movf	(vsnprintf@n+1)& (0+255),w,b
  3313  00309A  E109               	bnz	u5340
  3314  00309C  0E02               	movlw	2
  3315  00309E  5D7D               	subwf	vsnprintf@n& (0+255),w,b
  3316  0030A0  A0D8               	btfss	status,0,c
  3317  0030A2  EF55  F018         	goto	u5341
  3318  0030A6  EF57  F018         	goto	u5340
  3319  0030AA                     u5341:
  3320  0030AA  EF63  F018         	goto	l5316
  3321  0030AE                     u5340:
  3322  0030AE                     
  3323                           ; BSR set to: 0
  3324  0030AE  0EFF               	movlw	255
  3325  0030B0  257D               	addwf	vsnprintf@n& (0+255),w,b
  3326  0030B2  6F8F               	movwf	(vsnprintf@f+4)& (0+255),b
  3327  0030B4  0EFF               	movlw	255
  3328  0030B6  217E               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3329  0030B8  6F90               	movwf	(vsnprintf@f+5)& (0+255),b
  3330  0030BA                     
  3331                           ; BSR set to: 0
  3332  0030BA  0E00               	movlw	0
  3333  0030BC  6F8E               	movwf	(vsnprintf@f+3)& (0+255),b
  3334  0030BE  0E00               	movlw	0
  3335  0030C0  6F8D               	movwf	(vsnprintf@f+2)& (0+255),b
  3336  0030C2  EF6B  F018         	goto	l5318
  3337  0030C6                     l5316:
  3338                           
  3339                           ; BSR set to: 0
  3340  0030C6  0E00               	movlw	0
  3341  0030C8  6F90               	movwf	(vsnprintf@f+5)& (0+255),b
  3342  0030CA  0E01               	movlw	1
  3343  0030CC  6F8F               	movwf	(vsnprintf@f+4)& (0+255),b
  3344  0030CE  0E00               	movlw	0
  3345  0030D0  6F8E               	movwf	(vsnprintf@f+3)& (0+255),b
  3346  0030D2  0E01               	movlw	1
  3347  0030D4  6F8D               	movwf	(vsnprintf@f+2)& (0+255),b
  3348  0030D6                     l5318:
  3349                           
  3350                           ; BSR set to: 0
  3351  0030D6  0E8B               	movlw	low vsnprintf@f
  3352  0030D8  6E4F               	movwf	vfprintf@fp^0,c
  3353  0030DA  0E00               	movlw	high vsnprintf@f
  3354  0030DC  6E50               	movwf	(vfprintf@fp+1)^0,c
  3355  0030DE  C07F  F051         	movff	vsnprintf@fmt,vfprintf@fmt
  3356  0030E2  C080  F052         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3357  0030E6  C081  F053         	movff	vsnprintf@ap,vfprintf@ap
  3358  0030EA  C082  F054         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3359  0030EE  EC7C  F01C         	call	_vfprintf	;wreg free
  3360  0030F2  C04F  F089         	movff	?_vfprintf,vsnprintf@cnt
  3361  0030F6  C050  F08A         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3362  0030FA  0100               	movlb	0	; () banked
  3363  0030FC  517D               	movf	vsnprintf@n& (0+255),w,b
  3364  0030FE  117E               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3365  003100  B4D8               	btfsc	status,2,c
  3366  003102  EF85  F018         	goto	u5351
  3367  003106  EF87  F018         	goto	u5350
  3368  00310A                     u5351:
  3369  00310A  EFB9  F018         	goto	l5330
  3370  00310E                     u5350:
  3371  00310E                     
  3372                           ; BSR set to: 0
  3373  00310E  BF8A               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3374  003110  EF8C  F018         	goto	u5361
  3375  003114  EF8E  F018         	goto	u5360
  3376  003118                     u5361:
  3377  003118  EFB9  F018         	goto	l5330
  3378  00311C                     u5360:
  3379  00311C                     
  3380                           ; BSR set to: 0
  3381  00311C  0EFF               	movlw	255
  3382  00311E  6F83               	movwf	??_vsnprintf& (0+255),b
  3383  003120  0EFF               	movlw	255
  3384  003122  6F84               	movwf	(??_vsnprintf+1)& (0+255),b
  3385  003124  C07D  F085         	movff	vsnprintf@n,??_vsnprintf+2
  3386  003128  C07E  F086         	movff	vsnprintf@n+1,??_vsnprintf+3
  3387  00312C  5183               	movf	??_vsnprintf& (0+255),w,b
  3388  00312E  2785               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3389  003130  5184               	movf	(??_vsnprintf+1)& (0+255),w,b
  3390  003132  2386               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3391  003134  5185               	movf	(??_vsnprintf+2)& (0+255),w,b
  3392  003136  5D89               	subwf	vsnprintf@cnt& (0+255),w,b
  3393  003138  5186               	movf	(??_vsnprintf+3)& (0+255),w,b
  3394  00313A  598A               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3395  00313C  A0D8               	btfss	status,0,c
  3396  00313E  EFA3  F018         	goto	u5371
  3397  003142  EFA5  F018         	goto	u5370
  3398  003146                     u5371:
  3399  003146  EFAD  F018         	goto	l1518
  3400  00314A                     u5370:
  3401  00314A                     
  3402                           ; BSR set to: 0
  3403  00314A  0EFF               	movlw	255
  3404  00314C  257D               	addwf	vsnprintf@n& (0+255),w,b
  3405  00314E  6F87               	movwf	_vsnprintf$2064& (0+255),b
  3406  003150  0EFF               	movlw	255
  3407  003152  217E               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3408  003154  6F88               	movwf	(_vsnprintf$2064+1)& (0+255),b
  3409  003156  EFB1  F018         	goto	l5328
  3410  00315A                     l1518:
  3411                           
  3412                           ; BSR set to: 0
  3413  00315A  C089  F087         	movff	vsnprintf@cnt,_vsnprintf$2064
  3414  00315E  C08A  F088         	movff	vsnprintf@cnt+1,_vsnprintf$2064+1
  3415  003162                     l5328:
  3416                           
  3417                           ; BSR set to: 0
  3418  003162  5187               	movf	_vsnprintf$2064& (0+255),w,b
  3419  003164  257B               	addwf	vsnprintf@s& (0+255),w,b
  3420  003166  6ED9               	movwf	fsr2l,c
  3421  003168  5188               	movf	(_vsnprintf$2064+1)& (0+255),w,b
  3422  00316A  217C               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3423  00316C  6EDA               	movwf	fsr2h,c
  3424  00316E  0E00               	movlw	0
  3425  003170  6EDF               	movwf	indf2,c
  3426  003172                     l5330:
  3427                           
  3428                           ; BSR set to: 0
  3429  003172  C089  F07B         	movff	vsnprintf@cnt,?_vsnprintf
  3430  003176  C08A  F07C         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3431  00317A                     l1513:
  3432                           
  3433                           ; BSR set to: 0
  3434  00317A  0012               	return		;funcret
  3435  00317C                     __end_of_vsnprintf:
  3436                           	opt callstack 0
  3437                           
  3438 ;; *************** function _vfprintf *****************
  3439 ;; Defined at:
  3440 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  3443 ;;		 -> vsnprintf@f(6), 
  3444 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  3445 ;;		 -> STR_1(14), 
  3446 ;;  ap              2   82[COMRAM] PTR PTR void 
  3447 ;;		 -> snprintf@ap(2), 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  3450 ;;		 -> STR_1(14), 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2   78[COMRAM] int 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3460 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3461 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3463 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3464 ;;Total ram usage:        8 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:   10
  3467 ;; This function calls:
  3468 ;;		_vfpfcnvrt
  3469 ;; This function is called by:
  3470 ;;		_vsnprintf
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text3
  3475  0038F8                     __ptext3:
  3476                           	opt callstack 0
  3477  0038F8                     _vfprintf:
  3478                           	opt callstack 18
  3479  0038F8                     
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3481  0038F8  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  3482  0038FC  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3483  003900                     
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3485  003900  0E00               	movlw	0
  3486  003902  0100               	movlb	0	; () banked
  3487  003904  6FC4               	movwf	(_nout+1)& (0+255),b
  3488  003906  0E00               	movlw	0
  3489  003908  6FC3               	movwf	_nout& (0+255),b
  3490                           
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3492  00390A  EF9A  F01C         	goto	l4372
  3493  00390E                     l4370:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3497  00390E  C04F  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  3498  003912  C050  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3499  003916  0E55               	movlw	low vfprintf@cfmt
  3500  003918  6E47               	movwf	vfpfcnvrt@fmt^0,c
  3501  00391A  0E00               	movlw	high vfprintf@cfmt
  3502  00391C  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3503  00391E  C053  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  3504  003922  C054  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3505  003926  EC33  F000         	call	_vfpfcnvrt	;wreg free
  3506  00392A  5045               	movf	?_vfpfcnvrt^0,w,c
  3507  00392C  0100               	movlb	0	; () banked
  3508  00392E  27C3               	addwf	_nout& (0+255),f,b
  3509  003930  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  3510  003932  23C4               	addwfc	(_nout+1)& (0+255),f,b
  3511  003934                     l4372:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3515  003934  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  3516  003938  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3517  00393C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3518  00393C  6AF8               	clrf	tblptru,c
  3519  00393E                     	endif
  3520  00393E                     	if	0	;tblptru may be non-zero
  3521  00393E                     	endif
  3522  00393E  0008               	tblrd		*
  3523  003940  50F5               	movf	tablat,w,c
  3524  003942  0900               	iorlw	0
  3525  003944  A4D8               	btfss	status,2,c
  3526  003946  EFA7  F01C         	goto	u4371
  3527  00394A  EFA9  F01C         	goto	u4370
  3528  00394E                     u4371:
  3529  00394E  EF87  F01C         	goto	l4370
  3530  003952                     u4370:
  3531  003952                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3534  003952  C0C3  F04F         	movff	_nout,?_vfprintf
  3535  003956  C0C4  F050         	movff	_nout+1,?_vfprintf+1
  3536  00395A                     
  3537                           ; BSR set to: 0
  3538  00395A  0012               	return		;funcret
  3539  00395C                     __end_of_vfprintf:
  3540                           	opt callstack 0
  3541                           
  3542 ;; *************** function _vfpfcnvrt *****************
  3543 ;; Defined at:
  3544 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  3547 ;;		 -> vsnprintf@f(6), 
  3548 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  3549 ;;		 -> vfprintf@cfmt(2), 
  3550 ;;  ap              2   72[COMRAM] PTR PTR void 
  3551 ;;		 -> snprintf@ap(2), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  llu             8   19[BANK0 ] unsigned long long 
  3554 ;;  ll              8    8[BANK0 ] long long 
  3555 ;;  f               4    0        long long 
  3556 ;;  ct              3    0        unsigned char [3]
  3557 ;;  vp              2   16[BANK0 ] PTR void 
  3558 ;;		 -> ?_snprintf(2), 
  3559 ;;  done            2    2[BANK0 ] int 
  3560 ;;  cp              2    0[BANK0 ] PTR unsigned char 
  3561 ;;		 -> ?_snprintf(2), 
  3562 ;;  i               2    0        int 
  3563 ;;  c               1   18[BANK0 ] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2   68[COMRAM] int 
  3566 ;; Registers used:
  3567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3573 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3576 ;;      Totals:        10      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;Total ram usage:       37 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    9
  3580 ;; This function calls:
  3581 ;;		_atoi
  3582 ;;		_ctoa
  3583 ;;		_dtoa
  3584 ;;		_fputc
  3585 ;;		_isdigit
  3586 ;;		_otoa
  3587 ;;		_stoa
  3588 ;;		_strncmp
  3589 ;;		_utoa
  3590 ;;		_xtoa
  3591 ;; This function is called by:
  3592 ;;		_vfprintf
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text4
  3597  000066                     __ptext4:
  3598                           	opt callstack 0
  3599  000066                     _vfpfcnvrt:
  3600                           	opt callstack 18
  3601  000066                     
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3603  000066  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3604  00006A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3605  00006E  CFDE FFF6          	movff	postinc2,tblptrl
  3606  000072  CFDD FFF7          	movff	postdec2,tblptrh
  3607  000076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3608  000076  6AF8               	clrf	tblptru,c
  3609  000078                     	endif
  3610  000078                     	if	0	;tblptru may be non-zero
  3611  000078                     	endif
  3612  000078  0008               	tblrd		*
  3613  00007A  50F5               	movf	tablat,w,c
  3614  00007C  0A25               	xorlw	37
  3615  00007E  A4D8               	btfss	status,2,c
  3616  000080  EF44  F000         	goto	u3881
  3617  000084  EF46  F000         	goto	u3880
  3618  000088                     u3881:
  3619  000088  EF52  F009         	goto	l4326
  3620  00008C                     u3880:
  3621  00008C                     
  3622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3623  00008C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3624  000090  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3625  000094  2ADE               	incf	postinc2,f,c
  3626  000096  0E00               	movlw	0
  3627  000098  22DD               	addwfc	postdec2,f,c
  3628  00009A                     
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3630  00009A  0E00               	movlw	0
  3631  00009C  0100               	movlb	0	; () banked
  3632  00009E  6FC6               	movwf	(_width+1)& (0+255),b
  3633  0000A0  0E00               	movlw	0
  3634  0000A2  6FC5               	movwf	_width& (0+255),b
  3635  0000A4  C0C5  F059         	movff	_width,_flags
  3636  0000A8  C0C6  F05A         	movff	_width+1,_flags+1
  3637  0000AC                     
  3638                           ; BSR set to: 0
  3639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3640  0000AC  6857               	setf	_prec^0,c
  3641  0000AE  6858               	setf	(_prec+1)^0,c
  3642  0000B0                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3645  0000B0  0E00               	movlw	0
  3646  0000B2  6F63               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3647  0000B4  0E00               	movlw	0
  3648  0000B6  6F62               	movwf	vfpfcnvrt@done& (0+255),b
  3649                           
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3651  0000B8  EFA5  F000         	goto	l4044
  3652  0000BC                     l4018:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3656  0000BC  8059               	bsf	_flags^0,0,c
  3657  0000BE                     l4020:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3661  0000BE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3662  0000C2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3663  0000C6  2ADE               	incf	postinc2,f,c
  3664  0000C8  0E00               	movlw	0
  3665  0000CA  22DD               	addwfc	postdec2,f,c
  3666                           
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3668  0000CC  EFA5  F000         	goto	l4044
  3669  0000D0                     l4022:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3673  0000D0  8259               	bsf	_flags^0,1,c
  3674  0000D2  EF5F  F000         	goto	l4020
  3675  0000D6                     l4026:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3679  0000D6  8459               	bsf	_flags^0,2,c
  3680  0000D8  EF5F  F000         	goto	l4020
  3681  0000DC                     l4030:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3685  0000DC  8659               	bsf	_flags^0,3,c
  3686  0000DE  EF5F  F000         	goto	l4020
  3687  0000E2                     l4034:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3691  0000E2  8859               	bsf	_flags^0,4,c
  3692  0000E4  EF5F  F000         	goto	l4020
  3693  0000E8                     l4038:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3697  0000E8  0E00               	movlw	0
  3698  0000EA  6F63               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3699  0000EC  0E01               	movlw	1
  3700  0000EE  6F62               	movwf	vfpfcnvrt@done& (0+255),b
  3701                           
  3702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3703  0000F0  EFA5  F000         	goto	l4044
  3704  0000F4                     l4042:
  3705                           
  3706                           ; BSR set to: 0
  3707  0000F4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3708  0000F8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3709  0000FC  CFDE FFF6          	movff	postinc2,tblptrl
  3710  000100  CFDD FFF7          	movff	postdec2,tblptrh
  3711  000104                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3712  000104  6AF8               	clrf	tblptru,c
  3713  000106                     	endif
  3714  000106                     	if	0	;tblptru may be non-zero
  3715  000106                     	endif
  3716  000106  0008               	tblrd		*
  3717  000108  50F5               	movf	tablat,w,c
  3718  00010A  6E4B               	movwf	??_vfpfcnvrt^0,c
  3719  00010C  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  3720                           
  3721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3722                           ; Switch size 1, requested type "simple"
  3723                           ; Number of cases is 1, Range of values is 0 to 0
  3724                           ; switch strategies available:
  3725                           ; Name         Instructions Cycles
  3726                           ; simple_byte            4     3 (average)
  3727                           ;	Chosen strategy is simple_byte
  3728  00010E  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  3729  000110  0A00               	xorlw	0	; case 0
  3730  000112  B4D8               	btfsc	status,2,c
  3731  000114  EF8E  F000         	goto	l5446
  3732  000118  EF74  F000         	goto	l4038
  3733  00011C                     l5446:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ; Switch size 1, requested type "simple"
  3737                           ; Number of cases is 5, Range of values is 32 to 48
  3738                           ; switch strategies available:
  3739                           ; Name         Instructions Cycles
  3740                           ; simple_byte           16     9 (average)
  3741                           ;	Chosen strategy is simple_byte
  3742  00011C  504B               	movf	??_vfpfcnvrt^0,w,c
  3743  00011E  0A20               	xorlw	32	; case 32
  3744  000120  B4D8               	btfsc	status,2,c
  3745  000122  EF6E  F000         	goto	l4030
  3746  000126  0A03               	xorlw	3	; case 35
  3747  000128  B4D8               	btfsc	status,2,c
  3748  00012A  EF71  F000         	goto	l4034
  3749  00012E  0A08               	xorlw	8	; case 43
  3750  000130  B4D8               	btfsc	status,2,c
  3751  000132  EF6B  F000         	goto	l4026
  3752  000136  0A06               	xorlw	6	; case 45
  3753  000138  B4D8               	btfsc	status,2,c
  3754  00013A  EF5E  F000         	goto	l4018
  3755  00013E  0A1D               	xorlw	29	; case 48
  3756  000140  B4D8               	btfsc	status,2,c
  3757  000142  EF68  F000         	goto	l4022
  3758  000146  EF74  F000         	goto	l4038
  3759  00014A                     l4044:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3763  00014A  5162               	movf	vfpfcnvrt@done& (0+255),w,b
  3764  00014C  1163               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3765  00014E  B4D8               	btfsc	status,2,c
  3766  000150  EFAC  F000         	goto	u3891
  3767  000154  EFAE  F000         	goto	u3890
  3768  000158                     u3891:
  3769  000158  EF7A  F000         	goto	l4042
  3770  00015C                     u3890:
  3771  00015C                     
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3774  00015C  A059               	btfss	_flags^0,0,c
  3775  00015E  EFB3  F000         	goto	u3901
  3776  000162  EFB5  F000         	goto	u3900
  3777  000166                     u3901:
  3778  000166  EFB6  F000         	goto	l4048
  3779  00016A                     u3900:
  3780  00016A                     
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3783  00016A  9259               	bcf	_flags^0,1,c
  3784  00016C                     l4048:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3788  00016C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3789  000170  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3790  000174  CFDE FFF6          	movff	postinc2,tblptrl
  3791  000178  CFDD FFF7          	movff	postdec2,tblptrh
  3792  00017C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3793  00017C  6AF8               	clrf	tblptru,c
  3794  00017E                     	endif
  3795  00017E                     	if	0	;tblptru may be non-zero
  3796  00017E                     	endif
  3797  00017E  0008               	tblrd		*
  3798  000180  50F5               	movf	tablat,w,c
  3799  000182  0A2A               	xorlw	42
  3800  000184  A4D8               	btfss	status,2,c
  3801  000186  EFC7  F000         	goto	u3911
  3802  00018A  EFC9  F000         	goto	u3910
  3803  00018E                     u3911:
  3804  00018E  EFF2  F000         	goto	l4056
  3805  000192                     u3910:
  3806  000192                     
  3807                           ; BSR set to: 0
  3808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3809  000192  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3810  000196  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3811  00019A  2ADE               	incf	postinc2,f,c
  3812  00019C  0E00               	movlw	0
  3813  00019E  22DD               	addwfc	postdec2,f,c
  3814                           
  3815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3816  0001A0  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3817  0001A4  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3818  0001A8  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3819  0001AC  0E02               	movlw	2
  3820  0001AE  26DE               	addwf	postinc2,f,c
  3821  0001B0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3822  0001B4  0E00               	movlw	0
  3823  0001B6  22DD               	addwfc	postdec2,f,c
  3824  0001B8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3825  0001BC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3826  0001C0  CFDE F0C5          	movff	postinc2,_width
  3827  0001C4  CFDD F0C6          	movff	postdec2,_width+1
  3828  0001C8                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3831  0001C8  BFC6               	btfsc	(_width+1)& (0+255),7,b
  3832  0001CA  EFEB  F000         	goto	u3920
  3833  0001CE  EFE9  F000         	goto	u3921
  3834  0001D2                     u3921:
  3835  0001D2  EF37  F001         	goto	l4066
  3836  0001D6                     u3920:
  3837  0001D6                     
  3838                           ; BSR set to: 0
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3840  0001D6  8059               	bsf	_flags^0,0,c
  3841                           
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3843  0001D8  6DC5               	negf	_width& (0+255),b
  3844  0001DA  1FC6               	comf	(_width+1)& (0+255),f,b
  3845  0001DC  B0D8               	btfsc	status,0,c
  3846  0001DE  2BC6               	incf	(_width+1)& (0+255),f,b
  3847  0001E0  EF37  F001         	goto	l4066
  3848  0001E4                     l4056:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3852  0001E4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3853  0001E8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3854  0001EC  CFDE F00A          	movff	postinc2,atoi@s
  3855  0001F0  CFDD F00B          	movff	postdec2,atoi@s+1
  3856  0001F4  ECDC  F013         	call	_atoi	;wreg free
  3857  0001F8  C00A  F0C5         	movff	?_atoi,_width
  3858  0001FC  C00B  F0C6         	movff	?_atoi+1,_width+1
  3859                           
  3860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3861  000200  EF09  F001         	goto	l4060
  3862  000204                     l4058:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3866  000204  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3867  000208  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3868  00020C  2ADE               	incf	postinc2,f,c
  3869  00020E  0E00               	movlw	0
  3870  000210  22DD               	addwfc	postdec2,f,c
  3871  000212                     l4060:
  3872  000212  0ED0               	movlw	208
  3873  000214  6E4B               	movwf	??_vfpfcnvrt^0,c
  3874  000216  0EFF               	movlw	255
  3875  000218  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  3876  00021A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3877  00021E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3878  000222  CFDE FFF6          	movff	postinc2,tblptrl
  3879  000226  CFDD FFF7          	movff	postdec2,tblptrh
  3880  00022A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3881  00022A  6AF8               	clrf	tblptru,c
  3882  00022C                     	endif
  3883  00022C                     	if	0	;tblptru may be non-zero
  3884  00022C                     	endif
  3885  00022C  0008               	tblrd		*
  3886  00022E  50F5               	movf	tablat,w,c
  3887  000230  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  3888  000232  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  3889  000234  504B               	movf	??_vfpfcnvrt^0,w,c
  3890  000236  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3891  000238  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  3892  00023A  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3893  00023C  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  3894  00023E  E10A               	bnz	u3930
  3895  000240  0E0A               	movlw	10
  3896  000242  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3897  000244  A0D8               	btfss	status,0,c
  3898  000246  EF27  F001         	goto	u3931
  3899  00024A  EF2A  F001         	goto	u3930
  3900  00024E                     u3931:
  3901  00024E  0E01               	movlw	1
  3902  000250  EF2B  F001         	goto	u3940
  3903  000254                     u3930:
  3904  000254  0E00               	movlw	0
  3905  000256                     u3940:
  3906  000256  0100               	movlb	0	; () banked
  3907  000258  6F64               	movwf	_vfpfcnvrt$1363& (0+255),b
  3908  00025A  6B65               	clrf	(_vfpfcnvrt$1363+1)& (0+255),b
  3909  00025C                     
  3910                           ; BSR set to: 0
  3911  00025C  5164               	movf	_vfpfcnvrt$1363& (0+255),w,b
  3912  00025E  1165               	iorwf	(_vfpfcnvrt$1363+1)& (0+255),w,b
  3913  000260  A4D8               	btfss	status,2,c
  3914  000262  EF35  F001         	goto	u3951
  3915  000266  EF37  F001         	goto	u3950
  3916  00026A                     u3951:
  3917  00026A  EF02  F001         	goto	l4058
  3918  00026E                     u3950:
  3919  00026E                     l4066:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3923  00026E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3924  000272  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3925  000276  CFDE FFF6          	movff	postinc2,tblptrl
  3926  00027A  CFDD FFF7          	movff	postdec2,tblptrh
  3927  00027E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3928  00027E  6AF8               	clrf	tblptru,c
  3929  000280                     	endif
  3930  000280                     	if	0	;tblptru may be non-zero
  3931  000280                     	endif
  3932  000280  0008               	tblrd		*
  3933  000282  50F5               	movf	tablat,w,c
  3934  000284  0A2E               	xorlw	46
  3935  000286  A4D8               	btfss	status,2,c
  3936  000288  EF48  F001         	goto	u3961
  3937  00028C  EF4A  F001         	goto	u3960
  3938  000290                     u3961:
  3939  000290  EFCA  F001         	goto	l4086
  3940  000294                     u3960:
  3941  000294                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3944  000294  0E00               	movlw	0
  3945  000296  6E58               	movwf	(_prec+1)^0,c
  3946  000298  0E00               	movlw	0
  3947  00029A  6E57               	movwf	_prec^0,c
  3948  00029C                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3951  00029C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3952  0002A0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3953  0002A4  2ADE               	incf	postinc2,f,c
  3954  0002A6  0E00               	movlw	0
  3955  0002A8  22DD               	addwfc	postdec2,f,c
  3956  0002AA                     
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3959  0002AA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3960  0002AE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3961  0002B2  CFDE FFF6          	movff	postinc2,tblptrl
  3962  0002B6  CFDD FFF7          	movff	postdec2,tblptrh
  3963  0002BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3964  0002BA  6AF8               	clrf	tblptru,c
  3965  0002BC                     	endif
  3966  0002BC                     	if	0	;tblptru may be non-zero
  3967  0002BC                     	endif
  3968  0002BC  0008               	tblrd		*
  3969  0002BE  50F5               	movf	tablat,w,c
  3970  0002C0  0A2A               	xorlw	42
  3971  0002C2  A4D8               	btfss	status,2,c
  3972  0002C4  EF66  F001         	goto	u3971
  3973  0002C8  EF68  F001         	goto	u3970
  3974  0002CC                     u3971:
  3975  0002CC  EF85  F001         	goto	l4076
  3976  0002D0                     u3970:
  3977  0002D0                     
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3980  0002D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3981  0002D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3982  0002D8  2ADE               	incf	postinc2,f,c
  3983  0002DA  0E00               	movlw	0
  3984  0002DC  22DD               	addwfc	postdec2,f,c
  3985                           
  3986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3987  0002DE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3988  0002E2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3989  0002E6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  3990  0002EA  0E02               	movlw	2
  3991  0002EC  26DE               	addwf	postinc2,f,c
  3992  0002EE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  3993  0002F2  0E00               	movlw	0
  3994  0002F4  22DD               	addwfc	postdec2,f,c
  3995  0002F6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3996  0002FA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3997  0002FE  CFDE F057          	movff	postinc2,_prec
  3998  000302  CFDD F058          	movff	postdec2,_prec+1
  3999                           
  4000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4001  000306  EFCA  F001         	goto	l4086
  4002  00030A                     l4076:
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4006  00030A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4007  00030E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4008  000312  CFDE F00A          	movff	postinc2,atoi@s
  4009  000316  CFDD F00B          	movff	postdec2,atoi@s+1
  4010  00031A  ECDC  F013         	call	_atoi	;wreg free
  4011  00031E  C00A  F057         	movff	?_atoi,_prec
  4012  000322  C00B  F058         	movff	?_atoi+1,_prec+1
  4013                           
  4014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4015  000326  EF9C  F001         	goto	l4080
  4016  00032A                     l4078:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4020  00032A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4021  00032E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4022  000332  2ADE               	incf	postinc2,f,c
  4023  000334  0E00               	movlw	0
  4024  000336  22DD               	addwfc	postdec2,f,c
  4025  000338                     l4080:
  4026  000338  0ED0               	movlw	208
  4027  00033A  6E4B               	movwf	??_vfpfcnvrt^0,c
  4028  00033C  0EFF               	movlw	255
  4029  00033E  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  4030  000340  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4031  000344  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4032  000348  CFDE FFF6          	movff	postinc2,tblptrl
  4033  00034C  CFDD FFF7          	movff	postdec2,tblptrh
  4034  000350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4035  000350  6AF8               	clrf	tblptru,c
  4036  000352                     	endif
  4037  000352                     	if	0	;tblptru may be non-zero
  4038  000352                     	endif
  4039  000352  0008               	tblrd		*
  4040  000354  50F5               	movf	tablat,w,c
  4041  000356  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  4042  000358  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  4043  00035A  504B               	movf	??_vfpfcnvrt^0,w,c
  4044  00035C  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4045  00035E  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4046  000360  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4047  000362  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  4048  000364  E10A               	bnz	u3980
  4049  000366  0E0A               	movlw	10
  4050  000368  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4051  00036A  A0D8               	btfss	status,0,c
  4052  00036C  EFBA  F001         	goto	u3981
  4053  000370  EFBD  F001         	goto	u3980
  4054  000374                     u3981:
  4055  000374  0E01               	movlw	1
  4056  000376  EFBE  F001         	goto	u3990
  4057  00037A                     u3980:
  4058  00037A  0E00               	movlw	0
  4059  00037C                     u3990:
  4060  00037C  0100               	movlb	0	; () banked
  4061  00037E  6F66               	movwf	_vfpfcnvrt$1364& (0+255),b
  4062  000380  6B67               	clrf	(_vfpfcnvrt$1364+1)& (0+255),b
  4063  000382                     
  4064                           ; BSR set to: 0
  4065  000382  5166               	movf	_vfpfcnvrt$1364& (0+255),w,b
  4066  000384  1167               	iorwf	(_vfpfcnvrt$1364+1)& (0+255),w,b
  4067  000386  A4D8               	btfss	status,2,c
  4068  000388  EFC8  F001         	goto	u4001
  4069  00038C  EFCA  F001         	goto	u4000
  4070  000390                     u4001:
  4071  000390  EF95  F001         	goto	l4078
  4072  000394                     u4000:
  4073  000394                     l4086:
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4077  000394  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4078  000398  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4079  00039C  CFDE FFF6          	movff	postinc2,tblptrl
  4080  0003A0  CFDD FFF7          	movff	postdec2,tblptrh
  4081  0003A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4082  0003A4  6AF8               	clrf	tblptru,c
  4083  0003A6                     	endif
  4084  0003A6                     	if	0	;tblptru may be non-zero
  4085  0003A6                     	endif
  4086  0003A6  0008               	tblrd		*
  4087  0003A8  50F5               	movf	tablat,w,c
  4088  0003AA  0A63               	xorlw	99
  4089  0003AC  A4D8               	btfss	status,2,c
  4090  0003AE  EFDB  F001         	goto	u4011
  4091  0003B2  EFDD  F001         	goto	u4010
  4092  0003B6                     u4011:
  4093  0003B6  EF04  F002         	goto	l4094
  4094  0003BA                     u4010:
  4095  0003BA                     
  4096                           ; BSR set to: 0
  4097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4098  0003BA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4099  0003BE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4100  0003C2  2ADE               	incf	postinc2,f,c
  4101  0003C4  0E00               	movlw	0
  4102  0003C6  22DD               	addwfc	postdec2,f,c
  4103                           
  4104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4105  0003C8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4106  0003CC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4107  0003D0  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4108  0003D4  0E02               	movlw	2
  4109  0003D6  26DE               	addwf	postinc2,f,c
  4110  0003D8  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4111  0003DC  0E00               	movlw	0
  4112  0003DE  22DD               	addwfc	postdec2,f,c
  4113  0003E0  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4114  0003E4  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4115  0003E8  50DF               	movf	indf2,w,c
  4116  0003EA  6F72               	movwf	vfpfcnvrt@c& (0+255),b
  4117  0003EC                     
  4118                           ; BSR set to: 0
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4120  0003EC  C045  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  4121  0003F0  C046  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4122  0003F4  C072  F020         	movff	vfpfcnvrt@c,ctoa@c
  4123  0003F8  ECDD  F01C         	call	_ctoa	;wreg free
  4124  0003FC  C01E  F045         	movff	?_ctoa,?_vfpfcnvrt
  4125  000400  C01F  F046         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4126  000404  EF6E  F009         	goto	l658
  4127  000408                     l4094:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4131  000408  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4132  00040C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4133  000410  CFDE F003          	movff	postinc2,strncmp@_l
  4134  000414  CFDD F004          	movff	postdec2,strncmp@_l+1
  4135  000418  0ED2               	movlw	low STR_3
  4136  00041A  6E05               	movwf	strncmp@_r^0,c
  4137  00041C  0EFF               	movlw	high STR_3
  4138  00041E  6E06               	movwf	(strncmp@_r+1)^0,c
  4139  000420  0E00               	movlw	0
  4140  000422  6E08               	movwf	(strncmp@n+1)^0,c
  4141  000424  0E03               	movlw	3
  4142  000426  6E07               	movwf	strncmp@n^0,c
  4143  000428  ECB9  F019         	call	_strncmp	;wreg free
  4144  00042C  5003               	movf	?_strncmp^0,w,c
  4145  00042E  1004               	iorwf	(?_strncmp+1)^0,w,c
  4146  000430  B4D8               	btfsc	status,2,c
  4147  000432  EF1D  F002         	goto	u4021
  4148  000436  EF1F  F002         	goto	u4020
  4149  00043A                     u4021:
  4150  00043A  EF3A  F002         	goto	l4098
  4151  00043E                     u4020:
  4152  00043E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4153  000442  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4154  000446  CFDE F003          	movff	postinc2,strncmp@_l
  4155  00044A  CFDD F004          	movff	postdec2,strncmp@_l+1
  4156  00044E  0ED6               	movlw	low STR_7
  4157  000450  6E05               	movwf	strncmp@_r^0,c
  4158  000452  0EFF               	movlw	high STR_7
  4159  000454  6E06               	movwf	(strncmp@_r+1)^0,c
  4160  000456  0E00               	movlw	0
  4161  000458  6E08               	movwf	(strncmp@n+1)^0,c
  4162  00045A  0E03               	movlw	3
  4163  00045C  6E07               	movwf	strncmp@n^0,c
  4164  00045E  ECB9  F019         	call	_strncmp	;wreg free
  4165  000462  5003               	movf	?_strncmp^0,w,c
  4166  000464  1004               	iorwf	(?_strncmp+1)^0,w,c
  4167  000466  A4D8               	btfss	status,2,c
  4168  000468  EF38  F002         	goto	u4031
  4169  00046C  EF3A  F002         	goto	u4030
  4170  000470                     u4031:
  4171  000470  EF7B  F002         	goto	l4104
  4172  000474                     u4030:
  4173  000474                     l4098:
  4174                           
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4176  000474  0E03               	movlw	3
  4177  000476  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4178  00047A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4179  00047E  26DE               	addwf	postinc2,f,c
  4180  000480  0E00               	movlw	0
  4181  000482  22DD               	addwfc	postdec2,f,c
  4182                           
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4184  000484  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4185  000488  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4186  00048C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4187  000490  0E02               	movlw	2
  4188  000492  26DE               	addwf	postinc2,f,c
  4189  000494  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4190  000498  0E00               	movlw	0
  4191  00049A  22DD               	addwfc	postdec2,f,c
  4192  00049C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4193  0004A0  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4194  0004A4  50DF               	movf	indf2,w,c
  4195  0004A6  0100               	movlb	0	; () banked
  4196  0004A8  6F68               	movwf	vfpfcnvrt@ll& (0+255),b
  4197  0004AA  0E00               	movlw	0
  4198  0004AC  BF68               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4199  0004AE  0EFF               	movlw	-1
  4200  0004B0  6F69               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4201  0004B2  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4202  0004B4  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4203  0004B6  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4204  0004B8  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4205  0004BA  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4206  0004BC  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4207  0004BE                     l4100:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4211  0004BE  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4212  0004C2  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4213  0004C6  C068  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4214  0004CA  C069  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4215  0004CE  C06A  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4216  0004D2  C06B  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4217  0004D6  C06C  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4218  0004DA  C06D  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4219  0004DE  C06E  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4220  0004E2  C06F  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4221  0004E6  EC47  F00D         	call	_dtoa	;wreg free
  4222  0004EA  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  4223  0004EE  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4224  0004F2  EF6E  F009         	goto	l658
  4225  0004F6                     l4104:
  4226                           
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4228  0004F6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4229  0004FA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4230  0004FE  CFDE F003          	movff	postinc2,strncmp@_l
  4231  000502  CFDD F004          	movff	postdec2,strncmp@_l+1
  4232  000506  0ED3               	movlw	low (STR_3+1)
  4233  000508  6E05               	movwf	strncmp@_r^0,c
  4234  00050A  0EFF               	movlw	high (STR_3+1)
  4235  00050C  6E06               	movwf	(strncmp@_r+1)^0,c
  4236  00050E  0E00               	movlw	0
  4237  000510  6E08               	movwf	(strncmp@n+1)^0,c
  4238  000512  0E02               	movlw	2
  4239  000514  6E07               	movwf	strncmp@n^0,c
  4240  000516  ECB9  F019         	call	_strncmp	;wreg free
  4241  00051A  5003               	movf	?_strncmp^0,w,c
  4242  00051C  1004               	iorwf	(?_strncmp+1)^0,w,c
  4243  00051E  B4D8               	btfsc	status,2,c
  4244  000520  EF94  F002         	goto	u4041
  4245  000524  EF96  F002         	goto	u4040
  4246  000528                     u4041:
  4247  000528  EFB1  F002         	goto	l4108
  4248  00052C                     u4040:
  4249  00052C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4250  000530  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4251  000534  CFDE F003          	movff	postinc2,strncmp@_l
  4252  000538  CFDD F004          	movff	postdec2,strncmp@_l+1
  4253  00053C  0ED7               	movlw	low (STR_7+1)
  4254  00053E  6E05               	movwf	strncmp@_r^0,c
  4255  000540  0EFF               	movlw	high (STR_7+1)
  4256  000542  6E06               	movwf	(strncmp@_r+1)^0,c
  4257  000544  0E00               	movlw	0
  4258  000546  6E08               	movwf	(strncmp@n+1)^0,c
  4259  000548  0E02               	movlw	2
  4260  00054A  6E07               	movwf	strncmp@n^0,c
  4261  00054C  ECB9  F019         	call	_strncmp	;wreg free
  4262  000550  5003               	movf	?_strncmp^0,w,c
  4263  000552  1004               	iorwf	(?_strncmp+1)^0,w,c
  4264  000554  A4D8               	btfss	status,2,c
  4265  000556  EFAF  F002         	goto	u4051
  4266  00055A  EFB1  F002         	goto	u4050
  4267  00055E                     u4051:
  4268  00055E  EFD9  F002         	goto	l4114
  4269  000562                     u4050:
  4270  000562                     l4108:
  4271                           
  4272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4273  000562  0E02               	movlw	2
  4274  000564  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4275  000568  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4276  00056C  26DE               	addwf	postinc2,f,c
  4277  00056E  0E00               	movlw	0
  4278  000570  22DD               	addwfc	postdec2,f,c
  4279                           
  4280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4281  000572  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4282  000576  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4283  00057A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4284  00057E  0E02               	movlw	2
  4285  000580  26DE               	addwf	postinc2,f,c
  4286  000582  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4287  000586  0E00               	movlw	0
  4288  000588  22DD               	addwfc	postdec2,f,c
  4289  00058A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4290  00058E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4291  000592  CFDE F068          	movff	postinc2,vfpfcnvrt@ll
  4292  000596  CFDD F069          	movff	postdec2,vfpfcnvrt@ll+1
  4293  00059A  0100               	movlb	0	; () banked
  4294  00059C  0E00               	movlw	0
  4295  00059E  BF69               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4296  0005A0  0EFF               	movlw	-1
  4297  0005A2  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4298  0005A4  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4299  0005A6  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4300  0005A8  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4301  0005AA  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4302  0005AC  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4303  0005AE  EF5F  F002         	goto	l4100
  4304  0005B2                     l4114:
  4305                           
  4306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4307  0005B2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4308  0005B6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4309  0005BA  CFDE FFF6          	movff	postinc2,tblptrl
  4310  0005BE  CFDD FFF7          	movff	postdec2,tblptrh
  4311  0005C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4312  0005C2  6AF8               	clrf	tblptru,c
  4313  0005C4                     	endif
  4314  0005C4                     	if	0	;tblptru may be non-zero
  4315  0005C4                     	endif
  4316  0005C4  0008               	tblrd		*
  4317  0005C6  50F5               	movf	tablat,w,c
  4318  0005C8  0A64               	xorlw	100
  4319  0005CA  B4D8               	btfsc	status,2,c
  4320  0005CC  EFEA  F002         	goto	u4061
  4321  0005D0  EFEC  F002         	goto	u4060
  4322  0005D4                     u4061:
  4323  0005D4  EFFF  F002         	goto	l4118
  4324  0005D8                     u4060:
  4325  0005D8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4326  0005DC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4327  0005E0  CFDE FFF6          	movff	postinc2,tblptrl
  4328  0005E4  CFDD FFF7          	movff	postdec2,tblptrh
  4329  0005E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4330  0005E8  6AF8               	clrf	tblptru,c
  4331  0005EA                     	endif
  4332  0005EA                     	if	0	;tblptru may be non-zero
  4333  0005EA                     	endif
  4334  0005EA  0008               	tblrd		*
  4335  0005EC  50F5               	movf	tablat,w,c
  4336  0005EE  0A69               	xorlw	105
  4337  0005F0  A4D8               	btfss	status,2,c
  4338  0005F2  EFFD  F002         	goto	u4071
  4339  0005F6  EFFF  F002         	goto	u4070
  4340  0005FA                     u4071:
  4341  0005FA  EF26  F003         	goto	l4124
  4342  0005FE                     u4070:
  4343  0005FE                     l4118:
  4344                           
  4345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4346  0005FE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4347  000602  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4348  000606  2ADE               	incf	postinc2,f,c
  4349  000608  0E00               	movlw	0
  4350  00060A  22DD               	addwfc	postdec2,f,c
  4351                           
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4353  00060C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4354  000610  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4355  000614  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4356  000618  0E02               	movlw	2
  4357  00061A  26DE               	addwf	postinc2,f,c
  4358  00061C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4359  000620  0E00               	movlw	0
  4360  000622  22DD               	addwfc	postdec2,f,c
  4361  000624  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4362  000628  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4363  00062C  CFDE F068          	movff	postinc2,vfpfcnvrt@ll
  4364  000630  CFDD F069          	movff	postdec2,vfpfcnvrt@ll+1
  4365  000634  0100               	movlb	0	; () banked
  4366  000636  0E00               	movlw	0
  4367  000638  BF69               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4368  00063A  0EFF               	movlw	-1
  4369  00063C  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4370  00063E  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4371  000640  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4372  000642  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4373  000644  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4374  000646  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4375  000648  EF5F  F002         	goto	l4100
  4376  00064C                     l4124:
  4377                           
  4378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4379  00064C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4380  000650  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4381  000654  CFDE F003          	movff	postinc2,strncmp@_l
  4382  000658  CFDD F004          	movff	postdec2,strncmp@_l+1
  4383  00065C  0EED               	movlw	low STR_21
  4384  00065E  6E05               	movwf	strncmp@_r^0,c
  4385  000660  0EFF               	movlw	high STR_21
  4386  000662  6E06               	movwf	(strncmp@_r+1)^0,c
  4387  000664  0E00               	movlw	0
  4388  000666  6E08               	movwf	(strncmp@n+1)^0,c
  4389  000668  0E02               	movlw	2
  4390  00066A  6E07               	movwf	strncmp@n^0,c
  4391  00066C  ECB9  F019         	call	_strncmp	;wreg free
  4392  000670  5003               	movf	?_strncmp^0,w,c
  4393  000672  1004               	iorwf	(?_strncmp+1)^0,w,c
  4394  000674  B4D8               	btfsc	status,2,c
  4395  000676  EF3F  F003         	goto	u4081
  4396  00067A  EF41  F003         	goto	u4080
  4397  00067E                     u4081:
  4398  00067E  EF5C  F003         	goto	l4128
  4399  000682                     u4080:
  4400  000682  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4401  000686  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4402  00068A  CFDE F003          	movff	postinc2,strncmp@_l
  4403  00068E  CFDD F004          	movff	postdec2,strncmp@_l+1
  4404  000692  0EF0               	movlw	low STR_25
  4405  000694  6E05               	movwf	strncmp@_r^0,c
  4406  000696  0EFF               	movlw	high STR_25
  4407  000698  6E06               	movwf	(strncmp@_r+1)^0,c
  4408  00069A  0E00               	movlw	0
  4409  00069C  6E08               	movwf	(strncmp@n+1)^0,c
  4410  00069E  0E02               	movlw	2
  4411  0006A0  6E07               	movwf	strncmp@n^0,c
  4412  0006A2  ECB9  F019         	call	_strncmp	;wreg free
  4413  0006A6  5003               	movf	?_strncmp^0,w,c
  4414  0006A8  1004               	iorwf	(?_strncmp+1)^0,w,c
  4415  0006AA  A4D8               	btfss	status,2,c
  4416  0006AC  EF5A  F003         	goto	u4091
  4417  0006B0  EF5C  F003         	goto	u4090
  4418  0006B4                     u4091:
  4419  0006B4  EF85  F003         	goto	l4134
  4420  0006B8                     u4090:
  4421  0006B8                     l4128:
  4422                           
  4423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4424  0006B8  0E02               	movlw	2
  4425  0006BA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4426  0006BE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4427  0006C2  26DE               	addwf	postinc2,f,c
  4428  0006C4  0E00               	movlw	0
  4429  0006C6  22DD               	addwfc	postdec2,f,c
  4430                           
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4432  0006C8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4433  0006CC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4434  0006D0  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4435  0006D4  0E02               	movlw	2
  4436  0006D6  26DE               	addwf	postinc2,f,c
  4437  0006D8  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4438  0006DC  0E00               	movlw	0
  4439  0006DE  22DD               	addwfc	postdec2,f,c
  4440  0006E0  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4441  0006E4  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4442  0006E8  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  4443  0006EC  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  4444  0006F0  C04D  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4445  0006F4  C04E  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4446  0006F8  0100               	movlb	0	; () banked
  4447  0006FA  6B6A               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4448  0006FC  6B6B               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4449  0006FE  6B6C               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4450  000700  6B6D               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4451  000702  6B6E               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4452  000704  6B6F               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4453  000706  EF5F  F002         	goto	l4100
  4454  00070A                     l4134:
  4455                           
  4456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4457  00070A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4458  00070E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4459  000712  CFDE F003          	movff	postinc2,strncmp@_l
  4460  000716  CFDD F004          	movff	postdec2,strncmp@_l+1
  4461  00071A  0EDE               	movlw	low STR_30
  4462  00071C  6E05               	movwf	strncmp@_r^0,c
  4463  00071E  0EFF               	movlw	high STR_30
  4464  000720  6E06               	movwf	(strncmp@_r+1)^0,c
  4465  000722  0E00               	movlw	0
  4466  000724  6E08               	movwf	(strncmp@n+1)^0,c
  4467  000726  0E03               	movlw	3
  4468  000728  6E07               	movwf	strncmp@n^0,c
  4469  00072A  ECB9  F019         	call	_strncmp	;wreg free
  4470  00072E  5003               	movf	?_strncmp^0,w,c
  4471  000730  1004               	iorwf	(?_strncmp+1)^0,w,c
  4472  000732  A4D8               	btfss	status,2,c
  4473  000734  EF9E  F003         	goto	u4101
  4474  000738  EFA0  F003         	goto	u4100
  4475  00073C                     u4101:
  4476  00073C  EFE0  F003         	goto	l4142
  4477  000740                     u4100:
  4478  000740                     
  4479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4480  000740  0E03               	movlw	3
  4481  000742  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4482  000746  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4483  00074A  26DE               	addwf	postinc2,f,c
  4484  00074C  0E00               	movlw	0
  4485  00074E  22DD               	addwfc	postdec2,f,c
  4486                           
  4487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4488  000750  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4489  000754  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4490  000758  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4491  00075C  0E02               	movlw	2
  4492  00075E  26DE               	addwf	postinc2,f,c
  4493  000760  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4494  000764  0E00               	movlw	0
  4495  000766  22DD               	addwfc	postdec2,f,c
  4496  000768  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4497  00076C  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4498  000770  50DF               	movf	indf2,w,c
  4499  000772  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  4500  000774  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  4501  000776  0100               	movlb	0	; () banked
  4502  000778  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  4503  00077A  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4504  00077C  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4505  00077E  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4506  000780  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4507  000782  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4508  000784  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4509  000786  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4510  000788                     l4138:
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  4514  000788  C045  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  4515  00078C  C046  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4516  000790  C073  F020         	movff	vfpfcnvrt@llu,otoa@d
  4517  000794  C074  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4518  000798  C075  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4519  00079C  C076  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4520  0007A0  C077  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4521  0007A4  C078  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4522  0007A8  C079  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4523  0007AC  C07A  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4524  0007B0  EC20  F011         	call	_otoa	;wreg free
  4525  0007B4  C01E  F045         	movff	?_otoa,?_vfpfcnvrt
  4526  0007B8  C01F  F046         	movff	?_otoa+1,?_vfpfcnvrt+1
  4527  0007BC  EF6E  F009         	goto	l658
  4528  0007C0                     l4142:
  4529                           
  4530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4531  0007C0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4532  0007C4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4533  0007C8  CFDE F003          	movff	postinc2,strncmp@_l
  4534  0007CC  CFDD F004          	movff	postdec2,strncmp@_l+1
  4535  0007D0  0EDF               	movlw	low (STR_30+1)
  4536  0007D2  6E05               	movwf	strncmp@_r^0,c
  4537  0007D4  0EFF               	movlw	high (STR_30+1)
  4538  0007D6  6E06               	movwf	(strncmp@_r+1)^0,c
  4539  0007D8  0E00               	movlw	0
  4540  0007DA  6E08               	movwf	(strncmp@n+1)^0,c
  4541  0007DC  0E02               	movlw	2
  4542  0007DE  6E07               	movwf	strncmp@n^0,c
  4543  0007E0  ECB9  F019         	call	_strncmp	;wreg free
  4544  0007E4  5003               	movf	?_strncmp^0,w,c
  4545  0007E6  1004               	iorwf	(?_strncmp+1)^0,w,c
  4546  0007E8  A4D8               	btfss	status,2,c
  4547  0007EA  EFF9  F003         	goto	u4111
  4548  0007EE  EFFB  F003         	goto	u4110
  4549  0007F2                     u4111:
  4550  0007F2  EF24  F004         	goto	l4150
  4551  0007F6                     u4110:
  4552  0007F6                     
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4554  0007F6  0E02               	movlw	2
  4555  0007F8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4556  0007FC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4557  000800  26DE               	addwf	postinc2,f,c
  4558  000802  0E00               	movlw	0
  4559  000804  22DD               	addwfc	postdec2,f,c
  4560                           
  4561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4562  000806  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4563  00080A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4564  00080E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4565  000812  0E02               	movlw	2
  4566  000814  26DE               	addwf	postinc2,f,c
  4567  000816  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4568  00081A  0E00               	movlw	0
  4569  00081C  22DD               	addwfc	postdec2,f,c
  4570  00081E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4571  000822  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4572  000826  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  4573  00082A  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  4574  00082E  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4575  000832  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4576  000836  0100               	movlb	0	; () banked
  4577  000838  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4578  00083A  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4579  00083C  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4580  00083E  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4581  000840  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4582  000842  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4583  000844  EFC4  F003         	goto	l4138
  4584  000848                     l4150:
  4585                           
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  4587  000848  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4588  00084C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4589  000850  CFDE FFF6          	movff	postinc2,tblptrl
  4590  000854  CFDD FFF7          	movff	postdec2,tblptrh
  4591  000858                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4592  000858  6AF8               	clrf	tblptru,c
  4593  00085A                     	endif
  4594  00085A                     	if	0	;tblptru may be non-zero
  4595  00085A                     	endif
  4596  00085A  0008               	tblrd		*
  4597  00085C  50F5               	movf	tablat,w,c
  4598  00085E  0A6F               	xorlw	111
  4599  000860  A4D8               	btfss	status,2,c
  4600  000862  EF35  F004         	goto	u4121
  4601  000866  EF37  F004         	goto	u4120
  4602  00086A                     u4121:
  4603  00086A  EF5F  F004         	goto	l4158
  4604  00086E                     u4120:
  4605  00086E                     
  4606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  4607  00086E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4608  000872  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4609  000876  2ADE               	incf	postinc2,f,c
  4610  000878  0E00               	movlw	0
  4611  00087A  22DD               	addwfc	postdec2,f,c
  4612                           
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  4614  00087C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4615  000880  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4616  000884  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4617  000888  0E02               	movlw	2
  4618  00088A  26DE               	addwf	postinc2,f,c
  4619  00088C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4620  000890  0E00               	movlw	0
  4621  000892  22DD               	addwfc	postdec2,f,c
  4622  000894  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4623  000898  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4624  00089C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  4625  0008A0  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  4626  0008A4  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4627  0008A8  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4628  0008AC  0100               	movlb	0	; () banked
  4629  0008AE  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4630  0008B0  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4631  0008B2  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4632  0008B4  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4633  0008B6  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4634  0008B8  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4635  0008BA  EFC4  F003         	goto	l4138
  4636  0008BE                     l4158:
  4637                           
  4638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4639  0008BE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4640  0008C2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4641  0008C6  CFDE F003          	movff	postinc2,strncmp@_l
  4642  0008CA  CFDD F004          	movff	postdec2,strncmp@_l+1
  4643  0008CE  0EF6               	movlw	low STR_40
  4644  0008D0  6E05               	movwf	strncmp@_r^0,c
  4645  0008D2  0EFF               	movlw	high STR_40
  4646  0008D4  6E06               	movwf	(strncmp@_r+1)^0,c
  4647  0008D6  0E00               	movlw	0
  4648  0008D8  6E08               	movwf	(strncmp@n+1)^0,c
  4649  0008DA  0E02               	movlw	2
  4650  0008DC  6E07               	movwf	strncmp@n^0,c
  4651  0008DE  ECB9  F019         	call	_strncmp	;wreg free
  4652  0008E2  5003               	movf	?_strncmp^0,w,c
  4653  0008E4  1004               	iorwf	(?_strncmp+1)^0,w,c
  4654  0008E6  A4D8               	btfss	status,2,c
  4655  0008E8  EF78  F004         	goto	u4131
  4656  0008EC  EF7A  F004         	goto	u4130
  4657  0008F0                     u4131:
  4658  0008F0  EFA3  F004         	goto	l4166
  4659  0008F4                     u4130:
  4660  0008F4                     
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4662  0008F4  0E02               	movlw	2
  4663  0008F6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4664  0008FA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4665  0008FE  26DE               	addwf	postinc2,f,c
  4666  000900  0E00               	movlw	0
  4667  000902  22DD               	addwfc	postdec2,f,c
  4668                           
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4670  000904  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4671  000908  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4672  00090C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4673  000910  0E02               	movlw	2
  4674  000912  26DE               	addwf	postinc2,f,c
  4675  000914  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4676  000918  0E00               	movlw	0
  4677  00091A  22DD               	addwfc	postdec2,f,c
  4678  00091C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4679  000920  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4680  000924  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  4681  000928  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  4682  00092C  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4683  000930  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4684  000934  0100               	movlb	0	; () banked
  4685  000936  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4686  000938  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4687  00093A  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4688  00093C  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4689  00093E  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4690  000940  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4691  000942  EFC4  F003         	goto	l4138
  4692  000946                     l4166:
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4695  000946  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4696  00094A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4697  00094E  CFDE F003          	movff	postinc2,strncmp@_l
  4698  000952  CFDD F004          	movff	postdec2,strncmp@_l+1
  4699  000956  0EDA               	movlw	low STR_45
  4700  000958  6E05               	movwf	strncmp@_r^0,c
  4701  00095A  0EFF               	movlw	high STR_45
  4702  00095C  6E06               	movwf	(strncmp@_r+1)^0,c
  4703  00095E  0E00               	movlw	0
  4704  000960  6E08               	movwf	(strncmp@n+1)^0,c
  4705  000962  0E03               	movlw	3
  4706  000964  6E07               	movwf	strncmp@n^0,c
  4707  000966  ECB9  F019         	call	_strncmp	;wreg free
  4708  00096A  5003               	movf	?_strncmp^0,w,c
  4709  00096C  1004               	iorwf	(?_strncmp+1)^0,w,c
  4710  00096E  A4D8               	btfss	status,2,c
  4711  000970  EFBC  F004         	goto	u4141
  4712  000974  EFBE  F004         	goto	u4140
  4713  000978                     u4141:
  4714  000978  EFE6  F004         	goto	l4176
  4715  00097C                     u4140:
  4716  00097C                     
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4718  00097C  0E03               	movlw	3
  4719  00097E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4720  000982  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4721  000986  26DE               	addwf	postinc2,f,c
  4722  000988  0E00               	movlw	0
  4723  00098A  22DD               	addwfc	postdec2,f,c
  4724                           
  4725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4726  00098C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4727  000990  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4728  000994  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4729  000998  0E02               	movlw	2
  4730  00099A  26DE               	addwf	postinc2,f,c
  4731  00099C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4732  0009A0  0E00               	movlw	0
  4733  0009A2  22DD               	addwfc	postdec2,f,c
  4734  0009A4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4735  0009A8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4736  0009AC  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4737  0009B0  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4738  0009B4                     
  4739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  4740  0009B4  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4741  0009B8  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4742  0009BC  C0C3  FFDF         	movff	_nout,indf2
  4743  0009C0                     l4172:
  4744                           
  4745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  4746  0009C0  0E00               	movlw	0
  4747  0009C2  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  4748  0009C4  0E00               	movlw	0
  4749  0009C6  6E45               	movwf	?_vfpfcnvrt^0,c
  4750  0009C8  EF6E  F009         	goto	l658
  4751  0009CC                     l4176:
  4752                           
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4754  0009CC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4755  0009D0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4756  0009D4  CFDE F003          	movff	postinc2,strncmp@_l
  4757  0009D8  CFDD F004          	movff	postdec2,strncmp@_l+1
  4758  0009DC  0EDB               	movlw	low (STR_45+1)
  4759  0009DE  6E05               	movwf	strncmp@_r^0,c
  4760  0009E0  0EFF               	movlw	high (STR_45+1)
  4761  0009E2  6E06               	movwf	(strncmp@_r+1)^0,c
  4762  0009E4  0E00               	movlw	0
  4763  0009E6  6E08               	movwf	(strncmp@n+1)^0,c
  4764  0009E8  0E02               	movlw	2
  4765  0009EA  6E07               	movwf	strncmp@n^0,c
  4766  0009EC  ECB9  F019         	call	_strncmp	;wreg free
  4767  0009F0  5003               	movf	?_strncmp^0,w,c
  4768  0009F2  1004               	iorwf	(?_strncmp+1)^0,w,c
  4769  0009F4  A4D8               	btfss	status,2,c
  4770  0009F6  EFFF  F004         	goto	u4151
  4771  0009FA  EF01  F005         	goto	u4150
  4772  0009FE                     u4151:
  4773  0009FE  EF27  F005         	goto	l4186
  4774  000A02                     u4150:
  4775  000A02                     
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4777  000A02  0E02               	movlw	2
  4778  000A04  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4779  000A08  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4780  000A0C  26DE               	addwf	postinc2,f,c
  4781  000A0E  0E00               	movlw	0
  4782  000A10  22DD               	addwfc	postdec2,f,c
  4783                           
  4784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4785  000A12  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4786  000A16  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4787  000A1A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4788  000A1E  0E02               	movlw	2
  4789  000A20  26DE               	addwf	postinc2,f,c
  4790  000A22  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4791  000A26  0E00               	movlw	0
  4792  000A28  22DD               	addwfc	postdec2,f,c
  4793  000A2A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4794  000A2E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4795  000A32  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4796  000A36  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4797  000A3A                     
  4798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  4799  000A3A  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4800  000A3E  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4801  000A42  C0C3  FFDE         	movff	_nout,postinc2
  4802  000A46  C0C4  FFDD         	movff	_nout+1,postdec2
  4803  000A4A  EFE0  F004         	goto	l4172
  4804  000A4E                     l4186:
  4805                           
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4807  000A4E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4808  000A52  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4809  000A56  CFDE FFF6          	movff	postinc2,tblptrl
  4810  000A5A  CFDD FFF7          	movff	postdec2,tblptrh
  4811  000A5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4812  000A5E  6AF8               	clrf	tblptru,c
  4813  000A60                     	endif
  4814  000A60                     	if	0	;tblptru may be non-zero
  4815  000A60                     	endif
  4816  000A60  0008               	tblrd		*
  4817  000A62  50F5               	movf	tablat,w,c
  4818  000A64  0A6E               	xorlw	110
  4819  000A66  A4D8               	btfss	status,2,c
  4820  000A68  EF38  F005         	goto	u4161
  4821  000A6C  EF3A  F005         	goto	u4160
  4822  000A70                     u4161:
  4823  000A70  EF5F  F005         	goto	l4196
  4824  000A74                     u4160:
  4825  000A74                     
  4826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4827  000A74  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4828  000A78  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4829  000A7C  2ADE               	incf	postinc2,f,c
  4830  000A7E  0E00               	movlw	0
  4831  000A80  22DD               	addwfc	postdec2,f,c
  4832                           
  4833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4834  000A82  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4835  000A86  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4836  000A8A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4837  000A8E  0E02               	movlw	2
  4838  000A90  26DE               	addwf	postinc2,f,c
  4839  000A92  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4840  000A96  0E00               	movlw	0
  4841  000A98  22DD               	addwfc	postdec2,f,c
  4842  000A9A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4843  000A9E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4844  000AA2  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4845  000AA6  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4846  000AAA                     
  4847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  4848  000AAA  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4849  000AAE  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4850  000AB2  C0C3  FFDE         	movff	_nout,postinc2
  4851  000AB6  C0C4  FFDD         	movff	_nout+1,postdec2
  4852  000ABA  EFE0  F004         	goto	l4172
  4853  000ABE                     l4196:
  4854                           
  4855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4856  000ABE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4857  000AC2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4858  000AC6  CFDE F003          	movff	postinc2,strncmp@_l
  4859  000ACA  CFDD F004          	movff	postdec2,strncmp@_l+1
  4860  000ACE  0EF3               	movlw	low STR_55
  4861  000AD0  6E05               	movwf	strncmp@_r^0,c
  4862  000AD2  0EFF               	movlw	high STR_55
  4863  000AD4  6E06               	movwf	(strncmp@_r+1)^0,c
  4864  000AD6  0E00               	movlw	0
  4865  000AD8  6E08               	movwf	(strncmp@n+1)^0,c
  4866  000ADA  0E02               	movlw	2
  4867  000ADC  6E07               	movwf	strncmp@n^0,c
  4868  000ADE  ECB9  F019         	call	_strncmp	;wreg free
  4869  000AE2  5003               	movf	?_strncmp^0,w,c
  4870  000AE4  1004               	iorwf	(?_strncmp+1)^0,w,c
  4871  000AE6  A4D8               	btfss	status,2,c
  4872  000AE8  EF78  F005         	goto	u4171
  4873  000AEC  EF7A  F005         	goto	u4170
  4874  000AF0                     u4171:
  4875  000AF0  EFA0  F005         	goto	l4206
  4876  000AF4                     u4170:
  4877  000AF4                     
  4878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4879  000AF4  0E02               	movlw	2
  4880  000AF6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4881  000AFA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4882  000AFE  26DE               	addwf	postinc2,f,c
  4883  000B00  0E00               	movlw	0
  4884  000B02  22DD               	addwfc	postdec2,f,c
  4885                           
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4887  000B04  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4888  000B08  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4889  000B0C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4890  000B10  0E02               	movlw	2
  4891  000B12  26DE               	addwf	postinc2,f,c
  4892  000B14  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4893  000B18  0E00               	movlw	0
  4894  000B1A  22DD               	addwfc	postdec2,f,c
  4895  000B1C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4896  000B20  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4897  000B24  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4898  000B28  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4899  000B2C                     
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  4901  000B2C  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4902  000B30  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4903  000B34  C0C3  FFDE         	movff	_nout,postinc2
  4904  000B38  C0C4  FFDD         	movff	_nout+1,postdec2
  4905  000B3C  EFE0  F004         	goto	l4172
  4906  000B40                     l4206:
  4907                           
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  4909  000B40  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4910  000B44  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4911  000B48  CFDE FFF6          	movff	postinc2,tblptrl
  4912  000B4C  CFDD FFF7          	movff	postdec2,tblptrh
  4913  000B50                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4914  000B50  6AF8               	clrf	tblptru,c
  4915  000B52                     	endif
  4916  000B52                     	if	0	;tblptru may be non-zero
  4917  000B52                     	endif
  4918  000B52  0008               	tblrd		*
  4919  000B54  50F5               	movf	tablat,w,c
  4920  000B56  0A70               	xorlw	112
  4921  000B58  A4D8               	btfss	status,2,c
  4922  000B5A  EFB1  F005         	goto	u4181
  4923  000B5E  EFB3  F005         	goto	u4180
  4924  000B62                     u4181:
  4925  000B62  EFF7  F005         	goto	l4214
  4926  000B66                     u4180:
  4927  000B66                     
  4928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  4929  000B66  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4930  000B6A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4931  000B6E  2ADE               	incf	postinc2,f,c
  4932  000B70  0E00               	movlw	0
  4933  000B72  22DD               	addwfc	postdec2,f,c
  4934                           
  4935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  4936  000B74  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4937  000B78  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4938  000B7C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4939  000B80  0E02               	movlw	2
  4940  000B82  26DE               	addwf	postinc2,f,c
  4941  000B84  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4942  000B88  0E00               	movlw	0
  4943  000B8A  22DD               	addwfc	postdec2,f,c
  4944  000B8C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4945  000B90  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4946  000B94  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  4947  000B98  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  4948  000B9C  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4949  000BA0  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4950  000BA4  0100               	movlb	0	; () banked
  4951  000BA6  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4952  000BA8  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4953  000BAA  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4954  000BAC  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4955  000BAE  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4956  000BB0  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4957  000BB2                     
  4958                           ; BSR set to: 0
  4959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  4960  000BB2  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  4961  000BB6  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4962  000BBA  C073  F020         	movff	vfpfcnvrt@llu,xtoa@d
  4963  000BBE  C074  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4964  000BC2  C075  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4965  000BC6  C076  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4966  000BCA  C077  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4967  000BCE  C078  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4968  000BD2  C079  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4969  000BD6  C07A  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4970  000BDA  0E78               	movlw	120
  4971  000BDC  6E28               	movwf	xtoa@x^0,c
  4972  000BDE  ECB6  F00E         	call	_xtoa	;wreg free
  4973  000BE2  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  4974  000BE6  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4975  000BEA  EF6E  F009         	goto	l658
  4976  000BEE                     l4214:
  4977                           
  4978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4979  000BEE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4980  000BF2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4981  000BF6  CFDE FFF6          	movff	postinc2,tblptrl
  4982  000BFA  CFDD FFF7          	movff	postdec2,tblptrh
  4983  000BFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4984  000BFE  6AF8               	clrf	tblptru,c
  4985  000C00                     	endif
  4986  000C00                     	if	0	;tblptru may be non-zero
  4987  000C00                     	endif
  4988  000C00  0008               	tblrd		*
  4989  000C02  50F5               	movf	tablat,w,c
  4990  000C04  0A73               	xorlw	115
  4991  000C06  A4D8               	btfss	status,2,c
  4992  000C08  EF08  F006         	goto	u4191
  4993  000C0C  EF0A  F006         	goto	u4190
  4994  000C10                     u4191:
  4995  000C10  EF35  F006         	goto	l4222
  4996  000C14                     u4190:
  4997  000C14                     
  4998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4999  000C14  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5000  000C18  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5001  000C1C  2ADE               	incf	postinc2,f,c
  5002  000C1E  0E00               	movlw	0
  5003  000C20  22DD               	addwfc	postdec2,f,c
  5004                           
  5005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5006  000C22  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5007  000C26  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5008  000C2A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5009  000C2E  0E02               	movlw	2
  5010  000C30  26DE               	addwf	postinc2,f,c
  5011  000C32  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5012  000C36  0E00               	movlw	0
  5013  000C38  22DD               	addwfc	postdec2,f,c
  5014  000C3A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5015  000C3E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5016  000C42  CFDE F060          	movff	postinc2,vfpfcnvrt@cp
  5017  000C46  CFDD F061          	movff	postdec2,vfpfcnvrt@cp+1
  5018  000C4A                     
  5019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5020  000C4A  C045  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  5021  000C4E  C046  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5022  000C52  C060  F00E         	movff	vfpfcnvrt@cp,stoa@s
  5023  000C56  C061  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5024  000C5A  EC6D  F015         	call	_stoa	;wreg free
  5025  000C5E  C00C  F045         	movff	?_stoa,?_vfpfcnvrt
  5026  000C62  C00D  F046         	movff	?_stoa+1,?_vfpfcnvrt+1
  5027  000C66  EF6E  F009         	goto	l658
  5028  000C6A                     l4222:
  5029                           
  5030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5031  000C6A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5032  000C6E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5033  000C72  CFDE F003          	movff	postinc2,strncmp@_l
  5034  000C76  CFDD F004          	movff	postdec2,strncmp@_l+1
  5035  000C7A  0EE2               	movlw	low STR_60
  5036  000C7C  6E05               	movwf	strncmp@_r^0,c
  5037  000C7E  0EFF               	movlw	high STR_60
  5038  000C80  6E06               	movwf	(strncmp@_r+1)^0,c
  5039  000C82  0E00               	movlw	0
  5040  000C84  6E08               	movwf	(strncmp@n+1)^0,c
  5041  000C86  0E03               	movlw	3
  5042  000C88  6E07               	movwf	strncmp@n^0,c
  5043  000C8A  ECB9  F019         	call	_strncmp	;wreg free
  5044  000C8E  5003               	movf	?_strncmp^0,w,c
  5045  000C90  1004               	iorwf	(?_strncmp+1)^0,w,c
  5046  000C92  A4D8               	btfss	status,2,c
  5047  000C94  EF4E  F006         	goto	u4201
  5048  000C98  EF50  F006         	goto	u4200
  5049  000C9C                     u4201:
  5050  000C9C  EF90  F006         	goto	l4230
  5051  000CA0                     u4200:
  5052  000CA0                     
  5053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5054  000CA0  0E03               	movlw	3
  5055  000CA2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5056  000CA6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5057  000CAA  26DE               	addwf	postinc2,f,c
  5058  000CAC  0E00               	movlw	0
  5059  000CAE  22DD               	addwfc	postdec2,f,c
  5060                           
  5061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5062  000CB0  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5063  000CB4  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5064  000CB8  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5065  000CBC  0E02               	movlw	2
  5066  000CBE  26DE               	addwf	postinc2,f,c
  5067  000CC0  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5068  000CC4  0E00               	movlw	0
  5069  000CC6  22DD               	addwfc	postdec2,f,c
  5070  000CC8  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5071  000CCC  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5072  000CD0  50DF               	movf	indf2,w,c
  5073  000CD2  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  5074  000CD4  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  5075  000CD6  0100               	movlb	0	; () banked
  5076  000CD8  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  5077  000CDA  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5078  000CDC  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5079  000CDE  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5080  000CE0  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5081  000CE2  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5082  000CE4  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5083  000CE6  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5084  000CE8                     l4226:
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5088  000CE8  C045  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  5089  000CEC  C046  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5090  000CF0  C073  F020         	movff	vfpfcnvrt@llu,utoa@d
  5091  000CF4  C074  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5092  000CF8  C075  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5093  000CFC  C076  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5094  000D00  C077  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5095  000D04  C078  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5096  000D08  C079  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5097  000D0C  C07A  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5098  000D10  EC20  F010         	call	_utoa	;wreg free
  5099  000D14  C01E  F045         	movff	?_utoa,?_vfpfcnvrt
  5100  000D18  C01F  F046         	movff	?_utoa+1,?_vfpfcnvrt+1
  5101  000D1C  EF6E  F009         	goto	l658
  5102  000D20                     l4230:
  5103                           
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5105  000D20  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5106  000D24  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5107  000D28  CFDE F003          	movff	postinc2,strncmp@_l
  5108  000D2C  CFDD F004          	movff	postdec2,strncmp@_l+1
  5109  000D30  0EE3               	movlw	low (STR_60+1)
  5110  000D32  6E05               	movwf	strncmp@_r^0,c
  5111  000D34  0EFF               	movlw	high (STR_60+1)
  5112  000D36  6E06               	movwf	(strncmp@_r+1)^0,c
  5113  000D38  0E00               	movlw	0
  5114  000D3A  6E08               	movwf	(strncmp@n+1)^0,c
  5115  000D3C  0E02               	movlw	2
  5116  000D3E  6E07               	movwf	strncmp@n^0,c
  5117  000D40  ECB9  F019         	call	_strncmp	;wreg free
  5118  000D44  5003               	movf	?_strncmp^0,w,c
  5119  000D46  1004               	iorwf	(?_strncmp+1)^0,w,c
  5120  000D48  A4D8               	btfss	status,2,c
  5121  000D4A  EFA9  F006         	goto	u4211
  5122  000D4E  EFAB  F006         	goto	u4210
  5123  000D52                     u4211:
  5124  000D52  EFD4  F006         	goto	l4238
  5125  000D56                     u4210:
  5126  000D56                     
  5127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5128  000D56  0E02               	movlw	2
  5129  000D58  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5130  000D5C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5131  000D60  26DE               	addwf	postinc2,f,c
  5132  000D62  0E00               	movlw	0
  5133  000D64  22DD               	addwfc	postdec2,f,c
  5134                           
  5135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5136  000D66  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5137  000D6A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5138  000D6E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5139  000D72  0E02               	movlw	2
  5140  000D74  26DE               	addwf	postinc2,f,c
  5141  000D76  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5142  000D7A  0E00               	movlw	0
  5143  000D7C  22DD               	addwfc	postdec2,f,c
  5144  000D7E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5145  000D82  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5146  000D86  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5147  000D8A  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5148  000D8E  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5149  000D92  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5150  000D96  0100               	movlb	0	; () banked
  5151  000D98  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5152  000D9A  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5153  000D9C  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5154  000D9E  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5155  000DA0  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5156  000DA2  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5157  000DA4  EF74  F006         	goto	l4226
  5158  000DA8                     l4238:
  5159                           
  5160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5161  000DA8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5162  000DAC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5163  000DB0  CFDE FFF6          	movff	postinc2,tblptrl
  5164  000DB4  CFDD FFF7          	movff	postdec2,tblptrh
  5165  000DB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5166  000DB8  6AF8               	clrf	tblptru,c
  5167  000DBA                     	endif
  5168  000DBA                     	if	0	;tblptru may be non-zero
  5169  000DBA                     	endif
  5170  000DBA  0008               	tblrd		*
  5171  000DBC  50F5               	movf	tablat,w,c
  5172  000DBE  0A75               	xorlw	117
  5173  000DC0  A4D8               	btfss	status,2,c
  5174  000DC2  EFE5  F006         	goto	u4221
  5175  000DC6  EFE7  F006         	goto	u4220
  5176  000DCA                     u4221:
  5177  000DCA  EF0F  F007         	goto	l4246
  5178  000DCE                     u4220:
  5179  000DCE                     
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5181  000DCE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5182  000DD2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5183  000DD6  2ADE               	incf	postinc2,f,c
  5184  000DD8  0E00               	movlw	0
  5185  000DDA  22DD               	addwfc	postdec2,f,c
  5186                           
  5187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5188  000DDC  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5189  000DE0  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5190  000DE4  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5191  000DE8  0E02               	movlw	2
  5192  000DEA  26DE               	addwf	postinc2,f,c
  5193  000DEC  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5194  000DF0  0E00               	movlw	0
  5195  000DF2  22DD               	addwfc	postdec2,f,c
  5196  000DF4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5197  000DF8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5198  000DFC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5199  000E00  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5200  000E04  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5201  000E08  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5202  000E0C  0100               	movlb	0	; () banked
  5203  000E0E  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5204  000E10  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5205  000E12  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5206  000E14  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5207  000E16  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5208  000E18  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5209  000E1A  EF74  F006         	goto	l4226
  5210  000E1E                     l4246:
  5211                           
  5212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5213  000E1E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5214  000E22  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5215  000E26  CFDE F003          	movff	postinc2,strncmp@_l
  5216  000E2A  CFDD F004          	movff	postdec2,strncmp@_l+1
  5217  000E2E  0EF9               	movlw	low STR_70
  5218  000E30  6E05               	movwf	strncmp@_r^0,c
  5219  000E32  0EFF               	movlw	high STR_70
  5220  000E34  6E06               	movwf	(strncmp@_r+1)^0,c
  5221  000E36  0E00               	movlw	0
  5222  000E38  6E08               	movwf	(strncmp@n+1)^0,c
  5223  000E3A  0E02               	movlw	2
  5224  000E3C  6E07               	movwf	strncmp@n^0,c
  5225  000E3E  ECB9  F019         	call	_strncmp	;wreg free
  5226  000E42  5003               	movf	?_strncmp^0,w,c
  5227  000E44  1004               	iorwf	(?_strncmp+1)^0,w,c
  5228  000E46  A4D8               	btfss	status,2,c
  5229  000E48  EF28  F007         	goto	u4231
  5230  000E4C  EF2A  F007         	goto	u4230
  5231  000E50                     u4231:
  5232  000E50  EF53  F007         	goto	l4254
  5233  000E54                     u4230:
  5234  000E54                     
  5235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5236  000E54  0E02               	movlw	2
  5237  000E56  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5238  000E5A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5239  000E5E  26DE               	addwf	postinc2,f,c
  5240  000E60  0E00               	movlw	0
  5241  000E62  22DD               	addwfc	postdec2,f,c
  5242                           
  5243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5244  000E64  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5245  000E68  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5246  000E6C  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5247  000E70  0E02               	movlw	2
  5248  000E72  26DE               	addwf	postinc2,f,c
  5249  000E74  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5250  000E78  0E00               	movlw	0
  5251  000E7A  22DD               	addwfc	postdec2,f,c
  5252  000E7C  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5253  000E80  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5254  000E84  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5255  000E88  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5256  000E8C  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5257  000E90  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5258  000E94  0100               	movlb	0	; () banked
  5259  000E96  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5260  000E98  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5261  000E9A  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5262  000E9C  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5263  000E9E  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5264  000EA0  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5265  000EA2  EF74  F006         	goto	l4226
  5266  000EA6                     l4254:
  5267                           
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5269  000EA6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5270  000EAA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5271  000EAE  CFDE F003          	movff	postinc2,strncmp@_l
  5272  000EB2  CFDD F004          	movff	postdec2,strncmp@_l+1
  5273  000EB6  0EE6               	movlw	low STR_75
  5274  000EB8  6E05               	movwf	strncmp@_r^0,c
  5275  000EBA  0EFF               	movlw	high STR_75
  5276  000EBC  6E06               	movwf	(strncmp@_r+1)^0,c
  5277  000EBE  0E00               	movlw	0
  5278  000EC0  6E08               	movwf	(strncmp@n+1)^0,c
  5279  000EC2  0E03               	movlw	3
  5280  000EC4  6E07               	movwf	strncmp@n^0,c
  5281  000EC6  ECB9  F019         	call	_strncmp	;wreg free
  5282  000ECA  5003               	movf	?_strncmp^0,w,c
  5283  000ECC  1004               	iorwf	(?_strncmp+1)^0,w,c
  5284  000ECE  B4D8               	btfsc	status,2,c
  5285  000ED0  EF6C  F007         	goto	u4241
  5286  000ED4  EF6E  F007         	goto	u4240
  5287  000ED8                     u4241:
  5288  000ED8  EF89  F007         	goto	l4258
  5289  000EDC                     u4240:
  5290  000EDC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5291  000EE0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5292  000EE4  CFDE F003          	movff	postinc2,strncmp@_l
  5293  000EE8  CFDD F004          	movff	postdec2,strncmp@_l+1
  5294  000EEC  0ECE               	movlw	low STR_79
  5295  000EEE  6E05               	movwf	strncmp@_r^0,c
  5296  000EF0  0EFF               	movlw	high STR_79
  5297  000EF2  6E06               	movwf	(strncmp@_r+1)^0,c
  5298  000EF4  0E00               	movlw	0
  5299  000EF6  6E08               	movwf	(strncmp@n+1)^0,c
  5300  000EF8  0E03               	movlw	3
  5301  000EFA  6E07               	movwf	strncmp@n^0,c
  5302  000EFC  ECB9  F019         	call	_strncmp	;wreg free
  5303  000F00  5003               	movf	?_strncmp^0,w,c
  5304  000F02  1004               	iorwf	(?_strncmp+1)^0,w,c
  5305  000F04  A4D8               	btfss	status,2,c
  5306  000F06  EF87  F007         	goto	u4251
  5307  000F0A  EF89  F007         	goto	u4250
  5308  000F0E                     u4251:
  5309  000F0E  EFDF  F007         	goto	l4268
  5310  000F12                     u4250:
  5311  000F12                     l4258:
  5312                           
  5313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5314  000F12  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5315  000F16  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5316  000F1A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  5317  000F1E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  5318  000F22  0E02               	movlw	2
  5319  000F24  264B               	addwf	??_vfpfcnvrt^0,f,c
  5320  000F26  0E00               	movlw	0
  5321  000F28  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5322  000F2A  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5323  000F2E  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5324  000F32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5325  000F32  6AF8               	clrf	tblptru,c
  5326  000F34                     	endif
  5327  000F34                     	if	0	;tblptru may be non-zero
  5328  000F34                     	endif
  5329  000F34  0008               	tblrd		*
  5330  000F36  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5331  000F3A                     
  5332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5333  000F3A  0E03               	movlw	3
  5334  000F3C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5335  000F40  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5336  000F44  26DE               	addwf	postinc2,f,c
  5337  000F46  0E00               	movlw	0
  5338  000F48  22DD               	addwfc	postdec2,f,c
  5339  000F4A                     
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5341  000F4A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5342  000F4E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5343  000F52  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5344  000F56  0E02               	movlw	2
  5345  000F58  26DE               	addwf	postinc2,f,c
  5346  000F5A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5347  000F5E  0E00               	movlw	0
  5348  000F60  22DD               	addwfc	postdec2,f,c
  5349  000F62  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5350  000F66  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5351  000F6A  50DF               	movf	indf2,w,c
  5352  000F6C  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  5353  000F6E  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  5354  000F70  0100               	movlb	0	; () banked
  5355  000F72  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  5356  000F74  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5357  000F76  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5358  000F78  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5359  000F7A  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5360  000F7C  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5361  000F7E  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5362  000F80  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5363  000F82                     l4264:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5367  000F82  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  5368  000F86  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5369  000F8A  C073  F020         	movff	vfpfcnvrt@llu,xtoa@d
  5370  000F8E  C074  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5371  000F92  C075  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5372  000F96  C076  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5373  000F9A  C077  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5374  000F9E  C078  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5375  000FA2  C079  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5376  000FA6  C07A  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5377  000FAA  C072  F028         	movff	vfpfcnvrt@c,xtoa@x
  5378  000FAE  ECB6  F00E         	call	_xtoa	;wreg free
  5379  000FB2  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  5380  000FB6  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5381  000FBA  EF6E  F009         	goto	l658
  5382  000FBE                     l4268:
  5383                           
  5384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5385  000FBE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5386  000FC2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5387  000FC6  CFDE F003          	movff	postinc2,strncmp@_l
  5388  000FCA  CFDD F004          	movff	postdec2,strncmp@_l+1
  5389  000FCE  0EE7               	movlw	low (STR_75+1)
  5390  000FD0  6E05               	movwf	strncmp@_r^0,c
  5391  000FD2  0EFF               	movlw	high (STR_75+1)
  5392  000FD4  6E06               	movwf	(strncmp@_r+1)^0,c
  5393  000FD6  0E00               	movlw	0
  5394  000FD8  6E08               	movwf	(strncmp@n+1)^0,c
  5395  000FDA  0E02               	movlw	2
  5396  000FDC  6E07               	movwf	strncmp@n^0,c
  5397  000FDE  ECB9  F019         	call	_strncmp	;wreg free
  5398  000FE2  5003               	movf	?_strncmp^0,w,c
  5399  000FE4  1004               	iorwf	(?_strncmp+1)^0,w,c
  5400  000FE6  B4D8               	btfsc	status,2,c
  5401  000FE8  EFF8  F007         	goto	u4261
  5402  000FEC  EFFA  F007         	goto	u4260
  5403  000FF0                     u4261:
  5404  000FF0  EF15  F008         	goto	l4272
  5405  000FF4                     u4260:
  5406  000FF4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5407  000FF8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5408  000FFC  CFDE F003          	movff	postinc2,strncmp@_l
  5409  001000  CFDD F004          	movff	postdec2,strncmp@_l+1
  5410  001004  0ECF               	movlw	low (STR_79+1)
  5411  001006  6E05               	movwf	strncmp@_r^0,c
  5412  001008  0EFF               	movlw	high (STR_79+1)
  5413  00100A  6E06               	movwf	(strncmp@_r+1)^0,c
  5414  00100C  0E00               	movlw	0
  5415  00100E  6E08               	movwf	(strncmp@n+1)^0,c
  5416  001010  0E02               	movlw	2
  5417  001012  6E07               	movwf	strncmp@n^0,c
  5418  001014  ECB9  F019         	call	_strncmp	;wreg free
  5419  001018  5003               	movf	?_strncmp^0,w,c
  5420  00101A  1004               	iorwf	(?_strncmp+1)^0,w,c
  5421  00101C  A4D8               	btfss	status,2,c
  5422  00101E  EF13  F008         	goto	u4271
  5423  001022  EF15  F008         	goto	u4270
  5424  001026                     u4271:
  5425  001026  EF52  F008         	goto	l4282
  5426  00102A                     u4270:
  5427  00102A                     l4272:
  5428                           
  5429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5430  00102A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5431  00102E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5432  001032  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  5433  001036  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  5434  00103A  0E01               	movlw	1
  5435  00103C  264B               	addwf	??_vfpfcnvrt^0,f,c
  5436  00103E  0E00               	movlw	0
  5437  001040  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5438  001042  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5439  001046  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5440  00104A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5441  00104A  6AF8               	clrf	tblptru,c
  5442  00104C                     	endif
  5443  00104C                     	if	0	;tblptru may be non-zero
  5444  00104C                     	endif
  5445  00104C  0008               	tblrd		*
  5446  00104E  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5447  001052                     
  5448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5449  001052  0E02               	movlw	2
  5450  001054  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5451  001058  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5452  00105C  26DE               	addwf	postinc2,f,c
  5453  00105E  0E00               	movlw	0
  5454  001060  22DD               	addwfc	postdec2,f,c
  5455  001062                     
  5456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5457  001062  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5458  001066  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5459  00106A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5460  00106E  0E02               	movlw	2
  5461  001070  26DE               	addwf	postinc2,f,c
  5462  001072  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5463  001076  0E00               	movlw	0
  5464  001078  22DD               	addwfc	postdec2,f,c
  5465  00107A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5466  00107E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5467  001082  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5468  001086  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5469  00108A  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5470  00108E  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5471  001092  0100               	movlb	0	; () banked
  5472  001094  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5473  001096  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5474  001098  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5475  00109A  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5476  00109C  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5477  00109E  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5478  0010A0  EFC1  F007         	goto	l4264
  5479  0010A4                     l4282:
  5480                           
  5481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5482  0010A4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5483  0010A8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5484  0010AC  CFDE FFF6          	movff	postinc2,tblptrl
  5485  0010B0  CFDD FFF7          	movff	postdec2,tblptrh
  5486  0010B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5487  0010B4  6AF8               	clrf	tblptru,c
  5488  0010B6                     	endif
  5489  0010B6                     	if	0	;tblptru may be non-zero
  5490  0010B6                     	endif
  5491  0010B6  0008               	tblrd		*
  5492  0010B8  50F5               	movf	tablat,w,c
  5493  0010BA  0A78               	xorlw	120
  5494  0010BC  B4D8               	btfsc	status,2,c
  5495  0010BE  EF63  F008         	goto	u4281
  5496  0010C2  EF65  F008         	goto	u4280
  5497  0010C6                     u4281:
  5498  0010C6  EF78  F008         	goto	l4286
  5499  0010CA                     u4280:
  5500  0010CA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5501  0010CE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5502  0010D2  CFDE FFF6          	movff	postinc2,tblptrl
  5503  0010D6  CFDD FFF7          	movff	postdec2,tblptrh
  5504  0010DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5505  0010DA  6AF8               	clrf	tblptru,c
  5506  0010DC                     	endif
  5507  0010DC                     	if	0	;tblptru may be non-zero
  5508  0010DC                     	endif
  5509  0010DC  0008               	tblrd		*
  5510  0010DE  50F5               	movf	tablat,w,c
  5511  0010E0  0A58               	xorlw	88
  5512  0010E2  A4D8               	btfss	status,2,c
  5513  0010E4  EF76  F008         	goto	u4291
  5514  0010E8  EF78  F008         	goto	u4290
  5515  0010EC                     u4291:
  5516  0010EC  EFAC  F008         	goto	l4296
  5517  0010F0                     u4290:
  5518  0010F0                     l4286:
  5519                           
  5520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5521  0010F0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5522  0010F4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5523  0010F8  CFDE FFF6          	movff	postinc2,tblptrl
  5524  0010FC  CFDD FFF7          	movff	postdec2,tblptrh
  5525  001100                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5526  001100  6AF8               	clrf	tblptru,c
  5527  001102                     	endif
  5528  001102                     	if	0	;tblptru may be non-zero
  5529  001102                     	endif
  5530  001102  0008               	tblrd		*
  5531  001104  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5532  001108                     
  5533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5534  001108  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5535  00110C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5536  001110  2ADE               	incf	postinc2,f,c
  5537  001112  0E00               	movlw	0
  5538  001114  22DD               	addwfc	postdec2,f,c
  5539  001116                     
  5540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5541  001116  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5542  00111A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5543  00111E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5544  001122  0E02               	movlw	2
  5545  001124  26DE               	addwf	postinc2,f,c
  5546  001126  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5547  00112A  0E00               	movlw	0
  5548  00112C  22DD               	addwfc	postdec2,f,c
  5549  00112E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5550  001132  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5551  001136  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5552  00113A  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5553  00113E  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5554  001142  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5555  001146  0100               	movlb	0	; () banked
  5556  001148  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5557  00114A  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5558  00114C  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5559  00114E  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5560  001150  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5561  001152  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5562  001154  EFC1  F007         	goto	l4264
  5563  001158                     l4296:
  5564                           
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  5566  001158  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5567  00115C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5568  001160  CFDE F003          	movff	postinc2,strncmp@_l
  5569  001164  CFDD F004          	movff	postdec2,strncmp@_l+1
  5570  001168  0EFC               	movlw	low STR_93
  5571  00116A  6E05               	movwf	strncmp@_r^0,c
  5572  00116C  0EFF               	movlw	high STR_93
  5573  00116E  6E06               	movwf	(strncmp@_r+1)^0,c
  5574  001170  0E00               	movlw	0
  5575  001172  6E08               	movwf	(strncmp@n+1)^0,c
  5576  001174  0E02               	movlw	2
  5577  001176  6E07               	movwf	strncmp@n^0,c
  5578  001178  ECB9  F019         	call	_strncmp	;wreg free
  5579  00117C  5003               	movf	?_strncmp^0,w,c
  5580  00117E  1004               	iorwf	(?_strncmp+1)^0,w,c
  5581  001180  B4D8               	btfsc	status,2,c
  5582  001182  EFC5  F008         	goto	u4301
  5583  001186  EFC7  F008         	goto	u4300
  5584  00118A                     u4301:
  5585  00118A  EFE2  F008         	goto	l4300
  5586  00118E                     u4300:
  5587  00118E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5588  001192  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5589  001196  CFDE F003          	movff	postinc2,strncmp@_l
  5590  00119A  CFDD F004          	movff	postdec2,strncmp@_l+1
  5591  00119E  0EEA               	movlw	low STR_97
  5592  0011A0  6E05               	movwf	strncmp@_r^0,c
  5593  0011A2  0EFF               	movlw	high STR_97
  5594  0011A4  6E06               	movwf	(strncmp@_r+1)^0,c
  5595  0011A6  0E00               	movlw	0
  5596  0011A8  6E08               	movwf	(strncmp@n+1)^0,c
  5597  0011AA  0E02               	movlw	2
  5598  0011AC  6E07               	movwf	strncmp@n^0,c
  5599  0011AE  ECB9  F019         	call	_strncmp	;wreg free
  5600  0011B2  5003               	movf	?_strncmp^0,w,c
  5601  0011B4  1004               	iorwf	(?_strncmp+1)^0,w,c
  5602  0011B6  A4D8               	btfss	status,2,c
  5603  0011B8  EFE0  F008         	goto	u4311
  5604  0011BC  EFE2  F008         	goto	u4310
  5605  0011C0                     u4311:
  5606  0011C0  EF1F  F009         	goto	l4310
  5607  0011C4                     u4310:
  5608  0011C4                     l4300:
  5609                           
  5610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  5611  0011C4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5612  0011C8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5613  0011CC  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  5614  0011D0  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  5615  0011D4  0E01               	movlw	1
  5616  0011D6  264B               	addwf	??_vfpfcnvrt^0,f,c
  5617  0011D8  0E00               	movlw	0
  5618  0011DA  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5619  0011DC  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5620  0011E0  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5621  0011E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5622  0011E4  6AF8               	clrf	tblptru,c
  5623  0011E6                     	endif
  5624  0011E6                     	if	0	;tblptru may be non-zero
  5625  0011E6                     	endif
  5626  0011E6  0008               	tblrd		*
  5627  0011E8  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5628  0011EC                     
  5629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5630  0011EC  0E02               	movlw	2
  5631  0011EE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5632  0011F2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5633  0011F6  26DE               	addwf	postinc2,f,c
  5634  0011F8  0E00               	movlw	0
  5635  0011FA  22DD               	addwfc	postdec2,f,c
  5636  0011FC                     
  5637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5638  0011FC  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5639  001200  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5640  001204  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5641  001208  0E02               	movlw	2
  5642  00120A  26DE               	addwf	postinc2,f,c
  5643  00120C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5644  001210  0E00               	movlw	0
  5645  001212  22DD               	addwfc	postdec2,f,c
  5646  001214  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5647  001218  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5648  00121C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5649  001220  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5650  001224  C04D  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5651  001228  C04E  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5652  00122C  0100               	movlb	0	; () banked
  5653  00122E  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5654  001230  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5655  001232  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5656  001234  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5657  001236  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5658  001238  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5659  00123A  EFC1  F007         	goto	l4264
  5660  00123E                     l4310:
  5661                           
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5663  00123E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5664  001242  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5665  001246  CFDE FFF6          	movff	postinc2,tblptrl
  5666  00124A  CFDD FFF7          	movff	postdec2,tblptrh
  5667  00124E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5668  00124E  6AF8               	clrf	tblptru,c
  5669  001250                     	endif
  5670  001250                     	if	0	;tblptru may be non-zero
  5671  001250                     	endif
  5672  001250  0008               	tblrd		*
  5673  001252  50F5               	movf	tablat,w,c
  5674  001254  0A25               	xorlw	37
  5675  001256  A4D8               	btfss	status,2,c
  5676  001258  EF30  F009         	goto	u4321
  5677  00125C  EF32  F009         	goto	u4320
  5678  001260                     u4321:
  5679  001260  EF49  F009         	goto	l4320
  5680  001264                     u4320:
  5681  001264                     
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5683  001264  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5684  001268  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5685  00126C  2ADE               	incf	postinc2,f,c
  5686  00126E  0E00               	movlw	0
  5687  001270  22DD               	addwfc	postdec2,f,c
  5688  001272                     
  5689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5690  001272  0E00               	movlw	0
  5691  001274  6E04               	movwf	(fputc@c+1)^0,c
  5692  001276  0E25               	movlw	37
  5693  001278  6E03               	movwf	fputc@c^0,c
  5694  00127A  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  5695  00127E  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5696  001282  EC96  F01A         	call	_fputc	;wreg free
  5697  001286                     l4316:
  5698                           
  5699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5700  001286  0E00               	movlw	0
  5701  001288  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  5702  00128A  0E01               	movlw	1
  5703  00128C  6E45               	movwf	?_vfpfcnvrt^0,c
  5704  00128E  EF6E  F009         	goto	l658
  5705  001292                     l4320:
  5706                           
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5708  001292  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5709  001296  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5710  00129A  2ADE               	incf	postinc2,f,c
  5711  00129C  0E00               	movlw	0
  5712  00129E  22DD               	addwfc	postdec2,f,c
  5713  0012A0  EFE0  F004         	goto	l4172
  5714  0012A4                     l4326:
  5715                           
  5716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5717  0012A4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5718  0012A8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5719  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  5720  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  5721  0012B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5722  0012B4  6AF8               	clrf	tblptru,c
  5723  0012B6                     	endif
  5724  0012B6                     	if	0	;tblptru may be non-zero
  5725  0012B6                     	endif
  5726  0012B6  0008               	tblrd		*
  5727  0012B8  50F5               	movf	tablat,w,c
  5728  0012BA  6E03               	movwf	fputc@c^0,c
  5729  0012BC  6A04               	clrf	(fputc@c+1)^0,c
  5730  0012BE  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  5731  0012C2  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5732  0012C6  EC96  F01A         	call	_fputc	;wreg free
  5733  0012CA                     
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5735  0012CA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5736  0012CE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5737  0012D2  2ADE               	incf	postinc2,f,c
  5738  0012D4  0E00               	movlw	0
  5739  0012D6  22DD               	addwfc	postdec2,f,c
  5740  0012D8  EF43  F009         	goto	l4316
  5741  0012DC                     l658:
  5742  0012DC  0012               	return		;funcret
  5743  0012DE                     __end_of_vfpfcnvrt:
  5744                           	opt callstack 0
  5745                           
  5746 ;; *************** function _xtoa *****************
  5747 ;; Defined at:
  5748 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5751 ;;		 -> vsnprintf@f(6), 
  5752 ;;  d               8   31[COMRAM] unsigned long long 
  5753 ;;  x               1   39[COMRAM] unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  n               8   56[COMRAM] unsigned long long 
  5756 ;;  c               2   66[COMRAM] int 
  5757 ;;  i               2   64[COMRAM] int 
  5758 ;;  w               2   54[COMRAM] int 
  5759 ;;  p               2   52[COMRAM] int 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  2   29[COMRAM] int 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5769 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5771 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5772 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5773 ;;Total ram usage:       39 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    8
  5776 ;; This function calls:
  5777 ;;		_isalpha
  5778 ;;		_isupper
  5779 ;;		_pad
  5780 ;;		_toupper
  5781 ;; This function is called by:
  5782 ;;		_vfpfcnvrt
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text5
  5787  001D6C                     __ptext5:
  5788                           	opt callstack 0
  5789  001D6C                     _xtoa:
  5790                           	opt callstack 18
  5791  001D6C                     
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5793  001D6C  BE58               	btfsc	(_prec+1)^0,7,c
  5794  001D6E  EFBB  F00E         	goto	u3571
  5795  001D72  EFBD  F00E         	goto	u3570
  5796  001D76                     u3571:
  5797  001D76  EFBE  F00E         	goto	l3860
  5798  001D7A                     u3570:
  5799  001D7A                     
  5800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5801  001D7A  9259               	bcf	_flags^0,1,c
  5802  001D7C                     l3860:
  5803                           
  5804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5805  001D7C  BE58               	btfsc	(_prec+1)^0,7,c
  5806  001D7E  EFCB  F00E         	goto	u3580
  5807  001D82  5058               	movf	(_prec+1)^0,w,c
  5808  001D84  E106               	bnz	u3581
  5809  001D86  0457               	decf	_prec^0,w,c
  5810  001D88  B0D8               	btfsc	status,0,c
  5811  001D8A  EFC9  F00E         	goto	u3581
  5812  001D8E  EFCB  F00E         	goto	u3580
  5813  001D92                     u3581:
  5814  001D92  EFD1  F00E         	goto	l596
  5815  001D96                     u3580:
  5816  001D96  0E00               	movlw	0
  5817  001D98  6E36               	movwf	(xtoa@p+1)^0,c
  5818  001D9A  0E01               	movlw	1
  5819  001D9C  6E35               	movwf	xtoa@p^0,c
  5820  001D9E  EFD5  F00E         	goto	l598
  5821  001DA2                     l596:
  5822  001DA2  C057  F035         	movff	_prec,xtoa@p
  5823  001DA6  C058  F036         	movff	_prec+1,xtoa@p+1
  5824  001DAA                     l598:
  5825                           
  5826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5827  001DAA  C0C5  F037         	movff	_width,xtoa@w
  5828  001DAE  C0C6  F038         	movff	_width+1,xtoa@w+1
  5829                           
  5830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5831  001DB2  A859               	btfss	_flags^0,4,c
  5832  001DB4  EFDE  F00E         	goto	u3591
  5833  001DB8  EFE0  F00E         	goto	u3590
  5834  001DBC                     u3591:
  5835  001DBC  EFE4  F00E         	goto	l3866
  5836  001DC0                     u3590:
  5837  001DC0                     
  5838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5839  001DC0  0EFE               	movlw	254
  5840  001DC2  2637               	addwf	xtoa@w^0,f,c
  5841  001DC4  0EFF               	movlw	255
  5842  001DC6  2238               	addwfc	(xtoa@w+1)^0,f,c
  5843  001DC8                     l3866:
  5844                           
  5845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5846  001DC8  C020  F039         	movff	xtoa@d,xtoa@n
  5847  001DCC  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  5848  001DD0  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  5849  001DD4  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  5850  001DD8  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  5851  001DDC  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  5852  001DE0  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  5853  001DE4  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  5854  001DE8                     
  5855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5856  001DE8  0E00               	movlw	0
  5857  001DEA  6E42               	movwf	(xtoa@i+1)^0,c
  5858  001DEC  0E1F               	movlw	31
  5859  001DEE  6E41               	movwf	xtoa@i^0,c
  5860  001DF0                     
  5861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5862  001DF0  0E00               	movlw	0
  5863  001DF2  0100               	movlb	0	; () banked
  5864  001DF4  6FEB               	movwf	(_dbuf+31)& (0+255),b
  5865                           
  5866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5867  001DF6  EFB0  F00F         	goto	l3902
  5868  001DFA                     l3872:
  5869                           
  5870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5871  001DFA  0641               	decf	xtoa@i^0,f,c
  5872  001DFC  A0D8               	btfss	status,0,c
  5873  001DFE  0642               	decf	(xtoa@i+1)^0,f,c
  5874  001E00                     
  5875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5876  001E00  0E0F               	movlw	15
  5877  001E02  1439               	andwf	xtoa@n^0,w,c
  5878  001E04  6E43               	movwf	xtoa@c^0,c
  5879  001E06  6A44               	clrf	(xtoa@c+1)^0,c
  5880  001E08                     
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5882  001E08  BE44               	btfsc	(xtoa@c+1)^0,7,c
  5883  001E0A  EF10  F00F         	goto	u3601
  5884  001E0E  5044               	movf	(xtoa@c+1)^0,w,c
  5885  001E10  E109               	bnz	u3600
  5886  001E12  0E0A               	movlw	10
  5887  001E14  5C43               	subwf	xtoa@c^0,w,c
  5888  001E16  A0D8               	btfss	status,0,c
  5889  001E18  EF10  F00F         	goto	u3601
  5890  001E1C  EF12  F00F         	goto	u3600
  5891  001E20                     u3601:
  5892  001E20  EF1A  F00F         	goto	l3880
  5893  001E24                     u3600:
  5894  001E24  0E57               	movlw	87
  5895  001E26  2443               	addwf	xtoa@c^0,w,c
  5896  001E28  6E43               	movwf	xtoa@c^0,c
  5897  001E2A  0E00               	movlw	0
  5898  001E2C  2044               	addwfc	(xtoa@c+1)^0,w,c
  5899  001E2E  6E44               	movwf	(xtoa@c+1)^0,c
  5900  001E30  EF20  F00F         	goto	l605
  5901  001E34                     l3880:
  5902  001E34  0E30               	movlw	48
  5903  001E36  2443               	addwf	xtoa@c^0,w,c
  5904  001E38  6E43               	movwf	xtoa@c^0,c
  5905  001E3A  0E00               	movlw	0
  5906  001E3C  2044               	addwfc	(xtoa@c+1)^0,w,c
  5907  001E3E  6E44               	movwf	(xtoa@c+1)^0,c
  5908  001E40                     l605:
  5909  001E40  0EBF               	movlw	191
  5910  001E42  6E29               	movwf	??_xtoa^0,c
  5911  001E44  0EFF               	movlw	255
  5912  001E46  6E2A               	movwf	(??_xtoa+1)^0,c
  5913  001E48  5028               	movf	xtoa@x^0,w,c
  5914  001E4A  6E2B               	movwf	(??_xtoa+2)^0,c
  5915  001E4C  6A2C               	clrf	(??_xtoa+3)^0,c
  5916  001E4E  5029               	movf	??_xtoa^0,w,c
  5917  001E50  262B               	addwf	(??_xtoa+2)^0,f,c
  5918  001E52  502A               	movf	(??_xtoa+1)^0,w,c
  5919  001E54  222C               	addwfc	(??_xtoa+3)^0,f,c
  5920  001E56  502C               	movf	(??_xtoa+3)^0,w,c
  5921  001E58  E10A               	bnz	u3610
  5922  001E5A  0E1A               	movlw	26
  5923  001E5C  5C2B               	subwf	(??_xtoa+2)^0,w,c
  5924  001E5E  A0D8               	btfss	status,0,c
  5925  001E60  EF34  F00F         	goto	u3611
  5926  001E64  EF37  F00F         	goto	u3610
  5927  001E68                     u3611:
  5928  001E68  0E01               	movlw	1
  5929  001E6A  EF38  F00F         	goto	u3620
  5930  001E6E                     u3610:
  5931  001E6E  0E00               	movlw	0
  5932  001E70                     u3620:
  5933  001E70  6E31               	movwf	_xtoa$1348^0,c
  5934  001E72  6A32               	clrf	(_xtoa$1348+1)^0,c
  5935  001E74  5031               	movf	_xtoa$1348^0,w,c
  5936  001E76  1032               	iorwf	(_xtoa$1348+1)^0,w,c
  5937  001E78  B4D8               	btfsc	status,2,c
  5938  001E7A  EF41  F00F         	goto	u3631
  5939  001E7E  EF43  F00F         	goto	u3630
  5940  001E82                     u3631:
  5941  001E82  EF73  F00F         	goto	l3894
  5942  001E86                     u3630:
  5943  001E86  0E9F               	movlw	159
  5944  001E88  6E29               	movwf	??_xtoa^0,c
  5945  001E8A  0EFF               	movlw	255
  5946  001E8C  6E2A               	movwf	(??_xtoa+1)^0,c
  5947  001E8E  0E20               	movlw	32
  5948  001E90  1043               	iorwf	xtoa@c^0,w,c
  5949  001E92  6E2B               	movwf	(??_xtoa+2)^0,c
  5950  001E94  0E00               	movlw	0
  5951  001E96  1044               	iorwf	(xtoa@c+1)^0,w,c
  5952  001E98  6E2C               	movwf	(??_xtoa+3)^0,c
  5953  001E9A  5029               	movf	??_xtoa^0,w,c
  5954  001E9C  262B               	addwf	(??_xtoa+2)^0,f,c
  5955  001E9E  502A               	movf	(??_xtoa+1)^0,w,c
  5956  001EA0  222C               	addwfc	(??_xtoa+3)^0,f,c
  5957  001EA2  502C               	movf	(??_xtoa+3)^0,w,c
  5958  001EA4  E10A               	bnz	u3640
  5959  001EA6  0E1A               	movlw	26
  5960  001EA8  5C2B               	subwf	(??_xtoa+2)^0,w,c
  5961  001EAA  A0D8               	btfss	status,0,c
  5962  001EAC  EF5A  F00F         	goto	u3641
  5963  001EB0  EF5D  F00F         	goto	u3640
  5964  001EB4                     u3641:
  5965  001EB4  0E01               	movlw	1
  5966  001EB6  EF5E  F00F         	goto	u3650
  5967  001EBA                     u3640:
  5968  001EBA  0E00               	movlw	0
  5969  001EBC                     u3650:
  5970  001EBC  6E33               	movwf	_xtoa$1349^0,c
  5971  001EBE  6A34               	clrf	(_xtoa$1349+1)^0,c
  5972  001EC0  5033               	movf	_xtoa$1349^0,w,c
  5973  001EC2  1034               	iorwf	(_xtoa$1349+1)^0,w,c
  5974  001EC4  B4D8               	btfsc	status,2,c
  5975  001EC6  EF67  F00F         	goto	u3661
  5976  001ECA  EF69  F00F         	goto	u3660
  5977  001ECE                     u3661:
  5978  001ECE  EF73  F00F         	goto	l3894
  5979  001ED2                     u3660:
  5980  001ED2                     
  5981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5982  001ED2  C043  F009         	movff	xtoa@c,toupper@c
  5983  001ED6  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  5984  001EDA  ECAE  F01C         	call	_toupper	;wreg free
  5985  001EDE  C009  F043         	movff	?_toupper,xtoa@c
  5986  001EE2  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  5987  001EE6                     l3894:
  5988                           
  5989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5990  001EE6  0ECC               	movlw	low _dbuf
  5991  001EE8  2441               	addwf	xtoa@i^0,w,c
  5992  001EEA  6ED9               	movwf	fsr2l,c
  5993  001EEC  0E00               	movlw	high _dbuf
  5994  001EEE  2042               	addwfc	(xtoa@i+1)^0,w,c
  5995  001EF0  6EDA               	movwf	fsr2h,c
  5996  001EF2  C043  FFDF         	movff	xtoa@c,indf2
  5997  001EF6                     
  5998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5999  001EF6  0635               	decf	xtoa@p^0,f,c
  6000  001EF8  A0D8               	btfss	status,0,c
  6001  001EFA  0636               	decf	(xtoa@p+1)^0,f,c
  6002  001EFC                     
  6003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6004  001EFC  0637               	decf	xtoa@w^0,f,c
  6005  001EFE  A0D8               	btfss	status,0,c
  6006  001F00  0638               	decf	(xtoa@w+1)^0,f,c
  6007  001F02                     
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6009  001F02  C039  F029         	movff	xtoa@n,??_xtoa
  6010  001F06  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  6011  001F0A  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  6012  001F0E  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  6013  001F12  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  6014  001F16  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  6015  001F1A  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  6016  001F1E  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  6017  001F22  0E05               	movlw	5
  6018  001F24  EF9D  F00F         	goto	u3670
  6019  001F28                     u3675:
  6020  001F28  90D8               	bcf	status,0,c
  6021  001F2A  3230               	rrcf	(??_xtoa+7)^0,f,c
  6022  001F2C  322F               	rrcf	(??_xtoa+6)^0,f,c
  6023  001F2E  322E               	rrcf	(??_xtoa+5)^0,f,c
  6024  001F30  322D               	rrcf	(??_xtoa+4)^0,f,c
  6025  001F32  322C               	rrcf	(??_xtoa+3)^0,f,c
  6026  001F34  322B               	rrcf	(??_xtoa+2)^0,f,c
  6027  001F36  322A               	rrcf	(??_xtoa+1)^0,f,c
  6028  001F38  3229               	rrcf	??_xtoa^0,f,c
  6029  001F3A                     u3670:
  6030  001F3A  2EE8               	decfsz	wreg,f,c
  6031  001F3C  EF94  F00F         	goto	u3675
  6032  001F40  C029  F039         	movff	??_xtoa,xtoa@n
  6033  001F44  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  6034  001F48  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  6035  001F4C  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  6036  001F50  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  6037  001F54  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  6038  001F58  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  6039  001F5C  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  6040  001F60                     l3902:
  6041                           
  6042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6043  001F60  BE42               	btfsc	(xtoa@i+1)^0,7,c
  6044  001F62  EFBC  F00F         	goto	u3681
  6045  001F66  5042               	movf	(xtoa@i+1)^0,w,c
  6046  001F68  E109               	bnz	u3680
  6047  001F6A  0E02               	movlw	2
  6048  001F6C  5C41               	subwf	xtoa@i^0,w,c
  6049  001F6E  A0D8               	btfss	status,0,c
  6050  001F70  EFBC  F00F         	goto	u3681
  6051  001F74  EFBE  F00F         	goto	u3680
  6052  001F78                     u3681:
  6053  001F78  EFEE  F00F         	goto	l619
  6054  001F7C                     u3680:
  6055  001F7C  5039               	movf	xtoa@n^0,w,c
  6056  001F7E  103A               	iorwf	(xtoa@n+1)^0,w,c
  6057  001F80  103B               	iorwf	(xtoa@n+2)^0,w,c
  6058  001F82  103C               	iorwf	(xtoa@n+3)^0,w,c
  6059  001F84  103D               	iorwf	(xtoa@n+4)^0,w,c
  6060  001F86  103E               	iorwf	(xtoa@n+5)^0,w,c
  6061  001F88  103F               	iorwf	(xtoa@n+6)^0,w,c
  6062  001F8A  1040               	iorwf	(xtoa@n+7)^0,w,c
  6063  001F8C  A4D8               	btfss	status,2,c
  6064  001F8E  EFCB  F00F         	goto	u3691
  6065  001F92  EFCD  F00F         	goto	u3690
  6066  001F96                     u3691:
  6067  001F96  EFFD  F00E         	goto	l3872
  6068  001F9A                     u3690:
  6069  001F9A  BE36               	btfsc	(xtoa@p+1)^0,7,c
  6070  001F9C  EFDA  F00F         	goto	u3700
  6071  001FA0  5036               	movf	(xtoa@p+1)^0,w,c
  6072  001FA2  E106               	bnz	u3701
  6073  001FA4  0435               	decf	xtoa@p^0,w,c
  6074  001FA6  B0D8               	btfsc	status,0,c
  6075  001FA8  EFD8  F00F         	goto	u3701
  6076  001FAC  EFDA  F00F         	goto	u3700
  6077  001FB0                     u3701:
  6078  001FB0  EFFD  F00E         	goto	l3872
  6079  001FB4                     u3700:
  6080  001FB4  BE38               	btfsc	(xtoa@w+1)^0,7,c
  6081  001FB6  EFE5  F00F         	goto	u3711
  6082  001FBA  5038               	movf	(xtoa@w+1)^0,w,c
  6083  001FBC  E108               	bnz	u3710
  6084  001FBE  0437               	decf	xtoa@w^0,w,c
  6085  001FC0  A0D8               	btfss	status,0,c
  6086  001FC2  EFE5  F00F         	goto	u3711
  6087  001FC6  EFE7  F00F         	goto	u3710
  6088  001FCA                     u3711:
  6089  001FCA  EFEE  F00F         	goto	l619
  6090  001FCE                     u3710:
  6091  001FCE  B259               	btfsc	_flags^0,1,c
  6092  001FD0  EFEC  F00F         	goto	u3721
  6093  001FD4  EFEE  F00F         	goto	u3720
  6094  001FD8                     u3721:
  6095  001FD8  EFFD  F00E         	goto	l3872
  6096  001FDC                     u3720:
  6097  001FDC                     l619:
  6098                           
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6100  001FDC  A859               	btfss	_flags^0,4,c
  6101  001FDE  EFF3  F00F         	goto	u3731
  6102  001FE2  EFF5  F00F         	goto	u3730
  6103  001FE6                     u3731:
  6104  001FE6  EF0B  F010         	goto	l3918
  6105  001FEA                     u3730:
  6106  001FEA                     
  6107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6108  001FEA  0641               	decf	xtoa@i^0,f,c
  6109  001FEC  A0D8               	btfss	status,0,c
  6110  001FEE  0642               	decf	(xtoa@i+1)^0,f,c
  6111  001FF0                     
  6112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6113  001FF0  0ECC               	movlw	low _dbuf
  6114  001FF2  2441               	addwf	xtoa@i^0,w,c
  6115  001FF4  6ED9               	movwf	fsr2l,c
  6116  001FF6  0E00               	movlw	high _dbuf
  6117  001FF8  2042               	addwfc	(xtoa@i+1)^0,w,c
  6118  001FFA  6EDA               	movwf	fsr2h,c
  6119  001FFC  C028  FFDF         	movff	xtoa@x,indf2
  6120  002000                     
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6122  002000  0641               	decf	xtoa@i^0,f,c
  6123  002002  A0D8               	btfss	status,0,c
  6124  002004  0642               	decf	(xtoa@i+1)^0,f,c
  6125                           
  6126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6127  002006  0ECC               	movlw	low _dbuf
  6128  002008  2441               	addwf	xtoa@i^0,w,c
  6129  00200A  6ED9               	movwf	fsr2l,c
  6130  00200C  0E00               	movlw	high _dbuf
  6131  00200E  2042               	addwfc	(xtoa@i+1)^0,w,c
  6132  002010  6EDA               	movwf	fsr2h,c
  6133  002012  0E30               	movlw	48
  6134  002014  6EDF               	movwf	indf2,c
  6135  002016                     l3918:
  6136                           
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6138  002016  C01E  F013         	movff	xtoa@fp,pad@fp
  6139  00201A  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  6140  00201E  0ECC               	movlw	low _dbuf
  6141  002020  2441               	addwf	xtoa@i^0,w,c
  6142  002022  6E15               	movwf	pad@buf^0,c
  6143  002024  0E00               	movlw	high _dbuf
  6144  002026  2042               	addwfc	(xtoa@i+1)^0,w,c
  6145  002028  6E16               	movwf	(pad@buf+1)^0,c
  6146  00202A  C037  F017         	movff	xtoa@w,pad@p
  6147  00202E  C038  F018         	movff	xtoa@w+1,pad@p+1
  6148  002032  ECFB  F01A         	call	_pad	;wreg free
  6149  002036  C013  F01E         	movff	?_pad,?_xtoa
  6150  00203A  C014  F01F         	movff	?_pad+1,?_xtoa+1
  6151  00203E  0012               	return		;funcret
  6152  002040                     __end_of_xtoa:
  6153                           	opt callstack 0
  6154                           
  6155 ;; *************** function _toupper *****************
  6156 ;; Defined at:
  6157 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  c               2    8[COMRAM] int 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  2    8[COMRAM] int 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6174 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6175 ;;Total ram usage:        8 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    5
  6178 ;; This function calls:
  6179 ;;		_islower
  6180 ;; This function is called by:
  6181 ;;		_xtoa
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text6
  6186  00395C                     __ptext6:
  6187                           	opt callstack 0
  6188  00395C                     _toupper:
  6189                           	opt callstack 20
  6190  00395C  0E9F               	movlw	159
  6191  00395E  6E0B               	movwf	??_toupper^0,c
  6192  003960  0EFF               	movlw	255
  6193  003962  6E0C               	movwf	(??_toupper+1)^0,c
  6194  003964  C009  F00D         	movff	toupper@c,??_toupper+2
  6195  003968  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  6196  00396C  500B               	movf	??_toupper^0,w,c
  6197  00396E  260D               	addwf	(??_toupper+2)^0,f,c
  6198  003970  500C               	movf	(??_toupper+1)^0,w,c
  6199  003972  220E               	addwfc	(??_toupper+3)^0,f,c
  6200  003974  500E               	movf	(??_toupper+3)^0,w,c
  6201  003976  E10A               	bnz	u2870
  6202  003978  0E1A               	movlw	26
  6203  00397A  5C0D               	subwf	(??_toupper+2)^0,w,c
  6204  00397C  A0D8               	btfss	status,0,c
  6205  00397E  EFC3  F01C         	goto	u2871
  6206  003982  EFC6  F01C         	goto	u2870
  6207  003986                     u2871:
  6208  003986  0E01               	movlw	1
  6209  003988  EFC7  F01C         	goto	u2880
  6210  00398C                     u2870:
  6211  00398C  0E00               	movlw	0
  6212  00398E                     u2880:
  6213  00398E  6E0F               	movwf	_toupper$2032^0,c
  6214  003990  6A10               	clrf	(_toupper$2032+1)^0,c
  6215  003992  500F               	movf	_toupper$2032^0,w,c
  6216  003994  1010               	iorwf	(_toupper$2032+1)^0,w,c
  6217  003996  B4D8               	btfsc	status,2,c
  6218  003998  EFD0  F01C         	goto	u2891
  6219  00399C  EFD2  F01C         	goto	u2890
  6220  0039A0                     u2891:
  6221  0039A0  EFD8  F01C         	goto	l1491
  6222  0039A4                     u2890:
  6223  0039A4  0E5F               	movlw	95
  6224  0039A6  1409               	andwf	toupper@c^0,w,c
  6225  0039A8  6E09               	movwf	?_toupper^0,c
  6226  0039AA  6A0A               	clrf	(?_toupper+1)^0,c
  6227  0039AC  EFDC  F01C         	goto	l1496
  6228  0039B0                     l1491:
  6229  0039B0  C009  F009         	movff	toupper@c,?_toupper
  6230  0039B4  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  6231  0039B8                     l1496:
  6232  0039B8  0012               	return		;funcret
  6233  0039BA                     __end_of_toupper:
  6234                           	opt callstack 0
  6235                           
  6236 ;; *************** function _islower *****************
  6237 ;; Defined at:
  6238 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  c               2    2[COMRAM] int 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  2    2[COMRAM] int 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;Total ram usage:        6 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    4
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_toupper
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text7
  6267  003C88                     __ptext7:
  6268                           	opt callstack 0
  6269  003C88                     _islower:
  6270                           	opt callstack 20
  6271  003C88  0E9F               	movlw	159
  6272  003C8A  6E05               	movwf	??_islower^0,c
  6273  003C8C  0EFF               	movlw	255
  6274  003C8E  6E06               	movwf	(??_islower+1)^0,c
  6275  003C90  C003  F007         	movff	islower@c,??_islower+2
  6276  003C94  C004  F008         	movff	islower@c+1,??_islower+3
  6277  003C98  5005               	movf	??_islower^0,w,c
  6278  003C9A  2607               	addwf	(??_islower+2)^0,f,c
  6279  003C9C  5006               	movf	(??_islower+1)^0,w,c
  6280  003C9E  2208               	addwfc	(??_islower+3)^0,f,c
  6281  003CA0  5008               	movf	(??_islower+3)^0,w,c
  6282  003CA2  E10A               	bnz	u2750
  6283  003CA4  0E1A               	movlw	26
  6284  003CA6  5C07               	subwf	(??_islower+2)^0,w,c
  6285  003CA8  A0D8               	btfss	status,0,c
  6286  003CAA  EF59  F01E         	goto	u2751
  6287  003CAE  EF5C  F01E         	goto	u2750
  6288  003CB2                     u2751:
  6289  003CB2  0E01               	movlw	1
  6290  003CB4  EF5D  F01E         	goto	u2760
  6291  003CB8                     u2750:
  6292  003CB8  0E00               	movlw	0
  6293  003CBA                     u2760:
  6294  003CBA  6E03               	movwf	?_islower^0,c
  6295  003CBC  6A04               	clrf	(?_islower+1)^0,c
  6296  003CBE  0012               	return		;funcret
  6297  003CC0                     __end_of_islower:
  6298                           	opt callstack 0
  6299                           
  6300 ;; *************** function _isupper *****************
  6301 ;; Defined at:
  6302 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  c               2    2[COMRAM] int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;		None
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  2    2[COMRAM] int 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, status,0
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6318 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6319 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;Total ram usage:        6 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    4
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_xtoa
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text8
  6331  003CC0                     __ptext8:
  6332                           	opt callstack 0
  6333  003CC0                     _isupper:
  6334                           	opt callstack 21
  6335  003CC0  0EBF               	movlw	191
  6336  003CC2  6E05               	movwf	??_isupper^0,c
  6337  003CC4  0EFF               	movlw	255
  6338  003CC6  6E06               	movwf	(??_isupper+1)^0,c
  6339  003CC8  C003  F007         	movff	isupper@c,??_isupper+2
  6340  003CCC  C004  F008         	movff	isupper@c+1,??_isupper+3
  6341  003CD0  5005               	movf	??_isupper^0,w,c
  6342  003CD2  2607               	addwf	(??_isupper+2)^0,f,c
  6343  003CD4  5006               	movf	(??_isupper+1)^0,w,c
  6344  003CD6  2208               	addwfc	(??_isupper+3)^0,f,c
  6345  003CD8  5008               	movf	(??_isupper+3)^0,w,c
  6346  003CDA  E10A               	bnz	u2830
  6347  003CDC  0E1A               	movlw	26
  6348  003CDE  5C07               	subwf	(??_isupper+2)^0,w,c
  6349  003CE0  A0D8               	btfss	status,0,c
  6350  003CE2  EF75  F01E         	goto	u2831
  6351  003CE6  EF78  F01E         	goto	u2830
  6352  003CEA                     u2831:
  6353  003CEA  0E01               	movlw	1
  6354  003CEC  EF79  F01E         	goto	u2840
  6355  003CF0                     u2830:
  6356  003CF0  0E00               	movlw	0
  6357  003CF2                     u2840:
  6358  003CF2  6E03               	movwf	?_isupper^0,c
  6359  003CF4  6A04               	clrf	(?_isupper+1)^0,c
  6360  003CF6  0012               	return		;funcret
  6361  003CF8                     __end_of_isupper:
  6362                           	opt callstack 0
  6363                           
  6364 ;; *************** function _isalpha *****************
  6365 ;; Defined at:
  6366 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  c               2    2[COMRAM] int 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2    2[COMRAM] int 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6384 ;;Total ram usage:        6 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    4
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_xtoa
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text9
  6395  003C4C                     __ptext9:
  6396                           	opt callstack 0
  6397  003C4C                     _isalpha:
  6398                           	opt callstack 21
  6399  003C4C  0E9F               	movlw	159
  6400  003C4E  6E05               	movwf	??_isalpha^0,c
  6401  003C50  0EFF               	movlw	255
  6402  003C52  6E06               	movwf	(??_isalpha+1)^0,c
  6403  003C54  0E20               	movlw	32
  6404  003C56  1003               	iorwf	isalpha@c^0,w,c
  6405  003C58  6E07               	movwf	(??_isalpha+2)^0,c
  6406  003C5A  0E00               	movlw	0
  6407  003C5C  1004               	iorwf	(isalpha@c+1)^0,w,c
  6408  003C5E  6E08               	movwf	(??_isalpha+3)^0,c
  6409  003C60  5005               	movf	??_isalpha^0,w,c
  6410  003C62  2607               	addwf	(??_isalpha+2)^0,f,c
  6411  003C64  5006               	movf	(??_isalpha+1)^0,w,c
  6412  003C66  2208               	addwfc	(??_isalpha+3)^0,f,c
  6413  003C68  5008               	movf	(??_isalpha+3)^0,w,c
  6414  003C6A  E10A               	bnz	u2850
  6415  003C6C  0E1A               	movlw	26
  6416  003C6E  5C07               	subwf	(??_isalpha+2)^0,w,c
  6417  003C70  A0D8               	btfss	status,0,c
  6418  003C72  EF3D  F01E         	goto	u2851
  6419  003C76  EF40  F01E         	goto	u2850
  6420  003C7A                     u2851:
  6421  003C7A  0E01               	movlw	1
  6422  003C7C  EF41  F01E         	goto	u2860
  6423  003C80                     u2850:
  6424  003C80  0E00               	movlw	0
  6425  003C82                     u2860:
  6426  003C82  6E03               	movwf	?_isalpha^0,c
  6427  003C84  6A04               	clrf	(?_isalpha+1)^0,c
  6428  003C86  0012               	return		;funcret
  6429  003C88                     __end_of_isalpha:
  6430                           	opt callstack 0
  6431                           
  6432 ;; *************** function _utoa *****************
  6433 ;; Defined at:
  6434 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6437 ;;		 -> vsnprintf@f(6), 
  6438 ;;  d               8   31[COMRAM] unsigned long long 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  n               8   51[COMRAM] unsigned long long 
  6441 ;;  i               2   59[COMRAM] int 
  6442 ;;  w               2   49[COMRAM] int 
  6443 ;;  p               2   47[COMRAM] int 
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2   29[COMRAM] int 
  6446 ;; Registers used:
  6447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6453 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6454 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6455 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6456 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6457 ;;Total ram usage:       32 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    8
  6460 ;; This function calls:
  6461 ;;		___lodiv
  6462 ;;		___lomod
  6463 ;;		_pad
  6464 ;; This function is called by:
  6465 ;;		_vfpfcnvrt
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text10
  6470  002040                     __ptext10:
  6471                           	opt callstack 0
  6472  002040                     _utoa:
  6473                           	opt callstack 18
  6474  002040                     
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6476  002040  BE58               	btfsc	(_prec+1)^0,7,c
  6477  002042  EF25  F010         	goto	u3501
  6478  002046  EF27  F010         	goto	u3500
  6479  00204A                     u3501:
  6480  00204A  EF28  F010         	goto	l3824
  6481  00204E                     u3500:
  6482  00204E                     
  6483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6484  00204E  9259               	bcf	_flags^0,1,c
  6485  002050                     l3824:
  6486                           
  6487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6488  002050  BE58               	btfsc	(_prec+1)^0,7,c
  6489  002052  EF35  F010         	goto	u3510
  6490  002056  5058               	movf	(_prec+1)^0,w,c
  6491  002058  E106               	bnz	u3511
  6492  00205A  0457               	decf	_prec^0,w,c
  6493  00205C  B0D8               	btfsc	status,0,c
  6494  00205E  EF33  F010         	goto	u3511
  6495  002062  EF35  F010         	goto	u3510
  6496  002066                     u3511:
  6497  002066  EF3B  F010         	goto	l581
  6498  00206A                     u3510:
  6499  00206A  0E00               	movlw	0
  6500  00206C  6E31               	movwf	(utoa@p+1)^0,c
  6501  00206E  0E01               	movlw	1
  6502  002070  6E30               	movwf	utoa@p^0,c
  6503  002072  EF3F  F010         	goto	l583
  6504  002076                     l581:
  6505  002076  C057  F030         	movff	_prec,utoa@p
  6506  00207A  C058  F031         	movff	_prec+1,utoa@p+1
  6507  00207E                     l583:
  6508                           
  6509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6510  00207E  C0C5  F032         	movff	_width,utoa@w
  6511  002082  C0C6  F033         	movff	_width+1,utoa@w+1
  6512                           
  6513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6514  002086  C020  F034         	movff	utoa@d,utoa@n
  6515  00208A  C021  F035         	movff	utoa@d+1,utoa@n+1
  6516  00208E  C022  F036         	movff	utoa@d+2,utoa@n+2
  6517  002092  C023  F037         	movff	utoa@d+3,utoa@n+3
  6518  002096  C024  F038         	movff	utoa@d+4,utoa@n+4
  6519  00209A  C025  F039         	movff	utoa@d+5,utoa@n+5
  6520  00209E  C026  F03A         	movff	utoa@d+6,utoa@n+6
  6521  0020A2  C027  F03B         	movff	utoa@d+7,utoa@n+7
  6522  0020A6                     
  6523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6524  0020A6  0E00               	movlw	0
  6525  0020A8  6E3D               	movwf	(utoa@i+1)^0,c
  6526  0020AA  0E1F               	movlw	31
  6527  0020AC  6E3C               	movwf	utoa@i^0,c
  6528  0020AE                     
  6529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6530  0020AE  0E00               	movlw	0
  6531  0020B0  0100               	movlb	0	; () banked
  6532  0020B2  6FEB               	movwf	(_dbuf+31)& (0+255),b
  6533                           
  6534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6535  0020B4  EFD2  F010         	goto	l3842
  6536  0020B8                     l3832:
  6537                           
  6538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6539  0020B8  063C               	decf	utoa@i^0,f,c
  6540  0020BA  A0D8               	btfss	status,0,c
  6541  0020BC  063D               	decf	(utoa@i+1)^0,f,c
  6542  0020BE                     
  6543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6544  0020BE  0ECC               	movlw	low _dbuf
  6545  0020C0  243C               	addwf	utoa@i^0,w,c
  6546  0020C2  6ED9               	movwf	fsr2l,c
  6547  0020C4  0E00               	movlw	high _dbuf
  6548  0020C6  203D               	addwfc	(utoa@i+1)^0,w,c
  6549  0020C8  6EDA               	movwf	fsr2h,c
  6550  0020CA  C034  F003         	movff	utoa@n,___lomod@dividend
  6551  0020CE  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  6552  0020D2  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  6553  0020D6  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  6554  0020DA  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  6555  0020DE  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  6556  0020E2  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  6557  0020E6  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  6558  0020EA  0E0A               	movlw	10
  6559  0020EC  6E0B               	movwf	___lomod@divisor^0,c
  6560  0020EE  0E00               	movlw	0
  6561  0020F0  6E0C               	movwf	(___lomod@divisor+1)^0,c
  6562  0020F2  0E00               	movlw	0
  6563  0020F4  6E0D               	movwf	(___lomod@divisor+2)^0,c
  6564  0020F6  0E00               	movlw	0
  6565  0020F8  6E0E               	movwf	(___lomod@divisor+3)^0,c
  6566  0020FA  0E00               	movlw	0
  6567  0020FC  6E0F               	movwf	(___lomod@divisor+4)^0,c
  6568  0020FE  0E00               	movlw	0
  6569  002100  6E10               	movwf	(___lomod@divisor+5)^0,c
  6570  002102  0E00               	movlw	0
  6571  002104  6E11               	movwf	(___lomod@divisor+6)^0,c
  6572  002106  0E00               	movlw	0
  6573  002108  6E12               	movwf	(___lomod@divisor+7)^0,c
  6574  00210A  EC2E  F01A         	call	___lomod	;wreg free
  6575  00210E  C003  F028         	movff	?___lomod,??_utoa
  6576  002112  C004  F029         	movff	?___lomod+1,??_utoa+1
  6577  002116  C005  F02A         	movff	?___lomod+2,??_utoa+2
  6578  00211A  C006  F02B         	movff	?___lomod+3,??_utoa+3
  6579  00211E  C007  F02C         	movff	?___lomod+4,??_utoa+4
  6580  002122  C008  F02D         	movff	?___lomod+5,??_utoa+5
  6581  002126  C009  F02E         	movff	?___lomod+6,??_utoa+6
  6582  00212A  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  6583  00212E  5028               	movf	??_utoa^0,w,c
  6584  002130  0F30               	addlw	48
  6585  002132  6EDF               	movwf	indf2,c
  6586  002134                     
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6588  002134  0630               	decf	utoa@p^0,f,c
  6589  002136  A0D8               	btfss	status,0,c
  6590  002138  0631               	decf	(utoa@p+1)^0,f,c
  6591  00213A                     
  6592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6593  00213A  0632               	decf	utoa@w^0,f,c
  6594  00213C  A0D8               	btfss	status,0,c
  6595  00213E  0633               	decf	(utoa@w+1)^0,f,c
  6596  002140                     
  6597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6598  002140  C034  F003         	movff	utoa@n,___lodiv@dividend
  6599  002144  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  6600  002148  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  6601  00214C  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  6602  002150  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  6603  002154  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  6604  002158  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  6605  00215C  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  6606  002160  0E0A               	movlw	10
  6607  002162  6E0B               	movwf	___lodiv@divisor^0,c
  6608  002164  0E00               	movlw	0
  6609  002166  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  6610  002168  0E00               	movlw	0
  6611  00216A  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  6612  00216C  0E00               	movlw	0
  6613  00216E  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  6614  002170  0E00               	movlw	0
  6615  002172  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  6616  002174  0E00               	movlw	0
  6617  002176  6E10               	movwf	(___lodiv@divisor+5)^0,c
  6618  002178  0E00               	movlw	0
  6619  00217A  6E11               	movwf	(___lodiv@divisor+6)^0,c
  6620  00217C  0E00               	movlw	0
  6621  00217E  6E12               	movwf	(___lodiv@divisor+7)^0,c
  6622  002180  EC41  F019         	call	___lodiv	;wreg free
  6623  002184  C003  F034         	movff	?___lodiv,utoa@n
  6624  002188  C004  F035         	movff	?___lodiv+1,utoa@n+1
  6625  00218C  C005  F036         	movff	?___lodiv+2,utoa@n+2
  6626  002190  C006  F037         	movff	?___lodiv+3,utoa@n+3
  6627  002194  C007  F038         	movff	?___lodiv+4,utoa@n+4
  6628  002198  C008  F039         	movff	?___lodiv+5,utoa@n+5
  6629  00219C  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  6630  0021A0  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  6631  0021A4                     l3842:
  6632                           
  6633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6634  0021A4  503C               	movf	utoa@i^0,w,c
  6635  0021A6  103D               	iorwf	(utoa@i+1)^0,w,c
  6636  0021A8  B4D8               	btfsc	status,2,c
  6637  0021AA  EFD9  F010         	goto	u3521
  6638  0021AE  EFDB  F010         	goto	u3520
  6639  0021B2                     u3521:
  6640  0021B2  EF0B  F011         	goto	l3852
  6641  0021B6                     u3520:
  6642  0021B6  5034               	movf	utoa@n^0,w,c
  6643  0021B8  1035               	iorwf	(utoa@n+1)^0,w,c
  6644  0021BA  1036               	iorwf	(utoa@n+2)^0,w,c
  6645  0021BC  1037               	iorwf	(utoa@n+3)^0,w,c
  6646  0021BE  1038               	iorwf	(utoa@n+4)^0,w,c
  6647  0021C0  1039               	iorwf	(utoa@n+5)^0,w,c
  6648  0021C2  103A               	iorwf	(utoa@n+6)^0,w,c
  6649  0021C4  103B               	iorwf	(utoa@n+7)^0,w,c
  6650  0021C6  A4D8               	btfss	status,2,c
  6651  0021C8  EFE8  F010         	goto	u3531
  6652  0021CC  EFEA  F010         	goto	u3530
  6653  0021D0                     u3531:
  6654  0021D0  EF5C  F010         	goto	l3832
  6655  0021D4                     u3530:
  6656  0021D4  BE31               	btfsc	(utoa@p+1)^0,7,c
  6657  0021D6  EFF7  F010         	goto	u3540
  6658  0021DA  5031               	movf	(utoa@p+1)^0,w,c
  6659  0021DC  E106               	bnz	u3541
  6660  0021DE  0430               	decf	utoa@p^0,w,c
  6661  0021E0  B0D8               	btfsc	status,0,c
  6662  0021E2  EFF5  F010         	goto	u3541
  6663  0021E6  EFF7  F010         	goto	u3540
  6664  0021EA                     u3541:
  6665  0021EA  EF5C  F010         	goto	l3832
  6666  0021EE                     u3540:
  6667  0021EE  BE33               	btfsc	(utoa@w+1)^0,7,c
  6668  0021F0  EF02  F011         	goto	u3551
  6669  0021F4  5033               	movf	(utoa@w+1)^0,w,c
  6670  0021F6  E108               	bnz	u3550
  6671  0021F8  0432               	decf	utoa@w^0,w,c
  6672  0021FA  A0D8               	btfss	status,0,c
  6673  0021FC  EF02  F011         	goto	u3551
  6674  002200  EF04  F011         	goto	u3550
  6675  002204                     u3551:
  6676  002204  EF0B  F011         	goto	l3852
  6677  002208                     u3550:
  6678  002208  B259               	btfsc	_flags^0,1,c
  6679  00220A  EF09  F011         	goto	u3561
  6680  00220E  EF0B  F011         	goto	u3560
  6681  002212                     u3561:
  6682  002212  EF5C  F010         	goto	l3832
  6683  002216                     u3560:
  6684  002216                     l3852:
  6685                           
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6687  002216  C01E  F013         	movff	utoa@fp,pad@fp
  6688  00221A  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  6689  00221E  0ECC               	movlw	low _dbuf
  6690  002220  243C               	addwf	utoa@i^0,w,c
  6691  002222  6E15               	movwf	pad@buf^0,c
  6692  002224  0E00               	movlw	high _dbuf
  6693  002226  203D               	addwfc	(utoa@i+1)^0,w,c
  6694  002228  6E16               	movwf	(pad@buf+1)^0,c
  6695  00222A  C032  F017         	movff	utoa@w,pad@p
  6696  00222E  C033  F018         	movff	utoa@w+1,pad@p+1
  6697  002232  ECFB  F01A         	call	_pad	;wreg free
  6698  002236  C013  F01E         	movff	?_pad,?_utoa
  6699  00223A  C014  F01F         	movff	?_pad+1,?_utoa+1
  6700  00223E  0012               	return		;funcret
  6701  002240                     __end_of_utoa:
  6702                           	opt callstack 0
  6703                           
  6704 ;; *************** function ___lomod *****************
  6705 ;; Defined at:
  6706 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  dividend        8    2[COMRAM] unsigned long long 
  6709 ;;  divisor         8   10[COMRAM] unsigned long long 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  counter         1   18[COMRAM] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  8    2[COMRAM] unsigned long long 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6721 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6725 ;;Total ram usage:       17 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    4
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_utoa
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text11
  6736  00345C                     __ptext11:
  6737                           	opt callstack 0
  6738  00345C                     ___lomod:
  6739                           	opt callstack 21
  6740  00345C  500B               	movf	___lomod@divisor^0,w,c
  6741  00345E  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  6742  003460  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  6743  003462  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  6744  003464  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  6745  003466  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  6746  003468  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  6747  00346A  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  6748  00346C  B4D8               	btfsc	status,2,c
  6749  00346E  EF3B  F01A         	goto	u3091
  6750  003472  EF3D  F01A         	goto	u3090
  6751  003476                     u3091:
  6752  003476  EF85  F01A         	goto	l1154
  6753  00347A                     u3090:
  6754  00347A  0E01               	movlw	1
  6755  00347C  6E13               	movwf	___lomod@counter^0,c
  6756  00347E  EF4B  F01A         	goto	l3624
  6757  003482                     l3622:
  6758  003482  90D8               	bcf	status,0,c
  6759  003484  360B               	rlcf	___lomod@divisor^0,f,c
  6760  003486  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  6761  003488  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  6762  00348A  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  6763  00348C  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  6764  00348E  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  6765  003490  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  6766  003492  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  6767  003494  2A13               	incf	___lomod@counter^0,f,c
  6768  003496                     l3624:
  6769  003496  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  6770  003498  EF50  F01A         	goto	u3101
  6771  00349C  EF52  F01A         	goto	u3100
  6772  0034A0                     u3101:
  6773  0034A0  EF41  F01A         	goto	l3622
  6774  0034A4                     u3100:
  6775  0034A4                     l3626:
  6776  0034A4  500B               	movf	___lomod@divisor^0,w,c
  6777  0034A6  5C03               	subwf	___lomod@dividend^0,w,c
  6778  0034A8  500C               	movf	(___lomod@divisor+1)^0,w,c
  6779  0034AA  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  6780  0034AC  500D               	movf	(___lomod@divisor+2)^0,w,c
  6781  0034AE  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  6782  0034B0  500E               	movf	(___lomod@divisor+3)^0,w,c
  6783  0034B2  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  6784  0034B4  500F               	movf	(___lomod@divisor+4)^0,w,c
  6785  0034B6  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  6786  0034B8  5010               	movf	(___lomod@divisor+5)^0,w,c
  6787  0034BA  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  6788  0034BC  5011               	movf	(___lomod@divisor+6)^0,w,c
  6789  0034BE  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  6790  0034C0  5012               	movf	(___lomod@divisor+7)^0,w,c
  6791  0034C2  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  6792  0034C4  A0D8               	btfss	status,0,c
  6793  0034C6  EF67  F01A         	goto	u3111
  6794  0034CA  EF69  F01A         	goto	u3110
  6795  0034CE                     u3111:
  6796  0034CE  EF79  F01A         	goto	l3630
  6797  0034D2                     u3110:
  6798  0034D2  500B               	movf	___lomod@divisor^0,w,c
  6799  0034D4  5E03               	subwf	___lomod@dividend^0,f,c
  6800  0034D6  500C               	movf	(___lomod@divisor+1)^0,w,c
  6801  0034D8  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  6802  0034DA  500D               	movf	(___lomod@divisor+2)^0,w,c
  6803  0034DC  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  6804  0034DE  500E               	movf	(___lomod@divisor+3)^0,w,c
  6805  0034E0  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  6806  0034E2  500F               	movf	(___lomod@divisor+4)^0,w,c
  6807  0034E4  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  6808  0034E6  5010               	movf	(___lomod@divisor+5)^0,w,c
  6809  0034E8  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  6810  0034EA  5011               	movf	(___lomod@divisor+6)^0,w,c
  6811  0034EC  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  6812  0034EE  5012               	movf	(___lomod@divisor+7)^0,w,c
  6813  0034F0  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  6814  0034F2                     l3630:
  6815  0034F2  90D8               	bcf	status,0,c
  6816  0034F4  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  6817  0034F6  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  6818  0034F8  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  6819  0034FA  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  6820  0034FC  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  6821  0034FE  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  6822  003500  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  6823  003502  320B               	rrcf	___lomod@divisor^0,f,c
  6824  003504  2E13               	decfsz	___lomod@counter^0,f,c
  6825  003506  EF52  F01A         	goto	l3626
  6826  00350A                     l1154:
  6827  00350A  C003  F003         	movff	___lomod@dividend,?___lomod
  6828  00350E  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  6829  003512  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  6830  003516  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  6831  00351A  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  6832  00351E  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  6833  003522  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  6834  003526  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  6835  00352A  0012               	return		;funcret
  6836  00352C                     __end_of___lomod:
  6837                           	opt callstack 0
  6838                           
  6839 ;; *************** function ___lodiv *****************
  6840 ;; Defined at:
  6841 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  dividend        8    2[COMRAM] unsigned long long 
  6844 ;;  divisor         8   10[COMRAM] unsigned long long 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  quotient        8   18[COMRAM] unsigned long long 
  6847 ;;  counter         1   26[COMRAM] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  8    2[COMRAM] unsigned long long 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6857 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6860 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6861 ;;Total ram usage:       25 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    4
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_utoa
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text12
  6872  003282                     __ptext12:
  6873                           	opt callstack 0
  6874  003282                     ___lodiv:
  6875                           	opt callstack 21
  6876  003282  EE20  F013         	lfsr	2,___lodiv@quotient
  6877  003286  0E07               	movlw	7
  6878  003288                     u3051:
  6879  003288  6ADE               	clrf	postinc2,c
  6880  00328A  06E8               	decf	wreg,f,c
  6881  00328C  E2FD               	bc	u3051
  6882  00328E  500B               	movf	___lodiv@divisor^0,w,c
  6883  003290  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  6884  003292  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  6885  003294  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  6886  003296  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  6887  003298  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  6888  00329A  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  6889  00329C  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  6890  00329E  B4D8               	btfsc	status,2,c
  6891  0032A0  EF54  F019         	goto	u3061
  6892  0032A4  EF56  F019         	goto	u3060
  6893  0032A8                     u3061:
  6894  0032A8  EFA8  F019         	goto	l1144
  6895  0032AC                     u3060:
  6896  0032AC  0E01               	movlw	1
  6897  0032AE  6E1B               	movwf	___lodiv@counter^0,c
  6898  0032B0  EF64  F019         	goto	l3604
  6899  0032B4                     l3602:
  6900  0032B4  90D8               	bcf	status,0,c
  6901  0032B6  360B               	rlcf	___lodiv@divisor^0,f,c
  6902  0032B8  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  6903  0032BA  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  6904  0032BC  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  6905  0032BE  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  6906  0032C0  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  6907  0032C2  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  6908  0032C4  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  6909  0032C6  2A1B               	incf	___lodiv@counter^0,f,c
  6910  0032C8                     l3604:
  6911  0032C8  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  6912  0032CA  EF69  F019         	goto	u3071
  6913  0032CE  EF6B  F019         	goto	u3070
  6914  0032D2                     u3071:
  6915  0032D2  EF5A  F019         	goto	l3602
  6916  0032D6                     u3070:
  6917  0032D6                     l3606:
  6918  0032D6  90D8               	bcf	status,0,c
  6919  0032D8  3613               	rlcf	___lodiv@quotient^0,f,c
  6920  0032DA  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  6921  0032DC  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  6922  0032DE  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  6923  0032E0  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  6924  0032E2  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  6925  0032E4  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  6926  0032E6  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  6927  0032E8  500B               	movf	___lodiv@divisor^0,w,c
  6928  0032EA  5C03               	subwf	___lodiv@dividend^0,w,c
  6929  0032EC  500C               	movf	(___lodiv@divisor+1)^0,w,c
  6930  0032EE  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  6931  0032F0  500D               	movf	(___lodiv@divisor+2)^0,w,c
  6932  0032F2  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  6933  0032F4  500E               	movf	(___lodiv@divisor+3)^0,w,c
  6934  0032F6  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  6935  0032F8  500F               	movf	(___lodiv@divisor+4)^0,w,c
  6936  0032FA  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  6937  0032FC  5010               	movf	(___lodiv@divisor+5)^0,w,c
  6938  0032FE  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  6939  003300  5011               	movf	(___lodiv@divisor+6)^0,w,c
  6940  003302  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  6941  003304  5012               	movf	(___lodiv@divisor+7)^0,w,c
  6942  003306  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  6943  003308  A0D8               	btfss	status,0,c
  6944  00330A  EF89  F019         	goto	u3081
  6945  00330E  EF8B  F019         	goto	u3080
  6946  003312                     u3081:
  6947  003312  EF9C  F019         	goto	l3614
  6948  003316                     u3080:
  6949  003316  500B               	movf	___lodiv@divisor^0,w,c
  6950  003318  5E03               	subwf	___lodiv@dividend^0,f,c
  6951  00331A  500C               	movf	(___lodiv@divisor+1)^0,w,c
  6952  00331C  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  6953  00331E  500D               	movf	(___lodiv@divisor+2)^0,w,c
  6954  003320  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  6955  003322  500E               	movf	(___lodiv@divisor+3)^0,w,c
  6956  003324  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  6957  003326  500F               	movf	(___lodiv@divisor+4)^0,w,c
  6958  003328  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  6959  00332A  5010               	movf	(___lodiv@divisor+5)^0,w,c
  6960  00332C  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  6961  00332E  5011               	movf	(___lodiv@divisor+6)^0,w,c
  6962  003330  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  6963  003332  5012               	movf	(___lodiv@divisor+7)^0,w,c
  6964  003334  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  6965  003336  8013               	bsf	___lodiv@quotient^0,0,c
  6966  003338                     l3614:
  6967  003338  90D8               	bcf	status,0,c
  6968  00333A  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  6969  00333C  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  6970  00333E  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  6971  003340  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  6972  003342  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  6973  003344  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  6974  003346  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  6975  003348  320B               	rrcf	___lodiv@divisor^0,f,c
  6976  00334A  2E1B               	decfsz	___lodiv@counter^0,f,c
  6977  00334C  EF6B  F019         	goto	l3606
  6978  003350                     l1144:
  6979  003350  C013  F003         	movff	___lodiv@quotient,?___lodiv
  6980  003354  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  6981  003358  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  6982  00335C  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  6983  003360  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  6984  003364  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  6985  003368  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  6986  00336C  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  6987  003370  0012               	return		;funcret
  6988  003372                     __end_of___lodiv:
  6989                           	opt callstack 0
  6990                           
  6991 ;; *************** function _strncmp *****************
  6992 ;; Defined at:
  6993 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  6996 ;;		 -> STR_1(14), 
  6997 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  6998 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_86(3), 
  6999 ;;		 -> STR_81(4), STR_77(4), STR_72(3), STR_67(3), 
  7000 ;;		 -> STR_62(4), STR_57(3), STR_52(3), STR_47(4), 
  7001 ;;		 -> STR_42(3), STR_37(3), STR_32(4), STR_27(3), 
  7002 ;;		 -> STR_23(3), STR_18(3), STR_14(3), STR_9(4), 
  7003 ;;		 -> STR_5(4), 
  7004 ;;  n               2    6[COMRAM] unsigned int 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;  r               2   11[COMRAM] PTR const unsigned char 
  7007 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_86(3), 
  7008 ;;		 -> STR_81(4), STR_77(4), STR_72(3), STR_67(3), 
  7009 ;;		 -> STR_62(4), STR_57(3), STR_52(3), STR_47(4), 
  7010 ;;		 -> STR_42(3), STR_37(3), STR_32(4), STR_27(3), 
  7011 ;;		 -> STR_23(3), STR_18(3), STR_14(3), STR_9(4), 
  7012 ;;		 -> STR_5(4), 
  7013 ;;  l               2    9[COMRAM] PTR const unsigned char 
  7014 ;;		 -> STR_1(14), 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  2    2[COMRAM] int 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7024 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7025 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7027 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7028 ;;Total ram usage:       11 bytes
  7029 ;; Hardware stack levels used:    1
  7030 ;; Hardware stack levels required when called:    4
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_vfpfcnvrt
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text13
  7039  003372                     __ptext13:
  7040                           	opt callstack 0
  7041  003372                     _strncmp:
  7042                           	opt callstack 22
  7043  003372  C003  F00A         	movff	strncmp@_l,strncmp@l
  7044  003376  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  7045  00337A  C005  F00C         	movff	strncmp@_r,strncmp@r
  7046  00337E  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  7047  003382  0607               	decf	strncmp@n^0,f,c
  7048  003384  A0D8               	btfss	status,0,c
  7049  003386  0608               	decf	(strncmp@n+1)^0,f,c
  7050  003388  2807               	incf	strncmp@n^0,w,c
  7051  00338A  E106               	bnz	u3811
  7052  00338C  2808               	incf	(strncmp@n+1)^0,w,c
  7053  00338E  A4D8               	btfss	status,2,c
  7054  003390  EFCC  F019         	goto	u3811
  7055  003394  EFCE  F019         	goto	u3810
  7056  003398                     u3811:
  7057  003398  EFDB  F019         	goto	l3972
  7058  00339C                     u3810:
  7059  00339C  0E00               	movlw	0
  7060  00339E  6E04               	movwf	(?_strncmp+1)^0,c
  7061  0033A0  0E00               	movlw	0
  7062  0033A2  6E03               	movwf	?_strncmp^0,c
  7063  0033A4  EF2D  F01A         	goto	l1481
  7064  0033A8                     l3970:
  7065  0033A8  4A0A               	infsnz	strncmp@l^0,f,c
  7066  0033AA  2A0B               	incf	(strncmp@l+1)^0,f,c
  7067  0033AC  4A0C               	infsnz	strncmp@r^0,f,c
  7068  0033AE  2A0D               	incf	(strncmp@r+1)^0,f,c
  7069  0033B0  0607               	decf	strncmp@n^0,f,c
  7070  0033B2  A0D8               	btfss	status,0,c
  7071  0033B4  0608               	decf	(strncmp@n+1)^0,f,c
  7072  0033B6                     l3972:
  7073  0033B6  C00A  FFF6         	movff	strncmp@l,tblptrl
  7074  0033BA  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7075  0033BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7076  0033BE  6AF8               	clrf	tblptru,c
  7077  0033C0                     	endif
  7078  0033C0                     	if	0	;tblptru may be non-zero
  7079  0033C0                     	endif
  7080  0033C0  0008               	tblrd		*
  7081  0033C2  50F5               	movf	tablat,w,c
  7082  0033C4  0900               	iorlw	0
  7083  0033C6  B4D8               	btfsc	status,2,c
  7084  0033C8  EFE8  F019         	goto	u3821
  7085  0033CC  EFEA  F019         	goto	u3820
  7086  0033D0                     u3821:
  7087  0033D0  EF19  F01A         	goto	l3980
  7088  0033D4                     u3820:
  7089  0033D4  C00C  FFF6         	movff	strncmp@r,tblptrl
  7090  0033D8  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7091  0033DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7092  0033DC  6AF8               	clrf	tblptru,c
  7093  0033DE                     	endif
  7094  0033DE                     	if	0	;tblptru may be non-zero
  7095  0033DE                     	endif
  7096  0033DE  0008               	tblrd		*
  7097  0033E0  50F5               	movf	tablat,w,c
  7098  0033E2  0900               	iorlw	0
  7099  0033E4  B4D8               	btfsc	status,2,c
  7100  0033E6  EFF7  F019         	goto	u3831
  7101  0033EA  EFF9  F019         	goto	u3830
  7102  0033EE                     u3831:
  7103  0033EE  EF19  F01A         	goto	l3980
  7104  0033F2                     u3830:
  7105  0033F2  5007               	movf	strncmp@n^0,w,c
  7106  0033F4  1008               	iorwf	(strncmp@n+1)^0,w,c
  7107  0033F6  B4D8               	btfsc	status,2,c
  7108  0033F8  EF00  F01A         	goto	u3841
  7109  0033FC  EF02  F01A         	goto	u3840
  7110  003400                     u3841:
  7111  003400  EF19  F01A         	goto	l3980
  7112  003404                     u3840:
  7113  003404  C00A  FFF6         	movff	strncmp@l,tblptrl
  7114  003408  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7115  00340C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7116  00340C  6AF8               	clrf	tblptru,c
  7117  00340E                     	endif
  7118  00340E                     	if	0	;tblptru may be non-zero
  7119  00340E                     	endif
  7120  00340E  0008               	tblrd		*
  7121  003410  CFF5 F009          	movff	tablat,??_strncmp
  7122  003414  C00C  FFF6         	movff	strncmp@r,tblptrl
  7123  003418  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7124  00341C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7125  00341C  6AF8               	clrf	tblptru,c
  7126  00341E                     	endif
  7127  00341E                     	if	0	;tblptru may be non-zero
  7128  00341E                     	endif
  7129  00341E  0008               	tblrd		*
  7130  003420  50F5               	movf	tablat,w,c
  7131  003422  1809               	xorwf	??_strncmp^0,w,c
  7132  003424  B4D8               	btfsc	status,2,c
  7133  003426  EF17  F01A         	goto	u3851
  7134  00342A  EF19  F01A         	goto	u3850
  7135  00342E                     u3851:
  7136  00342E  EFD4  F019         	goto	l3970
  7137  003432                     u3850:
  7138  003432                     l3980:
  7139  003432  C00A  FFF6         	movff	strncmp@l,tblptrl
  7140  003436  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7141  00343A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7142  00343A  6AF8               	clrf	tblptru,c
  7143  00343C                     	endif
  7144  00343C                     	if	0	;tblptru may be non-zero
  7145  00343C                     	endif
  7146  00343C  0008               	tblrd		*
  7147  00343E  CFF5 F009          	movff	tablat,??_strncmp
  7148  003442  C00C  FFF6         	movff	strncmp@r,tblptrl
  7149  003446  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7150  00344A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7151  00344A  6AF8               	clrf	tblptru,c
  7152  00344C                     	endif
  7153  00344C                     	if	0	;tblptru may be non-zero
  7154  00344C                     	endif
  7155  00344C  0008               	tblrd		*
  7156  00344E  50F5               	movf	tablat,w,c
  7157  003450  5C09               	subwf	??_strncmp^0,w,c
  7158  003452  6E03               	movwf	?_strncmp^0,c
  7159  003454  6A04               	clrf	(?_strncmp+1)^0,c
  7160  003456  A0D8               	btfss	status,0,c
  7161  003458  0604               	decf	(?_strncmp+1)^0,f,c
  7162  00345A                     l1481:
  7163  00345A  0012               	return		;funcret
  7164  00345C                     __end_of_strncmp:
  7165                           	opt callstack 0
  7166                           
  7167 ;; *************** function _stoa *****************
  7168 ;; Defined at:
  7169 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7172 ;;		 -> vsnprintf@f(6), 
  7173 ;;  s               2   13[COMRAM] PTR unsigned char 
  7174 ;;		 -> ?_snprintf(2), 
  7175 ;; Auto vars:     Size  Location     Type
  7176 ;;  nuls            7   16[COMRAM] unsigned char [7]
  7177 ;;  l               2   31[COMRAM] int 
  7178 ;;  p               2   29[COMRAM] int 
  7179 ;;  cp              2   27[COMRAM] PTR unsigned char 
  7180 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7181 ;;  w               2   25[COMRAM] int 
  7182 ;;  i               2   23[COMRAM] int 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  2   11[COMRAM] int 
  7185 ;; Registers used:
  7186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7193 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7195 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7196 ;;Total ram usage:       22 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    6
  7199 ;; This function calls:
  7200 ;;		_fputc
  7201 ;;		_strlen
  7202 ;; This function is called by:
  7203 ;;		_vfpfcnvrt
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text14
  7208  002ADA                     __ptext14:
  7209                           	opt callstack 0
  7210  002ADA                     _stoa:
  7211                           	opt callstack 20
  7212  002ADA                     
  7213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7214  002ADA  EE20  F0EC         	lfsr	2,stoa@F1152
  7215  002ADE  EE10  F011         	lfsr	1,stoa@nuls
  7216  002AE2  0E06               	movlw	6
  7217  002AE4                     u3411:
  7218  002AE4  CFDB FFE3          	movff	plusw2,plusw1
  7219  002AE8  06E8               	decf	wreg,f,c
  7220  002AEA  E2FC               	bc	u3411
  7221  002AEC                     
  7222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7223  002AEC  C00E  F01C         	movff	stoa@s,stoa@cp
  7224  002AF0  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  7225  002AF4                     
  7226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7227  002AF4  501C               	movf	stoa@cp^0,w,c
  7228  002AF6  101D               	iorwf	(stoa@cp+1)^0,w,c
  7229  002AF8  A4D8               	btfss	status,2,c
  7230  002AFA  EF81  F015         	goto	u3421
  7231  002AFE  EF83  F015         	goto	u3420
  7232  002B02                     u3421:
  7233  002B02  EF87  F015         	goto	l3786
  7234  002B06                     u3420:
  7235  002B06                     
  7236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7237  002B06  0E11               	movlw	low stoa@nuls
  7238  002B08  6E1C               	movwf	stoa@cp^0,c
  7239  002B0A  0E00               	movlw	high stoa@nuls
  7240  002B0C  6E1D               	movwf	(stoa@cp+1)^0,c
  7241  002B0E                     l3786:
  7242                           
  7243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7244  002B0E  C01C  F003         	movff	stoa@cp,strlen@s
  7245  002B12  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  7246  002B16  EC98  F01E         	call	_strlen	;wreg free
  7247  002B1A  C003  F020         	movff	?_strlen,stoa@l
  7248  002B1E  C004  F021         	movff	?_strlen+1,stoa@l+1
  7249  002B22                     
  7250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7251  002B22  C057  F01E         	movff	_prec,stoa@p
  7252  002B26  C058  F01F         	movff	_prec+1,stoa@p+1
  7253  002B2A                     
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7255  002B2A  BE1F               	btfsc	(stoa@p+1)^0,7,c
  7256  002B2C  EF9A  F015         	goto	u3431
  7257  002B30  EF9C  F015         	goto	u3430
  7258  002B34                     u3431:
  7259  002B34  EFB1  F015         	goto	l562
  7260  002B38                     u3430:
  7261  002B38  5020               	movf	stoa@l^0,w,c
  7262  002B3A  5C1E               	subwf	stoa@p^0,w,c
  7263  002B3C  501F               	movf	(stoa@p+1)^0,w,c
  7264  002B3E  0A80               	xorlw	128
  7265  002B40  6E10               	movwf	??_stoa^0,c
  7266  002B42  5021               	movf	(stoa@l+1)^0,w,c
  7267  002B44  0A80               	xorlw	128
  7268  002B46  5810               	subwfb	??_stoa^0,w,c
  7269  002B48  A0D8               	btfss	status,0,c
  7270  002B4A  EFA9  F015         	goto	u3441
  7271  002B4E  EFAB  F015         	goto	u3440
  7272  002B52                     u3441:
  7273  002B52  EFAD  F015         	goto	l560
  7274  002B56                     u3440:
  7275  002B56  EFB1  F015         	goto	l562
  7276  002B5A                     l560:
  7277  002B5A  C01E  F020         	movff	stoa@p,stoa@l
  7278  002B5E  C01F  F021         	movff	stoa@p+1,stoa@l+1
  7279  002B62                     l562:
  7280                           
  7281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7282  002B62  C020  F01E         	movff	stoa@l,stoa@p
  7283  002B66  C021  F01F         	movff	stoa@l+1,stoa@p+1
  7284                           
  7285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7286  002B6A  C0C5  F01A         	movff	_width,stoa@w
  7287  002B6E  C0C6  F01B         	movff	_width+1,stoa@w+1
  7288                           
  7289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7290  002B72  B059               	btfsc	_flags^0,0,c
  7291  002B74  EFBE  F015         	goto	u3451
  7292  002B78  EFC0  F015         	goto	u3450
  7293  002B7C                     u3451:
  7294  002B7C  EFDD  F015         	goto	l3802
  7295  002B80                     u3450:
  7296  002B80  EFCE  F015         	goto	l3800
  7297  002B84                     l3796:
  7298                           
  7299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7300  002B84  0E00               	movlw	0
  7301  002B86  6E04               	movwf	(fputc@c+1)^0,c
  7302  002B88  0E20               	movlw	32
  7303  002B8A  6E03               	movwf	fputc@c^0,c
  7304  002B8C  C00C  F005         	movff	stoa@fp,fputc@fp
  7305  002B90  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  7306  002B94  EC96  F01A         	call	_fputc	;wreg free
  7307  002B98                     
  7308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7309  002B98  4A20               	infsnz	stoa@l^0,f,c
  7310  002B9A  2A21               	incf	(stoa@l+1)^0,f,c
  7311  002B9C                     l3800:
  7312                           
  7313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7314  002B9C  501A               	movf	stoa@w^0,w,c
  7315  002B9E  5C20               	subwf	stoa@l^0,w,c
  7316  002BA0  5021               	movf	(stoa@l+1)^0,w,c
  7317  002BA2  0A80               	xorlw	128
  7318  002BA4  6E10               	movwf	??_stoa^0,c
  7319  002BA6  501B               	movf	(stoa@w+1)^0,w,c
  7320  002BA8  0A80               	xorlw	128
  7321  002BAA  5810               	subwfb	??_stoa^0,w,c
  7322  002BAC  A0D8               	btfss	status,0,c
  7323  002BAE  EFDB  F015         	goto	u3461
  7324  002BB2  EFDD  F015         	goto	u3460
  7325  002BB6                     u3461:
  7326  002BB6  EFC2  F015         	goto	l3796
  7327  002BBA                     u3460:
  7328  002BBA                     l3802:
  7329                           
  7330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7331  002BBA  0E00               	movlw	0
  7332  002BBC  6E19               	movwf	(stoa@i+1)^0,c
  7333  002BBE  0E00               	movlw	0
  7334  002BC0  6E18               	movwf	stoa@i^0,c
  7335                           
  7336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7337  002BC2  EFF6  F015         	goto	l3810
  7338  002BC6                     l3804:
  7339                           
  7340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7341  002BC6  C01C  FFD9         	movff	stoa@cp,fsr2l
  7342  002BCA  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  7343  002BCE  50DF               	movf	indf2,w,c
  7344  002BD0  6E10               	movwf	??_stoa^0,c
  7345  002BD2  5010               	movf	??_stoa^0,w,c
  7346  002BD4  6E03               	movwf	fputc@c^0,c
  7347  002BD6  6A04               	clrf	(fputc@c+1)^0,c
  7348  002BD8  C00C  F005         	movff	stoa@fp,fputc@fp
  7349  002BDC  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  7350  002BE0  EC96  F01A         	call	_fputc	;wreg free
  7351  002BE4                     
  7352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7353  002BE4  4A1C               	infsnz	stoa@cp^0,f,c
  7354  002BE6  2A1D               	incf	(stoa@cp+1)^0,f,c
  7355  002BE8                     
  7356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7357  002BE8  4A18               	infsnz	stoa@i^0,f,c
  7358  002BEA  2A19               	incf	(stoa@i+1)^0,f,c
  7359  002BEC                     l3810:
  7360                           
  7361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7362  002BEC  501E               	movf	stoa@p^0,w,c
  7363  002BEE  5C18               	subwf	stoa@i^0,w,c
  7364  002BF0  5019               	movf	(stoa@i+1)^0,w,c
  7365  002BF2  0A80               	xorlw	128
  7366  002BF4  6E10               	movwf	??_stoa^0,c
  7367  002BF6  501F               	movf	(stoa@p+1)^0,w,c
  7368  002BF8  0A80               	xorlw	128
  7369  002BFA  5810               	subwfb	??_stoa^0,w,c
  7370  002BFC  A0D8               	btfss	status,0,c
  7371  002BFE  EF03  F016         	goto	u3471
  7372  002C02  EF05  F016         	goto	u3470
  7373  002C06                     u3471:
  7374  002C06  EFE3  F015         	goto	l3804
  7375  002C0A                     u3470:
  7376  002C0A                     
  7377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7378  002C0A  A059               	btfss	_flags^0,0,c
  7379  002C0C  EF0A  F016         	goto	u3481
  7380  002C10  EF0C  F016         	goto	u3480
  7381  002C14                     u3481:
  7382  002C14  EF29  F016         	goto	l572
  7383  002C18                     u3480:
  7384  002C18  EF1A  F016         	goto	l3818
  7385  002C1C                     l3814:
  7386                           
  7387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7388  002C1C  0E00               	movlw	0
  7389  002C1E  6E04               	movwf	(fputc@c+1)^0,c
  7390  002C20  0E20               	movlw	32
  7391  002C22  6E03               	movwf	fputc@c^0,c
  7392  002C24  C00C  F005         	movff	stoa@fp,fputc@fp
  7393  002C28  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  7394  002C2C  EC96  F01A         	call	_fputc	;wreg free
  7395  002C30                     
  7396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7397  002C30  4A20               	infsnz	stoa@l^0,f,c
  7398  002C32  2A21               	incf	(stoa@l+1)^0,f,c
  7399  002C34                     l3818:
  7400                           
  7401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7402  002C34  501A               	movf	stoa@w^0,w,c
  7403  002C36  5C20               	subwf	stoa@l^0,w,c
  7404  002C38  5021               	movf	(stoa@l+1)^0,w,c
  7405  002C3A  0A80               	xorlw	128
  7406  002C3C  6E10               	movwf	??_stoa^0,c
  7407  002C3E  501B               	movf	(stoa@w+1)^0,w,c
  7408  002C40  0A80               	xorlw	128
  7409  002C42  5810               	subwfb	??_stoa^0,w,c
  7410  002C44  A0D8               	btfss	status,0,c
  7411  002C46  EF27  F016         	goto	u3491
  7412  002C4A  EF29  F016         	goto	u3490
  7413  002C4E                     u3491:
  7414  002C4E  EF0E  F016         	goto	l3814
  7415  002C52                     u3490:
  7416  002C52                     l572:
  7417                           
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7419  002C52  C020  F00C         	movff	stoa@l,?_stoa
  7420  002C56  C021  F00D         	movff	stoa@l+1,?_stoa+1
  7421  002C5A  0012               	return		;funcret
  7422  002C5C                     __end_of_stoa:
  7423                           	opt callstack 0
  7424                           
  7425 ;; *************** function _otoa *****************
  7426 ;; Defined at:
  7427 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7430 ;;		 -> vsnprintf@f(6), 
  7431 ;;  d               8   31[COMRAM] unsigned long long 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  n               8   53[COMRAM] unsigned long long 
  7434 ;;  i               2   61[COMRAM] int 
  7435 ;;  w               2   51[COMRAM] int 
  7436 ;;  t               2   49[COMRAM] int 
  7437 ;;  p               2   47[COMRAM] int 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  2   29[COMRAM] int 
  7440 ;; Registers used:
  7441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7447 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;Total ram usage:       34 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    8
  7454 ;; This function calls:
  7455 ;;		_pad
  7456 ;; This function is called by:
  7457 ;;		_vfpfcnvrt
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           	psect	text15
  7462  002240                     __ptext15:
  7463                           	opt callstack 0
  7464  002240                     _otoa:
  7465                           	opt callstack 18
  7466  002240                     
  7467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7468  002240  BE58               	btfsc	(_prec+1)^0,7,c
  7469  002242  EF25  F011         	goto	u3311
  7470  002246  EF27  F011         	goto	u3310
  7471  00224A                     u3311:
  7472  00224A  EF28  F011         	goto	l3734
  7473  00224E                     u3310:
  7474  00224E                     
  7475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7476  00224E  9259               	bcf	_flags^0,1,c
  7477  002250                     l3734:
  7478                           
  7479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7480  002250  BE58               	btfsc	(_prec+1)^0,7,c
  7481  002252  EF35  F011         	goto	u3320
  7482  002256  5058               	movf	(_prec+1)^0,w,c
  7483  002258  E106               	bnz	u3321
  7484  00225A  0457               	decf	_prec^0,w,c
  7485  00225C  B0D8               	btfsc	status,0,c
  7486  00225E  EF33  F011         	goto	u3321
  7487  002262  EF35  F011         	goto	u3320
  7488  002266                     u3321:
  7489  002266  EF3B  F011         	goto	l542
  7490  00226A                     u3320:
  7491  00226A  0E00               	movlw	0
  7492  00226C  6E31               	movwf	(otoa@p+1)^0,c
  7493  00226E  0E01               	movlw	1
  7494  002270  6E30               	movwf	otoa@p^0,c
  7495  002272  EF3F  F011         	goto	l544
  7496  002276                     l542:
  7497  002276  C057  F030         	movff	_prec,otoa@p
  7498  00227A  C058  F031         	movff	_prec+1,otoa@p+1
  7499  00227E                     l544:
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7502  00227E  C0C5  F034         	movff	_width,otoa@w
  7503  002282  C0C6  F035         	movff	_width+1,otoa@w+1
  7504                           
  7505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7506  002286  C020  F036         	movff	otoa@d,otoa@n
  7507  00228A  C021  F037         	movff	otoa@d+1,otoa@n+1
  7508  00228E  C022  F038         	movff	otoa@d+2,otoa@n+2
  7509  002292  C023  F039         	movff	otoa@d+3,otoa@n+3
  7510  002296  C024  F03A         	movff	otoa@d+4,otoa@n+4
  7511  00229A  C025  F03B         	movff	otoa@d+5,otoa@n+5
  7512  00229E  C026  F03C         	movff	otoa@d+6,otoa@n+6
  7513  0022A2  C027  F03D         	movff	otoa@d+7,otoa@n+7
  7514  0022A6                     
  7515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7516  0022A6  0E00               	movlw	0
  7517  0022A8  6E3F               	movwf	(otoa@i+1)^0,c
  7518  0022AA  0E1F               	movlw	31
  7519  0022AC  6E3E               	movwf	otoa@i^0,c
  7520  0022AE                     
  7521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7522  0022AE  0E00               	movlw	0
  7523  0022B0  0100               	movlb	0	; () banked
  7524  0022B2  6FEB               	movwf	(_dbuf+31)& (0+255),b
  7525  0022B4                     
  7526                           ; BSR set to: 0
  7527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7528  0022B4  0E00               	movlw	0
  7529  0022B6  6E33               	movwf	(otoa@t+1)^0,c
  7530  0022B8  0E00               	movlw	0
  7531  0022BA  6E32               	movwf	otoa@t^0,c
  7532                           
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7534  0022BC  EFA5  F011         	goto	l3756
  7535  0022C0                     l3744:
  7536                           
  7537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7538  0022C0  063E               	decf	otoa@i^0,f,c
  7539  0022C2  A0D8               	btfss	status,0,c
  7540  0022C4  063F               	decf	(otoa@i+1)^0,f,c
  7541  0022C6                     
  7542                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7543  0022C6  0E07               	movlw	7
  7544  0022C8  1436               	andwf	otoa@n^0,w,c
  7545  0022CA  6E32               	movwf	otoa@t^0,c
  7546  0022CC  6A33               	clrf	(otoa@t+1)^0,c
  7547  0022CE                     
  7548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7549  0022CE  0ECC               	movlw	low _dbuf
  7550  0022D0  243E               	addwf	otoa@i^0,w,c
  7551  0022D2  6ED9               	movwf	fsr2l,c
  7552  0022D4  0E00               	movlw	high _dbuf
  7553  0022D6  203F               	addwfc	(otoa@i+1)^0,w,c
  7554  0022D8  6EDA               	movwf	fsr2h,c
  7555  0022DA  5032               	movf	otoa@t^0,w,c
  7556  0022DC  0F30               	addlw	48
  7557  0022DE  6EDF               	movwf	indf2,c
  7558  0022E0                     
  7559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7560  0022E0  0630               	decf	otoa@p^0,f,c
  7561  0022E2  A0D8               	btfss	status,0,c
  7562  0022E4  0631               	decf	(otoa@p+1)^0,f,c
  7563  0022E6                     
  7564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7565  0022E6  0634               	decf	otoa@w^0,f,c
  7566  0022E8  A0D8               	btfss	status,0,c
  7567  0022EA  0635               	decf	(otoa@w+1)^0,f,c
  7568  0022EC                     
  7569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7570  0022EC  C036  F028         	movff	otoa@n,??_otoa
  7571  0022F0  C037  F029         	movff	otoa@n+1,??_otoa+1
  7572  0022F4  C038  F02A         	movff	otoa@n+2,??_otoa+2
  7573  0022F8  C039  F02B         	movff	otoa@n+3,??_otoa+3
  7574  0022FC  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  7575  002300  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  7576  002304  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  7577  002308  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  7578  00230C  0E04               	movlw	4
  7579  00230E  EF92  F011         	goto	u3330
  7580  002312                     u3335:
  7581  002312  90D8               	bcf	status,0,c
  7582  002314  322F               	rrcf	(??_otoa+7)^0,f,c
  7583  002316  322E               	rrcf	(??_otoa+6)^0,f,c
  7584  002318  322D               	rrcf	(??_otoa+5)^0,f,c
  7585  00231A  322C               	rrcf	(??_otoa+4)^0,f,c
  7586  00231C  322B               	rrcf	(??_otoa+3)^0,f,c
  7587  00231E  322A               	rrcf	(??_otoa+2)^0,f,c
  7588  002320  3229               	rrcf	(??_otoa+1)^0,f,c
  7589  002322  3228               	rrcf	??_otoa^0,f,c
  7590  002324                     u3330:
  7591  002324  2EE8               	decfsz	wreg,f,c
  7592  002326  EF89  F011         	goto	u3335
  7593  00232A  C028  F036         	movff	??_otoa,otoa@n
  7594  00232E  C029  F037         	movff	??_otoa+1,otoa@n+1
  7595  002332  C02A  F038         	movff	??_otoa+2,otoa@n+2
  7596  002336  C02B  F039         	movff	??_otoa+3,otoa@n+3
  7597  00233A  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  7598  00233E  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  7599  002342  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  7600  002346  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  7601  00234A                     l3756:
  7602                           
  7603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7604  00234A  BE3F               	btfsc	(otoa@i+1)^0,7,c
  7605  00234C  EFB0  F011         	goto	u3341
  7606  002350  503F               	movf	(otoa@i+1)^0,w,c
  7607  002352  E108               	bnz	u3340
  7608  002354  043E               	decf	otoa@i^0,w,c
  7609  002356  A0D8               	btfss	status,0,c
  7610  002358  EFB0  F011         	goto	u3341
  7611  00235C  EFB2  F011         	goto	u3340
  7612  002360                     u3341:
  7613  002360  EFE2  F011         	goto	l551
  7614  002364                     u3340:
  7615  002364  5036               	movf	otoa@n^0,w,c
  7616  002366  1037               	iorwf	(otoa@n+1)^0,w,c
  7617  002368  1038               	iorwf	(otoa@n+2)^0,w,c
  7618  00236A  1039               	iorwf	(otoa@n+3)^0,w,c
  7619  00236C  103A               	iorwf	(otoa@n+4)^0,w,c
  7620  00236E  103B               	iorwf	(otoa@n+5)^0,w,c
  7621  002370  103C               	iorwf	(otoa@n+6)^0,w,c
  7622  002372  103D               	iorwf	(otoa@n+7)^0,w,c
  7623  002374  A4D8               	btfss	status,2,c
  7624  002376  EFBF  F011         	goto	u3351
  7625  00237A  EFC1  F011         	goto	u3350
  7626  00237E                     u3351:
  7627  00237E  EF60  F011         	goto	l3744
  7628  002382                     u3350:
  7629  002382  BE31               	btfsc	(otoa@p+1)^0,7,c
  7630  002384  EFCE  F011         	goto	u3360
  7631  002388  5031               	movf	(otoa@p+1)^0,w,c
  7632  00238A  E106               	bnz	u3361
  7633  00238C  0430               	decf	otoa@p^0,w,c
  7634  00238E  B0D8               	btfsc	status,0,c
  7635  002390  EFCC  F011         	goto	u3361
  7636  002394  EFCE  F011         	goto	u3360
  7637  002398                     u3361:
  7638  002398  EF60  F011         	goto	l3744
  7639  00239C                     u3360:
  7640  00239C  BE35               	btfsc	(otoa@w+1)^0,7,c
  7641  00239E  EFD9  F011         	goto	u3371
  7642  0023A2  5035               	movf	(otoa@w+1)^0,w,c
  7643  0023A4  E108               	bnz	u3370
  7644  0023A6  0434               	decf	otoa@w^0,w,c
  7645  0023A8  A0D8               	btfss	status,0,c
  7646  0023AA  EFD9  F011         	goto	u3371
  7647  0023AE  EFDB  F011         	goto	u3370
  7648  0023B2                     u3371:
  7649  0023B2  EFE2  F011         	goto	l551
  7650  0023B6                     u3370:
  7651  0023B6  B259               	btfsc	_flags^0,1,c
  7652  0023B8  EFE0  F011         	goto	u3381
  7653  0023BC  EFE2  F011         	goto	u3380
  7654  0023C0                     u3381:
  7655  0023C0  EF60  F011         	goto	l3744
  7656  0023C4                     u3380:
  7657  0023C4                     l551:
  7658                           
  7659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7660  0023C4  A859               	btfss	_flags^0,4,c
  7661  0023C6  EFE7  F011         	goto	u3391
  7662  0023CA  EFE9  F011         	goto	u3390
  7663  0023CE                     u3391:
  7664  0023CE  EF00  F012         	goto	l3774
  7665  0023D2                     u3390:
  7666  0023D2  5032               	movf	otoa@t^0,w,c
  7667  0023D4  1033               	iorwf	(otoa@t+1)^0,w,c
  7668  0023D6  B4D8               	btfsc	status,2,c
  7669  0023D8  EFF0  F011         	goto	u3401
  7670  0023DC  EFF2  F011         	goto	u3400
  7671  0023E0                     u3401:
  7672  0023E0  EF00  F012         	goto	l3774
  7673  0023E4                     u3400:
  7674  0023E4                     
  7675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7676  0023E4  063E               	decf	otoa@i^0,f,c
  7677  0023E6  A0D8               	btfss	status,0,c
  7678  0023E8  063F               	decf	(otoa@i+1)^0,f,c
  7679  0023EA                     
  7680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7681  0023EA  0ECC               	movlw	low _dbuf
  7682  0023EC  243E               	addwf	otoa@i^0,w,c
  7683  0023EE  6ED9               	movwf	fsr2l,c
  7684  0023F0  0E00               	movlw	high _dbuf
  7685  0023F2  203F               	addwfc	(otoa@i+1)^0,w,c
  7686  0023F4  6EDA               	movwf	fsr2h,c
  7687  0023F6  0E30               	movlw	48
  7688  0023F8  6EDF               	movwf	indf2,c
  7689  0023FA                     
  7690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7691  0023FA  0634               	decf	otoa@w^0,f,c
  7692  0023FC  A0D8               	btfss	status,0,c
  7693  0023FE  0635               	decf	(otoa@w+1)^0,f,c
  7694  002400                     l3774:
  7695                           
  7696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7697  002400  C01E  F013         	movff	otoa@fp,pad@fp
  7698  002404  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  7699  002408  0ECC               	movlw	low _dbuf
  7700  00240A  243E               	addwf	otoa@i^0,w,c
  7701  00240C  6E15               	movwf	pad@buf^0,c
  7702  00240E  0E00               	movlw	high _dbuf
  7703  002410  203F               	addwfc	(otoa@i+1)^0,w,c
  7704  002412  6E16               	movwf	(pad@buf+1)^0,c
  7705  002414  C034  F017         	movff	otoa@w,pad@p
  7706  002418  C035  F018         	movff	otoa@w+1,pad@p+1
  7707  00241C  ECFB  F01A         	call	_pad	;wreg free
  7708  002420  C013  F01E         	movff	?_pad,?_otoa
  7709  002424  C014  F01F         	movff	?_pad+1,?_otoa+1
  7710  002428  0012               	return		;funcret
  7711  00242A                     __end_of_otoa:
  7712                           	opt callstack 0
  7713                           
  7714 ;; *************** function _dtoa *****************
  7715 ;; Defined at:
  7716 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7719 ;;		 -> vsnprintf@f(6), 
  7720 ;;  d               8   31[COMRAM] long long 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  n               8   55[COMRAM] long long 
  7723 ;;  i               2   63[COMRAM] int 
  7724 ;;  s               2   53[COMRAM] int 
  7725 ;;  w               2   51[COMRAM] int 
  7726 ;;  p               2   49[COMRAM] int 
  7727 ;; Return value:  Size  Location     Type
  7728 ;;                  2   29[COMRAM] int 
  7729 ;; Registers used:
  7730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7731 ;; Tracked objects:
  7732 ;;		On entry : 0/0
  7733 ;;		On exit  : 0/0
  7734 ;;		Unchanged: 0/0
  7735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7736 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7737 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7738 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7739 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7740 ;;Total ram usage:       36 bytes
  7741 ;; Hardware stack levels used:    1
  7742 ;; Hardware stack levels required when called:    8
  7743 ;; This function calls:
  7744 ;;		___aodiv
  7745 ;;		___aomod
  7746 ;;		_abs
  7747 ;;		_pad
  7748 ;; This function is called by:
  7749 ;;		_vfpfcnvrt
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text16
  7754  001A8E                     __ptext16:
  7755                           	opt callstack 0
  7756  001A8E                     _dtoa:
  7757                           	opt callstack 18
  7758  001A8E                     
  7759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7760  001A8E  C020  F038         	movff	dtoa@d,dtoa@n
  7761  001A92  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  7762  001A96  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  7763  001A9A  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  7764  001A9E  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  7765  001AA2  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  7766  001AA6  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  7767  001AAA  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  7768  001AAE                     
  7769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7770  001AAE  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  7771  001AB0  EF5C  F00D         	goto	u3161
  7772  001AB4  EF5F  F00D         	goto	u3160
  7773  001AB8                     u3161:
  7774  001AB8  0E01               	movlw	1
  7775  001ABA  EF60  F00D         	goto	u3170
  7776  001ABE                     u3160:
  7777  001ABE  0E00               	movlw	0
  7778  001AC0                     u3170:
  7779  001AC0  6E36               	movwf	dtoa@s^0,c
  7780  001AC2  6A37               	clrf	(dtoa@s+1)^0,c
  7781                           
  7782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7783  001AC4  5036               	movf	dtoa@s^0,w,c
  7784  001AC6  1037               	iorwf	(dtoa@s+1)^0,w,c
  7785  001AC8  B4D8               	btfsc	status,2,c
  7786  001ACA  EF69  F00D         	goto	u3181
  7787  001ACE  EF6B  F00D         	goto	u3180
  7788  001AD2                     u3181:
  7789  001AD2  EF7B  F00D         	goto	l3674
  7790  001AD6                     u3180:
  7791  001AD6                     
  7792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7793  001AD6  1E3F               	comf	(dtoa@n+7)^0,f,c
  7794  001AD8  1E3E               	comf	(dtoa@n+6)^0,f,c
  7795  001ADA  1E3D               	comf	(dtoa@n+5)^0,f,c
  7796  001ADC  1E3C               	comf	(dtoa@n+4)^0,f,c
  7797  001ADE  1E3B               	comf	(dtoa@n+3)^0,f,c
  7798  001AE0  1E3A               	comf	(dtoa@n+2)^0,f,c
  7799  001AE2  1E39               	comf	(dtoa@n+1)^0,f,c
  7800  001AE4  6C38               	negf	dtoa@n^0,c
  7801  001AE6  0E00               	movlw	0
  7802  001AE8  2239               	addwfc	(dtoa@n+1)^0,f,c
  7803  001AEA  223A               	addwfc	(dtoa@n+2)^0,f,c
  7804  001AEC  223B               	addwfc	(dtoa@n+3)^0,f,c
  7805  001AEE  223C               	addwfc	(dtoa@n+4)^0,f,c
  7806  001AF0  223D               	addwfc	(dtoa@n+5)^0,f,c
  7807  001AF2  223E               	addwfc	(dtoa@n+6)^0,f,c
  7808  001AF4  223F               	addwfc	(dtoa@n+7)^0,f,c
  7809  001AF6                     l3674:
  7810                           
  7811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7812  001AF6  BE58               	btfsc	(_prec+1)^0,7,c
  7813  001AF8  EF80  F00D         	goto	u3191
  7814  001AFC  EF82  F00D         	goto	u3190
  7815  001B00                     u3191:
  7816  001B00  EF83  F00D         	goto	l3678
  7817  001B04                     u3190:
  7818  001B04                     
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7820  001B04  9259               	bcf	_flags^0,1,c
  7821  001B06                     l3678:
  7822                           
  7823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7824  001B06  BE58               	btfsc	(_prec+1)^0,7,c
  7825  001B08  EF90  F00D         	goto	u3200
  7826  001B0C  5058               	movf	(_prec+1)^0,w,c
  7827  001B0E  E106               	bnz	u3201
  7828  001B10  0457               	decf	_prec^0,w,c
  7829  001B12  B0D8               	btfsc	status,0,c
  7830  001B14  EF8E  F00D         	goto	u3201
  7831  001B18  EF90  F00D         	goto	u3200
  7832  001B1C                     u3201:
  7833  001B1C  EF96  F00D         	goto	l517
  7834  001B20                     u3200:
  7835  001B20  0E00               	movlw	0
  7836  001B22  6E33               	movwf	(dtoa@p+1)^0,c
  7837  001B24  0E01               	movlw	1
  7838  001B26  6E32               	movwf	dtoa@p^0,c
  7839  001B28  EF9A  F00D         	goto	l519
  7840  001B2C                     l517:
  7841  001B2C  C057  F032         	movff	_prec,dtoa@p
  7842  001B30  C058  F033         	movff	_prec+1,dtoa@p+1
  7843  001B34                     l519:
  7844                           
  7845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7846  001B34  C0C5  F034         	movff	_width,dtoa@w
  7847  001B38  C0C6  F035         	movff	_width+1,dtoa@w+1
  7848  001B3C                     
  7849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7850  001B3C  5036               	movf	dtoa@s^0,w,c
  7851  001B3E  1037               	iorwf	(dtoa@s+1)^0,w,c
  7852  001B40  A4D8               	btfss	status,2,c
  7853  001B42  EFA5  F00D         	goto	u3211
  7854  001B46  EFA7  F00D         	goto	u3210
  7855  001B4A                     u3211:
  7856  001B4A  EFAE  F00D         	goto	l3686
  7857  001B4E                     u3210:
  7858  001B4E  A459               	btfss	_flags^0,2,c
  7859  001B50  EFAC  F00D         	goto	u3221
  7860  001B54  EFAE  F00D         	goto	u3220
  7861  001B58                     u3221:
  7862  001B58  EFB1  F00D         	goto	l3688
  7863  001B5C                     u3220:
  7864  001B5C                     l3686:
  7865                           
  7866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7867  001B5C  0634               	decf	dtoa@w^0,f,c
  7868  001B5E  A0D8               	btfss	status,0,c
  7869  001B60  0635               	decf	(dtoa@w+1)^0,f,c
  7870  001B62                     l3688:
  7871                           
  7872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7873  001B62  0E00               	movlw	0
  7874  001B64  6E41               	movwf	(dtoa@i+1)^0,c
  7875  001B66  0E1F               	movlw	31
  7876  001B68  6E40               	movwf	dtoa@i^0,c
  7877  001B6A                     
  7878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7879  001B6A  0E00               	movlw	0
  7880  001B6C  0100               	movlb	0	; () banked
  7881  001B6E  6FEB               	movwf	(_dbuf+31)& (0+255),b
  7882                           
  7883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7884  001B70  EF36  F00E         	goto	l3702
  7885  001B74                     l3692:
  7886                           
  7887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7888  001B74  0640               	decf	dtoa@i^0,f,c
  7889  001B76  A0D8               	btfss	status,0,c
  7890  001B78  0641               	decf	(dtoa@i+1)^0,f,c
  7891  001B7A                     
  7892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7893  001B7A  0ECC               	movlw	low _dbuf
  7894  001B7C  2440               	addwf	dtoa@i^0,w,c
  7895  001B7E  6ED9               	movwf	fsr2l,c
  7896  001B80  0E00               	movlw	high _dbuf
  7897  001B82  2041               	addwfc	(dtoa@i+1)^0,w,c
  7898  001B84  6EDA               	movwf	fsr2h,c
  7899  001B86  C038  F003         	movff	dtoa@n,___aomod@dividend
  7900  001B8A  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  7901  001B8E  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  7902  001B92  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  7903  001B96  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  7904  001B9A  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  7905  001B9E  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  7906  001BA2  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  7907  001BA6  0E0A               	movlw	10
  7908  001BA8  6E0B               	movwf	___aomod@divisor^0,c
  7909  001BAA  0E00               	movlw	0
  7910  001BAC  6E0C               	movwf	(___aomod@divisor+1)^0,c
  7911  001BAE  0E00               	movlw	0
  7912  001BB0  6E0D               	movwf	(___aomod@divisor+2)^0,c
  7913  001BB2  0E00               	movlw	0
  7914  001BB4  6E0E               	movwf	(___aomod@divisor+3)^0,c
  7915  001BB6  0E00               	movlw	0
  7916  001BB8  6E0F               	movwf	(___aomod@divisor+4)^0,c
  7917  001BBA  0E00               	movlw	0
  7918  001BBC  6E10               	movwf	(___aomod@divisor+5)^0,c
  7919  001BBE  0E00               	movlw	0
  7920  001BC0  6E11               	movwf	(___aomod@divisor+6)^0,c
  7921  001BC2  0E00               	movlw	0
  7922  001BC4  6E12               	movwf	(___aomod@divisor+7)^0,c
  7923  001BC6  ECEB  F016         	call	___aomod	;wreg free
  7924  001BCA  C003  F028         	movff	?___aomod,??_dtoa
  7925  001BCE  C004  F029         	movff	?___aomod+1,??_dtoa+1
  7926  001BD2  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  7927  001BD6  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  7928  001BDA  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  7929  001BDE  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  7930  001BE2  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  7931  001BE6  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  7932  001BEA  C028  F015         	movff	??_dtoa,abs@a
  7933  001BEE  C02A  F016         	movff	??_dtoa+2,abs@a+1
  7934  001BF2  EC06  F01E         	call	_abs	;wreg free
  7935  001BF6  5015               	movf	?_abs^0,w,c
  7936  001BF8  0F30               	addlw	48
  7937  001BFA  6EDF               	movwf	indf2,c
  7938  001BFC                     
  7939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7940  001BFC  0632               	decf	dtoa@p^0,f,c
  7941  001BFE  A0D8               	btfss	status,0,c
  7942  001C00  0633               	decf	(dtoa@p+1)^0,f,c
  7943  001C02                     
  7944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7945  001C02  0634               	decf	dtoa@w^0,f,c
  7946  001C04  A0D8               	btfss	status,0,c
  7947  001C06  0635               	decf	(dtoa@w+1)^0,f,c
  7948  001C08                     
  7949                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7950  001C08  C038  F003         	movff	dtoa@n,___aodiv@dividend
  7951  001C0C  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  7952  001C10  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  7953  001C14  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  7954  001C18  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  7955  001C1C  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  7956  001C20  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  7957  001C24  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  7958  001C28  0E0A               	movlw	10
  7959  001C2A  6E0B               	movwf	___aodiv@divisor^0,c
  7960  001C2C  0E00               	movlw	0
  7961  001C2E  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  7962  001C30  0E00               	movlw	0
  7963  001C32  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  7964  001C34  0E00               	movlw	0
  7965  001C36  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  7966  001C38  0E00               	movlw	0
  7967  001C3A  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  7968  001C3C  0E00               	movlw	0
  7969  001C3E  6E10               	movwf	(___aodiv@divisor+5)^0,c
  7970  001C40  0E00               	movlw	0
  7971  001C42  6E11               	movwf	(___aodiv@divisor+6)^0,c
  7972  001C44  0E00               	movlw	0
  7973  001C46  6E12               	movwf	(___aodiv@divisor+7)^0,c
  7974  001C48  ECA9  F014         	call	___aodiv	;wreg free
  7975  001C4C  C003  F038         	movff	?___aodiv,dtoa@n
  7976  001C50  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  7977  001C54  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  7978  001C58  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  7979  001C5C  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  7980  001C60  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  7981  001C64  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  7982  001C68  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  7983  001C6C                     l3702:
  7984                           
  7985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7986  001C6C  BE41               	btfsc	(dtoa@i+1)^0,7,c
  7987  001C6E  EF41  F00E         	goto	u3231
  7988  001C72  5041               	movf	(dtoa@i+1)^0,w,c
  7989  001C74  E108               	bnz	u3230
  7990  001C76  0440               	decf	dtoa@i^0,w,c
  7991  001C78  A0D8               	btfss	status,0,c
  7992  001C7A  EF41  F00E         	goto	u3231
  7993  001C7E  EF43  F00E         	goto	u3230
  7994  001C82                     u3231:
  7995  001C82  EF73  F00E         	goto	l3712
  7996  001C86                     u3230:
  7997  001C86  5038               	movf	dtoa@n^0,w,c
  7998  001C88  1039               	iorwf	(dtoa@n+1)^0,w,c
  7999  001C8A  103A               	iorwf	(dtoa@n+2)^0,w,c
  8000  001C8C  103B               	iorwf	(dtoa@n+3)^0,w,c
  8001  001C8E  103C               	iorwf	(dtoa@n+4)^0,w,c
  8002  001C90  103D               	iorwf	(dtoa@n+5)^0,w,c
  8003  001C92  103E               	iorwf	(dtoa@n+6)^0,w,c
  8004  001C94  103F               	iorwf	(dtoa@n+7)^0,w,c
  8005  001C96  A4D8               	btfss	status,2,c
  8006  001C98  EF50  F00E         	goto	u3241
  8007  001C9C  EF52  F00E         	goto	u3240
  8008  001CA0                     u3241:
  8009  001CA0  EFBA  F00D         	goto	l3692
  8010  001CA4                     u3240:
  8011  001CA4  BE33               	btfsc	(dtoa@p+1)^0,7,c
  8012  001CA6  EF5F  F00E         	goto	u3250
  8013  001CAA  5033               	movf	(dtoa@p+1)^0,w,c
  8014  001CAC  E106               	bnz	u3251
  8015  001CAE  0432               	decf	dtoa@p^0,w,c
  8016  001CB0  B0D8               	btfsc	status,0,c
  8017  001CB2  EF5D  F00E         	goto	u3251
  8018  001CB6  EF5F  F00E         	goto	u3250
  8019  001CBA                     u3251:
  8020  001CBA  EFBA  F00D         	goto	l3692
  8021  001CBE                     u3250:
  8022  001CBE  BE35               	btfsc	(dtoa@w+1)^0,7,c
  8023  001CC0  EF6A  F00E         	goto	u3261
  8024  001CC4  5035               	movf	(dtoa@w+1)^0,w,c
  8025  001CC6  E108               	bnz	u3260
  8026  001CC8  0434               	decf	dtoa@w^0,w,c
  8027  001CCA  A0D8               	btfss	status,0,c
  8028  001CCC  EF6A  F00E         	goto	u3261
  8029  001CD0  EF6C  F00E         	goto	u3260
  8030  001CD4                     u3261:
  8031  001CD4  EF73  F00E         	goto	l3712
  8032  001CD8                     u3260:
  8033  001CD8  B259               	btfsc	_flags^0,1,c
  8034  001CDA  EF71  F00E         	goto	u3271
  8035  001CDE  EF73  F00E         	goto	u3270
  8036  001CE2                     u3271:
  8037  001CE2  EFBA  F00D         	goto	l3692
  8038  001CE6                     u3270:
  8039  001CE6                     l3712:
  8040                           
  8041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8042  001CE6  5036               	movf	dtoa@s^0,w,c
  8043  001CE8  1037               	iorwf	(dtoa@s+1)^0,w,c
  8044  001CEA  A4D8               	btfss	status,2,c
  8045  001CEC  EF7A  F00E         	goto	u3281
  8046  001CF0  EF7C  F00E         	goto	u3280
  8047  001CF4                     u3281:
  8048  001CF4  EF83  F00E         	goto	l3716
  8049  001CF8                     u3280:
  8050  001CF8  A459               	btfss	_flags^0,2,c
  8051  001CFA  EF81  F00E         	goto	u3291
  8052  001CFE  EF83  F00E         	goto	u3290
  8053  001D02                     u3291:
  8054  001D02  EFA1  F00E         	goto	l3726
  8055  001D06                     u3290:
  8056  001D06                     l3716:
  8057                           
  8058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8059  001D06  0640               	decf	dtoa@i^0,f,c
  8060  001D08  A0D8               	btfss	status,0,c
  8061  001D0A  0641               	decf	(dtoa@i+1)^0,f,c
  8062  001D0C                     
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8064  001D0C  5036               	movf	dtoa@s^0,w,c
  8065  001D0E  1037               	iorwf	(dtoa@s+1)^0,w,c
  8066  001D10  A4D8               	btfss	status,2,c
  8067  001D12  EF8D  F00E         	goto	u3301
  8068  001D16  EF8F  F00E         	goto	u3300
  8069  001D1A                     u3301:
  8070  001D1A  EF95  F00E         	goto	l3722
  8071  001D1E                     u3300:
  8072  001D1E  0E00               	movlw	0
  8073  001D20  6E31               	movwf	(_dtoa$1312+1)^0,c
  8074  001D22  0E2B               	movlw	43
  8075  001D24  6E30               	movwf	_dtoa$1312^0,c
  8076  001D26  EF99  F00E         	goto	l3724
  8077  001D2A                     l3722:
  8078  001D2A  0E00               	movlw	0
  8079  001D2C  6E31               	movwf	(_dtoa$1312+1)^0,c
  8080  001D2E  0E2D               	movlw	45
  8081  001D30  6E30               	movwf	_dtoa$1312^0,c
  8082  001D32                     l3724:
  8083  001D32  0ECC               	movlw	low _dbuf
  8084  001D34  2440               	addwf	dtoa@i^0,w,c
  8085  001D36  6ED9               	movwf	fsr2l,c
  8086  001D38  0E00               	movlw	high _dbuf
  8087  001D3A  2041               	addwfc	(dtoa@i+1)^0,w,c
  8088  001D3C  6EDA               	movwf	fsr2h,c
  8089  001D3E  C030  FFDF         	movff	_dtoa$1312,indf2
  8090  001D42                     l3726:
  8091                           
  8092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8093  001D42  C01E  F013         	movff	dtoa@fp,pad@fp
  8094  001D46  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  8095  001D4A  0ECC               	movlw	low _dbuf
  8096  001D4C  2440               	addwf	dtoa@i^0,w,c
  8097  001D4E  6E15               	movwf	pad@buf^0,c
  8098  001D50  0E00               	movlw	high _dbuf
  8099  001D52  2041               	addwfc	(dtoa@i+1)^0,w,c
  8100  001D54  6E16               	movwf	(pad@buf+1)^0,c
  8101  001D56  C034  F017         	movff	dtoa@w,pad@p
  8102  001D5A  C035  F018         	movff	dtoa@w+1,pad@p+1
  8103  001D5E  ECFB  F01A         	call	_pad	;wreg free
  8104  001D62  C013  F01E         	movff	?_pad,?_dtoa
  8105  001D66  C014  F01F         	movff	?_pad+1,?_dtoa+1
  8106  001D6A  0012               	return		;funcret
  8107  001D6C                     __end_of_dtoa:
  8108                           	opt callstack 0
  8109                           
  8110 ;; *************** function _abs *****************
  8111 ;; Defined at:
  8112 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;  a               2   20[COMRAM] int 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  2   20[COMRAM] int 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8130 ;;Total ram usage:        4 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    4
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_dtoa
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text17
  8141  003C0C                     __ptext17:
  8142                           	opt callstack 0
  8143  003C0C                     _abs:
  8144                           	opt callstack 21
  8145  003C0C  BE16               	btfsc	(abs@a+1)^0,7,c
  8146  003C0E  EF13  F01E         	goto	u2820
  8147  003C12  5016               	movf	(abs@a+1)^0,w,c
  8148  003C14  E106               	bnz	u2821
  8149  003C16  0415               	decf	abs@a^0,w,c
  8150  003C18  B0D8               	btfsc	status,0,c
  8151  003C1A  EF11  F01E         	goto	u2821
  8152  003C1E  EF13  F01E         	goto	u2820
  8153  003C22                     u2821:
  8154  003C22  EF21  F01E         	goto	l1381
  8155  003C26                     u2820:
  8156  003C26  C015  F017         	movff	abs@a,??_abs
  8157  003C2A  C016  F018         	movff	abs@a+1,??_abs+1
  8158  003C2E  1E17               	comf	??_abs^0,f,c
  8159  003C30  1E18               	comf	(??_abs+1)^0,f,c
  8160  003C32  4A17               	infsnz	??_abs^0,f,c
  8161  003C34  2A18               	incf	(??_abs+1)^0,f,c
  8162  003C36  C017  F015         	movff	??_abs,?_abs
  8163  003C3A  C018  F016         	movff	??_abs+1,?_abs+1
  8164  003C3E  EF25  F01E         	goto	l1384
  8165  003C42                     l1381:
  8166  003C42  C015  F015         	movff	abs@a,?_abs
  8167  003C46  C016  F016         	movff	abs@a+1,?_abs+1
  8168  003C4A                     l1384:
  8169  003C4A  0012               	return		;funcret
  8170  003C4C                     __end_of_abs:
  8171                           	opt callstack 0
  8172                           
  8173 ;; *************** function ___aomod *****************
  8174 ;; Defined at:
  8175 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;  dividend        8    2[COMRAM] long long 
  8178 ;;  divisor         8   10[COMRAM] long long 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  sign            1   19[COMRAM] unsigned char 
  8181 ;;  counter         1   18[COMRAM] unsigned char 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  8    2[COMRAM] long long 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2, status,0
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8191 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;Total ram usage:       18 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    4
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_dtoa
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text18
  8206  002DD6                     __ptext18:
  8207                           	opt callstack 0
  8208  002DD6                     ___aomod:
  8209                           	opt callstack 21
  8210  002DD6  0E00               	movlw	0
  8211  002DD8  6E14               	movwf	___aomod@sign^0,c
  8212  002DDA  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  8213  002DDC  EFF4  F016         	goto	u2990
  8214  002DE0  EFF2  F016         	goto	u2991
  8215  002DE4                     u2991:
  8216  002DE4  EF06  F017         	goto	l3568
  8217  002DE8                     u2990:
  8218  002DE8  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  8219  002DEA  1E09               	comf	(___aomod@dividend+6)^0,f,c
  8220  002DEC  1E08               	comf	(___aomod@dividend+5)^0,f,c
  8221  002DEE  1E07               	comf	(___aomod@dividend+4)^0,f,c
  8222  002DF0  1E06               	comf	(___aomod@dividend+3)^0,f,c
  8223  002DF2  1E05               	comf	(___aomod@dividend+2)^0,f,c
  8224  002DF4  1E04               	comf	(___aomod@dividend+1)^0,f,c
  8225  002DF6  6C03               	negf	___aomod@dividend^0,c
  8226  002DF8  0E00               	movlw	0
  8227  002DFA  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  8228  002DFC  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  8229  002DFE  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  8230  002E00  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  8231  002E02  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  8232  002E04  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  8233  002E06  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  8234  002E08  0E01               	movlw	1
  8235  002E0A  6E14               	movwf	___aomod@sign^0,c
  8236  002E0C                     l3568:
  8237  002E0C  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  8238  002E0E  EF0D  F017         	goto	u3000
  8239  002E12  EF0B  F017         	goto	u3001
  8240  002E16                     u3001:
  8241  002E16  EF1D  F017         	goto	l3572
  8242  002E1A                     u3000:
  8243  002E1A  1E12               	comf	(___aomod@divisor+7)^0,f,c
  8244  002E1C  1E11               	comf	(___aomod@divisor+6)^0,f,c
  8245  002E1E  1E10               	comf	(___aomod@divisor+5)^0,f,c
  8246  002E20  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  8247  002E22  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  8248  002E24  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  8249  002E26  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  8250  002E28  6C0B               	negf	___aomod@divisor^0,c
  8251  002E2A  0E00               	movlw	0
  8252  002E2C  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  8253  002E2E  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  8254  002E30  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  8255  002E32  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  8256  002E34  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  8257  002E36  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  8258  002E38  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  8259  002E3A                     l3572:
  8260  002E3A  500B               	movf	___aomod@divisor^0,w,c
  8261  002E3C  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  8262  002E3E  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  8263  002E40  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  8264  002E42  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  8265  002E44  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  8266  002E46  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  8267  002E48  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  8268  002E4A  B4D8               	btfsc	status,2,c
  8269  002E4C  EF2A  F017         	goto	u3011
  8270  002E50  EF2C  F017         	goto	u3010
  8271  002E54                     u3011:
  8272  002E54  EF74  F017         	goto	l3588
  8273  002E58                     u3010:
  8274  002E58  0E01               	movlw	1
  8275  002E5A  6E13               	movwf	___aomod@counter^0,c
  8276  002E5C  EF3A  F017         	goto	l3578
  8277  002E60                     l3576:
  8278  002E60  90D8               	bcf	status,0,c
  8279  002E62  360B               	rlcf	___aomod@divisor^0,f,c
  8280  002E64  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  8281  002E66  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  8282  002E68  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  8283  002E6A  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  8284  002E6C  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  8285  002E6E  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  8286  002E70  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  8287  002E72  2A13               	incf	___aomod@counter^0,f,c
  8288  002E74                     l3578:
  8289  002E74  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  8290  002E76  EF3F  F017         	goto	u3021
  8291  002E7A  EF41  F017         	goto	u3020
  8292  002E7E                     u3021:
  8293  002E7E  EF30  F017         	goto	l3576
  8294  002E82                     u3020:
  8295  002E82                     l3580:
  8296  002E82  500B               	movf	___aomod@divisor^0,w,c
  8297  002E84  5C03               	subwf	___aomod@dividend^0,w,c
  8298  002E86  500C               	movf	(___aomod@divisor+1)^0,w,c
  8299  002E88  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  8300  002E8A  500D               	movf	(___aomod@divisor+2)^0,w,c
  8301  002E8C  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  8302  002E8E  500E               	movf	(___aomod@divisor+3)^0,w,c
  8303  002E90  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  8304  002E92  500F               	movf	(___aomod@divisor+4)^0,w,c
  8305  002E94  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  8306  002E96  5010               	movf	(___aomod@divisor+5)^0,w,c
  8307  002E98  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  8308  002E9A  5011               	movf	(___aomod@divisor+6)^0,w,c
  8309  002E9C  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  8310  002E9E  5012               	movf	(___aomod@divisor+7)^0,w,c
  8311  002EA0  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  8312  002EA2  A0D8               	btfss	status,0,c
  8313  002EA4  EF56  F017         	goto	u3031
  8314  002EA8  EF58  F017         	goto	u3030
  8315  002EAC                     u3031:
  8316  002EAC  EF68  F017         	goto	l3584
  8317  002EB0                     u3030:
  8318  002EB0  500B               	movf	___aomod@divisor^0,w,c
  8319  002EB2  5E03               	subwf	___aomod@dividend^0,f,c
  8320  002EB4  500C               	movf	(___aomod@divisor+1)^0,w,c
  8321  002EB6  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  8322  002EB8  500D               	movf	(___aomod@divisor+2)^0,w,c
  8323  002EBA  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  8324  002EBC  500E               	movf	(___aomod@divisor+3)^0,w,c
  8325  002EBE  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  8326  002EC0  500F               	movf	(___aomod@divisor+4)^0,w,c
  8327  002EC2  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  8328  002EC4  5010               	movf	(___aomod@divisor+5)^0,w,c
  8329  002EC6  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  8330  002EC8  5011               	movf	(___aomod@divisor+6)^0,w,c
  8331  002ECA  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  8332  002ECC  5012               	movf	(___aomod@divisor+7)^0,w,c
  8333  002ECE  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  8334  002ED0                     l3584:
  8335  002ED0  90D8               	bcf	status,0,c
  8336  002ED2  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  8337  002ED4  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  8338  002ED6  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  8339  002ED8  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  8340  002EDA  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  8341  002EDC  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  8342  002EDE  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  8343  002EE0  320B               	rrcf	___aomod@divisor^0,f,c
  8344  002EE2  2E13               	decfsz	___aomod@counter^0,f,c
  8345  002EE4  EF41  F017         	goto	l3580
  8346  002EE8                     l3588:
  8347  002EE8  5014               	movf	___aomod@sign^0,w,c
  8348  002EEA  B4D8               	btfsc	status,2,c
  8349  002EEC  EF7A  F017         	goto	u3041
  8350  002EF0  EF7C  F017         	goto	u3040
  8351  002EF4                     u3041:
  8352  002EF4  EF8C  F017         	goto	l3592
  8353  002EF8                     u3040:
  8354  002EF8  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  8355  002EFA  1E09               	comf	(___aomod@dividend+6)^0,f,c
  8356  002EFC  1E08               	comf	(___aomod@dividend+5)^0,f,c
  8357  002EFE  1E07               	comf	(___aomod@dividend+4)^0,f,c
  8358  002F00  1E06               	comf	(___aomod@dividend+3)^0,f,c
  8359  002F02  1E05               	comf	(___aomod@dividend+2)^0,f,c
  8360  002F04  1E04               	comf	(___aomod@dividend+1)^0,f,c
  8361  002F06  6C03               	negf	___aomod@dividend^0,c
  8362  002F08  0E00               	movlw	0
  8363  002F0A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  8364  002F0C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  8365  002F0E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  8366  002F10  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  8367  002F12  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  8368  002F14  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  8369  002F16  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  8370  002F18                     l3592:
  8371  002F18  C003  F003         	movff	___aomod@dividend,?___aomod
  8372  002F1C  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  8373  002F20  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  8374  002F24  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  8375  002F28  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  8376  002F2C  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  8377  002F30  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  8378  002F34  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  8379  002F38  0012               	return		;funcret
  8380  002F3A                     __end_of___aomod:
  8381                           	opt callstack 0
  8382                           
  8383 ;; *************** function ___aodiv *****************
  8384 ;; Defined at:
  8385 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  dividend        8    2[COMRAM] long long 
  8388 ;;  divisor         8   10[COMRAM] long long 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;  quotient        8   20[COMRAM] long long 
  8391 ;;  sign            1   19[COMRAM] unsigned char 
  8392 ;;  counter         1   18[COMRAM] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  8    2[COMRAM] long long 
  8395 ;; Registers used:
  8396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8402 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8403 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8405 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;Total ram usage:       26 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    4
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_dtoa
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text19
  8417  002952                     __ptext19:
  8418                           	opt callstack 0
  8419  002952                     ___aodiv:
  8420                           	opt callstack 21
  8421  002952  0E00               	movlw	0
  8422  002954  6E14               	movwf	___aodiv@sign^0,c
  8423  002956  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  8424  002958  EFB2  F014         	goto	u2920
  8425  00295C  EFB0  F014         	goto	u2921
  8426  002960                     u2921:
  8427  002960  EFC4  F014         	goto	l3524
  8428  002964                     u2920:
  8429  002964  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  8430  002966  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  8431  002968  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  8432  00296A  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  8433  00296C  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  8434  00296E  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  8435  002970  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  8436  002972  6C0B               	negf	___aodiv@divisor^0,c
  8437  002974  0E00               	movlw	0
  8438  002976  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  8439  002978  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  8440  00297A  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  8441  00297C  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  8442  00297E  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  8443  002980  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  8444  002982  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  8445  002984  0E01               	movlw	1
  8446  002986  6E14               	movwf	___aodiv@sign^0,c
  8447  002988                     l3524:
  8448  002988  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  8449  00298A  EFCB  F014         	goto	u2930
  8450  00298E  EFC9  F014         	goto	u2931
  8451  002992                     u2931:
  8452  002992  EFDD  F014         	goto	l3530
  8453  002996                     u2930:
  8454  002996  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  8455  002998  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  8456  00299A  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  8457  00299C  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  8458  00299E  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  8459  0029A0  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  8460  0029A2  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  8461  0029A4  6C03               	negf	___aodiv@dividend^0,c
  8462  0029A6  0E00               	movlw	0
  8463  0029A8  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  8464  0029AA  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  8465  0029AC  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  8466  0029AE  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  8467  0029B0  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  8468  0029B2  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  8469  0029B4  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  8470  0029B6  0E01               	movlw	1
  8471  0029B8  1A14               	xorwf	___aodiv@sign^0,f,c
  8472  0029BA                     l3530:
  8473  0029BA  EE20  F015         	lfsr	2,___aodiv@quotient
  8474  0029BE  0E07               	movlw	7
  8475  0029C0                     u2941:
  8476  0029C0  6ADE               	clrf	postinc2,c
  8477  0029C2  06E8               	decf	wreg,f,c
  8478  0029C4  E2FD               	bc	u2941
  8479  0029C6  500B               	movf	___aodiv@divisor^0,w,c
  8480  0029C8  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  8481  0029CA  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  8482  0029CC  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  8483  0029CE  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  8484  0029D0  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  8485  0029D2  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  8486  0029D4  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  8487  0029D6  B4D8               	btfsc	status,2,c
  8488  0029D8  EFF0  F014         	goto	u2951
  8489  0029DC  EFF2  F014         	goto	u2950
  8490  0029E0                     u2951:
  8491  0029E0  EF44  F015         	goto	l3552
  8492  0029E4                     u2950:
  8493  0029E4  0E01               	movlw	1
  8494  0029E6  6E13               	movwf	___aodiv@counter^0,c
  8495  0029E8  EF00  F015         	goto	l3538
  8496  0029EC                     l3536:
  8497  0029EC  90D8               	bcf	status,0,c
  8498  0029EE  360B               	rlcf	___aodiv@divisor^0,f,c
  8499  0029F0  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  8500  0029F2  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  8501  0029F4  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  8502  0029F6  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  8503  0029F8  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  8504  0029FA  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  8505  0029FC  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  8506  0029FE  2A13               	incf	___aodiv@counter^0,f,c
  8507  002A00                     l3538:
  8508  002A00  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  8509  002A02  EF05  F015         	goto	u2961
  8510  002A06  EF07  F015         	goto	u2960
  8511  002A0A                     u2961:
  8512  002A0A  EFF6  F014         	goto	l3536
  8513  002A0E                     u2960:
  8514  002A0E                     l3540:
  8515  002A0E  90D8               	bcf	status,0,c
  8516  002A10  3615               	rlcf	___aodiv@quotient^0,f,c
  8517  002A12  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  8518  002A14  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  8519  002A16  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  8520  002A18  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  8521  002A1A  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  8522  002A1C  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  8523  002A1E  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  8524  002A20  500B               	movf	___aodiv@divisor^0,w,c
  8525  002A22  5C03               	subwf	___aodiv@dividend^0,w,c
  8526  002A24  500C               	movf	(___aodiv@divisor+1)^0,w,c
  8527  002A26  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  8528  002A28  500D               	movf	(___aodiv@divisor+2)^0,w,c
  8529  002A2A  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  8530  002A2C  500E               	movf	(___aodiv@divisor+3)^0,w,c
  8531  002A2E  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  8532  002A30  500F               	movf	(___aodiv@divisor+4)^0,w,c
  8533  002A32  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  8534  002A34  5010               	movf	(___aodiv@divisor+5)^0,w,c
  8535  002A36  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  8536  002A38  5011               	movf	(___aodiv@divisor+6)^0,w,c
  8537  002A3A  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  8538  002A3C  5012               	movf	(___aodiv@divisor+7)^0,w,c
  8539  002A3E  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  8540  002A40  A0D8               	btfss	status,0,c
  8541  002A42  EF25  F015         	goto	u2971
  8542  002A46  EF27  F015         	goto	u2970
  8543  002A4A                     u2971:
  8544  002A4A  EF38  F015         	goto	l3548
  8545  002A4E                     u2970:
  8546  002A4E  500B               	movf	___aodiv@divisor^0,w,c
  8547  002A50  5E03               	subwf	___aodiv@dividend^0,f,c
  8548  002A52  500C               	movf	(___aodiv@divisor+1)^0,w,c
  8549  002A54  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  8550  002A56  500D               	movf	(___aodiv@divisor+2)^0,w,c
  8551  002A58  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  8552  002A5A  500E               	movf	(___aodiv@divisor+3)^0,w,c
  8553  002A5C  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  8554  002A5E  500F               	movf	(___aodiv@divisor+4)^0,w,c
  8555  002A60  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  8556  002A62  5010               	movf	(___aodiv@divisor+5)^0,w,c
  8557  002A64  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  8558  002A66  5011               	movf	(___aodiv@divisor+6)^0,w,c
  8559  002A68  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  8560  002A6A  5012               	movf	(___aodiv@divisor+7)^0,w,c
  8561  002A6C  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  8562  002A6E  8015               	bsf	___aodiv@quotient^0,0,c
  8563  002A70                     l3548:
  8564  002A70  90D8               	bcf	status,0,c
  8565  002A72  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  8566  002A74  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  8567  002A76  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  8568  002A78  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  8569  002A7A  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  8570  002A7C  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  8571  002A7E  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  8572  002A80  320B               	rrcf	___aodiv@divisor^0,f,c
  8573  002A82  2E13               	decfsz	___aodiv@counter^0,f,c
  8574  002A84  EF07  F015         	goto	l3540
  8575  002A88                     l3552:
  8576  002A88  5014               	movf	___aodiv@sign^0,w,c
  8577  002A8A  B4D8               	btfsc	status,2,c
  8578  002A8C  EF4A  F015         	goto	u2981
  8579  002A90  EF4C  F015         	goto	u2980
  8580  002A94                     u2981:
  8581  002A94  EF5C  F015         	goto	l3556
  8582  002A98                     u2980:
  8583  002A98  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  8584  002A9A  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  8585  002A9C  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  8586  002A9E  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  8587  002AA0  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  8588  002AA2  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  8589  002AA4  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  8590  002AA6  6C15               	negf	___aodiv@quotient^0,c
  8591  002AA8  0E00               	movlw	0
  8592  002AAA  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  8593  002AAC  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  8594  002AAE  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  8595  002AB0  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  8596  002AB2  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  8597  002AB4  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  8598  002AB6  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  8599  002AB8                     l3556:
  8600  002AB8  C015  F003         	movff	___aodiv@quotient,?___aodiv
  8601  002ABC  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  8602  002AC0  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  8603  002AC4  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  8604  002AC8  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  8605  002ACC  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  8606  002AD0  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  8607  002AD4  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  8608  002AD8  0012               	return		;funcret
  8609  002ADA                     __end_of___aodiv:
  8610                           	opt callstack 0
  8611                           
  8612 ;; *************** function _ctoa *****************
  8613 ;; Defined at:
  8614 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8617 ;;		 -> vsnprintf@f(6), 
  8618 ;;  c               1   31[COMRAM] unsigned char 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  w               2   32[COMRAM] int 
  8621 ;;  l               2    0        int 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  2   29[COMRAM] int 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8631 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8634 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8635 ;;Total ram usage:        5 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    8
  8638 ;; This function calls:
  8639 ;;		_pad
  8640 ;; This function is called by:
  8641 ;;		_vfpfcnvrt
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text20
  8646  0039BA                     __ptext20:
  8647                           	opt callstack 0
  8648  0039BA                     _ctoa:
  8649                           	opt callstack 18
  8650  0039BA                     
  8651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8652  0039BA  0100               	movlb	0	; () banked
  8653  0039BC  51C5               	movf	_width& (0+255),w,b
  8654  0039BE  11C6               	iorwf	(_width+1)& (0+255),w,b
  8655  0039C0  A4D8               	btfss	status,2,c
  8656  0039C2  EFE5  F01C         	goto	u3151
  8657  0039C6  EFE7  F01C         	goto	u3150
  8658  0039CA                     u3151:
  8659  0039CA  EFED  F01C         	goto	l3658
  8660  0039CE                     u3150:
  8661  0039CE                     
  8662                           ; BSR set to: 0
  8663  0039CE  C0C5  F021         	movff	_width,ctoa@w
  8664  0039D2  C0C6  F022         	movff	_width+1,ctoa@w+1
  8665  0039D6  EFF3  F01C         	goto	l3660
  8666  0039DA                     l3658:
  8667                           
  8668                           ; BSR set to: 0
  8669  0039DA  0EFF               	movlw	255
  8670  0039DC  25C5               	addwf	_width& (0+255),w,b
  8671  0039DE  6E21               	movwf	ctoa@w^0,c
  8672  0039E0  0EFF               	movlw	255
  8673  0039E2  21C6               	addwfc	(_width+1)& (0+255),w,b
  8674  0039E4  6E22               	movwf	(ctoa@w+1)^0,c
  8675  0039E6                     l3660:
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8679  0039E6  C020  F0CC         	movff	ctoa@c,_dbuf
  8680  0039EA                     
  8681                           ; BSR set to: 0
  8682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8683  0039EA  0E00               	movlw	0
  8684  0039EC  6FCD               	movwf	(_dbuf+1)& (0+255),b
  8685  0039EE                     
  8686                           ; BSR set to: 0
  8687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8688  0039EE  C01E  F013         	movff	ctoa@fp,pad@fp
  8689  0039F2  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
  8690  0039F6  0ECC               	movlw	low _dbuf
  8691  0039F8  6E15               	movwf	pad@buf^0,c
  8692  0039FA  0E00               	movlw	high _dbuf
  8693  0039FC  6E16               	movwf	(pad@buf+1)^0,c
  8694  0039FE  C021  F017         	movff	ctoa@w,pad@p
  8695  003A02  C022  F018         	movff	ctoa@w+1,pad@p+1
  8696  003A06  ECFB  F01A         	call	_pad	;wreg free
  8697  003A0A  C013  F01E         	movff	?_pad,?_ctoa
  8698  003A0E  C014  F01F         	movff	?_pad+1,?_ctoa+1
  8699  003A12  0012               	return		;funcret
  8700  003A14                     __end_of_ctoa:
  8701                           	opt callstack 0
  8702                           
  8703 ;; *************** function _pad *****************
  8704 ;; Defined at:
  8705 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8708 ;;		 -> vsnprintf@f(6), 
  8709 ;;  buf             2   20[COMRAM] PTR unsigned char 
  8710 ;;		 -> dbuf(32), 
  8711 ;;  p               2   22[COMRAM] int 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  w               2   27[COMRAM] int 
  8714 ;;  i               2   25[COMRAM] int 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  2   18[COMRAM] int 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8724 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8727 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8728 ;;Total ram usage:       11 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:    7
  8731 ;; This function calls:
  8732 ;;		_fputc
  8733 ;;		_fputs
  8734 ;;		_strlen
  8735 ;; This function is called by:
  8736 ;;		_ctoa
  8737 ;;		_dtoa
  8738 ;;		_otoa
  8739 ;;		_utoa
  8740 ;;		_xtoa
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text21
  8745  0035F6                     __ptext21:
  8746                           	opt callstack 0
  8747  0035F6                     _pad:
  8748                           	opt callstack 18
  8749  0035F6                     
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8751  0035F6  A059               	btfss	_flags^0,0,c
  8752  0035F8  EF00  F01B         	goto	u2781
  8753  0035FC  EF02  F01B         	goto	u2780
  8754  003600                     u2781:
  8755  003600  EF0C  F01B         	goto	l3466
  8756  003604                     u2780:
  8757  003604                     
  8758                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8759  003604  C015  F00C         	movff	pad@buf,fputs@s
  8760  003608  C016  F00D         	movff	pad@buf+1,fputs@s+1
  8761  00360C  C013  F00E         	movff	pad@fp,fputs@fp
  8762  003610  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  8763  003614  ECC3  F01D         	call	_fputs	;wreg free
  8764  003618                     l3466:
  8765                           
  8766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8767  003618  BE18               	btfsc	(pad@p+1)^0,7,c
  8768  00361A  EF11  F01B         	goto	u2791
  8769  00361E  EF13  F01B         	goto	u2790
  8770  003622                     u2791:
  8771  003622  EF19  F01B         	goto	l3470
  8772  003626                     u2790:
  8773  003626  C017  F01C         	movff	pad@p,pad@w
  8774  00362A  C018  F01D         	movff	pad@p+1,pad@w+1
  8775  00362E  EF1D  F01B         	goto	l499
  8776  003632                     l3470:
  8777  003632  0E00               	movlw	0
  8778  003634  6E1D               	movwf	(pad@w+1)^0,c
  8779  003636  0E00               	movlw	0
  8780  003638  6E1C               	movwf	pad@w^0,c
  8781  00363A                     l499:
  8782                           
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8784  00363A  0E00               	movlw	0
  8785  00363C  6E1B               	movwf	(pad@i+1)^0,c
  8786  00363E  0E00               	movlw	0
  8787  003640  6E1A               	movwf	pad@i^0,c
  8788                           
  8789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8790  003642  EF2F  F01B         	goto	l3476
  8791  003646                     l3472:
  8792                           
  8793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8794  003646  0E00               	movlw	0
  8795  003648  6E04               	movwf	(fputc@c+1)^0,c
  8796  00364A  0E20               	movlw	32
  8797  00364C  6E03               	movwf	fputc@c^0,c
  8798  00364E  C013  F005         	movff	pad@fp,fputc@fp
  8799  003652  C014  F006         	movff	pad@fp+1,fputc@fp+1
  8800  003656  EC96  F01A         	call	_fputc	;wreg free
  8801  00365A                     
  8802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8803  00365A  4A1A               	infsnz	pad@i^0,f,c
  8804  00365C  2A1B               	incf	(pad@i+1)^0,f,c
  8805  00365E                     l3476:
  8806                           
  8807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8808  00365E  501C               	movf	pad@w^0,w,c
  8809  003660  5C1A               	subwf	pad@i^0,w,c
  8810  003662  501B               	movf	(pad@i+1)^0,w,c
  8811  003664  0A80               	xorlw	128
  8812  003666  6E19               	movwf	??_pad^0,c
  8813  003668  501D               	movf	(pad@w+1)^0,w,c
  8814  00366A  0A80               	xorlw	128
  8815  00366C  5819               	subwfb	??_pad^0,w,c
  8816  00366E  A0D8               	btfss	status,0,c
  8817  003670  EF3C  F01B         	goto	u2801
  8818  003674  EF3E  F01B         	goto	u2800
  8819  003678                     u2801:
  8820  003678  EF23  F01B         	goto	l3472
  8821  00367C                     u2800:
  8822  00367C                     
  8823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8824  00367C  B059               	btfsc	_flags^0,0,c
  8825  00367E  EF43  F01B         	goto	u2811
  8826  003682  EF45  F01B         	goto	u2810
  8827  003686                     u2811:
  8828  003686  EF4F  F01B         	goto	l3480
  8829  00368A                     u2810:
  8830  00368A                     
  8831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8832  00368A  C015  F00C         	movff	pad@buf,fputs@s
  8833  00368E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  8834  003692  C013  F00E         	movff	pad@fp,fputs@fp
  8835  003696  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  8836  00369A  ECC3  F01D         	call	_fputs	;wreg free
  8837  00369E                     l3480:
  8838                           
  8839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8840  00369E  C015  F003         	movff	pad@buf,strlen@s
  8841  0036A2  C016  F004         	movff	pad@buf+1,strlen@s+1
  8842  0036A6  EC98  F01E         	call	_strlen	;wreg free
  8843  0036AA  501C               	movf	pad@w^0,w,c
  8844  0036AC  2403               	addwf	?_strlen^0,w,c
  8845  0036AE  6E13               	movwf	?_pad^0,c
  8846  0036B0  501D               	movf	(pad@w+1)^0,w,c
  8847  0036B2  2004               	addwfc	(?_strlen+1)^0,w,c
  8848  0036B4  6E14               	movwf	(?_pad+1)^0,c
  8849  0036B6  0012               	return		;funcret
  8850  0036B8                     __end_of_pad:
  8851                           	opt callstack 0
  8852                           
  8853 ;; *************** function _strlen *****************
  8854 ;; Defined at:
  8855 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  s               2    2[COMRAM] PTR const unsigned char 
  8858 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;  a               2    4[COMRAM] PTR const unsigned char 
  8861 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  2    2[COMRAM] unsigned int 
  8864 ;; Registers used:
  8865 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8866 ;; Tracked objects:
  8867 ;;		On entry : 0/0
  8868 ;;		On exit  : 0/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;Total ram usage:        4 bytes
  8876 ;; Hardware stack levels used:    1
  8877 ;; Hardware stack levels required when called:    4
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;;		_pad
  8882 ;;		_stoa
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text22
  8887  003D30                     __ptext22:
  8888                           	opt callstack 0
  8889  003D30                     _strlen:
  8890                           	opt callstack 20
  8891  003D30  C003  F005         	movff	strlen@s,strlen@a
  8892  003D34  C004  F006         	movff	strlen@s+1,strlen@a+1
  8893  003D38  EFA0  F01E         	goto	l3450
  8894  003D3C                     l3448:
  8895  003D3C  4A03               	infsnz	strlen@s^0,f,c
  8896  003D3E  2A04               	incf	(strlen@s+1)^0,f,c
  8897  003D40                     l3450:
  8898  003D40  C003  FFD9         	movff	strlen@s,fsr2l
  8899  003D44  C004  FFDA         	movff	strlen@s+1,fsr2h
  8900  003D48  50DF               	movf	indf2,w,c
  8901  003D4A  A4D8               	btfss	status,2,c
  8902  003D4C  EFAA  F01E         	goto	u2741
  8903  003D50  EFAC  F01E         	goto	u2740
  8904  003D54                     u2741:
  8905  003D54  EF9E  F01E         	goto	l3448
  8906  003D58                     u2740:
  8907  003D58  5005               	movf	strlen@a^0,w,c
  8908  003D5A  5C03               	subwf	strlen@s^0,w,c
  8909  003D5C  6E03               	movwf	?_strlen^0,c
  8910  003D5E  5006               	movf	(strlen@a+1)^0,w,c
  8911  003D60  5804               	subwfb	(strlen@s+1)^0,w,c
  8912  003D62  6E04               	movwf	(?_strlen+1)^0,c
  8913  003D64  0012               	return		;funcret
  8914  003D66                     __end_of_strlen:
  8915                           	opt callstack 0
  8916                           
  8917 ;; *************** function _fputs *****************
  8918 ;; Defined at:
  8919 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  s               2   11[COMRAM] PTR const unsigned char 
  8922 ;;		 -> dbuf(32), 
  8923 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  8924 ;;		 -> vsnprintf@f(6), 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  i               2   16[COMRAM] int 
  8927 ;;  c               1   15[COMRAM] unsigned char 
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  2   11[COMRAM] int 
  8930 ;; Registers used:
  8931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8940 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8941 ;;Total ram usage:        7 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    6
  8944 ;; This function calls:
  8945 ;;		_fputc
  8946 ;; This function is called by:
  8947 ;;		_pad
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text23
  8952  003B86                     __ptext23:
  8953                           	opt callstack 0
  8954  003B86                     _fputs:
  8955                           	opt callstack 18
  8956  003B86  0E00               	movlw	0
  8957  003B88  6E12               	movwf	(fputs@i+1)^0,c
  8958  003B8A  0E00               	movlw	0
  8959  003B8C  6E11               	movwf	fputs@i^0,c
  8960  003B8E  EFD4  F01D         	goto	l3444
  8961  003B92                     l3440:
  8962  003B92  C010  F003         	movff	fputs@c,fputc@c
  8963  003B96  6A04               	clrf	(fputc@c+1)^0,c
  8964  003B98  C00E  F005         	movff	fputs@fp,fputc@fp
  8965  003B9C  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  8966  003BA0  EC96  F01A         	call	_fputc	;wreg free
  8967  003BA4  4A11               	infsnz	fputs@i^0,f,c
  8968  003BA6  2A12               	incf	(fputs@i+1)^0,f,c
  8969  003BA8                     l3444:
  8970  003BA8  5011               	movf	fputs@i^0,w,c
  8971  003BAA  240C               	addwf	fputs@s^0,w,c
  8972  003BAC  6ED9               	movwf	fsr2l,c
  8973  003BAE  5012               	movf	(fputs@i+1)^0,w,c
  8974  003BB0  200D               	addwfc	(fputs@s+1)^0,w,c
  8975  003BB2  6EDA               	movwf	fsr2h,c
  8976  003BB4  50DF               	movf	indf2,w,c
  8977  003BB6  6E10               	movwf	fputs@c^0,c
  8978  003BB8  5010               	movf	fputs@c^0,w,c
  8979  003BBA  A4D8               	btfss	status,2,c
  8980  003BBC  EFE2  F01D         	goto	u2731
  8981  003BC0  EFE4  F01D         	goto	u2730
  8982  003BC4                     u2731:
  8983  003BC4  EFC9  F01D         	goto	l3440
  8984  003BC8                     u2730:
  8985  003BC8  0012               	return		;funcret
  8986  003BCA                     __end_of_fputs:
  8987                           	opt callstack 0
  8988                           
  8989 ;; *************** function _fputc *****************
  8990 ;; Defined at:
  8991 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  c               2    2[COMRAM] int 
  8994 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  8995 ;;		 -> vsnprintf@f(6), 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2    2[COMRAM] int 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9009 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9010 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;Total ram usage:        9 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    5
  9014 ;; This function calls:
  9015 ;;		_putch
  9016 ;; This function is called by:
  9017 ;;		_pad
  9018 ;;		_stoa
  9019 ;;		_vfpfcnvrt
  9020 ;;		_fputs
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text24
  9025  00352C                     __ptext24:
  9026                           	opt callstack 0
  9027  00352C                     _fputc:
  9028                           	opt callstack 18
  9029  00352C  5005               	movf	fputc@fp^0,w,c
  9030  00352E  1006               	iorwf	(fputc@fp+1)^0,w,c
  9031  003530  B4D8               	btfsc	status,2,c
  9032  003532  EF9D  F01A         	goto	u2691
  9033  003536  EF9F  F01A         	goto	u2690
  9034  00353A                     u2691:
  9035  00353A  EFA8  F01A         	goto	l3428
  9036  00353E                     u2690:
  9037  00353E  5005               	movf	fputc@fp^0,w,c
  9038  003540  1006               	iorwf	(fputc@fp+1)^0,w,c
  9039  003542  A4D8               	btfss	status,2,c
  9040  003544  EFA6  F01A         	goto	u2701
  9041  003548  EFA8  F01A         	goto	u2700
  9042  00354C                     u2701:
  9043  00354C  EFAD  F01A         	goto	l3430
  9044  003550                     u2700:
  9045  003550                     l3428:
  9046  003550  5003               	movf	fputc@c^0,w,c
  9047  003552  ECCA  F01F         	call	_putch
  9048  003556  EFFA  F01A         	goto	l1453
  9049  00355A                     l3430:
  9050  00355A  EE20 F004          	lfsr	2,4
  9051  00355E  5005               	movf	fputc@fp^0,w,c
  9052  003560  26D9               	addwf	fsr2l,f,c
  9053  003562  5006               	movf	(fputc@fp+1)^0,w,c
  9054  003564  22DA               	addwfc	fsr2h,f,c
  9055  003566  50DE               	movf	postinc2,w,c
  9056  003568  10DE               	iorwf	postinc2,w,c
  9057  00356A  B4D8               	btfsc	status,2,c
  9058  00356C  EFBA  F01A         	goto	u2711
  9059  003570  EFBC  F01A         	goto	u2710
  9060  003574                     u2711:
  9061  003574  EFD7  F01A         	goto	l3434
  9062  003578                     u2710:
  9063  003578  EE20 F004          	lfsr	2,4
  9064  00357C  5005               	movf	fputc@fp^0,w,c
  9065  00357E  26D9               	addwf	fsr2l,f,c
  9066  003580  5006               	movf	(fputc@fp+1)^0,w,c
  9067  003582  22DA               	addwfc	fsr2h,f,c
  9068  003584  EE10 F002          	lfsr	1,2
  9069  003588  5005               	movf	fputc@fp^0,w,c
  9070  00358A  26E1               	addwf	fsr1l,f,c
  9071  00358C  5006               	movf	(fputc@fp+1)^0,w,c
  9072  00358E  22E2               	addwfc	fsr1h,f,c
  9073  003590  50DE               	movf	postinc2,w,c
  9074  003592  5CE6               	subwf	postinc1,w,c
  9075  003594  50E6               	movf	postinc1,w,c
  9076  003596  0A80               	xorlw	128
  9077  003598  6E0B               	movwf	(??_fputc+4)^0,c
  9078  00359A  50DE               	movf	postinc2,w,c
  9079  00359C  0A80               	xorlw	128
  9080  00359E  580B               	subwfb	(??_fputc+4)^0,w,c
  9081  0035A0  B0D8               	btfsc	status,0,c
  9082  0035A2  EFD5  F01A         	goto	u2721
  9083  0035A6  EFD7  F01A         	goto	u2720
  9084  0035AA                     u2721:
  9085  0035AA  EFFA  F01A         	goto	l1453
  9086  0035AE                     u2720:
  9087  0035AE                     l3434:
  9088  0035AE  EE20 F002          	lfsr	2,2
  9089  0035B2  5005               	movf	fputc@fp^0,w,c
  9090  0035B4  26D9               	addwf	fsr2l,f,c
  9091  0035B6  5006               	movf	(fputc@fp+1)^0,w,c
  9092  0035B8  22DA               	addwfc	fsr2h,f,c
  9093  0035BA  CFDE F007          	movff	postinc2,??_fputc
  9094  0035BE  CFDD F008          	movff	postdec2,??_fputc+1
  9095  0035C2  C005  FFD9         	movff	fputc@fp,fsr2l
  9096  0035C6  C006  FFDA         	movff	fputc@fp+1,fsr2h
  9097  0035CA  CFDE F009          	movff	postinc2,??_fputc+2
  9098  0035CE  CFDD F00A          	movff	postdec2,??_fputc+3
  9099  0035D2  5007               	movf	??_fputc^0,w,c
  9100  0035D4  2409               	addwf	(??_fputc+2)^0,w,c
  9101  0035D6  6ED9               	movwf	fsr2l,c
  9102  0035D8  5008               	movf	(??_fputc+1)^0,w,c
  9103  0035DA  200A               	addwfc	(??_fputc+3)^0,w,c
  9104  0035DC  6EDA               	movwf	fsr2h,c
  9105  0035DE  C003  FFDF         	movff	fputc@c,indf2
  9106  0035E2  EE20 F002          	lfsr	2,2
  9107  0035E6  5005               	movf	fputc@fp^0,w,c
  9108  0035E8  26D9               	addwf	fsr2l,f,c
  9109  0035EA  5006               	movf	(fputc@fp+1)^0,w,c
  9110  0035EC  22DA               	addwfc	fsr2h,f,c
  9111  0035EE  2ADE               	incf	postinc2,f,c
  9112  0035F0  0E00               	movlw	0
  9113  0035F2  22DD               	addwfc	postdec2,f,c
  9114  0035F4                     l1453:
  9115  0035F4  0012               	return		;funcret
  9116  0035F6                     __end_of_fputc:
  9117                           	opt callstack 0
  9118                           
  9119 ;; *************** function _putch *****************
  9120 ;; Defined at:
  9121 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  c               1    wreg     unsigned char 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;  c               1    0[COMRAM] unsigned char 
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      void 
  9128 ;; Registers used:
  9129 ;;		wreg
  9130 ;; Tracked objects:
  9131 ;;		On entry : 0/0
  9132 ;;		On exit  : 0/0
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9139 ;;Total ram usage:        0 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    4
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_fputc
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           	psect	text25
  9150  003F94                     __ptext25:
  9151                           	opt callstack 0
  9152  003F94                     _putch:
  9153                           	opt callstack 18
  9154  003F94  0012               	return		;funcret
  9155  003F96                     __end_of_putch:
  9156                           	opt callstack 0
  9157                           
  9158 ;; *************** function _atoi *****************
  9159 ;; Defined at:
  9160 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9163 ;;		 -> STR_1(14), 
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;  n               2   22[COMRAM] int 
  9166 ;;  neg             2   15[COMRAM] int 
  9167 ;; Return value:  Size  Location     Type
  9168 ;;                  2    9[COMRAM] int 
  9169 ;; Registers used:
  9170 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9177 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;Total ram usage:       15 bytes
  9181 ;; Hardware stack levels used:    1
  9182 ;; Hardware stack levels required when called:    5
  9183 ;; This function calls:
  9184 ;;		___wmul
  9185 ;;		_isdigit
  9186 ;;		_isspace
  9187 ;; This function is called by:
  9188 ;;		_vfpfcnvrt
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text26
  9193  0027B8                     __ptext26:
  9194                           	opt callstack 0
  9195  0027B8                     _atoi:
  9196                           	opt callstack 21
  9197  0027B8  0E00               	movlw	0
  9198  0027BA  6E18               	movwf	(atoi@n+1)^0,c
  9199  0027BC  0E00               	movlw	0
  9200  0027BE  6E17               	movwf	atoi@n^0,c
  9201  0027C0  0E00               	movlw	0
  9202  0027C2  6E11               	movwf	(atoi@neg+1)^0,c
  9203  0027C4  0E00               	movlw	0
  9204  0027C6  6E10               	movwf	atoi@neg^0,c
  9205  0027C8  EFE8  F013         	goto	l3926
  9206  0027CC                     l3924:
  9207  0027CC  4A0A               	infsnz	atoi@s^0,f,c
  9208  0027CE  2A0B               	incf	(atoi@s+1)^0,f,c
  9209  0027D0                     l3926:
  9210  0027D0  0E01               	movlw	1
  9211  0027D2  6E16               	movwf	_atoi$1926^0,c
  9212  0027D4  C00A  FFF6         	movff	atoi@s,tblptrl
  9213  0027D8  C00B  FFF7         	movff	atoi@s+1,tblptrh
  9214  0027DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9215  0027DC  6AF8               	clrf	tblptru,c
  9216  0027DE                     	endif
  9217  0027DE                     	if	0	;tblptru may be non-zero
  9218  0027DE                     	endif
  9219  0027DE  0008               	tblrd		*
  9220  0027E0  50F5               	movf	tablat,w,c
  9221  0027E2  0A20               	xorlw	32
  9222  0027E4  B4D8               	btfsc	status,2,c
  9223  0027E6  EFF7  F013         	goto	u3741
  9224  0027EA  EFF9  F013         	goto	u3740
  9225  0027EE                     u3741:
  9226  0027EE  EF17  F014         	goto	l3934
  9227  0027F2                     u3740:
  9228  0027F2  0EF7               	movlw	247
  9229  0027F4  6E0C               	movwf	??_atoi^0,c
  9230  0027F6  0EFF               	movlw	255
  9231  0027F8  6E0D               	movwf	(??_atoi+1)^0,c
  9232  0027FA  C00A  FFF6         	movff	atoi@s,tblptrl
  9233  0027FE  C00B  FFF7         	movff	atoi@s+1,tblptrh
  9234  002802                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9235  002802  6AF8               	clrf	tblptru,c
  9236  002804                     	endif
  9237  002804                     	if	0	;tblptru may be non-zero
  9238  002804                     	endif
  9239  002804  0008               	tblrd		*
  9240  002806  50F5               	movf	tablat,w,c
  9241  002808  6E0E               	movwf	(??_atoi+2)^0,c
  9242  00280A  6A0F               	clrf	(??_atoi+3)^0,c
  9243  00280C  500C               	movf	??_atoi^0,w,c
  9244  00280E  260E               	addwf	(??_atoi+2)^0,f,c
  9245  002810  500D               	movf	(??_atoi+1)^0,w,c
  9246  002812  220F               	addwfc	(??_atoi+3)^0,f,c
  9247  002814  500F               	movf	(??_atoi+3)^0,w,c
  9248  002816  E109               	bnz	u3750
  9249  002818  0E05               	movlw	5
  9250  00281A  5C0E               	subwf	(??_atoi+2)^0,w,c
  9251  00281C  A0D8               	btfss	status,0,c
  9252  00281E  EF13  F014         	goto	u3751
  9253  002822  EF15  F014         	goto	u3750
  9254  002826                     u3751:
  9255  002826  EF17  F014         	goto	l3934
  9256  00282A                     u3750:
  9257  00282A  0E00               	movlw	0
  9258  00282C  6E16               	movwf	_atoi$1926^0,c
  9259  00282E                     l3934:
  9260  00282E  C016  F012         	movff	_atoi$1926,_atoi$1925
  9261  002832  6A13               	clrf	(_atoi$1925+1)^0,c
  9262  002834  5012               	movf	_atoi$1925^0,w,c
  9263  002836  1013               	iorwf	(_atoi$1925+1)^0,w,c
  9264  002838  A4D8               	btfss	status,2,c
  9265  00283A  EF21  F014         	goto	u3761
  9266  00283E  EF23  F014         	goto	u3760
  9267  002842                     u3761:
  9268  002842  EFE6  F013         	goto	l3924
  9269  002846                     u3760:
  9270  002846  EF2D  F014         	goto	l3944
  9271  00284A                     l3940:
  9272  00284A  0E00               	movlw	0
  9273  00284C  6E11               	movwf	(atoi@neg+1)^0,c
  9274  00284E  0E01               	movlw	1
  9275  002850  6E10               	movwf	atoi@neg^0,c
  9276  002852                     l3942:
  9277  002852  4A0A               	infsnz	atoi@s^0,f,c
  9278  002854  2A0B               	incf	(atoi@s+1)^0,f,c
  9279  002856  EF64  F014         	goto	l3950
  9280  00285A                     l3944:
  9281  00285A  C00A  FFF6         	movff	atoi@s,tblptrl
  9282  00285E  C00B  FFF7         	movff	atoi@s+1,tblptrh
  9283  002862                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9284  002862  6AF8               	clrf	tblptru,c
  9285  002864                     	endif
  9286  002864                     	if	0	;tblptru may be non-zero
  9287  002864                     	endif
  9288  002864  0008               	tblrd		*
  9289  002866  50F5               	movf	tablat,w,c
  9290  002868  6E0C               	movwf	??_atoi^0,c
  9291  00286A  6A0D               	clrf	(??_atoi+1)^0,c
  9292                           
  9293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9294                           ; Switch size 1, requested type "simple"
  9295                           ; Number of cases is 1, Range of values is 0 to 0
  9296                           ; switch strategies available:
  9297                           ; Name         Instructions Cycles
  9298                           ; simple_byte            4     3 (average)
  9299                           ;	Chosen strategy is simple_byte
  9300  00286C  500D               	movf	(??_atoi+1)^0,w,c
  9301  00286E  0A00               	xorlw	0	; case 0
  9302  002870  B4D8               	btfsc	status,2,c
  9303  002872  EF3D  F014         	goto	l5448
  9304  002876  EF64  F014         	goto	l3950
  9305  00287A                     l5448:
  9306                           
  9307                           ; Switch size 1, requested type "simple"
  9308                           ; Number of cases is 2, Range of values is 43 to 45
  9309                           ; switch strategies available:
  9310                           ; Name         Instructions Cycles
  9311                           ; simple_byte            7     4 (average)
  9312                           ;	Chosen strategy is simple_byte
  9313  00287A  500C               	movf	??_atoi^0,w,c
  9314  00287C  0A2B               	xorlw	43	; case 43
  9315  00287E  B4D8               	btfsc	status,2,c
  9316  002880  EF29  F014         	goto	l3942
  9317  002884  0A06               	xorlw	6	; case 45
  9318  002886  B4D8               	btfsc	status,2,c
  9319  002888  EF25  F014         	goto	l3940
  9320  00288C  EF64  F014         	goto	l3950
  9321  002890                     l3946:
  9322  002890  C017  F003         	movff	atoi@n,___wmul@multiplier
  9323  002894  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
  9324  002898  0E00               	movlw	0
  9325  00289A  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  9326  00289C  0E0A               	movlw	10
  9327  00289E  6E05               	movwf	___wmul@multiplicand^0,c
  9328  0028A0  EC26  F01F         	call	___wmul	;wreg free
  9329  0028A4  C00A  FFF6         	movff	atoi@s,tblptrl
  9330  0028A8  C00B  FFF7         	movff	atoi@s+1,tblptrh
  9331  0028AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9332  0028AC  6AF8               	clrf	tblptru,c
  9333  0028AE                     	endif
  9334  0028AE                     	if	0	;tblptru may be non-zero
  9335  0028AE                     	endif
  9336  0028AE  0008               	tblrd		*
  9337  0028B0  50F5               	movf	tablat,w,c
  9338  0028B2  5E03               	subwf	?___wmul^0,f,c
  9339  0028B4  0E00               	movlw	0
  9340  0028B6  5A04               	subwfb	(?___wmul+1)^0,f,c
  9341  0028B8  0E30               	movlw	48
  9342  0028BA  2403               	addwf	?___wmul^0,w,c
  9343  0028BC  6E17               	movwf	atoi@n^0,c
  9344  0028BE  0E00               	movlw	0
  9345  0028C0  2004               	addwfc	(?___wmul+1)^0,w,c
  9346  0028C2  6E18               	movwf	(atoi@n+1)^0,c
  9347  0028C4  EF29  F014         	goto	l3942
  9348  0028C8                     l3950:
  9349  0028C8  0ED0               	movlw	208
  9350  0028CA  6E0C               	movwf	??_atoi^0,c
  9351  0028CC  0EFF               	movlw	255
  9352  0028CE  6E0D               	movwf	(??_atoi+1)^0,c
  9353  0028D0  C00A  FFF6         	movff	atoi@s,tblptrl
  9354  0028D4  C00B  FFF7         	movff	atoi@s+1,tblptrh
  9355  0028D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9356  0028D8  6AF8               	clrf	tblptru,c
  9357  0028DA                     	endif
  9358  0028DA                     	if	0	;tblptru may be non-zero
  9359  0028DA                     	endif
  9360  0028DA  0008               	tblrd		*
  9361  0028DC  50F5               	movf	tablat,w,c
  9362  0028DE  6E0E               	movwf	(??_atoi+2)^0,c
  9363  0028E0  6A0F               	clrf	(??_atoi+3)^0,c
  9364  0028E2  500C               	movf	??_atoi^0,w,c
  9365  0028E4  260E               	addwf	(??_atoi+2)^0,f,c
  9366  0028E6  500D               	movf	(??_atoi+1)^0,w,c
  9367  0028E8  220F               	addwfc	(??_atoi+3)^0,f,c
  9368  0028EA  500F               	movf	(??_atoi+3)^0,w,c
  9369  0028EC  E10A               	bnz	u3770
  9370  0028EE  0E0A               	movlw	10
  9371  0028F0  5C0E               	subwf	(??_atoi+2)^0,w,c
  9372  0028F2  A0D8               	btfss	status,0,c
  9373  0028F4  EF7E  F014         	goto	u3771
  9374  0028F8  EF81  F014         	goto	u3770
  9375  0028FC                     u3771:
  9376  0028FC  0E01               	movlw	1
  9377  0028FE  EF82  F014         	goto	u3780
  9378  002902                     u3770:
  9379  002902  0E00               	movlw	0
  9380  002904                     u3780:
  9381  002904  6E14               	movwf	_atoi$1927^0,c
  9382  002906  6A15               	clrf	(_atoi$1927+1)^0,c
  9383  002908  5014               	movf	_atoi$1927^0,w,c
  9384  00290A  1015               	iorwf	(_atoi$1927+1)^0,w,c
  9385  00290C  A4D8               	btfss	status,2,c
  9386  00290E  EF8B  F014         	goto	u3791
  9387  002912  EF8D  F014         	goto	u3790
  9388  002916                     u3791:
  9389  002916  EF48  F014         	goto	l3946
  9390  00291A                     u3790:
  9391  00291A  5010               	movf	atoi@neg^0,w,c
  9392  00291C  1011               	iorwf	(atoi@neg+1)^0,w,c
  9393  00291E  A4D8               	btfss	status,2,c
  9394  002920  EF94  F014         	goto	u3801
  9395  002924  EF96  F014         	goto	u3800
  9396  002928                     u3801:
  9397  002928  EFA4  F014         	goto	l1412
  9398  00292C                     u3800:
  9399  00292C  C017  F00C         	movff	atoi@n,??_atoi
  9400  002930  C018  F00D         	movff	atoi@n+1,??_atoi+1
  9401  002934  1E0C               	comf	??_atoi^0,f,c
  9402  002936  1E0D               	comf	(??_atoi+1)^0,f,c
  9403  002938  4A0C               	infsnz	??_atoi^0,f,c
  9404  00293A  2A0D               	incf	(??_atoi+1)^0,f,c
  9405  00293C  C00C  F00A         	movff	??_atoi,?_atoi
  9406  002940  C00D  F00B         	movff	??_atoi+1,?_atoi+1
  9407  002944  EFA8  F014         	goto	l1415
  9408  002948                     l1412:
  9409  002948  C017  F00A         	movff	atoi@n,?_atoi
  9410  00294C  C018  F00B         	movff	atoi@n+1,?_atoi+1
  9411  002950                     l1415:
  9412  002950  0012               	return		;funcret
  9413  002952                     __end_of_atoi:
  9414                           	opt callstack 0
  9415                           
  9416 ;; *************** function _isspace *****************
  9417 ;; Defined at:
  9418 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;  c               2    2[COMRAM] int 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  2    2[COMRAM] int 
  9425 ;; Registers used:
  9426 ;;		wreg, status,2, status,0
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;Total ram usage:        7 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    4
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		_atoi
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text27
  9447  003A14                     __ptext27:
  9448                           	opt callstack 0
  9449  003A14                     _isspace:
  9450                           	opt callstack 21
  9451  003A14  0E01               	movlw	1
  9452  003A16  6E09               	movwf	_isspace$1952^0,c
  9453  003A18  0E20               	movlw	32
  9454  003A1A  1803               	xorwf	isspace@c^0,w,c
  9455  003A1C  1004               	iorwf	(isspace@c+1)^0,w,c
  9456  003A1E  B4D8               	btfsc	status,2,c
  9457  003A20  EF14  F01D         	goto	u3121
  9458  003A24  EF16  F01D         	goto	u3120
  9459  003A28                     u3121:
  9460  003A28  EF2F  F01D         	goto	l3642
  9461  003A2C                     u3120:
  9462  003A2C  0EF7               	movlw	247
  9463  003A2E  6E05               	movwf	??_isspace^0,c
  9464  003A30  0EFF               	movlw	255
  9465  003A32  6E06               	movwf	(??_isspace+1)^0,c
  9466  003A34  C003  F007         	movff	isspace@c,??_isspace+2
  9467  003A38  C004  F008         	movff	isspace@c+1,??_isspace+3
  9468  003A3C  5005               	movf	??_isspace^0,w,c
  9469  003A3E  2607               	addwf	(??_isspace+2)^0,f,c
  9470  003A40  5006               	movf	(??_isspace+1)^0,w,c
  9471  003A42  2208               	addwfc	(??_isspace+3)^0,f,c
  9472  003A44  5008               	movf	(??_isspace+3)^0,w,c
  9473  003A46  E109               	bnz	u3130
  9474  003A48  0E05               	movlw	5
  9475  003A4A  5C07               	subwf	(??_isspace+2)^0,w,c
  9476  003A4C  A0D8               	btfss	status,0,c
  9477  003A4E  EF2B  F01D         	goto	u3131
  9478  003A52  EF2D  F01D         	goto	u3130
  9479  003A56                     u3131:
  9480  003A56  EF2F  F01D         	goto	l3642
  9481  003A5A                     u3130:
  9482  003A5A  0E00               	movlw	0
  9483  003A5C  6E09               	movwf	_isspace$1952^0,c
  9484  003A5E                     l3642:
  9485  003A5E  C009  F003         	movff	_isspace$1952,?_isspace
  9486  003A62  6A04               	clrf	(?_isspace+1)^0,c
  9487  003A64  0012               	return		;funcret
  9488  003A66                     __end_of_isspace:
  9489                           	opt callstack 0
  9490                           
  9491 ;; *************** function _isdigit *****************
  9492 ;; Defined at:
  9493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;  c               2    2[COMRAM] int 
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;                  2    2[COMRAM] int 
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0
  9502 ;; Tracked objects:
  9503 ;;		On entry : 0/0
  9504 ;;		On exit  : 0/0
  9505 ;;		Unchanged: 0/0
  9506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9511 ;;Total ram usage:        6 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    4
  9514 ;; This function calls:
  9515 ;;		Nothing
  9516 ;; This function is called by:
  9517 ;;		_vfpfcnvrt
  9518 ;;		_atoi
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text28
  9523  003CF8                     __ptext28:
  9524                           	opt callstack 0
  9525  003CF8                     _isdigit:
  9526                           	opt callstack 22
  9527  003CF8  0ED0               	movlw	208
  9528  003CFA  6E05               	movwf	??_isdigit^0,c
  9529  003CFC  0EFF               	movlw	255
  9530  003CFE  6E06               	movwf	(??_isdigit+1)^0,c
  9531  003D00  C003  F007         	movff	isdigit@c,??_isdigit+2
  9532  003D04  C004  F008         	movff	isdigit@c+1,??_isdigit+3
  9533  003D08  5005               	movf	??_isdigit^0,w,c
  9534  003D0A  2607               	addwf	(??_isdigit+2)^0,f,c
  9535  003D0C  5006               	movf	(??_isdigit+1)^0,w,c
  9536  003D0E  2208               	addwfc	(??_isdigit+3)^0,f,c
  9537  003D10  5008               	movf	(??_isdigit+3)^0,w,c
  9538  003D12  E10A               	bnz	u2900
  9539  003D14  0E0A               	movlw	10
  9540  003D16  5C07               	subwf	(??_isdigit+2)^0,w,c
  9541  003D18  A0D8               	btfss	status,0,c
  9542  003D1A  EF91  F01E         	goto	u2901
  9543  003D1E  EF94  F01E         	goto	u2900
  9544  003D22                     u2901:
  9545  003D22  0E01               	movlw	1
  9546  003D24  EF95  F01E         	goto	u2910
  9547  003D28                     u2900:
  9548  003D28  0E00               	movlw	0
  9549  003D2A                     u2910:
  9550  003D2A  6E03               	movwf	?_isdigit^0,c
  9551  003D2C  6A04               	clrf	(?_isdigit+1)^0,c
  9552  003D2E  0012               	return		;funcret
  9553  003D30                     __end_of_isdigit:
  9554                           	opt callstack 0
  9555                           
  9556 ;; *************** function ___wmul *****************
  9557 ;; Defined at:
  9558 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  multiplier      2    2[COMRAM] unsigned int 
  9561 ;;  multiplicand    2    4[COMRAM] unsigned int 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;  product         2    6[COMRAM] unsigned int 
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  2    2[COMRAM] unsigned int 
  9566 ;; Registers used:
  9567 ;;		wreg, status,2, status,0, prodl, prodh
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9576 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;Total ram usage:        6 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    4
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_atoi
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text29
  9588  003E4C                     __ptext29:
  9589                           	opt callstack 0
  9590  003E4C                     ___wmul:
  9591                           	opt callstack 21
  9592  003E4C  5003               	movf	___wmul@multiplier^0,w,c
  9593  003E4E  0205               	mulwf	___wmul@multiplicand^0,c
  9594  003E50  CFF3 F007          	movff	prodl,___wmul@product
  9595  003E54  CFF4 F008          	movff	prodh,___wmul@product+1
  9596  003E58  5003               	movf	___wmul@multiplier^0,w,c
  9597  003E5A  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  9598  003E5C  50F3               	movf	243,w,c
  9599  003E5E  2608               	addwf	(___wmul@product+1)^0,f,c
  9600  003E60  5004               	movf	(___wmul@multiplier+1)^0,w,c
  9601  003E62  0205               	mulwf	___wmul@multiplicand^0,c
  9602  003E64  50F3               	movf	243,w,c
  9603  003E66  2608               	addwf	(___wmul@product+1)^0,f,c
  9604  003E68  C007  F003         	movff	___wmul@product,?___wmul
  9605  003E6C  C008  F004         	movff	___wmul@product+1,?___wmul+1
  9606  003E70  0012               	return		;funcret
  9607  003E72                     __end_of___wmul:
  9608                           	opt callstack 0
  9609                           
  9610 ;; *************** function _lcd_init *****************
  9611 ;; Defined at:
  9612 ;;		line 34 in file "lib_ili9341.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;		None
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      void 
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9630 ;;Total ram usage:        0 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    9
  9633 ;; This function calls:
  9634 ;;		_lcd_fill
  9635 ;;		_lcd_send
  9636 ;;		_msDelay
  9637 ;; This function is called by:
  9638 ;;		_main
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text30
  9643  001708                     __ptext30:
  9644                           	opt callstack 0
  9645  001708                     _lcd_init:
  9646                           	opt callstack 21
  9647  001708                     
  9648                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
  9649  001708  0E01               	movlw	1
  9650  00170A  6E04               	movwf	lcd_send@value^0,c
  9651  00170C  0E00               	movlw	0
  9652  00170E  EC62  F01F         	call	_lcd_send
  9653  001712                     
  9654                           ;lib_ili9341.c: 38:     msDelay(150);
  9655  001712  0E96               	movlw	150
  9656  001714  ECCB  F01E         	call	_msDelay
  9657  001718                     
  9658                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
  9659  001718  0EEF               	movlw	239
  9660  00171A  6E04               	movwf	lcd_send@value^0,c
  9661  00171C  0E00               	movlw	0
  9662  00171E  EC62  F01F         	call	_lcd_send
  9663  001722                     
  9664                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
  9665  001722  0E03               	movlw	3
  9666  001724  6E04               	movwf	lcd_send@value^0,c
  9667  001726  0E01               	movlw	1
  9668  001728  EC62  F01F         	call	_lcd_send
  9669  00172C                     
  9670                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
  9671  00172C  0E80               	movlw	128
  9672  00172E  6E04               	movwf	lcd_send@value^0,c
  9673  001730  0E01               	movlw	1
  9674  001732  EC62  F01F         	call	_lcd_send
  9675  001736                     
  9676                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
  9677  001736  0E02               	movlw	2
  9678  001738  6E04               	movwf	lcd_send@value^0,c
  9679  00173A  0E01               	movlw	1
  9680  00173C  EC62  F01F         	call	_lcd_send
  9681  001740                     
  9682                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
  9683  001740  0ECF               	movlw	207
  9684  001742  6E04               	movwf	lcd_send@value^0,c
  9685  001744  0E00               	movlw	0
  9686  001746  EC62  F01F         	call	_lcd_send
  9687  00174A                     
  9688                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
  9689  00174A  0E00               	movlw	0
  9690  00174C  6E04               	movwf	lcd_send@value^0,c
  9691  00174E  0E01               	movlw	1
  9692  001750  EC62  F01F         	call	_lcd_send
  9693  001754                     
  9694                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
  9695  001754  0EC1               	movlw	193
  9696  001756  6E04               	movwf	lcd_send@value^0,c
  9697  001758  0E01               	movlw	1
  9698  00175A  EC62  F01F         	call	_lcd_send
  9699  00175E                     
  9700                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
  9701  00175E  0E30               	movlw	48
  9702  001760  6E04               	movwf	lcd_send@value^0,c
  9703  001762  0E01               	movlw	1
  9704  001764  EC62  F01F         	call	_lcd_send
  9705  001768                     
  9706                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
  9707  001768  0EED               	movlw	237
  9708  00176A  6E04               	movwf	lcd_send@value^0,c
  9709  00176C  0E00               	movlw	0
  9710  00176E  EC62  F01F         	call	_lcd_send
  9711  001772                     
  9712                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
  9713  001772  0E64               	movlw	100
  9714  001774  6E04               	movwf	lcd_send@value^0,c
  9715  001776  0E01               	movlw	1
  9716  001778  EC62  F01F         	call	_lcd_send
  9717  00177C                     
  9718                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
  9719  00177C  0E03               	movlw	3
  9720  00177E  6E04               	movwf	lcd_send@value^0,c
  9721  001780  0E01               	movlw	1
  9722  001782  EC62  F01F         	call	_lcd_send
  9723  001786                     
  9724                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
  9725  001786  0E12               	movlw	18
  9726  001788  6E04               	movwf	lcd_send@value^0,c
  9727  00178A  0E01               	movlw	1
  9728  00178C  EC62  F01F         	call	_lcd_send
  9729  001790                     
  9730                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
  9731  001790  0E81               	movlw	129
  9732  001792  6E04               	movwf	lcd_send@value^0,c
  9733  001794  0E01               	movlw	1
  9734  001796  EC62  F01F         	call	_lcd_send
  9735  00179A                     
  9736                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
  9737  00179A  0EE8               	movlw	232
  9738  00179C  6E04               	movwf	lcd_send@value^0,c
  9739  00179E  0E00               	movlw	0
  9740  0017A0  EC62  F01F         	call	_lcd_send
  9741  0017A4                     
  9742                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
  9743  0017A4  0E85               	movlw	133
  9744  0017A6  6E04               	movwf	lcd_send@value^0,c
  9745  0017A8  0E01               	movlw	1
  9746  0017AA  EC62  F01F         	call	_lcd_send
  9747  0017AE                     
  9748                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
  9749  0017AE  0E00               	movlw	0
  9750  0017B0  6E04               	movwf	lcd_send@value^0,c
  9751  0017B2  0E01               	movlw	1
  9752  0017B4  EC62  F01F         	call	_lcd_send
  9753  0017B8                     
  9754                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
  9755  0017B8  0E78               	movlw	120
  9756  0017BA  6E04               	movwf	lcd_send@value^0,c
  9757  0017BC  0E01               	movlw	1
  9758  0017BE  EC62  F01F         	call	_lcd_send
  9759  0017C2                     
  9760                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
  9761  0017C2  0ECB               	movlw	203
  9762  0017C4  6E04               	movwf	lcd_send@value^0,c
  9763  0017C6  0E00               	movlw	0
  9764  0017C8  EC62  F01F         	call	_lcd_send
  9765  0017CC                     
  9766                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
  9767  0017CC  0E39               	movlw	57
  9768  0017CE  6E04               	movwf	lcd_send@value^0,c
  9769  0017D0  0E01               	movlw	1
  9770  0017D2  EC62  F01F         	call	_lcd_send
  9771  0017D6                     
  9772                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
  9773  0017D6  0E2C               	movlw	44
  9774  0017D8  6E04               	movwf	lcd_send@value^0,c
  9775  0017DA  0E01               	movlw	1
  9776  0017DC  EC62  F01F         	call	_lcd_send
  9777  0017E0                     
  9778                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
  9779  0017E0  0E00               	movlw	0
  9780  0017E2  6E04               	movwf	lcd_send@value^0,c
  9781  0017E4  0E01               	movlw	1
  9782  0017E6  EC62  F01F         	call	_lcd_send
  9783  0017EA                     
  9784                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
  9785  0017EA  0E34               	movlw	52
  9786  0017EC  6E04               	movwf	lcd_send@value^0,c
  9787  0017EE  0E01               	movlw	1
  9788  0017F0  EC62  F01F         	call	_lcd_send
  9789  0017F4                     
  9790                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
  9791  0017F4  0E02               	movlw	2
  9792  0017F6  6E04               	movwf	lcd_send@value^0,c
  9793  0017F8  0E01               	movlw	1
  9794  0017FA  EC62  F01F         	call	_lcd_send
  9795  0017FE                     
  9796                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
  9797  0017FE  0EF7               	movlw	247
  9798  001800  6E04               	movwf	lcd_send@value^0,c
  9799  001802  0E00               	movlw	0
  9800  001804  EC62  F01F         	call	_lcd_send
  9801  001808                     
  9802                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
  9803  001808  0E20               	movlw	32
  9804  00180A  6E04               	movwf	lcd_send@value^0,c
  9805  00180C  0E01               	movlw	1
  9806  00180E  EC62  F01F         	call	_lcd_send
  9807  001812                     
  9808                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
  9809  001812  0EEA               	movlw	234
  9810  001814  6E04               	movwf	lcd_send@value^0,c
  9811  001816  0E00               	movlw	0
  9812  001818  EC62  F01F         	call	_lcd_send
  9813  00181C                     
  9814                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
  9815  00181C  0E00               	movlw	0
  9816  00181E  6E04               	movwf	lcd_send@value^0,c
  9817  001820  0E01               	movlw	1
  9818  001822  EC62  F01F         	call	_lcd_send
  9819  001826                     
  9820                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
  9821  001826  0E00               	movlw	0
  9822  001828  6E04               	movwf	lcd_send@value^0,c
  9823  00182A  0E01               	movlw	1
  9824  00182C  EC62  F01F         	call	_lcd_send
  9825  001830                     
  9826                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
  9827  001830  0EC0               	movlw	192
  9828  001832  6E04               	movwf	lcd_send@value^0,c
  9829  001834  0E00               	movlw	0
  9830  001836  EC62  F01F         	call	_lcd_send
  9831  00183A                     
  9832                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
  9833  00183A  0E23               	movlw	35
  9834  00183C  6E04               	movwf	lcd_send@value^0,c
  9835  00183E  0E01               	movlw	1
  9836  001840  EC62  F01F         	call	_lcd_send
  9837  001844                     
  9838                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
  9839  001844  0EC1               	movlw	193
  9840  001846  6E04               	movwf	lcd_send@value^0,c
  9841  001848  0E00               	movlw	0
  9842  00184A  EC62  F01F         	call	_lcd_send
  9843  00184E                     
  9844                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
  9845  00184E  0E10               	movlw	16
  9846  001850  6E04               	movwf	lcd_send@value^0,c
  9847  001852  0E01               	movlw	1
  9848  001854  EC62  F01F         	call	_lcd_send
  9849  001858                     
  9850                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
  9851  001858  0EC5               	movlw	197
  9852  00185A  6E04               	movwf	lcd_send@value^0,c
  9853  00185C  0E00               	movlw	0
  9854  00185E  EC62  F01F         	call	_lcd_send
  9855  001862                     
  9856                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
  9857  001862  0E3E               	movlw	62
  9858  001864  6E04               	movwf	lcd_send@value^0,c
  9859  001866  0E01               	movlw	1
  9860  001868  EC62  F01F         	call	_lcd_send
  9861  00186C                     
  9862                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
  9863  00186C  0E28               	movlw	40
  9864  00186E  6E04               	movwf	lcd_send@value^0,c
  9865  001870  0E01               	movlw	1
  9866  001872  EC62  F01F         	call	_lcd_send
  9867  001876                     
  9868                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
  9869  001876  0EC7               	movlw	199
  9870  001878  6E04               	movwf	lcd_send@value^0,c
  9871  00187A  0E00               	movlw	0
  9872  00187C  EC62  F01F         	call	_lcd_send
  9873  001880                     
  9874                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
  9875  001880  0E86               	movlw	134
  9876  001882  6E04               	movwf	lcd_send@value^0,c
  9877  001884  0E01               	movlw	1
  9878  001886  EC62  F01F         	call	_lcd_send
  9879  00188A                     
  9880                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
  9881  00188A  0E36               	movlw	54
  9882  00188C  6E04               	movwf	lcd_send@value^0,c
  9883  00188E  0E00               	movlw	0
  9884  001890  EC62  F01F         	call	_lcd_send
  9885  001894                     
  9886                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
  9887  001894  0E48               	movlw	72
  9888  001896  6E04               	movwf	lcd_send@value^0,c
  9889  001898  0E01               	movlw	1
  9890  00189A  EC62  F01F         	call	_lcd_send
  9891  00189E                     
  9892                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
  9893  00189E  0E3A               	movlw	58
  9894  0018A0  6E04               	movwf	lcd_send@value^0,c
  9895  0018A2  0E00               	movlw	0
  9896  0018A4  EC62  F01F         	call	_lcd_send
  9897  0018A8                     
  9898                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
  9899  0018A8  0E55               	movlw	85
  9900  0018AA  6E04               	movwf	lcd_send@value^0,c
  9901  0018AC  0E01               	movlw	1
  9902  0018AE  EC62  F01F         	call	_lcd_send
  9903  0018B2                     
  9904                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
  9905  0018B2  0EB1               	movlw	177
  9906  0018B4  6E04               	movwf	lcd_send@value^0,c
  9907  0018B6  0E00               	movlw	0
  9908  0018B8  EC62  F01F         	call	_lcd_send
  9909  0018BC                     
  9910                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
  9911  0018BC  0E00               	movlw	0
  9912  0018BE  6E04               	movwf	lcd_send@value^0,c
  9913  0018C0  0E01               	movlw	1
  9914  0018C2  EC62  F01F         	call	_lcd_send
  9915  0018C6                     
  9916                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
  9917  0018C6  0E18               	movlw	24
  9918  0018C8  6E04               	movwf	lcd_send@value^0,c
  9919  0018CA  0E01               	movlw	1
  9920  0018CC  EC62  F01F         	call	_lcd_send
  9921  0018D0                     
  9922                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
  9923  0018D0  0EB6               	movlw	182
  9924  0018D2  6E04               	movwf	lcd_send@value^0,c
  9925  0018D4  0E00               	movlw	0
  9926  0018D6  EC62  F01F         	call	_lcd_send
  9927  0018DA                     
  9928                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
  9929  0018DA  0E08               	movlw	8
  9930  0018DC  6E04               	movwf	lcd_send@value^0,c
  9931  0018DE  0E01               	movlw	1
  9932  0018E0  EC62  F01F         	call	_lcd_send
  9933  0018E4                     
  9934                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
  9935  0018E4  0E82               	movlw	130
  9936  0018E6  6E04               	movwf	lcd_send@value^0,c
  9937  0018E8  0E01               	movlw	1
  9938  0018EA  EC62  F01F         	call	_lcd_send
  9939  0018EE                     
  9940                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
  9941  0018EE  0E27               	movlw	39
  9942  0018F0  6E04               	movwf	lcd_send@value^0,c
  9943  0018F2  0E01               	movlw	1
  9944  0018F4  EC62  F01F         	call	_lcd_send
  9945  0018F8                     
  9946                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
  9947  0018F8  0EF2               	movlw	242
  9948  0018FA  6E04               	movwf	lcd_send@value^0,c
  9949  0018FC  0E00               	movlw	0
  9950  0018FE  EC62  F01F         	call	_lcd_send
  9951  001902                     
  9952                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
  9953  001902  0E00               	movlw	0
  9954  001904  6E04               	movwf	lcd_send@value^0,c
  9955  001906  0E01               	movlw	1
  9956  001908  EC62  F01F         	call	_lcd_send
  9957  00190C                     
  9958                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
  9959  00190C  0E26               	movlw	38
  9960  00190E  6E04               	movwf	lcd_send@value^0,c
  9961  001910  0E00               	movlw	0
  9962  001912  EC62  F01F         	call	_lcd_send
  9963  001916                     
  9964                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
  9965  001916  0E01               	movlw	1
  9966  001918  6E04               	movwf	lcd_send@value^0,c
  9967  00191A  0E01               	movlw	1
  9968  00191C  EC62  F01F         	call	_lcd_send
  9969  001920                     
  9970                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
  9971  001920  0EE0               	movlw	224
  9972  001922  6E04               	movwf	lcd_send@value^0,c
  9973  001924  0E00               	movlw	0
  9974  001926  EC62  F01F         	call	_lcd_send
  9975  00192A                     
  9976                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
  9977  00192A  0E0F               	movlw	15
  9978  00192C  6E04               	movwf	lcd_send@value^0,c
  9979  00192E  0E01               	movlw	1
  9980  001930  EC62  F01F         	call	_lcd_send
  9981  001934                     
  9982                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
  9983  001934  0E31               	movlw	49
  9984  001936  6E04               	movwf	lcd_send@value^0,c
  9985  001938  0E01               	movlw	1
  9986  00193A  EC62  F01F         	call	_lcd_send
  9987  00193E                     
  9988                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
  9989  00193E  0E2B               	movlw	43
  9990  001940  6E04               	movwf	lcd_send@value^0,c
  9991  001942  0E01               	movlw	1
  9992  001944  EC62  F01F         	call	_lcd_send
  9993  001948                     
  9994                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
  9995  001948  0E0C               	movlw	12
  9996  00194A  6E04               	movwf	lcd_send@value^0,c
  9997  00194C  0E01               	movlw	1
  9998  00194E  EC62  F01F         	call	_lcd_send
  9999  001952                     
 10000                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
 10001  001952  0E0E               	movlw	14
 10002  001954  6E04               	movwf	lcd_send@value^0,c
 10003  001956  0E01               	movlw	1
 10004  001958  EC62  F01F         	call	_lcd_send
 10005  00195C                     
 10006                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
 10007  00195C  0E08               	movlw	8
 10008  00195E  6E04               	movwf	lcd_send@value^0,c
 10009  001960  0E01               	movlw	1
 10010  001962  EC62  F01F         	call	_lcd_send
 10011  001966                     
 10012                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
 10013  001966  0E4E               	movlw	78
 10014  001968  6E04               	movwf	lcd_send@value^0,c
 10015  00196A  0E01               	movlw	1
 10016  00196C  EC62  F01F         	call	_lcd_send
 10017  001970                     
 10018                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
 10019  001970  0EF1               	movlw	241
 10020  001972  6E04               	movwf	lcd_send@value^0,c
 10021  001974  0E01               	movlw	1
 10022  001976  EC62  F01F         	call	_lcd_send
 10023  00197A                     
 10024                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
 10025  00197A  0E37               	movlw	55
 10026  00197C  6E04               	movwf	lcd_send@value^0,c
 10027  00197E  0E01               	movlw	1
 10028  001980  EC62  F01F         	call	_lcd_send
 10029  001984                     
 10030                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
 10031  001984  0E07               	movlw	7
 10032  001986  6E04               	movwf	lcd_send@value^0,c
 10033  001988  0E01               	movlw	1
 10034  00198A  EC62  F01F         	call	_lcd_send
 10035  00198E                     
 10036                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
 10037  00198E  0E10               	movlw	16
 10038  001990  6E04               	movwf	lcd_send@value^0,c
 10039  001992  0E01               	movlw	1
 10040  001994  EC62  F01F         	call	_lcd_send
 10041  001998                     
 10042                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
 10043  001998  0E03               	movlw	3
 10044  00199A  6E04               	movwf	lcd_send@value^0,c
 10045  00199C  0E01               	movlw	1
 10046  00199E  EC62  F01F         	call	_lcd_send
 10047  0019A2                     
 10048                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
 10049  0019A2  0E0E               	movlw	14
 10050  0019A4  6E04               	movwf	lcd_send@value^0,c
 10051  0019A6  0E01               	movlw	1
 10052  0019A8  EC62  F01F         	call	_lcd_send
 10053  0019AC                     
 10054                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
 10055  0019AC  0E09               	movlw	9
 10056  0019AE  6E04               	movwf	lcd_send@value^0,c
 10057  0019B0  0E01               	movlw	1
 10058  0019B2  EC62  F01F         	call	_lcd_send
 10059  0019B6                     
 10060                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 10061  0019B6  0E00               	movlw	0
 10062  0019B8  6E04               	movwf	lcd_send@value^0,c
 10063  0019BA  0E01               	movlw	1
 10064  0019BC  EC62  F01F         	call	_lcd_send
 10065  0019C0                     
 10066                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
 10067  0019C0  0EE1               	movlw	225
 10068  0019C2  6E04               	movwf	lcd_send@value^0,c
 10069  0019C4  0E00               	movlw	0
 10070  0019C6  EC62  F01F         	call	_lcd_send
 10071  0019CA                     
 10072                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
 10073  0019CA  0E00               	movlw	0
 10074  0019CC  6E04               	movwf	lcd_send@value^0,c
 10075  0019CE  0E01               	movlw	1
 10076  0019D0  EC62  F01F         	call	_lcd_send
 10077  0019D4                     
 10078                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
 10079  0019D4  0E0E               	movlw	14
 10080  0019D6  6E04               	movwf	lcd_send@value^0,c
 10081  0019D8  0E01               	movlw	1
 10082  0019DA  EC62  F01F         	call	_lcd_send
 10083  0019DE                     
 10084                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
 10085  0019DE  0E14               	movlw	20
 10086  0019E0  6E04               	movwf	lcd_send@value^0,c
 10087  0019E2  0E01               	movlw	1
 10088  0019E4  EC62  F01F         	call	_lcd_send
 10089  0019E8                     
 10090                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
 10091  0019E8  0E03               	movlw	3
 10092  0019EA  6E04               	movwf	lcd_send@value^0,c
 10093  0019EC  0E01               	movlw	1
 10094  0019EE  EC62  F01F         	call	_lcd_send
 10095  0019F2                     
 10096                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
 10097  0019F2  0E11               	movlw	17
 10098  0019F4  6E04               	movwf	lcd_send@value^0,c
 10099  0019F6  0E01               	movlw	1
 10100  0019F8  EC62  F01F         	call	_lcd_send
 10101  0019FC                     
 10102                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
 10103  0019FC  0E07               	movlw	7
 10104  0019FE  6E04               	movwf	lcd_send@value^0,c
 10105  001A00  0E01               	movlw	1
 10106  001A02  EC62  F01F         	call	_lcd_send
 10107  001A06                     
 10108                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
 10109  001A06  0E31               	movlw	49
 10110  001A08  6E04               	movwf	lcd_send@value^0,c
 10111  001A0A  0E01               	movlw	1
 10112  001A0C  EC62  F01F         	call	_lcd_send
 10113  001A10                     
 10114                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
 10115  001A10  0EC1               	movlw	193
 10116  001A12  6E04               	movwf	lcd_send@value^0,c
 10117  001A14  0E01               	movlw	1
 10118  001A16  EC62  F01F         	call	_lcd_send
 10119  001A1A                     
 10120                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
 10121  001A1A  0E48               	movlw	72
 10122  001A1C  6E04               	movwf	lcd_send@value^0,c
 10123  001A1E  0E01               	movlw	1
 10124  001A20  EC62  F01F         	call	_lcd_send
 10125  001A24                     
 10126                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
 10127  001A24  0E08               	movlw	8
 10128  001A26  6E04               	movwf	lcd_send@value^0,c
 10129  001A28  0E01               	movlw	1
 10130  001A2A  EC62  F01F         	call	_lcd_send
 10131  001A2E                     
 10132                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
 10133  001A2E  0E0F               	movlw	15
 10134  001A30  6E04               	movwf	lcd_send@value^0,c
 10135  001A32  0E01               	movlw	1
 10136  001A34  EC62  F01F         	call	_lcd_send
 10137  001A38                     
 10138                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
 10139  001A38  0E0C               	movlw	12
 10140  001A3A  6E04               	movwf	lcd_send@value^0,c
 10141  001A3C  0E01               	movlw	1
 10142  001A3E  EC62  F01F         	call	_lcd_send
 10143  001A42                     
 10144                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
 10145  001A42  0E31               	movlw	49
 10146  001A44  6E04               	movwf	lcd_send@value^0,c
 10147  001A46  0E01               	movlw	1
 10148  001A48  EC62  F01F         	call	_lcd_send
 10149  001A4C                     
 10150                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
 10151  001A4C  0E36               	movlw	54
 10152  001A4E  6E04               	movwf	lcd_send@value^0,c
 10153  001A50  0E01               	movlw	1
 10154  001A52  EC62  F01F         	call	_lcd_send
 10155  001A56                     
 10156                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
 10157  001A56  0E0F               	movlw	15
 10158  001A58  6E04               	movwf	lcd_send@value^0,c
 10159  001A5A  0E01               	movlw	1
 10160  001A5C  EC62  F01F         	call	_lcd_send
 10161  001A60                     
 10162                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
 10163  001A60  0E11               	movlw	17
 10164  001A62  6E04               	movwf	lcd_send@value^0,c
 10165  001A64  0E00               	movlw	0
 10166  001A66  EC62  F01F         	call	_lcd_send
 10167                           
 10168                           ;lib_ili9341.c: 125:     msDelay(120);
 10169  001A6A  0E78               	movlw	120
 10170  001A6C  ECCB  F01E         	call	_msDelay
 10171  001A70                     
 10172                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
 10173  001A70  0E29               	movlw	41
 10174  001A72  6E04               	movwf	lcd_send@value^0,c
 10175  001A74  0E00               	movlw	0
 10176  001A76  EC62  F01F         	call	_lcd_send
 10177  001A7A                     
 10178                           ;lib_ili9341.c: 127:     msDelay(120);
 10179  001A7A  0E78               	movlw	120
 10180  001A7C  ECCB  F01E         	call	_msDelay
 10181  001A80                     
 10182                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
 10183  001A80  0E00               	movlw	0
 10184  001A82  6E0D               	movwf	(lcd_fill@bg_color+1)^0,c
 10185  001A84  0E00               	movlw	0
 10186  001A86  6E0C               	movwf	lcd_fill@bg_color^0,c
 10187  001A88  EC06  F01C         	call	_lcd_fill	;wreg free
 10188  001A8C  0012               	return		;funcret
 10189  001A8E                     __end_of_lcd_init:
 10190                           	opt callstack 0
 10191                           
 10192 ;; *************** function _msDelay *****************
 10193 ;; Defined at:
 10194 ;;		line 16 in file "lib_ili9341.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;  ms              1    wreg     unsigned char 
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  ms              1    3[COMRAM] unsigned char 
 10199 ;;  k               1    4[COMRAM] unsigned char 
 10200 ;; Return value:  Size  Location     Type
 10201 ;;                  1    wreg      void 
 10202 ;; Registers used:
 10203 ;;		wreg, status,2, status,0
 10204 ;; Tracked objects:
 10205 ;;		On entry : 0/0
 10206 ;;		On exit  : 0/0
 10207 ;;		Unchanged: 0/0
 10208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10211 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10212 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10213 ;;Total ram usage:        3 bytes
 10214 ;; Hardware stack levels used:    1
 10215 ;; Hardware stack levels required when called:    4
 10216 ;; This function calls:
 10217 ;;		Nothing
 10218 ;; This function is called by:
 10219 ;;		_lcd_init
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text31
 10224  003D96                     __ptext31:
 10225                           	opt callstack 0
 10226  003D96                     _msDelay:
 10227                           	opt callstack 25
 10228                           
 10229                           ;incstack = 0
 10230                           ;msDelay@ms stored from wreg
 10231  003D96  6E04               	movwf	msDelay@ms^0,c
 10232  003D98                     
 10233                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
 10234  003D98  0E00               	movlw	0
 10235  003D9A  6E05               	movwf	msDelay@k^0,c
 10236  003D9C  EFD8  F01E         	goto	l4424
 10237  003DA0                     l4420:
 10238                           
 10239                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 10240  003DA0  0E03               	movlw	3
 10241  003DA2  6E03               	movwf	??_msDelay^0,c
 10242  003DA4  0E98               	movlw	152
 10243  003DA6                     u5427:
 10244  003DA6  2EE8               	decfsz	wreg,f,c
 10245  003DA8  D7FE               	bra	u5427
 10246  003DAA  2E03               	decfsz	??_msDelay^0,f,c
 10247  003DAC  D7FC               	bra	u5427
 10248  003DAE                     
 10249                           ;lib_ili9341.c: 23:     }
 10250  003DAE  2A05               	incf	msDelay@k^0,f,c
 10251  003DB0                     l4424:
 10252  003DB0  5004               	movf	msDelay@ms^0,w,c
 10253  003DB2  5C05               	subwf	msDelay@k^0,w,c
 10254  003DB4  A0D8               	btfss	status,0,c
 10255  003DB6  EFDF  F01E         	goto	u4401
 10256  003DBA  EFE1  F01E         	goto	u4400
 10257  003DBE                     u4401:
 10258  003DBE  EFD0  F01E         	goto	l4420
 10259  003DC2                     u4400:
 10260  003DC2  0012               	return		;funcret
 10261  003DC4                     __end_of_msDelay:
 10262                           	opt callstack 0
 10263                           
 10264 ;; *************** function _lcd_fill *****************
 10265 ;; Defined at:
 10266 ;;		line 193 in file "lib_ili9341.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  bg_color        2   11[COMRAM] unsigned short 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;  width           2   15[COMRAM] unsigned short 
 10271 ;;  height          2   13[COMRAM] unsigned short 
 10272 ;; Return value:  Size  Location     Type
 10273 ;;                  1    wreg      void 
 10274 ;; Registers used:
 10275 ;;		wreg, status,2, status,0, cstack
 10276 ;; Tracked objects:
 10277 ;;		On entry : 0/0
 10278 ;;		On exit  : 0/0
 10279 ;;		Unchanged: 0/0
 10280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10282 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10284 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10285 ;;Total ram usage:        6 bytes
 10286 ;; Hardware stack levels used:    1
 10287 ;; Hardware stack levels required when called:    8
 10288 ;; This function calls:
 10289 ;;		_lcd_draw_pixel
 10290 ;;		_lcd_set_cursor
 10291 ;; This function is called by:
 10292 ;;		_lcd_init
 10293 ;; This function uses a non-reentrant model
 10294 ;;
 10295                           
 10296                           	psect	text32
 10297  00380C                     __ptext32:
 10298                           	opt callstack 0
 10299  00380C                     _lcd_fill:
 10300                           	opt callstack 21
 10301  00380C                     
 10302                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
 10303  00380C  0E01               	movlw	1
 10304  00380E  6E11               	movwf	(lcd_fill@width+1)^0,c
 10305  003810  0E40               	movlw	64
 10306  003812  6E10               	movwf	lcd_fill@width^0,c
 10307  003814  0E00               	movlw	0
 10308  003816  6E0F               	movwf	(lcd_fill@height+1)^0,c
 10309  003818  0EF0               	movlw	240
 10310  00381A  6E0E               	movwf	lcd_fill@height^0,c
 10311  00381C                     
 10312                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
 10313  00381C  0E00               	movlw	0
 10314  00381E  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 10315  003820  0E00               	movlw	0
 10316  003822  6E08               	movwf	lcd_set_cursor@x^0,c
 10317  003824  0E00               	movlw	0
 10318  003826  6E0B               	movwf	(lcd_set_cursor@y+1)^0,c
 10319  003828  0E00               	movlw	0
 10320  00382A  6E0A               	movwf	lcd_set_cursor@y^0,c
 10321  00382C  ECE5  F01D         	call	_lcd_set_cursor	;wreg free
 10322  003830  0900               	iorlw	0
 10323  003832  B4D8               	btfsc	status,2,c
 10324  003834  EF1E  F01C         	goto	u4411
 10325  003838  EF20  F01C         	goto	u4410
 10326  00383C                     u4411:
 10327  00383C  EF39  F01C         	goto	l4438
 10328  003840                     u4410:
 10329  003840  EF46  F01C         	goto	l358
 10330  003844                     l4432:
 10331                           
 10332                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
 10333  003844  C00C  F006         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 10334  003848  C00D  F007         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 10335  00384C  EC7A  F01F         	call	_lcd_draw_pixel	;wreg free
 10336  003850                     l4434:
 10337                           
 10338                           ;lib_ili9341.c: 204:         while(width--)
 10339  003850  0610               	decf	lcd_fill@width^0,f,c
 10340  003852  A0D8               	btfss	status,0,c
 10341  003854  0611               	decf	(lcd_fill@width+1)^0,f,c
 10342  003856  2810               	incf	lcd_fill@width^0,w,c
 10343  003858  E106               	bnz	u4421
 10344  00385A  2811               	incf	(lcd_fill@width+1)^0,w,c
 10345  00385C  A4D8               	btfss	status,2,c
 10346  00385E  EF33  F01C         	goto	u4421
 10347  003862  EF35  F01C         	goto	u4420
 10348  003866                     u4421:
 10349  003866  EF22  F01C         	goto	l4432
 10350  00386A                     u4420:
 10351  00386A                     
 10352                           ;lib_ili9341.c: 208:         width = 320;
 10353  00386A  0E01               	movlw	1
 10354  00386C  6E11               	movwf	(lcd_fill@width+1)^0,c
 10355  00386E  0E40               	movlw	64
 10356  003870  6E10               	movwf	lcd_fill@width^0,c
 10357  003872                     l4438:
 10358                           
 10359                           ;lib_ili9341.c: 202:     while(height--)
 10360  003872  060E               	decf	lcd_fill@height^0,f,c
 10361  003874  A0D8               	btfss	status,0,c
 10362  003876  060F               	decf	(lcd_fill@height+1)^0,f,c
 10363  003878  280E               	incf	lcd_fill@height^0,w,c
 10364  00387A  E106               	bnz	u4431
 10365  00387C  280F               	incf	(lcd_fill@height+1)^0,w,c
 10366  00387E  A4D8               	btfss	status,2,c
 10367  003880  EF44  F01C         	goto	u4431
 10368  003884  EF46  F01C         	goto	u4430
 10369  003888                     u4431:
 10370  003888  EF28  F01C         	goto	l4434
 10371  00388C                     u4430:
 10372  00388C                     l358:
 10373  00388C  0012               	return		;funcret
 10374  00388E                     __end_of_lcd_fill:
 10375                           	opt callstack 0
 10376                           
 10377 ;; *************** function _lcd_draw_string *****************
 10378 ;; Defined at:
 10379 ;;		line 380 in file "lib_ili9341.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  x               2   33[COMRAM] unsigned short 
 10382 ;;  y               2   35[COMRAM] unsigned short 
 10383 ;;  pS              2   37[COMRAM] PTR const unsigned char 
 10384 ;;		 -> STR_2(17), main@string(20), 
 10385 ;;  fg_color        2   39[COMRAM] unsigned short 
 10386 ;;  bg_color        2   41[COMRAM] unsigned short 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  lIndex          2   49[COMRAM] unsigned short 
 10389 ;;  k               2   47[COMRAM] unsigned short 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      void 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10399 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10400 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10401 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10402 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10403 ;;Total ram usage:       18 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    9
 10406 ;; This function calls:
 10407 ;;		_lcd_draw_char
 10408 ;; This function is called by:
 10409 ;;		_main
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text33
 10414  002F3A                     __ptext33:
 10415                           	opt callstack 0
 10416  002F3A                     _lcd_draw_string:
 10417                           	opt callstack 21
 10418  002F3A                     
 10419                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
 10420  002F3A  EF1C  F018         	goto	l4772
 10421  002F3E                     l4758:
 10422                           
 10423                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
 10424  002F3E  0E00               	movlw	0
 10425  002F40  6E33               	movwf	(lcd_draw_string@lIndex+1)^0,c
 10426  002F42  0E00               	movlw	0
 10427  002F44  6E32               	movwf	lcd_draw_string@lIndex^0,c
 10428                           
 10429                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
 10430  002F46  0E00               	movlw	0
 10431  002F48  6E31               	movwf	(lcd_draw_string@k+1)^0,c
 10432  002F4A  0E00               	movlw	0
 10433  002F4C  6E30               	movwf	lcd_draw_string@k^0,c
 10434  002F4E  EFC8  F017         	goto	l4764
 10435  002F52                     l4760:
 10436                           
 10437                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 10438  002F52  90D8               	bcf	status,0,c
 10439  002F54  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 10440  002F56  6EF6               	movwf	tblptrl,c
 10441  002F58  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 10442  002F5A  6EF7               	movwf	tblptrh,c
 10443  002F5C  0EDF               	movlw	low _font
 10444  002F5E  26F6               	addwf	tblptrl,f,c
 10445  002F60  0EF1               	movlw	high _font
 10446  002F62  22F7               	addwfc	tblptrh,f,c
 10447  002F64                     	if	1	;There are 3 active tblptr bytes
 10448  002F64  6AF8               	clrf	tblptru,c
 10449  002F66  0E00               	movlw	low (__mediumconst shr (0+16))
 10450  002F68  22F8               	addwfc	tblptru,f,c
 10451  002F6A                     	endif
 10452  002F6A  0009               	tblrd		*+
 10453  002F6C  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 10454  002F70  0009               	tblrd		*+
 10455  002F72  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 10456  002F76  90D8               	bcf	status,0,c
 10457  002F78  362C               	rlcf	??_lcd_draw_string^0,f,c
 10458  002F7A  362D               	rlcf	(??_lcd_draw_string+1)^0,f,c
 10459  002F7C  0E01               	movlw	1
 10460  002F7E  262C               	addwf	??_lcd_draw_string^0,f,c
 10461  002F80  0E00               	movlw	0
 10462  002F82  222D               	addwfc	(??_lcd_draw_string+1)^0,f,c
 10463  002F84  502C               	movf	??_lcd_draw_string^0,w,c
 10464  002F86  2632               	addwf	lcd_draw_string@lIndex^0,f,c
 10465  002F88  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 10466  002F8A  2233               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 10467  002F8C                     
 10468                           ;lib_ili9341.c: 390:         }
 10469  002F8C  4A30               	infsnz	lcd_draw_string@k^0,f,c
 10470  002F8E  2A31               	incf	(lcd_draw_string@k+1)^0,f,c
 10471  002F90                     l4764:
 10472  002F90  0EE0               	movlw	224
 10473  002F92  6E2C               	movwf	??_lcd_draw_string^0,c
 10474  002F94  0EFF               	movlw	255
 10475  002F96  6E2D               	movwf	(??_lcd_draw_string+1)^0,c
 10476  002F98  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10477  002F9C  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10478  002FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 10479  002FA2  6EF8               	movwf	tblptru,c
 10480  002FA4  0E0E               	movlw	(high __ramtop+-1)
 10481  002FA6  64F7               	cpfsgt	tblptrh,c
 10482  002FA8  D003               	bra	u4607
 10483  002FAA  0008               	tblrd		*
 10484  002FAC  50F5               	movf	tablat,w,c
 10485  002FAE  D005               	bra	u4600
 10486  002FB0                     u4607:
 10487  002FB0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10488  002FB4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10489  002FB8  50E7               	movf	indf1,w,c
 10490  002FBA                     u4600:
 10491  002FBA  6E2E               	movwf	(??_lcd_draw_string+2)^0,c
 10492  002FBC  6A2F               	clrf	(??_lcd_draw_string+3)^0,c
 10493  002FBE  502C               	movf	??_lcd_draw_string^0,w,c
 10494  002FC0  262E               	addwf	(??_lcd_draw_string+2)^0,f,c
 10495  002FC2  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 10496  002FC4  222F               	addwfc	(??_lcd_draw_string+3)^0,f,c
 10497  002FC6  502E               	movf	(??_lcd_draw_string+2)^0,w,c
 10498  002FC8  5C30               	subwf	lcd_draw_string@k^0,w,c
 10499  002FCA  502F               	movf	(??_lcd_draw_string+3)^0,w,c
 10500  002FCC  5831               	subwfb	(lcd_draw_string@k+1)^0,w,c
 10501  002FCE  A0D8               	btfss	status,0,c
 10502  002FD0  EFEC  F017         	goto	u4611
 10503  002FD4  EFEE  F017         	goto	u4610
 10504  002FD8                     u4611:
 10505  002FD8  EFA9  F017         	goto	l4760
 10506  002FDC                     u4610:
 10507  002FDC                     
 10508                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 10509  002FDC  C022  F00C         	movff	lcd_draw_string@x,lcd_draw_char@x
 10510  002FE0  C023  F00D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 10511  002FE4  C024  F00E         	movff	lcd_draw_string@y,lcd_draw_char@y
 10512  002FE8  C025  F00F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 10513  002FEC  C032  F010         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 10514  002FF0  C033  F011         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 10515  002FF4  C028  F012         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 10516  002FF8  C029  F013         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 10517  002FFC  C02A  F014         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 10518  003000  C02B  F015         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 10519  003004  EC2E  F016         	call	_lcd_draw_char	;wreg free
 10520  003008                     
 10521                           ;lib_ili9341.c: 394:         x += font[lIndex];
 10522  003008  90D8               	bcf	status,0,c
 10523  00300A  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 10524  00300C  6EF6               	movwf	tblptrl,c
 10525  00300E  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 10526  003010  6EF7               	movwf	tblptrh,c
 10527  003012  0EDF               	movlw	low _font
 10528  003014  26F6               	addwf	tblptrl,f,c
 10529  003016  0EF1               	movlw	high _font
 10530  003018  22F7               	addwfc	tblptrh,f,c
 10531  00301A                     	if	1	;There are 3 active tblptr bytes
 10532  00301A  6AF8               	clrf	tblptru,c
 10533  00301C  0E00               	movlw	low (__mediumconst shr (0+16))
 10534  00301E  22F8               	addwfc	tblptru,f,c
 10535  003020                     	endif
 10536  003020  0009               	tblrd		*+
 10537  003022  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 10538  003026  0009               	tblrd		*+
 10539  003028  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 10540  00302C  502C               	movf	??_lcd_draw_string^0,w,c
 10541  00302E  2622               	addwf	lcd_draw_string@x^0,f,c
 10542  003030  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 10543  003032  2223               	addwfc	(lcd_draw_string@x+1)^0,f,c
 10544  003034                     
 10545                           ;lib_ili9341.c: 396:         pS++;
 10546  003034  4A26               	infsnz	lcd_draw_string@pS^0,f,c
 10547  003036  2A27               	incf	(lcd_draw_string@pS+1)^0,f,c
 10548  003038                     l4772:
 10549                           
 10550                           ;lib_ili9341.c: 384:     while(*pS)
 10551  003038  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10552  00303C  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10553  003040  0E00               	movlw	low (__mediumconst shr (0+16))
 10554  003042  6EF8               	movwf	tblptru,c
 10555  003044  0E0E               	movlw	(high __ramtop+-1)
 10556  003046  64F7               	cpfsgt	tblptrh,c
 10557  003048  D003               	bra	u4627
 10558  00304A  0008               	tblrd		*
 10559  00304C  50F5               	movf	tablat,w,c
 10560  00304E  D005               	bra	u4620
 10561  003050                     u4627:
 10562  003050  CFF6 FFE1          	movff	tblptrl,fsr1l
 10563  003054  CFF7 FFE2          	movff	tblptrh,fsr1h
 10564  003058  50E7               	movf	indf1,w,c
 10565  00305A                     u4620:
 10566  00305A  0900               	iorlw	0
 10567  00305C  A4D8               	btfss	status,2,c
 10568  00305E  EF33  F018         	goto	u4631
 10569  003062  EF35  F018         	goto	u4630
 10570  003066                     u4631:
 10571  003066  EF9F  F017         	goto	l4758
 10572  00306A                     u4630:
 10573  00306A  0012               	return		;funcret
 10574  00306C                     __end_of_lcd_draw_string:
 10575                           	opt callstack 0
 10576                           
 10577 ;; *************** function _lcd_draw_char *****************
 10578 ;; Defined at:
 10579 ;;		line 355 in file "lib_ili9341.c"
 10580 ;; Parameters:    Size  Location     Type
 10581 ;;  x               2   11[COMRAM] unsigned short 
 10582 ;;  y               2   13[COMRAM] unsigned short 
 10583 ;;  fIndex          2   15[COMRAM] unsigned short 
 10584 ;;  fg_color        2   17[COMRAM] unsigned short 
 10585 ;;  bg_color        2   19[COMRAM] unsigned short 
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  i               1   32[COMRAM] unsigned char 
 10588 ;;  k               1   31[COMRAM] unsigned char 
 10589 ;;  j               1   30[COMRAM] unsigned char 
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  1    wreg      void 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10599 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10600 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;Total ram usage:       22 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:    8
 10606 ;; This function calls:
 10607 ;;		_lcd_draw_pixel
 10608 ;;		_lcd_set_cursor
 10609 ;; This function is called by:
 10610 ;;		_lcd_draw_string
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text34
 10615  002C5C                     __ptext34:
 10616                           	opt callstack 0
 10617  002C5C                     _lcd_draw_char:
 10618                           	opt callstack 21
 10619  002C5C                     
 10620                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
 10621  002C5C  0E00               	movlw	0
 10622  002C5E  6E1F               	movwf	lcd_draw_char@j^0,c
 10623  002C60  EFCE  F016         	goto	l4476
 10624  002C64                     l4446:
 10625                           
 10626                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 10627  002C64  90D8               	bcf	status,0,c
 10628  002C66  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 10629  002C68  6EF6               	movwf	tblptrl,c
 10630  002C6A  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10631  002C6C  6EF7               	movwf	tblptrh,c
 10632  002C6E  0EDF               	movlw	low _font
 10633  002C70  26F6               	addwf	tblptrl,f,c
 10634  002C72  0EF1               	movlw	high _font
 10635  002C74  22F7               	addwfc	tblptrh,f,c
 10636  002C76                     	if	1	;There are 3 active tblptr bytes
 10637  002C76  6AF8               	clrf	tblptru,c
 10638  002C78  0E00               	movlw	low (__mediumconst shr (0+16))
 10639  002C7A  22F8               	addwfc	tblptru,f,c
 10640  002C7C                     	endif
 10641  002C7C  0009               	tblrd		*+
 10642  002C7E  CFF5 F016          	movff	tablat,??_lcd_draw_char
 10643  002C82  0009               	tblrd		*+
 10644  002C84  CFF5 F017          	movff	tablat,??_lcd_draw_char+1
 10645  002C88  501F               	movf	lcd_draw_char@j^0,w,c
 10646  002C8A  5E16               	subwf	??_lcd_draw_char^0,f,c
 10647  002C8C  0E00               	movlw	0
 10648  002C8E  5A17               	subwfb	(??_lcd_draw_char+1)^0,f,c
 10649  002C90  500C               	movf	lcd_draw_char@x^0,w,c
 10650  002C92  2416               	addwf	??_lcd_draw_char^0,w,c
 10651  002C94  6E08               	movwf	lcd_set_cursor@x^0,c
 10652  002C96  500D               	movf	(lcd_draw_char@x+1)^0,w,c
 10653  002C98  2017               	addwfc	(??_lcd_draw_char+1)^0,w,c
 10654  002C9A  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 10655  002C9C  C00E  F00A         	movff	lcd_draw_char@y,lcd_set_cursor@y
 10656  002CA0  C00F  F00B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 10657  002CA4  ECE5  F01D         	call	_lcd_set_cursor	;wreg free
 10658  002CA8                     
 10659                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
 10660  002CA8  0E00               	movlw	0
 10661  002CAA  6E20               	movwf	lcd_draw_char@k^0,c
 10662  002CAC                     l4454:
 10663                           
 10664                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
 10665  002CAC  0E00               	movlw	0
 10666  002CAE  6E21               	movwf	lcd_draw_char@i^0,c
 10667  002CB0                     l4460:
 10668                           
 10669                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 10670  002CB0  501F               	movf	lcd_draw_char@j^0,w,c
 10671  002CB2  6E16               	movwf	??_lcd_draw_char^0,c
 10672  002CB4  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 10673  002CB6  90D8               	bcf	status,0,c
 10674  002CB8  3616               	rlcf	??_lcd_draw_char^0,f,c
 10675  002CBA  3617               	rlcf	(??_lcd_draw_char+1)^0,f,c
 10676  002CBC  90D8               	bcf	status,0,c
 10677  002CBE  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 10678  002CC0  6EF6               	movwf	tblptrl,c
 10679  002CC2  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10680  002CC4  6EF7               	movwf	tblptrh,c
 10681  002CC6  0EDF               	movlw	low _font
 10682  002CC8  26F6               	addwf	tblptrl,f,c
 10683  002CCA  0EF1               	movlw	high _font
 10684  002CCC  22F7               	addwfc	tblptrh,f,c
 10685  002CCE                     	if	1	;There are 3 active tblptr bytes
 10686  002CCE  6AF8               	clrf	tblptru,c
 10687  002CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 10688  002CD2  22F8               	addwfc	tblptru,f,c
 10689  002CD4                     	endif
 10690  002CD4  0009               	tblrd		*+
 10691  002CD6  CFF5 F018          	movff	tablat,??_lcd_draw_char+2
 10692  002CDA  0009               	tblrd		*+
 10693  002CDC  CFF5 F019          	movff	tablat,??_lcd_draw_char+3
 10694  002CE0  90D8               	bcf	status,0,c
 10695  002CE2  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10696  002CE4  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10697  002CE6  5016               	movf	??_lcd_draw_char^0,w,c
 10698  002CE8  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 10699  002CEA  5017               	movf	(??_lcd_draw_char+1)^0,w,c
 10700  002CEC  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10701  002CEE  5020               	movf	lcd_draw_char@k^0,w,c
 10702  002CF0  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 10703  002CF2  0E00               	movlw	0
 10704  002CF4  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10705  002CF6  5010               	movf	lcd_draw_char@fIndex^0,w,c
 10706  002CF8  2618               	addwf	(??_lcd_draw_char+2)^0,f,c
 10707  002CFA  5011               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 10708  002CFC  2219               	addwfc	(??_lcd_draw_char+3)^0,f,c
 10709  002CFE  90D8               	bcf	status,0,c
 10710  002D00  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10711  002D02  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10712  002D04  0EDF               	movlw	low _font
 10713  002D06  2418               	addwf	(??_lcd_draw_char+2)^0,w,c
 10714  002D08  6EF6               	movwf	tblptrl,c
 10715  002D0A  0EF1               	movlw	high _font
 10716  002D0C  2019               	addwfc	(??_lcd_draw_char+3)^0,w,c
 10717  002D0E  6EF7               	movwf	tblptrh,c
 10718  002D10                     	if	1	;There are 3 active tblptr bytes
 10719  002D10  6AF8               	clrf	tblptru,c
 10720  002D12  0E00               	movlw	low (__mediumconst shr (0+16))
 10721  002D14  22F8               	addwfc	tblptru,f,c
 10722  002D16                     	endif
 10723  002D16  0009               	tblrd		*+
 10724  002D18  CFF5 F01A          	movff	tablat,??_lcd_draw_char+4
 10725  002D1C  0009               	tblrd		*+
 10726  002D1E  CFF5 F01B          	movff	tablat,??_lcd_draw_char+5
 10727  002D22  C021  F01C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 10728  002D26  0E80               	movlw	128
 10729  002D28  6E1D               	movwf	(??_lcd_draw_char+7)^0,c
 10730  002D2A  0E00               	movlw	0
 10731  002D2C  6E1E               	movwf	(??_lcd_draw_char+8)^0,c
 10732  002D2E  2A1C               	incf	(??_lcd_draw_char+6)^0,f,c
 10733  002D30  EF9D  F016         	goto	u4454
 10734  002D34                     u4455:
 10735  002D34  341E               	rlcf	(??_lcd_draw_char+8)^0,w,c
 10736  002D36  321E               	rrcf	(??_lcd_draw_char+8)^0,f,c
 10737  002D38  321D               	rrcf	(??_lcd_draw_char+7)^0,f,c
 10738  002D3A                     u4454:
 10739  002D3A  2E1C               	decfsz	(??_lcd_draw_char+6)^0,f,c
 10740  002D3C  EF9A  F016         	goto	u4455
 10741  002D40  501A               	movf	(??_lcd_draw_char+4)^0,w,c
 10742  002D42  161D               	andwf	(??_lcd_draw_char+7)^0,f,c
 10743  002D44  501B               	movf	(??_lcd_draw_char+5)^0,w,c
 10744  002D46  161E               	andwf	(??_lcd_draw_char+8)^0,f,c
 10745  002D48  501D               	movf	(??_lcd_draw_char+7)^0,w,c
 10746  002D4A  101E               	iorwf	(??_lcd_draw_char+8)^0,w,c
 10747  002D4C  B4D8               	btfsc	status,2,c
 10748  002D4E  EFAB  F016         	goto	u4461
 10749  002D52  EFAD  F016         	goto	u4460
 10750  002D56                     u4461:
 10751  002D56  EFB5  F016         	goto	l4464
 10752  002D5A                     u4460:
 10753  002D5A                     
 10754                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
 10755  002D5A  C012  F006         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 10756  002D5E  C013  F007         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 10757  002D62  EC7A  F01F         	call	_lcd_draw_pixel	;wreg free
 10758                           
 10759                           ;lib_ili9341.c: 370:                 }
 10760  002D66  EFBB  F016         	goto	l4466
 10761  002D6A                     l4464:
 10762                           
 10763                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
 10764  002D6A  C014  F006         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 10765  002D6E  C015  F007         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 10766  002D72  EC7A  F01F         	call	_lcd_draw_pixel	;wreg free
 10767  002D76                     l4466:
 10768                           
 10769                           ;lib_ili9341.c: 375:             }
 10770  002D76  2A21               	incf	lcd_draw_char@i^0,f,c
 10771  002D78  0E07               	movlw	7
 10772  002D7A  6421               	cpfsgt	lcd_draw_char@i^0,c
 10773  002D7C  EFC2  F016         	goto	u4471
 10774  002D80  EFC4  F016         	goto	u4470
 10775  002D84                     u4471:
 10776  002D84  EF58  F016         	goto	l4460
 10777  002D88                     u4470:
 10778  002D88                     
 10779                           ;lib_ili9341.c: 376:         }
 10780  002D88  2A20               	incf	lcd_draw_char@k^0,f,c
 10781  002D8A  0E01               	movlw	1
 10782  002D8C  6420               	cpfsgt	lcd_draw_char@k^0,c
 10783  002D8E  EFCB  F016         	goto	u4481
 10784  002D92  EFCD  F016         	goto	u4480
 10785  002D96                     u4481:
 10786  002D96  EF56  F016         	goto	l4454
 10787  002D9A                     u4480:
 10788  002D9A                     
 10789                           ;lib_ili9341.c: 377:     }
 10790  002D9A  2A1F               	incf	lcd_draw_char@j^0,f,c
 10791  002D9C                     l4476:
 10792  002D9C  90D8               	bcf	status,0,c
 10793  002D9E  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 10794  002DA0  6EF6               	movwf	tblptrl,c
 10795  002DA2  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10796  002DA4  6EF7               	movwf	tblptrh,c
 10797  002DA6  0EDF               	movlw	low _font
 10798  002DA8  26F6               	addwf	tblptrl,f,c
 10799  002DAA  0EF1               	movlw	high _font
 10800  002DAC  22F7               	addwfc	tblptrh,f,c
 10801  002DAE                     	if	1	;There are 3 active tblptr bytes
 10802  002DAE  6AF8               	clrf	tblptru,c
 10803  002DB0  0E00               	movlw	low (__mediumconst shr (0+16))
 10804  002DB2  22F8               	addwfc	tblptru,f,c
 10805  002DB4                     	endif
 10806  002DB4  501F               	movf	lcd_draw_char@j^0,w,c
 10807  002DB6  6E16               	movwf	??_lcd_draw_char^0,c
 10808  002DB8  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 10809  002DBA  0009               	tblrd		*+
 10810  002DBC  50F5               	movf	tablat,w,c
 10811  002DBE  5C16               	subwf	??_lcd_draw_char^0,w,c
 10812  002DC0  0009               	tblrd		*+
 10813  002DC2  50F5               	movf	tablat,w,c
 10814  002DC4  5817               	subwfb	(??_lcd_draw_char+1)^0,w,c
 10815  002DC6  A0D8               	btfss	status,0,c
 10816  002DC8  EFE8  F016         	goto	u4491
 10817  002DCC  EFEA  F016         	goto	u4490
 10818  002DD0                     u4491:
 10819  002DD0  EF32  F016         	goto	l4446
 10820  002DD4                     u4490:
 10821  002DD4  0012               	return		;funcret
 10822  002DD6                     __end_of_lcd_draw_char:
 10823                           	opt callstack 0
 10824                           
 10825 ;; *************** function _lcd_set_cursor *****************
 10826 ;; Defined at:
 10827 ;;		line 144 in file "lib_ili9341.c"
 10828 ;; Parameters:    Size  Location     Type
 10829 ;;  x               2    7[COMRAM] unsigned short 
 10830 ;;  y               2    9[COMRAM] unsigned short 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      unsigned char 
 10835 ;; Registers used:
 10836 ;;		wreg, status,2, status,0, cstack
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10842 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;Total ram usage:        4 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; Hardware stack levels required when called:    7
 10849 ;; This function calls:
 10850 ;;		_lcd_set_cursor_x
 10851 ;;		_lcd_set_cursor_y
 10852 ;; This function is called by:
 10853 ;;		_lcd_fill
 10854 ;;		_lcd_draw_char
 10855 ;;		_lcd_draw_pixel_at
 10856 ;;		_lcd_fill_rect
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text35
 10861  003BCA                     __ptext35:
 10862                           	opt callstack 0
 10863  003BCA                     _lcd_set_cursor:
 10864                           	opt callstack 21
 10865  003BCA                     
 10866                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 10867  003BCA  C008  F006         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 10868  003BCE  C009  F007         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 10869  003BD2  EC7C  F01D         	call	_lcd_set_cursor_x	;wreg free
 10870  003BD6  0900               	iorlw	0
 10871  003BD8  A4D8               	btfss	status,2,c
 10872  003BDA  EFF1  F01D         	goto	u4351
 10873  003BDE  EFF3  F01D         	goto	u4350
 10874  003BE2                     u4351:
 10875  003BE2  EF01  F01E         	goto	l4354
 10876  003BE6                     u4350:
 10877  003BE6  C00A  F006         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 10878  003BEA  C00B  F007         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 10879  003BEE  EC58  F01D         	call	_lcd_set_cursor_y	;wreg free
 10880  003BF2  0900               	iorlw	0
 10881  003BF4  B4D8               	btfsc	status,2,c
 10882  003BF6  EFFF  F01D         	goto	u4361
 10883  003BFA  EF01  F01E         	goto	u4360
 10884  003BFE                     u4361:
 10885  003BFE  EF04  F01E         	goto	l4358
 10886  003C02                     u4360:
 10887  003C02                     l4354:
 10888                           
 10889                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
 10890  003C02  0E01               	movlw	1
 10891  003C04  EF05  F01E         	goto	l343
 10892  003C08                     l4358:
 10893                           
 10894                           ;lib_ili9341.c: 151:     return 0;
 10895  003C08  0E00               	movlw	0
 10896  003C0A                     l343:
 10897  003C0A  0012               	return		;funcret
 10898  003C0C                     __end_of_lcd_set_cursor:
 10899                           	opt callstack 0
 10900                           
 10901 ;; *************** function _lcd_set_cursor_y *****************
 10902 ;; Defined at:
 10903 ;;		line 170 in file "lib_ili9341.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;  y               2    5[COMRAM] unsigned short 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;		None
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1    wreg      unsigned char 
 10910 ;; Registers used:
 10911 ;;		wreg, status,2, status,0, cstack
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10921 ;;Total ram usage:        2 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:    6
 10924 ;; This function calls:
 10925 ;;		_lcd_send
 10926 ;; This function is called by:
 10927 ;;		_lcd_set_cursor
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931                           	psect	text36
 10932  003AB0                     __ptext36:
 10933                           	opt callstack 0
 10934  003AB0                     _lcd_set_cursor_y:
 10935                           	opt callstack 21
 10936  003AB0                     
 10937                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
 10938  003AB0  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 10939  003AB2  E109               	bnz	u3870
 10940  003AB4  0EF0               	movlw	240
 10941  003AB6  5C06               	subwf	lcd_set_cursor_y@y^0,w,c
 10942  003AB8  A0D8               	btfss	status,0,c
 10943  003ABA  EF61  F01D         	goto	u3871
 10944  003ABE  EF63  F01D         	goto	u3870
 10945  003AC2                     u3871:
 10946  003AC2  EF66  F01D         	goto	l4002
 10947  003AC6                     u3870:
 10948  003AC6                     
 10949                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
 10950  003AC6  0E01               	movlw	1
 10951  003AC8  EF7B  F01D         	goto	l351
 10952  003ACC                     l4002:
 10953                           
 10954                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
 10955  003ACC  0E2A               	movlw	42
 10956  003ACE  6E04               	movwf	lcd_send@value^0,c
 10957  003AD0  0E00               	movlw	0
 10958  003AD2  EC62  F01F         	call	_lcd_send
 10959                           
 10960                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
 10961  003AD6  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 10962  003AD8  6E04               	movwf	lcd_send@value^0,c
 10963  003ADA  0E01               	movlw	1
 10964  003ADC  EC62  F01F         	call	_lcd_send
 10965                           
 10966                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
 10967  003AE0  C006  F004         	movff	lcd_set_cursor_y@y,lcd_send@value
 10968  003AE4  0E01               	movlw	1
 10969  003AE6  EC62  F01F         	call	_lcd_send
 10970                           
 10971                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
 10972  003AEA  0E2C               	movlw	44
 10973  003AEC  6E04               	movwf	lcd_send@value^0,c
 10974  003AEE  0E00               	movlw	0
 10975  003AF0  EC62  F01F         	call	_lcd_send
 10976  003AF4                     
 10977                           ;lib_ili9341.c: 182:     return 0;
 10978  003AF4  0E00               	movlw	0
 10979  003AF6                     l351:
 10980  003AF6  0012               	return		;funcret
 10981  003AF8                     __end_of_lcd_set_cursor_y:
 10982                           	opt callstack 0
 10983                           
 10984 ;; *************** function _lcd_set_cursor_x *****************
 10985 ;; Defined at:
 10986 ;;		line 155 in file "lib_ili9341.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  x               2    5[COMRAM] unsigned short 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      unsigned char 
 10993 ;; Registers used:
 10994 ;;		wreg, status,2, status,0, cstack
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;Total ram usage:        2 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    6
 11007 ;; This function calls:
 11008 ;;		_lcd_send
 11009 ;; This function is called by:
 11010 ;;		_lcd_set_cursor
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text37
 11015  003AF8                     __ptext37:
 11016                           	opt callstack 0
 11017  003AF8                     _lcd_set_cursor_x:
 11018                           	opt callstack 21
 11019  003AF8                     
 11020                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
 11021  003AF8  0E40               	movlw	64
 11022  003AFA  5C06               	subwf	lcd_set_cursor_x@x^0,w,c
 11023  003AFC  0E01               	movlw	1
 11024  003AFE  5807               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 11025  003B00  A0D8               	btfss	status,0,c
 11026  003B02  EF85  F01D         	goto	u3861
 11027  003B06  EF87  F01D         	goto	u3860
 11028  003B0A                     u3861:
 11029  003B0A  EF8A  F01D         	goto	l3990
 11030  003B0E                     u3860:
 11031  003B0E                     
 11032                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
 11033  003B0E  0E01               	movlw	1
 11034  003B10  EF9F  F01D         	goto	l347
 11035  003B14                     l3990:
 11036                           
 11037                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
 11038  003B14  0E2B               	movlw	43
 11039  003B16  6E04               	movwf	lcd_send@value^0,c
 11040  003B18  0E00               	movlw	0
 11041  003B1A  EC62  F01F         	call	_lcd_send
 11042                           
 11043                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
 11044  003B1E  5007               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 11045  003B20  6E04               	movwf	lcd_send@value^0,c
 11046  003B22  0E01               	movlw	1
 11047  003B24  EC62  F01F         	call	_lcd_send
 11048                           
 11049                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
 11050  003B28  C006  F004         	movff	lcd_set_cursor_x@x,lcd_send@value
 11051  003B2C  0E01               	movlw	1
 11052  003B2E  EC62  F01F         	call	_lcd_send
 11053                           
 11054                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
 11055  003B32  0E2C               	movlw	44
 11056  003B34  6E04               	movwf	lcd_send@value^0,c
 11057  003B36  0E00               	movlw	0
 11058  003B38  EC62  F01F         	call	_lcd_send
 11059  003B3C                     
 11060                           ;lib_ili9341.c: 167:     return 0;
 11061  003B3C  0E00               	movlw	0
 11062  003B3E                     l347:
 11063  003B3E  0012               	return		;funcret
 11064  003B40                     __end_of_lcd_set_cursor_x:
 11065                           	opt callstack 0
 11066                           
 11067 ;; *************** function _lcd_draw_pixel *****************
 11068 ;; Defined at:
 11069 ;;		line 185 in file "lib_ili9341.c"
 11070 ;; Parameters:    Size  Location     Type
 11071 ;;  color           2    5[COMRAM] unsigned short 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;		None
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  1    wreg      unsigned char 
 11076 ;; Registers used:
 11077 ;;		wreg, status,2, cstack
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11087 ;;Total ram usage:        2 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:    6
 11090 ;; This function calls:
 11091 ;;		_lcd_send
 11092 ;; This function is called by:
 11093 ;;		_lcd_fill
 11094 ;;		_lcd_draw_char
 11095 ;;		_lcd_draw_pixel_at
 11096 ;;		_lcd_fill_rect
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text38
 11101  003EF4                     __ptext38:
 11102                           	opt callstack 0
 11103  003EF4                     _lcd_draw_pixel:
 11104                           	opt callstack 22
 11105  003EF4                     
 11106                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
 11107  003EF4  5007               	movf	(lcd_draw_pixel@color+1)^0,w,c
 11108  003EF6  6E04               	movwf	lcd_send@value^0,c
 11109  003EF8  0E01               	movlw	1
 11110  003EFA  EC62  F01F         	call	_lcd_send
 11111                           
 11112                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
 11113  003EFE  C006  F004         	movff	lcd_draw_pixel@color,lcd_send@value
 11114  003F02  0E01               	movlw	1
 11115  003F04  EC62  F01F         	call	_lcd_send
 11116  003F08  0012               	return		;funcret
 11117  003F0A                     __end_of_lcd_draw_pixel:
 11118                           	opt callstack 0
 11119                           
 11120 ;; *************** function _lcd_send *****************
 11121 ;; Defined at:
 11122 ;;		line 134 in file "lib_ili9341.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  dc              1    wreg     _Bool 
 11125 ;;  value           1    3[COMRAM] unsigned char 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  dc              1    4[COMRAM] _Bool 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      void 
 11130 ;; Registers used:
 11131 ;;		wreg, status,2, cstack
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11137 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11141 ;;Total ram usage:        2 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:    5
 11144 ;; This function calls:
 11145 ;;		_SPI_ExchangeByte
 11146 ;; This function is called by:
 11147 ;;		_lcd_init
 11148 ;;		_lcd_set_cursor_x
 11149 ;;		_lcd_set_cursor_y
 11150 ;;		_lcd_draw_pixel
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           
 11154                           	psect	text39
 11155  003EC4                     __ptext39:
 11156                           	opt callstack 0
 11157  003EC4                     _lcd_send:
 11158                           	opt callstack 24
 11159                           
 11160                           ;incstack = 0
 11161                           ;lcd_send@dc stored from wreg
 11162  003EC4  6E05               	movwf	lcd_send@dc^0,c
 11163  003EC6                     
 11164                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
 11165  003EC6  B005               	btfsc	lcd_send@dc^0,0,c
 11166  003EC8  D002               	bra	u3145
 11167  003ECA  908D               	bcf	141,0,c	;volatile
 11168  003ECC  D001               	bra	u3146
 11169  003ECE                     u3145:
 11170  003ECE  808D               	bsf	141,0,c	;volatile
 11171  003ED0                     u3146:
 11172  003ED0                     
 11173                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
 11174  003ED0  928D               	bcf	141,1,c	;volatile
 11175  003ED2                     
 11176                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
 11177  003ED2  5004               	movf	lcd_send@value^0,w,c
 11178  003ED4  EC48  F01F         	call	_SPI_ExchangeByte
 11179  003ED8                     
 11180                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
 11181  003ED8  828D               	bsf	141,1,c	;volatile
 11182  003EDA  0012               	return		;funcret
 11183  003EDC                     __end_of_lcd_send:
 11184                           	opt callstack 0
 11185                           
 11186 ;; *************** function _SPI_ExchangeByte *****************
 11187 ;; Defined at:
 11188 ;;		line 92 in file "mcc_generated_files/spi.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  data            1    wreg     unsigned char 
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  data            1    2[COMRAM] unsigned char 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      unsigned char 
 11195 ;; Registers used:
 11196 ;;		wreg, status,2
 11197 ;; Tracked objects:
 11198 ;;		On entry : 0/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11206 ;;Total ram usage:        1 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    4
 11209 ;; This function calls:
 11210 ;;		Nothing
 11211 ;; This function is called by:
 11212 ;;		_lcd_send
 11213 ;;		_SPI_WriteBlock
 11214 ;;		_SPI_ReadBlock
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text40
 11219  003E90                     __ptext40:
 11220                           	opt callstack 0
 11221  003E90                     _SPI_ExchangeByte:
 11222                           	opt callstack 24
 11223                           
 11224                           ;incstack = 0
 11225                           ;SPI_ExchangeByte@data stored from wreg
 11226  003E90  6E03               	movwf	SPI_ExchangeByte@data^0,c
 11227  003E92                     
 11228                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 11229  003E92  C003  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 11230  003E96                     l136:
 11231  003E96  A69E               	btfss	158,3,c	;volatile
 11232  003E98  EF50  F01F         	goto	u2771
 11233  003E9C  EF52  F01F         	goto	u2770
 11234  003EA0                     u2771:
 11235  003EA0  EF4B  F01F         	goto	l136
 11236  003EA4                     u2770:
 11237  003EA4                     
 11238                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 11239  003EA4  969E               	bcf	158,3,c	;volatile
 11240                           
 11241                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 11242  003EA6  50C9               	movf	201,w,c	;volatile
 11243  003EA8  0012               	return		;funcret
 11244  003EAA                     __end_of_SPI_ExchangeByte:
 11245                           	opt callstack 0
 11246                           
 11247 ;; *************** function ___xxtofl *****************
 11248 ;; Defined at:
 11249 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11250 ;; Parameters:    Size  Location     Type
 11251 ;;  sign            1    wreg     unsigned char 
 11252 ;;  val             4    2[COMRAM] long 
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;  sign            1   10[COMRAM] unsigned char 
 11255 ;;  arg             4   12[COMRAM] unsigned long 
 11256 ;;  exp             1   11[COMRAM] unsigned char 
 11257 ;; Return value:  Size  Location     Type
 11258 ;;                  4    2[COMRAM] unsigned char 
 11259 ;; Registers used:
 11260 ;;		wreg, status,2, status,0
 11261 ;; Tracked objects:
 11262 ;;		On entry : 0/0
 11263 ;;		On exit  : 0/0
 11264 ;;		Unchanged: 0/0
 11265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11267 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11268 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11269 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;Total ram usage:       14 bytes
 11271 ;; Hardware stack levels used:    1
 11272 ;; Hardware stack levels required when called:    4
 11273 ;; This function calls:
 11274 ;;		Nothing
 11275 ;; This function is called by:
 11276 ;;		_main
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text41
 11281  002604                     __ptext41:
 11282                           	opt callstack 0
 11283  002604                     ___xxtofl:
 11284                           	opt callstack 26
 11285                           
 11286                           ;incstack = 0
 11287                           ;___xxtofl@sign stored from wreg
 11288  002604  6E0B               	movwf	___xxtofl@sign^0,c
 11289  002606  500B               	movf	___xxtofl@sign^0,w,c
 11290  002608  B4D8               	btfsc	status,2,c
 11291  00260A  EF09  F013         	goto	u5031
 11292  00260E  EF0B  F013         	goto	u5030
 11293  002612                     u5031:
 11294  002612  EF2D  F013         	goto	l1361
 11295  002616                     u5030:
 11296  002616  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 11297  002618  EF12  F013         	goto	u5040
 11298  00261C  EF10  F013         	goto	u5041
 11299  002620                     u5041:
 11300  002620  EF2D  F013         	goto	l1361
 11301  002624                     u5040:
 11302  002624  C003  F007         	movff	___xxtofl@val,??___xxtofl
 11303  002628  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 11304  00262C  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 11305  002630  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 11306  002634  1E07               	comf	??___xxtofl^0,f,c
 11307  002636  1E08               	comf	(??___xxtofl+1)^0,f,c
 11308  002638  1E09               	comf	(??___xxtofl+2)^0,f,c
 11309  00263A  1E0A               	comf	(??___xxtofl+3)^0,f,c
 11310  00263C  2A07               	incf	??___xxtofl^0,f,c
 11311  00263E  0E00               	movlw	0
 11312  002640  2208               	addwfc	(??___xxtofl+1)^0,f,c
 11313  002642  2209               	addwfc	(??___xxtofl+2)^0,f,c
 11314  002644  220A               	addwfc	(??___xxtofl+3)^0,f,c
 11315  002646  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 11316  00264A  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 11317  00264E  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 11318  002652  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 11319  002656  EF35  F013         	goto	l5024
 11320  00265A                     l1361:
 11321  00265A  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 11322  00265E  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11323  002662  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11324  002666  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11325  00266A                     l5024:
 11326  00266A  5003               	movf	___xxtofl@val^0,w,c
 11327  00266C  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 11328  00266E  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 11329  002670  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 11330  002672  A4D8               	btfss	status,2,c
 11331  002674  EF3E  F013         	goto	u5051
 11332  002678  EF40  F013         	goto	u5050
 11333  00267C                     u5051:
 11334  00267C  EF4A  F013         	goto	l5030
 11335  002680                     u5050:
 11336  002680  0E00               	movlw	0
 11337  002682  6E03               	movwf	?___xxtofl^0,c
 11338  002684  0E00               	movlw	0
 11339  002686  6E04               	movwf	(?___xxtofl+1)^0,c
 11340  002688  0E00               	movlw	0
 11341  00268A  6E05               	movwf	(?___xxtofl+2)^0,c
 11342  00268C  0E00               	movlw	0
 11343  00268E  6E06               	movwf	(?___xxtofl+3)^0,c
 11344  002690  EFDB  F013         	goto	l1364
 11345  002694                     l5030:
 11346  002694  0E96               	movlw	150
 11347  002696  6E0C               	movwf	___xxtofl@exp^0,c
 11348  002698  EF54  F013         	goto	l5034
 11349  00269C                     l5032:
 11350  00269C  2A0C               	incf	___xxtofl@exp^0,f,c
 11351  00269E  90D8               	bcf	status,0,c
 11352  0026A0  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 11353  0026A2  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 11354  0026A4  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 11355  0026A6  320D               	rrcf	___xxtofl@arg^0,f,c
 11356  0026A8                     l5034:
 11357  0026A8  0E00               	movlw	0
 11358  0026AA  140D               	andwf	___xxtofl@arg^0,w,c
 11359  0026AC  6E07               	movwf	??___xxtofl^0,c
 11360  0026AE  0E00               	movlw	0
 11361  0026B0  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 11362  0026B2  6E08               	movwf	(??___xxtofl+1)^0,c
 11363  0026B4  0E00               	movlw	0
 11364  0026B6  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 11365  0026B8  6E09               	movwf	(??___xxtofl+2)^0,c
 11366  0026BA  0EFE               	movlw	254
 11367  0026BC  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 11368  0026BE  6E0A               	movwf	(??___xxtofl+3)^0,c
 11369  0026C0  5007               	movf	??___xxtofl^0,w,c
 11370  0026C2  1008               	iorwf	(??___xxtofl+1)^0,w,c
 11371  0026C4  1009               	iorwf	(??___xxtofl+2)^0,w,c
 11372  0026C6  100A               	iorwf	(??___xxtofl+3)^0,w,c
 11373  0026C8  A4D8               	btfss	status,2,c
 11374  0026CA  EF69  F013         	goto	u5061
 11375  0026CE  EF6B  F013         	goto	u5060
 11376  0026D2                     u5061:
 11377  0026D2  EF4E  F013         	goto	l5032
 11378  0026D6                     u5060:
 11379  0026D6  EF79  F013         	goto	l1368
 11380  0026DA                     l5036:
 11381  0026DA  2A0C               	incf	___xxtofl@exp^0,f,c
 11382  0026DC  0E01               	movlw	1
 11383  0026DE  260D               	addwf	___xxtofl@arg^0,f,c
 11384  0026E0  0E00               	movlw	0
 11385  0026E2  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 11386  0026E4  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 11387  0026E6  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 11388  0026E8  90D8               	bcf	status,0,c
 11389  0026EA  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 11390  0026EC  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 11391  0026EE  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 11392  0026F0  320D               	rrcf	___xxtofl@arg^0,f,c
 11393  0026F2                     l1368:
 11394  0026F2  0E00               	movlw	0
 11395  0026F4  140D               	andwf	___xxtofl@arg^0,w,c
 11396  0026F6  6E07               	movwf	??___xxtofl^0,c
 11397  0026F8  0E00               	movlw	0
 11398  0026FA  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 11399  0026FC  6E08               	movwf	(??___xxtofl+1)^0,c
 11400  0026FE  0E00               	movlw	0
 11401  002700  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 11402  002702  6E09               	movwf	(??___xxtofl+2)^0,c
 11403  002704  0EFF               	movlw	255
 11404  002706  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 11405  002708  6E0A               	movwf	(??___xxtofl+3)^0,c
 11406  00270A  5007               	movf	??___xxtofl^0,w,c
 11407  00270C  1008               	iorwf	(??___xxtofl+1)^0,w,c
 11408  00270E  1009               	iorwf	(??___xxtofl+2)^0,w,c
 11409  002710  100A               	iorwf	(??___xxtofl+3)^0,w,c
 11410  002712  A4D8               	btfss	status,2,c
 11411  002714  EF8E  F013         	goto	u5071
 11412  002718  EF90  F013         	goto	u5070
 11413  00271C                     u5071:
 11414  00271C  EF6D  F013         	goto	l5036
 11415  002720                     u5070:
 11416  002720  EF98  F013         	goto	l5044
 11417  002724                     l5042:
 11418  002724  060C               	decf	___xxtofl@exp^0,f,c
 11419  002726  90D8               	bcf	status,0,c
 11420  002728  360D               	rlcf	___xxtofl@arg^0,f,c
 11421  00272A  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 11422  00272C  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 11423  00272E  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 11424  002730                     l5044:
 11425  002730  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 11426  002732  EF9D  F013         	goto	u5081
 11427  002736  EF9F  F013         	goto	u5080
 11428  00273A                     u5081:
 11429  00273A  EFA7  F013         	goto	l1375
 11430  00273E                     u5080:
 11431  00273E  0E02               	movlw	2
 11432  002740  600C               	cpfslt	___xxtofl@exp^0,c
 11433  002742  EFA5  F013         	goto	u5091
 11434  002746  EFA7  F013         	goto	u5090
 11435  00274A                     u5091:
 11436  00274A  EF92  F013         	goto	l5042
 11437  00274E                     u5090:
 11438  00274E                     l1375:
 11439  00274E  B00C               	btfsc	___xxtofl@exp^0,0,c
 11440  002750  EFAC  F013         	goto	u5101
 11441  002754  EFAE  F013         	goto	u5100
 11442  002758                     u5101:
 11443  002758  EFAF  F013         	goto	l5050
 11444  00275C                     u5100:
 11445  00275C  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 11446  00275E                     l5050:
 11447  00275E  90D8               	bcf	status,0,c
 11448  002760  320C               	rrcf	___xxtofl@exp^0,f,c
 11449  002762  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 11450  002766  6A08               	clrf	(??___xxtofl+1)^0,c
 11451  002768  6A09               	clrf	(??___xxtofl+2)^0,c
 11452  00276A  6A0A               	clrf	(??___xxtofl+3)^0,c
 11453  00276C  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 11454  002770  6A09               	clrf	(??___xxtofl+2)^0,c
 11455  002772  6A08               	clrf	(??___xxtofl+1)^0,c
 11456  002774  6A07               	clrf	??___xxtofl^0,c
 11457  002776  5007               	movf	??___xxtofl^0,w,c
 11458  002778  120D               	iorwf	___xxtofl@arg^0,f,c
 11459  00277A  5008               	movf	(??___xxtofl+1)^0,w,c
 11460  00277C  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 11461  00277E  5009               	movf	(??___xxtofl+2)^0,w,c
 11462  002780  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 11463  002782  500A               	movf	(??___xxtofl+3)^0,w,c
 11464  002784  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 11465  002786  500B               	movf	___xxtofl@sign^0,w,c
 11466  002788  B4D8               	btfsc	status,2,c
 11467  00278A  EFC9  F013         	goto	u5111
 11468  00278E  EFCB  F013         	goto	u5110
 11469  002792                     u5111:
 11470  002792  EFD3  F013         	goto	l5060
 11471  002796                     u5110:
 11472  002796  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 11473  002798  EFD2  F013         	goto	u5120
 11474  00279C  EFD0  F013         	goto	u5121
 11475  0027A0                     u5121:
 11476  0027A0  EFD3  F013         	goto	l5060
 11477  0027A4                     u5120:
 11478  0027A4  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 11479  0027A6                     l5060:
 11480  0027A6  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 11481  0027AA  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 11482  0027AE  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 11483  0027B2  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 11484  0027B6                     l1364:
 11485  0027B6  0012               	return		;funcret
 11486  0027B8                     __end_of___xxtofl:
 11487                           	opt callstack 0
 11488                           
 11489 ;; *************** function ___lmul *****************
 11490 ;; Defined at:
 11491 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  multiplier      4    2[COMRAM] unsigned long 
 11494 ;;  multiplicand    4    6[COMRAM] unsigned long 
 11495 ;; Auto vars:     Size  Location     Type
 11496 ;;  product         4   10[COMRAM] unsigned long 
 11497 ;; Return value:  Size  Location     Type
 11498 ;;                  4    2[COMRAM] unsigned long 
 11499 ;; Registers used:
 11500 ;;		wreg, status,2, status,0
 11501 ;; Tracked objects:
 11502 ;;		On entry : 0/0
 11503 ;;		On exit  : 0/0
 11504 ;;		Unchanged: 0/0
 11505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11506 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11509 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11510 ;;Total ram usage:       12 bytes
 11511 ;; Hardware stack levels used:    1
 11512 ;; Hardware stack levels required when called:    4
 11513 ;; This function calls:
 11514 ;;		Nothing
 11515 ;; This function is called by:
 11516 ;;		_main
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text42
 11521  00388E                     __ptext42:
 11522                           	opt callstack 0
 11523  00388E                     ___lmul:
 11524                           	opt callstack 26
 11525  00388E  0E00               	movlw	0
 11526  003890  6E0B               	movwf	___lmul@product^0,c
 11527  003892  0E00               	movlw	0
 11528  003894  6E0C               	movwf	(___lmul@product+1)^0,c
 11529  003896  0E00               	movlw	0
 11530  003898  6E0D               	movwf	(___lmul@product+2)^0,c
 11531  00389A  0E00               	movlw	0
 11532  00389C  6E0E               	movwf	(___lmul@product+3)^0,c
 11533  00389E                     l4814:
 11534  00389E  A003               	btfss	___lmul@multiplier^0,0,c
 11535  0038A0  EF54  F01C         	goto	u4721
 11536  0038A4  EF56  F01C         	goto	u4720
 11537  0038A8                     u4721:
 11538  0038A8  EF5E  F01C         	goto	l4818
 11539  0038AC                     u4720:
 11540  0038AC  5007               	movf	___lmul@multiplicand^0,w,c
 11541  0038AE  260B               	addwf	___lmul@product^0,f,c
 11542  0038B0  5008               	movf	(___lmul@multiplicand+1)^0,w,c
 11543  0038B2  220C               	addwfc	(___lmul@product+1)^0,f,c
 11544  0038B4  5009               	movf	(___lmul@multiplicand+2)^0,w,c
 11545  0038B6  220D               	addwfc	(___lmul@product+2)^0,f,c
 11546  0038B8  500A               	movf	(___lmul@multiplicand+3)^0,w,c
 11547  0038BA  220E               	addwfc	(___lmul@product+3)^0,f,c
 11548  0038BC                     l4818:
 11549  0038BC  90D8               	bcf	status,0,c
 11550  0038BE  3607               	rlcf	___lmul@multiplicand^0,f,c
 11551  0038C0  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11552  0038C2  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11553  0038C4  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11554  0038C6  90D8               	bcf	status,0,c
 11555  0038C8  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
 11556  0038CA  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
 11557  0038CC  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
 11558  0038CE  3203               	rrcf	___lmul@multiplier^0,f,c
 11559  0038D0  5003               	movf	___lmul@multiplier^0,w,c
 11560  0038D2  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
 11561  0038D4  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
 11562  0038D6  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
 11563  0038D8  A4D8               	btfss	status,2,c
 11564  0038DA  EF71  F01C         	goto	u4731
 11565  0038DE  EF73  F01C         	goto	u4730
 11566  0038E2                     u4731:
 11567  0038E2  EF4F  F01C         	goto	l4814
 11568  0038E6                     u4730:
 11569  0038E6  C00B  F003         	movff	___lmul@product,?___lmul
 11570  0038EA  C00C  F004         	movff	___lmul@product+1,?___lmul+1
 11571  0038EE  C00D  F005         	movff	___lmul@product+2,?___lmul+2
 11572  0038F2  C00E  F006         	movff	___lmul@product+3,?___lmul+3
 11573  0038F6  0012               	return		;funcret
 11574  0038F8                     __end_of___lmul:
 11575                           	opt callstack 0
 11576                           
 11577 ;; *************** function ___lldiv *****************
 11578 ;; Defined at:
 11579 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 11580 ;; Parameters:    Size  Location     Type
 11581 ;;  dividend        4   14[COMRAM] unsigned long 
 11582 ;;  divisor         4   18[COMRAM] unsigned long 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;  quotient        4   22[COMRAM] unsigned long 
 11585 ;;  counter         1   26[COMRAM] unsigned char 
 11586 ;; Return value:  Size  Location     Type
 11587 ;;                  4   14[COMRAM] unsigned long 
 11588 ;; Registers used:
 11589 ;;		wreg, status,2, status,0
 11590 ;; Tracked objects:
 11591 ;;		On entry : 0/0
 11592 ;;		On exit  : 0/0
 11593 ;;		Unchanged: 0/0
 11594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11595 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11596 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11598 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11599 ;;Total ram usage:       13 bytes
 11600 ;; Hardware stack levels used:    1
 11601 ;; Hardware stack levels required when called:    4
 11602 ;; This function calls:
 11603 ;;		Nothing
 11604 ;; This function is called by:
 11605 ;;		_main
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609                           	psect	text43
 11610  003768                     __ptext43:
 11611                           	opt callstack 0
 11612  003768                     ___lldiv:
 11613                           	opt callstack 26
 11614  003768  0E00               	movlw	0
 11615  00376A  6E17               	movwf	___lldiv@quotient^0,c
 11616  00376C  0E00               	movlw	0
 11617  00376E  6E18               	movwf	(___lldiv@quotient+1)^0,c
 11618  003770  0E00               	movlw	0
 11619  003772  6E19               	movwf	(___lldiv@quotient+2)^0,c
 11620  003774  0E00               	movlw	0
 11621  003776  6E1A               	movwf	(___lldiv@quotient+3)^0,c
 11622  003778  5013               	movf	___lldiv@divisor^0,w,c
 11623  00377A  1014               	iorwf	(___lldiv@divisor+1)^0,w,c
 11624  00377C  1015               	iorwf	(___lldiv@divisor+2)^0,w,c
 11625  00377E  1016               	iorwf	(___lldiv@divisor+3)^0,w,c
 11626  003780  B4D8               	btfsc	status,2,c
 11627  003782  EFC5  F01B         	goto	u4741
 11628  003786  EFC7  F01B         	goto	u4740
 11629  00378A                     u4741:
 11630  00378A  EFFD  F01B         	goto	l733
 11631  00378E                     u4740:
 11632  00378E  0E01               	movlw	1
 11633  003790  6E1B               	movwf	___lldiv@counter^0,c
 11634  003792  EFD1  F01B         	goto	l4830
 11635  003796                     l4828:
 11636  003796  90D8               	bcf	status,0,c
 11637  003798  3613               	rlcf	___lldiv@divisor^0,f,c
 11638  00379A  3614               	rlcf	(___lldiv@divisor+1)^0,f,c
 11639  00379C  3615               	rlcf	(___lldiv@divisor+2)^0,f,c
 11640  00379E  3616               	rlcf	(___lldiv@divisor+3)^0,f,c
 11641  0037A0  2A1B               	incf	___lldiv@counter^0,f,c
 11642  0037A2                     l4830:
 11643  0037A2  AE16               	btfss	(___lldiv@divisor+3)^0,7,c
 11644  0037A4  EFD6  F01B         	goto	u4751
 11645  0037A8  EFD8  F01B         	goto	u4750
 11646  0037AC                     u4751:
 11647  0037AC  EFCB  F01B         	goto	l4828
 11648  0037B0                     u4750:
 11649  0037B0                     l4832:
 11650  0037B0  90D8               	bcf	status,0,c
 11651  0037B2  3617               	rlcf	___lldiv@quotient^0,f,c
 11652  0037B4  3618               	rlcf	(___lldiv@quotient+1)^0,f,c
 11653  0037B6  3619               	rlcf	(___lldiv@quotient+2)^0,f,c
 11654  0037B8  361A               	rlcf	(___lldiv@quotient+3)^0,f,c
 11655  0037BA  5013               	movf	___lldiv@divisor^0,w,c
 11656  0037BC  5C0F               	subwf	___lldiv@dividend^0,w,c
 11657  0037BE  5014               	movf	(___lldiv@divisor+1)^0,w,c
 11658  0037C0  5810               	subwfb	(___lldiv@dividend+1)^0,w,c
 11659  0037C2  5015               	movf	(___lldiv@divisor+2)^0,w,c
 11660  0037C4  5811               	subwfb	(___lldiv@dividend+2)^0,w,c
 11661  0037C6  5016               	movf	(___lldiv@divisor+3)^0,w,c
 11662  0037C8  5812               	subwfb	(___lldiv@dividend+3)^0,w,c
 11663  0037CA  A0D8               	btfss	status,0,c
 11664  0037CC  EFEA  F01B         	goto	u4761
 11665  0037D0  EFEC  F01B         	goto	u4760
 11666  0037D4                     u4761:
 11667  0037D4  EFF5  F01B         	goto	l4840
 11668  0037D8                     u4760:
 11669  0037D8  5013               	movf	___lldiv@divisor^0,w,c
 11670  0037DA  5E0F               	subwf	___lldiv@dividend^0,f,c
 11671  0037DC  5014               	movf	(___lldiv@divisor+1)^0,w,c
 11672  0037DE  5A10               	subwfb	(___lldiv@dividend+1)^0,f,c
 11673  0037E0  5015               	movf	(___lldiv@divisor+2)^0,w,c
 11674  0037E2  5A11               	subwfb	(___lldiv@dividend+2)^0,f,c
 11675  0037E4  5016               	movf	(___lldiv@divisor+3)^0,w,c
 11676  0037E6  5A12               	subwfb	(___lldiv@dividend+3)^0,f,c
 11677  0037E8  8017               	bsf	___lldiv@quotient^0,0,c
 11678  0037EA                     l4840:
 11679  0037EA  90D8               	bcf	status,0,c
 11680  0037EC  3216               	rrcf	(___lldiv@divisor+3)^0,f,c
 11681  0037EE  3215               	rrcf	(___lldiv@divisor+2)^0,f,c
 11682  0037F0  3214               	rrcf	(___lldiv@divisor+1)^0,f,c
 11683  0037F2  3213               	rrcf	___lldiv@divisor^0,f,c
 11684  0037F4  2E1B               	decfsz	___lldiv@counter^0,f,c
 11685  0037F6  EFD8  F01B         	goto	l4832
 11686  0037FA                     l733:
 11687  0037FA  C017  F00F         	movff	___lldiv@quotient,?___lldiv
 11688  0037FE  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
 11689  003802  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
 11690  003806  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
 11691  00380A  0012               	return		;funcret
 11692  00380C                     __end_of___lldiv:
 11693                           	opt callstack 0
 11694                           
 11695 ;; *************** function ___fltol *****************
 11696 ;; Defined at:
 11697 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  f1              4   41[COMRAM] unsigned long 
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;  exp1            1   50[COMRAM] unsigned char 
 11702 ;;  sign1           1   49[COMRAM] unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  4   41[COMRAM] long 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11714 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11715 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11716 ;;Total ram usage:       10 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    4
 11719 ;; This function calls:
 11720 ;;		Nothing
 11721 ;; This function is called by:
 11722 ;;		_main
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text44
 11727  00317C                     __ptext44:
 11728                           	opt callstack 0
 11729  00317C                     ___fltol:
 11730                           	opt callstack 26
 11731  00317C  342C               	rlcf	(___fltol@f1+2)^0,w,c
 11732  00317E  342D               	rlcf	(___fltol@f1+3)^0,w,c
 11733  003180  6E33               	movwf	___fltol@exp1^0,c
 11734  003182  5033               	movf	___fltol@exp1^0,w,c
 11735  003184  A4D8               	btfss	status,2,c
 11736  003186  EFC7  F018         	goto	u4961
 11737  00318A  EFC9  F018         	goto	u4960
 11738  00318E                     u4961:
 11739  00318E  EFD3  F018         	goto	l4980
 11740  003192                     u4960:
 11741  003192                     l4976:
 11742  003192  0E00               	movlw	0
 11743  003194  6E2A               	movwf	?___fltol^0,c
 11744  003196  0E00               	movlw	0
 11745  003198  6E2B               	movwf	(?___fltol+1)^0,c
 11746  00319A  0E00               	movlw	0
 11747  00319C  6E2C               	movwf	(?___fltol+2)^0,c
 11748  00319E  0E00               	movlw	0
 11749  0031A0  6E2D               	movwf	(?___fltol+3)^0,c
 11750  0031A2  EF40  F019         	goto	l1003
 11751  0031A6                     l4980:
 11752  0031A6  C02A  F02E         	movff	___fltol@f1,??___fltol
 11753  0031AA  C02B  F02F         	movff	___fltol@f1+1,??___fltol+1
 11754  0031AE  C02C  F030         	movff	___fltol@f1+2,??___fltol+2
 11755  0031B2  C02D  F031         	movff	___fltol@f1+3,??___fltol+3
 11756  0031B6  0E20               	movlw	32
 11757  0031B8  EFE3  F018         	goto	u4970
 11758  0031BC                     u4975:
 11759  0031BC  90D8               	bcf	status,0,c
 11760  0031BE  3231               	rrcf	(??___fltol+3)^0,f,c
 11761  0031C0  3230               	rrcf	(??___fltol+2)^0,f,c
 11762  0031C2  322F               	rrcf	(??___fltol+1)^0,f,c
 11763  0031C4  322E               	rrcf	??___fltol^0,f,c
 11764  0031C6                     u4970:
 11765  0031C6  2EE8               	decfsz	wreg,f,c
 11766  0031C8  EFDE  F018         	goto	u4975
 11767  0031CC  502E               	movf	??___fltol^0,w,c
 11768  0031CE  6E32               	movwf	___fltol@sign1^0,c
 11769  0031D0  8E2C               	bsf	(___fltol@f1+2)^0,7,c
 11770  0031D2  0EFF               	movlw	255
 11771  0031D4  162A               	andwf	___fltol@f1^0,f,c
 11772  0031D6  0EFF               	movlw	255
 11773  0031D8  162B               	andwf	(___fltol@f1+1)^0,f,c
 11774  0031DA  0EFF               	movlw	255
 11775  0031DC  162C               	andwf	(___fltol@f1+2)^0,f,c
 11776  0031DE  0E00               	movlw	0
 11777  0031E0  162D               	andwf	(___fltol@f1+3)^0,f,c
 11778  0031E2  0E96               	movlw	150
 11779  0031E4  5E33               	subwf	___fltol@exp1^0,f,c
 11780  0031E6  BE33               	btfsc	___fltol@exp1^0,7,c
 11781  0031E8  EFFA  F018         	goto	u4980
 11782  0031EC  EFF8  F018         	goto	u4981
 11783  0031F0                     u4981:
 11784  0031F0  EF10  F019         	goto	l5000
 11785  0031F4                     u4980:
 11786  0031F4  5033               	movf	___fltol@exp1^0,w,c
 11787  0031F6  0A80               	xorlw	128
 11788  0031F8  0F97               	addlw	151
 11789  0031FA  B0D8               	btfsc	status,0,c
 11790  0031FC  EF02  F019         	goto	u4991
 11791  003200  EF04  F019         	goto	u4990
 11792  003204                     u4991:
 11793  003204  EF06  F019         	goto	l4996
 11794  003208                     u4990:
 11795  003208  EFC9  F018         	goto	l4976
 11796  00320C                     l4996:
 11797  00320C  90D8               	bcf	status,0,c
 11798  00320E  322D               	rrcf	(___fltol@f1+3)^0,f,c
 11799  003210  322C               	rrcf	(___fltol@f1+2)^0,f,c
 11800  003212  322B               	rrcf	(___fltol@f1+1)^0,f,c
 11801  003214  322A               	rrcf	___fltol@f1^0,f,c
 11802  003216  3E33               	incfsz	___fltol@exp1^0,f,c
 11803  003218  EF06  F019         	goto	l4996
 11804  00321C  EF28  F019         	goto	l5010
 11805  003220                     l5000:
 11806  003220  0E1F               	movlw	31
 11807  003222  6433               	cpfsgt	___fltol@exp1^0,c
 11808  003224  EF16  F019         	goto	u5001
 11809  003228  EF18  F019         	goto	u5000
 11810  00322C                     u5001:
 11811  00322C  EF20  F019         	goto	l5008
 11812  003230                     u5000:
 11813  003230  EFC9  F018         	goto	l4976
 11814  003234                     l5006:
 11815  003234  90D8               	bcf	status,0,c
 11816  003236  362A               	rlcf	___fltol@f1^0,f,c
 11817  003238  362B               	rlcf	(___fltol@f1+1)^0,f,c
 11818  00323A  362C               	rlcf	(___fltol@f1+2)^0,f,c
 11819  00323C  362D               	rlcf	(___fltol@f1+3)^0,f,c
 11820  00323E  0633               	decf	___fltol@exp1^0,f,c
 11821  003240                     l5008:
 11822  003240  5033               	movf	___fltol@exp1^0,w,c
 11823  003242  A4D8               	btfss	status,2,c
 11824  003244  EF26  F019         	goto	u5011
 11825  003248  EF28  F019         	goto	u5010
 11826  00324C                     u5011:
 11827  00324C  EF1A  F019         	goto	l5006
 11828  003250                     u5010:
 11829  003250                     l5010:
 11830  003250  5032               	movf	___fltol@sign1^0,w,c
 11831  003252  B4D8               	btfsc	status,2,c
 11832  003254  EF2E  F019         	goto	u5021
 11833  003258  EF30  F019         	goto	u5020
 11834  00325C                     u5021:
 11835  00325C  EF38  F019         	goto	l5014
 11836  003260                     u5020:
 11837  003260  1E2D               	comf	(___fltol@f1+3)^0,f,c
 11838  003262  1E2C               	comf	(___fltol@f1+2)^0,f,c
 11839  003264  1E2B               	comf	(___fltol@f1+1)^0,f,c
 11840  003266  6C2A               	negf	___fltol@f1^0,c
 11841  003268  0E00               	movlw	0
 11842  00326A  222B               	addwfc	(___fltol@f1+1)^0,f,c
 11843  00326C  222C               	addwfc	(___fltol@f1+2)^0,f,c
 11844  00326E  222D               	addwfc	(___fltol@f1+3)^0,f,c
 11845  003270                     l5014:
 11846  003270  C02A  F02A         	movff	___fltol@f1,?___fltol
 11847  003274  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
 11848  003278  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
 11849  00327C  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
 11850  003280                     l1003:
 11851  003280  0012               	return		;funcret
 11852  003282                     __end_of___fltol:
 11853                           	opt callstack 0
 11854                           
 11855 ;; *************** function ___flmul *****************
 11856 ;; Defined at:
 11857 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  b               4   16[COMRAM] long 
 11860 ;;  a               4   20[COMRAM] long 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;  prod            4   35[COMRAM] struct .
 11863 ;;  grs             4   29[COMRAM] unsigned long 
 11864 ;;  temp            2   39[COMRAM] struct .
 11865 ;;  bexp            1   34[COMRAM] unsigned char 
 11866 ;;  aexp            1   33[COMRAM] unsigned char 
 11867 ;;  sign            1   28[COMRAM] unsigned char 
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  4   16[COMRAM] unsigned char 
 11870 ;; Registers used:
 11871 ;;		wreg, status,2, status,0, prodl, prodh
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11877 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11880 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11881 ;;Total ram usage:       25 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; Hardware stack levels required when called:    4
 11884 ;; This function calls:
 11885 ;;		Nothing
 11886 ;; This function is called by:
 11887 ;;		_main
 11888 ;; This function uses a non-reentrant model
 11889 ;;
 11890                           
 11891                           	psect	text45
 11892  0012DE                     __ptext45:
 11893                           	opt callstack 0
 11894  0012DE                     ___flmul:
 11895                           	opt callstack 26
 11896  0012DE  5014               	movf	(___flmul@b+3)^0,w,c
 11897  0012E0  0B80               	andlw	128
 11898  0012E2  6E1D               	movwf	___flmul@sign^0,c
 11899  0012E4  5014               	movf	(___flmul@b+3)^0,w,c
 11900  0012E6  2414               	addwf	(___flmul@b+3)^0,w,c
 11901  0012E8  6E23               	movwf	___flmul@bexp^0,c
 11902  0012EA  AE13               	btfss	(___flmul@b+2)^0,7,c
 11903  0012EC  EF7A  F009         	goto	u4771
 11904  0012F0  EF7C  F009         	goto	u4770
 11905  0012F4                     u4771:
 11906  0012F4  EF7D  F009         	goto	l4850
 11907  0012F8                     u4770:
 11908  0012F8  8023               	bsf	___flmul@bexp^0,0,c
 11909  0012FA                     l4850:
 11910  0012FA  5023               	movf	___flmul@bexp^0,w,c
 11911  0012FC  B4D8               	btfsc	status,2,c
 11912  0012FE  EF83  F009         	goto	u4781
 11913  001302  EF85  F009         	goto	u4780
 11914  001306                     u4781:
 11915  001306  EF98  F009         	goto	l4858
 11916  00130A                     u4780:
 11917  00130A  2823               	incf	___flmul@bexp^0,w,c
 11918  00130C  A4D8               	btfss	status,2,c
 11919  00130E  EF8B  F009         	goto	u4791
 11920  001312  EF8D  F009         	goto	u4790
 11921  001316                     u4791:
 11922  001316  EF95  F009         	goto	l4856
 11923  00131A                     u4790:
 11924  00131A  0E00               	movlw	0
 11925  00131C  6E11               	movwf	___flmul@b^0,c
 11926  00131E  0E00               	movlw	0
 11927  001320  6E12               	movwf	(___flmul@b+1)^0,c
 11928  001322  0E00               	movlw	0
 11929  001324  6E13               	movwf	(___flmul@b+2)^0,c
 11930  001326  0E00               	movlw	0
 11931  001328  6E14               	movwf	(___flmul@b+3)^0,c
 11932  00132A                     l4856:
 11933  00132A  8E13               	bsf	(___flmul@b+2)^0,7,c
 11934  00132C  EFA0  F009         	goto	l4860
 11935  001330                     l4858:
 11936  001330  0E00               	movlw	0
 11937  001332  6E11               	movwf	___flmul@b^0,c
 11938  001334  0E00               	movlw	0
 11939  001336  6E12               	movwf	(___flmul@b+1)^0,c
 11940  001338  0E00               	movlw	0
 11941  00133A  6E13               	movwf	(___flmul@b+2)^0,c
 11942  00133C  0E00               	movlw	0
 11943  00133E  6E14               	movwf	(___flmul@b+3)^0,c
 11944  001340                     l4860:
 11945  001340  5018               	movf	(___flmul@a+3)^0,w,c
 11946  001342  0B80               	andlw	128
 11947  001344  1A1D               	xorwf	___flmul@sign^0,f,c
 11948  001346  5018               	movf	(___flmul@a+3)^0,w,c
 11949  001348  2418               	addwf	(___flmul@a+3)^0,w,c
 11950  00134A  6E22               	movwf	___flmul@aexp^0,c
 11951  00134C  AE17               	btfss	(___flmul@a+2)^0,7,c
 11952  00134E  EFAB  F009         	goto	u4801
 11953  001352  EFAD  F009         	goto	u4800
 11954  001356                     u4801:
 11955  001356  EFAE  F009         	goto	l4868
 11956  00135A                     u4800:
 11957  00135A  8022               	bsf	___flmul@aexp^0,0,c
 11958  00135C                     l4868:
 11959  00135C  5022               	movf	___flmul@aexp^0,w,c
 11960  00135E  B4D8               	btfsc	status,2,c
 11961  001360  EFB4  F009         	goto	u4811
 11962  001364  EFB6  F009         	goto	u4810
 11963  001368                     u4811:
 11964  001368  EFC9  F009         	goto	l4876
 11965  00136C                     u4810:
 11966  00136C  2822               	incf	___flmul@aexp^0,w,c
 11967  00136E  A4D8               	btfss	status,2,c
 11968  001370  EFBC  F009         	goto	u4821
 11969  001374  EFBE  F009         	goto	u4820
 11970  001378                     u4821:
 11971  001378  EFC6  F009         	goto	l4874
 11972  00137C                     u4820:
 11973  00137C  0E00               	movlw	0
 11974  00137E  6E15               	movwf	___flmul@a^0,c
 11975  001380  0E00               	movlw	0
 11976  001382  6E16               	movwf	(___flmul@a+1)^0,c
 11977  001384  0E00               	movlw	0
 11978  001386  6E17               	movwf	(___flmul@a+2)^0,c
 11979  001388  0E00               	movlw	0
 11980  00138A  6E18               	movwf	(___flmul@a+3)^0,c
 11981  00138C                     l4874:
 11982  00138C  8E17               	bsf	(___flmul@a+2)^0,7,c
 11983  00138E  EFD1  F009         	goto	l1320
 11984  001392                     l4876:
 11985  001392  0E00               	movlw	0
 11986  001394  6E15               	movwf	___flmul@a^0,c
 11987  001396  0E00               	movlw	0
 11988  001398  6E16               	movwf	(___flmul@a+1)^0,c
 11989  00139A  0E00               	movlw	0
 11990  00139C  6E17               	movwf	(___flmul@a+2)^0,c
 11991  00139E  0E00               	movlw	0
 11992  0013A0  6E18               	movwf	(___flmul@a+3)^0,c
 11993  0013A2                     l1320:
 11994  0013A2  5022               	movf	___flmul@aexp^0,w,c
 11995  0013A4  B4D8               	btfsc	status,2,c
 11996  0013A6  EFD7  F009         	goto	u4831
 11997  0013AA  EFD9  F009         	goto	u4830
 11998  0013AE                     u4831:
 11999  0013AE  EFE1  F009         	goto	l4880
 12000  0013B2                     u4830:
 12001  0013B2  5023               	movf	___flmul@bexp^0,w,c
 12002  0013B4  A4D8               	btfss	status,2,c
 12003  0013B6  EFDF  F009         	goto	u4841
 12004  0013BA  EFE1  F009         	goto	u4840
 12005  0013BE                     u4841:
 12006  0013BE  EFEB  F009         	goto	l4884
 12007  0013C2                     u4840:
 12008  0013C2                     l4880:
 12009  0013C2  0E00               	movlw	0
 12010  0013C4  6E11               	movwf	?___flmul^0,c
 12011  0013C6  0E00               	movlw	0
 12012  0013C8  6E12               	movwf	(?___flmul+1)^0,c
 12013  0013CA  0E00               	movlw	0
 12014  0013CC  6E13               	movwf	(?___flmul+2)^0,c
 12015  0013CE  0E00               	movlw	0
 12016  0013D0  6E14               	movwf	(?___flmul+3)^0,c
 12017  0013D2  EF83  F00B         	goto	l1324
 12018  0013D6                     l4884:
 12019  0013D6  5017               	movf	(___flmul@a+2)^0,w,c
 12020  0013D8  0211               	mulwf	___flmul@b^0,c
 12021  0013DA  CFF3 F028          	movff	prodl,___flmul@temp
 12022  0013DE  CFF4 F029          	movff	prodh,___flmul@temp+1
 12023  0013E2  5028               	movf	___flmul@temp^0,w,c
 12024  0013E4  6E1E               	movwf	___flmul@grs^0,c
 12025  0013E6  6A1F               	clrf	(___flmul@grs+1)^0,c
 12026  0013E8  6A20               	clrf	(___flmul@grs+2)^0,c
 12027  0013EA  6A21               	clrf	(___flmul@grs+3)^0,c
 12028  0013EC  5029               	movf	(___flmul@temp+1)^0,w,c
 12029  0013EE  6E24               	movwf	___flmul@prod^0,c
 12030  0013F0  6A25               	clrf	(___flmul@prod+1)^0,c
 12031  0013F2  6A26               	clrf	(___flmul@prod+2)^0,c
 12032  0013F4  6A27               	clrf	(___flmul@prod+3)^0,c
 12033  0013F6  5016               	movf	(___flmul@a+1)^0,w,c
 12034  0013F8  0212               	mulwf	(___flmul@b+1)^0,c
 12035  0013FA  CFF3 F028          	movff	prodl,___flmul@temp
 12036  0013FE  CFF4 F029          	movff	prodh,___flmul@temp+1
 12037  001402  5028               	movf	___flmul@temp^0,w,c
 12038  001404  261E               	addwf	___flmul@grs^0,f,c
 12039  001406  0E00               	movlw	0
 12040  001408  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12041  00140A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12042  00140C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12043  00140E  5029               	movf	(___flmul@temp+1)^0,w,c
 12044  001410  2624               	addwf	___flmul@prod^0,f,c
 12045  001412  0E00               	movlw	0
 12046  001414  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12047  001416  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12048  001418  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12049  00141A  5015               	movf	___flmul@a^0,w,c
 12050  00141C  0213               	mulwf	(___flmul@b+2)^0,c
 12051  00141E  CFF3 F028          	movff	prodl,___flmul@temp
 12052  001422  CFF4 F029          	movff	prodh,___flmul@temp+1
 12053  001426  5028               	movf	___flmul@temp^0,w,c
 12054  001428  261E               	addwf	___flmul@grs^0,f,c
 12055  00142A  0E00               	movlw	0
 12056  00142C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12057  00142E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12058  001430  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12059  001432  5029               	movf	(___flmul@temp+1)^0,w,c
 12060  001434  2624               	addwf	___flmul@prod^0,f,c
 12061  001436  0E00               	movlw	0
 12062  001438  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12063  00143A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12064  00143C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12065  00143E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12066  001442  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12067  001446  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12068  00144A  6A1E               	clrf	___flmul@grs^0,c
 12069  00144C  5015               	movf	___flmul@a^0,w,c
 12070  00144E  0212               	mulwf	(___flmul@b+1)^0,c
 12071  001450  CFF3 F028          	movff	prodl,___flmul@temp
 12072  001454  CFF4 F029          	movff	prodh,___flmul@temp+1
 12073  001458  5028               	movf	___flmul@temp^0,w,c
 12074  00145A  261E               	addwf	___flmul@grs^0,f,c
 12075  00145C  5029               	movf	(___flmul@temp+1)^0,w,c
 12076  00145E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12077  001460  0E00               	movlw	0
 12078  001462  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12079  001464  0E00               	movlw	0
 12080  001466  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12081  001468  5016               	movf	(___flmul@a+1)^0,w,c
 12082  00146A  0211               	mulwf	___flmul@b^0,c
 12083  00146C  CFF3 F028          	movff	prodl,___flmul@temp
 12084  001470  CFF4 F029          	movff	prodh,___flmul@temp+1
 12085  001474  5028               	movf	___flmul@temp^0,w,c
 12086  001476  261E               	addwf	___flmul@grs^0,f,c
 12087  001478  5029               	movf	(___flmul@temp+1)^0,w,c
 12088  00147A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12089  00147C  0E00               	movlw	0
 12090  00147E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12091  001480  0E00               	movlw	0
 12092  001482  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12093  001484  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12094  001488  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12095  00148C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12096  001490  6A1E               	clrf	___flmul@grs^0,c
 12097  001492  5015               	movf	___flmul@a^0,w,c
 12098  001494  0211               	mulwf	___flmul@b^0,c
 12099  001496  CFF3 F028          	movff	prodl,___flmul@temp
 12100  00149A  CFF4 F029          	movff	prodh,___flmul@temp+1
 12101  00149E  5028               	movf	___flmul@temp^0,w,c
 12102  0014A0  261E               	addwf	___flmul@grs^0,f,c
 12103  0014A2  5029               	movf	(___flmul@temp+1)^0,w,c
 12104  0014A4  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12105  0014A6  0E00               	movlw	0
 12106  0014A8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12107  0014AA  0E00               	movlw	0
 12108  0014AC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12109  0014AE  5017               	movf	(___flmul@a+2)^0,w,c
 12110  0014B0  0212               	mulwf	(___flmul@b+1)^0,c
 12111  0014B2  CFF3 F028          	movff	prodl,___flmul@temp
 12112  0014B6  CFF4 F029          	movff	prodh,___flmul@temp+1
 12113  0014BA  5028               	movf	___flmul@temp^0,w,c
 12114  0014BC  2624               	addwf	___flmul@prod^0,f,c
 12115  0014BE  5029               	movf	(___flmul@temp+1)^0,w,c
 12116  0014C0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12117  0014C2  0E00               	movlw	0
 12118  0014C4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12119  0014C6  0E00               	movlw	0
 12120  0014C8  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12121  0014CA  5016               	movf	(___flmul@a+1)^0,w,c
 12122  0014CC  0213               	mulwf	(___flmul@b+2)^0,c
 12123  0014CE  CFF3 F028          	movff	prodl,___flmul@temp
 12124  0014D2  CFF4 F029          	movff	prodh,___flmul@temp+1
 12125  0014D6  5028               	movf	___flmul@temp^0,w,c
 12126  0014D8  2624               	addwf	___flmul@prod^0,f,c
 12127  0014DA  5029               	movf	(___flmul@temp+1)^0,w,c
 12128  0014DC  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12129  0014DE  0E00               	movlw	0
 12130  0014E0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12131  0014E2  0E00               	movlw	0
 12132  0014E4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12133  0014E6  5017               	movf	(___flmul@a+2)^0,w,c
 12134  0014E8  0213               	mulwf	(___flmul@b+2)^0,c
 12135  0014EA  CFF3 F028          	movff	prodl,___flmul@temp
 12136  0014EE  CFF4 F029          	movff	prodh,___flmul@temp+1
 12137  0014F2  5028               	movf	___flmul@temp^0,w,c
 12138  0014F4  6E19               	movwf	??___flmul^0,c
 12139  0014F6  5029               	movf	(___flmul@temp+1)^0,w,c
 12140  0014F8  6E1A               	movwf	(??___flmul+1)^0,c
 12141  0014FA  6A1B               	clrf	(??___flmul+2)^0,c
 12142  0014FC  6A1C               	clrf	(??___flmul+3)^0,c
 12143  0014FE  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 12144  001502  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 12145  001506  C019  F01A         	movff	??___flmul,??___flmul+1
 12146  00150A  6A19               	clrf	??___flmul^0,c
 12147  00150C  5019               	movf	??___flmul^0,w,c
 12148  00150E  2624               	addwf	___flmul@prod^0,f,c
 12149  001510  501A               	movf	(??___flmul+1)^0,w,c
 12150  001512  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12151  001514  501B               	movf	(??___flmul+2)^0,w,c
 12152  001516  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12153  001518  501C               	movf	(??___flmul+3)^0,w,c
 12154  00151A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12155  00151C  C01E  F019         	movff	___flmul@grs,??___flmul
 12156  001520  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 12157  001524  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 12158  001528  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 12159  00152C  0E19               	movlw	25
 12160  00152E  EF9E  F00A         	goto	u4850
 12161  001532                     u4855:
 12162  001532  90D8               	bcf	status,0,c
 12163  001534  321C               	rrcf	(??___flmul+3)^0,f,c
 12164  001536  321B               	rrcf	(??___flmul+2)^0,f,c
 12165  001538  321A               	rrcf	(??___flmul+1)^0,f,c
 12166  00153A  3219               	rrcf	??___flmul^0,f,c
 12167  00153C                     u4850:
 12168  00153C  2EE8               	decfsz	wreg,f,c
 12169  00153E  EF99  F00A         	goto	u4855
 12170  001542  5019               	movf	??___flmul^0,w,c
 12171  001544  2624               	addwf	___flmul@prod^0,f,c
 12172  001546  501A               	movf	(??___flmul+1)^0,w,c
 12173  001548  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12174  00154A  501B               	movf	(??___flmul+2)^0,w,c
 12175  00154C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12176  00154E  501C               	movf	(??___flmul+3)^0,w,c
 12177  001550  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12178  001552  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12179  001556  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12180  00155A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12181  00155E  6A1E               	clrf	___flmul@grs^0,c
 12182  001560  5022               	movf	___flmul@aexp^0,w,c
 12183  001562  C023  F019         	movff	___flmul@bexp,??___flmul
 12184  001566  6A1A               	clrf	(??___flmul+1)^0,c
 12185  001568  2619               	addwf	??___flmul^0,f,c
 12186  00156A  0E00               	movlw	0
 12187  00156C  221A               	addwfc	(??___flmul+1)^0,f,c
 12188  00156E  0E82               	movlw	130
 12189  001570  2419               	addwf	??___flmul^0,w,c
 12190  001572  6E28               	movwf	___flmul@temp^0,c
 12191  001574  0EFF               	movlw	255
 12192  001576  201A               	addwfc	(??___flmul+1)^0,w,c
 12193  001578  6E29               	movwf	(___flmul@temp+1)^0,c
 12194  00157A  EFD4  F00A         	goto	l4932
 12195  00157E                     l4926:
 12196  00157E  90D8               	bcf	status,0,c
 12197  001580  3624               	rlcf	___flmul@prod^0,f,c
 12198  001582  3625               	rlcf	(___flmul@prod+1)^0,f,c
 12199  001584  3626               	rlcf	(___flmul@prod+2)^0,f,c
 12200  001586  3627               	rlcf	(___flmul@prod+3)^0,f,c
 12201  001588  AE21               	btfss	(___flmul@grs+3)^0,7,c
 12202  00158A  EFC9  F00A         	goto	u4861
 12203  00158E  EFCB  F00A         	goto	u4860
 12204  001592                     u4861:
 12205  001592  EFCC  F00A         	goto	l1327
 12206  001596                     u4860:
 12207  001596  8024               	bsf	___flmul@prod^0,0,c
 12208  001598                     l1327:
 12209  001598  90D8               	bcf	status,0,c
 12210  00159A  361E               	rlcf	___flmul@grs^0,f,c
 12211  00159C  361F               	rlcf	(___flmul@grs+1)^0,f,c
 12212  00159E  3620               	rlcf	(___flmul@grs+2)^0,f,c
 12213  0015A0  3621               	rlcf	(___flmul@grs+3)^0,f,c
 12214  0015A2  0628               	decf	___flmul@temp^0,f,c
 12215  0015A4  A0D8               	btfss	status,0,c
 12216  0015A6  0629               	decf	(___flmul@temp+1)^0,f,c
 12217  0015A8                     l4932:
 12218  0015A8  AE26               	btfss	(___flmul@prod+2)^0,7,c
 12219  0015AA  EFD9  F00A         	goto	u4871
 12220  0015AE  EFDB  F00A         	goto	u4870
 12221  0015B2                     u4871:
 12222  0015B2  EFBF  F00A         	goto	l4926
 12223  0015B6                     u4870:
 12224  0015B6  0E00               	movlw	0
 12225  0015B8  6E22               	movwf	___flmul@aexp^0,c
 12226  0015BA  AE21               	btfss	(___flmul@grs+3)^0,7,c
 12227  0015BC  EFE2  F00A         	goto	u4881
 12228  0015C0  EFE4  F00A         	goto	u4880
 12229  0015C4                     u4881:
 12230  0015C4  EF08  F00B         	goto	l1329
 12231  0015C8                     u4880:
 12232  0015C8  0EFF               	movlw	255
 12233  0015CA  141E               	andwf	___flmul@grs^0,w,c
 12234  0015CC  6E19               	movwf	??___flmul^0,c
 12235  0015CE  0EFF               	movlw	255
 12236  0015D0  141F               	andwf	(___flmul@grs+1)^0,w,c
 12237  0015D2  6E1A               	movwf	(??___flmul+1)^0,c
 12238  0015D4  0EFF               	movlw	255
 12239  0015D6  1420               	andwf	(___flmul@grs+2)^0,w,c
 12240  0015D8  6E1B               	movwf	(??___flmul+2)^0,c
 12241  0015DA  0E7F               	movlw	127
 12242  0015DC  1421               	andwf	(___flmul@grs+3)^0,w,c
 12243  0015DE  6E1C               	movwf	(??___flmul+3)^0,c
 12244  0015E0  5019               	movf	??___flmul^0,w,c
 12245  0015E2  101A               	iorwf	(??___flmul+1)^0,w,c
 12246  0015E4  101B               	iorwf	(??___flmul+2)^0,w,c
 12247  0015E6  101C               	iorwf	(??___flmul+3)^0,w,c
 12248  0015E8  B4D8               	btfsc	status,2,c
 12249  0015EA  EFF9  F00A         	goto	u4891
 12250  0015EE  EFFB  F00A         	goto	u4890
 12251  0015F2                     u4891:
 12252  0015F2  EFFF  F00A         	goto	l1330
 12253  0015F6                     u4890:
 12254  0015F6                     l4940:
 12255  0015F6  0E01               	movlw	1
 12256  0015F8  6E22               	movwf	___flmul@aexp^0,c
 12257  0015FA  EF08  F00B         	goto	l1329
 12258  0015FE                     l1330:
 12259  0015FE  A024               	btfss	___flmul@prod^0,0,c
 12260  001600  EF04  F00B         	goto	u4901
 12261  001604  EF06  F00B         	goto	u4900
 12262  001608                     u4901:
 12263  001608  EF08  F00B         	goto	l1329
 12264  00160C                     u4900:
 12265  00160C  EFFB  F00A         	goto	l4940
 12266  001610                     l1329:
 12267  001610  5022               	movf	___flmul@aexp^0,w,c
 12268  001612  B4D8               	btfsc	status,2,c
 12269  001614  EF0E  F00B         	goto	u4911
 12270  001618  EF10  F00B         	goto	u4910
 12271  00161C                     u4911:
 12272  00161C  EF34  F00B         	goto	l4952
 12273  001620                     u4910:
 12274  001620  0E01               	movlw	1
 12275  001622  2624               	addwf	___flmul@prod^0,f,c
 12276  001624  0E00               	movlw	0
 12277  001626  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12278  001628  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12279  00162A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12280  00162C  A027               	btfss	(___flmul@prod+3)^0,0,c
 12281  00162E  EF1B  F00B         	goto	u4921
 12282  001632  EF1D  F00B         	goto	u4920
 12283  001636                     u4921:
 12284  001636  EF34  F00B         	goto	l4952
 12285  00163A                     u4920:
 12286  00163A  C024  F019         	movff	___flmul@prod,??___flmul
 12287  00163E  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 12288  001642  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 12289  001646  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 12290  00164A  341C               	rlcf	(??___flmul+3)^0,w,c
 12291  00164C  321C               	rrcf	(??___flmul+3)^0,f,c
 12292  00164E  321B               	rrcf	(??___flmul+2)^0,f,c
 12293  001650  321A               	rrcf	(??___flmul+1)^0,f,c
 12294  001652  3219               	rrcf	??___flmul^0,f,c
 12295  001654  C019  F024         	movff	??___flmul,___flmul@prod
 12296  001658  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 12297  00165C  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 12298  001660  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 12299  001664  4A28               	infsnz	___flmul@temp^0,f,c
 12300  001666  2A29               	incf	(___flmul@temp+1)^0,f,c
 12301  001668                     l4952:
 12302  001668  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12303  00166A  EF3F  F00B         	goto	u4931
 12304  00166E  5029               	movf	(___flmul@temp+1)^0,w,c
 12305  001670  E108               	bnz	u4930
 12306  001672  2828               	incf	___flmul@temp^0,w,c
 12307  001674  A0D8               	btfss	status,0,c
 12308  001676  EF3F  F00B         	goto	u4931
 12309  00167A  EF41  F00B         	goto	u4930
 12310  00167E                     u4931:
 12311  00167E  EF4B  F00B         	goto	l4956
 12312  001682                     u4930:
 12313  001682  0E00               	movlw	0
 12314  001684  6E24               	movwf	___flmul@prod^0,c
 12315  001686  0E00               	movlw	0
 12316  001688  6E25               	movwf	(___flmul@prod+1)^0,c
 12317  00168A  0E80               	movlw	128
 12318  00168C  6E26               	movwf	(___flmul@prod+2)^0,c
 12319  00168E  0E7F               	movlw	127
 12320  001690  6E27               	movwf	(___flmul@prod+3)^0,c
 12321  001692  EF79  F00B         	goto	l4968
 12322  001696                     l4956:
 12323  001696  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12324  001698  EF58  F00B         	goto	u4940
 12325  00169C  5029               	movf	(___flmul@temp+1)^0,w,c
 12326  00169E  E106               	bnz	u4941
 12327  0016A0  0428               	decf	___flmul@temp^0,w,c
 12328  0016A2  B0D8               	btfsc	status,0,c
 12329  0016A4  EF56  F00B         	goto	u4941
 12330  0016A8  EF58  F00B         	goto	u4940
 12331  0016AC                     u4941:
 12332  0016AC  EF64  F00B         	goto	l1337
 12333  0016B0                     u4940:
 12334  0016B0  0E00               	movlw	0
 12335  0016B2  6E24               	movwf	___flmul@prod^0,c
 12336  0016B4  0E00               	movlw	0
 12337  0016B6  6E25               	movwf	(___flmul@prod+1)^0,c
 12338  0016B8  0E00               	movlw	0
 12339  0016BA  6E26               	movwf	(___flmul@prod+2)^0,c
 12340  0016BC  0E00               	movlw	0
 12341  0016BE  6E27               	movwf	(___flmul@prod+3)^0,c
 12342  0016C0  0E00               	movlw	0
 12343  0016C2  6E1D               	movwf	___flmul@sign^0,c
 12344  0016C4  EF79  F00B         	goto	l4968
 12345  0016C8                     l1337:
 12346  0016C8  C028  F023         	movff	___flmul@temp,___flmul@bexp
 12347  0016CC  0EFF               	movlw	255
 12348  0016CE  1624               	andwf	___flmul@prod^0,f,c
 12349  0016D0  0EFF               	movlw	255
 12350  0016D2  1625               	andwf	(___flmul@prod+1)^0,f,c
 12351  0016D4  0E7F               	movlw	127
 12352  0016D6  1626               	andwf	(___flmul@prod+2)^0,f,c
 12353  0016D8  0E00               	movlw	0
 12354  0016DA  1627               	andwf	(___flmul@prod+3)^0,f,c
 12355  0016DC  A023               	btfss	___flmul@bexp^0,0,c
 12356  0016DE  EF73  F00B         	goto	u4951
 12357  0016E2  EF75  F00B         	goto	u4950
 12358  0016E6                     u4951:
 12359  0016E6  EF76  F00B         	goto	l4966
 12360  0016EA                     u4950:
 12361  0016EA  8E26               	bsf	(___flmul@prod+2)^0,7,c
 12362  0016EC                     l4966:
 12363  0016EC  90D8               	bcf	status,0,c
 12364  0016EE  3023               	rrcf	___flmul@bexp^0,w,c
 12365  0016F0  6E27               	movwf	(___flmul@prod+3)^0,c
 12366  0016F2                     l4968:
 12367  0016F2  501D               	movf	___flmul@sign^0,w,c
 12368  0016F4  1227               	iorwf	(___flmul@prod+3)^0,f,c
 12369  0016F6  C024  F011         	movff	___flmul@prod,?___flmul
 12370  0016FA  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 12371  0016FE  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 12372  001702  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 12373  001706                     l1324:
 12374  001706  0012               	return		;funcret
 12375  001708                     __end_of___flmul:
 12376                           	opt callstack 0
 12377                           
 12378 ;; *************** function _SYSTEM_Initialize *****************
 12379 ;; Defined at:
 12380 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12381 ;; Parameters:    Size  Location     Type
 12382 ;;		None
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;		None
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, status,2, status,0, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12398 ;;Total ram usage:        0 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; Hardware stack levels required when called:    6
 12401 ;; This function calls:
 12402 ;;		_ADC_Initialize
 12403 ;;		_EXT_INT_Initialize
 12404 ;;		_INTERRUPT_Initialize
 12405 ;;		_OSCILLATOR_Initialize
 12406 ;;		_PIN_MANAGER_Initialize
 12407 ;;		_SPI_Initialize
 12408 ;;		_TMR1_Initialize
 12409 ;; This function is called by:
 12410 ;;		_main
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text46
 12415  003E72                     __ptext46:
 12416                           	opt callstack 0
 12417  003E72                     _SYSTEM_Initialize:
 12418                           	opt callstack 24
 12419  003E72                     
 12420                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 12421  003E72  ECC8  F01F         	call	_INTERRUPT_Initialize	;wreg free
 12422  003E76                     
 12423                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 12424  003E76  ECA4  F01F         	call	_SPI_Initialize	;wreg free
 12425  003E7A                     
 12426                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 12427  003E7A  ECA0  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
 12428  003E7E                     
 12429                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 12430  003E7E  ECAD  F01F         	call	_OSCILLATOR_Initialize	;wreg free
 12431  003E82                     
 12432                           ;mcc_generated_files/mcc.c: 57:     EXT_INT_Initialize();
 12433  003E82  EC90  F01F         	call	_EXT_INT_Initialize	;wreg free
 12434  003E86                     
 12435                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 12436  003E86  EC10  F01F         	call	_TMR1_Initialize	;wreg free
 12437  003E8A                     
 12438                           ;mcc_generated_files/mcc.c: 59:     ADC_Initialize();
 12439  003E8A  EC85  F01F         	call	_ADC_Initialize	;wreg free
 12440  003E8E  0012               	return		;funcret
 12441  003E90                     __end_of_SYSTEM_Initialize:
 12442                           	opt callstack 0
 12443                           
 12444 ;; *************** function _TMR1_Initialize *****************
 12445 ;; Defined at:
 12446 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 12447 ;; Parameters:    Size  Location     Type
 12448 ;;		None
 12449 ;; Auto vars:     Size  Location     Type
 12450 ;;		None
 12451 ;; Return value:  Size  Location     Type
 12452 ;;                  1    wreg      void 
 12453 ;; Registers used:
 12454 ;;		wreg, status,2, status,0
 12455 ;; Tracked objects:
 12456 ;;		On entry : 0/0
 12457 ;;		On exit  : 0/0
 12458 ;;		Unchanged: 0/0
 12459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12464 ;;Total ram usage:        2 bytes
 12465 ;; Hardware stack levels used:    1
 12466 ;; Hardware stack levels required when called:    4
 12467 ;; This function calls:
 12468 ;;		Nothing
 12469 ;; This function is called by:
 12470 ;;		_SYSTEM_Initialize
 12471 ;; This function uses a non-reentrant model
 12472 ;;
 12473                           
 12474                           	psect	text47
 12475  003E20                     __ptext47:
 12476                           	opt callstack 0
 12477  003E20                     _TMR1_Initialize:
 12478                           	opt callstack 25
 12479  003E20                     
 12480                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 12481  003E20  0E00               	movlw	0
 12482  003E22  6EAA               	movwf	170,c	;volatile
 12483                           
 12484                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
 12485  003E24  0E0B               	movlw	11
 12486  003E26  6ECF               	movwf	207,c	;volatile
 12487                           
 12488                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
 12489  003E28  0EDC               	movlw	220
 12490  003E2A  6ECE               	movwf	206,c	;volatile
 12491  003E2C                     
 12492                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 12493  003E2C  909E               	bcf	158,0,c	;volatile
 12494  003E2E                     
 12495                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12496  003E2E  50CE               	movf	206,w,c	;volatile
 12497  003E30  CFCF F003          	movff	4047,??_TMR1_Initialize	;volatile
 12498  003E34  6A04               	clrf	(??_TMR1_Initialize+1)^0,c
 12499  003E36  C003  F004         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 12500  003E3A  6A03               	clrf	??_TMR1_Initialize^0,c
 12501  003E3C  1003               	iorwf	??_TMR1_Initialize^0,w,c
 12502  003E3E  0100               	movlb	0	; () banked
 12503  003E40  6FF5               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 12504  003E42  5004               	movf	(??_TMR1_Initialize+1)^0,w,c
 12505  003E44  6FF6               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 12506  003E46                     
 12507                           ; BSR set to: 0
 12508                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
 12509  003E46  0E31               	movlw	49
 12510  003E48  6ECD               	movwf	205,c	;volatile
 12511  003E4A                     
 12512                           ; BSR set to: 0
 12513  003E4A  0012               	return		;funcret
 12514  003E4C                     __end_of_TMR1_Initialize:
 12515                           	opt callstack 0
 12516                           
 12517 ;; *************** function _SPI_Initialize *****************
 12518 ;; Defined at:
 12519 ;;		line 62 in file "mcc_generated_files/spi.c"
 12520 ;; Parameters:    Size  Location     Type
 12521 ;;		None
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;		None
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      void 
 12526 ;; Registers used:
 12527 ;;		wreg, status,2
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12537 ;;Total ram usage:        0 bytes
 12538 ;; Hardware stack levels used:    1
 12539 ;; Hardware stack levels required when called:    4
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_SYSTEM_Initialize
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           	psect	text48
 12548  003F48                     __ptext48:
 12549                           	opt callstack 0
 12550  003F48                     _SPI_Initialize:
 12551                           	opt callstack 25
 12552  003F48                     
 12553                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 12554  003F48  0E40               	movlw	64
 12555  003F4A  6EC7               	movwf	199,c	;volatile
 12556                           
 12557                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 12558  003F4C  0E00               	movlw	0
 12559  003F4E  6EC6               	movwf	198,c	;volatile
 12560                           
 12561                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 12562  003F50  0E01               	movlw	1
 12563  003F52  6EC8               	movwf	200,c	;volatile
 12564  003F54                     
 12565                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 12566  003F54  9694               	bcf	148,3,c	;volatile
 12567  003F56                     
 12568                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 12569  003F56  9AC6               	bcf	198,5,c	;volatile
 12570  003F58  0012               	return		;funcret
 12571  003F5A                     __end_of_SPI_Initialize:
 12572                           	opt callstack 0
 12573                           
 12574 ;; *************** function _PIN_MANAGER_Initialize *****************
 12575 ;; Defined at:
 12576 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;		None
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;		None
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      void 
 12583 ;; Registers used:
 12584 ;;		wreg, status,2, status,0, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12594 ;;Total ram usage:        0 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:    5
 12597 ;; This function calls:
 12598 ;;		_IOCB4_SetInterruptHandler
 12599 ;; This function is called by:
 12600 ;;		_SYSTEM_Initialize
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           	psect	text49
 12605  003B40                     __ptext49:
 12606                           	opt callstack 0
 12607  003B40                     _PIN_MANAGER_Initialize:
 12608                           	opt callstack 24
 12609  003B40                     
 12610                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 12611  003B40  0E00               	movlw	0
 12612  003B42  6E8D               	movwf	141,c	;volatile
 12613                           
 12614                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 12615  003B44  0E00               	movlw	0
 12616  003B46  6E8C               	movwf	140,c	;volatile
 12617                           
 12618                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 12619  003B48  0E00               	movlw	0
 12620  003B4A  6E89               	movwf	137,c	;volatile
 12621                           
 12622                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 12623  003B4C  0E00               	movlw	0
 12624  003B4E  6E8A               	movwf	138,c	;volatile
 12625                           
 12626                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 12627  003B50  0E00               	movlw	0
 12628  003B52  6E8B               	movwf	139,c	;volatile
 12629                           
 12630                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 12631  003B54  0E04               	movlw	4
 12632  003B56  6E96               	movwf	150,c	;volatile
 12633                           
 12634                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
 12635  003B58  0E0F               	movlw	15
 12636  003B5A  6E92               	movwf	146,c	;volatile
 12637  003B5C                     
 12638                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 12639  003B5C  6893               	setf	147,c	;volatile
 12640                           
 12641                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 12642  003B5E  0ED7               	movlw	215
 12643  003B60  6E94               	movwf	148,c	;volatile
 12644  003B62                     
 12645                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 12646  003B62  6895               	setf	149,c	;volatile
 12647                           
 12648                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
 12649  003B64  0E87               	movlw	135
 12650  003B66  010F               	movlb	15	; () banked
 12651  003B68  6F5D               	movwf	93,b	;volatile
 12652                           
 12653                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 12654  003B6A  0E79               	movlw	121
 12655  003B6C  6F5C               	movwf	92,b	;volatile
 12656                           
 12657                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 12658  003B6E  0E00               	movlw	0
 12659  003B70  6F5B               	movwf	91,b	;volatile
 12660  003B72                     
 12661                           ; BSR set to: 15
 12662                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 12663  003B72  8EF1               	bsf	241,7,c	;volatile
 12664  003B74                     
 12665                           ; BSR set to: 15
 12666                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 12667  003B74  895A               	bsf	90,4,b	;volatile
 12668  003B76                     
 12669                           ; BSR set to: 15
 12670                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 12671  003B76  0E96               	movlw	low _IOCB4_DefaultInterruptHandler
 12672  003B78  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 12673  003B7A  0E3F               	movlw	high _IOCB4_DefaultInterruptHandler
 12674  003B7C  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 12675  003B7E  ECB6  F01F         	call	_IOCB4_SetInterruptHandler	;wreg free
 12676  003B82                     
 12677                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 12678  003B82  86F2               	bsf	242,3,c	;volatile
 12679  003B84  0012               	return		;funcret
 12680  003B86                     __end_of_PIN_MANAGER_Initialize:
 12681                           	opt callstack 0
 12682                           
 12683 ;; *************** function _IOCB4_SetInterruptHandler *****************
 12684 ;; Defined at:
 12685 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 12686 ;; Parameters:    Size  Location     Type
 12687 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12688 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
 12689 ;; Auto vars:     Size  Location     Type
 12690 ;;		None
 12691 ;; Return value:  Size  Location     Type
 12692 ;;                  1    wreg      void 
 12693 ;; Registers used:
 12694 ;;		wreg, status,2, status,0
 12695 ;; Tracked objects:
 12696 ;;		On entry : 0/0
 12697 ;;		On exit  : 0/0
 12698 ;;		Unchanged: 0/0
 12699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12704 ;;Total ram usage:        2 bytes
 12705 ;; Hardware stack levels used:    1
 12706 ;; Hardware stack levels required when called:    4
 12707 ;; This function calls:
 12708 ;;		Nothing
 12709 ;; This function is called by:
 12710 ;;		_PIN_MANAGER_Initialize
 12711 ;;		_main
 12712 ;; This function uses a non-reentrant model
 12713 ;;
 12714                           
 12715                           	psect	text50
 12716  003F6C                     __ptext50:
 12717                           	opt callstack 0
 12718  003F6C                     _IOCB4_SetInterruptHandler:
 12719                           	opt callstack 24
 12720  003F6C                     
 12721                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 12722  003F6C  C003  F0F7         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 12723  003F70  C004  F0F8         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 12724  003F74  0012               	return		;funcret
 12725  003F76                     __end_of_IOCB4_SetInterruptHandler:
 12726                           	opt callstack 0
 12727                           
 12728 ;; *************** function _OSCILLATOR_Initialize *****************
 12729 ;; Defined at:
 12730 ;;		line 62 in file "mcc_generated_files/mcc.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;		None
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      void 
 12737 ;; Registers used:
 12738 ;;		wreg, status,2
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12748 ;;Total ram usage:        0 bytes
 12749 ;; Hardware stack levels used:    1
 12750 ;; Hardware stack levels required when called:    4
 12751 ;; This function calls:
 12752 ;;		Nothing
 12753 ;; This function is called by:
 12754 ;;		_SYSTEM_Initialize
 12755 ;; This function uses a non-reentrant model
 12756 ;;
 12757                           
 12758                           	psect	text51
 12759  003F5A                     __ptext51:
 12760                           	opt callstack 0
 12761  003F5A                     _OSCILLATOR_Initialize:
 12762                           	opt callstack 25
 12763  003F5A                     
 12764                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x62;
 12765  003F5A  0E62               	movlw	98
 12766  003F5C  6ED3               	movwf	211,c	;volatile
 12767                           
 12768                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x00;
 12769  003F5E  0E00               	movlw	0
 12770  003F60  6ED2               	movwf	210,c	;volatile
 12771                           
 12772                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
 12773  003F62  0E00               	movlw	0
 12774  003F64  6E9B               	movwf	155,c	;volatile
 12775                           
 12776                           ;mcc_generated_files/mcc.c: 71:     REFOCON = 0x00;
 12777  003F66  0E00               	movlw	0
 12778  003F68  6E9A               	movwf	154,c	;volatile
 12779  003F6A  0012               	return		;funcret
 12780  003F6C                     __end_of_OSCILLATOR_Initialize:
 12781                           	opt callstack 0
 12782                           
 12783 ;; *************** function _INTERRUPT_Initialize *****************
 12784 ;; Defined at:
 12785 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;		None
 12788 ;; Auto vars:     Size  Location     Type
 12789 ;;		None
 12790 ;; Return value:  Size  Location     Type
 12791 ;;                  1    wreg      void 
 12792 ;; Registers used:
 12793 ;;		None
 12794 ;; Tracked objects:
 12795 ;;		On entry : 0/0
 12796 ;;		On exit  : 0/0
 12797 ;;		Unchanged: 0/0
 12798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12803 ;;Total ram usage:        0 bytes
 12804 ;; Hardware stack levels used:    1
 12805 ;; Hardware stack levels required when called:    4
 12806 ;; This function calls:
 12807 ;;		Nothing
 12808 ;; This function is called by:
 12809 ;;		_SYSTEM_Initialize
 12810 ;; This function uses a non-reentrant model
 12811 ;;
 12812                           
 12813                           	psect	text52
 12814  003F90                     __ptext52:
 12815                           	opt callstack 0
 12816  003F90                     _INTERRUPT_Initialize:
 12817                           	opt callstack 25
 12818  003F90                     
 12819                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 12820  003F90  9ED0               	bcf	208,7,c	;volatile
 12821  003F92  0012               	return		;funcret
 12822  003F94                     __end_of_INTERRUPT_Initialize:
 12823                           	opt callstack 0
 12824                           
 12825 ;; *************** function _EXT_INT_Initialize *****************
 12826 ;; Defined at:
 12827 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;		None
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;		None
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      void 
 12834 ;; Registers used:
 12835 ;;		wreg, status,2, status,0, cstack
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12845 ;;Total ram usage:        0 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; Hardware stack levels required when called:    5
 12848 ;; This function calls:
 12849 ;;		_INT0_SetInterruptHandler
 12850 ;; This function is called by:
 12851 ;;		_SYSTEM_Initialize
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text53
 12856  003F20                     __ptext53:
 12857                           	opt callstack 0
 12858  003F20                     _EXT_INT_Initialize:
 12859                           	opt callstack 24
 12860  003F20                     
 12861                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 12862  003F20  92F2               	bcf	242,1,c	;volatile
 12863                           
 12864                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 1);
 12865  003F22  8CF1               	bsf	241,6,c	;volatile
 12866  003F24                     
 12867                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 12868  003F24  0E9A               	movlw	low _INT0_DefaultInterruptHandler
 12869  003F26  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
 12870  003F28  0E3F               	movlw	high _INT0_DefaultInterruptHandler
 12871  003F2A  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
 12872  003F2C  ECBB  F01F         	call	_INT0_SetInterruptHandler	;wreg free
 12873  003F30                     
 12874                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 12875  003F30  88F2               	bsf	242,4,c	;volatile
 12876  003F32  0012               	return		;funcret
 12877  003F34                     __end_of_EXT_INT_Initialize:
 12878                           	opt callstack 0
 12879                           
 12880 ;; *************** function _INT0_SetInterruptHandler *****************
 12881 ;; Defined at:
 12882 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12885 ;;		 -> INT0_DefaultInterruptHandler(1), INT0_InterruptCall(1), 
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		wreg, status,2, status,0
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12901 ;;Total ram usage:        2 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    4
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_main
 12908 ;;		_EXT_INT_Initialize
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text54
 12913  003F76                     __ptext54:
 12914                           	opt callstack 0
 12915  003F76                     _INT0_SetInterruptHandler:
 12916                           	opt callstack 24
 12917  003F76                     
 12918                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 12919  003F76  C003  F0F3         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 12920  003F7A  C004  F0F4         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 12921  003F7E  0012               	return		;funcret
 12922  003F80                     __end_of_INT0_SetInterruptHandler:
 12923                           	opt callstack 0
 12924                           
 12925 ;; *************** function _ADC_Initialize *****************
 12926 ;; Defined at:
 12927 ;;		line 62 in file "mcc_generated_files/adc.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;		None
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  1    wreg      void 
 12934 ;; Registers used:
 12935 ;;		wreg, status,2
 12936 ;; Tracked objects:
 12937 ;;		On entry : 0/0
 12938 ;;		On exit  : 0/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12945 ;;Total ram usage:        0 bytes
 12946 ;; Hardware stack levels used:    1
 12947 ;; Hardware stack levels required when called:    4
 12948 ;; This function calls:
 12949 ;;		Nothing
 12950 ;; This function is called by:
 12951 ;;		_SYSTEM_Initialize
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text55
 12956  003F0A                     __ptext55:
 12957                           	opt callstack 0
 12958  003F0A                     _ADC_Initialize:
 12959                           	opt callstack 25
 12960  003F0A                     
 12961                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 12962  003F0A  0E01               	movlw	1
 12963  003F0C  6EC2               	movwf	194,c	;volatile
 12964                           
 12965                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 12966  003F0E  0E80               	movlw	128
 12967  003F10  6EC1               	movwf	193,c	;volatile
 12968                           
 12969                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
 12970  003F12  0EAD               	movlw	173
 12971  003F14  6EC0               	movwf	192,c	;volatile
 12972                           
 12973                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 12974  003F16  0E00               	movlw	0
 12975  003F18  6EC4               	movwf	196,c	;volatile
 12976                           
 12977                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 12978  003F1A  0E00               	movlw	0
 12979  003F1C  6EC3               	movwf	195,c	;volatile
 12980  003F1E  0012               	return		;funcret
 12981  003F20                     __end_of_ADC_Initialize:
 12982                           	opt callstack 0
 12983                           
 12984 ;; *************** function _SPI_Open *****************
 12985 ;; Defined at:
 12986 ;;		line 72 in file "mcc_generated_files/spi.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;  spiUniqueCon    1    wreg     enum E353
 12989 ;; Auto vars:     Size  Location     Type
 12990 ;;  spiUniqueCon    1    3[COMRAM] enum E353
 12991 ;; Return value:  Size  Location     Type
 12992 ;;                  1    wreg      _Bool 
 12993 ;; Registers used:
 12994 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13004 ;;Total ram usage:        2 bytes
 13005 ;; Hardware stack levels used:    1
 13006 ;; Hardware stack levels required when called:    4
 13007 ;; This function calls:
 13008 ;;		Nothing
 13009 ;; This function is called by:
 13010 ;;		_main
 13011 ;; This function uses a non-reentrant model
 13012 ;;
 13013                           
 13014                           	psect	text56
 13015  0036B8                     __ptext56:
 13016                           	opt callstack 0
 13017  0036B8                     _SPI_Open:
 13018                           	opt callstack 26
 13019                           
 13020                           ;incstack = 0
 13021                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 13022  0036B8  6E04               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 13023  0036BA                     
 13024                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 13025  0036BA  BAC6               	btfsc	198,5,c	;volatile
 13026  0036BC  EF62  F01B         	goto	u4581
 13027  0036C0  EF64  F01B         	goto	u4580
 13028  0036C4                     u4581:
 13029  0036C4  EFB3  F01B         	goto	l130
 13030  0036C8                     u4580:
 13031  0036C8                     
 13032                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 13033  0036C8  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 13034  0036CA  0D04               	mullw	4
 13035  0036CC  0E01               	movlw	1
 13036  0036CE  26F3               	addwf	243,f,c
 13037  0036D0  0E00               	movlw	0
 13038  0036D2  22F4               	addwfc	244,f,c
 13039  0036D4  0EAB               	movlw	low _spi_configuration
 13040  0036D6  24F3               	addwf	243,w,c
 13041  0036D8  6EF6               	movwf	tblptrl,c
 13042  0036DA  0EFF               	movlw	high _spi_configuration
 13043  0036DC  20F4               	addwfc	244,w,c
 13044  0036DE  6EF7               	movwf	tblptrh,c
 13045  0036E0                     	if	1	;There are 3 active tblptr bytes
 13046  0036E0  6AF8               	clrf	tblptru,c
 13047  0036E2  0E00               	movlw	low (__mediumconst shr (0+16))
 13048  0036E4  22F8               	addwfc	tblptru,f,c
 13049  0036E6                     	endif
 13050  0036E6  0008               	tblrd		*
 13051  0036E8  CFF5 FFC7          	movff	tablat,4039	;volatile
 13052                           
 13053                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 13054  0036EC  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 13055  0036EE  0D04               	mullw	4
 13056  0036F0  0EAB               	movlw	low _spi_configuration
 13057  0036F2  24F3               	addwf	243,w,c
 13058  0036F4  6EF6               	movwf	tblptrl,c
 13059  0036F6  0EFF               	movlw	high _spi_configuration
 13060  0036F8  20F4               	addwfc	244,w,c
 13061  0036FA  6EF7               	movwf	tblptrh,c
 13062  0036FC                     	if	1	;There are 3 active tblptr bytes
 13063  0036FC  6AF8               	clrf	tblptru,c
 13064  0036FE  0E00               	movlw	low (__mediumconst shr (0+16))
 13065  003700  22F8               	addwfc	tblptru,f,c
 13066  003702                     	endif
 13067  003702  0008               	tblrd		*
 13068  003704  CFF5 FFC6          	movff	tablat,4038	;volatile
 13069  003708                     
 13070                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 13071  003708  0E00               	movlw	0
 13072  00370A  6EC5               	movwf	197,c	;volatile
 13073  00370C                     
 13074                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 13075  00370C  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 13076  00370E  0D04               	mullw	4
 13077  003710  0E02               	movlw	2
 13078  003712  26F3               	addwf	243,f,c
 13079  003714  0E00               	movlw	0
 13080  003716  22F4               	addwfc	244,f,c
 13081  003718  0EAB               	movlw	low _spi_configuration
 13082  00371A  24F3               	addwf	243,w,c
 13083  00371C  6EF6               	movwf	tblptrl,c
 13084  00371E  0EFF               	movlw	high _spi_configuration
 13085  003720  20F4               	addwfc	244,w,c
 13086  003722  6EF7               	movwf	tblptrh,c
 13087  003724                     	if	1	;There are 3 active tblptr bytes
 13088  003724  6AF8               	clrf	tblptru,c
 13089  003726  0E00               	movlw	low (__mediumconst shr (0+16))
 13090  003728  22F8               	addwfc	tblptru,f,c
 13091  00372A                     	endif
 13092  00372A  0008               	tblrd		*
 13093  00372C  CFF5 FFC8          	movff	tablat,4040	;volatile
 13094  003730                     
 13095                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 13096  003730  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 13097  003732  0D04               	mullw	4
 13098  003734  0E03               	movlw	3
 13099  003736  26F3               	addwf	243,f,c
 13100  003738  0E00               	movlw	0
 13101  00373A  22F4               	addwfc	244,f,c
 13102  00373C  0EAB               	movlw	low _spi_configuration
 13103  00373E  24F3               	addwf	243,w,c
 13104  003740  6EF6               	movwf	tblptrl,c
 13105  003742  0EFF               	movlw	high _spi_configuration
 13106  003744  20F4               	addwfc	244,w,c
 13107  003746  6EF7               	movwf	tblptrh,c
 13108  003748                     	if	1	;There are 3 active tblptr bytes
 13109  003748  6AF8               	clrf	tblptru,c
 13110  00374A  0E00               	movlw	low (__mediumconst shr (0+16))
 13111  00374C  22F8               	addwfc	tblptru,f,c
 13112  00374E                     	endif
 13113  00374E  0008               	tblrd		*
 13114  003750  CFF5 F003          	movff	tablat,??_SPI_Open
 13115  003754  4603               	rlncf	??_SPI_Open^0,f,c
 13116  003756  4603               	rlncf	??_SPI_Open^0,f,c
 13117  003758  4603               	rlncf	??_SPI_Open^0,f,c
 13118  00375A  5094               	movf	148,w,c	;volatile
 13119  00375C  1803               	xorwf	??_SPI_Open^0,w,c
 13120  00375E  0BF7               	andlw	-9
 13121  003760  1803               	xorwf	??_SPI_Open^0,w,c
 13122  003762  6E94               	movwf	148,c	;volatile
 13123  003764                     
 13124                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 13125  003764  8AC6               	bsf	198,5,c	;volatile
 13126  003766                     l130:
 13127  003766  0012               	return		;funcret
 13128  003768                     __end_of_SPI_Open:
 13129                           	opt callstack 0
 13130                           
 13131 ;; *************** function _ADC_GetConversionResult *****************
 13132 ;; Defined at:
 13133 ;;		line 102 in file "mcc_generated_files/adc.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;		None
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;		None
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  2    2[COMRAM] unsigned short 
 13140 ;; Registers used:
 13141 ;;		wreg, status,2, status,0
 13142 ;; Tracked objects:
 13143 ;;		On entry : 0/0
 13144 ;;		On exit  : 0/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13150 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13151 ;;Total ram usage:        4 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; Hardware stack levels required when called:    4
 13154 ;; This function calls:
 13155 ;;		Nothing
 13156 ;; This function is called by:
 13157 ;;		_main
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161                           	psect	text57
 13162  003F34                     __ptext57:
 13163                           	opt callstack 0
 13164  003F34                     _ADC_GetConversionResult:
 13165                           	opt callstack 26
 13166  003F34                     
 13167                           ;mcc_generated_files/adc.c: 105:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13168  003F34  50C4               	movf	196,w,c	;volatile
 13169  003F36  6E06               	movwf	(??_ADC_GetConversionResult+1)^0,c
 13170  003F38  6A05               	clrf	??_ADC_GetConversionResult^0,c
 13171  003F3A  50C3               	movf	195,w,c	;volatile
 13172  003F3C  2405               	addwf	??_ADC_GetConversionResult^0,w,c
 13173  003F3E  6E03               	movwf	?_ADC_GetConversionResult^0,c
 13174  003F40  0E00               	movlw	0
 13175  003F42  2006               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
 13176  003F44  6E04               	movwf	(?_ADC_GetConversionResult+1)^0,c
 13177  003F46  0012               	return		;funcret
 13178  003F48                     __end_of_ADC_GetConversionResult:
 13179                           	opt callstack 0
 13180                           
 13181 ;; *************** function _INTERRUPT_InterruptManager *****************
 13182 ;; Defined at:
 13183 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13184 ;; Parameters:    Size  Location     Type
 13185 ;;		None
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;		None
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      void 
 13190 ;; Registers used:
 13191 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13201 ;;Total ram usage:        2 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:    3
 13204 ;; This function calls:
 13205 ;;		_INT0_ISR
 13206 ;;		_PIN_MANAGER_IOC
 13207 ;; This function is called by:
 13208 ;;		Interrupt level 2
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	intcode
 13213  000008                     __pintcode:
 13214                           	opt callstack 0
 13215  000008                     _INTERRUPT_InterruptManager:
 13216                           	opt callstack 18
 13217                           
 13218                           ;incstack = 0
 13219  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13220  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13221  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13222  000012                     
 13223                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 13224  000012  A8F2               	btfss	242,4,c	;volatile
 13225  000014  EF0E  F000         	goto	i2u513_41
 13226  000018  EF10  F000         	goto	i2u513_40
 13227  00001C                     i2u513_41:
 13228  00001C  EF1B  F000         	goto	i2l44
 13229  000020                     i2u513_40:
 13230  000020  A2F2               	btfss	242,1,c	;volatile
 13231  000022  EF15  F000         	goto	i2u514_41
 13232  000026  EF17  F000         	goto	i2u514_40
 13233  00002A                     i2u514_41:
 13234  00002A  EF1B  F000         	goto	i2l44
 13235  00002E                     i2u514_40:
 13236  00002E                     
 13237                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 13238  00002E  ECC0  F01F         	call	_INT0_ISR	;wreg free
 13239                           
 13240                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 13241  000032  EF2B  F000         	goto	i2l48
 13242  000036                     i2l44:
 13243  000036  A6F2               	btfss	242,3,c	;volatile
 13244  000038  EF20  F000         	goto	i2u515_41
 13245  00003C  EF22  F000         	goto	i2u515_40
 13246  000040                     i2u515_41:
 13247  000040  EF2B  F000         	goto	i2l48
 13248  000044                     i2u515_40:
 13249  000044  A0F2               	btfss	242,0,c	;volatile
 13250  000046  EF27  F000         	goto	i2u516_41
 13251  00004A  EF29  F000         	goto	i2u516_40
 13252  00004E                     i2u516_41:
 13253  00004E  EF2B  F000         	goto	i2l48
 13254  000052                     i2u516_40:
 13255  000052                     
 13256                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 13257  000052  EC6E  F01F         	call	_PIN_MANAGER_IOC	;wreg free
 13258  000056                     i2l48:
 13259  000056  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13260  00005A  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13261  00005E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13262  000060  0011               	retfie		f
 13263  000062                     __end_of_INTERRUPT_InterruptManager:
 13264                           	opt callstack 0
 13265                           
 13266 ;; *************** function _PIN_MANAGER_IOC *****************
 13267 ;; Defined at:
 13268 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;		None
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;		None
 13273 ;; Return value:  Size  Location     Type
 13274 ;;                  1    wreg      void 
 13275 ;; Registers used:
 13276 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13277 ;; Tracked objects:
 13278 ;;		On entry : 0/0
 13279 ;;		On exit  : 0/0
 13280 ;;		Unchanged: 0/0
 13281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13286 ;;Total ram usage:        0 bytes
 13287 ;; Hardware stack levels used:    1
 13288 ;; Hardware stack levels required when called:    2
 13289 ;; This function calls:
 13290 ;;		_IOCB4_ISR
 13291 ;; This function is called by:
 13292 ;;		_INTERRUPT_InterruptManager
 13293 ;; This function uses a non-reentrant model
 13294 ;;
 13295                           
 13296                           	psect	text59
 13297  003EDC                     __ptext59:
 13298                           	opt callstack 0
 13299  003EDC                     _PIN_MANAGER_IOC:
 13300                           	opt callstack 18
 13301  003EDC                     
 13302                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 13303  003EDC  010F               	movlb	15	; () banked
 13304  003EDE  A95A               	btfss	90,4,b	;volatile
 13305  003EE0  EF74  F01F         	goto	i2u457_41
 13306  003EE4  EF76  F01F         	goto	i2u457_40
 13307  003EE8                     i2u457_41:
 13308  003EE8  EF78  F01F         	goto	i2l4536
 13309  003EEC                     i2u457_40:
 13310  003EEC                     
 13311                           ; BSR set to: 15
 13312                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 13313  003EEC  ECE2  F01E         	call	_IOCB4_ISR	;wreg free
 13314  003EF0                     i2l4536:
 13315                           
 13316                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 13317  003EF0  90F2               	bcf	242,0,c	;volatile
 13318  003EF2  0012               	return		;funcret
 13319  003EF4                     __end_of_PIN_MANAGER_IOC:
 13320                           	opt callstack 0
 13321                           
 13322 ;; *************** function _IOCB4_ISR *****************
 13323 ;; Defined at:
 13324 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 13325 ;; Parameters:    Size  Location     Type
 13326 ;;		None
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  1    wreg      void 
 13331 ;; Registers used:
 13332 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13342 ;;Total ram usage:        0 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:    1
 13345 ;; This function calls:
 13346 ;;		Absolute function
 13347 ;;		_IOCB4_DefaultInterruptHandler
 13348 ;;		_IOCB4_InterruptCall
 13349 ;; This function is called by:
 13350 ;;		_PIN_MANAGER_IOC
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           	psect	text60
 13355  003DC4                     __ptext60:
 13356                           	opt callstack 0
 13357  003DC4                     _IOCB4_ISR:
 13358                           	opt callstack 18
 13359  003DC4                     
 13360                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 13361  003DC4  0100               	movlb	0	; () banked
 13362  003DC6  51F7               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 13363  003DC8  11F8               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 13364  003DCA  B4D8               	btfsc	status,2,c
 13365  003DCC  EFEA  F01E         	goto	i2u438_41
 13366  003DD0  EFEC  F01E         	goto	i2u438_40
 13367  003DD4                     i2u438_41:
 13368  003DD4  EFF8  F01E         	goto	i2l99
 13369  003DD8                     i2u438_40:
 13370  003DD8                     
 13371                           ; BSR set to: 0
 13372                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 13373  003DD8  D802               	call	i2u439_48
 13374  003DDA  EFF8  F01E         	goto	i2u439_49
 13375  003DDE                     i2u439_48:
 13376  003DDE  0005               	push	
 13377  003DE0  6EFA               	movwf	pclath,c
 13378  003DE2  51F7               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 13379  003DE4  6EFD               	movwf	tosl,c
 13380  003DE6  51F8               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 13381  003DE8  6EFE               	movwf	tosh,c
 13382  003DEA  6AFF               	clrf	tosu,c
 13383  003DEC  50FA               	movf	pclath,w,c
 13384  003DEE  0012               	return		;indir
 13385  003DF0                     i2u439_49:
 13386  003DF0                     i2l99:
 13387  003DF0  0012               	return		;funcret
 13388  003DF2                     __end_of_IOCB4_ISR:
 13389                           	opt callstack 0
 13390                           
 13391 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 13392 ;; Defined at:
 13393 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		None
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13411 ;;Total ram usage:        0 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; This function calls:
 13414 ;;		Nothing
 13415 ;; This function is called by:
 13416 ;;		_PIN_MANAGER_Initialize
 13417 ;;		_IOCB4_ISR
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	text61
 13422  003F96                     __ptext61:
 13423                           	opt callstack 0
 13424  003F96                     _IOCB4_DefaultInterruptHandler:
 13425                           	opt callstack 18
 13426  003F96  0012               	return		;funcret
 13427  003F98                     __end_of_IOCB4_DefaultInterruptHandler:
 13428                           	opt callstack 0
 13429                           
 13430 ;; *************** function _IOCB4_InterruptCall *****************
 13431 ;; Defined at:
 13432 ;;		line 16 in file "main.c"
 13433 ;; Parameters:    Size  Location     Type
 13434 ;;		None
 13435 ;; Auto vars:     Size  Location     Type
 13436 ;;		None
 13437 ;; Return value:  Size  Location     Type
 13438 ;;                  1    wreg      void 
 13439 ;; Registers used:
 13440 ;;		None
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13450 ;;Total ram usage:        0 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; This function calls:
 13453 ;;		Nothing
 13454 ;; This function is called by:
 13455 ;;		_main
 13456 ;;		_IOCB4_ISR
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text62
 13461  003F98                     __ptext62:
 13462                           	opt callstack 0
 13463  003F98                     _IOCB4_InterruptCall:
 13464                           	opt callstack 18
 13465  003F98  0012               	return		;funcret
 13466  003F9A                     __end_of_IOCB4_InterruptCall:
 13467                           	opt callstack 0
 13468                           
 13469 ;; *************** function _INT0_ISR *****************
 13470 ;; Defined at:
 13471 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;		None
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;		None
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  1    wreg      void 
 13478 ;; Registers used:
 13479 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13489 ;;Total ram usage:        0 bytes
 13490 ;; Hardware stack levels used:    1
 13491 ;; Hardware stack levels required when called:    2
 13492 ;; This function calls:
 13493 ;;		_INT0_CallBack
 13494 ;; This function is called by:
 13495 ;;		_INTERRUPT_InterruptManager
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text63
 13500  003F80                     __ptext63:
 13501                           	opt callstack 0
 13502  003F80                     _INT0_ISR:
 13503                           	opt callstack 18
 13504  003F80                     
 13505                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 13506  003F80  92F2               	bcf	242,1,c	;volatile
 13507  003F82                     
 13508                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 13509  003F82  ECF9  F01E         	call	_INT0_CallBack	;wreg free
 13510  003F86  0012               	return		;funcret
 13511  003F88                     __end_of_INT0_ISR:
 13512                           	opt callstack 0
 13513                           
 13514 ;; *************** function _INT0_CallBack *****************
 13515 ;; Defined at:
 13516 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;		None
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13534 ;;Total ram usage:        0 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; Hardware stack levels required when called:    1
 13537 ;; This function calls:
 13538 ;;		Absolute function
 13539 ;;		_INT0_DefaultInterruptHandler
 13540 ;;		_INT0_InterruptCall
 13541 ;; This function is called by:
 13542 ;;		_INT0_ISR
 13543 ;; This function uses a non-reentrant model
 13544 ;;
 13545                           
 13546                           	psect	text64
 13547  003DF2                     __ptext64:
 13548                           	opt callstack 0
 13549  003DF2                     _INT0_CallBack:
 13550                           	opt callstack 18
 13551  003DF2                     
 13552                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 13553  003DF2  0100               	movlb	0	; () banked
 13554  003DF4  51F3               	movf	_INT0_InterruptHandler& (0+255),w,b
 13555  003DF6  11F4               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 13556  003DF8  B4D8               	btfsc	status,2,c
 13557  003DFA  EF01  F01F         	goto	i2u450_41
 13558  003DFE  EF03  F01F         	goto	i2u450_40
 13559  003E02                     i2u450_41:
 13560  003E02  EF0F  F01F         	goto	i2l451
 13561  003E06                     i2u450_40:
 13562  003E06                     
 13563                           ; BSR set to: 0
 13564                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 13565  003E06  D802               	call	i2u451_48
 13566  003E08  EF0F  F01F         	goto	i2u451_49
 13567  003E0C                     i2u451_48:
 13568  003E0C  0005               	push	
 13569  003E0E  6EFA               	movwf	pclath,c
 13570  003E10  51F3               	movf	_INT0_InterruptHandler& (0+255),w,b
 13571  003E12  6EFD               	movwf	tosl,c
 13572  003E14  51F4               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 13573  003E16  6EFE               	movwf	tosh,c
 13574  003E18  6AFF               	clrf	tosu,c
 13575  003E1A  50FA               	movf	pclath,w,c
 13576  003E1C  0012               	return		;indir
 13577  003E1E                     i2u451_49:
 13578  003E1E                     i2l451:
 13579  003E1E  0012               	return		;funcret
 13580  003E20                     __end_of_INT0_CallBack:
 13581                           	opt callstack 0
 13582                           
 13583 ;; *************** function _INT0_DefaultInterruptHandler *****************
 13584 ;; Defined at:
 13585 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      void 
 13592 ;; Registers used:
 13593 ;;		None
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13603 ;;Total ram usage:        0 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; This function calls:
 13606 ;;		Nothing
 13607 ;; This function is called by:
 13608 ;;		_EXT_INT_Initialize
 13609 ;;		_INT0_CallBack
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text65
 13614  003F9A                     __ptext65:
 13615                           	opt callstack 0
 13616  003F9A                     _INT0_DefaultInterruptHandler:
 13617                           	opt callstack 18
 13618  003F9A  0012               	return		;funcret
 13619  003F9C                     __end_of_INT0_DefaultInterruptHandler:
 13620                           	opt callstack 0
 13621                           
 13622 ;; *************** function _INT0_InterruptCall *****************
 13623 ;; Defined at:
 13624 ;;		line 19 in file "main.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;		None
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;		None
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		wreg, status,2
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13642 ;;Total ram usage:        0 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_main
 13648 ;;		_INT0_CallBack
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           	psect	text66
 13653  003EAA                     __ptext66:
 13654                           	opt callstack 0
 13655  003EAA                     _INT0_InterruptCall:
 13656                           	opt callstack 18
 13657  003EAA                     
 13658                           ;main.c: 21:         mode = !mode;
 13659  003EAA  0100               	movlb	0	; () banked
 13660  003EAC  51CB               	movf	_mode& (0+255),w,b
 13661  003EAE  B4D8               	btfsc	status,2,c
 13662  003EB0  EF5C  F01F         	goto	i2u433_41
 13663  003EB4  EF5F  F01F         	goto	i2u433_40
 13664  003EB8                     i2u433_41:
 13665  003EB8  0E01               	movlw	1
 13666  003EBA  EF60  F01F         	goto	i2u434_40
 13667  003EBE                     i2u433_40:
 13668  003EBE  0E00               	movlw	0
 13669  003EC0                     i2u434_40:
 13670  003EC0  6FCB               	movwf	_mode& (0+255),b
 13671  003EC2                     
 13672                           ; BSR set to: 0
 13673  003EC2  0012               	return		;funcret
 13674  003EC4                     __end_of_INT0_InterruptCall:
 13675                           	opt callstack 0
 13676                           
 13677                           	psect	text67
 13678  000000                     __ptext67:
 13679                           	opt callstack 0
 13680  000000                     
 13681                           	psect	rparam
 13682  0000                     
 13683                           	psect	temp
 13684  00005B                     btemp:
 13685                           	opt callstack 0
 13686  00005B                     	ds	1
 13687  0000                     int$flags	set	btemp
 13688  0000                     wtemp8	set	btemp+1
 13689  0000                     ttemp5	set	btemp+1
 13690  0000                     ttemp6	set	btemp+4
 13691  0000                     ttemp7	set	btemp+8
 13692                           tosu	equ	0xFFF
 13693                           tosh	equ	0xFFE
 13694                           tosl	equ	0xFFD
 13695                           stkptr	equ	0xFFC
 13696                           pclatu	equ	0xFFB
 13697                           pclath	equ	0xFFA
 13698                           pcl	equ	0xFF9
 13699                           tblptru	equ	0xFF8
 13700                           tblptrh	equ	0xFF7
 13701                           tblptrl	equ	0xFF6
 13702                           tablat	equ	0xFF5
 13703                           prodh	equ	0xFF4
 13704                           prodl	equ	0xFF3
 13705                           indf0	equ	0xFEF
 13706                           postinc0	equ	0xFEE
 13707                           postdec0	equ	0xFED
 13708                           preinc0	equ	0xFEC
 13709                           plusw0	equ	0xFEB
 13710                           fsr0h	equ	0xFEA
 13711                           fsr0l	equ	0xFE9
 13712                           wreg	equ	0xFE8
 13713                           indf1	equ	0xFE7
 13714                           postinc1	equ	0xFE6
 13715                           postdec1	equ	0xFE5
 13716                           preinc1	equ	0xFE4
 13717                           plusw1	equ	0xFE3
 13718                           fsr1h	equ	0xFE2
 13719                           fsr1l	equ	0xFE1
 13720                           bsr	equ	0xFE0
 13721                           indf2	equ	0xFDF
 13722                           postinc2	equ	0xFDE
 13723                           postdec2	equ	0xFDD
 13724                           preinc2	equ	0xFDC
 13725                           plusw2	equ	0xFDB
 13726                           fsr2h	equ	0xFDA
 13727                           fsr2l	equ	0xFD9
 13728                           status	equ	0xFD8


Data Sizes:
    Strings     80
    Constant    3536
    Data        7
    BSS         67
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     97     153
    BANK1           256      0      20
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_86(CODE[3]), 
		 -> STR_81(CODE[4]), STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[4]), STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), 
		 -> STR_42(CODE[3]), STR_37(CODE[3]), STR_32(CODE[4]), STR_27(CODE[3]), 
		 -> STR_23(CODE[3]), STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), 
		 -> STR_5(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_86(CODE[3]), 
		 -> STR_81(CODE[4]), STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), 
		 -> STR_62(CODE[4]), STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), 
		 -> STR_42(CODE[3]), STR_37(CODE[3]), STR_32(CODE[4]), STR_27(CODE[3]), 
		 -> STR_23(CODE[3]), STR_18(CODE[3]), STR_14(CODE[3]), STR_9(CODE[4]), 
		 -> STR_5(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S1965_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@string(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), INT0_InterruptCall(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), INT0_InterruptCall(), Absolute function(), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_2(CODE[17]), main@string(BANK0[20]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    ___lldiv->___lmul
    ___fltol->___flmul
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0  107530
                                             63 BANK0     34    34      0
            _ADC_GetConversionResult
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___flmul
                            ___fltol
                            ___lldiv
                             ___lmul
                           ___xxtofl
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   46670
                                             49 BANK0     14     4     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46113
                                             27 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45076
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44615
                                             68 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             11 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25420
                                             33 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             11 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              7 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              3 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                             14 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             41 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_InterruptCall                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                 _INT0_InterruptCall *
 ---------------------------------------------------------------------------------
 (13) _INT0_InterruptCall                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _INT0_InterruptCall *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      14       8        7.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     61      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107       6        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 11:22:02 2020

                           _SPI_Initialize 3F48                                _SSPSTATbits 000FC7  
                                       l25 3E8E                                         l28 3F6A  
                                       l39 3F92                                         l91 3B84  
                      ___wmul@multiplicand 0005         __size_of_IOCB4_SetInterruptHandler 000A  
                              __CFG_BORV$3 000000                      fp__INT0_InterruptCall 0000  
              __end_of_IOCB4_InterruptCall 3F9A                 ?_IOCB4_SetInterruptHandler 0003  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l102 3F74                                        l130 3766  
                                      l126 3F58                                        l222 3E4A  
                                      l136 3E96                                        l138 3EA4  
                                      l139 3EA8                                        l325 3DC2  
                                      l334 1A8C                                        l502 367C  
                                      l351 3AF6                                        l343 3C0A  
                                      l511 3A12                                        l504 36B6  
                                      l185 3F1E                                        l337 3EDA  
                                      l194 3F46                                        l354 3F08  
                                      l347 3B3E                                        l427 2DD4  
                                      l460 3F32                                        l436 306A  
                                      l517 1B2C                                        l621 203E  
                                      l605 1E40                                        l454 3F7E  
                                      l358 388C                                        l542 2276  
                                      l702 3952                                        l519 1B34  
                                      l551 23C4                                        l703 395A  
                                      l544 227E                                        l560 2B5A  
                                      l288 25BE                                        l537 1D6A  
                                      l553 2428                                        l706 3E70  
                                      l562 2B62                                        l571 2C0A  
                                      l619 1FDC                                        l635 015C  
                                      l740 380A                                        l820 2AD8  
                                      l572 2C52                                        l733 37FA  
                                      l717 38E6                                        l581 2076  
                                      l718 38F6                                        l591 223E  
                                      l583 207E                                        l576 2C5A  
                                      l833 2F38                                        l658 12DC  
                                      l499 363A                                        l596 1DA2  
                                      l598 1DAA                               __CFG_CPB$OFF 000000  
                             __CFG_CPD$OFF 000000                 ??_INT0_SetInterruptHandler 0005  
                          _timer1ReloadVal 00F5                                        _abs 3C0C  
                                      _pad 35F6                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 3DF2  
                             ___flmul@aexp 0022                               ___flmul@bexp 0023  
                             ___flmul@sign 001D                               ___flmul@temp 0028  
                             ___flmul@prod 0024                            ?_lcd_set_cursor 0008  
                             ___fltol@exp1 0033                         __size_of_IOCB4_ISR 002E  
                                     l1003 3280                                       ?_abs 0015  
                                     l1151 3370                                       l1320 13A2  
                                     l1144 3350                                       l1161 352A  
                                     l1330 15FE                                       l1154 350A  
                                     l1324 1706                                       l1412 2948  
                                     l1502 3CBE                                       l1327 1598  
                                     l1415 2950                                       l1424 3D2E  
                                     l1432 3A64                                       l1337 16C8  
                                     l1329 1610                                       l1361 265A  
                                     l1513 317A                                       l4002 3ACC  
                                     l1418 3C86                                       l4010 008C  
                                     l1364 27B6                                       l4004 3AF4  
                                     l4100 04BE                                       l4020 00BE  
                                     l4012 009A                                       l1453 35F4  
                                     l1461 3BC8                                       l1381 3C42  
                                     l1438 3CF6                                       l4030 00DC  
                                     l4022 00D0                                       l4014 00AC  
                                     l1518 315A                                       l1375 274E  
                                     l1471 3D94                                       l5000 3220  
                                     l1368 26F2                                       l1464 3F94  
                                     l1384 3C4A                                       l4200 0B2C  
                                     l4104 04F6                                       l4016 00B0  
                                     l4008 0066                                       l1481 345A  
                                     l5010 3250                                       l4210 0BB2  
                                     l4114 05B2                                       l4106 052C  
                                     l4050 0192                                       l4042 00F4  
                                     l4034 00E2                                       l4026 00D6  
                                     l4018 00BC                                       l1491 39B0  
                                     l5012 3260                                       l5020 2616  
                                     l3500 3992                                       l4300 11C4  
                                     l4124 064C                                       l4116 05D8  
                                     l4108 0562                                       l4060 0212  
                                     l4052 01C8                                       l4044 014A  
                                     l1477 3D64                                       l5014 3270  
                                     l5006 3234                                       l5030 2694  
                                     l5022 2624                                       l3510 3E4C  
                                     l3430 355A                                       l3502 39A4  
                                     l4302 11EC                                       l4310 123E  
                                     l4230 0D20                                       l4222 0C6A  
                                     l4214 0BEE                                       l4206 0B40  
                                     l4150 0848                                       l4142 07C0  
                                     l4134 070A                                       l4126 0682  
                                     l4118 05FE                                       l4070 029C  
                                     l4054 01D6                                       l4046 016A  
                                     l4038 00E8                                       l4400 3F24  
                                     l5008 3240                                       l5040 26E8  
                                     l5032 269C                                       l5024 266A  
                                     l3512 3E68                                       l3432 3578  
                                     l3424 352C                                       l3440 3B92  
                                     l3520 2964                                       l3600 32AC  
                                     l1496 39B8                                       l4312 1264  
                                     l4320 1292                                       l4304 11FC  
                                     l4240 0DCE                                       l4232 0D56  
                                     l4224 0CA0                                       l4216 0C14  
                                     l4208 0B66                                       l4160 08F4  
                                     l4152 086E                                       l4144 07F6  
                                     l4136 0740                                       l4128 06B8  
                                     l4080 0338                                       l4072 02AA  
                                     l4064 025C                                       l4056 01E4  
                                     l4048 016C                                       l4402 3F30  
                                     l4410 3E46                                       l5050 275E  
                                     l5042 2724                                       l5034 26A8  
                                     l5026 2680                                       l5018 2606  
                                     l3506 3CF8                                       l3434 35AE  
                                     l3426 353E                                       l3442 3BA4  
                                     l3450 3D40                                       l3530 29BA  
                                     l3522 2984                                       l3610 3316  
                                     l3602 32B4                                       l4314 1272  
                                     l4226 0CE8                                       l4218 0C4A  
                                     l4170 09B4                                       l4138 0788  
                                     l4090 03EC                                       l4074 02D0  
                                     l4058 0204                                       l4066 026E  
                                     l4412 3F0A                                       l4404 3E20  
                                     l5060 27A6                                       l5052 2762  
                                     l5044 2730                                       l5036 26DA  
                                     l3460 3E92                                       l4420 3DA0  
                                     l3428 3550                                       l3444 3BA8  
                                     l3452 3D58                                       l3540 2A0E  
                                     l3532 29C6                                       l3524 2988  
                                     l3516 2952                                       l3700 1C08  
                                     l3612 3336                                       l3604 32C8  
                                     l3620 347A                                       l4316 1286  
                                     l4260 0F3A                                       l4180 0A3A  
                                     l4172 09C0                                       l4084 0382  
                                     l4076 030A                                       l4068 0294  
                                     l4406 3E2C                                       l5054 2786  
                                     l5046 273E                                       l5038 26DC  
                                     l4350 3BCA                                       l4422 3DAE  
                                     l3438 3B86                                       l3446 3D30  
                                     l3470 3632                                       l3462 35F6  
                                     l3550 2A82                                       l3542 2A20  
                                     l3534 29E4                                       l3526 2996  
                                     l3518 2956                                       l3710 1CD8  
                                     l3702 1C6C                                       l3614 3338  
                                     l3606 32D6                                       l3630 34F2  
                                     l3622 3482                                       l4270 0FF4  
                                     l4262 0F4A                                       l4254 0EA6  
                                     l4246 0E1E                                       l4238 0DA8  
                                     l4190 0AAA                                       l4166 0946  
                                     l4158 08BE                                       l4094 0408  
                                     l4078 032A                                       l4086 0394  
                                     l4326 12A4                                       l5310 3090  
                                     l5302 306C                                       l4344 3F6C  
                                     l4408 3E2E                                       l4520 3E7E  
                                     l5056 2796                                       l5048 275C  
                                     l4352 3BE6                                       l4432 3844  
                                     l4424 3DB0                                       l4600 179A  
                                     l3640 3A5A                                       l3448 3D3C  
                                     l3480 369E                                       l3472 3646  
                                     l3464 3604                                       l3544 2A4E  
                                     l3536 29EC                                       l3552 2A88  
                                     l3528 29B6                                       l3560 2DD6  
                                     l3720 1D1E                                       l3704 1C86  
                                     l3712 1CE6                                       l3800 2B9C  
                                     l3616 334A                                       l3608 32E8  
                                     l3632 3504                                       l3624 3496  
                                     l3456 3C88                                       l4328 12CA  
                                     l4272 102A                                       l4264 0F82  
                                     l4256 0EDC                                       l4248 0E54  
                                     l4168 097C                                       l4176 09CC  
                                     l4096 043E                                       l4088 03BA  
                                     l5320 30FA                                       l5312 30AE  
                                     l5304 3080                                       l4522 3E82  
                                     l4514 3E72                                       l5058 27A4  
                                     l3650 3ED2                                       l4362 3EF4  
                                     l4354 3C02                                       l4434 3850  
                                     l4426 380C                                       l4418 3D98  
                                     l4610 17CC                                       l4602 17A4  
                                     l3642 3A5E                                       l3634 3A14  
                                     l3474 365A                                       l3466 3618  
                                     l3554 2A98                                       l3546 2A6E  
                                     l3538 2A00                                       l3570 2E1A  
                                     l3562 2DDA                                       l3722 1D2A  
                                     l3714 1CF8                                       l3706 1CA4  
                                     l3730 2240                                       l3810 2BEC  
                                     l3802 2BBA                                       l3626 34A4  
                                     l3618 345C                                       l4290 1116  
                                     l4274 1052                                       l4282 10A4  
                                     l4258 0F12                                       l4178 0A02  
                                     l4186 0A4E                                       l4098 0474  
                                     l4370 390E                                       l5322 310E  
                                     l5330 3172                                       l5314 30BA  
                                     l5306 3088                                       l4540 36C8  
                                     l4348 3F76                                       l4380 3F56  
                                     l4524 3E86                                       l4516 3E76  
                                     l3652 3ED8                                       l4460 2CB0  
                                     l4444 2C5C                                       l4436 386A  
                                     l4428 381C                                       l4700 198E  
                                     l4620 17FE                                       l4612 17D6  
                                     l4604 17AE                                       l3636 3A18  
                                     l3476 365E                                       l3468 3626  
                                     l3660 39E6                                       l3556 2AB8  
                                     l3548 2A70                                       l3580 2E82  
                                     l3572 2E3A                                       l3564 2DE8  
                                     l3484 3C0C                                       l3724 1D32  
                                     l3716 1D06                                       l3708 1CBE  
                                     l3740 22AE                                       l3732 224E  
                                     l3804 2BC6                                       l3628 34D2  
                                     l3820 2040                                       l3492 3C4C  
                                     l3900 1F02                                       l4284 10CA  
                                     l4276 1062                                       l4268 0FBE  
                                     l4188 0A74                                       l4196 0ABE  
                                     l4372 3934                                       l5324 311C  
                                     l5316 30C6                                       l5340 242A  
                                     l4542 3708                                       l4374 3F90  
                                     l4390 3B74                                       l4382 3B40  
                                     l4526 3E8A                                       l4518 3E7A  
                                     l3646 3EC6                                       l4358 3C08  
                                     l4470 2D88                                       l4462 2D5A  
                                     l4454 2CAC                                       l4446 2C64  
                                     l4438 3872                                       l4710 19C0  
                                     l4702 1998                                       l4630 1830  
                                     l4622 1808                                       l4614 17E0  
                                     l4606 17B8                                       l3638 3A2C  
                                     l3478 368A                                       l3662 39EA  
                                     l3654 39BA                                       l3590 2EF8  
                                     l3582 2EB0                                       l3574 2E58  
                                     l3566 2E08                                       l3486 3C26  
                                     l3718 1D0C                                       l3726 1D42  
                                     l3670 1AAE                                       l3750 22E0  
                                     l3742 22B4                                       l3734 2250  
                                     l3814 2C1C                                       l3806 2BE4  
                                     l3830 20AE                                       l3822 204E  
                                     l3910 1FCE                                       l3902 1F60  
                                     l4286 10F0                                       l4198 0AF4  
                                     l4366 38F8                                       l5326 314A  
                                     l5318 30D6                                       l5334 3D66  
                                     l5350 2450                                       l5342 242E  
                                     ?_pad 0013                                       l4552 3F34  
                                     l4544 370C                                       l4392 3B76  
                                     l4384 3B5C                                       l4376 3F48  
                                     l3648 3ED0                                       l4472 2D8A  
                                     l4464 2D6A                                       l4448 2CA8  
                                     l4720 19F2                                       l4712 19CA  
                                     l4704 19A2                                       l4640 1862  
                                     l4632 183A                                       l4624 1812  
                                     l4616 17EA                                       l4608 17C2  
                                     l3664 39EE                                       l3656 39CE  
                                     l3592 2F18                                       l3584 2ED0  
                                     l3576 2E60                                       l3568 2E0C  
                                     l3680 1B20                                       l3672 1AD6  
                                     l3760 2382                                       l3752 22E6  
                                     l3744 22C0                                       l3736 226A  
                                     l3816 2C30                                       l3808 2BE8  
                                     l3840 2140                                       l3832 20B8  
                                     l3824 2050                                       l3488 3CC0  
                                     l3496 395C                                       l3912 1FEA  
                                     l3904 1F7C                                       l4288 1108  
                                     l4296 1158                                       l4368 3900  
                                     l5328 3162                                       l5336 3D70  
                                     l5360 2468                                       l5352 2452  
                                     l5344 2434                                       l4546 3730  
                                     l4538 36BA                                       l4394 3B82  
                                     l4386 3B62                                       l4378 3F54  
                                     l4474 2D9A                                       l4466 2D76  
                                     l4730 1A24                                       l4722 19FC  
                                     l4714 19D4                                       l4706 19AC  
                                     l4650 1894                                       l4642 186C  
                                     l4634 1844                                       l4626 181C  
                                     l4618 17F4                                       l4570 1708  
                                     l3930 27F2                                       l3922 27B8  
                                     l3658 39DA                                       l3586 2EE2  
                                     l3578 2E74                                       l3690 1B6A  
                                     l3682 1B3C                                       l3674 1AF6  
                                     l3770 23EA                                       l3762 239C  
                                     l3754 22EC                                       l3746 22C6  
                                     l3738 22A6                                       l3818 2C34  
                                     l3850 2208                                       l3834 20BE  
                                     l3842 21A4                                       l3826 206A  
                                     l3914 1FF0                                       l3906 1F9A  
                                     l4298 118E                                       l5362 247A  
                                     l5370 25C0                                       l5354 2452  
                                     l5346 2438                                       l4548 3764  
                                     l4396 3F5A                                       l4388 3B72  
                                     l4900 144C                                       l4820 38C6  
                                     l4812 388E                                       l4468 2D78  
                                     l4476 2D9C                                       l4740 1A56  
                                     l4732 1A2E                                       l4724 1A06  
                                     l4716 19DE                                       l4708 19B6  
                                     l4660 18C6                                       l4652 189E  
                                     l4644 1876                                       l4636 184E  
                                     l4628 1826                                       l4580 1736  
                                     l4572 1712                                       l3940 284A  
                                     l3932 282A                                       l3924 27CC  
                                     l3588 2EE8                                       l3692 1B74  
                                     l3684 1B4E                                       l3676 1B04  
                                     l3668 1A8E                                       l3772 23FA  
                                     l3764 23B6                                       l3748 22CE  
                                     l3756 234A                                       l3780 2AEC  
                                     l3596 3282                                       l3844 21B6  
                                     l3852 2216                                       l3836 2134  
                                     l3828 20A6                                       l3916 2000  
                                     l3908 1FB4                                       l3860 1D7C  
                                     l5372 25D0                                       l5364 24E4  
                                     l5356 2452                                       l5348 2444  
                                     l4398 3F20                                       l4910 149E  
                                     l4902 1458                                       l4830 37A2  
                                     l4822 3768                                       l4814 389E  
                                     l4742 1A60                                       l4734 1A38  
                                     l4726 1A10                                       l4718 19E8  
                                     l4670 18F8                                       l4662 18D0  
                                     l4654 18A8                                       l4646 1880  
                                     l4638 1858                                       l4590 1768  
                                     l4582 1740                                       l4574 1718  
                                     l3950 28C8                                       l3942 2852  
                                     l3934 282E                                       l3926 27D0  
                                     l3694 1B7A                                       l3686 1B5C  
                                     l3678 1B06                                       l3766 23D2  
                                     l3774 2400                                       l3758 2364  
                                     l3790 2B2A                                       l3782 2AF4  
                                     l3598 328E                                       l3846 21D4  
                                     l3838 213A                                       l3918 2016  
                                     l3870 1DF0                                       l3862 1D96  
                                     l5446 011C                                       l5374 25FA  
                                     l5366 2512                                       l5358 245C  
                                     l4920 151C                                       l4912 14AE  
                                     l4904 1468                                       l4840 37EA  
                                     l4832 37B0                                       l4824 3778  
                                     l4816 38AC                                       l4760 2F52  
                                     l4744 1A70                                       l4736 1A42  
                                     l4728 1A1A                                       l4680 192A  
                                     l4672 1902                                       l4664 18DA  
                                     l4656 18B2                                       l4648 188A  
                                     l4592 1772                                       l4584 174A  
                                     l4576 1722                                       l5448 287A  
                                     l3944 285A                                       l3928 27D4  
                                     l3696 1BFC                                       l3688 1B62  
                                     l3768 23E4                                       l3792 2B38  
                                     l3784 2B06                                       l3848 21EE  
                                     l3880 1E34                                       l3872 1DFA  
                                     l3864 1DC0                                       l3856 1D6C  
                                     l5368 253C                                       l4930 1596  
                                     l4922 1552                                       l4914 14CA  
                                     l4906 1474                                       l4850 12FA  
                                     l4842 37F4                                       l4834 37BA  
                                     l4826 378E                                       l4818 38BC  
                                     l4770 3034                                       l4762 2F8C  
                                     l4746 1A7A                                       l4738 1A4C  
                                     l4690 195C                                       l4682 1934  
                                     l4674 190C                                       l4666 18E4  
                                     l4658 18BC                                       l4594 177C  
                                     l4586 1754                                       l4578 172C  
                                     l3954 2908                                       l3946 2890  
                                     l3938 2834                                       l3698 1C02  
                                     l3786 2B0E                                       l3778 2ADA  
                                     l3970 33A8                                       l3890 1EC0  
                                     l3874 1E00                                       l3866 1DC8  
                                     l3858 1D7A                                       l4940 15F6  
                                     l4932 15A8                                       l4924 1560  
                                     l4916 14D6                                       l4908 1484  
                                     l4860 1340                                       l4852 130A  
                                     l4844 12DE                                       l4836 37D8  
                                     l4828 3796                                       l4764 2F90  
                                     l4772 3038                                       l4756 2F3A  
                                     l4748 1A80                                       l4692 1966  
                                     l4684 193E                                       l4676 1916  
                                     l4668 18EE                                       l4596 1786  
                                     l4588 175E                                       l3956 291A  
                                     l3796 2B84                                       l3788 2B22  
                                     l3980 3432                                       l3972 33B6  
                                     l3964 3372                                       l3892 1ED2  
                                     l3884 1E74                                       l3876 1E08  
                                     l3868 1DE8                                       l4950 1664  
                                     l4934 15B6                                       l4926 157E  
                                     l4918 14F2                                       l4870 136C  
                                     l4862 1346                                       l4854 131A  
                                     l4846 12EA                                       l4838 37E8  
                                     l3990 3B14                                       l4766 2FDC  
                                     l4758 2F3E                                       l4694 1970  
                                     l4686 1948                                       l4678 1920  
                                     l4598 1790                                       l3958 292C  
                                     l3798 2B98                                       l3974 33D4  
                                     l3966 339C                                       l3886 1E86  
                                     l3894 1EE6                                       l3878 1E24  
                                     l4960 16CC                                       l4944 1620  
                                     l4952 1668                                       l4936 15BA  
                                     l4928 1588                                       l4880 13C2  
                                     l4872 137C                                       l4864 134C  
                                     l4856 132A                                       l4848 12F8  
                                     l3992 3B3C                                       l3984 3AF8  
                                     l4768 3008                                       l4696 197A  
                                     l4688 1952                                       l3976 33F2  
                                     l3896 1EF6                                       l4970 16F6  
                                     l4962 16DC                                       l4954 1682  
                                     l4946 162C                                       l4938 15C8  
                                     l4890 1402                                       l4874 138C  
                                     l4866 135A                                       l4858 1330  
                                     l3986 3B0E                                       l4698 1984  
                                     l3978 3404                                       l3898 1EFC  
                                     l4964 16EA                                       l4956 1696  
                                     l4948 163A                                       l4892 140E  
                                     l4884 13D6                                       l4876 1392  
                                     l4868 135C                                       l4980 31A6  
                                     l3996 3AB0                                       l4966 16EC  
                                     l4958 16B0                                       l4894 1426  
                                     l4886 13E2                                       l4878 13B2  
                                     l4990 31F4                                       l4982 31D0  
                                     l4974 317C                                       l3998 3AC6  
                                     l4968 16F2                                       l4896 1432  
                                     l4888 13EC                                       l4984 31D2  
                                     l4976 3192                                       l4898 143E  
                                     l4986 31E2                                       l4996 320C  
                                     l4988 31E6                                       l4998 3216  
                                     STR_1 FFC0                                       STR_2 FFAF  
                                     STR_3 FFD2                                       STR_5 FFD2  
                                     STR_7 FFD6                                       STR_9 FFD6  
                                     u3000 2E1A                                       u3001 2E16  
                                     u3010 2E58                                       u3011 2E54  
                                     u3020 2E82                                       u3100 34A4  
                                     u3021 2E7E                                       u3101 34A0  
                                     _LATA 000F89                                       u3030 2EB0  
                                     u3110 34D2                                       _LATB 000F8A  
                                     u3031 2EAC                                       u3111 34CE  
                                     _LATC 000F8B                                       u3120 3A2C  
                                     u3040 2EF8                                       u3200 1B20  
                                     u4000 0394                                       _LATD 000F8C  
                                     u3121 3A28                                       u3041 2EF4  
                                     u3201 1B1C                                       u4001 0390  
                                     _LATE 000F8D                                       u3130 3A5A  
                                     u3210 1B4E                                       u4010 03BA  
                                     u3131 3A56                                       u3211 1B4A  
                                     u3051 3288                                       u4011 03B6  
                                     u3300 1D1E                                       u3220 1B5C  
                                     u3060 32AC                                       u4100 0740  
                                     u4020 043E                                       u3301 1D1A  
                                     u3221 1B58                                       u3061 32A8  
                                     u4101 073C                                       u4021 043A  
                                     u3150 39CE                                       u3230 1C86  
                                     u3310 224E                                       u3070 32D6  
                                     u4110 07F6                                       u4030 0474  
                                     u3151 39CA                                       u3231 1C82  
                                     u3311 224A                                       u3071 32D2  
                                     u4111 07F2                                       u4031 0470  
                                     u5000 3230                                       u3240 1CA4  
                                     u3160 1ABE                                       u3400 23E4  
                                     u3320 226A                                       u3080 3316  
                                     u4200 0CA0                                       u4120 086E  
                                     u4040 052C                                       u5001 322C  
                                     u3145 3ECE                                       u3241 1CA0  
                                     u3161 1AB8                                       u3401 23E0  
                                     u3321 2266                                       u3081 3312  
                                     u4201 0C9C                                       u4121 086A  
                                     u4041 0528                                       u5010 3250  
                                     u3146 3ED0                                       u3250 1CBE  
                                     u3170 1AC0                                       u3330 2324  
                                     u3090 347A                                       u4210 0D56  
                                     u4130 08F4                                       u4050 0562  
                                     u5011 324C                                       u3251 1CBA  
                                     u3411 2AE4                                       u3091 3476  
                                     u4211 0D52                                       u4131 08F0  
                                     u4051 055E                                       u5020 3260  
                                     u5100 275C                                       u2700 3550  
                                     u3260 1CD8                                       u3180 1AD6  
                                     u3340 2364                                       u3420 2B06  
                                     u3500 204E                                       u4300 118E  
                                     u4220 0DCE                                       u4140 097C  
                                     u4060 05D8                                       u5021 325C  
                                     u5101 2758                                       u2701 354C  
                                     u3261 1CD4                                       u3181 1AD2  
                                     u3341 2360                                       u3421 2B02  
                                     u3501 204A                                       u4301 118A  
                                     u4221 0DCA                                       u4141 0978  
                                     u4061 05D4                                       u5110 2796  
                                     u5030 2616                                       u2710 3578  
                                     u3270 1CE6                                       u3190 1B04  
                                     u3350 2382                                       u3430 2B38  
                                     u3510 206A                                       u4310 11C4  
                                     u4230 0E54                                       u4150 0A02  
                                     u4070 05FE                                       u5111 2792  
                                     u5031 2612                                       u2711 3574  
                                     u3271 1CE2                                       u3191 1B00  
                                     u3351 237E                                       u3335 2312  
                                     u3431 2B34                                       u3511 2066  
                                     u4311 11C0                                       u4231 0E50  
                                     u4151 09FE                                       u4071 05FA  
                                     u5120 27A4                                       u5040 2624  
                                     u4400 3DC2                                       u2720 35AE  
                                     u2800 367C                                       u3280 1CF8  
                                     u3360 239C                                       u3440 2B56  
                                     u3520 21B6                                       u3600 1E24  
                                     u4320 1264                                       u4240 0EDC  
                                     u4160 0A74                                       u4080 0682  
                                     u5121 27A0                                       u5041 2620  
                                     u4401 3DBE                                       u2721 35AA  
                                     u2801 3678                                       u3281 1CF4  
                                     u3361 2398                                       u3441 2B52  
                                     u3521 21B2                                       u3601 1E20  
                                     u4321 1260                                       u4241 0ED8  
                                     u4161 0A70                                       u4081 067E  
                                     u5050 2680                                       u4410 3840  
                                     u2730 3BC8                                       u2810 368A  
                                     u3290 1D06                                       u3370 23B6  
                                     u3450 2B80                                       u3530 21D4  
                                     u3610 1E6E                                       u4250 0F12  
                                     u4170 0AF4                                       u4090 06B8  
                                     u5051 267C                                       u4411 383C  
                                     u2731 3BC4                                       u2811 3686  
                                     u3291 1D02                                       u3371 23B2  
                                     u3451 2B7C                                       u3531 21D0  
                                     u3611 1E68                                       u4251 0F0E  
                                     u4171 0AF0                                       u4091 06B4  
                                     u5060 26D6                                       u4420 386A  
                                     u2900 3D28                                       u2740 3D58  
                                     u2820 3C26                                       u3380 23C4  
                                     u3460 2BBA                                       u3540 21EE  
                                     u3700 1FB4                                       u3620 1E70  
                                     u4260 0FF4                                       u4180 0B66  
                                     u5061 26D2                                       u4421 3866  
                                     u2901 3D22                                       u2741 3D54  
                                     u2821 3C22                                       u3381 23C0  
                                     u3461 2BB6                                       u3541 21EA  
                                     u3701 1FB0                                       u4261 0FF0  
                                     u4181 0B62                                       u5070 2720  
                                     u4350 3BE6                                       u4430 388C  
                                     u2910 3D2A                                       u3390 23D2  
                                     u3470 2C0A                                       u3550 2208  
                                     u2830 3CF0                                       u2750 3CB8  
                                     u3710 1FCE                                       u3630 1E86  
                                     u4270 102A                                       u4190 0C14  
                                     u5071 271C                                       u4351 3BE2  
                                     u4431 3888                                       u3391 23CE  
                                     u3471 2C06                                       u3551 2204  
                                     u2831 3CEA                                       u2751 3CB2  
                                     u3711 1FCA                                       u3631 1E82  
                                     u4271 1026                                       u4191 0C10  
                                     u5080 273E                                       u4360 3C02  
                                     u4600 2FBA                                       u3800 292C  
                                     u2920 2964                                       u3480 2C18  
                                     u3560 2216                                       u2840 3CF2  
                                     u2760 3CBA                                       u3720 1FDC  
                                     u3640 1EBA                                       u4280 10CA  
                                     u5400 25BE                                       u5081 273A  
                                     u4361 3BFE                                       u3801 2928  
                                     u2921 2960                                       u3481 2C14  
                                     u3561 2212                                       u3721 1FD8  
                                     u3641 1EB4                                       u4281 10C6  
                                     u5401 25BA                                       u5090 274E  
                                     u2770 3EA4                                       u4610 2FDC  
                                     u2690 353E                                       u2930 2996  
                                     u3490 2C52                                       u3810 339C  
                                     u2850 3C80                                       u3730 1FEA  
                                     u3650 1EBC                                       u3570 1D7A  
                                     u4290 10F0                                       u4370 3952  
                                     u5330 3080                                       u5410 25D0  
                                     u5091 274A                                       u2771 3EA0  
                                     u4611 2FD8                                       u2691 353A  
                                     u2931 2992                                       u3491 2C4E  
                                     u3811 3398                                       u2851 3C7A  
                                     u3731 1FE6                                       u3571 1D76  
                                     u4291 10EC                                       u4371 394E  
                                     u5331 307C                                       u5411 25CC  
                                     u4460 2D5A                                       u4620 305A  
                                     u3740 27F2                                       u2780 3604  
                                     u3820 33D4                                       u2860 3C82  
                                     u3660 1ED2                                       u3580 1D96  
                                     u3900 016A                                       u5340 30AE  
                                     u4461 2D56                                       u3741 27EE  
                                     u2781 3600                                       u2941 29C0  
                                     u3821 33D0                                       u3661 1ECE  
                                     u3581 1D92                                       u3901 0166  
                                     u5341 30AA                                       u4470 2D88  
                                     u4454 2D3A                                       u4630 306A  
                                     u3750 282A                                       u2790 3626  
                                     u2950 29E4                                       u3830 33F2  
                                     u2870 398C                                       u3670 1F3A  
                                     u3590 1DC0                                       u3910 0192  
                                     u5350 310E                                       u4471 2D84  
                                     u4455 2D34                                       u4631 3066  
                                     u4607 2FB0                                       u3751 2826  
                                     u2791 3622                                       u2951 29E0  
                                     u3831 33EE                                       u2871 3986  
                                     u3591 1DBC                                       u3911 018E  
                                     u5351 310A                                       u4800 135A  
                                     u4720 38AC                                       u4480 2D9A  
                                     u3760 2846                                       u2960 2A0E  
                                     u3840 3404                                       u2880 398E  
                                     u3680 1F7C                                       u3920 01D6  
                                     u5360 311C                                       u4801 1356  
                                     u4721 38A8                                       u4481 2D96  
                                     u3761 2842                                       u2961 2A0A  
                                     u3841 3400                                       u3681 1F78  
                                     u3921 01D2                                       u5361 3118  
                                     u4810 136C                                       u4730 38E6  
                                     u4490 2DD4                                       u3770 2902  
                                     u2970 2A4E                                       u3850 3432  
                                     u2890 39A4                                       u3690 1F9A  
                                     u3930 0254                                       u5370 314A  
                                     u4811 1368                                       u4731 38E2  
                                     u4491 2DD0                                       u4627 3050  
                                     u5427 3DA6                                       u3771 28FC  
                                     u2971 2A4A                                       u3851 342E  
                                     u2891 39A0                                       u3691 1F96  
                                     u3675 1F28                                       u3931 024E  
                                     u5371 3146                                       u4580 36C8  
                                     u4900 160C                                       u4820 137C  
                                     u4740 378E                                       u3860 3B0E  
                                     u3780 2904                                       u2980 2A98  
                                     u3940 0256                                       u4581 36C4  
                                     u4901 1608                                       u4821 1378  
                                     u4741 378A                                       u3861 3B0A  
                                     u2981 2A94                                       u5381 2462  
                                     u4910 1620                                       u4830 13B2  
                                     u4750 37B0                                       u3870 3AC6  
                                     u3790 291A                                       u2990 2DE8  
                                     u3950 026E                                       u5390 247A  
                                     u4911 161C                                       u4831 13AE  
                                     u4751 37AC                                       u3871 3AC2  
                                     u3791 2916                                       u2991 2DE4  
                                     u3951 026A                                       u5391 2476  
                                     u4920 163A                                       u4840 13C2  
                                     u4760 37D8                                       u3960 0294  
                                     u3880 008C                                       u4921 1636  
                                     u4841 13BE                                       u4761 37D4  
                                     u3961 0290                                       u3881 0088  
                                     u4930 1682                                       u4850 153C  
                                     u4770 12F8                                       u3970 02D0  
                                     u3890 015C                                       u4931 167E  
                                     u4771 12F4                                       u3971 02CC  
                                     u3891 0158                                       i2l44 0036  
                                     u4940 16B0                                       u4860 1596  
                                     u4780 130A                                       u3980 037A  
                                     u4941 16AC                                       u4861 1592  
                                     u4781 1306                                       u3981 0374  
                                     u4950 16EA                                       u4870 15B6  
                                     u4790 131A                                       u3990 037C  
                                     u4951 16E6                                       u4871 15B2  
                                     u4855 1532                                       u4791 1316  
                                     i2l48 0056                                       u4880 15C8  
                                     u4960 3192                                       u4881 15C4  
                                     u4961 318E                                       u4890 15F6  
                                     u4970 31C6                                       u4891 15F2  
                                     u4980 31F4                                       u4981 31F0  
                                     u4990 3208                                       i2l95 3EF2  
                                     u4991 3204                                       u4975 31BC  
                                     i2l99 3DF0                                       _WPUB 000F5B  
                                     abs@a 0015                                       _dbuf 00CC  
                                     _atoi 27B8                                       _ctoa 39BA  
                                     _main 242A                                       _dtoa 1A8E  
                                     _font F1DF                                       _mode 00CB  
                                     _prec 0057                                       _otoa 2240  
                                     _nout 00C3                                       pad@i 001A  
                                     pad@p 0017                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001C                                       fsr2l 000FD9  
                                     _stoa 2ADA                                       btemp 005B  
                                     _utoa 2040                                       _xtoa 1D6C  
                              main@pot_val 00BD                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0062  
                            __CFG_IESO$OFF 000000                     __end_of_SPI_Initialize 3F5A  
                            lcd_fill@width 0010                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                      ??_abs 0017  
                                    ??_pad 0019                           __end_of_INT0_ISR 3F88  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 3F6C  
                            ___fltol@sign1 0032                            __end_of___aodiv 2ADA  
                                    ?_atoi 000A                                      ?_ctoa 001E  
                                    ?_main 0001                                      ?_dtoa 001E  
                          __end_of___aomod 2F3A                                      STR_21 FFED  
                                    STR_14 FFD3                                      STR_30 FFDE  
                                    STR_23 FFED                                      STR_32 FFDE  
                                    STR_40 FFF6                                      STR_25 FFF0  
                                    STR_18 FFD7                                      STR_42 FFF6  
                                    STR_27 FFF0                                      STR_52 FFDB  
                                    STR_60 FFE2                                      STR_37 FFDF  
                                    STR_45 FFDA                                      STR_62 FFE2  
                                    STR_70 FFF9                                      STR_47 FFDA  
                                    STR_55 FFF3                                      STR_72 FFF9  
                                    STR_81 FFCE                                      STR_57 FFF3  
                                    STR_90 FFCF                                      STR_67 FFE3  
                                    STR_75 FFE6                                      STR_77 FFE6  
                                    STR_93 FFFC                                      STR_86 FFE7  
                                    STR_95 FFFC                                      STR_79 FFCE  
                          __end_of___flmul 1708                                      STR_97 FFEA  
                                    ?_otoa 001E                                      STR_99 FFEA  
                          __end_of___fltol 3282          __end_of_IOCB4_SetInterruptHandler 3F76  
                                    ?_stoa 000C                            __end_of___lldiv 380C  
                                    ?_utoa 001E                            __end_of___lodiv 3372  
                                    ?_xtoa 001E                                      _T1CON 000FCD  
                          __end_of___lomod 352C                                      i2l105 3F96  
                                    i2l451 3E1E                                      i2l275 3F98  
                                    i2l278 3EC2                                      i2l447 3F86  
                                    i2l457 3F9A                               vfpfcnvrt@fmt 0047  
                             vfpfcnvrt@llu 0073                                      _TMR1H 000FCF  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0001  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96           __size_of_ADC_GetConversionResult 0014  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0016  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                      ___lmul@multiplicand 0007                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                               main@perc_val 00B9  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 3DC4  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 3EF4  
                                    _flags 0059                                      _errno 00C1  
                                    _fputc 352C                            __end_of_isalpha 3C88  
                                    _fputs 3B86                            __end_of_isdigit 3D30  
                                    atoi@n 0017                                      pad@fp 0013  
                                    atoi@s 000A                                      _width 00C5  
                                    ctoa@c 0020                                      _putch 3F94  
                                    ctoa@w 0021                                      dtoa@d 0020  
                                    dtoa@i 0040                                      dtoa@n 0038  
                                    dtoa@p 0032                                      dtoa@s 0036  
                                    dtoa@w 0034                           __end_of_SPI_Open 3768  
                          __end_of_islower 3CC0                            __end_of_isspace 3A66  
                  __end_of_TMR1_Initialize 3E4C                            __end_of_isupper 3CF8  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0020                                      otoa@i 003E  
                                    otoa@n 0036                                      otoa@p 0030  
                                    otoa@t 0032                                      otoa@w 0034  
                                    plusw1 000FE3                                      plusw2 000FDB  
                                    stoa@i 0018                                      stoa@l 0020  
                                    stoa@p 001E                                      stoa@s 000E  
                                    stoa@w 001A                                      ttemp5 005C  
                                    ttemp6 005F                                      ttemp7 0063  
                                    utoa@d 0020                                      utoa@i 003C  
                                    utoa@n 0034                                      utoa@p 0030  
                                    utoa@w 0032                                      status 000FD8  
                                    wtemp8 005C                                      xtoa@c 0043  
                                    xtoa@d 0020                                      xtoa@i 0041  
                                    xtoa@n 0039                                      xtoa@p 0035  
                                    xtoa@w 0037                                      xtoa@x 0028  
                          __end_of_strncmp 345C                            __end_of_toupper 39BA  
                           lcd_fill@height 000E                           ___lodiv@dividend 0003  
                          ?_SPI_Initialize 0001                               _toupper$2032 000F  
          ??_IOCB4_DefaultInterruptHandler 0001                            __initialization 3A66  
                             __end_of_atoi 2952                               __end_of_ctoa 3A14  
                             __end_of_main 2604                               __end_of_dtoa 1D6C  
                             __end_of_font FFAB                               __end_of_otoa 242A  
                             __end_of_stoa 2C5C                               __end_of_utoa 2240  
                             __end_of_xtoa 2040                          __end_of_IOCB4_ISR 3DF2  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 000C  
                                   ??_ctoa 0021                                     ??_main 009F  
                                   ??_dtoa 0028                          ?_lcd_set_cursor_x 0006  
                        ?_lcd_set_cursor_y 0006                              lcd_send@value 0004  
                                   ??_otoa 0028                                     ??_stoa 0010  
                                   ??_utoa 0028                                     ??_xtoa 0029  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0008  
                       ??_lcd_set_cursor_y 0008                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0013                         _INT0_InterruptCall 3EAA  
                           lcd_draw_char@i 0021                             lcd_draw_char@j 001F  
                           lcd_draw_char@k 0020                   __end_of_SPI_ExchangeByte 3EAA  
                           lcd_draw_char@x 000C                             lcd_draw_char@y 000E  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0003  
                                   ?_fputs 000C                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                      ?_INT0_InterruptCall 0001                             __CFG_WDTEN$OFF 000000  
                                   i2l4414 3DC4                                     i2l5070 0044  
                                   i2l4416 3DD8                                     i2l5072 0052  
                                   i2l5064 0012                                     i2l4346 3EAA  
                                   i2l4530 3F82                                     i2l5066 0020  
                                   i2l4532 3EDC                                     i2l5068 002E  
                                   i2l4534 3EEC                                     i2l4480 3E06  
                                   i2l4528 3F80                                     i2l4536 3EF0  
                                   i2l4478 3DF2                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 0062                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                           __end_of___xxtofl 27B8  
                          _global_bg_color 00C7                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0008                           __end_of_lcd_fill 388E  
                             vfprintf@cfmt 0055                           __end_of_lcd_init 1A8E  
                         __end_of_lcd_send 3EDC                                     ___lmul 388E  
                                ??___aodiv 0013                                  ??___aomod 0013  
                                   ___wmul 3E4C                             __CFG_STVREN$ON 000000  
                                ??___flmul 0019                                  ??___fltol 002E  
                                ??___lldiv 0017                                  ??___lodiv 0013  
                                ??___lomod 0013                       ??_INT0_InterruptCall 0001  
                                   clear_0 3A8C                                     clear_1 3A98  
                                   pad@buf 0015                                     ctoa@fp 001E  
                          ??_INT0_CallBack 0001                                     dtoa@fp 001E  
                                   _strlen 3D30                                  ??_msDelay 0003  
                                   fputc@c 0003                                     fputs@c 0010  
                                   fputs@i 0011                                     fputs@s 000C  
                                ??_isalpha 0005                                  ??_isdigit 0005  
                                ??_islower 0005                               __mediumconst F1DE  
                                ??_isspace 0005                                     otoa@fp 001E  
                                   tblptrh 000FF7                                  ??_isupper 0005  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                   stoa@cp 001C                                     stoa@fp 000C  
                                   putch@c 0001                           __end_of_vfprintf 395C  
                                   utoa@fp 001E   INT0_SetInterruptHandler@InterruptHandler 0003  
IOCB4_SetInterruptHandler@InterruptHandler 0003                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 3D96                                     xtoa@fp 001E  
                                ??_strncmp 0009                                  ??_toupper 000B  
            __size_of_INTERRUPT_Initialize 0004                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000D                               ___xxtofl@exp 000C  
                        _SYSTEM_Initialize 3E72                               ___xxtofl@val 0003  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 3AA6                                  ?_INT0_ISR 0001  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 002A                             __pcstackCOMRAM 0001  
                             __pidataBANK0 3F88                        ??_SYSTEM_Initialize 0005  
                            __end_of_fputc 35F6                              __end_of_fputs 3BCA  
    __end_of_IOCB4_DefaultInterruptHandler 3F98     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 3F96                              __end_of_putch 3F96  
                                ?_SPI_Open 0001                ??_IOCB4_SetInterruptHandler 0005  
                         ??_lcd_set_cursor 000C                    _ADC_GetConversionResult 3F34  
              __size_of_EXT_INT_Initialize 0014                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0007                  __end_of_SYSTEM_Initialize 3E90  
                                  ??_fputs 0010                                    ??_putch 0003  
                               __pbssBANK0 00C1                                 __pbssBANK1 0100  
                          __CFG_PLLCFG$OFF 000000                      _INT0_InterruptHandler 00F3  
                               ??_INT0_ISR 0001                                    ?___lmul 0003  
                                  ?___wmul 0003                             ___lmul@product 000B  
                               ??_SPI_Open 0003                    __size_of_ADC_Initialize 0016  
                                  ?_strlen 0003                           __CFG_CANMX$PORTB 000000  
                                ?___xxtofl 0003                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 1278  
                                  _OSCTUNE 000F9B               __size_of_IOCB4_InterruptCall 0002  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000C                                  ?_lcd_init 0001  
                                ?_lcd_send 0004                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0003                           ??_SPI_Initialize 0003  
                _IOCB4_SetInterruptHandler 3F6C          __size_of_INT0_SetInterruptHandler 000A  
                ?_INT0_SetInterruptHandler 0003                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 00C9                                    __Hparam 0000  
                                  __Lparam 0000                         __size_of_vsnprintf 0110  
                        ??_lcd_draw_string 002C                                    ___aodiv 2952  
                                  ___aomod 2DD6                             main@percentage 00B7  
                          __size_of___lmul 006A                                    ___flmul 12DE  
                                  ___fltol 317C                                    ___lldiv 3768  
                          __size_of___wmul 0026                                    ___lodiv 3282  
                                  ___lomod 345C                                  ?_vfprintf 004F  
                                ?_snprintf 0091                  ??_ADC_GetConversionResult 0005  
                                  __pcinit 3A66                                    __ramtop 0F00  
                                  __ptext0 242A                                    __ptext1 3D66  
                                  __ptext2 306C                                    __ptext3 38F8  
                                  __ptext4 0066                                    __ptext5 1D6C  
                                  __ptext6 395C                                    __ptext7 3C88  
                                  __ptext8 3CC0                                    __ptext9 3C4C  
                                  _msDelay 3D96                                  _IOCB4_ISR 3DC4  
                          __size_of_strlen 0036                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 3F5A                               __size_of_abs 0040  
                             __size_of_pad 00C2                                    _isalpha 3C4C  
                                  _isdigit 3CF8                                 ??___xxtofl 0007  
                                  _islower 3C88                   ??_PIN_MANAGER_Initialize 0005  
                                  _isspace 3A14                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 3CC0                                    atoi@neg 0010  
                    __end_of_lcd_draw_char 2DD6                 __size_of_SYSTEM_Initialize 001E  
                               ??_lcd_fill 000E                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 0012                                 ??_lcd_send 0005  
                                  _strncmp 3372                                    _toupper 395C  
                     end_of_initialization 3AA6                         ??_SPI_ExchangeByte 0003  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0005                                    fputs@fp 000E  
                          ___lldiv@divisor 0013                        lcd_draw_char@fIndex 0010  
                          ___lldiv@counter 001B                          __end_of_vfpfcnvrt 12DE  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           lcd_fill@bg_color 000C  
                               main@F12856 0100                                 ??_vfprintf 0055  
                               ??_snprintf 0057                                    strlen@a 0005  
                                  strlen@s 0003                          lcd_draw_string@pS 0026  
                        _spi_configuration FFAB                                 ?_IOCB4_ISR 0001  
                         __CFG_FOSC$INTIO2 000000                              ___xxtofl@sign 000B  
                                _TRISCbits 000F94                          __end_of_vsnprintf 317C  
                              ___flmul@grs 001E                                 lcd_send@dc 0005  
                        __size_of_INT0_ISR 0008                                 main@string 00A3  
             __end_of_INTERRUPT_Initialize 3F94                       SPI_ExchangeByte@data 0003  
     __end_of_INT0_DefaultInterruptHandler 3F9C      __size_of_INT0_DefaultInterruptHandler 0002  
             _INT0_DefaultInterruptHandler 3F9A                  __end_of_spi_configuration FFAF  
                           __end_of___lmul 38F8                                vfpfcnvrt@ap 0049  
                              vfpfcnvrt@cp 0060                                vfpfcnvrt@fp 0045  
                              vfpfcnvrt@ll 0068                             __end_of___wmul 3E72  
                              vfpfcnvrt@vp 0070                __size_of_INT0_InterruptCall 001A  
                           _ADC_Initialize 3F0A                     ?_OSCILLATOR_Initialize 0001  
                    __end_of_INT0_CallBack 3E20                          __size_of_SPI_Open 00B0  
                           __end_of_strlen 3D66                        start_initialization 3A66  
                          ___lodiv@divisor 000B                            ___lodiv@counter 001B  
          __size_of_PIN_MANAGER_Initialize 0046                                __end_of_abs 3C4C  
                              __end_of_pad 36B8                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0004                   __size_of_TMR1_Initialize 002C  
                              vfprintf@fmt 0051                        _IOCB4_InterruptCall 3F98  
                                 ??___lmul 000B                                   ??___wmul 0007  
                   __end_of_ADC_Initialize 3F20                                __pdataBANK0 00EC  
               __end_of_EXT_INT_Initialize 3F34            fp__INT0_DefaultInterruptHandler 0000  
            ?_INT0_DefaultInterruptHandler 0001                                   ??_strlen 0005  
                              ??_IOCB4_ISR 0001                    __size_of_lcd_draw_pixel 0016  
                             vsnprintf@cnt 0089                               vsnprintf@fmt 007F  
                                ___flmul@a 0015                                  ___flmul@b 0011  
                              __pbssCOMRAM 0057           __end_of_INT0_SetInterruptHandler 3F80  
                            __pcstackBANK0 0060                           ___aodiv@dividend 0003  
                     ?_IOCB4_InterruptCall 0001                                snprintf@fmt 0095  
                        __size_of___xxtofl 01B4                            _lcd_draw_string 2F3A  
                         _lcd_set_cursor_x 3AF8                           _lcd_set_cursor_y 3AB0  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1925 0012  
                                _atoi$1926 0016                                  _atoi$1927 0014  
                                __pnvBANK0 00F3                     _PIN_MANAGER_Initialize 3B40  
                                _dtoa$1312 0030                                  __pintcode 0008  
                            __pmediumconst F1DE                                   ?___aodiv 0003  
                                 ?___aomod 0003                           ___aodiv@quotient 0015  
                                 ?___flmul 0011                                   ?___fltol 002A  
                                 ?___lldiv 000F                                   ?___lodiv 0003  
                                 ?___lomod 0003                            ?_ADC_Initialize 0001  
             ??_INTERRUPT_InterruptManager 0001                          __size_of_vfprintf 0064  
                        __size_of_snprintf 0030                                   ?_msDelay 0001  
                          ___lomod@divisor 000B                            ___lomod@counter 0013  
                                 ?_isalpha 0003                                   ?_isdigit 0003  
                                 ?_islower 0003                      ??_IOCB4_InterruptCall 0001  
                                 ?_isspace 0003                                   ?_isupper 0003  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0003                                   ?_toupper 0009  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 3F90  
                  __size_of_lcd_set_cursor 0042                                   _INT0_ISR 3F80  
                           ___wmul@product 0007                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                          lcd_set_cursor@x 0008                            lcd_set_cursor@y 000A  
      __size_of_INTERRUPT_InterruptManager 005A                                   i2u433_40 3EBE  
                                 i2u513_40 0020                                   i2u433_41 3EB8  
                                 i2u513_41 001C                                   _PIR1bits 000F9E  
                                 i2u434_40 3EC0                                   i2u450_40 3E06  
                                 i2u514_40 002E                                   i2u450_41 3E02  
                                 i2u514_41 002A                                   i2u515_40 0044  
                                 i2u515_41 0040                                   i2u451_48 3E0C  
                                 i2u516_40 0052                                   i2u451_49 3E1E  
                                 i2u516_41 004E                                   i2u438_40 3DD8  
                                 i2u438_41 3DD4                                   i2u439_48 3DDE  
                                 i2u439_49 3DF0                                   i2u457_40 3EEC  
                                 i2u457_41 3EE8                      lcd_draw_string@lIndex 0032  
                                 _RCONbits 000FD0                  __size_of_SPI_ExchangeByte 001A  
                         lcd_draw_string@k 0030                           lcd_draw_string@x 0022  
                         lcd_draw_string@y 0024                          ??_PIN_MANAGER_IOC 0001  
                                _vfpfcnvrt 0066                                  _xtoa$1348 0031  
                                _xtoa$1349 0033                                   _SPI_Open 36B8  
                        ??_TMR1_Initialize 0003                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0003                           __CFG_SOSCSEL$DIG 000000  
                  __end_of_lcd_draw_string 306C             ??_INT0_DefaultInterruptHandler 0001  
                             _isspace$1952 0009                                  msDelay@ms 0004  
                               vfpfcnvrt@c 0072                          ___lmul@multiplier 0003  
                              _INTCON2bits 000FF1                                  copy_data0 3A7A  
                    ?_INTERRUPT_Initialize 0001                   _INT0_SetInterruptHandler 3F76  
                                _vsnprintf 306C                        lcd_draw_pixel@color 0006  
                                 __Hrparam 0000                                 vfprintf@ap 0053  
                                 __Lrparam 0000                                 vfprintf@fp 004F  
                 ?_ADC_GetConversionResult 0003                         __CFG_BOREN$SBORDIS 000000  
                  __size_of_SPI_Initialize 0012                    ??_OSCILLATOR_Initialize 0003  
                   __size_of_lcd_draw_char 017A                           __size_of___aodiv 0188  
                         __size_of___aomod 0164                                vsnprintf@ap 0081  
                         __size_of___flmul 042A                           __size_of___fltol 0106  
                         __size_of___lldiv 00A4                           __size_of___lodiv 00F0  
                         __size_of___lomod 00D0                                 ?_vfpfcnvrt 0045  
                               snprintf@ap 009D                            ___aodiv@divisor 000B  
                          ___aodiv@counter 0013                     _IOCB4_InterruptHandler 00F7  
                           _lcd_draw_pixel 3EF4                           __size_of_msDelay 002E  
                                 ___xxtofl 2604                           __size_of_isalpha 003C  
                         __size_of_isdigit 0038           fp__IOCB4_DefaultInterruptHandler 0000  
           ?_IOCB4_DefaultInterruptHandler 0001                           __size_of_islower 0038  
                         __size_of_isspace 0052                                   __ptext10 2040  
                                 __ptext11 345C                                   __ptext20 39BA  
                                 __ptext12 3282                                   __ptext21 35F6  
                                 __ptext13 3372                                 _T1GCONbits 000FAA  
                                 __ptext30 1708                                   __ptext22 3D30  
                                 __ptext14 2ADA                                   __ptext31 3D96  
                                 __ptext23 3B86                                   __ptext15 2240  
                                 __ptext40 3E90                                   __ptext32 380C  
                                 __ptext24 352C                                   __ptext16 1A8E  
                                 __ptext41 2604                                   __ptext33 2F3A  
                                 __ptext25 3F94                                   __ptext17 3C0C  
                                 __ptext50 3F6C                                   __ptext42 388E  
                                 __ptext34 2C5C                                   __ptext26 27B8  
                                 __ptext18 2DD6                                   __ptext51 3F5A  
                                 __ptext43 3768                                   __ptext35 3BCA  
                                 __ptext27 3A14                                   __ptext19 2952  
                                 __ptext60 3DC4                                   __ptext52 3F90  
                                 __ptext44 317C                                   __ptext36 3AB0  
                                 __ptext28 3CF8                                   __ptext61 3F96  
                                 __ptext53 3F20                                   __ptext45 12DE  
                                 __ptext37 3AF8                                   __ptext29 3E4C  
                                 __ptext62 3F98                                   __ptext54 3F76  
                                 __ptext46 3E72                                   __ptext38 3EF4  
                                 __ptext63 3F80                                   __ptext55 3F0A  
                                 __ptext47 3E20                                   __ptext39 3EC4  
                                 __ptext64 3DF2                                   __ptext56 36B8  
                                 __ptext48 3F48                                   __ptext65 3F9A  
                                 __ptext57 3F34                                   __ptext49 3B40  
                                 __ptext66 3EAA                                   __ptext67 0000  
                                 __ptext59 3EDC                           __size_of_isupper 0038  
                                 _lcd_fill 380C                                   _lcd_init 1708  
                                 _lcd_send 3EC4                           __size_of_strncmp 00EA  
                         __size_of_toupper 005E                                 ?_vsnprintf 007B  
                            __size_of_atoi 019A                              __size_of_ctoa 005A  
                            __size_of_main 01DA                              __size_of_dtoa 02DE  
                            __size_of_otoa 01EA                              __size_of_stoa 0182  
                            __size_of_utoa 0200                              __size_of_xtoa 02D4  
                                stoa@F1152 00EC                      lcd_draw_char@bg_color 0014  
               __end_of_INT0_InterruptCall 3EC4                                   int$flags 005B  
                                 _vfprintf 38F8                      lcd_draw_char@fg_color 0012  
       __end_of_INTERRUPT_InterruptManager 0062                 _INTERRUPT_InterruptManager 0008  
                   __end_of_lcd_draw_pixel 3F0A                                   _snprintf 3D66  
                 __end_of_lcd_set_cursor_x 3B40                   __end_of_lcd_set_cursor_y 3AF8  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0005  
                         ___aomod@dividend 0003                             _vfpfcnvrt$1363 0064  
                           _vfpfcnvrt$1364 0066                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0022                                   isalpha@c 0003  
                                 isdigit@c 0003                     ??_INTERRUPT_Initialize 0003  
                               vsnprintf@f 008B                                 vsnprintf@n 007D  
                               vsnprintf@s 007B                         _EXT_INT_Initialize 3F20  
                            _lcd_draw_char 2C5C                                  snprintf@n 0093  
                                snprintf@s 0091                                   intlevel2 0000  
                           _lcd_set_cursor 3BCA                          lcd_set_cursor_x@x 0006  
                        lcd_set_cursor_y@y 0006                                   islower@c 0003  
                                 isspace@c 0003                           ___lldiv@dividend 000F  
                  ?_PIN_MANAGER_Initialize 0001            __end_of_ADC_GetConversionResult 3F48  
                      ?_EXT_INT_Initialize 0001                                   isupper@c 0003  
                                strncmp@_l 0003                                  strncmp@_r 0005  
                         ??_ADC_Initialize 0003                     __size_of_INT0_CallBack 002E  
                         _SPI_ExchangeByte 3E90                    lcd_draw_string@bg_color 002A  
                       __CFG_WDTPS$1048576 000000                            ___aomod@divisor 000B  
                  lcd_draw_string@fg_color 0028                            ?_lcd_draw_pixel 0006  
                              ??_vfpfcnvrt 004B                                   stoa@nuls 0011  
                          ___aomod@counter 0013                       ??_EXT_INT_Initialize 0005  
                           _vsnprintf$2064 0087                           ___lldiv@quotient 0017  
                                 strncmp@l 000A                                   strncmp@n 0007  
                                 strncmp@r 000C                                   toupper@c 0009  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 3C0C  
                           ?_lcd_draw_char 000C                               ___aodiv@sign 0014  
           __end_of_PIN_MANAGER_Initialize 3B86                                ??_vsnprintf 0083  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 3EDC  
                             ___aomod@sign 0014                            _TMR1_Initialize 3E20  
