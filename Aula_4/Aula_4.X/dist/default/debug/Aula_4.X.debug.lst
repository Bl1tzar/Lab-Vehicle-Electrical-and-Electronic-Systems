

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 02 10:55:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F46K80 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     
   113                           	psect	idataBANK0
   114  0021AC                     __pidataBANK0:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _menu
   118  0021AC  0001               	dw	1
   119                           
   120                           	psect	mediumconst
   121  00F204                     __pmediumconst:
   122                           	opt callstack 0
   123  00F204  00                 	db	0
   124  00F205                     _font:
   125                           	opt callstack 0
   126  00F205  0004               	dw	4
   127  00F207  0000               	dw	0
   128  00F209  0000               	dw	0
   129  00F20B  0000               	dw	0
   130  00F20D  0000               	dw	0
   131  00F20F  0000               	dw	0
   132  00F211  0000               	dw	0
   133  00F213  0000               	dw	0
   134  00F215  0000               	dw	0
   135  00F217  0003               	dw	3
   136  00F219  0000               	dw	0
   137  00F21B  0000               	dw	0
   138  00F21D  00FE               	dw	254
   139  00F21F  001B               	dw	27
   140  00F221  0000               	dw	0
   141  00F223  0000               	dw	0
   142  00F225  0005               	dw	5
   143  00F227  001E               	dw	30
   144  00F229  0000               	dw	0
   145  00F22B  0000               	dw	0
   146  00F22D  0000               	dw	0
   147  00F22F  0000               	dw	0
   148  00F231  0000               	dw	0
   149  00F233  001E               	dw	30
   150  00F235  0000               	dw	0
   151  00F237  0000               	dw	0
   152  00F239  0000               	dw	0
   153  00F23B  000B               	dw	11
   154  00F23D  0000               	dw	0
   155  00F23F  0000               	dw	0
   156  00F241  0010               	dw	16
   157  00F243  0001               	dw	1
   158  00F245  0010               	dw	16
   159  00F247  001D               	dw	29
   160  00F249  00F0               	dw	240
   161  00F24B  0003               	dw	3
   162  00F24D  001E               	dw	30
   163  00F24F  0001               	dw	1
   164  00F251  0010               	dw	16
   165  00F253  0001               	dw	1
   166  00F255  0010               	dw	16
   167  00F257  001D               	dw	29
   168  00F259  00F0               	dw	240
   169  00F25B  0003               	dw	3
   170  00F25D  001E               	dw	30
   171  00F25F  0001               	dw	1
   172  00F261  0010               	dw	16
   173  00F263  0001               	dw	1
   174  00F265  0000               	dw	0
   175  00F267  0000               	dw	0
   176  00F269  0009               	dw	9
   177  00F26B  0000               	dw	0
   178  00F26D  0004               	dw	4
   179  00F26F  001C               	dw	28
   180  00F271  0008               	dw	8
   181  00F273  0022               	dw	34
   182  00F275  0010               	dw	16
   183  00F277  0042               	dw	66
   184  00F279  0010               	dw	16
   185  00F27B  00FF               	dw	255
   186  00F27D  007F               	dw	127
   187  00F27F  0042               	dw	66
   188  00F281  0010               	dw	16
   189  00F283  0084               	dw	132
   190  00F285  0010               	dw	16
   191  00F287  0000               	dw	0
   192  00F289  000F               	dw	15
   193  00F28B  0000               	dw	0
   194  00F28D  0000               	dw	0
   195  00F28F  000C               	dw	12
   196  00F291  001C               	dw	28
   197  00F293  0000               	dw	0
   198  00F295  0022               	dw	34
   199  00F297  0010               	dw	16
   200  00F299  0022               	dw	34
   201  00F29B  0008               	dw	8
   202  00F29D  0022               	dw	34
   203  00F29F  0006               	dw	6
   204  00F2A1  001C               	dw	28
   205  00F2A3  0001               	dw	1
   206  00F2A5  00C0               	dw	192
   207  00F2A7  0000               	dw	0
   208  00F2A9  0020               	dw	32
   209  00F2AB  000E               	dw	14
   210  00F2AD  0018               	dw	24
   211  00F2AF  0011               	dw	17
   212  00F2B1  0004               	dw	4
   213  00F2B3  0011               	dw	17
   214  00F2B5  0002               	dw	2
   215  00F2B7  0011               	dw	17
   216  00F2B9  0000               	dw	0
   217  00F2BB  000E               	dw	14
   218  00F2BD  0000               	dw	0
   219  00F2BF  0000               	dw	0
   220  00F2C1  000B               	dw	11
   221  00F2C3  0000               	dw	0
   222  00F2C5  0000               	dw	0
   223  00F2C7  0000               	dw	0
   224  00F2C9  000E               	dw	14
   225  00F2CB  001C               	dw	28
   226  00F2CD  0011               	dw	17
   227  00F2CF  00A2               	dw	162
   228  00F2D1  0010               	dw	16
   229  00F2D3  00C2               	dw	194
   230  00F2D5  0010               	dw	16
   231  00F2D7  0022               	dw	34
   232  00F2D9  0011               	dw	17
   233  00F2DB  001C               	dw	28
   234  00F2DD  000A               	dw	10
   235  00F2DF  0000               	dw	0
   236  00F2E1  000C               	dw	12
   237  00F2E3  0000               	dw	0
   238  00F2E5  000C               	dw	12
   239  00F2E7  0000               	dw	0
   240  00F2E9  0012               	dw	18
   241  00F2EB  0000               	dw	0
   242  00F2ED  0000               	dw	0
   243  00F2EF  0003               	dw	3
   244  00F2F1  0000               	dw	0
   245  00F2F3  0000               	dw	0
   246  00F2F5  001E               	dw	30
   247  00F2F7  0000               	dw	0
   248  00F2F9  0000               	dw	0
   249  00F2FB  0000               	dw	0
   250  00F2FD  0006               	dw	6
   251  00F2FF  0000               	dw	0
   252  00F301  0000               	dw	0
   253  00F303  0000               	dw	0
   254  00F305  0000               	dw	0
   255  00F307  00E0               	dw	224
   256  00F309  001F               	dw	31
   257  00F30B  001C               	dw	28
   258  00F30D  0060               	dw	96
   259  00F30F  0002               	dw	2
   260  00F311  0080               	dw	128
   261  00F313  0000               	dw	0
   262  00F315  0000               	dw	0
   263  00F317  0004               	dw	4
   264  00F319  0000               	dw	0
   265  00F31B  0000               	dw	0
   266  00F31D  0006               	dw	6
   267  00F31F  00C0               	dw	192
   268  00F321  00F8               	dw	248
   269  00F323  003F               	dw	63
   270  00F325  0000               	dw	0
   271  00F327  0000               	dw	0
   272  00F329  0006               	dw	6
   273  00F32B  0024               	dw	36
   274  00F32D  0000               	dw	0
   275  00F32F  0018               	dw	24
   276  00F331  0000               	dw	0
   277  00F333  007E               	dw	126
   278  00F335  0000               	dw	0
   279  00F337  0018               	dw	24
   280  00F339  0000               	dw	0
   281  00F33B  0024               	dw	36
   282  00F33D  0000               	dw	0
   283  00F33F  0000               	dw	0
   284  00F341  0000               	dw	0
   285  00F343  0009               	dw	9
   286  00F345  0000               	dw	0
   287  00F347  0000               	dw	0
   288  00F349  0080               	dw	128
   289  00F34B  0000               	dw	0
   290  00F34D  0080               	dw	128
   291  00F34F  0000               	dw	0
   292  00F351  0080               	dw	128
   293  00F353  0000               	dw	0
   294  00F355  00F0               	dw	240
   295  00F357  0007               	dw	7
   296  00F359  0080               	dw	128
   297  00F35B  0000               	dw	0
   298  00F35D  0080               	dw	128
   299  00F35F  0000               	dw	0
   300  00F361  0080               	dw	128
   301  00F363  0000               	dw	0
   302  00F365  0000               	dw	0
   303  00F367  0000               	dw	0
   304  00F369  0004               	dw	4
   305  00F36B  0000               	dw	0
   306  00F36D  0000               	dw	0
   307  00F36F  0000               	dw	0
   308  00F371  0060               	dw	96
   309  00F373  0000               	dw	0
   310  00F375  0018               	dw	24
   311  00F377  0000               	dw	0
   312  00F379  0000               	dw	0
   313  00F37B  0005               	dw	5
   314  00F37D  0000               	dw	0
   315  00F37F  0001               	dw	1
   316  00F381  0000               	dw	0
   317  00F383  0001               	dw	1
   318  00F385  0000               	dw	0
   319  00F387  0001               	dw	1
   320  00F389  0000               	dw	0
   321  00F38B  0001               	dw	1
   322  00F38D  0000               	dw	0
   323  00F38F  0000               	dw	0
   324  00F391  0004               	dw	4
   325  00F393  0000               	dw	0
   326  00F395  0000               	dw	0
   327  00F397  0000               	dw	0
   328  00F399  0018               	dw	24
   329  00F39B  0000               	dw	0
   330  00F39D  0018               	dw	24
   331  00F39F  0000               	dw	0
   332  00F3A1  0000               	dw	0
   333  00F3A3  0008               	dw	8
   334  00F3A5  0000               	dw	0
   335  00F3A7  0000               	dw	0
   336  00F3A9  0000               	dw	0
   337  00F3AB  0040               	dw	64
   338  00F3AD  0000               	dw	0
   339  00F3AF  0038               	dw	56
   340  00F3B1  0000               	dw	0
   341  00F3B3  0007               	dw	7
   342  00F3B5  00E0               	dw	224
   343  00F3B7  0000               	dw	0
   344  00F3B9  001C               	dw	28
   345  00F3BB  0000               	dw	0
   346  00F3BD  0002               	dw	2
   347  00F3BF  0000               	dw	0
   348  00F3C1  0000               	dw	0
   349  00F3C3  0000               	dw	0
   350  00F3C5  0009               	dw	9
   351  00F3C7  00F8               	dw	248
   352  00F3C9  0007               	dw	7
   353  00F3CB  0004               	dw	4
   354  00F3CD  0008               	dw	8
   355  00F3CF  0002               	dw	2
   356  00F3D1  0010               	dw	16
   357  00F3D3  0002               	dw	2
   358  00F3D5  0010               	dw	16
   359  00F3D7  0002               	dw	2
   360  00F3D9  0010               	dw	16
   361  00F3DB  0002               	dw	2
   362  00F3DD  0010               	dw	16
   363  00F3DF  0004               	dw	4
   364  00F3E1  0008               	dw	8
   365  00F3E3  00F8               	dw	248
   366  00F3E5  0007               	dw	7
   367  00F3E7  0000               	dw	0
   368  00F3E9  0000               	dw	0
   369  00F3EB  0006               	dw	6
   370  00F3ED  0000               	dw	0
   371  00F3EF  0000               	dw	0
   372  00F3F1  0000               	dw	0
   373  00F3F3  0000               	dw	0
   374  00F3F5  0002               	dw	2
   375  00F3F7  0000               	dw	0
   376  00F3F9  0002               	dw	2
   377  00F3FB  0000               	dw	0
   378  00F3FD  00FE               	dw	254
   379  00F3FF  001F               	dw	31
   380  00F401  0000               	dw	0
   381  00F403  0000               	dw	0
   382  00F405  0009               	dw	9
   383  00F407  0018               	dw	24
   384  00F409  0010               	dw	16
   385  00F40B  0004               	dw	4
   386  00F40D  0018               	dw	24
   387  00F40F  0002               	dw	2
   388  00F411  0014               	dw	20
   389  00F413  0002               	dw	2
   390  00F415  0012               	dw	18
   391  00F417  0002               	dw	2
   392  00F419  0011               	dw	17
   393  00F41B  0082               	dw	130
   394  00F41D  0010               	dw	16
   395  00F41F  0044               	dw	68
   396  00F421  0010               	dw	16
   397  00F423  0038               	dw	56
   398  00F425  0010               	dw	16
   399  00F427  0000               	dw	0
   400  00F429  0000               	dw	0
   401  00F42B  0009               	dw	9
   402  00F42D  0008               	dw	8
   403  00F42F  000C               	dw	12
   404  00F431  0004               	dw	4
   405  00F433  0010               	dw	16
   406  00F435  0002               	dw	2
   407  00F437  0010               	dw	16
   408  00F439  0042               	dw	66
   409  00F43B  0010               	dw	16
   410  00F43D  0042               	dw	66
   411  00F43F  0010               	dw	16
   412  00F441  0044               	dw	68
   413  00F443  0010               	dw	16
   414  00F445  00B8               	dw	184
   415  00F447  0008               	dw	8
   416  00F449  0000               	dw	0
   417  00F44B  0007               	dw	7
   418  00F44D  0000               	dw	0
   419  00F44F  0000               	dw	0
   420  00F451  0009               	dw	9
   421  00F453  0000               	dw	0
   422  00F455  0002               	dw	2
   423  00F457  0000               	dw	0
   424  00F459  0003               	dw	3
   425  00F45B  0080               	dw	128
   426  00F45D  0002               	dw	2
   427  00F45F  0060               	dw	96
   428  00F461  0002               	dw	2
   429  00F463  0010               	dw	16
   430  00F465  0002               	dw	2
   431  00F467  0008               	dw	8
   432  00F469  0002               	dw	2
   433  00F46B  00FE               	dw	254
   434  00F46D  001F               	dw	31
   435  00F46F  0000               	dw	0
   436  00F471  0002               	dw	2
   437  00F473  0000               	dw	0
   438  00F475  0000               	dw	0
   439  00F477  0009               	dw	9
   440  00F479  0000               	dw	0
   441  00F47B  0004               	dw	4
   442  00F47D  0070               	dw	112
   443  00F47F  0008               	dw	8
   444  00F481  002E               	dw	46
   445  00F483  0010               	dw	16
   446  00F485  0022               	dw	34
   447  00F487  0010               	dw	16
   448  00F489  0022               	dw	34
   449  00F48B  0010               	dw	16
   450  00F48D  0022               	dw	34
   451  00F48F  0010               	dw	16
   452  00F491  0042               	dw	66
   453  00F493  0008               	dw	8
   454  00F495  0082               	dw	130
   455  00F497  0007               	dw	7
   456  00F499  0000               	dw	0
   457  00F49B  0000               	dw	0
   458  00F49D  0009               	dw	9
   459  00F49F  0000               	dw	0
   460  00F4A1  0000               	dw	0
   461  00F4A3  0000               	dw	0
   462  00F4A5  0007               	dw	7
   463  00F4A7  00C0               	dw	192
   464  00F4A9  0008               	dw	8
   465  00F4AB  0060               	dw	96
   466  00F4AD  0010               	dw	16
   467  00F4AF  0058               	dw	88
   468  00F4B1  0010               	dw	16
   469  00F4B3  0044               	dw	68
   470  00F4B5  0010               	dw	16
   471  00F4B7  0082               	dw	130
   472  00F4B9  0008               	dw	8
   473  00F4BB  0000               	dw	0
   474  00F4BD  0007               	dw	7
   475  00F4BF  0000               	dw	0
   476  00F4C1  0000               	dw	0
   477  00F4C3  0009               	dw	9
   478  00F4C5  0000               	dw	0
   479  00F4C7  0000               	dw	0
   480  00F4C9  0002               	dw	2
   481  00F4CB  0010               	dw	16
   482  00F4CD  0002               	dw	2
   483  00F4CF  000C               	dw	12
   484  00F4D1  0002               	dw	2
   485  00F4D3  0003               	dw	3
   486  00F4D5  00C2               	dw	194
   487  00F4D7  0000               	dw	0
   488  00F4D9  0032               	dw	50
   489  00F4DB  0000               	dw	0
   490  00F4DD  000E               	dw	14
   491  00F4DF  0000               	dw	0
   492  00F4E1  0002               	dw	2
   493  00F4E3  0000               	dw	0
   494  00F4E5  0000               	dw	0
   495  00F4E7  0000               	dw	0
   496  00F4E9  0009               	dw	9
   497  00F4EB  0000               	dw	0
   498  00F4ED  0007               	dw	7
   499  00F4EF  0098               	dw	152
   500  00F4F1  0008               	dw	8
   501  00F4F3  0064               	dw	100
   502  00F4F5  0010               	dw	16
   503  00F4F7  0042               	dw	66
   504  00F4F9  0010               	dw	16
   505  00F4FB  0042               	dw	66
   506  00F4FD  0010               	dw	16
   507  00F4FF  0064               	dw	100
   508  00F501  0010               	dw	16
   509  00F503  0098               	dw	152
   510  00F505  0008               	dw	8
   511  00F507  0000               	dw	0
   512  00F509  0007               	dw	7
   513  00F50B  0000               	dw	0
   514  00F50D  0000               	dw	0
   515  00F50F  0009               	dw	9
   516  00F511  0000               	dw	0
   517  00F513  0000               	dw	0
   518  00F515  0038               	dw	56
   519  00F517  0000               	dw	0
   520  00F519  0044               	dw	68
   521  00F51B  0010               	dw	16
   522  00F51D  0082               	dw	130
   523  00F51F  0008               	dw	8
   524  00F521  0082               	dw	130
   525  00F523  0004               	dw	4
   526  00F525  0082               	dw	130
   527  00F527  0003               	dw	3
   528  00F529  0084               	dw	132
   529  00F52B  0000               	dw	0
   530  00F52D  0078               	dw	120
   531  00F52F  0000               	dw	0
   532  00F531  0000               	dw	0
   533  00F533  0000               	dw	0
   534  00F535  0004               	dw	4
   535  00F537  0000               	dw	0
   536  00F539  0000               	dw	0
   537  00F53B  0030               	dw	48
   538  00F53D  0018               	dw	24
   539  00F53F  0030               	dw	48
   540  00F541  0018               	dw	24
   541  00F543  0000               	dw	0
   542  00F545  0000               	dw	0
   543  00F547  0004               	dw	4
   544  00F549  0000               	dw	0
   545  00F54B  0000               	dw	0
   546  00F54D  0030               	dw	48
   547  00F54F  0060               	dw	96
   548  00F551  0030               	dw	48
   549  00F553  0018               	dw	24
   550  00F555  0000               	dw	0
   551  00F557  0000               	dw	0
   552  00F559  000A               	dw	10
   553  00F55B  0000               	dw	0
   554  00F55D  0000               	dw	0
   555  00F55F  0080               	dw	128
   556  00F561  0000               	dw	0
   557  00F563  0080               	dw	128
   558  00F565  0000               	dw	0
   559  00F567  0040               	dw	64
   560  00F569  0001               	dw	1
   561  00F56B  0020               	dw	32
   562  00F56D  0002               	dw	2
   563  00F56F  0020               	dw	32
   564  00F571  0002               	dw	2
   565  00F573  0010               	dw	16
   566  00F575  0004               	dw	4
   567  00F577  0010               	dw	16
   568  00F579  0004               	dw	4
   569  00F57B  0008               	dw	8
   570  00F57D  0008               	dw	8
   571  00F57F  0000               	dw	0
   572  00F581  0000               	dw	0
   573  00F583  000A               	dw	10
   574  00F585  0000               	dw	0
   575  00F587  0000               	dw	0
   576  00F589  0020               	dw	32
   577  00F58B  0001               	dw	1
   578  00F58D  0020               	dw	32
   579  00F58F  0001               	dw	1
   580  00F591  0020               	dw	32
   581  00F593  0001               	dw	1
   582  00F595  0020               	dw	32
   583  00F597  0001               	dw	1
   584  00F599  0020               	dw	32
   585  00F59B  0001               	dw	1
   586  00F59D  0020               	dw	32
   587  00F59F  0001               	dw	1
   588  00F5A1  0020               	dw	32
   589  00F5A3  0001               	dw	1
   590  00F5A5  0020               	dw	32
   591  00F5A7  0001               	dw	1
   592  00F5A9  0000               	dw	0
   593  00F5AB  0000               	dw	0
   594  00F5AD  000A               	dw	10
   595  00F5AF  0000               	dw	0
   596  00F5B1  0000               	dw	0
   597  00F5B3  0008               	dw	8
   598  00F5B5  0008               	dw	8
   599  00F5B7  0010               	dw	16
   600  00F5B9  0004               	dw	4
   601  00F5BB  0010               	dw	16
   602  00F5BD  0004               	dw	4
   603  00F5BF  0020               	dw	32
   604  00F5C1  0002               	dw	2
   605  00F5C3  0020               	dw	32
   606  00F5C5  0002               	dw	2
   607  00F5C7  0040               	dw	64
   608  00F5C9  0001               	dw	1
   609  00F5CB  0080               	dw	128
   610  00F5CD  0000               	dw	0
   611  00F5CF  0080               	dw	128
   612  00F5D1  0000               	dw	0
   613  00F5D3  0000               	dw	0
   614  00F5D5  0000               	dw	0
   615  00F5D7  0008               	dw	8
   616  00F5D9  0000               	dw	0
   617  00F5DB  0000               	dw	0
   618  00F5DD  000C               	dw	12
   619  00F5DF  0000               	dw	0
   620  00F5E1  0082               	dw	130
   621  00F5E3  0001               	dw	1
   622  00F5E5  0042               	dw	66
   623  00F5E7  0002               	dw	2
   624  00F5E9  0022               	dw	34
   625  00F5EB  001A               	dw	26
   626  00F5ED  0022               	dw	34
   627  00F5EF  001A               	dw	26
   628  00F5F1  009C               	dw	156
   629  00F5F3  0001               	dw	1
   630  00F5F5  0000               	dw	0
   631  00F5F7  0000               	dw	0
   632  00F5F9  000E               	dw	14
   633  00F5FB  0000               	dw	0
   634  00F5FD  0000               	dw	0
   635  00F5FF  00F0               	dw	240
   636  00F601  0003               	dw	3
   637  00F603  0008               	dw	8
   638  00F605  0004               	dw	4
   639  00F607  0004               	dw	4
   640  00F609  0008               	dw	8
   641  00F60B  00C2               	dw	194
   642  00F60D  0011               	dw	17
   643  00F60F  0022               	dw	34
   644  00F611  0012               	dw	18
   645  00F613  0012               	dw	18
   646  00F615  0012               	dw	18
   647  00F617  0012               	dw	18
   648  00F619  0012               	dw	18
   649  00F61B  00E2               	dw	226
   650  00F61D  0011               	dw	17
   651  00F61F  0012               	dw	18
   652  00F621  0012               	dw	18
   653  00F623  0004               	dw	4
   654  00F625  0012               	dw	18
   655  00F627  0008               	dw	8
   656  00F629  0009               	dw	9
   657  00F62B  00F0               	dw	240
   658  00F62D  0004               	dw	4
   659  00F62F  0000               	dw	0
   660  00F631  0000               	dw	0
   661  00F633  000D               	dw	13
   662  00F635  0000               	dw	0
   663  00F637  0000               	dw	0
   664  00F639  0000               	dw	0
   665  00F63B  0010               	dw	16
   666  00F63D  0000               	dw	0
   667  00F63F  000E               	dw	14
   668  00F641  0080               	dw	128
   669  00F643  0001               	dw	1
   670  00F645  0060               	dw	96
   671  00F647  0001               	dw	1
   672  00F649  001C               	dw	28
   673  00F64B  0001               	dw	1
   674  00F64D  0002               	dw	2
   675  00F64F  0001               	dw	1
   676  00F651  001C               	dw	28
   677  00F653  0001               	dw	1
   678  00F655  0060               	dw	96
   679  00F657  0001               	dw	1
   680  00F659  0080               	dw	128
   681  00F65B  0001               	dw	1
   682  00F65D  0000               	dw	0
   683  00F65F  000E               	dw	14
   684  00F661  0000               	dw	0
   685  00F663  0010               	dw	16
   686  00F665  0000               	dw	0
   687  00F667  0000               	dw	0
   688  00F669  0009               	dw	9
   689  00F66B  0000               	dw	0
   690  00F66D  0000               	dw	0
   691  00F66F  0000               	dw	0
   692  00F671  0000               	dw	0
   693  00F673  00FE               	dw	254
   694  00F675  001F               	dw	31
   695  00F677  0042               	dw	66
   696  00F679  0010               	dw	16
   697  00F67B  0042               	dw	66
   698  00F67D  0010               	dw	16
   699  00F67F  0064               	dw	100
   700  00F681  0010               	dw	16
   701  00F683  0098               	dw	152
   702  00F685  0008               	dw	8
   703  00F687  0000               	dw	0
   704  00F689  0007               	dw	7
   705  00F68B  0000               	dw	0
   706  00F68D  0000               	dw	0
   707  00F68F  000D               	dw	13
   708  00F691  0000               	dw	0
   709  00F693  0000               	dw	0
   710  00F695  00F0               	dw	240
   711  00F697  0003               	dw	3
   712  00F699  0008               	dw	8
   713  00F69B  0004               	dw	4
   714  00F69D  0004               	dw	4
   715  00F69F  0008               	dw	8
   716  00F6A1  0002               	dw	2
   717  00F6A3  0010               	dw	16
   718  00F6A5  0002               	dw	2
   719  00F6A7  0010               	dw	16
   720  00F6A9  0002               	dw	2
   721  00F6AB  0010               	dw	16
   722  00F6AD  0002               	dw	2
   723  00F6AF  0010               	dw	16
   724  00F6B1  0002               	dw	2
   725  00F6B3  0010               	dw	16
   726  00F6B5  0004               	dw	4
   727  00F6B7  0008               	dw	8
   728  00F6B9  0004               	dw	4
   729  00F6BB  0008               	dw	8
   730  00F6BD  0008               	dw	8
   731  00F6BF  0004               	dw	4
   732  00F6C1  0000               	dw	0
   733  00F6C3  0000               	dw	0
   734  00F6C5  000C               	dw	12
   735  00F6C7  0000               	dw	0
   736  00F6C9  0000               	dw	0
   737  00F6CB  0000               	dw	0
   738  00F6CD  0000               	dw	0
   739  00F6CF  00FE               	dw	254
   740  00F6D1  001F               	dw	31
   741  00F6D3  0002               	dw	2
   742  00F6D5  0010               	dw	16
   743  00F6D7  0002               	dw	2
   744  00F6D9  0010               	dw	16
   745  00F6DB  0002               	dw	2
   746  00F6DD  0010               	dw	16
   747  00F6DF  0002               	dw	2
   748  00F6E1  0010               	dw	16
   749  00F6E3  0002               	dw	2
   750  00F6E5  0010               	dw	16
   751  00F6E7  0004               	dw	4
   752  00F6E9  0008               	dw	8
   753  00F6EB  0008               	dw	8
   754  00F6ED  0004               	dw	4
   755  00F6EF  00F0               	dw	240
   756  00F6F1  0003               	dw	3
   757  00F6F3  0000               	dw	0
   758  00F6F5  0000               	dw	0
   759  00F6F7  0009               	dw	9
   760  00F6F9  0000               	dw	0
   761  00F6FB  0000               	dw	0
   762  00F6FD  0000               	dw	0
   763  00F6FF  0000               	dw	0
   764  00F701  00FE               	dw	254
   765  00F703  001F               	dw	31
   766  00F705  0042               	dw	66
   767  00F707  0010               	dw	16
   768  00F709  0042               	dw	66
   769  00F70B  0010               	dw	16
   770  00F70D  0042               	dw	66
   771  00F70F  0010               	dw	16
   772  00F711  0042               	dw	66
   773  00F713  0010               	dw	16
   774  00F715  0042               	dw	66
   775  00F717  0010               	dw	16
   776  00F719  0000               	dw	0
   777  00F71B  0000               	dw	0
   778  00F71D  0008               	dw	8
   779  00F71F  0000               	dw	0
   780  00F721  0000               	dw	0
   781  00F723  0000               	dw	0
   782  00F725  0000               	dw	0
   783  00F727  00FE               	dw	254
   784  00F729  001F               	dw	31
   785  00F72B  0042               	dw	66
   786  00F72D  0000               	dw	0
   787  00F72F  0042               	dw	66
   788  00F731  0000               	dw	0
   789  00F733  0042               	dw	66
   790  00F735  0000               	dw	0
   791  00F737  0042               	dw	66
   792  00F739  0000               	dw	0
   793  00F73B  0000               	dw	0
   794  00F73D  0000               	dw	0
   795  00F73F  000E               	dw	14
   796  00F741  0000               	dw	0
   797  00F743  0000               	dw	0
   798  00F745  00F0               	dw	240
   799  00F747  0003               	dw	3
   800  00F749  0008               	dw	8
   801  00F74B  0004               	dw	4
   802  00F74D  0004               	dw	4
   803  00F74F  0008               	dw	8
   804  00F751  0002               	dw	2
   805  00F753  0010               	dw	16
   806  00F755  0002               	dw	2
   807  00F757  0010               	dw	16
   808  00F759  0002               	dw	2
   809  00F75B  0010               	dw	16
   810  00F75D  0002               	dw	2
   811  00F75F  0010               	dw	16
   812  00F761  0082               	dw	130
   813  00F763  0010               	dw	16
   814  00F765  0084               	dw	132
   815  00F767  0010               	dw	16
   816  00F769  0084               	dw	132
   817  00F76B  0008               	dw	8
   818  00F76D  0088               	dw	136
   819  00F76F  0004               	dw	4
   820  00F771  0080               	dw	128
   821  00F773  0003               	dw	3
   822  00F775  0000               	dw	0
   823  00F777  0000               	dw	0
   824  00F779  000A               	dw	10
   825  00F77B  0000               	dw	0
   826  00F77D  0000               	dw	0
   827  00F77F  0000               	dw	0
   828  00F781  0000               	dw	0
   829  00F783  00FE               	dw	254
   830  00F785  001F               	dw	31
   831  00F787  0040               	dw	64
   832  00F789  0000               	dw	0
   833  00F78B  0040               	dw	64
   834  00F78D  0000               	dw	0
   835  00F78F  0040               	dw	64
   836  00F791  0000               	dw	0
   837  00F793  0040               	dw	64
   838  00F795  0000               	dw	0
   839  00F797  0040               	dw	64
   840  00F799  0000               	dw	0
   841  00F79B  00FE               	dw	254
   842  00F79D  001F               	dw	31
   843  00F79F  0000               	dw	0
   844  00F7A1  0000               	dw	0
   845  00F7A3  0004               	dw	4
   846  00F7A5  0000               	dw	0
   847  00F7A7  0000               	dw	0
   848  00F7A9  0000               	dw	0
   849  00F7AB  0000               	dw	0
   850  00F7AD  00FE               	dw	254
   851  00F7AF  001F               	dw	31
   852  00F7B1  0000               	dw	0
   853  00F7B3  0000               	dw	0
   854  00F7B5  0007               	dw	7
   855  00F7B7  0000               	dw	0
   856  00F7B9  0000               	dw	0
   857  00F7BB  0000               	dw	0
   858  00F7BD  0008               	dw	8
   859  00F7BF  0000               	dw	0
   860  00F7C1  0010               	dw	16
   861  00F7C3  0000               	dw	0
   862  00F7C5  0010               	dw	16
   863  00F7C7  0000               	dw	0
   864  00F7C9  0008               	dw	8
   865  00F7CB  00FE               	dw	254
   866  00F7CD  0007               	dw	7
   867  00F7CF  0000               	dw	0
   868  00F7D1  0000               	dw	0
   869  00F7D3  0009               	dw	9
   870  00F7D5  0000               	dw	0
   871  00F7D7  0000               	dw	0
   872  00F7D9  0000               	dw	0
   873  00F7DB  0000               	dw	0
   874  00F7DD  00FE               	dw	254
   875  00F7DF  001F               	dw	31
   876  00F7E1  0060               	dw	96
   877  00F7E3  0000               	dw	0
   878  00F7E5  0090               	dw	144
   879  00F7E7  0001               	dw	1
   880  00F7E9  0008               	dw	8
   881  00F7EB  0002               	dw	2
   882  00F7ED  0004               	dw	4
   883  00F7EF  000C               	dw	12
   884  00F7F1  0002               	dw	2
   885  00F7F3  0010               	dw	16
   886  00F7F5  0000               	dw	0
   887  00F7F7  0000               	dw	0
   888  00F7F9  0008               	dw	8
   889  00F7FB  0000               	dw	0
   890  00F7FD  0000               	dw	0
   891  00F7FF  0000               	dw	0
   892  00F801  0000               	dw	0
   893  00F803  00FE               	dw	254
   894  00F805  001F               	dw	31
   895  00F807  0000               	dw	0
   896  00F809  0010               	dw	16
   897  00F80B  0000               	dw	0
   898  00F80D  0010               	dw	16
   899  00F80F  0000               	dw	0
   900  00F811  0010               	dw	16
   901  00F813  0000               	dw	0
   902  00F815  0010               	dw	16
   903  00F817  0000               	dw	0
   904  00F819  0000               	dw	0
   905  00F81B  000F               	dw	15
   906  00F81D  0000               	dw	0
   907  00F81F  0000               	dw	0
   908  00F821  0000               	dw	0
   909  00F823  001C               	dw	28
   910  00F825  00F8               	dw	248
   911  00F827  0003               	dw	3
   912  00F829  0006               	dw	6
   913  00F82B  0000               	dw	0
   914  00F82D  0038               	dw	56
   915  00F82F  0000               	dw	0
   916  00F831  00C0               	dw	192
   917  00F833  0001               	dw	1
   918  00F835  0000               	dw	0
   919  00F837  000E               	dw	14
   920  00F839  0000               	dw	0
   921  00F83B  0010               	dw	16
   922  00F83D  0000               	dw	0
   923  00F83F  000E               	dw	14
   924  00F841  00C0               	dw	192
   925  00F843  0001               	dw	1
   926  00F845  0038               	dw	56
   927  00F847  0000               	dw	0
   928  00F849  0006               	dw	6
   929  00F84B  0000               	dw	0
   930  00F84D  00F8               	dw	248
   931  00F84F  0003               	dw	3
   932  00F851  0000               	dw	0
   933  00F853  001C               	dw	28
   934  00F855  0000               	dw	0
   935  00F857  0000               	dw	0
   936  00F859  000B               	dw	11
   937  00F85B  0000               	dw	0
   938  00F85D  0000               	dw	0
   939  00F85F  0000               	dw	0
   940  00F861  0000               	dw	0
   941  00F863  00FE               	dw	254
   942  00F865  001F               	dw	31
   943  00F867  0008               	dw	8
   944  00F869  0000               	dw	0
   945  00F86B  0030               	dw	48
   946  00F86D  0000               	dw	0
   947  00F86F  0040               	dw	64
   948  00F871  0000               	dw	0
   949  00F873  0080               	dw	128
   950  00F875  0000               	dw	0
   951  00F877  0000               	dw	0
   952  00F879  0003               	dw	3
   953  00F87B  0000               	dw	0
   954  00F87D  0004               	dw	4
   955  00F87F  00FE               	dw	254
   956  00F881  001F               	dw	31
   957  00F883  0000               	dw	0
   958  00F885  0000               	dw	0
   959  00F887  000E               	dw	14
   960  00F889  0000               	dw	0
   961  00F88B  0000               	dw	0
   962  00F88D  00F0               	dw	240
   963  00F88F  0003               	dw	3
   964  00F891  0008               	dw	8
   965  00F893  0004               	dw	4
   966  00F895  0004               	dw	4
   967  00F897  0008               	dw	8
   968  00F899  0002               	dw	2
   969  00F89B  0010               	dw	16
   970  00F89D  0002               	dw	2
   971  00F89F  0010               	dw	16
   972  00F8A1  0002               	dw	2
   973  00F8A3  0010               	dw	16
   974  00F8A5  0002               	dw	2
   975  00F8A7  0010               	dw	16
   976  00F8A9  0002               	dw	2
   977  00F8AB  0010               	dw	16
   978  00F8AD  0002               	dw	2
   979  00F8AF  0010               	dw	16
   980  00F8B1  0004               	dw	4
   981  00F8B3  0008               	dw	8
   982  00F8B5  0008               	dw	8
   983  00F8B7  0004               	dw	4
   984  00F8B9  00F0               	dw	240
   985  00F8BB  0003               	dw	3
   986  00F8BD  0000               	dw	0
   987  00F8BF  0000               	dw	0
   988  00F8C1  0009               	dw	9
   989  00F8C3  0000               	dw	0
   990  00F8C5  0000               	dw	0
   991  00F8C7  0000               	dw	0
   992  00F8C9  0000               	dw	0
   993  00F8CB  00FE               	dw	254
   994  00F8CD  001F               	dw	31
   995  00F8CF  0042               	dw	66
   996  00F8D1  0000               	dw	0
   997  00F8D3  0042               	dw	66
   998  00F8D5  0000               	dw	0
   999  00F8D7  0042               	dw	66
  1000  00F8D9  0000               	dw	0
  1001  00F8DB  0024               	dw	36
  1002  00F8DD  0000               	dw	0
  1003  00F8DF  0018               	dw	24
  1004  00F8E1  0000               	dw	0
  1005  00F8E3  0000               	dw	0
  1006  00F8E5  0000               	dw	0
  1007  00F8E7  000E               	dw	14
  1008  00F8E9  0000               	dw	0
  1009  00F8EB  0000               	dw	0
  1010  00F8ED  00F0               	dw	240
  1011  00F8EF  0003               	dw	3
  1012  00F8F1  0008               	dw	8
  1013  00F8F3  0004               	dw	4
  1014  00F8F5  0004               	dw	4
  1015  00F8F7  0008               	dw	8
  1016  00F8F9  0002               	dw	2
  1017  00F8FB  0010               	dw	16
  1018  00F8FD  0002               	dw	2
  1019  00F8FF  0010               	dw	16
  1020  00F901  0002               	dw	2
  1021  00F903  0010               	dw	16
  1022  00F905  0002               	dw	2
  1023  00F907  0011               	dw	17
  1024  00F909  0002               	dw	2
  1025  00F90B  0012               	dw	18
  1026  00F90D  0002               	dw	2
  1027  00F90F  000C               	dw	12
  1028  00F911  0004               	dw	4
  1029  00F913  0008               	dw	8
  1030  00F915  0008               	dw	8
  1031  00F917  0016               	dw	22
  1032  00F919  00F0               	dw	240
  1033  00F91B  0021               	dw	33
  1034  00F91D  0000               	dw	0
  1035  00F91F  0000               	dw	0
  1036  00F921  000A               	dw	10
  1037  00F923  0000               	dw	0
  1038  00F925  0000               	dw	0
  1039  00F927  0000               	dw	0
  1040  00F929  0000               	dw	0
  1041  00F92B  00FE               	dw	254
  1042  00F92D  001F               	dw	31
  1043  00F92F  0042               	dw	66
  1044  00F931  0000               	dw	0
  1045  00F933  00C2               	dw	194
  1046  00F935  0000               	dw	0
  1047  00F937  0042               	dw	66
  1048  00F939  0001               	dw	1
  1049  00F93B  0042               	dw	66
  1050  00F93D  0006               	dw	6
  1051  00F93F  0024               	dw	36
  1052  00F941  0008               	dw	8
  1053  00F943  0018               	dw	24
  1054  00F945  0010               	dw	16
  1055  00F947  0000               	dw	0
  1056  00F949  0000               	dw	0
  1057  00F94B  0008               	dw	8
  1058  00F94D  0000               	dw	0
  1059  00F94F  0004               	dw	4
  1060  00F951  0018               	dw	24
  1061  00F953  0008               	dw	8
  1062  00F955  0024               	dw	36
  1063  00F957  0010               	dw	16
  1064  00F959  0042               	dw	66
  1065  00F95B  0010               	dw	16
  1066  00F95D  0042               	dw	66
  1067  00F95F  0010               	dw	16
  1068  00F961  0084               	dw	132
  1069  00F963  0008               	dw	8
  1070  00F965  0008               	dw	8
  1071  00F967  0007               	dw	7
  1072  00F969  0000               	dw	0
  1073  00F96B  0000               	dw	0
  1074  00F96D  0008               	dw	8
  1075  00F96F  0002               	dw	2
  1076  00F971  0000               	dw	0
  1077  00F973  0002               	dw	2
  1078  00F975  0000               	dw	0
  1079  00F977  0002               	dw	2
  1080  00F979  0000               	dw	0
  1081  00F97B  00FE               	dw	254
  1082  00F97D  001F               	dw	31
  1083  00F97F  0002               	dw	2
  1084  00F981  0000               	dw	0
  1085  00F983  0002               	dw	2
  1086  00F985  0000               	dw	0
  1087  00F987  0002               	dw	2
  1088  00F989  0000               	dw	0
  1089  00F98B  0000               	dw	0
  1090  00F98D  0000               	dw	0
  1091  00F98F  000A               	dw	10
  1092  00F991  0000               	dw	0
  1093  00F993  0000               	dw	0
  1094  00F995  0000               	dw	0
  1095  00F997  0000               	dw	0
  1096  00F999  00FE               	dw	254
  1097  00F99B  0007               	dw	7
  1098  00F99D  0000               	dw	0
  1099  00F99F  0008               	dw	8
  1100  00F9A1  0000               	dw	0
  1101  00F9A3  0010               	dw	16
  1102  00F9A5  0000               	dw	0
  1103  00F9A7  0010               	dw	16
  1104  00F9A9  0000               	dw	0
  1105  00F9AB  0010               	dw	16
  1106  00F9AD  0000               	dw	0
  1107  00F9AF  0008               	dw	8
  1108  00F9B1  00FE               	dw	254
  1109  00F9B3  0007               	dw	7
  1110  00F9B5  0000               	dw	0
  1111  00F9B7  0000               	dw	0
  1112  00F9B9  000C               	dw	12
  1113  00F9BB  0002               	dw	2
  1114  00F9BD  0000               	dw	0
  1115  00F9BF  001C               	dw	28
  1116  00F9C1  0000               	dw	0
  1117  00F9C3  0060               	dw	96
  1118  00F9C5  0000               	dw	0
  1119  00F9C7  0080               	dw	128
  1120  00F9C9  0001               	dw	1
  1121  00F9CB  0000               	dw	0
  1122  00F9CD  000E               	dw	14
  1123  00F9CF  0000               	dw	0
  1124  00F9D1  0010               	dw	16
  1125  00F9D3  0000               	dw	0
  1126  00F9D5  000E               	dw	14
  1127  00F9D7  0080               	dw	128
  1128  00F9D9  0001               	dw	1
  1129  00F9DB  0060               	dw	96
  1130  00F9DD  0000               	dw	0
  1131  00F9DF  001C               	dw	28
  1132  00F9E1  0000               	dw	0
  1133  00F9E3  0002               	dw	2
  1134  00F9E5  0000               	dw	0
  1135  00F9E7  0000               	dw	0
  1136  00F9E9  0000               	dw	0
  1137  00F9EB  000F               	dw	15
  1138  00F9ED  0000               	dw	0
  1139  00F9EF  0000               	dw	0
  1140  00F9F1  0006               	dw	6
  1141  00F9F3  0000               	dw	0
  1142  00F9F5  0078               	dw	120
  1143  00F9F7  0000               	dw	0
  1144  00F9F9  0080               	dw	128
  1145  00F9FB  0007               	dw	7
  1146  00F9FD  0000               	dw	0
  1147  00F9FF  0018               	dw	24
  1148  00FA01  0080               	dw	128
  1149  00FA03  0007               	dw	7
  1150  00FA05  0078               	dw	120
  1151  00FA07  0000               	dw	0
  1152  00FA09  0006               	dw	6
  1153  00FA0B  0000               	dw	0
  1154  00FA0D  0078               	dw	120
  1155  00FA0F  0000               	dw	0
  1156  00FA11  0080               	dw	128
  1157  00FA13  0007               	dw	7
  1158  00FA15  0000               	dw	0
  1159  00FA17  0018               	dw	24
  1160  00FA19  0080               	dw	128
  1161  00FA1B  0007               	dw	7
  1162  00FA1D  0078               	dw	120
  1163  00FA1F  0000               	dw	0
  1164  00FA21  0006               	dw	6
  1165  00FA23  0000               	dw	0
  1166  00FA25  0000               	dw	0
  1167  00FA27  0000               	dw	0
  1168  00FA29  0009               	dw	9
  1169  00FA2B  0000               	dw	0
  1170  00FA2D  0000               	dw	0
  1171  00FA2F  0006               	dw	6
  1172  00FA31  0018               	dw	24
  1173  00FA33  0008               	dw	8
  1174  00FA35  0004               	dw	4
  1175  00FA37  0030               	dw	48
  1176  00FA39  0003               	dw	3
  1177  00FA3B  00C0               	dw	192
  1178  00FA3D  0000               	dw	0
  1179  00FA3F  0030               	dw	48
  1180  00FA41  0003               	dw	3
  1181  00FA43  0008               	dw	8
  1182  00FA45  0004               	dw	4
  1183  00FA47  0006               	dw	6
  1184  00FA49  0018               	dw	24
  1185  00FA4B  0000               	dw	0
  1186  00FA4D  0000               	dw	0
  1187  00FA4F  000B               	dw	11
  1188  00FA51  0000               	dw	0
  1189  00FA53  0000               	dw	0
  1190  00FA55  0002               	dw	2
  1191  00FA57  0000               	dw	0
  1192  00FA59  0004               	dw	4
  1193  00FA5B  0000               	dw	0
  1194  00FA5D  0018               	dw	24
  1195  00FA5F  0000               	dw	0
  1196  00FA61  0060               	dw	96
  1197  00FA63  0000               	dw	0
  1198  00FA65  0080               	dw	128
  1199  00FA67  001F               	dw	31
  1200  00FA69  0060               	dw	96
  1201  00FA6B  0000               	dw	0
  1202  00FA6D  0018               	dw	24
  1203  00FA6F  0000               	dw	0
  1204  00FA71  0004               	dw	4
  1205  00FA73  0000               	dw	0
  1206  00FA75  0002               	dw	2
  1207  00FA77  0000               	dw	0
  1208  00FA79  0000               	dw	0
  1209  00FA7B  0000               	dw	0
  1210  00FA7D  0008               	dw	8
  1211  00FA7F  0002               	dw	2
  1212  00FA81  0010               	dw	16
  1213  00FA83  0002               	dw	2
  1214  00FA85  001C               	dw	28
  1215  00FA87  0002               	dw	2
  1216  00FA89  0013               	dw	19
  1217  00FA8B  00C2               	dw	194
  1218  00FA8D  0010               	dw	16
  1219  00FA8F  0032               	dw	50
  1220  00FA91  0010               	dw	16
  1221  00FA93  000E               	dw	14
  1222  00FA95  0010               	dw	16
  1223  00FA97  0002               	dw	2
  1224  00FA99  0010               	dw	16
  1225  00FA9B  0000               	dw	0
  1226  00FA9D  0000               	dw	0
  1227  00FA9F  0006               	dw	6
  1228  00FAA1  0000               	dw	0
  1229  00FAA3  0000               	dw	0
  1230  00FAA5  0000               	dw	0
  1231  00FAA7  0000               	dw	0
  1232  00FAA9  00FE               	dw	254
  1233  00FAAB  00FF               	dw	255
  1234  00FAAD  0002               	dw	2
  1235  00FAAF  0080               	dw	128
  1236  00FAB1  0002               	dw	2
  1237  00FAB3  0080               	dw	128
  1238  00FAB5  0000               	dw	0
  1239  00FAB7  0000               	dw	0
  1240  00FAB9  000A               	dw	10
  1241  00FABB  0002               	dw	2
  1242  00FABD  0000               	dw	0
  1243  00FABF  000C               	dw	12
  1244  00FAC1  0000               	dw	0
  1245  00FAC3  0010               	dw	16
  1246  00FAC5  0000               	dw	0
  1247  00FAC7  0060               	dw	96
  1248  00FAC9  0000               	dw	0
  1249  00FACB  0080               	dw	128
  1250  00FACD  0001               	dw	1
  1251  00FACF  0000               	dw	0
  1252  00FAD1  0006               	dw	6
  1253  00FAD3  0000               	dw	0
  1254  00FAD5  0008               	dw	8
  1255  00FAD7  0000               	dw	0
  1256  00FAD9  0030               	dw	48
  1257  00FADB  0000               	dw	0
  1258  00FADD  0040               	dw	64
  1259  00FADF  0000               	dw	0
  1260  00FAE1  0000               	dw	0
  1261  00FAE3  0005               	dw	5
  1262  00FAE5  0000               	dw	0
  1263  00FAE7  0000               	dw	0
  1264  00FAE9  0002               	dw	2
  1265  00FAEB  0080               	dw	128
  1266  00FAED  0002               	dw	2
  1267  00FAEF  0080               	dw	128
  1268  00FAF1  00FE               	dw	254
  1269  00FAF3  00FF               	dw	255
  1270  00FAF5  0000               	dw	0
  1271  00FAF7  0000               	dw	0
  1272  00FAF9  000B               	dw	11
  1273  00FAFB  0000               	dw	0
  1274  00FAFD  0000               	dw	0
  1275  00FAFF  0000               	dw	0
  1276  00FB01  0002               	dw	2
  1277  00FB03  0080               	dw	128
  1278  00FB05  0001               	dw	1
  1279  00FB07  0070               	dw	112
  1280  00FB09  0000               	dw	0
  1281  00FB0B  000C               	dw	12
  1282  00FB0D  0000               	dw	0
  1283  00FB0F  0002               	dw	2
  1284  00FB11  0000               	dw	0
  1285  00FB13  000C               	dw	12
  1286  00FB15  0000               	dw	0
  1287  00FB17  0070               	dw	112
  1288  00FB19  0000               	dw	0
  1289  00FB1B  0080               	dw	128
  1290  00FB1D  0001               	dw	1
  1291  00FB1F  0000               	dw	0
  1292  00FB21  0002               	dw	2
  1293  00FB23  0000               	dw	0
  1294  00FB25  0000               	dw	0
  1295  00FB27  0009               	dw	9
  1296  00FB29  0000               	dw	0
  1297  00FB2B  0040               	dw	64
  1298  00FB2D  0000               	dw	0
  1299  00FB2F  0040               	dw	64
  1300  00FB31  0000               	dw	0
  1301  00FB33  0040               	dw	64
  1302  00FB35  0000               	dw	0
  1303  00FB37  0040               	dw	64
  1304  00FB39  0000               	dw	0
  1305  00FB3B  0040               	dw	64
  1306  00FB3D  0000               	dw	0
  1307  00FB3F  0040               	dw	64
  1308  00FB41  0000               	dw	0
  1309  00FB43  0040               	dw	64
  1310  00FB45  0000               	dw	0
  1311  00FB47  0040               	dw	64
  1312  00FB49  0000               	dw	0
  1313  00FB4B  0000               	dw	0
  1314  00FB4D  0005               	dw	5
  1315  00FB4F  0000               	dw	0
  1316  00FB51  0000               	dw	0
  1317  00FB53  0000               	dw	0
  1318  00FB55  0000               	dw	0
  1319  00FB57  0002               	dw	2
  1320  00FB59  0000               	dw	0
  1321  00FB5B  0004               	dw	4
  1322  00FB5D  0000               	dw	0
  1323  00FB5F  0000               	dw	0
  1324  00FB61  0000               	dw	0
  1325  00FB63  000B               	dw	11
  1326  00FB65  0000               	dw	0
  1327  00FB67  0000               	dw	0
  1328  00FB69  00C0               	dw	192
  1329  00FB6B  0007               	dw	7
  1330  00FB6D  0020               	dw	32
  1331  00FB6F  0008               	dw	8
  1332  00FB71  0010               	dw	16
  1333  00FB73  0010               	dw	16
  1334  00FB75  0010               	dw	16
  1335  00FB77  0010               	dw	16
  1336  00FB79  0010               	dw	16
  1337  00FB7B  0010               	dw	16
  1338  00FB7D  0010               	dw	16
  1339  00FB7F  0010               	dw	16
  1340  00FB81  0010               	dw	16
  1341  00FB83  0010               	dw	16
  1342  00FB85  0020               	dw	32
  1343  00FB87  0008               	dw	8
  1344  00FB89  00F0               	dw	240
  1345  00FB8B  001F               	dw	31
  1346  00FB8D  0000               	dw	0
  1347  00FB8F  0000               	dw	0
  1348  00FB91  000B               	dw	11
  1349  00FB93  0000               	dw	0
  1350  00FB95  0000               	dw	0
  1351  00FB97  00FE               	dw	254
  1352  00FB99  001F               	dw	31
  1353  00FB9B  0020               	dw	32
  1354  00FB9D  0008               	dw	8
  1355  00FB9F  0010               	dw	16
  1356  00FBA1  0010               	dw	16
  1357  00FBA3  0010               	dw	16
  1358  00FBA5  0010               	dw	16
  1359  00FBA7  0010               	dw	16
  1360  00FBA9  0010               	dw	16
  1361  00FBAB  0010               	dw	16
  1362  00FBAD  0010               	dw	16
  1363  00FBAF  0010               	dw	16
  1364  00FBB1  0010               	dw	16
  1365  00FBB3  0020               	dw	32
  1366  00FBB5  0008               	dw	8
  1367  00FBB7  00C0               	dw	192
  1368  00FBB9  0007               	dw	7
  1369  00FBBB  0000               	dw	0
  1370  00FBBD  0000               	dw	0
  1371  00FBBF  000A               	dw	10
  1372  00FBC1  0000               	dw	0
  1373  00FBC3  0000               	dw	0
  1374  00FBC5  00C0               	dw	192
  1375  00FBC7  0007               	dw	7
  1376  00FBC9  0020               	dw	32
  1377  00FBCB  0008               	dw	8
  1378  00FBCD  0010               	dw	16
  1379  00FBCF  0010               	dw	16
  1380  00FBD1  0010               	dw	16
  1381  00FBD3  0010               	dw	16
  1382  00FBD5  0010               	dw	16
  1383  00FBD7  0010               	dw	16
  1384  00FBD9  0010               	dw	16
  1385  00FBDB  0010               	dw	16
  1386  00FBDD  0020               	dw	32
  1387  00FBDF  0008               	dw	8
  1388  00FBE1  0040               	dw	64
  1389  00FBE3  0004               	dw	4
  1390  00FBE5  0000               	dw	0
  1391  00FBE7  0000               	dw	0
  1392  00FBE9  000B               	dw	11
  1393  00FBEB  0000               	dw	0
  1394  00FBED  0000               	dw	0
  1395  00FBEF  00C0               	dw	192
  1396  00FBF1  0007               	dw	7
  1397  00FBF3  0020               	dw	32
  1398  00FBF5  0008               	dw	8
  1399  00FBF7  0010               	dw	16
  1400  00FBF9  0010               	dw	16
  1401  00FBFB  0010               	dw	16
  1402  00FBFD  0010               	dw	16
  1403  00FBFF  0010               	dw	16
  1404  00FC01  0010               	dw	16
  1405  00FC03  0010               	dw	16
  1406  00FC05  0010               	dw	16
  1407  00FC07  0010               	dw	16
  1408  00FC09  0010               	dw	16
  1409  00FC0B  0020               	dw	32
  1410  00FC0D  0008               	dw	8
  1411  00FC0F  00FE               	dw	254
  1412  00FC11  001F               	dw	31
  1413  00FC13  0000               	dw	0
  1414  00FC15  0000               	dw	0
  1415  00FC17  000A               	dw	10
  1416  00FC19  0000               	dw	0
  1417  00FC1B  0000               	dw	0
  1418  00FC1D  00C0               	dw	192
  1419  00FC1F  0007               	dw	7
  1420  00FC21  0020               	dw	32
  1421  00FC23  0009               	dw	9
  1422  00FC25  0010               	dw	16
  1423  00FC27  0011               	dw	17
  1424  00FC29  0010               	dw	16
  1425  00FC2B  0011               	dw	17
  1426  00FC2D  0010               	dw	16
  1427  00FC2F  0011               	dw	17
  1428  00FC31  0010               	dw	16
  1429  00FC33  0011               	dw	17
  1430  00FC35  0020               	dw	32
  1431  00FC37  0009               	dw	9
  1432  00FC39  00C0               	dw	192
  1433  00FC3B  0005               	dw	5
  1434  00FC3D  0000               	dw	0
  1435  00FC3F  0000               	dw	0
  1436  00FC41  0006               	dw	6
  1437  00FC43  0000               	dw	0
  1438  00FC45  0000               	dw	0
  1439  00FC47  0010               	dw	16
  1440  00FC49  0000               	dw	0
  1441  00FC4B  00FC               	dw	252
  1442  00FC4D  001F               	dw	31
  1443  00FC4F  0012               	dw	18
  1444  00FC51  0000               	dw	0
  1445  00FC53  0012               	dw	18
  1446  00FC55  0000               	dw	0
  1447  00FC57  0000               	dw	0
  1448  00FC59  0000               	dw	0
  1449  00FC5B  000B               	dw	11
  1450  00FC5D  0000               	dw	0
  1451  00FC5F  0000               	dw	0
  1452  00FC61  00C0               	dw	192
  1453  00FC63  0027               	dw	39
  1454  00FC65  0020               	dw	32
  1455  00FC67  0048               	dw	72
  1456  00FC69  0010               	dw	16
  1457  00FC6B  0090               	dw	144
  1458  00FC6D  0010               	dw	16
  1459  00FC6F  0090               	dw	144
  1460  00FC71  0010               	dw	16
  1461  00FC73  0090               	dw	144
  1462  00FC75  0010               	dw	16
  1463  00FC77  0090               	dw	144
  1464  00FC79  0010               	dw	16
  1465  00FC7B  0090               	dw	144
  1466  00FC7D  0020               	dw	32
  1467  00FC7F  0048               	dw	72
  1468  00FC81  00F0               	dw	240
  1469  00FC83  003F               	dw	63
  1470  00FC85  0000               	dw	0
  1471  00FC87  0000               	dw	0
  1472  00FC89  000A               	dw	10
  1473  00FC8B  0000               	dw	0
  1474  00FC8D  0000               	dw	0
  1475  00FC8F  00FE               	dw	254
  1476  00FC91  001F               	dw	31
  1477  00FC93  0020               	dw	32
  1478  00FC95  0000               	dw	0
  1479  00FC97  0010               	dw	16
  1480  00FC99  0000               	dw	0
  1481  00FC9B  0010               	dw	16
  1482  00FC9D  0000               	dw	0
  1483  00FC9F  0010               	dw	16
  1484  00FCA1  0000               	dw	0
  1485  00FCA3  0010               	dw	16
  1486  00FCA5  0000               	dw	0
  1487  00FCA7  0020               	dw	32
  1488  00FCA9  0000               	dw	0
  1489  00FCAB  00C0               	dw	192
  1490  00FCAD  001F               	dw	31
  1491  00FCAF  0000               	dw	0
  1492  00FCB1  0000               	dw	0
  1493  00FCB3  0003               	dw	3
  1494  00FCB5  0000               	dw	0
  1495  00FCB7  0000               	dw	0
  1496  00FCB9  00F6               	dw	246
  1497  00FCBB  001F               	dw	31
  1498  00FCBD  0000               	dw	0
  1499  00FCBF  0000               	dw	0
  1500  00FCC1  0003               	dw	3
  1501  00FCC3  0000               	dw	0
  1502  00FCC5  0080               	dw	128
  1503  00FCC7  00F6               	dw	246
  1504  00FCC9  007F               	dw	127
  1505  00FCCB  0000               	dw	0
  1506  00FCCD  0000               	dw	0
  1507  00FCCF  0008               	dw	8
  1508  00FCD1  0000               	dw	0
  1509  00FCD3  0000               	dw	0
  1510  00FCD5  00FE               	dw	254
  1511  00FCD7  001F               	dw	31
  1512  00FCD9  0000               	dw	0
  1513  00FCDB  0001               	dw	1
  1514  00FCDD  0080               	dw	128
  1515  00FCDF  0002               	dw	2
  1516  00FCE1  0040               	dw	64
  1517  00FCE3  0004               	dw	4
  1518  00FCE5  0020               	dw	32
  1519  00FCE7  0008               	dw	8
  1520  00FCE9  0010               	dw	16
  1521  00FCEB  0010               	dw	16
  1522  00FCED  0000               	dw	0
  1523  00FCEF  0000               	dw	0
  1524  00FCF1  0003               	dw	3
  1525  00FCF3  0000               	dw	0
  1526  00FCF5  0000               	dw	0
  1527  00FCF7  00FE               	dw	254
  1528  00FCF9  001F               	dw	31
  1529  00FCFB  0000               	dw	0
  1530  00FCFD  0000               	dw	0
  1531  00FCFF  000F               	dw	15
  1532  00FD01  0000               	dw	0
  1533  00FD03  0000               	dw	0
  1534  00FD05  00F0               	dw	240
  1535  00FD07  001F               	dw	31
  1536  00FD09  0020               	dw	32
  1537  00FD0B  0000               	dw	0
  1538  00FD0D  0010               	dw	16
  1539  00FD0F  0000               	dw	0
  1540  00FD11  0010               	dw	16
  1541  00FD13  0000               	dw	0
  1542  00FD15  0010               	dw	16
  1543  00FD17  0000               	dw	0
  1544  00FD19  0020               	dw	32
  1545  00FD1B  0000               	dw	0
  1546  00FD1D  00C0               	dw	192
  1547  00FD1F  001F               	dw	31
  1548  00FD21  0020               	dw	32
  1549  00FD23  0000               	dw	0
  1550  00FD25  0010               	dw	16
  1551  00FD27  0000               	dw	0
  1552  00FD29  0010               	dw	16
  1553  00FD2B  0000               	dw	0
  1554  00FD2D  0010               	dw	16
  1555  00FD2F  0000               	dw	0
  1556  00FD31  0020               	dw	32
  1557  00FD33  0000               	dw	0
  1558  00FD35  00C0               	dw	192
  1559  00FD37  001F               	dw	31
  1560  00FD39  0000               	dw	0
  1561  00FD3B  0000               	dw	0
  1562  00FD3D  000A               	dw	10
  1563  00FD3F  0000               	dw	0
  1564  00FD41  0000               	dw	0
  1565  00FD43  00F0               	dw	240
  1566  00FD45  001F               	dw	31
  1567  00FD47  0020               	dw	32
  1568  00FD49  0000               	dw	0
  1569  00FD4B  0010               	dw	16
  1570  00FD4D  0000               	dw	0
  1571  00FD4F  0010               	dw	16
  1572  00FD51  0000               	dw	0
  1573  00FD53  0010               	dw	16
  1574  00FD55  0000               	dw	0
  1575  00FD57  0010               	dw	16
  1576  00FD59  0000               	dw	0
  1577  00FD5B  0020               	dw	32
  1578  00FD5D  0000               	dw	0
  1579  00FD5F  00C0               	dw	192
  1580  00FD61  001F               	dw	31
  1581  00FD63  0000               	dw	0
  1582  00FD65  0000               	dw	0
  1583  00FD67  000A               	dw	10
  1584  00FD69  0000               	dw	0
  1585  00FD6B  0000               	dw	0
  1586  00FD6D  00C0               	dw	192
  1587  00FD6F  0007               	dw	7
  1588  00FD71  0020               	dw	32
  1589  00FD73  0008               	dw	8
  1590  00FD75  0010               	dw	16
  1591  00FD77  0010               	dw	16
  1592  00FD79  0010               	dw	16
  1593  00FD7B  0010               	dw	16
  1594  00FD7D  0010               	dw	16
  1595  00FD7F  0010               	dw	16
  1596  00FD81  0010               	dw	16
  1597  00FD83  0010               	dw	16
  1598  00FD85  0020               	dw	32
  1599  00FD87  0008               	dw	8
  1600  00FD89  00C0               	dw	192
  1601  00FD8B  0007               	dw	7
  1602  00FD8D  0000               	dw	0
  1603  00FD8F  0000               	dw	0
  1604  00FD91  000B               	dw	11
  1605  00FD93  0000               	dw	0
  1606  00FD95  0000               	dw	0
  1607  00FD97  00F0               	dw	240
  1608  00FD99  00FF               	dw	255
  1609  00FD9B  0020               	dw	32
  1610  00FD9D  0008               	dw	8
  1611  00FD9F  0010               	dw	16
  1612  00FDA1  0010               	dw	16
  1613  00FDA3  0010               	dw	16
  1614  00FDA5  0010               	dw	16
  1615  00FDA7  0010               	dw	16
  1616  00FDA9  0010               	dw	16
  1617  00FDAB  0010               	dw	16
  1618  00FDAD  0010               	dw	16
  1619  00FDAF  0010               	dw	16
  1620  00FDB1  0010               	dw	16
  1621  00FDB3  0020               	dw	32
  1622  00FDB5  0008               	dw	8
  1623  00FDB7  00C0               	dw	192
  1624  00FDB9  0007               	dw	7
  1625  00FDBB  0000               	dw	0
  1626  00FDBD  0000               	dw	0
  1627  00FDBF  000B               	dw	11
  1628  00FDC1  0000               	dw	0
  1629  00FDC3  0000               	dw	0
  1630  00FDC5  00C0               	dw	192
  1631  00FDC7  0007               	dw	7
  1632  00FDC9  0020               	dw	32
  1633  00FDCB  0008               	dw	8
  1634  00FDCD  0010               	dw	16
  1635  00FDCF  0010               	dw	16
  1636  00FDD1  0010               	dw	16
  1637  00FDD3  0010               	dw	16
  1638  00FDD5  0010               	dw	16
  1639  00FDD7  0010               	dw	16
  1640  00FDD9  0010               	dw	16
  1641  00FDDB  0010               	dw	16
  1642  00FDDD  0010               	dw	16
  1643  00FDDF  0010               	dw	16
  1644  00FDE1  0020               	dw	32
  1645  00FDE3  0008               	dw	8
  1646  00FDE5  00F0               	dw	240
  1647  00FDE7  00FF               	dw	255
  1648  00FDE9  0000               	dw	0
  1649  00FDEB  0000               	dw	0
  1650  00FDED  0006               	dw	6
  1651  00FDEF  0000               	dw	0
  1652  00FDF1  0000               	dw	0
  1653  00FDF3  00F0               	dw	240
  1654  00FDF5  001F               	dw	31
  1655  00FDF7  0020               	dw	32
  1656  00FDF9  0000               	dw	0
  1657  00FDFB  0010               	dw	16
  1658  00FDFD  0000               	dw	0
  1659  00FDFF  0010               	dw	16
  1660  00FE01  0000               	dw	0
  1661  00FE03  0000               	dw	0
  1662  00FE05  0000               	dw	0
  1663  00FE07  0006               	dw	6
  1664  00FE09  0060               	dw	96
  1665  00FE0B  0008               	dw	8
  1666  00FE0D  0090               	dw	144
  1667  00FE0F  0010               	dw	16
  1668  00FE11  0010               	dw	16
  1669  00FE13  0011               	dw	17
  1670  00FE15  0010               	dw	16
  1671  00FE17  0011               	dw	17
  1672  00FE19  0020               	dw	32
  1673  00FE1B  000E               	dw	14
  1674  00FE1D  0000               	dw	0
  1675  00FE1F  0000               	dw	0
  1676  00FE21  0007               	dw	7
  1677  00FE23  0000               	dw	0
  1678  00FE25  0000               	dw	0
  1679  00FE27  0010               	dw	16
  1680  00FE29  0000               	dw	0
  1681  00FE2B  0010               	dw	16
  1682  00FE2D  0000               	dw	0
  1683  00FE2F  00FE               	dw	254
  1684  00FE31  001F               	dw	31
  1685  00FE33  0010               	dw	16
  1686  00FE35  0000               	dw	0
  1687  00FE37  0010               	dw	16
  1688  00FE39  0000               	dw	0
  1689  00FE3B  0000               	dw	0
  1690  00FE3D  0000               	dw	0
  1691  00FE3F  000A               	dw	10
  1692  00FE41  0000               	dw	0
  1693  00FE43  0000               	dw	0
  1694  00FE45  00F0               	dw	240
  1695  00FE47  0007               	dw	7
  1696  00FE49  0000               	dw	0
  1697  00FE4B  0008               	dw	8
  1698  00FE4D  0000               	dw	0
  1699  00FE4F  0010               	dw	16
  1700  00FE51  0000               	dw	0
  1701  00FE53  0010               	dw	16
  1702  00FE55  0000               	dw	0
  1703  00FE57  0010               	dw	16
  1704  00FE59  0000               	dw	0
  1705  00FE5B  0010               	dw	16
  1706  00FE5D  0000               	dw	0
  1707  00FE5F  0008               	dw	8
  1708  00FE61  00F0               	dw	240
  1709  00FE63  0007               	dw	7
  1710  00FE65  0000               	dw	0
  1711  00FE67  0000               	dw	0
  1712  00FE69  000A               	dw	10
  1713  00FE6B  0010               	dw	16
  1714  00FE6D  0000               	dw	0
  1715  00FE6F  0060               	dw	96
  1716  00FE71  0000               	dw	0
  1717  00FE73  0080               	dw	128
  1718  00FE75  0003               	dw	3
  1719  00FE77  0000               	dw	0
  1720  00FE79  000C               	dw	12
  1721  00FE7B  0000               	dw	0
  1722  00FE7D  0010               	dw	16
  1723  00FE7F  0000               	dw	0
  1724  00FE81  000C               	dw	12
  1725  00FE83  0080               	dw	128
  1726  00FE85  0003               	dw	3
  1727  00FE87  0060               	dw	96
  1728  00FE89  0000               	dw	0
  1729  00FE8B  0010               	dw	16
  1730  00FE8D  0000               	dw	0
  1731  00FE8F  0000               	dw	0
  1732  00FE91  0000               	dw	0
  1733  00FE93  000E               	dw	14
  1734  00FE95  0010               	dw	16
  1735  00FE97  0000               	dw	0
  1736  00FE99  00E0               	dw	224
  1737  00FE9B  0000               	dw	0
  1738  00FE9D  0000               	dw	0
  1739  00FE9F  0007               	dw	7
  1740  00FEA1  0000               	dw	0
  1741  00FEA3  0018               	dw	24
  1742  00FEA5  0000               	dw	0
  1743  00FEA7  0007               	dw	7
  1744  00FEA9  00E0               	dw	224
  1745  00FEAB  0000               	dw	0
  1746  00FEAD  0010               	dw	16
  1747  00FEAF  0000               	dw	0
  1748  00FEB1  00E0               	dw	224
  1749  00FEB3  0000               	dw	0
  1750  00FEB5  0000               	dw	0
  1751  00FEB7  0007               	dw	7
  1752  00FEB9  0000               	dw	0
  1753  00FEBB  0018               	dw	24
  1754  00FEBD  0000               	dw	0
  1755  00FEBF  0007               	dw	7
  1756  00FEC1  00E0               	dw	224
  1757  00FEC3  0000               	dw	0
  1758  00FEC5  0010               	dw	16
  1759  00FEC7  0000               	dw	0
  1760  00FEC9  0000               	dw	0
  1761  00FECB  0000               	dw	0
  1762  00FECD  0009               	dw	9
  1763  00FECF  0010               	dw	16
  1764  00FED1  0010               	dw	16
  1765  00FED3  0020               	dw	32
  1766  00FED5  0008               	dw	8
  1767  00FED7  0040               	dw	64
  1768  00FED9  0004               	dw	4
  1769  00FEDB  0080               	dw	128
  1770  00FEDD  0003               	dw	3
  1771  00FEDF  0080               	dw	128
  1772  00FEE1  0003               	dw	3
  1773  00FEE3  0040               	dw	64
  1774  00FEE5  0004               	dw	4
  1775  00FEE7  0020               	dw	32
  1776  00FEE9  0008               	dw	8
  1777  00FEEB  0010               	dw	16
  1778  00FEED  0010               	dw	16
  1779  00FEEF  0000               	dw	0
  1780  00FEF1  0000               	dw	0
  1781  00FEF3  0009               	dw	9
  1782  00FEF5  0010               	dw	16
  1783  00FEF7  0000               	dw	0
  1784  00FEF9  00E0               	dw	224
  1785  00FEFB  0000               	dw	0
  1786  00FEFD  0000               	dw	0
  1787  00FEFF  0083               	dw	131
  1788  00FF01  0000               	dw	0
  1789  00FF03  007C               	dw	124
  1790  00FF05  0000               	dw	0
  1791  00FF07  000C               	dw	12
  1792  00FF09  0000               	dw	0
  1793  00FF0B  0003               	dw	3
  1794  00FF0D  00E0               	dw	224
  1795  00FF0F  0000               	dw	0
  1796  00FF11  0010               	dw	16
  1797  00FF13  0000               	dw	0
  1798  00FF15  0000               	dw	0
  1799  00FF17  0000               	dw	0
  1800  00FF19  0008               	dw	8
  1801  00FF1B  0010               	dw	16
  1802  00FF1D  0010               	dw	16
  1803  00FF1F  0010               	dw	16
  1804  00FF21  0018               	dw	24
  1805  00FF23  0010               	dw	16
  1806  00FF25  0016               	dw	22
  1807  00FF27  0010               	dw	16
  1808  00FF29  0011               	dw	17
  1809  00FF2B  00D0               	dw	208
  1810  00FF2D  0010               	dw	16
  1811  00FF2F  0030               	dw	48
  1812  00FF31  0010               	dw	16
  1813  00FF33  0010               	dw	16
  1814  00FF35  0010               	dw	16
  1815  00FF37  0000               	dw	0
  1816  00FF39  0000               	dw	0
  1817  00FF3B  0007               	dw	7
  1818  00FF3D  0000               	dw	0
  1819  00FF3F  0000               	dw	0
  1820  00FF41  0000               	dw	0
  1821  00FF43  0001               	dw	1
  1822  00FF45  0080               	dw	128
  1823  00FF47  0002               	dw	2
  1824  00FF49  00FC               	dw	252
  1825  00FF4B  007E               	dw	126
  1826  00FF4D  0002               	dw	2
  1827  00FF4F  0080               	dw	128
  1828  00FF51  0002               	dw	2
  1829  00FF53  0080               	dw	128
  1830  00FF55  0000               	dw	0
  1831  00FF57  0000               	dw	0
  1832  00FF59  0007               	dw	7
  1833  00FF5B  0000               	dw	0
  1834  00FF5D  0000               	dw	0
  1835  00FF5F  0000               	dw	0
  1836  00FF61  0000               	dw	0
  1837  00FF63  0000               	dw	0
  1838  00FF65  0000               	dw	0
  1839  00FF67  0000               	dw	0
  1840  00FF69  0000               	dw	0
  1841  00FF6B  0000               	dw	0
  1842  00FF6D  0000               	dw	0
  1843  00FF6F  00FE               	dw	254
  1844  00FF71  00FF               	dw	255
  1845  00FF73  0000               	dw	0
  1846  00FF75  0000               	dw	0
  1847  00FF77  0006               	dw	6
  1848  00FF79  0002               	dw	2
  1849  00FF7B  0080               	dw	128
  1850  00FF7D  0002               	dw	2
  1851  00FF7F  0080               	dw	128
  1852  00FF81  00FC               	dw	252
  1853  00FF83  007E               	dw	126
  1854  00FF85  0080               	dw	128
  1855  00FF87  0002               	dw	2
  1856  00FF89  0000               	dw	0
  1857  00FF8B  0001               	dw	1
  1858  00FF8D  0000               	dw	0
  1859  00FF8F  0000               	dw	0
  1860  00FF91  000A               	dw	10
  1861  00FF93  0000               	dw	0
  1862  00FF95  0000               	dw	0
  1863  00FF97  0080               	dw	128
  1864  00FF99  0000               	dw	0
  1865  00FF9B  0040               	dw	64
  1866  00FF9D  0000               	dw	0
  1867  00FF9F  0040               	dw	64
  1868  00FFA1  0000               	dw	0
  1869  00FFA3  0040               	dw	64
  1870  00FFA5  0000               	dw	0
  1871  00FFA7  0080               	dw	128
  1872  00FFA9  0000               	dw	0
  1873  00FFAB  0080               	dw	128
  1874  00FFAD  0000               	dw	0
  1875  00FFAF  0080               	dw	128
  1876  00FFB1  0000               	dw	0
  1877  00FFB3  0040               	dw	64
  1878  00FFB5  0000               	dw	0
  1879  00FFB7  0000               	dw	0
  1880  00FFB9  0000               	dw	0
  1881  00FFBB  0005               	dw	5
  1882  00FFBD  00FF               	dw	255
  1883  00FFBF  000F               	dw	15
  1884  00FFC1  0001               	dw	1
  1885  00FFC3  0008               	dw	8
  1886  00FFC5  0001               	dw	1
  1887  00FFC7  0008               	dw	8
  1888  00FFC9  00FF               	dw	255
  1889  00FFCB  000F               	dw	15
  1890  00FFCD  0000               	dw	0
  1891  00FFCF  0000               	dw	0
  1892  00FFD1                     __end_of_font:
  1893                           	opt callstack 0
  1894  00FFD1                     _spi_configuration:
  1895                           	opt callstack 0
  1896  00FFD1  00                 	db	0
  1897  00FFD2  40                 	db	64
  1898  00FFD3  01                 	db	1
  1899  00FFD4  00                 	db	0
  1900  00FFD5                     __end_of_spi_configuration:
  1901                           	opt callstack 0
  1902  00FFD5                     STR_2:
  1903  00FFD5  43                 	db	67	;'C'
  1904  00FFD6  4F                 	db	79	;'O'
  1905  00FFD7  4E                 	db	78	;'N'
  1906  00FFD8  53                 	db	83	;'S'
  1907  00FFD9  54                 	db	84	;'T'
  1908  00FFDA  41                 	db	65	;'A'
  1909  00FFDB  4E                 	db	78	;'N'
  1910  00FFDC  54                 	db	84	;'T'
  1911  00FFDD  45                 	db	69	;'E'
  1912  00FFDE  5F                 	db	95	;'_'
  1913  00FFDF  41                 	db	65	;'A'
  1914  00FFE0  3A                 	db	58	;':'
  1915  00FFE1  20                 	db	32
  1916  00FFE2  25                 	db	37
  1917  00FFE3  64                 	db	100	;'d'
  1918  00FFE4  00                 	db	0
  1919  00FFE5                     STR_3:
  1920  00FFE5  43                 	db	67	;'C'
  1921  00FFE6  4F                 	db	79	;'O'
  1922  00FFE7  4E                 	db	78	;'N'
  1923  00FFE8  53                 	db	83	;'S'
  1924  00FFE9  54                 	db	84	;'T'
  1925  00FFEA  41                 	db	65	;'A'
  1926  00FFEB  4E                 	db	78	;'N'
  1927  00FFEC  54                 	db	84	;'T'
  1928  00FFED  45                 	db	69	;'E'
  1929  00FFEE  5F                 	db	95	;'_'
  1930  00FFEF  42                 	db	66	;'B'
  1931  00FFF0  3A                 	db	58	;':'
  1932  00FFF1  20                 	db	32
  1933  00FFF2  25                 	db	37
  1934  00FFF3  64                 	db	100	;'d'
  1935  00FFF4  00                 	db	0
  1936  00FFF5                     STR_1:
  1937  00FFF5  50                 	db	80	;'P'
  1938  00FFF6  4F                 	db	79	;'O'
  1939  00FFF7  54                 	db	84	;'T'
  1940  00FFF8  3A                 	db	58	;':'
  1941  00FFF9  20                 	db	32
  1942  00FFFA  25                 	db	37
  1943  00FFFB  64                 	db	100	;'d'
  1944  00FFFC  25                 	db	37
  1945  00FFFD  25                 	db	37
  1946  00FFFE  00                 	db	0
  1947                           
  1948                           ; #config settings
  1949  00FFFF  00                 	db	0	; dummy byte at the end
  1950  0000                     
  1951                           	psect	nvBANK0
  1952  0000A2                     __pnvBANK0:
  1953                           	opt callstack 0
  1954  0000A2                     _INT0_InterruptHandler:
  1955                           	opt callstack 0
  1956  0000A2                     	ds	2
  1957  0000A4                     _timer1ReloadVal:
  1958                           	opt callstack 0
  1959  0000A4                     	ds	2
  1960  0000A6                     _ADC_InterruptHandler:
  1961                           	opt callstack 0
  1962  0000A6                     	ds	2
  1963  0000A8                     _IOCB4_InterruptHandler:
  1964                           	opt callstack 0
  1965  0000A8                     	ds	2
  1966  0000                     _IOCBbits	set	3930
  1967  0000                     _WPUB	set	3931
  1968  0000                     _ANCON1	set	3932
  1969  0000                     _ANCON0	set	3933
  1970  0000                     _CCPTMRSbits	set	3993
  1971  0000                     _CCPR1L	set	4028
  1972  0000                     _CCPR1H	set	4029
  1973  0000                     _ECCP1DEL	set	4030
  1974  0000                     _PSTR1CON	set	3996
  1975  0000                     _ECCP1AS	set	4031
  1976  0000                     _CCP1CON	set	4027
  1977  0000                     _T2CONbits	set	4042
  1978  0000                     _T2CON	set	4042
  1979  0000                     _TMR2	set	4044
  1980  0000                     _PR2	set	4043
  1981  0000                     _SSPSTATbits	set	4039
  1982  0000                     _LATAbits	set	3977
  1983  0000                     _LATEbits	set	3981
  1984  0000                     _PORTBbits	set	3969
  1985  0000                     _T1GCONbits	set	4010
  1986  0000                     _T1CONbits	set	4045
  1987  0000                     _T1CON	set	4045
  1988  0000                     _TMR1L	set	4046
  1989  0000                     _TMR1H	set	4047
  1990  0000                     _T1GCON	set	4010
  1991  0000                     _ADCON0bits	set	4034
  1992  0000                     _ADRESL	set	4035
  1993  0000                     _ADRESH	set	4036
  1994  0000                     _ADCON2	set	4032
  1995  0000                     _ADCON1	set	4033
  1996  0000                     _ADCON0	set	4034
  1997  0000                     _SSPBUF	set	4041
  1998  0000                     _SSPCON2	set	4037
  1999  0000                     _SSPCON1bits	set	4038
  2000  0000                     _TRISCbits	set	3988
  2001  0000                     _SSPADD	set	4040
  2002  0000                     _SSPCON1	set	4038
  2003  0000                     _SSPSTAT	set	4039
  2004  0000                     _INTCON2bits	set	4081
  2005  0000                     _TRISD	set	3989
  2006  0000                     _TRISC	set	3988
  2007  0000                     _TRISB	set	3987
  2008  0000                     _TRISA	set	3986
  2009  0000                     _TRISE	set	3990
  2010  0000                     _LATC	set	3979
  2011  0000                     _LATB	set	3978
  2012  0000                     _LATA	set	3977
  2013  0000                     _LATD	set	3980
  2014  0000                     _LATE	set	3981
  2015  0000                     _PIR1bits	set	3998
  2016  0000                     _PIE1bits	set	3997
  2017  0000                     _INTCONbits	set	4082
  2018  0000                     _RCONbits	set	4048
  2019  0000                     _REFOCON	set	3994
  2020  0000                     _OSCTUNE	set	3995
  2021  0000                     _OSCCON2	set	4050
  2022  0000                     _OSCCON	set	4051
  2023                           
  2024                           	psect	cinit
  2025  001CA6                     __pcinit:
  2026                           	opt callstack 0
  2027  001CA6                     start_initialization:
  2028                           	opt callstack 0
  2029  001CA6                     __initialization:
  2030                           	opt callstack 0
  2031                           
  2032                           ; Initialize objects allocated to BANK0 (2 bytes)
  2033                           ; load TBLPTR registers with __pidataBANK0
  2034  001CA6  0EAC               	movlw	low __pidataBANK0
  2035  001CA8  6EF6               	movwf	tblptrl,c
  2036  001CAA  0E21               	movlw	high __pidataBANK0
  2037  001CAC  6EF7               	movwf	tblptrh,c
  2038  001CAE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2039  001CB0  6EF8               	movwf	tblptru,c
  2040  001CB2  0009               	tblrd		*+	;fetch initializer
  2041  001CB4  CFF5 F0AA          	movff	tablat,__pdataBANK0
  2042  001CB8  0009               	tblrd		*+	;fetch initializer
  2043  001CBA  CFF5 F0AB          	movff	tablat,__pdataBANK0+1
  2044                           
  2045                           ; Clear objects allocated to BANK2 (100 bytes)
  2046  001CBE  EE02  F000         	lfsr	0,__pbssBANK2
  2047  001CC2  0E64               	movlw	100
  2048  001CC4                     clear_0:
  2049  001CC4  6AEE               	clrf	postinc0,c
  2050  001CC6  06E8               	decf	wreg,f,c
  2051  001CC8  E1FD               	bnz	clear_0
  2052                           
  2053                           ; Clear objects allocated to BANK1 (200 bytes)
  2054  001CCA  EE01  F000         	lfsr	0,__pbssBANK1
  2055  001CCE  0EC8               	movlw	200
  2056  001CD0                     clear_1:
  2057  001CD0  6AEE               	clrf	postinc0,c
  2058  001CD2  06E8               	decf	wreg,f,c
  2059  001CD4  E1FD               	bnz	clear_1
  2060                           
  2061                           ; Clear objects allocated to BANK0 (48 bytes)
  2062  001CD6  EE00  F060         	lfsr	0,__pbssBANK0
  2063  001CDA  0E30               	movlw	48
  2064  001CDC                     clear_2:
  2065  001CDC  6AEE               	clrf	postinc0,c
  2066  001CDE  06E8               	decf	wreg,f,c
  2067  001CE0  E1FD               	bnz	clear_2
  2068                           
  2069                           ; Clear objects allocated to COMRAM (3 bytes)
  2070  001CE2  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2071  001CE4  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2072  001CE6  6A5A               	clrf	__pbssCOMRAM& (0+255),c
  2073  001CE8                     end_of_initialization:
  2074                           	opt callstack 0
  2075  001CE8                     __end_of__initialization:
  2076                           	opt callstack 0
  2077  001CE8  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2078  001CEA  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2079  001CEC  0100               	movlb	0
  2080  001CEE  EF95  F005         	goto	_main	;jump to C main() function
  2081                           
  2082                           	psect	bssCOMRAM
  2083  00005A                     __pbssCOMRAM:
  2084                           	opt callstack 0
  2085  00005A                     _flags:
  2086                           	opt callstack 0
  2087  00005A                     	ds	2
  2088  00005C                     _mode:
  2089                           	opt callstack 0
  2090  00005C                     	ds	1
  2091                           
  2092                           	psect	bssBANK0
  2093  000060                     __pbssBANK0:
  2094                           	opt callstack 0
  2095  000060                     _nout:
  2096                           	opt callstack 0
  2097  000060                     	ds	2
  2098  000062                     _width:
  2099                           	opt callstack 0
  2100  000062                     	ds	2
  2101  000064                     _prec:
  2102                           	opt callstack 0
  2103  000064                     	ds	2
  2104  000066                     _global_bg_color:
  2105                           	opt callstack 0
  2106  000066                     	ds	2
  2107  000068                     _clean:
  2108                           	opt callstack 0
  2109  000068                     	ds	2
  2110  00006A                     _pwm:
  2111                           	opt callstack 0
  2112  00006A                     	ds	2
  2113  00006C                     _codigo_digital:
  2114                           	opt callstack 0
  2115  00006C                     	ds	2
  2116  00006E                     _dbuf:
  2117                           	opt callstack 0
  2118  00006E                     	ds	32
  2119  00008E                     _pot_val:
  2120                           	opt callstack 0
  2121  00008E                     	ds	2
  2122                           
  2123                           	psect	dataBANK0
  2124  0000AA                     __pdataBANK0:
  2125                           	opt callstack 0
  2126  0000AA                     _menu:
  2127                           	opt callstack 0
  2128  0000AA                     	ds	2
  2129                           
  2130                           	psect	bssBANK1
  2131  000100                     __pbssBANK1:
  2132                           	opt callstack 0
  2133  000100                     _lcd_const_A:
  2134                           	opt callstack 0
  2135  000100                     	ds	100
  2136  000164                     _lcd_pot:
  2137                           	opt callstack 0
  2138  000164                     	ds	100
  2139                           
  2140                           	psect	bssBANK2
  2141  000200                     __pbssBANK2:
  2142                           	opt callstack 0
  2143  000200                     _lcd_const_B:
  2144                           	opt callstack 0
  2145  000200                     	ds	100
  2146                           
  2147                           	psect	cstackBANK0
  2148  000090                     __pcstackBANK0:
  2149                           	opt callstack 0
  2150  000090                     ?_sprintf:
  2151                           	opt callstack 0
  2152  000090                     sprintf@s:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 2 bytes @ 0x0
  2156  000090                     	ds	2
  2157  000092                     sprintf@fmt:
  2158                           	opt callstack 0
  2159                           
  2160                           ; 2 bytes @ 0x2
  2161  000092                     	ds	6
  2162  000098                     sprintf@ap:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 2 bytes @ 0x8
  2166  000098                     	ds	2
  2167  00009A                     sprintf@f:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 6 bytes @ 0xA
  2171  00009A                     	ds	6
  2172  0000A0                     ??_main:
  2173                           
  2174                           ; 1 bytes @ 0x10
  2175  0000A0                     	ds	2
  2176                           
  2177                           	psect	cstackCOMRAM
  2178  000001                     __pcstackCOMRAM:
  2179                           	opt callstack 0
  2180  000001                     ??_INTERRUPT_InterruptManager:
  2181  000001                     
  2182                           ; 1 bytes @ 0x0
  2183  000001                     	ds	2
  2184  000003                     ??_TMR1_Initialize:
  2185  000003                     ??_SPI_Open:
  2186  000003                     ??_msDelay:
  2187  000003                     ?_strlen:
  2188                           	opt callstack 0
  2189  000003                     ?_ADC_GetConversion:
  2190                           	opt callstack 0
  2191  000003                     ?___xxtofl:
  2192                           	opt callstack 0
  2193  000003                     ?___aodiv:
  2194                           	opt callstack 0
  2195  000003                     ?___aomod:
  2196                           	opt callstack 0
  2197  000003                     SPI_ExchangeByte@data:
  2198                           	opt callstack 0
  2199  000003                     IOCB4_SetInterruptHandler@InterruptHandler:
  2200                           	opt callstack 0
  2201  000003                     ADC_SetInterruptHandler@InterruptHandler:
  2202                           	opt callstack 0
  2203  000003                     INT0_SetInterruptHandler@InterruptHandler:
  2204                           	opt callstack 0
  2205  000003                     EPWM1_LoadDutyValue@dutyValue:
  2206                           	opt callstack 0
  2207  000003                     fputc@c:
  2208                           	opt callstack 0
  2209  000003                     strlen@s:
  2210                           	opt callstack 0
  2211  000003                     ___xxtofl@val:
  2212                           	opt callstack 0
  2213  000003                     ___aodiv@dividend:
  2214                           	opt callstack 0
  2215  000003                     ___aomod@dividend:
  2216                           	opt callstack 0
  2217                           
  2218                           ; 8 bytes @ 0x2
  2219  000003                     	ds	1
  2220  000004                     SPI_Open@spiUniqueConfiguration:
  2221                           	opt callstack 0
  2222  000004                     msDelay@ms:
  2223                           	opt callstack 0
  2224  000004                     lcd_send@value:
  2225                           	opt callstack 0
  2226                           
  2227                           ; 1 bytes @ 0x3
  2228  000004                     	ds	1
  2229  000005                     ??_EPWM1_LoadDutyValue:
  2230  000005                     ??_ADC_GetConversion:
  2231  000005                     msDelay@k:
  2232                           	opt callstack 0
  2233  000005                     lcd_send@dc:
  2234                           	opt callstack 0
  2235  000005                     fputc@fp:
  2236                           	opt callstack 0
  2237  000005                     strlen@a:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x4
  2241  000005                     	ds	1
  2242  000006                     lcd_set_cursor_x@x:
  2243                           	opt callstack 0
  2244  000006                     lcd_set_cursor_y@y:
  2245                           	opt callstack 0
  2246  000006                     lcd_draw_pixel@color:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x5
  2250  000006                     	ds	1
  2251  000007                     ??_fputc:
  2252  000007                     ??___xxtofl:
  2253  000007                     ADC_GetConversion@channel:
  2254                           	opt callstack 0
  2255                           
  2256                           ; 1 bytes @ 0x6
  2257  000007                     	ds	1
  2258  000008                     lcd_set_cursor@x:
  2259                           	opt callstack 0
  2260                           
  2261                           ; 2 bytes @ 0x7
  2262  000008                     	ds	2
  2263  00000A                     lcd_set_cursor@y:
  2264                           	opt callstack 0
  2265                           
  2266                           ; 2 bytes @ 0x9
  2267  00000A                     	ds	1
  2268  00000B                     ___xxtofl@sign:
  2269                           	opt callstack 0
  2270  00000B                     ___aodiv@divisor:
  2271                           	opt callstack 0
  2272  00000B                     ___aomod@divisor:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 8 bytes @ 0xA
  2276  00000B                     	ds	1
  2277  00000C                     ___xxtofl@exp:
  2278                           	opt callstack 0
  2279  00000C                     lcd_fill@bg_color:
  2280                           	opt callstack 0
  2281  00000C                     lcd_fill_rect@x0:
  2282                           	opt callstack 0
  2283  00000C                     lcd_draw_char@x:
  2284                           	opt callstack 0
  2285  00000C                     fputs@s:
  2286                           	opt callstack 0
  2287                           
  2288                           ; 2 bytes @ 0xB
  2289  00000C                     	ds	1
  2290  00000D                     ___xxtofl@arg:
  2291                           	opt callstack 0
  2292                           
  2293                           ; 4 bytes @ 0xC
  2294  00000D                     	ds	1
  2295  00000E                     lcd_fill@height:
  2296                           	opt callstack 0
  2297  00000E                     lcd_fill_rect@y0:
  2298                           	opt callstack 0
  2299  00000E                     lcd_draw_char@y:
  2300                           	opt callstack 0
  2301  00000E                     fputs@fp:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 2 bytes @ 0xD
  2305  00000E                     	ds	2
  2306  000010                     fputs@c:
  2307                           	opt callstack 0
  2308  000010                     lcd_fill@width:
  2309                           	opt callstack 0
  2310  000010                     lcd_fill_rect@x1:
  2311                           	opt callstack 0
  2312  000010                     lcd_draw_char@fIndex:
  2313                           	opt callstack 0
  2314                           
  2315                           ; 2 bytes @ 0xF
  2316  000010                     	ds	1
  2317  000011                     ?___flmul:
  2318                           	opt callstack 0
  2319  000011                     fputs@i:
  2320                           	opt callstack 0
  2321  000011                     ___flmul@b:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 4 bytes @ 0x10
  2325  000011                     	ds	1
  2326  000012                     lcd_fill_rect@y1:
  2327                           	opt callstack 0
  2328  000012                     lcd_draw_char@fg_color:
  2329                           	opt callstack 0
  2330                           
  2331                           ; 2 bytes @ 0x11
  2332  000012                     	ds	1
  2333  000013                     ?_pad:
  2334                           	opt callstack 0
  2335  000013                     ___aodiv@counter:
  2336                           	opt callstack 0
  2337  000013                     ___aomod@counter:
  2338                           	opt callstack 0
  2339  000013                     pad@fp:
  2340                           	opt callstack 0
  2341                           
  2342                           ; 2 bytes @ 0x12
  2343  000013                     	ds	1
  2344  000014                     ___aodiv@sign:
  2345                           	opt callstack 0
  2346  000014                     ___aomod@sign:
  2347                           	opt callstack 0
  2348  000014                     lcd_fill_rect@color:
  2349                           	opt callstack 0
  2350  000014                     lcd_draw_char@bg_color:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 2 bytes @ 0x13
  2354  000014                     	ds	1
  2355  000015                     ?_abs:
  2356                           	opt callstack 0
  2357  000015                     pad@buf:
  2358                           	opt callstack 0
  2359  000015                     abs@a:
  2360                           	opt callstack 0
  2361  000015                     ___flmul@a:
  2362                           	opt callstack 0
  2363  000015                     ___aodiv@quotient:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 8 bytes @ 0x14
  2367  000015                     	ds	1
  2368  000016                     ??_lcd_fill_rect:
  2369  000016                     ??_lcd_draw_char:
  2370                           
  2371                           ; 1 bytes @ 0x15
  2372  000016                     	ds	1
  2373  000017                     ??_abs:
  2374  000017                     pad@p:
  2375                           	opt callstack 0
  2376                           
  2377                           ; 2 bytes @ 0x16
  2378  000017                     	ds	1
  2379  000018                     lcd_fill_rect@y_start:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x17
  2383  000018                     	ds	1
  2384  000019                     ??___flmul:
  2385  000019                     ??_pad:
  2386                           
  2387                           ; 1 bytes @ 0x18
  2388  000019                     	ds	1
  2389  00001A                     pad@i:
  2390                           	opt callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x19
  2393  00001A                     	ds	2
  2394  00001C                     pad@w:
  2395                           	opt callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x1B
  2398  00001C                     	ds	1
  2399  00001D                     ___flmul@sign:
  2400                           	opt callstack 0
  2401                           
  2402                           ; 1 bytes @ 0x1C
  2403  00001D                     	ds	1
  2404  00001E                     ?_dtoa:
  2405                           	opt callstack 0
  2406  00001E                     dtoa@fp:
  2407                           	opt callstack 0
  2408  00001E                     ___flmul@grs:
  2409                           	opt callstack 0
  2410                           
  2411                           ; 4 bytes @ 0x1D
  2412  00001E                     	ds	1
  2413  00001F                     lcd_draw_char@j:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 1 bytes @ 0x1E
  2417  00001F                     	ds	1
  2418  000020                     lcd_draw_char@k:
  2419                           	opt callstack 0
  2420  000020                     dtoa@d:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 8 bytes @ 0x1F
  2424  000020                     	ds	1
  2425  000021                     lcd_draw_char@i:
  2426                           	opt callstack 0
  2427                           
  2428                           ; 1 bytes @ 0x20
  2429  000021                     	ds	1
  2430  000022                     ___flmul@aexp:
  2431                           	opt callstack 0
  2432  000022                     lcd_draw_string@x:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 2 bytes @ 0x21
  2436  000022                     	ds	1
  2437  000023                     ___flmul@bexp:
  2438                           	opt callstack 0
  2439                           
  2440                           ; 1 bytes @ 0x22
  2441  000023                     	ds	1
  2442  000024                     lcd_draw_string@y:
  2443                           	opt callstack 0
  2444  000024                     ___flmul@prod:
  2445                           	opt callstack 0
  2446                           
  2447                           ; 4 bytes @ 0x23
  2448  000024                     	ds	2
  2449  000026                     lcd_draw_string@pS:
  2450                           	opt callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x25
  2453  000026                     	ds	2
  2454  000028                     ??_dtoa:
  2455  000028                     lcd_draw_string@fg_color:
  2456                           	opt callstack 0
  2457  000028                     ___flmul@temp:
  2458                           	opt callstack 0
  2459                           
  2460                           ; 2 bytes @ 0x27
  2461  000028                     	ds	2
  2462  00002A                     ?___fltol:
  2463                           	opt callstack 0
  2464  00002A                     lcd_draw_string@bg_color:
  2465                           	opt callstack 0
  2466  00002A                     ___fltol@f1:
  2467                           	opt callstack 0
  2468                           
  2469                           ; 4 bytes @ 0x29
  2470  00002A                     	ds	2
  2471  00002C                     ??_lcd_draw_string:
  2472                           
  2473                           ; 1 bytes @ 0x2B
  2474  00002C                     	ds	2
  2475  00002E                     ??___fltol:
  2476                           
  2477                           ; 1 bytes @ 0x2D
  2478  00002E                     	ds	2
  2479  000030                     lcd_draw_string@k:
  2480                           	opt callstack 0
  2481  000030                     _dtoa$1556:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x2F
  2485  000030                     	ds	2
  2486  000032                     ___fltol@sign1:
  2487                           	opt callstack 0
  2488  000032                     lcd_draw_string@lIndex:
  2489                           	opt callstack 0
  2490  000032                     dtoa@p:
  2491                           	opt callstack 0
  2492                           
  2493                           ; 2 bytes @ 0x31
  2494  000032                     	ds	1
  2495  000033                     ___fltol@exp1:
  2496                           	opt callstack 0
  2497                           
  2498                           ; 1 bytes @ 0x32
  2499  000033                     	ds	1
  2500  000034                     dtoa@w:
  2501                           	opt callstack 0
  2502                           
  2503                           ; 2 bytes @ 0x33
  2504  000034                     	ds	2
  2505  000036                     dtoa@s:
  2506                           	opt callstack 0
  2507                           
  2508                           ; 2 bytes @ 0x35
  2509  000036                     	ds	2
  2510  000038                     dtoa@n:
  2511                           	opt callstack 0
  2512                           
  2513                           ; 8 bytes @ 0x37
  2514  000038                     	ds	8
  2515  000040                     dtoa@i:
  2516                           	opt callstack 0
  2517                           
  2518                           ; 2 bytes @ 0x3F
  2519  000040                     	ds	2
  2520  000042                     ?_vfpfcnvrt:
  2521                           	opt callstack 0
  2522  000042                     vfpfcnvrt@fp:
  2523                           	opt callstack 0
  2524                           
  2525                           ; 2 bytes @ 0x41
  2526  000042                     	ds	2
  2527  000044                     vfpfcnvrt@fmt:
  2528                           	opt callstack 0
  2529                           
  2530                           ; 2 bytes @ 0x43
  2531  000044                     	ds	2
  2532  000046                     vfpfcnvrt@ap:
  2533                           	opt callstack 0
  2534                           
  2535                           ; 2 bytes @ 0x45
  2536  000046                     	ds	2
  2537  000048                     ??_vfpfcnvrt:
  2538                           
  2539                           ; 1 bytes @ 0x47
  2540  000048                     	ds	2
  2541  00004A                     vfpfcnvrt@ll:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 8 bytes @ 0x49
  2545  00004A                     	ds	8
  2546  000052                     ?_vfprintf:
  2547                           	opt callstack 0
  2548  000052                     vfprintf@fp:
  2549                           	opt callstack 0
  2550                           
  2551                           ; 2 bytes @ 0x51
  2552  000052                     	ds	2
  2553  000054                     vfprintf@fmt:
  2554                           	opt callstack 0
  2555                           
  2556                           ; 2 bytes @ 0x53
  2557  000054                     	ds	2
  2558  000056                     vfprintf@ap:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 2 bytes @ 0x55
  2562  000056                     	ds	2
  2563  000058                     vfprintf@cfmt:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0x57
  2567  000058                     	ds	2
  2568  00005A                     
  2569                           ; 1 bytes @ 0x59
  2570 ;;
  2571 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2572 ;;
  2573 ;; *************** function _main *****************
  2574 ;; Defined at:
  2575 ;;		line 54 in file "main.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;Total ram usage:        2 bytes
  2594 ;; Hardware stack levels required when called:   12
  2595 ;; This function calls:
  2596 ;;		_INT0_SetInterruptHandler
  2597 ;;		_IOCB4_SetInterruptHandler
  2598 ;;		_SPI_Open
  2599 ;;		_SYSTEM_Initialize
  2600 ;;		_function_pwm
  2601 ;;		_function_relay
  2602 ;;		_lcd_draw_string
  2603 ;;		_lcd_fill_rect
  2604 ;;		_lcd_init
  2605 ;;		_sprintf
  2606 ;; This function is called by:
  2607 ;;		Startup code after reset
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text0
  2612  000B2A                     __ptext0:
  2613                           	opt callstack 0
  2614  000B2A                     _main:
  2615                           	opt callstack 19
  2616  000B2A                     
  2617                           ;main.c: 57:     SYSTEM_Initialize();
  2618  000B2A  EC2E  F010         	call	_SYSTEM_Initialize	;wreg free
  2619  000B2E                     
  2620                           ;main.c: 58:     SPI_Open(SPI_DEFAULT);
  2621  000B2E  0E00               	movlw	0
  2622  000B30  ECD9  F00C         	call	_SPI_Open
  2623  000B34                     
  2624                           ;main.c: 59:     lcd_init();
  2625  000B34  EC63  F002         	call	_lcd_init	;wreg free
  2626  000B38                     
  2627                           ;main.c: 62:     IOCB4_SetInterruptHandler(IOCB4_InterruptCall);
  2628  000B38  0ECA               	movlw	low _IOCB4_InterruptCall
  2629  000B3A  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  2630  000B3C  0E1D               	movlw	high _IOCB4_InterruptCall
  2631  000B3E  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  2632  000B40  ECC1  F010         	call	_IOCB4_SetInterruptHandler	;wreg free
  2633  000B44                     
  2634                           ;main.c: 63:     INT0_SetInterruptHandler(INT0_InterruptCall);
  2635  000B44  0E0C               	movlw	low _INT0_InterruptCall
  2636  000B46  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2637  000B48  0E21               	movlw	high _INT0_InterruptCall
  2638  000B4A  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2639  000B4C  ECC6  F010         	call	_INT0_SetInterruptHandler	;wreg free
  2640  000B50                     
  2641                           ;main.c: 66:     (INTCONbits.GIE = 1);
  2642  000B50  8EF2               	bsf	242,7,c	;volatile
  2643  000B52                     l3891:
  2644                           
  2645                           ;main.c: 78:     {;main.c: 80:         function_relay();
  2646  000B52  EC31  F00D         	call	_function_relay	;wreg free
  2647  000B56                     
  2648                           ;main.c: 81:         function_pwm();
  2649  000B56  ECC5  F00D         	call	_function_pwm	;wreg free
  2650                           
  2651                           ;main.c: 82:         switch(menu){
  2652  000B5A  EF96  F006         	goto	l3943
  2653  000B5E                     l3895:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;main.c: 85:                  if(clean==1){
  2657  000B5E  0568               	decf	_clean& (0+255),w,b
  2658  000B60  1169               	iorwf	(_clean+1)& (0+255),w,b
  2659  000B62  A4D8               	btfss	status,2,c
  2660  000B64  EFB6  F005         	goto	u2941
  2661  000B68  EFB8  F005         	goto	u2940
  2662  000B6C                     u2941:
  2663  000B6C  EFCE  F005         	goto	l3899
  2664  000B70                     u2940:
  2665  000B70                     
  2666                           ; BSR set to: 0
  2667                           ;main.c: 86:                  lcd_fill_rect(80,70,300,150,0x0000);
  2668  000B70  0E00               	movlw	0
  2669  000B72  6E0D               	movwf	(lcd_fill_rect@x0+1)^0,c
  2670  000B74  0E50               	movlw	80
  2671  000B76  6E0C               	movwf	lcd_fill_rect@x0^0,c
  2672  000B78  0E00               	movlw	0
  2673  000B7A  6E0F               	movwf	(lcd_fill_rect@y0+1)^0,c
  2674  000B7C  0E46               	movlw	70
  2675  000B7E  6E0E               	movwf	lcd_fill_rect@y0^0,c
  2676  000B80  0E01               	movlw	1
  2677  000B82  6E11               	movwf	(lcd_fill_rect@x1+1)^0,c
  2678  000B84  0E2C               	movlw	44
  2679  000B86  6E10               	movwf	lcd_fill_rect@x1^0,c
  2680  000B88  0E00               	movlw	0
  2681  000B8A  6E13               	movwf	(lcd_fill_rect@y1+1)^0,c
  2682  000B8C  0E96               	movlw	150
  2683  000B8E  6E12               	movwf	lcd_fill_rect@y1^0,c
  2684  000B90  0E00               	movlw	0
  2685  000B92  6E15               	movwf	(lcd_fill_rect@color+1)^0,c
  2686  000B94  0E00               	movlw	0
  2687  000B96  6E14               	movwf	lcd_fill_rect@color^0,c
  2688  000B98  ECA2  F00B         	call	_lcd_fill_rect	;wreg free
  2689  000B9C                     l3899:
  2690                           
  2691                           ;main.c: 88:                  clean=0;
  2692  000B9C  0E00               	movlw	0
  2693  000B9E  0100               	movlb	0	; () banked
  2694  000BA0  6F69               	movwf	(_clean+1)& (0+255),b
  2695  000BA2  0E00               	movlw	0
  2696  000BA4  6F68               	movwf	_clean& (0+255),b
  2697  000BA6                     
  2698                           ; BSR set to: 0
  2699                           ;main.c: 90:                 sprintf(lcd_pot,"POT: %d%%",pot_val);
  2700  000BA6  0E64               	movlw	low _lcd_pot
  2701  000BA8  6F90               	movwf	sprintf@s& (0+255),b
  2702  000BAA  0E01               	movlw	high _lcd_pot
  2703  000BAC  6F91               	movwf	(sprintf@s+1)& (0+255),b
  2704  000BAE  0EF5               	movlw	low STR_1
  2705  000BB0  6F92               	movwf	sprintf@fmt& (0+255),b
  2706  000BB2  0EFF               	movlw	high STR_1
  2707  000BB4  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  2708  000BB6  C08E  F094         	movff	_pot_val,?_sprintf+4
  2709  000BBA  C08F  F095         	movff	_pot_val+1,?_sprintf+5
  2710  000BBE  EC2A  F00E         	call	_sprintf	;wreg free
  2711  000BC2                     
  2712                           ;main.c: 91:                 lcd_draw_string (130,120,lcd_pot,0x07FF,0x0000);
  2713  000BC2  0E00               	movlw	0
  2714  000BC4  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  2715  000BC6  0E82               	movlw	130
  2716  000BC8  6E22               	movwf	lcd_draw_string@x^0,c
  2717  000BCA  0E00               	movlw	0
  2718  000BCC  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  2719  000BCE  0E78               	movlw	120
  2720  000BD0  6E24               	movwf	lcd_draw_string@y^0,c
  2721  000BD2  0E64               	movlw	low _lcd_pot
  2722  000BD4  6E26               	movwf	lcd_draw_string@pS^0,c
  2723  000BD6  0E01               	movlw	high _lcd_pot
  2724  000BD8  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  2725  000BDA  0E07               	movlw	7
  2726  000BDC  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  2727  000BDE  6828               	setf	lcd_draw_string@fg_color^0,c
  2728  000BE0  0E00               	movlw	0
  2729  000BE2  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  2730  000BE4  0E00               	movlw	0
  2731  000BE6  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  2732  000BE8  EC22  F00B         	call	_lcd_draw_string	;wreg free
  2733  000BEC                     
  2734                           ;main.c: 93:                 LATAbits.LATA5=0;
  2735  000BEC  9A89               	bcf	137,5,c	;volatile
  2736  000BEE                     
  2737                           ;main.c: 94:                 LATAbits.LATA6=0;
  2738  000BEE  9C89               	bcf	137,6,c	;volatile
  2739                           
  2740                           ;main.c: 96:                  break;
  2741  000BF0  EFA9  F005         	goto	l3891
  2742  000BF4                     l3909:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;main.c: 99:                  if(clean==1){
  2746  000BF4  0568               	decf	_clean& (0+255),w,b
  2747  000BF6  1169               	iorwf	(_clean+1)& (0+255),w,b
  2748  000BF8  A4D8               	btfss	status,2,c
  2749  000BFA  EF01  F006         	goto	u2951
  2750  000BFE  EF03  F006         	goto	u2950
  2751  000C02                     u2951:
  2752  000C02  EF19  F006         	goto	l3913
  2753  000C06                     u2950:
  2754  000C06                     
  2755                           ; BSR set to: 0
  2756                           ;main.c: 100:                  lcd_fill_rect(80,70,300,150,0x0000);
  2757  000C06  0E00               	movlw	0
  2758  000C08  6E0D               	movwf	(lcd_fill_rect@x0+1)^0,c
  2759  000C0A  0E50               	movlw	80
  2760  000C0C  6E0C               	movwf	lcd_fill_rect@x0^0,c
  2761  000C0E  0E00               	movlw	0
  2762  000C10  6E0F               	movwf	(lcd_fill_rect@y0+1)^0,c
  2763  000C12  0E46               	movlw	70
  2764  000C14  6E0E               	movwf	lcd_fill_rect@y0^0,c
  2765  000C16  0E01               	movlw	1
  2766  000C18  6E11               	movwf	(lcd_fill_rect@x1+1)^0,c
  2767  000C1A  0E2C               	movlw	44
  2768  000C1C  6E10               	movwf	lcd_fill_rect@x1^0,c
  2769  000C1E  0E00               	movlw	0
  2770  000C20  6E13               	movwf	(lcd_fill_rect@y1+1)^0,c
  2771  000C22  0E96               	movlw	150
  2772  000C24  6E12               	movwf	lcd_fill_rect@y1^0,c
  2773  000C26  0E00               	movlw	0
  2774  000C28  6E15               	movwf	(lcd_fill_rect@color+1)^0,c
  2775  000C2A  0E00               	movlw	0
  2776  000C2C  6E14               	movwf	lcd_fill_rect@color^0,c
  2777  000C2E  ECA2  F00B         	call	_lcd_fill_rect	;wreg free
  2778  000C32                     l3913:
  2779                           
  2780                           ;main.c: 102:                  clean=0;
  2781  000C32  0E00               	movlw	0
  2782  000C34  0100               	movlb	0	; () banked
  2783  000C36  6F69               	movwf	(_clean+1)& (0+255),b
  2784  000C38  0E00               	movlw	0
  2785  000C3A  6F68               	movwf	_clean& (0+255),b
  2786  000C3C                     
  2787                           ; BSR set to: 0
  2788                           ;main.c: 104:                 sprintf(lcd_const_A,"CONSTANTE_A: %d",42);
  2789  000C3C  0E00               	movlw	low _lcd_const_A
  2790  000C3E  6F90               	movwf	sprintf@s& (0+255),b
  2791  000C40  0E01               	movlw	high _lcd_const_A
  2792  000C42  6F91               	movwf	(sprintf@s+1)& (0+255),b
  2793  000C44  0ED5               	movlw	low STR_2
  2794  000C46  6F92               	movwf	sprintf@fmt& (0+255),b
  2795  000C48  0EFF               	movlw	high STR_2
  2796  000C4A  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  2797  000C4C  0E00               	movlw	0
  2798  000C4E  6F95               	movwf	(?_sprintf+5)& (0+255),b
  2799  000C50  0E2A               	movlw	42
  2800  000C52  6F94               	movwf	(?_sprintf+4)& (0+255),b
  2801  000C54  EC2A  F00E         	call	_sprintf	;wreg free
  2802  000C58                     
  2803                           ;main.c: 105:                 lcd_draw_string (95,120,lcd_const_A,0x07FF,0x0000);
  2804  000C58  0E00               	movlw	0
  2805  000C5A  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  2806  000C5C  0E5F               	movlw	95
  2807  000C5E  6E22               	movwf	lcd_draw_string@x^0,c
  2808  000C60  0E00               	movlw	0
  2809  000C62  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  2810  000C64  0E78               	movlw	120
  2811  000C66  6E24               	movwf	lcd_draw_string@y^0,c
  2812  000C68  0E00               	movlw	low _lcd_const_A
  2813  000C6A  6E26               	movwf	lcd_draw_string@pS^0,c
  2814  000C6C  0E01               	movlw	high _lcd_const_A
  2815  000C6E  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  2816  000C70  0E07               	movlw	7
  2817  000C72  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  2818  000C74  6828               	setf	lcd_draw_string@fg_color^0,c
  2819  000C76  0E00               	movlw	0
  2820  000C78  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  2821  000C7A  0E00               	movlw	0
  2822  000C7C  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  2823  000C7E  EC22  F00B         	call	_lcd_draw_string	;wreg free
  2824  000C82                     
  2825                           ;main.c: 107:                 LATAbits.LATA5=1;
  2826  000C82  8A89               	bsf	137,5,c	;volatile
  2827  000C84                     
  2828                           ;main.c: 108:                 LATAbits.LATA6=0;
  2829  000C84  9C89               	bcf	137,6,c	;volatile
  2830                           
  2831                           ;main.c: 110:                  break;
  2832  000C86  EFA9  F005         	goto	l3891
  2833  000C8A                     l3923:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 113:                  if(clean==1){
  2837  000C8A  0568               	decf	_clean& (0+255),w,b
  2838  000C8C  1169               	iorwf	(_clean+1)& (0+255),w,b
  2839  000C8E  A4D8               	btfss	status,2,c
  2840  000C90  EF4C  F006         	goto	u2961
  2841  000C94  EF4E  F006         	goto	u2960
  2842  000C98                     u2961:
  2843  000C98  EF64  F006         	goto	l3927
  2844  000C9C                     u2960:
  2845  000C9C                     
  2846                           ; BSR set to: 0
  2847                           ;main.c: 114:                  lcd_fill_rect(80,70,300,150,0x0000);
  2848  000C9C  0E00               	movlw	0
  2849  000C9E  6E0D               	movwf	(lcd_fill_rect@x0+1)^0,c
  2850  000CA0  0E50               	movlw	80
  2851  000CA2  6E0C               	movwf	lcd_fill_rect@x0^0,c
  2852  000CA4  0E00               	movlw	0
  2853  000CA6  6E0F               	movwf	(lcd_fill_rect@y0+1)^0,c
  2854  000CA8  0E46               	movlw	70
  2855  000CAA  6E0E               	movwf	lcd_fill_rect@y0^0,c
  2856  000CAC  0E01               	movlw	1
  2857  000CAE  6E11               	movwf	(lcd_fill_rect@x1+1)^0,c
  2858  000CB0  0E2C               	movlw	44
  2859  000CB2  6E10               	movwf	lcd_fill_rect@x1^0,c
  2860  000CB4  0E00               	movlw	0
  2861  000CB6  6E13               	movwf	(lcd_fill_rect@y1+1)^0,c
  2862  000CB8  0E96               	movlw	150
  2863  000CBA  6E12               	movwf	lcd_fill_rect@y1^0,c
  2864  000CBC  0E00               	movlw	0
  2865  000CBE  6E15               	movwf	(lcd_fill_rect@color+1)^0,c
  2866  000CC0  0E00               	movlw	0
  2867  000CC2  6E14               	movwf	lcd_fill_rect@color^0,c
  2868  000CC4  ECA2  F00B         	call	_lcd_fill_rect	;wreg free
  2869  000CC8                     l3927:
  2870                           
  2871                           ;main.c: 116:                  clean=0;
  2872  000CC8  0E00               	movlw	0
  2873  000CCA  0100               	movlb	0	; () banked
  2874  000CCC  6F69               	movwf	(_clean+1)& (0+255),b
  2875  000CCE  0E00               	movlw	0
  2876  000CD0  6F68               	movwf	_clean& (0+255),b
  2877  000CD2                     
  2878                           ; BSR set to: 0
  2879                           ;main.c: 118:                 sprintf(lcd_const_B,"CONSTANTE_B: %d",30);
  2880  000CD2  0E00               	movlw	low _lcd_const_B
  2881  000CD4  6F90               	movwf	sprintf@s& (0+255),b
  2882  000CD6  0E02               	movlw	high _lcd_const_B
  2883  000CD8  6F91               	movwf	(sprintf@s+1)& (0+255),b
  2884  000CDA  0EE5               	movlw	low STR_3
  2885  000CDC  6F92               	movwf	sprintf@fmt& (0+255),b
  2886  000CDE  0EFF               	movlw	high STR_3
  2887  000CE0  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  2888  000CE2  0E00               	movlw	0
  2889  000CE4  6F95               	movwf	(?_sprintf+5)& (0+255),b
  2890  000CE6  0E1E               	movlw	30
  2891  000CE8  6F94               	movwf	(?_sprintf+4)& (0+255),b
  2892  000CEA  EC2A  F00E         	call	_sprintf	;wreg free
  2893  000CEE                     
  2894                           ;main.c: 119:                 lcd_draw_string (95,120,lcd_const_B,0x07FF,0x0000);
  2895  000CEE  0E00               	movlw	0
  2896  000CF0  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  2897  000CF2  0E5F               	movlw	95
  2898  000CF4  6E22               	movwf	lcd_draw_string@x^0,c
  2899  000CF6  0E00               	movlw	0
  2900  000CF8  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  2901  000CFA  0E78               	movlw	120
  2902  000CFC  6E24               	movwf	lcd_draw_string@y^0,c
  2903  000CFE  0E00               	movlw	low _lcd_const_B
  2904  000D00  6E26               	movwf	lcd_draw_string@pS^0,c
  2905  000D02  0E02               	movlw	high _lcd_const_B
  2906  000D04  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  2907  000D06  0E07               	movlw	7
  2908  000D08  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  2909  000D0A  6828               	setf	lcd_draw_string@fg_color^0,c
  2910  000D0C  0E00               	movlw	0
  2911  000D0E  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  2912  000D10  0E00               	movlw	0
  2913  000D12  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  2914  000D14  EC22  F00B         	call	_lcd_draw_string	;wreg free
  2915  000D18                     
  2916                           ;main.c: 121:                 LATAbits.LATA5=0;
  2917  000D18  9A89               	bcf	137,5,c	;volatile
  2918  000D1A                     
  2919                           ;main.c: 122:                 LATAbits.LATA6=1;
  2920  000D1A  8C89               	bsf	137,6,c	;volatile
  2921  000D1C                     
  2922                           ;main.c: 123:                 LATAbits.LATA7=1;
  2923  000D1C  8E89               	bsf	137,7,c	;volatile
  2924  000D1E                     
  2925                           ;main.c: 125:                  menu=0;
  2926  000D1E  0E00               	movlw	0
  2927  000D20  0100               	movlb	0	; () banked
  2928  000D22  6FAB               	movwf	(_menu+1)& (0+255),b
  2929  000D24  0E00               	movlw	0
  2930  000D26  6FAA               	movwf	_menu& (0+255),b
  2931                           
  2932                           ;main.c: 126:                  break;
  2933  000D28  EFA9  F005         	goto	l3891
  2934  000D2C                     l3943:
  2935  000D2C  C0AA  F0A0         	movff	_menu,??_main
  2936  000D30  C0AB  F0A1         	movff	_menu+1,??_main+1
  2937                           
  2938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2939                           ; Switch size 1, requested type "simple"
  2940                           ; Number of cases is 1, Range of values is 0 to 0
  2941                           ; switch strategies available:
  2942                           ; Name         Instructions Cycles
  2943                           ; simple_byte            4     3 (average)
  2944                           ;	Chosen strategy is simple_byte
  2945  000D34  0100               	movlb	0	; () banked
  2946  000D36  51A1               	movf	(??_main+1)& (0+255),w,b
  2947  000D38  0A00               	xorlw	0	; case 0
  2948  000D3A  B4D8               	btfsc	status,2,c
  2949  000D3C  EFA2  F006         	goto	l3969
  2950  000D40  EFA9  F005         	goto	l3891
  2951  000D44                     l3969:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ; Switch size 1, requested type "simple"
  2955                           ; Number of cases is 3, Range of values is 1 to 3
  2956                           ; switch strategies available:
  2957                           ; Name         Instructions Cycles
  2958                           ; simple_byte           10     6 (average)
  2959                           ;	Chosen strategy is simple_byte
  2960  000D44  51A0               	movf	??_main& (0+255),w,b
  2961  000D46  0A01               	xorlw	1	; case 1
  2962  000D48  B4D8               	btfsc	status,2,c
  2963  000D4A  EFAF  F005         	goto	l3895
  2964  000D4E  0A03               	xorlw	3	; case 2
  2965  000D50  B4D8               	btfsc	status,2,c
  2966  000D52  EFFA  F005         	goto	l3909
  2967  000D56  0A01               	xorlw	1	; case 3
  2968  000D58  B4D8               	btfsc	status,2,c
  2969  000D5A  EF45  F006         	goto	l3923
  2970  000D5E  EFA9  F005         	goto	l3891
  2971  000D62  EF4C  F000         	goto	start
  2972  000D66                     __end_of_main:
  2973                           	opt callstack 0
  2974                           
  2975 ;; *************** function _sprintf *****************
  2976 ;; Defined at:
  2977 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2980 ;;		 -> lcd_const_B(100), lcd_const_A(100), lcd_pot(100), 
  2981 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2982 ;;		 -> STR_3(16), STR_2(16), STR_1(10), 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  f               6   10[BANK0 ] struct _IO_FILE
  2985 ;;  ap              2    8[BANK0 ] PTR void [1]
  2986 ;;		 -> ?_sprintf(2), 
  2987 ;;  ret             2    0        int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    0[BANK0 ] int 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2997 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3001 ;;Total ram usage:       16 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:   11
  3004 ;; This function calls:
  3005 ;;		_vfprintf
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text1
  3012  001C54                     __ptext1:
  3013                           	opt callstack 0
  3014  001C54                     _sprintf:
  3015                           	opt callstack 19
  3016  001C54  0E94               	movlw	low (?_sprintf+4)
  3017  001C56  0100               	movlb	0	; () banked
  3018  001C58  6F98               	movwf	sprintf@ap& (0+255),b
  3019  001C5A  0E00               	movlw	high (?_sprintf+4)
  3020  001C5C  6F99               	movwf	(sprintf@ap+1)& (0+255),b
  3021  001C5E  C090  F09A         	movff	sprintf@s,sprintf@f
  3022  001C62  C091  F09B         	movff	sprintf@s+1,sprintf@f+1
  3023  001C66                     
  3024                           ; BSR set to: 0
  3025  001C66  0E00               	movlw	0
  3026  001C68  6F9D               	movwf	(sprintf@f+3)& (0+255),b
  3027  001C6A  0E00               	movlw	0
  3028  001C6C  6F9C               	movwf	(sprintf@f+2)& (0+255),b
  3029  001C6E                     
  3030                           ; BSR set to: 0
  3031  001C6E  0E00               	movlw	0
  3032  001C70  6F9F               	movwf	(sprintf@f+5)& (0+255),b
  3033  001C72  0E00               	movlw	0
  3034  001C74  6F9E               	movwf	(sprintf@f+4)& (0+255),b
  3035  001C76                     
  3036                           ; BSR set to: 0
  3037  001C76  0E9A               	movlw	low sprintf@f
  3038  001C78  6E52               	movwf	vfprintf@fp^0,c
  3039  001C7A  0E00               	movlw	high sprintf@f
  3040  001C7C  6E53               	movwf	(vfprintf@fp+1)^0,c
  3041  001C7E  C092  F054         	movff	sprintf@fmt,vfprintf@fmt
  3042  001C82  C093  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3043  001C86  0E98               	movlw	low sprintf@ap
  3044  001C88  6E56               	movwf	vfprintf@ap^0,c
  3045  001C8A  0E00               	movlw	high sprintf@ap
  3046  001C8C  6E57               	movwf	(vfprintf@ap+1)^0,c
  3047  001C8E  ECF8  F00D         	call	_vfprintf	;wreg free
  3048  001C92  0100               	movlb	0	; () banked
  3049  001C94  519C               	movf	(sprintf@f+2)& (0+255),w,b
  3050  001C96  2590               	addwf	sprintf@s& (0+255),w,b
  3051  001C98  6ED9               	movwf	fsr2l,c
  3052  001C9A  519D               	movf	(sprintf@f+3)& (0+255),w,b
  3053  001C9C  2191               	addwfc	(sprintf@s+1)& (0+255),w,b
  3054  001C9E  6EDA               	movwf	fsr2h,c
  3055  001CA0  0E00               	movlw	0
  3056  001CA2  6EDF               	movwf	indf2,c
  3057  001CA4                     
  3058                           ; BSR set to: 0
  3059  001CA4  0012               	return		;funcret
  3060  001CA6                     __end_of_sprintf:
  3061                           	opt callstack 0
  3062                           
  3063 ;; *************** function _vfprintf *****************
  3064 ;; Defined at:
  3065 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  3068 ;;		 -> sprintf@f(6), 
  3069 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  3070 ;;		 -> STR_3(16), STR_2(16), STR_1(10), 
  3071 ;;  ap              2   85[COMRAM] PTR PTR void 
  3072 ;;		 -> sprintf@ap(2), 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  3075 ;;		 -> STR_3(16), STR_2(16), STR_1(10), 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2   81[COMRAM] int 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3085 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;Total ram usage:        8 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:   10
  3092 ;; This function calls:
  3093 ;;		_vfpfcnvrt
  3094 ;; This function is called by:
  3095 ;;		_sprintf
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text2
  3100  001BF0                     __ptext2:
  3101                           	opt callstack 0
  3102  001BF0                     _vfprintf:
  3103                           	opt callstack 19
  3104  001BF0                     
  3105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3106  001BF0  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  3107  001BF4  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3108  001BF8                     
  3109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3110  001BF8  0E00               	movlw	0
  3111  001BFA  0100               	movlb	0	; () banked
  3112  001BFC  6F61               	movwf	(_nout+1)& (0+255),b
  3113  001BFE  0E00               	movlw	0
  3114  001C00  6F60               	movwf	_nout& (0+255),b
  3115                           
  3116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3117  001C02  EF16  F00E         	goto	l3107
  3118  001C06                     l3105:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3122  001C06  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  3123  001C0A  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3124  001C0E  0E58               	movlw	low vfprintf@cfmt
  3125  001C10  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3126  001C12  0E00               	movlw	high vfprintf@cfmt
  3127  001C14  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3128  001C16  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  3129  001C1A  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3130  001C1E  ECB3  F006         	call	_vfpfcnvrt	;wreg free
  3131  001C22  5042               	movf	?_vfpfcnvrt^0,w,c
  3132  001C24  0100               	movlb	0	; () banked
  3133  001C26  2760               	addwf	_nout& (0+255),f,b
  3134  001C28  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  3135  001C2A  2361               	addwfc	(_nout+1)& (0+255),f,b
  3136  001C2C                     l3107:
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3140  001C2C  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  3141  001C30  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3142  001C34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3143  001C34  6AF8               	clrf	tblptru,c
  3144  001C36                     	endif
  3145  001C36                     	if	0	;tblptru may be non-zero
  3146  001C36                     	endif
  3147  001C36  0008               	tblrd		*
  3148  001C38  50F5               	movf	tablat,w,c
  3149  001C3A  0900               	iorlw	0
  3150  001C3C  A4D8               	btfss	status,2,c
  3151  001C3E  EF23  F00E         	goto	u2181
  3152  001C42  EF25  F00E         	goto	u2180
  3153  001C46                     u2181:
  3154  001C46  EF03  F00E         	goto	l3105
  3155  001C4A                     u2180:
  3156  001C4A                     
  3157                           ; BSR set to: 0
  3158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3159  001C4A  C060  F052         	movff	_nout,?_vfprintf
  3160  001C4E  C061  F053         	movff	_nout+1,?_vfprintf+1
  3161  001C52                     
  3162                           ; BSR set to: 0
  3163  001C52  0012               	return		;funcret
  3164  001C54                     __end_of_vfprintf:
  3165                           	opt callstack 0
  3166                           
  3167 ;; *************** function _vfpfcnvrt *****************
  3168 ;; Defined at:
  3169 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  3172 ;;		 -> sprintf@f(6), 
  3173 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  3174 ;;		 -> vfprintf@cfmt(2), 
  3175 ;;  ap              2   69[COMRAM] PTR PTR void 
  3176 ;;		 -> sprintf@ap(2), 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  ll              8   73[COMRAM] long long 
  3179 ;;  llu             8    0        unsigned long long 
  3180 ;;  f               4    0        unsigned long long 
  3181 ;;  vp              3    0        PTR void 
  3182 ;;  ct              3    0        unsigned char [3]
  3183 ;;  cp              3    0        PTR unsigned char 
  3184 ;;  i               2    0        int 
  3185 ;;  done            2    0        int 
  3186 ;;  c               1    0        unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   65[COMRAM] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3196 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;Total ram usage:       16 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    9
  3203 ;; This function calls:
  3204 ;;		_dtoa
  3205 ;;		_fputc
  3206 ;; This function is called by:
  3207 ;;		_vfprintf
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text3
  3212  000D66                     __ptext3:
  3213                           	opt callstack 0
  3214  000D66                     _vfpfcnvrt:
  3215                           	opt callstack 19
  3216  000D66                     
  3217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3218  000D66  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3219  000D6A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3220  000D6E  CFDE FFF6          	movff	postinc2,tblptrl
  3221  000D72  CFDD FFF7          	movff	postdec2,tblptrh
  3222  000D76                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3223  000D76  6AF8               	clrf	tblptru,c
  3224  000D78                     	endif
  3225  000D78                     	if	0	;tblptru may be non-zero
  3226  000D78                     	endif
  3227  000D78  0008               	tblrd		*
  3228  000D7A  50F5               	movf	tablat,w,c
  3229  000D7C  0A25               	xorlw	37
  3230  000D7E  A4D8               	btfss	status,2,c
  3231  000D80  EFC4  F006         	goto	u1991
  3232  000D84  EFC6  F006         	goto	u1990
  3233  000D88                     u1991:
  3234  000D88  EF75  F007         	goto	l2963
  3235  000D8C                     u1990:
  3236  000D8C                     
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3238  000D8C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3239  000D90  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3240  000D94  2ADE               	incf	postinc2,f,c
  3241  000D96  0E00               	movlw	0
  3242  000D98  22DD               	addwfc	postdec2,f,c
  3243  000D9A                     
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3245  000D9A  0E00               	movlw	0
  3246  000D9C  0100               	movlb	0	; () banked
  3247  000D9E  6F63               	movwf	(_width+1)& (0+255),b
  3248  000DA0  0E00               	movlw	0
  3249  000DA2  6F62               	movwf	_width& (0+255),b
  3250  000DA4  C062  F05A         	movff	_width,_flags
  3251  000DA8  C063  F05B         	movff	_width+1,_flags+1
  3252  000DAC                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3255  000DAC  6964               	setf	_prec& (0+255),b
  3256  000DAE  6965               	setf	(_prec+1)& (0+255),b
  3257  000DB0                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3260  000DB0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3261  000DB4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3262  000DB8  CFDE FFF6          	movff	postinc2,tblptrl
  3263  000DBC  CFDD FFF7          	movff	postdec2,tblptrh
  3264  000DC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3265  000DC0  6AF8               	clrf	tblptru,c
  3266  000DC2                     	endif
  3267  000DC2                     	if	0	;tblptru may be non-zero
  3268  000DC2                     	endif
  3269  000DC2  0008               	tblrd		*
  3270  000DC4  50F5               	movf	tablat,w,c
  3271  000DC6  0A64               	xorlw	100
  3272  000DC8  B4D8               	btfsc	status,2,c
  3273  000DCA  EFE9  F006         	goto	u2001
  3274  000DCE  EFEB  F006         	goto	u2000
  3275  000DD2                     u2001:
  3276  000DD2  EFFE  F006         	goto	l2941
  3277  000DD6                     u2000:
  3278  000DD6                     
  3279                           ; BSR set to: 0
  3280  000DD6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3281  000DDA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3282  000DDE  CFDE FFF6          	movff	postinc2,tblptrl
  3283  000DE2  CFDD FFF7          	movff	postdec2,tblptrh
  3284  000DE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3285  000DE6  6AF8               	clrf	tblptru,c
  3286  000DE8                     	endif
  3287  000DE8                     	if	0	;tblptru may be non-zero
  3288  000DE8                     	endif
  3289  000DE8  0008               	tblrd		*
  3290  000DEA  50F5               	movf	tablat,w,c
  3291  000DEC  0A69               	xorlw	105
  3292  000DEE  A4D8               	btfss	status,2,c
  3293  000DF0  EFFC  F006         	goto	u2011
  3294  000DF4  EFFE  F006         	goto	u2010
  3295  000DF8                     u2011:
  3296  000DF8  EF3E  F007         	goto	l2947
  3297  000DFC                     u2010:
  3298  000DFC                     l2941:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3302  000DFC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3303  000E00  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3304  000E04  2ADE               	incf	postinc2,f,c
  3305  000E06  0E00               	movlw	0
  3306  000E08  22DD               	addwfc	postdec2,f,c
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3309  000E0A  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3310  000E0E  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3311  000E12  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3312  000E16  0E02               	movlw	2
  3313  000E18  26DE               	addwf	postinc2,f,c
  3314  000E1A  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3315  000E1E  0E00               	movlw	0
  3316  000E20  22DD               	addwfc	postdec2,f,c
  3317  000E22  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3318  000E26  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3319  000E2A  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  3320  000E2E  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  3321  000E32  0E00               	movlw	0
  3322  000E34  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3323  000E36  0EFF               	movlw	-1
  3324  000E38  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  3325  000E3A  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  3326  000E3C  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  3327  000E3E  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  3328  000E40  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  3329  000E42  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  3330  000E44                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  3333  000E44  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3334  000E48  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3335  000E4C  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  3336  000E50  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3337  000E54  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3338  000E58  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3339  000E5C  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3340  000E60  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3341  000E64  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3342  000E68  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3343  000E6C  EC26  F004         	call	_dtoa	;wreg free
  3344  000E70  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  3345  000E74  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3346  000E78  EF91  F007         	goto	l647
  3347  000E7C                     l2947:
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3351  000E7C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3352  000E80  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3353  000E84  CFDE FFF6          	movff	postinc2,tblptrl
  3354  000E88  CFDD FFF7          	movff	postdec2,tblptrh
  3355  000E8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3356  000E8C  6AF8               	clrf	tblptru,c
  3357  000E8E                     	endif
  3358  000E8E                     	if	0	;tblptru may be non-zero
  3359  000E8E                     	endif
  3360  000E8E  0008               	tblrd		*
  3361  000E90  50F5               	movf	tablat,w,c
  3362  000E92  0A25               	xorlw	37
  3363  000E94  A4D8               	btfss	status,2,c
  3364  000E96  EF4F  F007         	goto	u2021
  3365  000E9A  EF51  F007         	goto	u2020
  3366  000E9E                     u2021:
  3367  000E9E  EF68  F007         	goto	l2957
  3368  000EA2                     u2020:
  3369  000EA2                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3372  000EA2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3373  000EA6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3374  000EAA  2ADE               	incf	postinc2,f,c
  3375  000EAC  0E00               	movlw	0
  3376  000EAE  22DD               	addwfc	postdec2,f,c
  3377  000EB0                     
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3380  000EB0  0E00               	movlw	0
  3381  000EB2  6E04               	movwf	(fputc@c+1)^0,c
  3382  000EB4  0E25               	movlw	37
  3383  000EB6  6E03               	movwf	fputc@c^0,c
  3384  000EB8  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3385  000EBC  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3386  000EC0  EC13  F00C         	call	_fputc	;wreg free
  3387  000EC4                     l2953:
  3388                           
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3390  000EC4  0E00               	movlw	0
  3391  000EC6  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  3392  000EC8  0E01               	movlw	1
  3393  000ECA  6E42               	movwf	?_vfpfcnvrt^0,c
  3394  000ECC  EF91  F007         	goto	l647
  3395  000ED0                     l2957:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3399  000ED0  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3400  000ED4  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3401  000ED8  2ADE               	incf	postinc2,f,c
  3402  000EDA  0E00               	movlw	0
  3403  000EDC  22DD               	addwfc	postdec2,f,c
  3404  000EDE                     
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3407  000EDE  0E00               	movlw	0
  3408  000EE0  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  3409  000EE2  0E00               	movlw	0
  3410  000EE4  6E42               	movwf	?_vfpfcnvrt^0,c
  3411  000EE6  EF91  F007         	goto	l647
  3412  000EEA                     l2963:
  3413                           
  3414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3415  000EEA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3416  000EEE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3417  000EF2  CFDE FFF6          	movff	postinc2,tblptrl
  3418  000EF6  CFDD FFF7          	movff	postdec2,tblptrh
  3419  000EFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3420  000EFA  6AF8               	clrf	tblptru,c
  3421  000EFC                     	endif
  3422  000EFC                     	if	0	;tblptru may be non-zero
  3423  000EFC                     	endif
  3424  000EFC  0008               	tblrd		*
  3425  000EFE  50F5               	movf	tablat,w,c
  3426  000F00  6E03               	movwf	fputc@c^0,c
  3427  000F02  6A04               	clrf	(fputc@c+1)^0,c
  3428  000F04  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3429  000F08  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3430  000F0C  EC13  F00C         	call	_fputc	;wreg free
  3431  000F10                     
  3432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3433  000F10  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3434  000F14  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3435  000F18  2ADE               	incf	postinc2,f,c
  3436  000F1A  0E00               	movlw	0
  3437  000F1C  22DD               	addwfc	postdec2,f,c
  3438  000F1E  EF62  F007         	goto	l2953
  3439  000F22                     l647:
  3440  000F22  0012               	return		;funcret
  3441  000F24                     __end_of_vfpfcnvrt:
  3442                           	opt callstack 0
  3443                           
  3444 ;; *************** function _dtoa *****************
  3445 ;; Defined at:
  3446 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3449 ;;		 -> sprintf@f(6), 
  3450 ;;  d               8   31[COMRAM] long long 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  n               8   55[COMRAM] long long 
  3453 ;;  i               2   63[COMRAM] int 
  3454 ;;  s               2   53[COMRAM] int 
  3455 ;;  w               2   51[COMRAM] int 
  3456 ;;  p               2   49[COMRAM] int 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2   29[COMRAM] int 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3466 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3467 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3468 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3469 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3470 ;;Total ram usage:       36 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    8
  3473 ;; This function calls:
  3474 ;;		___aodiv
  3475 ;;		___aomod
  3476 ;;		_abs
  3477 ;;		_pad
  3478 ;; This function is called by:
  3479 ;;		_vfpfcnvrt
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text4
  3484  00084C                     __ptext4:
  3485                           	opt callstack 0
  3486  00084C                     _dtoa:
  3487                           	opt callstack 19
  3488  00084C                     
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  3490  00084C  C020  F038         	movff	dtoa@d,dtoa@n
  3491  000850  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  3492  000854  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  3493  000858  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  3494  00085C  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  3495  000860  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  3496  000864  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  3497  000868  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  3498  00086C                     
  3499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  3500  00086C  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  3501  00086E  EF3B  F004         	goto	u1781
  3502  000872  EF3E  F004         	goto	u1780
  3503  000876                     u1781:
  3504  000876  0E01               	movlw	1
  3505  000878  EF3F  F004         	goto	u1790
  3506  00087C                     u1780:
  3507  00087C  0E00               	movlw	0
  3508  00087E                     u1790:
  3509  00087E  6E36               	movwf	dtoa@s^0,c
  3510  000880  6A37               	clrf	(dtoa@s+1)^0,c
  3511                           
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  3513  000882  5036               	movf	dtoa@s^0,w,c
  3514  000884  1037               	iorwf	(dtoa@s+1)^0,w,c
  3515  000886  B4D8               	btfsc	status,2,c
  3516  000888  EF48  F004         	goto	u1801
  3517  00088C  EF4A  F004         	goto	u1800
  3518  000890                     u1801:
  3519  000890  EF5A  F004         	goto	l2839
  3520  000894                     u1800:
  3521  000894                     
  3522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  3523  000894  1E3F               	comf	(dtoa@n+7)^0,f,c
  3524  000896  1E3E               	comf	(dtoa@n+6)^0,f,c
  3525  000898  1E3D               	comf	(dtoa@n+5)^0,f,c
  3526  00089A  1E3C               	comf	(dtoa@n+4)^0,f,c
  3527  00089C  1E3B               	comf	(dtoa@n+3)^0,f,c
  3528  00089E  1E3A               	comf	(dtoa@n+2)^0,f,c
  3529  0008A0  1E39               	comf	(dtoa@n+1)^0,f,c
  3530  0008A2  6C38               	negf	dtoa@n^0,c
  3531  0008A4  0E00               	movlw	0
  3532  0008A6  2239               	addwfc	(dtoa@n+1)^0,f,c
  3533  0008A8  223A               	addwfc	(dtoa@n+2)^0,f,c
  3534  0008AA  223B               	addwfc	(dtoa@n+3)^0,f,c
  3535  0008AC  223C               	addwfc	(dtoa@n+4)^0,f,c
  3536  0008AE  223D               	addwfc	(dtoa@n+5)^0,f,c
  3537  0008B0  223E               	addwfc	(dtoa@n+6)^0,f,c
  3538  0008B2  223F               	addwfc	(dtoa@n+7)^0,f,c
  3539  0008B4                     l2839:
  3540                           
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  3542  0008B4  0100               	movlb	0	; () banked
  3543  0008B6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3544  0008B8  EF60  F004         	goto	u1811
  3545  0008BC  EF62  F004         	goto	u1810
  3546  0008C0                     u1811:
  3547  0008C0  EF63  F004         	goto	l2843
  3548  0008C4                     u1810:
  3549  0008C4                     
  3550                           ; BSR set to: 0
  3551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  3552  0008C4  925A               	bcf	_flags^0,1,c
  3553  0008C6                     l2843:
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  3557  0008C6  BF65               	btfsc	(_prec+1)& (0+255),7,b
  3558  0008C8  EF70  F004         	goto	u1820
  3559  0008CC  5165               	movf	(_prec+1)& (0+255),w,b
  3560  0008CE  E106               	bnz	u1821
  3561  0008D0  0564               	decf	_prec& (0+255),w,b
  3562  0008D2  B0D8               	btfsc	status,0,c
  3563  0008D4  EF6E  F004         	goto	u1821
  3564  0008D8  EF70  F004         	goto	u1820
  3565  0008DC                     u1821:
  3566  0008DC  EF76  F004         	goto	l620
  3567  0008E0                     u1820:
  3568  0008E0                     
  3569                           ; BSR set to: 0
  3570  0008E0  0E00               	movlw	0
  3571  0008E2  6E33               	movwf	(dtoa@p+1)^0,c
  3572  0008E4  0E01               	movlw	1
  3573  0008E6  6E32               	movwf	dtoa@p^0,c
  3574  0008E8  EF7A  F004         	goto	l622
  3575  0008EC                     l620:
  3576                           
  3577                           ; BSR set to: 0
  3578  0008EC  C064  F032         	movff	_prec,dtoa@p
  3579  0008F0  C065  F033         	movff	_prec+1,dtoa@p+1
  3580  0008F4                     l622:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  3584  0008F4  C062  F034         	movff	_width,dtoa@w
  3585  0008F8  C063  F035         	movff	_width+1,dtoa@w+1
  3586  0008FC                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  3589  0008FC  5036               	movf	dtoa@s^0,w,c
  3590  0008FE  1037               	iorwf	(dtoa@s+1)^0,w,c
  3591  000900  A4D8               	btfss	status,2,c
  3592  000902  EF85  F004         	goto	u1831
  3593  000906  EF87  F004         	goto	u1830
  3594  00090A                     u1831:
  3595  00090A  EF8E  F004         	goto	l2851
  3596  00090E                     u1830:
  3597  00090E                     
  3598                           ; BSR set to: 0
  3599  00090E  A45A               	btfss	_flags^0,2,c
  3600  000910  EF8C  F004         	goto	u1841
  3601  000914  EF8E  F004         	goto	u1840
  3602  000918                     u1841:
  3603  000918  EF91  F004         	goto	l2853
  3604  00091C                     u1840:
  3605  00091C                     l2851:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  3609  00091C  0634               	decf	dtoa@w^0,f,c
  3610  00091E  A0D8               	btfss	status,0,c
  3611  000920  0635               	decf	(dtoa@w+1)^0,f,c
  3612  000922                     l2853:
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  3616  000922  0E00               	movlw	0
  3617  000924  6E41               	movwf	(dtoa@i+1)^0,c
  3618  000926  0E1F               	movlw	31
  3619  000928  6E40               	movwf	dtoa@i^0,c
  3620  00092A                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  3623  00092A  0E00               	movlw	0
  3624  00092C  6F8D               	movwf	(_dbuf+31)& (0+255),b
  3625                           
  3626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3627  00092E  EF15  F005         	goto	l2867
  3628  000932                     l2857:
  3629                           
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  3631  000932  0640               	decf	dtoa@i^0,f,c
  3632  000934  A0D8               	btfss	status,0,c
  3633  000936  0641               	decf	(dtoa@i+1)^0,f,c
  3634  000938                     
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  3636  000938  0E6E               	movlw	low _dbuf
  3637  00093A  2440               	addwf	dtoa@i^0,w,c
  3638  00093C  6ED9               	movwf	fsr2l,c
  3639  00093E  0E00               	movlw	high _dbuf
  3640  000940  2041               	addwfc	(dtoa@i+1)^0,w,c
  3641  000942  6EDA               	movwf	fsr2h,c
  3642  000944  C038  F003         	movff	dtoa@n,___aomod@dividend
  3643  000948  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  3644  00094C  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  3645  000950  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  3646  000954  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  3647  000958  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  3648  00095C  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  3649  000960  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  3650  000964  0E0A               	movlw	10
  3651  000966  6E0B               	movwf	___aomod@divisor^0,c
  3652  000968  0E00               	movlw	0
  3653  00096A  6E0C               	movwf	(___aomod@divisor+1)^0,c
  3654  00096C  0E00               	movlw	0
  3655  00096E  6E0D               	movwf	(___aomod@divisor+2)^0,c
  3656  000970  0E00               	movlw	0
  3657  000972  6E0E               	movwf	(___aomod@divisor+3)^0,c
  3658  000974  0E00               	movlw	0
  3659  000976  6E0F               	movwf	(___aomod@divisor+4)^0,c
  3660  000978  0E00               	movlw	0
  3661  00097A  6E10               	movwf	(___aomod@divisor+5)^0,c
  3662  00097C  0E00               	movlw	0
  3663  00097E  6E11               	movwf	(___aomod@divisor+6)^0,c
  3664  000980  0E00               	movlw	0
  3665  000982  6E12               	movwf	(___aomod@divisor+7)^0,c
  3666  000984  ECED  F009         	call	___aomod	;wreg free
  3667  000988  C003  F028         	movff	?___aomod,??_dtoa
  3668  00098C  C004  F029         	movff	?___aomod+1,??_dtoa+1
  3669  000990  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  3670  000994  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  3671  000998  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  3672  00099C  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  3673  0009A0  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  3674  0009A4  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  3675  0009A8  C028  F015         	movff	??_dtoa,abs@a
  3676  0009AC  C02A  F016         	movff	??_dtoa+2,abs@a+1
  3677  0009B0  EC4B  F00F         	call	_abs	;wreg free
  3678  0009B4  5015               	movf	?_abs^0,w,c
  3679  0009B6  0F30               	addlw	48
  3680  0009B8  6EDF               	movwf	indf2,c
  3681  0009BA                     
  3682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  3683  0009BA  0632               	decf	dtoa@p^0,f,c
  3684  0009BC  A0D8               	btfss	status,0,c
  3685  0009BE  0633               	decf	(dtoa@p+1)^0,f,c
  3686  0009C0                     
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  3688  0009C0  0634               	decf	dtoa@w^0,f,c
  3689  0009C2  A0D8               	btfss	status,0,c
  3690  0009C4  0635               	decf	(dtoa@w+1)^0,f,c
  3691  0009C6                     
  3692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  3693  0009C6  C038  F003         	movff	dtoa@n,___aodiv@dividend
  3694  0009CA  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  3695  0009CE  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  3696  0009D2  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  3697  0009D6  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  3698  0009DA  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  3699  0009DE  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  3700  0009E2  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  3701  0009E6  0E0A               	movlw	10
  3702  0009E8  6E0B               	movwf	___aodiv@divisor^0,c
  3703  0009EA  0E00               	movlw	0
  3704  0009EC  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  3705  0009EE  0E00               	movlw	0
  3706  0009F0  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  3707  0009F2  0E00               	movlw	0
  3708  0009F4  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  3709  0009F6  0E00               	movlw	0
  3710  0009F8  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  3711  0009FA  0E00               	movlw	0
  3712  0009FC  6E10               	movwf	(___aodiv@divisor+5)^0,c
  3713  0009FE  0E00               	movlw	0
  3714  000A00  6E11               	movwf	(___aodiv@divisor+6)^0,c
  3715  000A02  0E00               	movlw	0
  3716  000A04  6E12               	movwf	(___aodiv@divisor+7)^0,c
  3717  000A06  EC6C  F008         	call	___aodiv	;wreg free
  3718  000A0A  C003  F038         	movff	?___aodiv,dtoa@n
  3719  000A0E  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  3720  000A12  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  3721  000A16  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  3722  000A1A  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  3723  000A1E  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  3724  000A22  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  3725  000A26  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  3726  000A2A                     l2867:
  3727                           
  3728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3729  000A2A  BE41               	btfsc	(dtoa@i+1)^0,7,c
  3730  000A2C  EF20  F005         	goto	u1851
  3731  000A30  5041               	movf	(dtoa@i+1)^0,w,c
  3732  000A32  E108               	bnz	u1850
  3733  000A34  0440               	decf	dtoa@i^0,w,c
  3734  000A36  A0D8               	btfss	status,0,c
  3735  000A38  EF20  F005         	goto	u1851
  3736  000A3C  EF22  F005         	goto	u1850
  3737  000A40                     u1851:
  3738  000A40  EF52  F005         	goto	l2877
  3739  000A44                     u1850:
  3740  000A44  5038               	movf	dtoa@n^0,w,c
  3741  000A46  1039               	iorwf	(dtoa@n+1)^0,w,c
  3742  000A48  103A               	iorwf	(dtoa@n+2)^0,w,c
  3743  000A4A  103B               	iorwf	(dtoa@n+3)^0,w,c
  3744  000A4C  103C               	iorwf	(dtoa@n+4)^0,w,c
  3745  000A4E  103D               	iorwf	(dtoa@n+5)^0,w,c
  3746  000A50  103E               	iorwf	(dtoa@n+6)^0,w,c
  3747  000A52  103F               	iorwf	(dtoa@n+7)^0,w,c
  3748  000A54  A4D8               	btfss	status,2,c
  3749  000A56  EF2F  F005         	goto	u1861
  3750  000A5A  EF31  F005         	goto	u1860
  3751  000A5E                     u1861:
  3752  000A5E  EF99  F004         	goto	l2857
  3753  000A62                     u1860:
  3754  000A62  BE33               	btfsc	(dtoa@p+1)^0,7,c
  3755  000A64  EF3E  F005         	goto	u1870
  3756  000A68  5033               	movf	(dtoa@p+1)^0,w,c
  3757  000A6A  E106               	bnz	u1871
  3758  000A6C  0432               	decf	dtoa@p^0,w,c
  3759  000A6E  B0D8               	btfsc	status,0,c
  3760  000A70  EF3C  F005         	goto	u1871
  3761  000A74  EF3E  F005         	goto	u1870
  3762  000A78                     u1871:
  3763  000A78  EF99  F004         	goto	l2857
  3764  000A7C                     u1870:
  3765  000A7C  BE35               	btfsc	(dtoa@w+1)^0,7,c
  3766  000A7E  EF49  F005         	goto	u1881
  3767  000A82  5035               	movf	(dtoa@w+1)^0,w,c
  3768  000A84  E108               	bnz	u1880
  3769  000A86  0434               	decf	dtoa@w^0,w,c
  3770  000A88  A0D8               	btfss	status,0,c
  3771  000A8A  EF49  F005         	goto	u1881
  3772  000A8E  EF4B  F005         	goto	u1880
  3773  000A92                     u1881:
  3774  000A92  EF52  F005         	goto	l2877
  3775  000A96                     u1880:
  3776  000A96  B25A               	btfsc	_flags^0,1,c
  3777  000A98  EF50  F005         	goto	u1891
  3778  000A9C  EF52  F005         	goto	u1890
  3779  000AA0                     u1891:
  3780  000AA0  EF99  F004         	goto	l2857
  3781  000AA4                     u1890:
  3782  000AA4                     l2877:
  3783                           
  3784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  3785  000AA4  5036               	movf	dtoa@s^0,w,c
  3786  000AA6  1037               	iorwf	(dtoa@s+1)^0,w,c
  3787  000AA8  A4D8               	btfss	status,2,c
  3788  000AAA  EF59  F005         	goto	u1901
  3789  000AAE  EF5B  F005         	goto	u1900
  3790  000AB2                     u1901:
  3791  000AB2  EF62  F005         	goto	l2881
  3792  000AB6                     u1900:
  3793  000AB6  A45A               	btfss	_flags^0,2,c
  3794  000AB8  EF60  F005         	goto	u1911
  3795  000ABC  EF62  F005         	goto	u1910
  3796  000AC0                     u1911:
  3797  000AC0  EF80  F005         	goto	l2891
  3798  000AC4                     u1910:
  3799  000AC4                     l2881:
  3800                           
  3801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  3802  000AC4  0640               	decf	dtoa@i^0,f,c
  3803  000AC6  A0D8               	btfss	status,0,c
  3804  000AC8  0641               	decf	(dtoa@i+1)^0,f,c
  3805  000ACA                     
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  3807  000ACA  5036               	movf	dtoa@s^0,w,c
  3808  000ACC  1037               	iorwf	(dtoa@s+1)^0,w,c
  3809  000ACE  A4D8               	btfss	status,2,c
  3810  000AD0  EF6C  F005         	goto	u1921
  3811  000AD4  EF6E  F005         	goto	u1920
  3812  000AD8                     u1921:
  3813  000AD8  EF74  F005         	goto	l2887
  3814  000ADC                     u1920:
  3815  000ADC  0E00               	movlw	0
  3816  000ADE  6E31               	movwf	(_dtoa$1556+1)^0,c
  3817  000AE0  0E2B               	movlw	43
  3818  000AE2  6E30               	movwf	_dtoa$1556^0,c
  3819  000AE4  EF78  F005         	goto	l2889
  3820  000AE8                     l2887:
  3821  000AE8  0E00               	movlw	0
  3822  000AEA  6E31               	movwf	(_dtoa$1556+1)^0,c
  3823  000AEC  0E2D               	movlw	45
  3824  000AEE  6E30               	movwf	_dtoa$1556^0,c
  3825  000AF0                     l2889:
  3826  000AF0  0E6E               	movlw	low _dbuf
  3827  000AF2  2440               	addwf	dtoa@i^0,w,c
  3828  000AF4  6ED9               	movwf	fsr2l,c
  3829  000AF6  0E00               	movlw	high _dbuf
  3830  000AF8  2041               	addwfc	(dtoa@i+1)^0,w,c
  3831  000AFA  6EDA               	movwf	fsr2h,c
  3832  000AFC  C030  FFDF         	movff	_dtoa$1556,indf2
  3833  000B00                     l2891:
  3834                           
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  3836  000B00  C01E  F013         	movff	dtoa@fp,pad@fp
  3837  000B04  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  3838  000B08  0E6E               	movlw	low _dbuf
  3839  000B0A  2440               	addwf	dtoa@i^0,w,c
  3840  000B0C  6E15               	movwf	pad@buf^0,c
  3841  000B0E  0E00               	movlw	high _dbuf
  3842  000B10  2041               	addwfc	(dtoa@i+1)^0,w,c
  3843  000B12  6E16               	movwf	(pad@buf+1)^0,c
  3844  000B14  C034  F017         	movff	dtoa@w,pad@p
  3845  000B18  C035  F018         	movff	dtoa@w+1,pad@p+1
  3846  000B1C  EC78  F00C         	call	_pad	;wreg free
  3847  000B20  C013  F01E         	movff	?_pad,?_dtoa
  3848  000B24  C014  F01F         	movff	?_pad+1,?_dtoa+1
  3849  000B28  0012               	return		;funcret
  3850  000B2A                     __end_of_dtoa:
  3851                           	opt callstack 0
  3852                           
  3853 ;; *************** function _pad *****************
  3854 ;; Defined at:
  3855 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3858 ;;		 -> sprintf@f(6), 
  3859 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3860 ;;		 -> dbuf(32), 
  3861 ;;  p               2   22[COMRAM] int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  w               2   27[COMRAM] int 
  3864 ;;  i               2   25[COMRAM] int 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  2   18[COMRAM] int 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3874 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;Total ram usage:       11 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    7
  3881 ;; This function calls:
  3882 ;;		_fputc
  3883 ;;		_fputs
  3884 ;;		_strlen
  3885 ;; This function is called by:
  3886 ;;		_dtoa
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text5
  3891  0018F0                     __ptext5:
  3892                           	opt callstack 0
  3893  0018F0                     _pad:
  3894                           	opt callstack 19
  3895  0018F0                     
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3897  0018F0  A05A               	btfss	_flags^0,0,c
  3898  0018F2  EF7D  F00C         	goto	u1581
  3899  0018F6  EF7F  F00C         	goto	u1580
  3900  0018FA                     u1581:
  3901  0018FA  EF89  F00C         	goto	l2707
  3902  0018FE                     u1580:
  3903  0018FE                     
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3905  0018FE  C015  F00C         	movff	pad@buf,fputs@s
  3906  001902  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3907  001906  C013  F00E         	movff	pad@fp,fputs@fp
  3908  00190A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3909  00190E  EC08  F00F         	call	_fputs	;wreg free
  3910  001912                     l2707:
  3911                           
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3913  001912  BE18               	btfsc	(pad@p+1)^0,7,c
  3914  001914  EF8E  F00C         	goto	u1591
  3915  001918  EF90  F00C         	goto	u1590
  3916  00191C                     u1591:
  3917  00191C  EF96  F00C         	goto	l2711
  3918  001920                     u1590:
  3919  001920  C017  F01C         	movff	pad@p,pad@w
  3920  001924  C018  F01D         	movff	pad@p+1,pad@w+1
  3921  001928  EF9A  F00C         	goto	l609
  3922  00192C                     l2711:
  3923  00192C  0E00               	movlw	0
  3924  00192E  6E1D               	movwf	(pad@w+1)^0,c
  3925  001930  0E00               	movlw	0
  3926  001932  6E1C               	movwf	pad@w^0,c
  3927  001934                     l609:
  3928                           
  3929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3930  001934  0E00               	movlw	0
  3931  001936  6E1B               	movwf	(pad@i+1)^0,c
  3932  001938  0E00               	movlw	0
  3933  00193A  6E1A               	movwf	pad@i^0,c
  3934                           
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3936  00193C  EFAC  F00C         	goto	l2717
  3937  001940                     l2713:
  3938                           
  3939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3940  001940  0E00               	movlw	0
  3941  001942  6E04               	movwf	(fputc@c+1)^0,c
  3942  001944  0E20               	movlw	32
  3943  001946  6E03               	movwf	fputc@c^0,c
  3944  001948  C013  F005         	movff	pad@fp,fputc@fp
  3945  00194C  C014  F006         	movff	pad@fp+1,fputc@fp+1
  3946  001950  EC13  F00C         	call	_fputc	;wreg free
  3947  001954                     
  3948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3949  001954  4A1A               	infsnz	pad@i^0,f,c
  3950  001956  2A1B               	incf	(pad@i+1)^0,f,c
  3951  001958                     l2717:
  3952                           
  3953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3954  001958  501C               	movf	pad@w^0,w,c
  3955  00195A  5C1A               	subwf	pad@i^0,w,c
  3956  00195C  501B               	movf	(pad@i+1)^0,w,c
  3957  00195E  0A80               	xorlw	128
  3958  001960  6E19               	movwf	??_pad^0,c
  3959  001962  501D               	movf	(pad@w+1)^0,w,c
  3960  001964  0A80               	xorlw	128
  3961  001966  5819               	subwfb	??_pad^0,w,c
  3962  001968  A0D8               	btfss	status,0,c
  3963  00196A  EFB9  F00C         	goto	u1601
  3964  00196E  EFBB  F00C         	goto	u1600
  3965  001972                     u1601:
  3966  001972  EFA0  F00C         	goto	l2713
  3967  001976                     u1600:
  3968  001976                     
  3969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3970  001976  B05A               	btfsc	_flags^0,0,c
  3971  001978  EFC0  F00C         	goto	u1611
  3972  00197C  EFC2  F00C         	goto	u1610
  3973  001980                     u1611:
  3974  001980  EFCC  F00C         	goto	l2721
  3975  001984                     u1610:
  3976  001984                     
  3977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3978  001984  C015  F00C         	movff	pad@buf,fputs@s
  3979  001988  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3980  00198C  C013  F00E         	movff	pad@fp,fputs@fp
  3981  001990  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3982  001994  EC08  F00F         	call	_fputs	;wreg free
  3983  001998                     l2721:
  3984                           
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3986  001998  C015  F003         	movff	pad@buf,strlen@s
  3987  00199C  C016  F004         	movff	pad@buf+1,strlen@s+1
  3988  0019A0  EC88  F00F         	call	_strlen	;wreg free
  3989  0019A4  501C               	movf	pad@w^0,w,c
  3990  0019A6  2403               	addwf	?_strlen^0,w,c
  3991  0019A8  6E13               	movwf	?_pad^0,c
  3992  0019AA  501D               	movf	(pad@w+1)^0,w,c
  3993  0019AC  2004               	addwfc	(?_strlen+1)^0,w,c
  3994  0019AE  6E14               	movwf	(?_pad+1)^0,c
  3995  0019B0  0012               	return		;funcret
  3996  0019B2                     __end_of_pad:
  3997                           	opt callstack 0
  3998                           
  3999 ;; *************** function _strlen *****************
  4000 ;; Defined at:
  4001 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  s               2    2[COMRAM] PTR const unsigned char 
  4004 ;;		 -> dbuf(32), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4007 ;;		 -> dbuf(32), 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    2[COMRAM] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;Total ram usage:        4 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    4
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_pad
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text6
  4032  001F10                     __ptext6:
  4033                           	opt callstack 0
  4034  001F10                     _strlen:
  4035                           	opt callstack 21
  4036  001F10  C003  F005         	movff	strlen@s,strlen@a
  4037  001F14  C004  F006         	movff	strlen@s+1,strlen@a+1
  4038  001F18  EF90  F00F         	goto	l2689
  4039  001F1C                     l2687:
  4040  001F1C  4A03               	infsnz	strlen@s^0,f,c
  4041  001F1E  2A04               	incf	(strlen@s+1)^0,f,c
  4042  001F20                     l2689:
  4043  001F20  C003  FFD9         	movff	strlen@s,fsr2l
  4044  001F24  C004  FFDA         	movff	strlen@s+1,fsr2h
  4045  001F28  50DF               	movf	indf2,w,c
  4046  001F2A  A4D8               	btfss	status,2,c
  4047  001F2C  EF9A  F00F         	goto	u1561
  4048  001F30  EF9C  F00F         	goto	u1560
  4049  001F34                     u1561:
  4050  001F34  EF8E  F00F         	goto	l2687
  4051  001F38                     u1560:
  4052  001F38  5005               	movf	strlen@a^0,w,c
  4053  001F3A  5C03               	subwf	strlen@s^0,w,c
  4054  001F3C  6E03               	movwf	?_strlen^0,c
  4055  001F3E  5006               	movf	(strlen@a+1)^0,w,c
  4056  001F40  5804               	subwfb	(strlen@s+1)^0,w,c
  4057  001F42  6E04               	movwf	(?_strlen+1)^0,c
  4058  001F44  0012               	return		;funcret
  4059  001F46                     __end_of_strlen:
  4060                           	opt callstack 0
  4061                           
  4062 ;; *************** function _fputs *****************
  4063 ;; Defined at:
  4064 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4067 ;;		 -> dbuf(32), 
  4068 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4069 ;;		 -> sprintf@f(6), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  i               2   16[COMRAM] int 
  4072 ;;  c               1   15[COMRAM] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2   11[COMRAM] int 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4085 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;Total ram usage:        7 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    6
  4089 ;; This function calls:
  4090 ;;		_fputc
  4091 ;; This function is called by:
  4092 ;;		_pad
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text7
  4097  001E10                     __ptext7:
  4098                           	opt callstack 0
  4099  001E10                     _fputs:
  4100                           	opt callstack 19
  4101  001E10  0E00               	movlw	0
  4102  001E12  6E12               	movwf	(fputs@i+1)^0,c
  4103  001E14  0E00               	movlw	0
  4104  001E16  6E11               	movwf	fputs@i^0,c
  4105  001E18  EF19  F00F         	goto	l2683
  4106  001E1C                     l2679:
  4107  001E1C  C010  F003         	movff	fputs@c,fputc@c
  4108  001E20  6A04               	clrf	(fputc@c+1)^0,c
  4109  001E22  C00E  F005         	movff	fputs@fp,fputc@fp
  4110  001E26  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  4111  001E2A  EC13  F00C         	call	_fputc	;wreg free
  4112  001E2E  4A11               	infsnz	fputs@i^0,f,c
  4113  001E30  2A12               	incf	(fputs@i+1)^0,f,c
  4114  001E32                     l2683:
  4115  001E32  5011               	movf	fputs@i^0,w,c
  4116  001E34  240C               	addwf	fputs@s^0,w,c
  4117  001E36  6ED9               	movwf	fsr2l,c
  4118  001E38  5012               	movf	(fputs@i+1)^0,w,c
  4119  001E3A  200D               	addwfc	(fputs@s+1)^0,w,c
  4120  001E3C  6EDA               	movwf	fsr2h,c
  4121  001E3E  50DF               	movf	indf2,w,c
  4122  001E40  6E10               	movwf	fputs@c^0,c
  4123  001E42  5010               	movf	fputs@c^0,w,c
  4124  001E44  A4D8               	btfss	status,2,c
  4125  001E46  EF27  F00F         	goto	u1551
  4126  001E4A  EF29  F00F         	goto	u1550
  4127  001E4E                     u1551:
  4128  001E4E  EF0E  F00F         	goto	l2679
  4129  001E52                     u1550:
  4130  001E52  0012               	return		;funcret
  4131  001E54                     __end_of_fputs:
  4132                           	opt callstack 0
  4133                           
  4134 ;; *************** function _fputc *****************
  4135 ;; Defined at:
  4136 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  c               2    2[COMRAM] int 
  4139 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4140 ;;		 -> sprintf@f(6), 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  2    2[COMRAM] int 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4154 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4155 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4156 ;;Total ram usage:        9 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    5
  4159 ;; This function calls:
  4160 ;;		_putch
  4161 ;; This function is called by:
  4162 ;;		_pad
  4163 ;;		_vfpfcnvrt
  4164 ;;		_fputs
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text8
  4169  001826                     __ptext8:
  4170                           	opt callstack 0
  4171  001826                     _fputc:
  4172                           	opt callstack 22
  4173  001826  5005               	movf	fputc@fp^0,w,c
  4174  001828  1006               	iorwf	(fputc@fp+1)^0,w,c
  4175  00182A  B4D8               	btfsc	status,2,c
  4176  00182C  EF1A  F00C         	goto	u1501
  4177  001830  EF1C  F00C         	goto	u1500
  4178  001834                     u1501:
  4179  001834  EF25  F00C         	goto	l2665
  4180  001838                     u1500:
  4181  001838  5005               	movf	fputc@fp^0,w,c
  4182  00183A  1006               	iorwf	(fputc@fp+1)^0,w,c
  4183  00183C  A4D8               	btfss	status,2,c
  4184  00183E  EF23  F00C         	goto	u1511
  4185  001842  EF25  F00C         	goto	u1510
  4186  001846                     u1511:
  4187  001846  EF2A  F00C         	goto	l2667
  4188  00184A                     u1510:
  4189  00184A                     l2665:
  4190  00184A  5003               	movf	fputc@c^0,w,c
  4191  00184C  ECD7  F010         	call	_putch
  4192  001850  EF77  F00C         	goto	l1347
  4193  001854                     l2667:
  4194  001854  EE20 F004          	lfsr	2,4
  4195  001858  5005               	movf	fputc@fp^0,w,c
  4196  00185A  26D9               	addwf	fsr2l,f,c
  4197  00185C  5006               	movf	(fputc@fp+1)^0,w,c
  4198  00185E  22DA               	addwfc	fsr2h,f,c
  4199  001860  50DE               	movf	postinc2,w,c
  4200  001862  10DE               	iorwf	postinc2,w,c
  4201  001864  B4D8               	btfsc	status,2,c
  4202  001866  EF37  F00C         	goto	u1521
  4203  00186A  EF39  F00C         	goto	u1520
  4204  00186E                     u1521:
  4205  00186E  EF54  F00C         	goto	l2671
  4206  001872                     u1520:
  4207  001872  EE20 F004          	lfsr	2,4
  4208  001876  5005               	movf	fputc@fp^0,w,c
  4209  001878  26D9               	addwf	fsr2l,f,c
  4210  00187A  5006               	movf	(fputc@fp+1)^0,w,c
  4211  00187C  22DA               	addwfc	fsr2h,f,c
  4212  00187E  EE10 F002          	lfsr	1,2
  4213  001882  5005               	movf	fputc@fp^0,w,c
  4214  001884  26E1               	addwf	fsr1l,f,c
  4215  001886  5006               	movf	(fputc@fp+1)^0,w,c
  4216  001888  22E2               	addwfc	fsr1h,f,c
  4217  00188A  50DE               	movf	postinc2,w,c
  4218  00188C  5CE6               	subwf	postinc1,w,c
  4219  00188E  50E6               	movf	postinc1,w,c
  4220  001890  0A80               	xorlw	128
  4221  001892  6E0B               	movwf	(??_fputc+4)^0,c
  4222  001894  50DE               	movf	postinc2,w,c
  4223  001896  0A80               	xorlw	128
  4224  001898  580B               	subwfb	(??_fputc+4)^0,w,c
  4225  00189A  B0D8               	btfsc	status,0,c
  4226  00189C  EF52  F00C         	goto	u1531
  4227  0018A0  EF54  F00C         	goto	u1530
  4228  0018A4                     u1531:
  4229  0018A4  EF77  F00C         	goto	l1347
  4230  0018A8                     u1530:
  4231  0018A8                     l2671:
  4232  0018A8  EE20 F002          	lfsr	2,2
  4233  0018AC  5005               	movf	fputc@fp^0,w,c
  4234  0018AE  26D9               	addwf	fsr2l,f,c
  4235  0018B0  5006               	movf	(fputc@fp+1)^0,w,c
  4236  0018B2  22DA               	addwfc	fsr2h,f,c
  4237  0018B4  CFDE F007          	movff	postinc2,??_fputc
  4238  0018B8  CFDD F008          	movff	postdec2,??_fputc+1
  4239  0018BC  C005  FFD9         	movff	fputc@fp,fsr2l
  4240  0018C0  C006  FFDA         	movff	fputc@fp+1,fsr2h
  4241  0018C4  CFDE F009          	movff	postinc2,??_fputc+2
  4242  0018C8  CFDD F00A          	movff	postdec2,??_fputc+3
  4243  0018CC  5007               	movf	??_fputc^0,w,c
  4244  0018CE  2409               	addwf	(??_fputc+2)^0,w,c
  4245  0018D0  6ED9               	movwf	fsr2l,c
  4246  0018D2  5008               	movf	(??_fputc+1)^0,w,c
  4247  0018D4  200A               	addwfc	(??_fputc+3)^0,w,c
  4248  0018D6  6EDA               	movwf	fsr2h,c
  4249  0018D8  C003  FFDF         	movff	fputc@c,indf2
  4250  0018DC  EE20 F002          	lfsr	2,2
  4251  0018E0  5005               	movf	fputc@fp^0,w,c
  4252  0018E2  26D9               	addwf	fsr2l,f,c
  4253  0018E4  5006               	movf	(fputc@fp+1)^0,w,c
  4254  0018E6  22DA               	addwfc	fsr2h,f,c
  4255  0018E8  2ADE               	incf	postinc2,f,c
  4256  0018EA  0E00               	movlw	0
  4257  0018EC  22DD               	addwfc	postdec2,f,c
  4258  0018EE                     l1347:
  4259  0018EE  0012               	return		;funcret
  4260  0018F0                     __end_of_fputc:
  4261                           	opt callstack 0
  4262                           
  4263 ;; *************** function _putch *****************
  4264 ;; Defined at:
  4265 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  c               1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  c               1    0[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      void 
  4272 ;; Registers used:
  4273 ;;		wreg
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;Total ram usage:        0 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    4
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_fputc
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text9
  4294  0021AE                     __ptext9:
  4295                           	opt callstack 0
  4296  0021AE                     _putch:
  4297                           	opt callstack 22
  4298  0021AE  0012               	return		;funcret
  4299  0021B0                     __end_of_putch:
  4300                           	opt callstack 0
  4301                           
  4302 ;; *************** function _abs *****************
  4303 ;; Defined at:
  4304 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  a               2   20[COMRAM] int 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  2   20[COMRAM] int 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4318 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4320 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;Total ram usage:        4 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    4
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_dtoa
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text10
  4333  001E96                     __ptext10:
  4334                           	opt callstack 0
  4335  001E96                     _abs:
  4336                           	opt callstack 22
  4337  001E96  BE16               	btfsc	(abs@a+1)^0,7,c
  4338  001E98  EF58  F00F         	goto	u1620
  4339  001E9C  5016               	movf	(abs@a+1)^0,w,c
  4340  001E9E  E106               	bnz	u1621
  4341  001EA0  0415               	decf	abs@a^0,w,c
  4342  001EA2  B0D8               	btfsc	status,0,c
  4343  001EA4  EF56  F00F         	goto	u1621
  4344  001EA8  EF58  F00F         	goto	u1620
  4345  001EAC                     u1621:
  4346  001EAC  EF66  F00F         	goto	l1332
  4347  001EB0                     u1620:
  4348  001EB0  C015  F017         	movff	abs@a,??_abs
  4349  001EB4  C016  F018         	movff	abs@a+1,??_abs+1
  4350  001EB8  1E17               	comf	??_abs^0,f,c
  4351  001EBA  1E18               	comf	(??_abs+1)^0,f,c
  4352  001EBC  4A17               	infsnz	??_abs^0,f,c
  4353  001EBE  2A18               	incf	(??_abs+1)^0,f,c
  4354  001EC0  C017  F015         	movff	??_abs,?_abs
  4355  001EC4  C018  F016         	movff	??_abs+1,?_abs+1
  4356  001EC8  EF6A  F00F         	goto	l1335
  4357  001ECC                     l1332:
  4358  001ECC  C015  F015         	movff	abs@a,?_abs
  4359  001ED0  C016  F016         	movff	abs@a+1,?_abs+1
  4360  001ED4                     l1335:
  4361  001ED4  0012               	return		;funcret
  4362  001ED6                     __end_of_abs:
  4363                           	opt callstack 0
  4364                           
  4365 ;; *************** function ___aomod *****************
  4366 ;; Defined at:
  4367 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  dividend        8    2[COMRAM] long long 
  4370 ;;  divisor         8   10[COMRAM] long long 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  sign            1   19[COMRAM] unsigned char 
  4373 ;;  counter         1   18[COMRAM] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  8    2[COMRAM] long long 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4383 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;Total ram usage:       18 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    4
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_dtoa
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text11
  4398  0013DA                     __ptext11:
  4399                           	opt callstack 0
  4400  0013DA                     ___aomod:
  4401                           	opt callstack 22
  4402  0013DA  0E00               	movlw	0
  4403  0013DC  6E14               	movwf	___aomod@sign^0,c
  4404  0013DE  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  4405  0013E0  EFF6  F009         	goto	u1700
  4406  0013E4  EFF4  F009         	goto	u1701
  4407  0013E8                     u1701:
  4408  0013E8  EF08  F00A         	goto	l2781
  4409  0013EC                     u1700:
  4410  0013EC  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  4411  0013EE  1E09               	comf	(___aomod@dividend+6)^0,f,c
  4412  0013F0  1E08               	comf	(___aomod@dividend+5)^0,f,c
  4413  0013F2  1E07               	comf	(___aomod@dividend+4)^0,f,c
  4414  0013F4  1E06               	comf	(___aomod@dividend+3)^0,f,c
  4415  0013F6  1E05               	comf	(___aomod@dividend+2)^0,f,c
  4416  0013F8  1E04               	comf	(___aomod@dividend+1)^0,f,c
  4417  0013FA  6C03               	negf	___aomod@dividend^0,c
  4418  0013FC  0E00               	movlw	0
  4419  0013FE  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  4420  001400  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  4421  001402  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  4422  001404  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  4423  001406  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  4424  001408  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  4425  00140A  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  4426  00140C  0E01               	movlw	1
  4427  00140E  6E14               	movwf	___aomod@sign^0,c
  4428  001410                     l2781:
  4429  001410  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  4430  001412  EF0F  F00A         	goto	u1710
  4431  001416  EF0D  F00A         	goto	u1711
  4432  00141A                     u1711:
  4433  00141A  EF1F  F00A         	goto	l2785
  4434  00141E                     u1710:
  4435  00141E  1E12               	comf	(___aomod@divisor+7)^0,f,c
  4436  001420  1E11               	comf	(___aomod@divisor+6)^0,f,c
  4437  001422  1E10               	comf	(___aomod@divisor+5)^0,f,c
  4438  001424  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  4439  001426  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  4440  001428  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  4441  00142A  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  4442  00142C  6C0B               	negf	___aomod@divisor^0,c
  4443  00142E  0E00               	movlw	0
  4444  001430  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  4445  001432  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  4446  001434  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  4447  001436  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  4448  001438  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  4449  00143A  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  4450  00143C  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  4451  00143E                     l2785:
  4452  00143E  500B               	movf	___aomod@divisor^0,w,c
  4453  001440  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  4454  001442  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  4455  001444  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  4456  001446  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  4457  001448  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  4458  00144A  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  4459  00144C  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  4460  00144E  B4D8               	btfsc	status,2,c
  4461  001450  EF2C  F00A         	goto	u1721
  4462  001454  EF2E  F00A         	goto	u1720
  4463  001458                     u1721:
  4464  001458  EF76  F00A         	goto	l2801
  4465  00145C                     u1720:
  4466  00145C  0E01               	movlw	1
  4467  00145E  6E13               	movwf	___aomod@counter^0,c
  4468  001460  EF3C  F00A         	goto	l2791
  4469  001464                     l2789:
  4470  001464  90D8               	bcf	status,0,c
  4471  001466  360B               	rlcf	___aomod@divisor^0,f,c
  4472  001468  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  4473  00146A  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  4474  00146C  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  4475  00146E  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  4476  001470  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  4477  001472  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  4478  001474  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  4479  001476  2A13               	incf	___aomod@counter^0,f,c
  4480  001478                     l2791:
  4481  001478  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  4482  00147A  EF41  F00A         	goto	u1731
  4483  00147E  EF43  F00A         	goto	u1730
  4484  001482                     u1731:
  4485  001482  EF32  F00A         	goto	l2789
  4486  001486                     u1730:
  4487  001486                     l2793:
  4488  001486  500B               	movf	___aomod@divisor^0,w,c
  4489  001488  5C03               	subwf	___aomod@dividend^0,w,c
  4490  00148A  500C               	movf	(___aomod@divisor+1)^0,w,c
  4491  00148C  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  4492  00148E  500D               	movf	(___aomod@divisor+2)^0,w,c
  4493  001490  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  4494  001492  500E               	movf	(___aomod@divisor+3)^0,w,c
  4495  001494  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  4496  001496  500F               	movf	(___aomod@divisor+4)^0,w,c
  4497  001498  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  4498  00149A  5010               	movf	(___aomod@divisor+5)^0,w,c
  4499  00149C  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  4500  00149E  5011               	movf	(___aomod@divisor+6)^0,w,c
  4501  0014A0  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  4502  0014A2  5012               	movf	(___aomod@divisor+7)^0,w,c
  4503  0014A4  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  4504  0014A6  A0D8               	btfss	status,0,c
  4505  0014A8  EF58  F00A         	goto	u1741
  4506  0014AC  EF5A  F00A         	goto	u1740
  4507  0014B0                     u1741:
  4508  0014B0  EF6A  F00A         	goto	l2797
  4509  0014B4                     u1740:
  4510  0014B4  500B               	movf	___aomod@divisor^0,w,c
  4511  0014B6  5E03               	subwf	___aomod@dividend^0,f,c
  4512  0014B8  500C               	movf	(___aomod@divisor+1)^0,w,c
  4513  0014BA  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  4514  0014BC  500D               	movf	(___aomod@divisor+2)^0,w,c
  4515  0014BE  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  4516  0014C0  500E               	movf	(___aomod@divisor+3)^0,w,c
  4517  0014C2  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  4518  0014C4  500F               	movf	(___aomod@divisor+4)^0,w,c
  4519  0014C6  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  4520  0014C8  5010               	movf	(___aomod@divisor+5)^0,w,c
  4521  0014CA  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  4522  0014CC  5011               	movf	(___aomod@divisor+6)^0,w,c
  4523  0014CE  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  4524  0014D0  5012               	movf	(___aomod@divisor+7)^0,w,c
  4525  0014D2  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  4526  0014D4                     l2797:
  4527  0014D4  90D8               	bcf	status,0,c
  4528  0014D6  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  4529  0014D8  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  4530  0014DA  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  4531  0014DC  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  4532  0014DE  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  4533  0014E0  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  4534  0014E2  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  4535  0014E4  320B               	rrcf	___aomod@divisor^0,f,c
  4536  0014E6  2E13               	decfsz	___aomod@counter^0,f,c
  4537  0014E8  EF43  F00A         	goto	l2793
  4538  0014EC                     l2801:
  4539  0014EC  5014               	movf	___aomod@sign^0,w,c
  4540  0014EE  B4D8               	btfsc	status,2,c
  4541  0014F0  EF7C  F00A         	goto	u1751
  4542  0014F4  EF7E  F00A         	goto	u1750
  4543  0014F8                     u1751:
  4544  0014F8  EF8E  F00A         	goto	l2805
  4545  0014FC                     u1750:
  4546  0014FC  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  4547  0014FE  1E09               	comf	(___aomod@dividend+6)^0,f,c
  4548  001500  1E08               	comf	(___aomod@dividend+5)^0,f,c
  4549  001502  1E07               	comf	(___aomod@dividend+4)^0,f,c
  4550  001504  1E06               	comf	(___aomod@dividend+3)^0,f,c
  4551  001506  1E05               	comf	(___aomod@dividend+2)^0,f,c
  4552  001508  1E04               	comf	(___aomod@dividend+1)^0,f,c
  4553  00150A  6C03               	negf	___aomod@dividend^0,c
  4554  00150C  0E00               	movlw	0
  4555  00150E  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  4556  001510  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  4557  001512  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  4558  001514  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  4559  001516  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  4560  001518  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  4561  00151A  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  4562  00151C                     l2805:
  4563  00151C  C003  F003         	movff	___aomod@dividend,?___aomod
  4564  001520  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  4565  001524  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  4566  001528  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  4567  00152C  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  4568  001530  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  4569  001534  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  4570  001538  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  4571  00153C  0012               	return		;funcret
  4572  00153E                     __end_of___aomod:
  4573                           	opt callstack 0
  4574                           
  4575 ;; *************** function ___aodiv *****************
  4576 ;; Defined at:
  4577 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  dividend        8    2[COMRAM] long long 
  4580 ;;  divisor         8   10[COMRAM] long long 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  quotient        8   20[COMRAM] long long 
  4583 ;;  sign            1   19[COMRAM] unsigned char 
  4584 ;;  counter         1   18[COMRAM] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  8    2[COMRAM] long long 
  4587 ;; Registers used:
  4588 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4594 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;Total ram usage:       26 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    4
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_dtoa
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text12
  4609  0010D8                     __ptext12:
  4610                           	opt callstack 0
  4611  0010D8                     ___aodiv:
  4612                           	opt callstack 22
  4613  0010D8  0E00               	movlw	0
  4614  0010DA  6E14               	movwf	___aodiv@sign^0,c
  4615  0010DC  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  4616  0010DE  EF75  F008         	goto	u1630
  4617  0010E2  EF73  F008         	goto	u1631
  4618  0010E6                     u1631:
  4619  0010E6  EF87  F008         	goto	l2737
  4620  0010EA                     u1630:
  4621  0010EA  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  4622  0010EC  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  4623  0010EE  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  4624  0010F0  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  4625  0010F2  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  4626  0010F4  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  4627  0010F6  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  4628  0010F8  6C0B               	negf	___aodiv@divisor^0,c
  4629  0010FA  0E00               	movlw	0
  4630  0010FC  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  4631  0010FE  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  4632  001100  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  4633  001102  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  4634  001104  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  4635  001106  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  4636  001108  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  4637  00110A  0E01               	movlw	1
  4638  00110C  6E14               	movwf	___aodiv@sign^0,c
  4639  00110E                     l2737:
  4640  00110E  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  4641  001110  EF8E  F008         	goto	u1640
  4642  001114  EF8C  F008         	goto	u1641
  4643  001118                     u1641:
  4644  001118  EFA0  F008         	goto	l2743
  4645  00111C                     u1640:
  4646  00111C  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  4647  00111E  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  4648  001120  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  4649  001122  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  4650  001124  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  4651  001126  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  4652  001128  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  4653  00112A  6C03               	negf	___aodiv@dividend^0,c
  4654  00112C  0E00               	movlw	0
  4655  00112E  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  4656  001130  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  4657  001132  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  4658  001134  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  4659  001136  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  4660  001138  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  4661  00113A  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  4662  00113C  0E01               	movlw	1
  4663  00113E  1A14               	xorwf	___aodiv@sign^0,f,c
  4664  001140                     l2743:
  4665  001140  EE20  F015         	lfsr	2,___aodiv@quotient
  4666  001144  0E07               	movlw	7
  4667  001146                     u1651:
  4668  001146  6ADE               	clrf	postinc2,c
  4669  001148  06E8               	decf	wreg,f,c
  4670  00114A  E2FD               	bc	u1651
  4671  00114C  500B               	movf	___aodiv@divisor^0,w,c
  4672  00114E  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  4673  001150  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  4674  001152  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  4675  001154  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  4676  001156  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  4677  001158  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  4678  00115A  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  4679  00115C  B4D8               	btfsc	status,2,c
  4680  00115E  EFB3  F008         	goto	u1661
  4681  001162  EFB5  F008         	goto	u1660
  4682  001166                     u1661:
  4683  001166  EF07  F009         	goto	l2765
  4684  00116A                     u1660:
  4685  00116A  0E01               	movlw	1
  4686  00116C  6E13               	movwf	___aodiv@counter^0,c
  4687  00116E  EFC3  F008         	goto	l2751
  4688  001172                     l2749:
  4689  001172  90D8               	bcf	status,0,c
  4690  001174  360B               	rlcf	___aodiv@divisor^0,f,c
  4691  001176  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  4692  001178  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  4693  00117A  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  4694  00117C  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  4695  00117E  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  4696  001180  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  4697  001182  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  4698  001184  2A13               	incf	___aodiv@counter^0,f,c
  4699  001186                     l2751:
  4700  001186  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  4701  001188  EFC8  F008         	goto	u1671
  4702  00118C  EFCA  F008         	goto	u1670
  4703  001190                     u1671:
  4704  001190  EFB9  F008         	goto	l2749
  4705  001194                     u1670:
  4706  001194                     l2753:
  4707  001194  90D8               	bcf	status,0,c
  4708  001196  3615               	rlcf	___aodiv@quotient^0,f,c
  4709  001198  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  4710  00119A  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  4711  00119C  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  4712  00119E  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  4713  0011A0  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  4714  0011A2  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  4715  0011A4  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  4716  0011A6  500B               	movf	___aodiv@divisor^0,w,c
  4717  0011A8  5C03               	subwf	___aodiv@dividend^0,w,c
  4718  0011AA  500C               	movf	(___aodiv@divisor+1)^0,w,c
  4719  0011AC  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  4720  0011AE  500D               	movf	(___aodiv@divisor+2)^0,w,c
  4721  0011B0  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  4722  0011B2  500E               	movf	(___aodiv@divisor+3)^0,w,c
  4723  0011B4  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  4724  0011B6  500F               	movf	(___aodiv@divisor+4)^0,w,c
  4725  0011B8  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  4726  0011BA  5010               	movf	(___aodiv@divisor+5)^0,w,c
  4727  0011BC  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  4728  0011BE  5011               	movf	(___aodiv@divisor+6)^0,w,c
  4729  0011C0  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  4730  0011C2  5012               	movf	(___aodiv@divisor+7)^0,w,c
  4731  0011C4  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  4732  0011C6  A0D8               	btfss	status,0,c
  4733  0011C8  EFE8  F008         	goto	u1681
  4734  0011CC  EFEA  F008         	goto	u1680
  4735  0011D0                     u1681:
  4736  0011D0  EFFB  F008         	goto	l2761
  4737  0011D4                     u1680:
  4738  0011D4  500B               	movf	___aodiv@divisor^0,w,c
  4739  0011D6  5E03               	subwf	___aodiv@dividend^0,f,c
  4740  0011D8  500C               	movf	(___aodiv@divisor+1)^0,w,c
  4741  0011DA  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  4742  0011DC  500D               	movf	(___aodiv@divisor+2)^0,w,c
  4743  0011DE  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  4744  0011E0  500E               	movf	(___aodiv@divisor+3)^0,w,c
  4745  0011E2  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  4746  0011E4  500F               	movf	(___aodiv@divisor+4)^0,w,c
  4747  0011E6  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  4748  0011E8  5010               	movf	(___aodiv@divisor+5)^0,w,c
  4749  0011EA  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  4750  0011EC  5011               	movf	(___aodiv@divisor+6)^0,w,c
  4751  0011EE  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  4752  0011F0  5012               	movf	(___aodiv@divisor+7)^0,w,c
  4753  0011F2  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  4754  0011F4  8015               	bsf	___aodiv@quotient^0,0,c
  4755  0011F6                     l2761:
  4756  0011F6  90D8               	bcf	status,0,c
  4757  0011F8  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  4758  0011FA  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  4759  0011FC  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  4760  0011FE  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  4761  001200  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  4762  001202  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  4763  001204  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  4764  001206  320B               	rrcf	___aodiv@divisor^0,f,c
  4765  001208  2E13               	decfsz	___aodiv@counter^0,f,c
  4766  00120A  EFCA  F008         	goto	l2753
  4767  00120E                     l2765:
  4768  00120E  5014               	movf	___aodiv@sign^0,w,c
  4769  001210  B4D8               	btfsc	status,2,c
  4770  001212  EF0D  F009         	goto	u1691
  4771  001216  EF0F  F009         	goto	u1690
  4772  00121A                     u1691:
  4773  00121A  EF1F  F009         	goto	l2769
  4774  00121E                     u1690:
  4775  00121E  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  4776  001220  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  4777  001222  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  4778  001224  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  4779  001226  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  4780  001228  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  4781  00122A  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  4782  00122C  6C15               	negf	___aodiv@quotient^0,c
  4783  00122E  0E00               	movlw	0
  4784  001230  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  4785  001232  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  4786  001234  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  4787  001236  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  4788  001238  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  4789  00123A  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  4790  00123C  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  4791  00123E                     l2769:
  4792  00123E  C015  F003         	movff	___aodiv@quotient,?___aodiv
  4793  001242  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  4794  001246  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  4795  00124A  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  4796  00124E  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  4797  001252  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  4798  001256  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  4799  00125A  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  4800  00125E  0012               	return		;funcret
  4801  001260                     __end_of___aodiv:
  4802                           	opt callstack 0
  4803                           
  4804 ;; *************** function _lcd_init *****************
  4805 ;; Defined at:
  4806 ;;		line 34 in file "lib_ili9341.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    9
  4827 ;; This function calls:
  4828 ;;		_lcd_fill
  4829 ;;		_lcd_send
  4830 ;;		_msDelay
  4831 ;; This function is called by:
  4832 ;;		_main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text13
  4837  0004C6                     __ptext13:
  4838                           	opt callstack 0
  4839  0004C6                     _lcd_init:
  4840                           	opt callstack 21
  4841  0004C6                     
  4842                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
  4843  0004C6  0E01               	movlw	1
  4844  0004C8  6E04               	movwf	lcd_send@value^0,c
  4845  0004CA  0E00               	movlw	0
  4846  0004CC  EC6E  F010         	call	_lcd_send
  4847  0004D0                     
  4848                           ;lib_ili9341.c: 38:     msDelay(150);
  4849  0004D0  0E96               	movlw	150
  4850  0004D2  ECD3  F00F         	call	_msDelay
  4851  0004D6                     
  4852                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
  4853  0004D6  0EEF               	movlw	239
  4854  0004D8  6E04               	movwf	lcd_send@value^0,c
  4855  0004DA  0E00               	movlw	0
  4856  0004DC  EC6E  F010         	call	_lcd_send
  4857  0004E0                     
  4858                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
  4859  0004E0  0E03               	movlw	3
  4860  0004E2  6E04               	movwf	lcd_send@value^0,c
  4861  0004E4  0E01               	movlw	1
  4862  0004E6  EC6E  F010         	call	_lcd_send
  4863  0004EA                     
  4864                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
  4865  0004EA  0E80               	movlw	128
  4866  0004EC  6E04               	movwf	lcd_send@value^0,c
  4867  0004EE  0E01               	movlw	1
  4868  0004F0  EC6E  F010         	call	_lcd_send
  4869  0004F4                     
  4870                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
  4871  0004F4  0E02               	movlw	2
  4872  0004F6  6E04               	movwf	lcd_send@value^0,c
  4873  0004F8  0E01               	movlw	1
  4874  0004FA  EC6E  F010         	call	_lcd_send
  4875  0004FE                     
  4876                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
  4877  0004FE  0ECF               	movlw	207
  4878  000500  6E04               	movwf	lcd_send@value^0,c
  4879  000502  0E00               	movlw	0
  4880  000504  EC6E  F010         	call	_lcd_send
  4881  000508                     
  4882                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
  4883  000508  0E00               	movlw	0
  4884  00050A  6E04               	movwf	lcd_send@value^0,c
  4885  00050C  0E01               	movlw	1
  4886  00050E  EC6E  F010         	call	_lcd_send
  4887  000512                     
  4888                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
  4889  000512  0EC1               	movlw	193
  4890  000514  6E04               	movwf	lcd_send@value^0,c
  4891  000516  0E01               	movlw	1
  4892  000518  EC6E  F010         	call	_lcd_send
  4893  00051C                     
  4894                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
  4895  00051C  0E30               	movlw	48
  4896  00051E  6E04               	movwf	lcd_send@value^0,c
  4897  000520  0E01               	movlw	1
  4898  000522  EC6E  F010         	call	_lcd_send
  4899  000526                     
  4900                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
  4901  000526  0EED               	movlw	237
  4902  000528  6E04               	movwf	lcd_send@value^0,c
  4903  00052A  0E00               	movlw	0
  4904  00052C  EC6E  F010         	call	_lcd_send
  4905  000530                     
  4906                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
  4907  000530  0E64               	movlw	100
  4908  000532  6E04               	movwf	lcd_send@value^0,c
  4909  000534  0E01               	movlw	1
  4910  000536  EC6E  F010         	call	_lcd_send
  4911  00053A                     
  4912                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
  4913  00053A  0E03               	movlw	3
  4914  00053C  6E04               	movwf	lcd_send@value^0,c
  4915  00053E  0E01               	movlw	1
  4916  000540  EC6E  F010         	call	_lcd_send
  4917  000544                     
  4918                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
  4919  000544  0E12               	movlw	18
  4920  000546  6E04               	movwf	lcd_send@value^0,c
  4921  000548  0E01               	movlw	1
  4922  00054A  EC6E  F010         	call	_lcd_send
  4923  00054E                     
  4924                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
  4925  00054E  0E81               	movlw	129
  4926  000550  6E04               	movwf	lcd_send@value^0,c
  4927  000552  0E01               	movlw	1
  4928  000554  EC6E  F010         	call	_lcd_send
  4929  000558                     
  4930                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
  4931  000558  0EE8               	movlw	232
  4932  00055A  6E04               	movwf	lcd_send@value^0,c
  4933  00055C  0E00               	movlw	0
  4934  00055E  EC6E  F010         	call	_lcd_send
  4935  000562                     
  4936                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
  4937  000562  0E85               	movlw	133
  4938  000564  6E04               	movwf	lcd_send@value^0,c
  4939  000566  0E01               	movlw	1
  4940  000568  EC6E  F010         	call	_lcd_send
  4941  00056C                     
  4942                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
  4943  00056C  0E00               	movlw	0
  4944  00056E  6E04               	movwf	lcd_send@value^0,c
  4945  000570  0E01               	movlw	1
  4946  000572  EC6E  F010         	call	_lcd_send
  4947  000576                     
  4948                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
  4949  000576  0E78               	movlw	120
  4950  000578  6E04               	movwf	lcd_send@value^0,c
  4951  00057A  0E01               	movlw	1
  4952  00057C  EC6E  F010         	call	_lcd_send
  4953  000580                     
  4954                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
  4955  000580  0ECB               	movlw	203
  4956  000582  6E04               	movwf	lcd_send@value^0,c
  4957  000584  0E00               	movlw	0
  4958  000586  EC6E  F010         	call	_lcd_send
  4959  00058A                     
  4960                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
  4961  00058A  0E39               	movlw	57
  4962  00058C  6E04               	movwf	lcd_send@value^0,c
  4963  00058E  0E01               	movlw	1
  4964  000590  EC6E  F010         	call	_lcd_send
  4965  000594                     
  4966                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
  4967  000594  0E2C               	movlw	44
  4968  000596  6E04               	movwf	lcd_send@value^0,c
  4969  000598  0E01               	movlw	1
  4970  00059A  EC6E  F010         	call	_lcd_send
  4971  00059E                     
  4972                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
  4973  00059E  0E00               	movlw	0
  4974  0005A0  6E04               	movwf	lcd_send@value^0,c
  4975  0005A2  0E01               	movlw	1
  4976  0005A4  EC6E  F010         	call	_lcd_send
  4977  0005A8                     
  4978                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
  4979  0005A8  0E34               	movlw	52
  4980  0005AA  6E04               	movwf	lcd_send@value^0,c
  4981  0005AC  0E01               	movlw	1
  4982  0005AE  EC6E  F010         	call	_lcd_send
  4983  0005B2                     
  4984                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
  4985  0005B2  0E02               	movlw	2
  4986  0005B4  6E04               	movwf	lcd_send@value^0,c
  4987  0005B6  0E01               	movlw	1
  4988  0005B8  EC6E  F010         	call	_lcd_send
  4989  0005BC                     
  4990                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
  4991  0005BC  0EF7               	movlw	247
  4992  0005BE  6E04               	movwf	lcd_send@value^0,c
  4993  0005C0  0E00               	movlw	0
  4994  0005C2  EC6E  F010         	call	_lcd_send
  4995  0005C6                     
  4996                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
  4997  0005C6  0E20               	movlw	32
  4998  0005C8  6E04               	movwf	lcd_send@value^0,c
  4999  0005CA  0E01               	movlw	1
  5000  0005CC  EC6E  F010         	call	_lcd_send
  5001  0005D0                     
  5002                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
  5003  0005D0  0EEA               	movlw	234
  5004  0005D2  6E04               	movwf	lcd_send@value^0,c
  5005  0005D4  0E00               	movlw	0
  5006  0005D6  EC6E  F010         	call	_lcd_send
  5007  0005DA                     
  5008                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
  5009  0005DA  0E00               	movlw	0
  5010  0005DC  6E04               	movwf	lcd_send@value^0,c
  5011  0005DE  0E01               	movlw	1
  5012  0005E0  EC6E  F010         	call	_lcd_send
  5013  0005E4                     
  5014                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
  5015  0005E4  0E00               	movlw	0
  5016  0005E6  6E04               	movwf	lcd_send@value^0,c
  5017  0005E8  0E01               	movlw	1
  5018  0005EA  EC6E  F010         	call	_lcd_send
  5019  0005EE                     
  5020                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
  5021  0005EE  0EC0               	movlw	192
  5022  0005F0  6E04               	movwf	lcd_send@value^0,c
  5023  0005F2  0E00               	movlw	0
  5024  0005F4  EC6E  F010         	call	_lcd_send
  5025  0005F8                     
  5026                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
  5027  0005F8  0E23               	movlw	35
  5028  0005FA  6E04               	movwf	lcd_send@value^0,c
  5029  0005FC  0E01               	movlw	1
  5030  0005FE  EC6E  F010         	call	_lcd_send
  5031  000602                     
  5032                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
  5033  000602  0EC1               	movlw	193
  5034  000604  6E04               	movwf	lcd_send@value^0,c
  5035  000606  0E00               	movlw	0
  5036  000608  EC6E  F010         	call	_lcd_send
  5037  00060C                     
  5038                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
  5039  00060C  0E10               	movlw	16
  5040  00060E  6E04               	movwf	lcd_send@value^0,c
  5041  000610  0E01               	movlw	1
  5042  000612  EC6E  F010         	call	_lcd_send
  5043  000616                     
  5044                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
  5045  000616  0EC5               	movlw	197
  5046  000618  6E04               	movwf	lcd_send@value^0,c
  5047  00061A  0E00               	movlw	0
  5048  00061C  EC6E  F010         	call	_lcd_send
  5049  000620                     
  5050                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
  5051  000620  0E3E               	movlw	62
  5052  000622  6E04               	movwf	lcd_send@value^0,c
  5053  000624  0E01               	movlw	1
  5054  000626  EC6E  F010         	call	_lcd_send
  5055  00062A                     
  5056                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
  5057  00062A  0E28               	movlw	40
  5058  00062C  6E04               	movwf	lcd_send@value^0,c
  5059  00062E  0E01               	movlw	1
  5060  000630  EC6E  F010         	call	_lcd_send
  5061  000634                     
  5062                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
  5063  000634  0EC7               	movlw	199
  5064  000636  6E04               	movwf	lcd_send@value^0,c
  5065  000638  0E00               	movlw	0
  5066  00063A  EC6E  F010         	call	_lcd_send
  5067  00063E                     
  5068                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
  5069  00063E  0E86               	movlw	134
  5070  000640  6E04               	movwf	lcd_send@value^0,c
  5071  000642  0E01               	movlw	1
  5072  000644  EC6E  F010         	call	_lcd_send
  5073  000648                     
  5074                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
  5075  000648  0E36               	movlw	54
  5076  00064A  6E04               	movwf	lcd_send@value^0,c
  5077  00064C  0E00               	movlw	0
  5078  00064E  EC6E  F010         	call	_lcd_send
  5079  000652                     
  5080                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
  5081  000652  0E48               	movlw	72
  5082  000654  6E04               	movwf	lcd_send@value^0,c
  5083  000656  0E01               	movlw	1
  5084  000658  EC6E  F010         	call	_lcd_send
  5085  00065C                     
  5086                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
  5087  00065C  0E3A               	movlw	58
  5088  00065E  6E04               	movwf	lcd_send@value^0,c
  5089  000660  0E00               	movlw	0
  5090  000662  EC6E  F010         	call	_lcd_send
  5091  000666                     
  5092                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
  5093  000666  0E55               	movlw	85
  5094  000668  6E04               	movwf	lcd_send@value^0,c
  5095  00066A  0E01               	movlw	1
  5096  00066C  EC6E  F010         	call	_lcd_send
  5097  000670                     
  5098                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
  5099  000670  0EB1               	movlw	177
  5100  000672  6E04               	movwf	lcd_send@value^0,c
  5101  000674  0E00               	movlw	0
  5102  000676  EC6E  F010         	call	_lcd_send
  5103  00067A                     
  5104                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
  5105  00067A  0E00               	movlw	0
  5106  00067C  6E04               	movwf	lcd_send@value^0,c
  5107  00067E  0E01               	movlw	1
  5108  000680  EC6E  F010         	call	_lcd_send
  5109  000684                     
  5110                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
  5111  000684  0E18               	movlw	24
  5112  000686  6E04               	movwf	lcd_send@value^0,c
  5113  000688  0E01               	movlw	1
  5114  00068A  EC6E  F010         	call	_lcd_send
  5115  00068E                     
  5116                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
  5117  00068E  0EB6               	movlw	182
  5118  000690  6E04               	movwf	lcd_send@value^0,c
  5119  000692  0E00               	movlw	0
  5120  000694  EC6E  F010         	call	_lcd_send
  5121  000698                     
  5122                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
  5123  000698  0E08               	movlw	8
  5124  00069A  6E04               	movwf	lcd_send@value^0,c
  5125  00069C  0E01               	movlw	1
  5126  00069E  EC6E  F010         	call	_lcd_send
  5127  0006A2                     
  5128                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
  5129  0006A2  0E82               	movlw	130
  5130  0006A4  6E04               	movwf	lcd_send@value^0,c
  5131  0006A6  0E01               	movlw	1
  5132  0006A8  EC6E  F010         	call	_lcd_send
  5133  0006AC                     
  5134                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
  5135  0006AC  0E27               	movlw	39
  5136  0006AE  6E04               	movwf	lcd_send@value^0,c
  5137  0006B0  0E01               	movlw	1
  5138  0006B2  EC6E  F010         	call	_lcd_send
  5139  0006B6                     
  5140                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
  5141  0006B6  0EF2               	movlw	242
  5142  0006B8  6E04               	movwf	lcd_send@value^0,c
  5143  0006BA  0E00               	movlw	0
  5144  0006BC  EC6E  F010         	call	_lcd_send
  5145  0006C0                     
  5146                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
  5147  0006C0  0E00               	movlw	0
  5148  0006C2  6E04               	movwf	lcd_send@value^0,c
  5149  0006C4  0E01               	movlw	1
  5150  0006C6  EC6E  F010         	call	_lcd_send
  5151  0006CA                     
  5152                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
  5153  0006CA  0E26               	movlw	38
  5154  0006CC  6E04               	movwf	lcd_send@value^0,c
  5155  0006CE  0E00               	movlw	0
  5156  0006D0  EC6E  F010         	call	_lcd_send
  5157  0006D4                     
  5158                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
  5159  0006D4  0E01               	movlw	1
  5160  0006D6  6E04               	movwf	lcd_send@value^0,c
  5161  0006D8  0E01               	movlw	1
  5162  0006DA  EC6E  F010         	call	_lcd_send
  5163  0006DE                     
  5164                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
  5165  0006DE  0EE0               	movlw	224
  5166  0006E0  6E04               	movwf	lcd_send@value^0,c
  5167  0006E2  0E00               	movlw	0
  5168  0006E4  EC6E  F010         	call	_lcd_send
  5169  0006E8                     
  5170                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
  5171  0006E8  0E0F               	movlw	15
  5172  0006EA  6E04               	movwf	lcd_send@value^0,c
  5173  0006EC  0E01               	movlw	1
  5174  0006EE  EC6E  F010         	call	_lcd_send
  5175  0006F2                     
  5176                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
  5177  0006F2  0E31               	movlw	49
  5178  0006F4  6E04               	movwf	lcd_send@value^0,c
  5179  0006F6  0E01               	movlw	1
  5180  0006F8  EC6E  F010         	call	_lcd_send
  5181  0006FC                     
  5182                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
  5183  0006FC  0E2B               	movlw	43
  5184  0006FE  6E04               	movwf	lcd_send@value^0,c
  5185  000700  0E01               	movlw	1
  5186  000702  EC6E  F010         	call	_lcd_send
  5187  000706                     
  5188                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
  5189  000706  0E0C               	movlw	12
  5190  000708  6E04               	movwf	lcd_send@value^0,c
  5191  00070A  0E01               	movlw	1
  5192  00070C  EC6E  F010         	call	_lcd_send
  5193  000710                     
  5194                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
  5195  000710  0E0E               	movlw	14
  5196  000712  6E04               	movwf	lcd_send@value^0,c
  5197  000714  0E01               	movlw	1
  5198  000716  EC6E  F010         	call	_lcd_send
  5199  00071A                     
  5200                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
  5201  00071A  0E08               	movlw	8
  5202  00071C  6E04               	movwf	lcd_send@value^0,c
  5203  00071E  0E01               	movlw	1
  5204  000720  EC6E  F010         	call	_lcd_send
  5205  000724                     
  5206                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
  5207  000724  0E4E               	movlw	78
  5208  000726  6E04               	movwf	lcd_send@value^0,c
  5209  000728  0E01               	movlw	1
  5210  00072A  EC6E  F010         	call	_lcd_send
  5211  00072E                     
  5212                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
  5213  00072E  0EF1               	movlw	241
  5214  000730  6E04               	movwf	lcd_send@value^0,c
  5215  000732  0E01               	movlw	1
  5216  000734  EC6E  F010         	call	_lcd_send
  5217  000738                     
  5218                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
  5219  000738  0E37               	movlw	55
  5220  00073A  6E04               	movwf	lcd_send@value^0,c
  5221  00073C  0E01               	movlw	1
  5222  00073E  EC6E  F010         	call	_lcd_send
  5223  000742                     
  5224                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
  5225  000742  0E07               	movlw	7
  5226  000744  6E04               	movwf	lcd_send@value^0,c
  5227  000746  0E01               	movlw	1
  5228  000748  EC6E  F010         	call	_lcd_send
  5229  00074C                     
  5230                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
  5231  00074C  0E10               	movlw	16
  5232  00074E  6E04               	movwf	lcd_send@value^0,c
  5233  000750  0E01               	movlw	1
  5234  000752  EC6E  F010         	call	_lcd_send
  5235  000756                     
  5236                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
  5237  000756  0E03               	movlw	3
  5238  000758  6E04               	movwf	lcd_send@value^0,c
  5239  00075A  0E01               	movlw	1
  5240  00075C  EC6E  F010         	call	_lcd_send
  5241  000760                     
  5242                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
  5243  000760  0E0E               	movlw	14
  5244  000762  6E04               	movwf	lcd_send@value^0,c
  5245  000764  0E01               	movlw	1
  5246  000766  EC6E  F010         	call	_lcd_send
  5247  00076A                     
  5248                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
  5249  00076A  0E09               	movlw	9
  5250  00076C  6E04               	movwf	lcd_send@value^0,c
  5251  00076E  0E01               	movlw	1
  5252  000770  EC6E  F010         	call	_lcd_send
  5253  000774                     
  5254                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
  5255  000774  0E00               	movlw	0
  5256  000776  6E04               	movwf	lcd_send@value^0,c
  5257  000778  0E01               	movlw	1
  5258  00077A  EC6E  F010         	call	_lcd_send
  5259  00077E                     
  5260                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
  5261  00077E  0EE1               	movlw	225
  5262  000780  6E04               	movwf	lcd_send@value^0,c
  5263  000782  0E00               	movlw	0
  5264  000784  EC6E  F010         	call	_lcd_send
  5265  000788                     
  5266                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
  5267  000788  0E00               	movlw	0
  5268  00078A  6E04               	movwf	lcd_send@value^0,c
  5269  00078C  0E01               	movlw	1
  5270  00078E  EC6E  F010         	call	_lcd_send
  5271  000792                     
  5272                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
  5273  000792  0E0E               	movlw	14
  5274  000794  6E04               	movwf	lcd_send@value^0,c
  5275  000796  0E01               	movlw	1
  5276  000798  EC6E  F010         	call	_lcd_send
  5277  00079C                     
  5278                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
  5279  00079C  0E14               	movlw	20
  5280  00079E  6E04               	movwf	lcd_send@value^0,c
  5281  0007A0  0E01               	movlw	1
  5282  0007A2  EC6E  F010         	call	_lcd_send
  5283  0007A6                     
  5284                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
  5285  0007A6  0E03               	movlw	3
  5286  0007A8  6E04               	movwf	lcd_send@value^0,c
  5287  0007AA  0E01               	movlw	1
  5288  0007AC  EC6E  F010         	call	_lcd_send
  5289  0007B0                     
  5290                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
  5291  0007B0  0E11               	movlw	17
  5292  0007B2  6E04               	movwf	lcd_send@value^0,c
  5293  0007B4  0E01               	movlw	1
  5294  0007B6  EC6E  F010         	call	_lcd_send
  5295  0007BA                     
  5296                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
  5297  0007BA  0E07               	movlw	7
  5298  0007BC  6E04               	movwf	lcd_send@value^0,c
  5299  0007BE  0E01               	movlw	1
  5300  0007C0  EC6E  F010         	call	_lcd_send
  5301  0007C4                     
  5302                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
  5303  0007C4  0E31               	movlw	49
  5304  0007C6  6E04               	movwf	lcd_send@value^0,c
  5305  0007C8  0E01               	movlw	1
  5306  0007CA  EC6E  F010         	call	_lcd_send
  5307  0007CE                     
  5308                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
  5309  0007CE  0EC1               	movlw	193
  5310  0007D0  6E04               	movwf	lcd_send@value^0,c
  5311  0007D2  0E01               	movlw	1
  5312  0007D4  EC6E  F010         	call	_lcd_send
  5313  0007D8                     
  5314                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
  5315  0007D8  0E48               	movlw	72
  5316  0007DA  6E04               	movwf	lcd_send@value^0,c
  5317  0007DC  0E01               	movlw	1
  5318  0007DE  EC6E  F010         	call	_lcd_send
  5319  0007E2                     
  5320                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
  5321  0007E2  0E08               	movlw	8
  5322  0007E4  6E04               	movwf	lcd_send@value^0,c
  5323  0007E6  0E01               	movlw	1
  5324  0007E8  EC6E  F010         	call	_lcd_send
  5325  0007EC                     
  5326                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
  5327  0007EC  0E0F               	movlw	15
  5328  0007EE  6E04               	movwf	lcd_send@value^0,c
  5329  0007F0  0E01               	movlw	1
  5330  0007F2  EC6E  F010         	call	_lcd_send
  5331  0007F6                     
  5332                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
  5333  0007F6  0E0C               	movlw	12
  5334  0007F8  6E04               	movwf	lcd_send@value^0,c
  5335  0007FA  0E01               	movlw	1
  5336  0007FC  EC6E  F010         	call	_lcd_send
  5337  000800                     
  5338                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
  5339  000800  0E31               	movlw	49
  5340  000802  6E04               	movwf	lcd_send@value^0,c
  5341  000804  0E01               	movlw	1
  5342  000806  EC6E  F010         	call	_lcd_send
  5343  00080A                     
  5344                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
  5345  00080A  0E36               	movlw	54
  5346  00080C  6E04               	movwf	lcd_send@value^0,c
  5347  00080E  0E01               	movlw	1
  5348  000810  EC6E  F010         	call	_lcd_send
  5349  000814                     
  5350                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
  5351  000814  0E0F               	movlw	15
  5352  000816  6E04               	movwf	lcd_send@value^0,c
  5353  000818  0E01               	movlw	1
  5354  00081A  EC6E  F010         	call	_lcd_send
  5355  00081E                     
  5356                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
  5357  00081E  0E11               	movlw	17
  5358  000820  6E04               	movwf	lcd_send@value^0,c
  5359  000822  0E00               	movlw	0
  5360  000824  EC6E  F010         	call	_lcd_send
  5361                           
  5362                           ;lib_ili9341.c: 125:     msDelay(120);
  5363  000828  0E78               	movlw	120
  5364  00082A  ECD3  F00F         	call	_msDelay
  5365  00082E                     
  5366                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
  5367  00082E  0E29               	movlw	41
  5368  000830  6E04               	movwf	lcd_send@value^0,c
  5369  000832  0E00               	movlw	0
  5370  000834  EC6E  F010         	call	_lcd_send
  5371  000838                     
  5372                           ;lib_ili9341.c: 127:     msDelay(120);
  5373  000838  0E78               	movlw	120
  5374  00083A  ECD3  F00F         	call	_msDelay
  5375  00083E                     
  5376                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
  5377  00083E  0E00               	movlw	0
  5378  000840  6E0D               	movwf	(lcd_fill@bg_color+1)^0,c
  5379  000842  0E00               	movlw	0
  5380  000844  6E0C               	movwf	lcd_fill@bg_color^0,c
  5381  000846  EC84  F00D         	call	_lcd_fill	;wreg free
  5382  00084A  0012               	return		;funcret
  5383  00084C                     __end_of_lcd_init:
  5384                           	opt callstack 0
  5385                           
  5386 ;; *************** function _msDelay *****************
  5387 ;; Defined at:
  5388 ;;		line 16 in file "lib_ili9341.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  ms              1    wreg     unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  ms              1    3[COMRAM] unsigned char 
  5393 ;;  k               1    4[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;Total ram usage:        3 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    4
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_lcd_init
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text14
  5418  001FA6                     __ptext14:
  5419                           	opt callstack 0
  5420  001FA6                     _msDelay:
  5421                           	opt callstack 25
  5422                           
  5423                           ;incstack = 0
  5424                           ;msDelay@ms stored from wreg
  5425  001FA6  6E04               	movwf	msDelay@ms^0,c
  5426  001FA8                     
  5427                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
  5428  001FA8  0E00               	movlw	0
  5429  001FAA  6E05               	movwf	msDelay@k^0,c
  5430  001FAC  EFE0  F00F         	goto	l3047
  5431  001FB0                     l3043:
  5432                           
  5433                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
  5434  001FB0  0E03               	movlw	3
  5435  001FB2  6E03               	movwf	??_msDelay^0,c
  5436  001FB4  0E98               	movlw	152
  5437  001FB6                     u2977:
  5438  001FB6  2EE8               	decfsz	wreg,f,c
  5439  001FB8  D7FE               	bra	u2977
  5440  001FBA  2E03               	decfsz	??_msDelay^0,f,c
  5441  001FBC  D7FC               	bra	u2977
  5442  001FBE                     
  5443                           ;lib_ili9341.c: 23:     }
  5444  001FBE  2A05               	incf	msDelay@k^0,f,c
  5445  001FC0                     l3047:
  5446  001FC0  5004               	movf	msDelay@ms^0,w,c
  5447  001FC2  5C05               	subwf	msDelay@k^0,w,c
  5448  001FC4  A0D8               	btfss	status,0,c
  5449  001FC6  EFE7  F00F         	goto	u2081
  5450  001FCA  EFE9  F00F         	goto	u2080
  5451  001FCE                     u2081:
  5452  001FCE  EFD8  F00F         	goto	l3043
  5453  001FD2                     u2080:
  5454  001FD2  0012               	return		;funcret
  5455  001FD4                     __end_of_msDelay:
  5456                           	opt callstack 0
  5457                           
  5458 ;; *************** function _lcd_fill *****************
  5459 ;; Defined at:
  5460 ;;		line 193 in file "lib_ili9341.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  bg_color        2   11[COMRAM] unsigned short 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  width           2   15[COMRAM] unsigned short 
  5465 ;;  height          2   13[COMRAM] unsigned short 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5476 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5478 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5479 ;;Total ram usage:        6 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    8
  5482 ;; This function calls:
  5483 ;;		_lcd_draw_pixel
  5484 ;;		_lcd_set_cursor
  5485 ;; This function is called by:
  5486 ;;		_lcd_init
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text15
  5491  001B08                     __ptext15:
  5492                           	opt callstack 0
  5493  001B08                     _lcd_fill:
  5494                           	opt callstack 21
  5495  001B08                     
  5496                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
  5497  001B08  0E01               	movlw	1
  5498  001B0A  6E11               	movwf	(lcd_fill@width+1)^0,c
  5499  001B0C  0E40               	movlw	64
  5500  001B0E  6E10               	movwf	lcd_fill@width^0,c
  5501  001B10  0E00               	movlw	0
  5502  001B12  6E0F               	movwf	(lcd_fill@height+1)^0,c
  5503  001B14  0EF0               	movlw	240
  5504  001B16  6E0E               	movwf	lcd_fill@height^0,c
  5505  001B18                     
  5506                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
  5507  001B18  0E00               	movlw	0
  5508  001B1A  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
  5509  001B1C  0E00               	movlw	0
  5510  001B1E  6E08               	movwf	lcd_set_cursor@x^0,c
  5511  001B20  0E00               	movlw	0
  5512  001B22  6E0B               	movwf	(lcd_set_cursor@y+1)^0,c
  5513  001B24  0E00               	movlw	0
  5514  001B26  6E0A               	movwf	lcd_set_cursor@y^0,c
  5515  001B28  EC2A  F00F         	call	_lcd_set_cursor	;wreg free
  5516  001B2C  0900               	iorlw	0
  5517  001B2E  B4D8               	btfsc	status,2,c
  5518  001B30  EF9C  F00D         	goto	u2091
  5519  001B34  EF9E  F00D         	goto	u2090
  5520  001B38                     u2091:
  5521  001B38  EFB7  F00D         	goto	l3061
  5522  001B3C                     u2090:
  5523  001B3C  EFC4  F00D         	goto	l452
  5524  001B40                     l3055:
  5525                           
  5526                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
  5527  001B40  C00C  F006         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
  5528  001B44  C00D  F007         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
  5529  001B48  EC92  F010         	call	_lcd_draw_pixel	;wreg free
  5530  001B4C                     l3057:
  5531                           
  5532                           ;lib_ili9341.c: 204:         while(width--)
  5533  001B4C  0610               	decf	lcd_fill@width^0,f,c
  5534  001B4E  A0D8               	btfss	status,0,c
  5535  001B50  0611               	decf	(lcd_fill@width+1)^0,f,c
  5536  001B52  2810               	incf	lcd_fill@width^0,w,c
  5537  001B54  E106               	bnz	u2101
  5538  001B56  2811               	incf	(lcd_fill@width+1)^0,w,c
  5539  001B58  A4D8               	btfss	status,2,c
  5540  001B5A  EFB1  F00D         	goto	u2101
  5541  001B5E  EFB3  F00D         	goto	u2100
  5542  001B62                     u2101:
  5543  001B62  EFA0  F00D         	goto	l3055
  5544  001B66                     u2100:
  5545  001B66                     
  5546                           ;lib_ili9341.c: 208:         width = 320;
  5547  001B66  0E01               	movlw	1
  5548  001B68  6E11               	movwf	(lcd_fill@width+1)^0,c
  5549  001B6A  0E40               	movlw	64
  5550  001B6C  6E10               	movwf	lcd_fill@width^0,c
  5551  001B6E                     l3061:
  5552                           
  5553                           ;lib_ili9341.c: 202:     while(height--)
  5554  001B6E  060E               	decf	lcd_fill@height^0,f,c
  5555  001B70  A0D8               	btfss	status,0,c
  5556  001B72  060F               	decf	(lcd_fill@height+1)^0,f,c
  5557  001B74  280E               	incf	lcd_fill@height^0,w,c
  5558  001B76  E106               	bnz	u2111
  5559  001B78  280F               	incf	(lcd_fill@height+1)^0,w,c
  5560  001B7A  A4D8               	btfss	status,2,c
  5561  001B7C  EFC2  F00D         	goto	u2111
  5562  001B80  EFC4  F00D         	goto	u2110
  5563  001B84                     u2111:
  5564  001B84  EFA6  F00D         	goto	l3057
  5565  001B88                     u2110:
  5566  001B88                     l452:
  5567  001B88  0012               	return		;funcret
  5568  001B8A                     __end_of_lcd_fill:
  5569                           	opt callstack 0
  5570                           
  5571 ;; *************** function _lcd_fill_rect *****************
  5572 ;; Defined at:
  5573 ;;		line 263 in file "lib_ili9341.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  x0              2   11[COMRAM] unsigned short 
  5576 ;;  y0              2   13[COMRAM] unsigned short 
  5577 ;;  x1              2   15[COMRAM] unsigned short 
  5578 ;;  y1              2   17[COMRAM] unsigned short 
  5579 ;;  color           2   19[COMRAM] unsigned short 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  y_start         2   23[COMRAM] unsigned short 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  1    wreg      void 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5591 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5594 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5595 ;;Total ram usage:       14 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    8
  5598 ;; This function calls:
  5599 ;;		_lcd_draw_pixel
  5600 ;;		_lcd_set_cursor
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text16
  5607  001744                     __ptext16:
  5608                           	opt callstack 0
  5609  001744                     _lcd_fill_rect:
  5610                           	opt callstack 22
  5611  001744                     
  5612                           ;lib_ili9341.c: 263: void lcd_fill_rect(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 264: {;lib_ili9341.c: 265:     uint16_t y_start = y0;
  5613  001744  C00E  F018         	movff	lcd_fill_rect@y0,lcd_fill_rect@y_start
  5614  001748  C00F  F019         	movff	lcd_fill_rect@y0+1,lcd_fill_rect@y_start+1
  5615  00174C                     
  5616                           ;lib_ili9341.c: 267:     if( (y0 >= 240) || (x0 >= 320) )
  5617  00174C  500F               	movf	(lcd_fill_rect@y0+1)^0,w,c
  5618  00174E  E107               	bnz	u2621
  5619  001750  0EF0               	movlw	240
  5620  001752  5C0E               	subwf	lcd_fill_rect@y0^0,w,c
  5621  001754  B0D8               	btfsc	status,0,c
  5622  001756  EFAF  F00B         	goto	u2621
  5623  00175A  EFB1  F00B         	goto	u2620
  5624  00175E                     u2621:
  5625  00175E  EF12  F00C         	goto	l487
  5626  001762                     u2620:
  5627  001762  0E40               	movlw	64
  5628  001764  5C0C               	subwf	lcd_fill_rect@x0^0,w,c
  5629  001766  0E01               	movlw	1
  5630  001768  580D               	subwfb	(lcd_fill_rect@x0+1)^0,w,c
  5631  00176A  A0D8               	btfss	status,0,c
  5632  00176C  EFBA  F00B         	goto	u2631
  5633  001770  EFBC  F00B         	goto	u2630
  5634  001774                     u2631:
  5635  001774  EFBE  F00B         	goto	l3589
  5636  001778                     u2630:
  5637  001778  EF12  F00C         	goto	l487
  5638  00177C                     l3589:
  5639                           
  5640                           ;lib_ili9341.c: 272:     if( x1 >= 320 )
  5641  00177C  0E40               	movlw	64
  5642  00177E  5C10               	subwf	lcd_fill_rect@x1^0,w,c
  5643  001780  0E01               	movlw	1
  5644  001782  5811               	subwfb	(lcd_fill_rect@x1+1)^0,w,c
  5645  001784  A0D8               	btfss	status,0,c
  5646  001786  EFC7  F00B         	goto	u2641
  5647  00178A  EFC9  F00B         	goto	u2640
  5648  00178E                     u2641:
  5649  00178E  EFCD  F00B         	goto	l3593
  5650  001792                     u2640:
  5651  001792                     
  5652                           ;lib_ili9341.c: 273:     {;lib_ili9341.c: 274:         x1 = 320;
  5653  001792  0E01               	movlw	1
  5654  001794  6E11               	movwf	(lcd_fill_rect@x1+1)^0,c
  5655  001796  0E40               	movlw	64
  5656  001798  6E10               	movwf	lcd_fill_rect@x1^0,c
  5657  00179A                     l3593:
  5658                           
  5659                           ;lib_ili9341.c: 277:     if( y1 >= 240 )
  5660  00179A  5013               	movf	(lcd_fill_rect@y1+1)^0,w,c
  5661  00179C  E109               	bnz	u2650
  5662  00179E  0EF0               	movlw	240
  5663  0017A0  5C12               	subwf	lcd_fill_rect@y1^0,w,c
  5664  0017A2  A0D8               	btfss	status,0,c
  5665  0017A4  EFD6  F00B         	goto	u2651
  5666  0017A8  EFD8  F00B         	goto	u2650
  5667  0017AC                     u2651:
  5668  0017AC  EF07  F00C         	goto	l3605
  5669  0017B0                     u2650:
  5670  0017B0                     
  5671                           ;lib_ili9341.c: 278:     {;lib_ili9341.c: 279:         y1 = 240;
  5672  0017B0  0E00               	movlw	0
  5673  0017B2  6E13               	movwf	(lcd_fill_rect@y1+1)^0,c
  5674  0017B4  0EF0               	movlw	240
  5675  0017B6  6E12               	movwf	lcd_fill_rect@y1^0,c
  5676  0017B8  EF07  F00C         	goto	l3605
  5677  0017BC                     l3597:
  5678                           
  5679                           ;lib_ili9341.c: 283:     {;lib_ili9341.c: 284:         lcd_set_cursor(x0++, y0);
  5680  0017BC  C00C  F008         	movff	lcd_fill_rect@x0,lcd_set_cursor@x
  5681  0017C0  C00D  F009         	movff	lcd_fill_rect@x0+1,lcd_set_cursor@x+1
  5682  0017C4  C00E  F00A         	movff	lcd_fill_rect@y0,lcd_set_cursor@y
  5683  0017C8  C00F  F00B         	movff	lcd_fill_rect@y0+1,lcd_set_cursor@y+1
  5684  0017CC  EC2A  F00F         	call	_lcd_set_cursor	;wreg free
  5685  0017D0  4A0C               	infsnz	lcd_fill_rect@x0^0,f,c
  5686  0017D2  2A0D               	incf	(lcd_fill_rect@x0+1)^0,f,c
  5687                           
  5688                           ;lib_ili9341.c: 286:         while( y0++ <= y1 )
  5689  0017D4  EFF2  F00B         	goto	l3603
  5690  0017D8                     l3601:
  5691                           
  5692                           ;lib_ili9341.c: 287:         {;lib_ili9341.c: 288:             lcd_draw_pixel(color);
  5693  0017D8  C014  F006         	movff	lcd_fill_rect@color,lcd_draw_pixel@color
  5694  0017DC  C015  F007         	movff	lcd_fill_rect@color+1,lcd_draw_pixel@color+1
  5695  0017E0  EC92  F010         	call	_lcd_draw_pixel	;wreg free
  5696  0017E4                     l3603:
  5697                           
  5698                           ;lib_ili9341.c: 286:         while( y0++ <= y1 )
  5699  0017E4  500E               	movf	lcd_fill_rect@y0^0,w,c
  5700  0017E6  6E16               	movwf	??_lcd_fill_rect^0,c
  5701  0017E8  500F               	movf	(lcd_fill_rect@y0+1)^0,w,c
  5702  0017EA  6E17               	movwf	(??_lcd_fill_rect+1)^0,c
  5703  0017EC  4A0E               	infsnz	lcd_fill_rect@y0^0,f,c
  5704  0017EE  2A0F               	incf	(lcd_fill_rect@y0+1)^0,f,c
  5705  0017F0  5016               	movf	??_lcd_fill_rect^0,w,c
  5706  0017F2  5C12               	subwf	lcd_fill_rect@y1^0,w,c
  5707  0017F4  5017               	movf	(??_lcd_fill_rect+1)^0,w,c
  5708  0017F6  5813               	subwfb	(lcd_fill_rect@y1+1)^0,w,c
  5709  0017F8  B0D8               	btfsc	status,0,c
  5710  0017FA  EF01  F00C         	goto	u2661
  5711  0017FE  EF03  F00C         	goto	u2660
  5712  001802                     u2661:
  5713  001802  EFEC  F00B         	goto	l3601
  5714  001806                     u2660:
  5715  001806                     
  5716                           ;lib_ili9341.c: 290:         y0 = y_start;
  5717  001806  C018  F00E         	movff	lcd_fill_rect@y_start,lcd_fill_rect@y0
  5718  00180A  C019  F00F         	movff	lcd_fill_rect@y_start+1,lcd_fill_rect@y0+1
  5719  00180E                     l3605:
  5720                           
  5721                           ;lib_ili9341.c: 282:     while( x0 <= x1 )
  5722  00180E  500C               	movf	lcd_fill_rect@x0^0,w,c
  5723  001810  5C10               	subwf	lcd_fill_rect@x1^0,w,c
  5724  001812  500D               	movf	(lcd_fill_rect@x0+1)^0,w,c
  5725  001814  5811               	subwfb	(lcd_fill_rect@x1+1)^0,w,c
  5726  001816  B0D8               	btfsc	status,0,c
  5727  001818  EF10  F00C         	goto	u2671
  5728  00181C  EF12  F00C         	goto	u2670
  5729  001820                     u2671:
  5730  001820  EFDE  F00B         	goto	l3597
  5731  001824                     u2670:
  5732  001824                     l487:
  5733  001824  0012               	return		;funcret
  5734  001826                     __end_of_lcd_fill_rect:
  5735                           	opt callstack 0
  5736                           
  5737 ;; *************** function _lcd_draw_string *****************
  5738 ;; Defined at:
  5739 ;;		line 380 in file "lib_ili9341.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;  x               2   33[COMRAM] unsigned short 
  5742 ;;  y               2   35[COMRAM] unsigned short 
  5743 ;;  pS              2   37[COMRAM] PTR const unsigned char 
  5744 ;;		 -> lcd_const_B(100), lcd_const_A(100), lcd_pot(100), 
  5745 ;;  fg_color        2   39[COMRAM] unsigned short 
  5746 ;;  bg_color        2   41[COMRAM] unsigned short 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  lIndex          2   49[COMRAM] unsigned short 
  5749 ;;  k               2   47[COMRAM] unsigned short 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5759 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;Total ram usage:       18 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    9
  5766 ;; This function calls:
  5767 ;;		_lcd_draw_char
  5768 ;; This function is called by:
  5769 ;;		_main
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text17
  5774  001644                     __ptext17:
  5775                           	opt callstack 0
  5776  001644                     _lcd_draw_string:
  5777                           	opt callstack 21
  5778  001644                     
  5779                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
  5780  001644  EF95  F00B         	goto	l3635
  5781  001648                     l3621:
  5782                           
  5783                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
  5784  001648  0E00               	movlw	0
  5785  00164A  6E33               	movwf	(lcd_draw_string@lIndex+1)^0,c
  5786  00164C  0E00               	movlw	0
  5787  00164E  6E32               	movwf	lcd_draw_string@lIndex^0,c
  5788                           
  5789                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
  5790  001650  0E00               	movlw	0
  5791  001652  6E31               	movwf	(lcd_draw_string@k+1)^0,c
  5792  001654  0E00               	movlw	0
  5793  001656  6E30               	movwf	lcd_draw_string@k^0,c
  5794  001658  EF4D  F00B         	goto	l3627
  5795  00165C                     l3623:
  5796                           
  5797                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
  5798  00165C  90D8               	bcf	status,0,c
  5799  00165E  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
  5800  001660  6EF6               	movwf	tblptrl,c
  5801  001662  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
  5802  001664  6EF7               	movwf	tblptrh,c
  5803  001666  0E05               	movlw	low _font
  5804  001668  26F6               	addwf	tblptrl,f,c
  5805  00166A  0EF2               	movlw	high _font
  5806  00166C  22F7               	addwfc	tblptrh,f,c
  5807  00166E                     	if	1	;There are 3 active tblptr bytes
  5808  00166E  6AF8               	clrf	tblptru,c
  5809  001670  0E00               	movlw	low (__mediumconst shr (0+16))
  5810  001672  22F8               	addwfc	tblptru,f,c
  5811  001674                     	endif
  5812  001674  0009               	tblrd		*+
  5813  001676  CFF5 F02C          	movff	tablat,??_lcd_draw_string
  5814  00167A  0009               	tblrd		*+
  5815  00167C  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
  5816  001680  90D8               	bcf	status,0,c
  5817  001682  362C               	rlcf	??_lcd_draw_string^0,f,c
  5818  001684  362D               	rlcf	(??_lcd_draw_string+1)^0,f,c
  5819  001686  0E01               	movlw	1
  5820  001688  262C               	addwf	??_lcd_draw_string^0,f,c
  5821  00168A  0E00               	movlw	0
  5822  00168C  222D               	addwfc	(??_lcd_draw_string+1)^0,f,c
  5823  00168E  502C               	movf	??_lcd_draw_string^0,w,c
  5824  001690  2632               	addwf	lcd_draw_string@lIndex^0,f,c
  5825  001692  502D               	movf	(??_lcd_draw_string+1)^0,w,c
  5826  001694  2233               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
  5827  001696                     
  5828                           ;lib_ili9341.c: 390:         }
  5829  001696  4A30               	infsnz	lcd_draw_string@k^0,f,c
  5830  001698  2A31               	incf	(lcd_draw_string@k+1)^0,f,c
  5831  00169A                     l3627:
  5832  00169A  0EE0               	movlw	224
  5833  00169C  6E2C               	movwf	??_lcd_draw_string^0,c
  5834  00169E  0EFF               	movlw	255
  5835  0016A0  6E2D               	movwf	(??_lcd_draw_string+1)^0,c
  5836  0016A2  C026  FFD9         	movff	lcd_draw_string@pS,fsr2l
  5837  0016A6  C027  FFDA         	movff	lcd_draw_string@pS+1,fsr2h
  5838  0016AA  50DF               	movf	indf2,w,c
  5839  0016AC  6E2E               	movwf	(??_lcd_draw_string+2)^0,c
  5840  0016AE  6A2F               	clrf	(??_lcd_draw_string+3)^0,c
  5841  0016B0  502C               	movf	??_lcd_draw_string^0,w,c
  5842  0016B2  262E               	addwf	(??_lcd_draw_string+2)^0,f,c
  5843  0016B4  502D               	movf	(??_lcd_draw_string+1)^0,w,c
  5844  0016B6  222F               	addwfc	(??_lcd_draw_string+3)^0,f,c
  5845  0016B8  502E               	movf	(??_lcd_draw_string+2)^0,w,c
  5846  0016BA  5C30               	subwf	lcd_draw_string@k^0,w,c
  5847  0016BC  502F               	movf	(??_lcd_draw_string+3)^0,w,c
  5848  0016BE  5831               	subwfb	(lcd_draw_string@k+1)^0,w,c
  5849  0016C0  A0D8               	btfss	status,0,c
  5850  0016C2  EF65  F00B         	goto	u2681
  5851  0016C6  EF67  F00B         	goto	u2680
  5852  0016CA                     u2681:
  5853  0016CA  EF2E  F00B         	goto	l3623
  5854  0016CE                     u2680:
  5855  0016CE                     
  5856                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
  5857  0016CE  C022  F00C         	movff	lcd_draw_string@x,lcd_draw_char@x
  5858  0016D2  C023  F00D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
  5859  0016D6  C024  F00E         	movff	lcd_draw_string@y,lcd_draw_char@y
  5860  0016DA  C025  F00F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
  5861  0016DE  C032  F010         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
  5862  0016E2  C033  F011         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
  5863  0016E6  C028  F012         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
  5864  0016EA  C029  F013         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
  5865  0016EE  C02A  F014         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
  5866  0016F2  C02B  F015         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
  5867  0016F6  EC30  F009         	call	_lcd_draw_char	;wreg free
  5868  0016FA                     
  5869                           ;lib_ili9341.c: 394:         x += font[lIndex];
  5870  0016FA  90D8               	bcf	status,0,c
  5871  0016FC  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
  5872  0016FE  6EF6               	movwf	tblptrl,c
  5873  001700  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
  5874  001702  6EF7               	movwf	tblptrh,c
  5875  001704  0E05               	movlw	low _font
  5876  001706  26F6               	addwf	tblptrl,f,c
  5877  001708  0EF2               	movlw	high _font
  5878  00170A  22F7               	addwfc	tblptrh,f,c
  5879  00170C                     	if	1	;There are 3 active tblptr bytes
  5880  00170C  6AF8               	clrf	tblptru,c
  5881  00170E  0E00               	movlw	low (__mediumconst shr (0+16))
  5882  001710  22F8               	addwfc	tblptru,f,c
  5883  001712                     	endif
  5884  001712  0009               	tblrd		*+
  5885  001714  CFF5 F02C          	movff	tablat,??_lcd_draw_string
  5886  001718  0009               	tblrd		*+
  5887  00171A  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
  5888  00171E  502C               	movf	??_lcd_draw_string^0,w,c
  5889  001720  2622               	addwf	lcd_draw_string@x^0,f,c
  5890  001722  502D               	movf	(??_lcd_draw_string+1)^0,w,c
  5891  001724  2223               	addwfc	(lcd_draw_string@x+1)^0,f,c
  5892  001726                     
  5893                           ;lib_ili9341.c: 396:         pS++;
  5894  001726  4A26               	infsnz	lcd_draw_string@pS^0,f,c
  5895  001728  2A27               	incf	(lcd_draw_string@pS+1)^0,f,c
  5896  00172A                     l3635:
  5897                           
  5898                           ;lib_ili9341.c: 384:     while(*pS)
  5899  00172A  C026  FFD9         	movff	lcd_draw_string@pS,fsr2l
  5900  00172E  C027  FFDA         	movff	lcd_draw_string@pS+1,fsr2h
  5901  001732  50DF               	movf	indf2,w,c
  5902  001734  A4D8               	btfss	status,2,c
  5903  001736  EF9F  F00B         	goto	u2691
  5904  00173A  EFA1  F00B         	goto	u2690
  5905  00173E                     u2691:
  5906  00173E  EF24  F00B         	goto	l3621
  5907  001742                     u2690:
  5908  001742  0012               	return		;funcret
  5909  001744                     __end_of_lcd_draw_string:
  5910                           	opt callstack 0
  5911                           
  5912 ;; *************** function _lcd_draw_char *****************
  5913 ;; Defined at:
  5914 ;;		line 355 in file "lib_ili9341.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  x               2   11[COMRAM] unsigned short 
  5917 ;;  y               2   13[COMRAM] unsigned short 
  5918 ;;  fIndex          2   15[COMRAM] unsigned short 
  5919 ;;  fg_color        2   17[COMRAM] unsigned short 
  5920 ;;  bg_color        2   19[COMRAM] unsigned short 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  i               1   32[COMRAM] unsigned char 
  5923 ;;  k               1   31[COMRAM] unsigned char 
  5924 ;;  j               1   30[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5934 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;Total ram usage:       22 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    8
  5941 ;; This function calls:
  5942 ;;		_lcd_draw_pixel
  5943 ;;		_lcd_set_cursor
  5944 ;; This function is called by:
  5945 ;;		_lcd_draw_string
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text18
  5950  001260                     __ptext18:
  5951                           	opt callstack 0
  5952  001260                     _lcd_draw_char:
  5953                           	opt callstack 21
  5954  001260                     
  5955                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
  5956  001260  0E00               	movlw	0
  5957  001262  6E1F               	movwf	lcd_draw_char@j^0,c
  5958  001264  EFD0  F009         	goto	l3099
  5959  001268                     l3069:
  5960                           
  5961                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
  5962  001268  90D8               	bcf	status,0,c
  5963  00126A  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
  5964  00126C  6EF6               	movwf	tblptrl,c
  5965  00126E  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
  5966  001270  6EF7               	movwf	tblptrh,c
  5967  001272  0E05               	movlw	low _font
  5968  001274  26F6               	addwf	tblptrl,f,c
  5969  001276  0EF2               	movlw	high _font
  5970  001278  22F7               	addwfc	tblptrh,f,c
  5971  00127A                     	if	1	;There are 3 active tblptr bytes
  5972  00127A  6AF8               	clrf	tblptru,c
  5973  00127C  0E00               	movlw	low (__mediumconst shr (0+16))
  5974  00127E  22F8               	addwfc	tblptru,f,c
  5975  001280                     	endif
  5976  001280  0009               	tblrd		*+
  5977  001282  CFF5 F016          	movff	tablat,??_lcd_draw_char
  5978  001286  0009               	tblrd		*+
  5979  001288  CFF5 F017          	movff	tablat,??_lcd_draw_char+1
  5980  00128C  501F               	movf	lcd_draw_char@j^0,w,c
  5981  00128E  5E16               	subwf	??_lcd_draw_char^0,f,c
  5982  001290  0E00               	movlw	0
  5983  001292  5A17               	subwfb	(??_lcd_draw_char+1)^0,f,c
  5984  001294  500C               	movf	lcd_draw_char@x^0,w,c
  5985  001296  2416               	addwf	??_lcd_draw_char^0,w,c
  5986  001298  6E08               	movwf	lcd_set_cursor@x^0,c
  5987  00129A  500D               	movf	(lcd_draw_char@x+1)^0,w,c
  5988  00129C  2017               	addwfc	(??_lcd_draw_char+1)^0,w,c
  5989  00129E  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
  5990  0012A0  C00E  F00A         	movff	lcd_draw_char@y,lcd_set_cursor@y
  5991  0012A4  C00F  F00B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
  5992  0012A8  EC2A  F00F         	call	_lcd_set_cursor	;wreg free
  5993  0012AC                     
  5994                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
  5995  0012AC  0E00               	movlw	0
  5996  0012AE  6E20               	movwf	lcd_draw_char@k^0,c
  5997  0012B0                     l3077:
  5998                           
  5999                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
  6000  0012B0  0E00               	movlw	0
  6001  0012B2  6E21               	movwf	lcd_draw_char@i^0,c
  6002  0012B4                     l3083:
  6003                           
  6004                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
  6005  0012B4  501F               	movf	lcd_draw_char@j^0,w,c
  6006  0012B6  6E16               	movwf	??_lcd_draw_char^0,c
  6007  0012B8  6A17               	clrf	(??_lcd_draw_char+1)^0,c
  6008  0012BA  90D8               	bcf	status,0,c
  6009  0012BC  3616               	rlcf	??_lcd_draw_char^0,f,c
  6010  0012BE  3617               	rlcf	(??_lcd_draw_char+1)^0,f,c
  6011  0012C0  90D8               	bcf	status,0,c
  6012  0012C2  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
  6013  0012C4  6EF6               	movwf	tblptrl,c
  6014  0012C6  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
  6015  0012C8  6EF7               	movwf	tblptrh,c
  6016  0012CA  0E05               	movlw	low _font
  6017  0012CC  26F6               	addwf	tblptrl,f,c
  6018  0012CE  0EF2               	movlw	high _font
  6019  0012D0  22F7               	addwfc	tblptrh,f,c
  6020  0012D2                     	if	1	;There are 3 active tblptr bytes
  6021  0012D2  6AF8               	clrf	tblptru,c
  6022  0012D4  0E00               	movlw	low (__mediumconst shr (0+16))
  6023  0012D6  22F8               	addwfc	tblptru,f,c
  6024  0012D8                     	endif
  6025  0012D8  0009               	tblrd		*+
  6026  0012DA  CFF5 F018          	movff	tablat,??_lcd_draw_char+2
  6027  0012DE  0009               	tblrd		*+
  6028  0012E0  CFF5 F019          	movff	tablat,??_lcd_draw_char+3
  6029  0012E4  90D8               	bcf	status,0,c
  6030  0012E6  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
  6031  0012E8  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
  6032  0012EA  5016               	movf	??_lcd_draw_char^0,w,c
  6033  0012EC  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
  6034  0012EE  5017               	movf	(??_lcd_draw_char+1)^0,w,c
  6035  0012F0  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
  6036  0012F2  5020               	movf	lcd_draw_char@k^0,w,c
  6037  0012F4  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
  6038  0012F6  0E00               	movlw	0
  6039  0012F8  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
  6040  0012FA  5010               	movf	lcd_draw_char@fIndex^0,w,c
  6041  0012FC  2618               	addwf	(??_lcd_draw_char+2)^0,f,c
  6042  0012FE  5011               	movf	(lcd_draw_char@fIndex+1)^0,w,c
  6043  001300  2219               	addwfc	(??_lcd_draw_char+3)^0,f,c
  6044  001302  90D8               	bcf	status,0,c
  6045  001304  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
  6046  001306  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
  6047  001308  0E05               	movlw	low _font
  6048  00130A  2418               	addwf	(??_lcd_draw_char+2)^0,w,c
  6049  00130C  6EF6               	movwf	tblptrl,c
  6050  00130E  0EF2               	movlw	high _font
  6051  001310  2019               	addwfc	(??_lcd_draw_char+3)^0,w,c
  6052  001312  6EF7               	movwf	tblptrh,c
  6053  001314                     	if	1	;There are 3 active tblptr bytes
  6054  001314  6AF8               	clrf	tblptru,c
  6055  001316  0E00               	movlw	low (__mediumconst shr (0+16))
  6056  001318  22F8               	addwfc	tblptru,f,c
  6057  00131A                     	endif
  6058  00131A  0009               	tblrd		*+
  6059  00131C  CFF5 F01A          	movff	tablat,??_lcd_draw_char+4
  6060  001320  0009               	tblrd		*+
  6061  001322  CFF5 F01B          	movff	tablat,??_lcd_draw_char+5
  6062  001326  C021  F01C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
  6063  00132A  0E80               	movlw	128
  6064  00132C  6E1D               	movwf	(??_lcd_draw_char+7)^0,c
  6065  00132E  0E00               	movlw	0
  6066  001330  6E1E               	movwf	(??_lcd_draw_char+8)^0,c
  6067  001332  2A1C               	incf	(??_lcd_draw_char+6)^0,f,c
  6068  001334  EF9F  F009         	goto	u2134
  6069  001338                     u2135:
  6070  001338  341E               	rlcf	(??_lcd_draw_char+8)^0,w,c
  6071  00133A  321E               	rrcf	(??_lcd_draw_char+8)^0,f,c
  6072  00133C  321D               	rrcf	(??_lcd_draw_char+7)^0,f,c
  6073  00133E                     u2134:
  6074  00133E  2E1C               	decfsz	(??_lcd_draw_char+6)^0,f,c
  6075  001340  EF9C  F009         	goto	u2135
  6076  001344  501A               	movf	(??_lcd_draw_char+4)^0,w,c
  6077  001346  161D               	andwf	(??_lcd_draw_char+7)^0,f,c
  6078  001348  501B               	movf	(??_lcd_draw_char+5)^0,w,c
  6079  00134A  161E               	andwf	(??_lcd_draw_char+8)^0,f,c
  6080  00134C  501D               	movf	(??_lcd_draw_char+7)^0,w,c
  6081  00134E  101E               	iorwf	(??_lcd_draw_char+8)^0,w,c
  6082  001350  B4D8               	btfsc	status,2,c
  6083  001352  EFAD  F009         	goto	u2141
  6084  001356  EFAF  F009         	goto	u2140
  6085  00135A                     u2141:
  6086  00135A  EFB7  F009         	goto	l3087
  6087  00135E                     u2140:
  6088  00135E                     
  6089                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
  6090  00135E  C012  F006         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
  6091  001362  C013  F007         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
  6092  001366  EC92  F010         	call	_lcd_draw_pixel	;wreg free
  6093                           
  6094                           ;lib_ili9341.c: 370:                 }
  6095  00136A  EFBD  F009         	goto	l3089
  6096  00136E                     l3087:
  6097                           
  6098                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
  6099  00136E  C014  F006         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
  6100  001372  C015  F007         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
  6101  001376  EC92  F010         	call	_lcd_draw_pixel	;wreg free
  6102  00137A                     l3089:
  6103                           
  6104                           ;lib_ili9341.c: 375:             }
  6105  00137A  2A21               	incf	lcd_draw_char@i^0,f,c
  6106  00137C  0E07               	movlw	7
  6107  00137E  6421               	cpfsgt	lcd_draw_char@i^0,c
  6108  001380  EFC4  F009         	goto	u2151
  6109  001384  EFC6  F009         	goto	u2150
  6110  001388                     u2151:
  6111  001388  EF5A  F009         	goto	l3083
  6112  00138C                     u2150:
  6113  00138C                     
  6114                           ;lib_ili9341.c: 376:         }
  6115  00138C  2A20               	incf	lcd_draw_char@k^0,f,c
  6116  00138E  0E01               	movlw	1
  6117  001390  6420               	cpfsgt	lcd_draw_char@k^0,c
  6118  001392  EFCD  F009         	goto	u2161
  6119  001396  EFCF  F009         	goto	u2160
  6120  00139A                     u2161:
  6121  00139A  EF58  F009         	goto	l3077
  6122  00139E                     u2160:
  6123  00139E                     
  6124                           ;lib_ili9341.c: 377:     }
  6125  00139E  2A1F               	incf	lcd_draw_char@j^0,f,c
  6126  0013A0                     l3099:
  6127  0013A0  90D8               	bcf	status,0,c
  6128  0013A2  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
  6129  0013A4  6EF6               	movwf	tblptrl,c
  6130  0013A6  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
  6131  0013A8  6EF7               	movwf	tblptrh,c
  6132  0013AA  0E05               	movlw	low _font
  6133  0013AC  26F6               	addwf	tblptrl,f,c
  6134  0013AE  0EF2               	movlw	high _font
  6135  0013B0  22F7               	addwfc	tblptrh,f,c
  6136  0013B2                     	if	1	;There are 3 active tblptr bytes
  6137  0013B2  6AF8               	clrf	tblptru,c
  6138  0013B4  0E00               	movlw	low (__mediumconst shr (0+16))
  6139  0013B6  22F8               	addwfc	tblptru,f,c
  6140  0013B8                     	endif
  6141  0013B8  501F               	movf	lcd_draw_char@j^0,w,c
  6142  0013BA  6E16               	movwf	??_lcd_draw_char^0,c
  6143  0013BC  6A17               	clrf	(??_lcd_draw_char+1)^0,c
  6144  0013BE  0009               	tblrd		*+
  6145  0013C0  50F5               	movf	tablat,w,c
  6146  0013C2  5C16               	subwf	??_lcd_draw_char^0,w,c
  6147  0013C4  0009               	tblrd		*+
  6148  0013C6  50F5               	movf	tablat,w,c
  6149  0013C8  5817               	subwfb	(??_lcd_draw_char+1)^0,w,c
  6150  0013CA  A0D8               	btfss	status,0,c
  6151  0013CC  EFEA  F009         	goto	u2171
  6152  0013D0  EFEC  F009         	goto	u2170
  6153  0013D4                     u2171:
  6154  0013D4  EF34  F009         	goto	l3069
  6155  0013D8                     u2170:
  6156  0013D8  0012               	return		;funcret
  6157  0013DA                     __end_of_lcd_draw_char:
  6158                           	opt callstack 0
  6159                           
  6160 ;; *************** function _lcd_set_cursor *****************
  6161 ;; Defined at:
  6162 ;;		line 144 in file "lib_ili9341.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  x               2    7[COMRAM] unsigned short 
  6165 ;;  y               2    9[COMRAM] unsigned short 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      unsigned char 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2, status,0, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;Total ram usage:        4 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    7
  6184 ;; This function calls:
  6185 ;;		_lcd_set_cursor_x
  6186 ;;		_lcd_set_cursor_y
  6187 ;; This function is called by:
  6188 ;;		_lcd_fill
  6189 ;;		_lcd_fill_rect
  6190 ;;		_lcd_draw_char
  6191 ;;		_lcd_draw_pixel_at
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text19
  6196  001E54                     __ptext19:
  6197                           	opt callstack 0
  6198  001E54                     _lcd_set_cursor:
  6199                           	opt callstack 21
  6200  001E54                     
  6201                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
  6202  001E54  C008  F006         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
  6203  001E58  C009  F007         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
  6204  001E5C  EC9D  F00E         	call	_lcd_set_cursor_x	;wreg free
  6205  001E60  0900               	iorlw	0
  6206  001E62  A4D8               	btfss	status,2,c
  6207  001E64  EF36  F00F         	goto	u1971
  6208  001E68  EF38  F00F         	goto	u1970
  6209  001E6C                     u1971:
  6210  001E6C  EF46  F00F         	goto	l2917
  6211  001E70                     u1970:
  6212  001E70  C00A  F006         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
  6213  001E74  C00B  F007         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
  6214  001E78  EC79  F00E         	call	_lcd_set_cursor_y	;wreg free
  6215  001E7C  0900               	iorlw	0
  6216  001E7E  B4D8               	btfsc	status,2,c
  6217  001E80  EF44  F00F         	goto	u1981
  6218  001E84  EF46  F00F         	goto	u1980
  6219  001E88                     u1981:
  6220  001E88  EF49  F00F         	goto	l2921
  6221  001E8C                     u1980:
  6222  001E8C                     l2917:
  6223                           
  6224                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
  6225  001E8C  0E01               	movlw	1
  6226  001E8E  EF4A  F00F         	goto	l437
  6227  001E92                     l2921:
  6228                           
  6229                           ;lib_ili9341.c: 151:     return 0;
  6230  001E92  0E00               	movlw	0
  6231  001E94                     l437:
  6232  001E94  0012               	return		;funcret
  6233  001E96                     __end_of_lcd_set_cursor:
  6234                           	opt callstack 0
  6235                           
  6236 ;; *************** function _lcd_set_cursor_y *****************
  6237 ;; Defined at:
  6238 ;;		line 170 in file "lib_ili9341.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  y               2    5[COMRAM] unsigned short 
  6241 ;; Auto vars:     Size  Location     Type
  6242 ;;		None
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  1    wreg      unsigned char 
  6245 ;; Registers used:
  6246 ;;		wreg, status,2, status,0, cstack
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6252 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;Total ram usage:        2 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    6
  6259 ;; This function calls:
  6260 ;;		_lcd_send
  6261 ;; This function is called by:
  6262 ;;		_lcd_set_cursor
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text20
  6267  001CF2                     __ptext20:
  6268                           	opt callstack 0
  6269  001CF2                     _lcd_set_cursor_y:
  6270                           	opt callstack 21
  6271  001CF2                     
  6272                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
  6273  001CF2  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
  6274  001CF4  E109               	bnz	u1770
  6275  001CF6  0EF0               	movlw	240
  6276  001CF8  5C06               	subwf	lcd_set_cursor_y@y^0,w,c
  6277  001CFA  A0D8               	btfss	status,0,c
  6278  001CFC  EF82  F00E         	goto	u1771
  6279  001D00  EF84  F00E         	goto	u1770
  6280  001D04                     u1771:
  6281  001D04  EF87  F00E         	goto	l2827
  6282  001D08                     u1770:
  6283  001D08                     
  6284                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
  6285  001D08  0E01               	movlw	1
  6286  001D0A  EF9C  F00E         	goto	l445
  6287  001D0E                     l2827:
  6288                           
  6289                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
  6290  001D0E  0E2A               	movlw	42
  6291  001D10  6E04               	movwf	lcd_send@value^0,c
  6292  001D12  0E00               	movlw	0
  6293  001D14  EC6E  F010         	call	_lcd_send
  6294                           
  6295                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
  6296  001D18  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
  6297  001D1A  6E04               	movwf	lcd_send@value^0,c
  6298  001D1C  0E01               	movlw	1
  6299  001D1E  EC6E  F010         	call	_lcd_send
  6300                           
  6301                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
  6302  001D22  C006  F004         	movff	lcd_set_cursor_y@y,lcd_send@value
  6303  001D26  0E01               	movlw	1
  6304  001D28  EC6E  F010         	call	_lcd_send
  6305                           
  6306                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
  6307  001D2C  0E2C               	movlw	44
  6308  001D2E  6E04               	movwf	lcd_send@value^0,c
  6309  001D30  0E00               	movlw	0
  6310  001D32  EC6E  F010         	call	_lcd_send
  6311  001D36                     
  6312                           ;lib_ili9341.c: 182:     return 0;
  6313  001D36  0E00               	movlw	0
  6314  001D38                     l445:
  6315  001D38  0012               	return		;funcret
  6316  001D3A                     __end_of_lcd_set_cursor_y:
  6317                           	opt callstack 0
  6318                           
  6319 ;; *************** function _lcd_set_cursor_x *****************
  6320 ;; Defined at:
  6321 ;;		line 155 in file "lib_ili9341.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  x               2    5[COMRAM] unsigned short 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;Total ram usage:        2 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    6
  6342 ;; This function calls:
  6343 ;;		_lcd_send
  6344 ;; This function is called by:
  6345 ;;		_lcd_set_cursor
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text21
  6350  001D3A                     __ptext21:
  6351                           	opt callstack 0
  6352  001D3A                     _lcd_set_cursor_x:
  6353                           	opt callstack 21
  6354  001D3A                     
  6355                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
  6356  001D3A  0E40               	movlw	64
  6357  001D3C  5C06               	subwf	lcd_set_cursor_x@x^0,w,c
  6358  001D3E  0E01               	movlw	1
  6359  001D40  5807               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
  6360  001D42  A0D8               	btfss	status,0,c
  6361  001D44  EFA6  F00E         	goto	u1761
  6362  001D48  EFA8  F00E         	goto	u1760
  6363  001D4C                     u1761:
  6364  001D4C  EFAB  F00E         	goto	l2815
  6365  001D50                     u1760:
  6366  001D50                     
  6367                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
  6368  001D50  0E01               	movlw	1
  6369  001D52  EFC0  F00E         	goto	l441
  6370  001D56                     l2815:
  6371                           
  6372                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
  6373  001D56  0E2B               	movlw	43
  6374  001D58  6E04               	movwf	lcd_send@value^0,c
  6375  001D5A  0E00               	movlw	0
  6376  001D5C  EC6E  F010         	call	_lcd_send
  6377                           
  6378                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
  6379  001D60  5007               	movf	(lcd_set_cursor_x@x+1)^0,w,c
  6380  001D62  6E04               	movwf	lcd_send@value^0,c
  6381  001D64  0E01               	movlw	1
  6382  001D66  EC6E  F010         	call	_lcd_send
  6383                           
  6384                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
  6385  001D6A  C006  F004         	movff	lcd_set_cursor_x@x,lcd_send@value
  6386  001D6E  0E01               	movlw	1
  6387  001D70  EC6E  F010         	call	_lcd_send
  6388                           
  6389                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
  6390  001D74  0E2C               	movlw	44
  6391  001D76  6E04               	movwf	lcd_send@value^0,c
  6392  001D78  0E00               	movlw	0
  6393  001D7A  EC6E  F010         	call	_lcd_send
  6394  001D7E                     
  6395                           ;lib_ili9341.c: 167:     return 0;
  6396  001D7E  0E00               	movlw	0
  6397  001D80                     l441:
  6398  001D80  0012               	return		;funcret
  6399  001D82                     __end_of_lcd_set_cursor_x:
  6400                           	opt callstack 0
  6401                           
  6402 ;; *************** function _lcd_draw_pixel *****************
  6403 ;; Defined at:
  6404 ;;		line 185 in file "lib_ili9341.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  color           2    5[COMRAM] unsigned short 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;Total ram usage:        2 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    6
  6425 ;; This function calls:
  6426 ;;		_lcd_send
  6427 ;; This function is called by:
  6428 ;;		_lcd_fill
  6429 ;;		_lcd_fill_rect
  6430 ;;		_lcd_draw_char
  6431 ;;		_lcd_draw_pixel_at
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text22
  6436  002124                     __ptext22:
  6437                           	opt callstack 0
  6438  002124                     _lcd_draw_pixel:
  6439                           	opt callstack 22
  6440  002124                     
  6441                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
  6442  002124  5007               	movf	(lcd_draw_pixel@color+1)^0,w,c
  6443  002126  6E04               	movwf	lcd_send@value^0,c
  6444  002128  0E01               	movlw	1
  6445  00212A  EC6E  F010         	call	_lcd_send
  6446                           
  6447                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
  6448  00212E  C006  F004         	movff	lcd_draw_pixel@color,lcd_send@value
  6449  002132  0E01               	movlw	1
  6450  002134  EC6E  F010         	call	_lcd_send
  6451  002138  0012               	return		;funcret
  6452  00213A                     __end_of_lcd_draw_pixel:
  6453                           	opt callstack 0
  6454                           
  6455 ;; *************** function _lcd_send *****************
  6456 ;; Defined at:
  6457 ;;		line 134 in file "lib_ili9341.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  dc              1    wreg     _Bool 
  6460 ;;  value           1    3[COMRAM] unsigned char 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;  dc              1    4[COMRAM] _Bool 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6472 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;Total ram usage:        2 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    5
  6479 ;; This function calls:
  6480 ;;		_SPI_ExchangeByte
  6481 ;; This function is called by:
  6482 ;;		_lcd_init
  6483 ;;		_lcd_set_cursor_x
  6484 ;;		_lcd_set_cursor_y
  6485 ;;		_lcd_draw_pixel
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text23
  6490  0020DC                     __ptext23:
  6491                           	opt callstack 0
  6492  0020DC                     _lcd_send:
  6493                           	opt callstack 24
  6494                           
  6495                           ;incstack = 0
  6496                           ;lcd_send@dc stored from wreg
  6497  0020DC  6E05               	movwf	lcd_send@dc^0,c
  6498  0020DE                     
  6499                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
  6500  0020DE  B005               	btfsc	lcd_send@dc^0,0,c
  6501  0020E0  D002               	bra	u1575
  6502  0020E2  908D               	bcf	141,0,c	;volatile
  6503  0020E4  D001               	bra	u1576
  6504  0020E6                     u1575:
  6505  0020E6  808D               	bsf	141,0,c	;volatile
  6506  0020E8                     u1576:
  6507  0020E8                     
  6508                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
  6509  0020E8  928D               	bcf	141,1,c	;volatile
  6510  0020EA                     
  6511                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
  6512  0020EA  5004               	movf	lcd_send@value^0,w,c
  6513  0020EC  EC61  F010         	call	_SPI_ExchangeByte
  6514  0020F0                     
  6515                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
  6516  0020F0  828D               	bsf	141,1,c	;volatile
  6517  0020F2  0012               	return		;funcret
  6518  0020F4                     __end_of_lcd_send:
  6519                           	opt callstack 0
  6520                           
  6521 ;; *************** function _SPI_ExchangeByte *****************
  6522 ;; Defined at:
  6523 ;;		line 92 in file "mcc_generated_files/spi.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  data            1    wreg     unsigned char 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  data            1    2[COMRAM] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      unsigned char 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6541 ;;Total ram usage:        1 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    4
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_lcd_send
  6548 ;;		_SPI_WriteBlock
  6549 ;;		_SPI_ReadBlock
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text24
  6554  0020C2                     __ptext24:
  6555                           	opt callstack 0
  6556  0020C2                     _SPI_ExchangeByte:
  6557                           	opt callstack 24
  6558                           
  6559                           ;incstack = 0
  6560                           ;SPI_ExchangeByte@data stored from wreg
  6561  0020C2  6E03               	movwf	SPI_ExchangeByte@data^0,c
  6562  0020C4                     
  6563                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  6564  0020C4  C003  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  6565  0020C8                     l150:
  6566  0020C8  A69E               	btfss	158,3,c	;volatile
  6567  0020CA  EF69  F010         	goto	u1541
  6568  0020CE  EF6B  F010         	goto	u1540
  6569  0020D2                     u1541:
  6570  0020D2  EF64  F010         	goto	l150
  6571  0020D6                     u1540:
  6572  0020D6                     
  6573                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  6574  0020D6  969E               	bcf	158,3,c	;volatile
  6575                           
  6576                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  6577  0020D8  50C9               	movf	201,w,c	;volatile
  6578  0020DA  0012               	return		;funcret
  6579  0020DC                     __end_of_SPI_ExchangeByte:
  6580                           	opt callstack 0
  6581                           
  6582 ;; *************** function _function_relay *****************
  6583 ;; Defined at:
  6584 ;;		line 39 in file "main.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    5
  6605 ;; This function calls:
  6606 ;;		_ADC_GetConversion
  6607 ;;		___flmul
  6608 ;;		___fltol
  6609 ;;		___xxtofl
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text25
  6616  001A62                     __ptext25:
  6617                           	opt callstack 0
  6618  001A62                     _function_relay:
  6619                           	opt callstack 25
  6620  001A62                     
  6621                           ;main.c: 40:     codigo_digital=ADC_GetConversion(POT);
  6622  001A62  0E00               	movlw	0
  6623  001A64  EC6B  F00F         	call	_ADC_GetConversion
  6624  001A68  C003  F06C         	movff	?_ADC_GetConversion,_codigo_digital
  6625  001A6C  C004  F06D         	movff	?_ADC_GetConversion+1,_codigo_digital+1
  6626  001A70                     
  6627                           ;main.c: 41:     pot_val=codigo_digital*0.02442002442;
  6628  001A70  0E81               	movlw	129
  6629  001A72  6E15               	movwf	___flmul@a^0,c
  6630  001A74  0E0C               	movlw	12
  6631  001A76  6E16               	movwf	(___flmul@a+1)^0,c
  6632  001A78  0EC8               	movlw	200
  6633  001A7A  6E17               	movwf	(___flmul@a+2)^0,c
  6634  001A7C  0E3C               	movlw	60
  6635  001A7E  6E18               	movwf	(___flmul@a+3)^0,c
  6636  001A80  C06C  F003         	movff	_codigo_digital,___xxtofl@val
  6637  001A84  C06D  F004         	movff	_codigo_digital+1,___xxtofl@val+1
  6638  001A88  0E00               	movlw	0
  6639  001A8A  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  6640  001A8C  0EFF               	movlw	-1
  6641  001A8E  6E05               	movwf	(___xxtofl@val+2)^0,c
  6642  001A90  6E06               	movwf	(___xxtofl@val+3)^0,c
  6643  001A92  0E01               	movlw	1
  6644  001A94  EC92  F007         	call	___xxtofl
  6645  001A98  C003  F011         	movff	?___xxtofl,___flmul@b
  6646  001A9C  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  6647  001AA0  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  6648  001AA4  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  6649  001AA8  EC4E  F000         	call	___flmul	;wreg free
  6650  001AAC  C011  F02A         	movff	?___flmul,___fltol@f1
  6651  001AB0  C012  F02B         	movff	?___flmul+1,___fltol@f1+1
  6652  001AB4  C013  F02C         	movff	?___flmul+2,___fltol@f1+2
  6653  001AB8  C014  F02D         	movff	?___flmul+3,___fltol@f1+3
  6654  001ABC  EC9F  F00A         	call	___fltol	;wreg free
  6655  001AC0  C02A  F08E         	movff	?___fltol,_pot_val
  6656  001AC4  C02B  F08F         	movff	?___fltol+1,_pot_val+1
  6657  001AC8                     
  6658                           ;main.c: 42:     if(pot_val>42) do { LATEbits.LATE2 = 1; } while(0);
  6659  001AC8  0100               	movlb	0	; () banked
  6660  001ACA  BF8F               	btfsc	(_pot_val+1)& (0+255),7,b
  6661  001ACC  EF71  F00D         	goto	u2601
  6662  001AD0  518F               	movf	(_pot_val+1)& (0+255),w,b
  6663  001AD2  E109               	bnz	u2600
  6664  001AD4  0E2B               	movlw	43
  6665  001AD6  5D8E               	subwf	_pot_val& (0+255),w,b
  6666  001AD8  A0D8               	btfss	status,0,c
  6667  001ADA  EF71  F00D         	goto	u2601
  6668  001ADE  EF73  F00D         	goto	u2600
  6669  001AE2                     u2601:
  6670  001AE2  EF74  F00D         	goto	l3397
  6671  001AE6                     u2600:
  6672  001AE6                     
  6673                           ; BSR set to: 0
  6674  001AE6  848D               	bsf	141,2,c	;volatile
  6675  001AE8                     l3397:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;main.c: 43:     if (pot_val<30) do { LATEbits.LATE2 = 0; } while(0);
  6679  001AE8  BF8F               	btfsc	(_pot_val+1)& (0+255),7,b
  6680  001AEA  EF82  F00D         	goto	u2610
  6681  001AEE  518F               	movf	(_pot_val+1)& (0+255),w,b
  6682  001AF0  E107               	bnz	u2611
  6683  001AF2  0E1E               	movlw	30
  6684  001AF4  5D8E               	subwf	_pot_val& (0+255),w,b
  6685  001AF6  B0D8               	btfsc	status,0,c
  6686  001AF8  EF80  F00D         	goto	u2611
  6687  001AFC  EF82  F00D         	goto	u2610
  6688  001B00                     u2611:
  6689  001B00  EF83  F00D         	goto	l370
  6690  001B04                     u2610:
  6691  001B04                     
  6692                           ; BSR set to: 0
  6693  001B04  948D               	bcf	141,2,c	;volatile
  6694  001B06                     l370:
  6695                           
  6696                           ; BSR set to: 0
  6697  001B06  0012               	return		;funcret
  6698  001B08                     __end_of_function_relay:
  6699                           	opt callstack 0
  6700                           
  6701 ;; *************** function _ADC_GetConversion *****************
  6702 ;; Defined at:
  6703 ;;		line 113 in file "mcc_generated_files/adc.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  channel         1    wreg     enum E12385
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  channel         1    6[COMRAM] enum E12385
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  2    2[COMRAM] unsigned short 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;Total ram usage:        5 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    4
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_function_relay
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text26
  6732  001ED6                     __ptext26:
  6733                           	opt callstack 0
  6734  001ED6                     _ADC_GetConversion:
  6735                           	opt callstack 25
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;incstack = 0
  6739                           ;ADC_GetConversion@channel stored from wreg
  6740  001ED6  6E07               	movwf	ADC_GetConversion@channel^0,c
  6741  001ED8                     
  6742                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
  6743  001ED8  C007  F005         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  6744  001EDC  4605               	rlncf	??_ADC_GetConversion^0,f,c
  6745  001EDE  4605               	rlncf	??_ADC_GetConversion^0,f,c
  6746  001EE0  50C2               	movf	194,w,c	;volatile
  6747  001EE2  1805               	xorwf	??_ADC_GetConversion^0,w,c
  6748  001EE4  0B83               	andlw	-125
  6749  001EE6  1805               	xorwf	??_ADC_GetConversion^0,w,c
  6750  001EE8  6EC2               	movwf	194,c	;volatile
  6751  001EEA                     
  6752                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
  6753  001EEA  80C2               	bsf	194,0,c	;volatile
  6754  001EEC                     
  6755                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
  6756  001EEC  82C2               	bsf	194,1,c	;volatile
  6757  001EEE                     l219:
  6758                           
  6759                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
  6760  001EEE  B2C2               	btfsc	194,1,c	;volatile
  6761  001EF0  EF7C  F00F         	goto	u2051
  6762  001EF4  EF7E  F00F         	goto	u2050
  6763  001EF8                     u2051:
  6764  001EF8  EF77  F00F         	goto	l219
  6765  001EFC                     u2050:
  6766  001EFC                     
  6767                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6768  001EFC  50C4               	movf	196,w,c	;volatile
  6769  001EFE  6E06               	movwf	(??_ADC_GetConversion+1)^0,c
  6770  001F00  6A05               	clrf	??_ADC_GetConversion^0,c
  6771  001F02  50C3               	movf	195,w,c	;volatile
  6772  001F04  2405               	addwf	??_ADC_GetConversion^0,w,c
  6773  001F06  6E03               	movwf	?_ADC_GetConversion^0,c
  6774  001F08  0E00               	movlw	0
  6775  001F0A  2006               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  6776  001F0C  6E04               	movwf	(?_ADC_GetConversion+1)^0,c
  6777  001F0E  0012               	return		;funcret
  6778  001F10                     __end_of_ADC_GetConversion:
  6779                           	opt callstack 0
  6780                           
  6781 ;; *************** function _function_pwm *****************
  6782 ;; Defined at:
  6783 ;;		line 46 in file "main.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6801 ;;Total ram usage:        0 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    5
  6804 ;; This function calls:
  6805 ;;		_EPWM1_LoadDutyValue
  6806 ;;		___flmul
  6807 ;;		___fltol
  6808 ;;		___xxtofl
  6809 ;; This function is called by:
  6810 ;;		_main
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text27
  6815  001B8A                     __ptext27:
  6816                           	opt callstack 0
  6817  001B8A                     _function_pwm:
  6818                           	opt callstack 25
  6819  001B8A                     
  6820                           ;main.c: 47:     pwm=10.23*pot_val;
  6821  001B8A  0E14               	movlw	20
  6822  001B8C  6E15               	movwf	___flmul@a^0,c
  6823  001B8E  0EAE               	movlw	174
  6824  001B90  6E16               	movwf	(___flmul@a+1)^0,c
  6825  001B92  0E23               	movlw	35
  6826  001B94  6E17               	movwf	(___flmul@a+2)^0,c
  6827  001B96  0E41               	movlw	65
  6828  001B98  6E18               	movwf	(___flmul@a+3)^0,c
  6829  001B9A  C08E  F003         	movff	_pot_val,___xxtofl@val
  6830  001B9E  C08F  F004         	movff	_pot_val+1,___xxtofl@val+1
  6831  001BA2  0E00               	movlw	0
  6832  001BA4  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  6833  001BA6  0EFF               	movlw	-1
  6834  001BA8  6E05               	movwf	(___xxtofl@val+2)^0,c
  6835  001BAA  6E06               	movwf	(___xxtofl@val+3)^0,c
  6836  001BAC  0E01               	movlw	1
  6837  001BAE  EC92  F007         	call	___xxtofl
  6838  001BB2  C003  F011         	movff	?___xxtofl,___flmul@b
  6839  001BB6  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  6840  001BBA  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  6841  001BBE  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  6842  001BC2  EC4E  F000         	call	___flmul	;wreg free
  6843  001BC6  C011  F02A         	movff	?___flmul,___fltol@f1
  6844  001BCA  C012  F02B         	movff	?___flmul+1,___fltol@f1+1
  6845  001BCE  C013  F02C         	movff	?___flmul+2,___fltol@f1+2
  6846  001BD2  C014  F02D         	movff	?___flmul+3,___fltol@f1+3
  6847  001BD6  EC9F  F00A         	call	___fltol	;wreg free
  6848  001BDA  C02A  F06A         	movff	?___fltol,_pwm
  6849  001BDE  C02B  F06B         	movff	?___fltol+1,_pwm+1
  6850  001BE2                     
  6851                           ;main.c: 48:     EPWM1_LoadDutyValue(pwm);
  6852  001BE2  C06A  F003         	movff	_pwm,EPWM1_LoadDutyValue@dutyValue
  6853  001BE6  C06B  F004         	movff	_pwm+1,EPWM1_LoadDutyValue@dutyValue+1
  6854  001BEA  ECA3  F00F         	call	_EPWM1_LoadDutyValue	;wreg free
  6855  001BEE  0012               	return		;funcret
  6856  001BF0                     __end_of_function_pwm:
  6857                           	opt callstack 0
  6858                           
  6859 ;; *************** function ___xxtofl *****************
  6860 ;; Defined at:
  6861 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  sign            1    wreg     unsigned char 
  6864 ;;  val             4    2[COMRAM] long 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  sign            1   10[COMRAM] unsigned char 
  6867 ;;  arg             4   12[COMRAM] unsigned long 
  6868 ;;  exp             1   11[COMRAM] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  4    2[COMRAM] unsigned char 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;Total ram usage:       14 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:    4
  6885 ;; This function calls:
  6886 ;;		Nothing
  6887 ;; This function is called by:
  6888 ;;		_function_relay
  6889 ;;		_function_pwm
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text28
  6894  000F24                     __ptext28:
  6895                           	opt callstack 0
  6896  000F24                     ___xxtofl:
  6897                           	opt callstack 25
  6898                           
  6899                           ;incstack = 0
  6900                           ;___xxtofl@sign stored from wreg
  6901  000F24  6E0B               	movwf	___xxtofl@sign^0,c
  6902  000F26  500B               	movf	___xxtofl@sign^0,w,c
  6903  000F28  B4D8               	btfsc	status,2,c
  6904  000F2A  EF99  F007         	goto	u2451
  6905  000F2E  EF9B  F007         	goto	u2450
  6906  000F32                     u2451:
  6907  000F32  EFBD  F007         	goto	l1312
  6908  000F36                     u2450:
  6909  000F36  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  6910  000F38  EFA2  F007         	goto	u2460
  6911  000F3C  EFA0  F007         	goto	u2461
  6912  000F40                     u2461:
  6913  000F40  EFBD  F007         	goto	l1312
  6914  000F44                     u2460:
  6915  000F44  C003  F007         	movff	___xxtofl@val,??___xxtofl
  6916  000F48  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  6917  000F4C  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  6918  000F50  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  6919  000F54  1E07               	comf	??___xxtofl^0,f,c
  6920  000F56  1E08               	comf	(??___xxtofl+1)^0,f,c
  6921  000F58  1E09               	comf	(??___xxtofl+2)^0,f,c
  6922  000F5A  1E0A               	comf	(??___xxtofl+3)^0,f,c
  6923  000F5C  2A07               	incf	??___xxtofl^0,f,c
  6924  000F5E  0E00               	movlw	0
  6925  000F60  2208               	addwfc	(??___xxtofl+1)^0,f,c
  6926  000F62  2209               	addwfc	(??___xxtofl+2)^0,f,c
  6927  000F64  220A               	addwfc	(??___xxtofl+3)^0,f,c
  6928  000F66  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  6929  000F6A  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6930  000F6E  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6931  000F72  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  6932  000F76  EFC5  F007         	goto	l3289
  6933  000F7A                     l1312:
  6934  000F7A  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  6935  000F7E  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6936  000F82  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6937  000F86  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6938  000F8A                     l3289:
  6939  000F8A  5003               	movf	___xxtofl@val^0,w,c
  6940  000F8C  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  6941  000F8E  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  6942  000F90  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  6943  000F92  A4D8               	btfss	status,2,c
  6944  000F94  EFCE  F007         	goto	u2471
  6945  000F98  EFD0  F007         	goto	u2470
  6946  000F9C                     u2471:
  6947  000F9C  EFDA  F007         	goto	l3295
  6948  000FA0                     u2470:
  6949  000FA0  0E00               	movlw	0
  6950  000FA2  6E03               	movwf	?___xxtofl^0,c
  6951  000FA4  0E00               	movlw	0
  6952  000FA6  6E04               	movwf	(?___xxtofl+1)^0,c
  6953  000FA8  0E00               	movlw	0
  6954  000FAA  6E05               	movwf	(?___xxtofl+2)^0,c
  6955  000FAC  0E00               	movlw	0
  6956  000FAE  6E06               	movwf	(?___xxtofl+3)^0,c
  6957  000FB0  EF6B  F008         	goto	l1315
  6958  000FB4                     l3295:
  6959  000FB4  0E96               	movlw	150
  6960  000FB6  6E0C               	movwf	___xxtofl@exp^0,c
  6961  000FB8  EFE4  F007         	goto	l3299
  6962  000FBC                     l3297:
  6963  000FBC  2A0C               	incf	___xxtofl@exp^0,f,c
  6964  000FBE  90D8               	bcf	status,0,c
  6965  000FC0  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6966  000FC2  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6967  000FC4  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6968  000FC6  320D               	rrcf	___xxtofl@arg^0,f,c
  6969  000FC8                     l3299:
  6970  000FC8  0E00               	movlw	0
  6971  000FCA  140D               	andwf	___xxtofl@arg^0,w,c
  6972  000FCC  6E07               	movwf	??___xxtofl^0,c
  6973  000FCE  0E00               	movlw	0
  6974  000FD0  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6975  000FD2  6E08               	movwf	(??___xxtofl+1)^0,c
  6976  000FD4  0E00               	movlw	0
  6977  000FD6  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6978  000FD8  6E09               	movwf	(??___xxtofl+2)^0,c
  6979  000FDA  0EFE               	movlw	254
  6980  000FDC  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6981  000FDE  6E0A               	movwf	(??___xxtofl+3)^0,c
  6982  000FE0  5007               	movf	??___xxtofl^0,w,c
  6983  000FE2  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6984  000FE4  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6985  000FE6  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6986  000FE8  A4D8               	btfss	status,2,c
  6987  000FEA  EFF9  F007         	goto	u2481
  6988  000FEE  EFFB  F007         	goto	u2480
  6989  000FF2                     u2481:
  6990  000FF2  EFDE  F007         	goto	l3297
  6991  000FF6                     u2480:
  6992  000FF6  EF09  F008         	goto	l1319
  6993  000FFA                     l3301:
  6994  000FFA  2A0C               	incf	___xxtofl@exp^0,f,c
  6995  000FFC  0E01               	movlw	1
  6996  000FFE  260D               	addwf	___xxtofl@arg^0,f,c
  6997  001000  0E00               	movlw	0
  6998  001002  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  6999  001004  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  7000  001006  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  7001  001008  90D8               	bcf	status,0,c
  7002  00100A  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  7003  00100C  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  7004  00100E  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  7005  001010  320D               	rrcf	___xxtofl@arg^0,f,c
  7006  001012                     l1319:
  7007  001012  0E00               	movlw	0
  7008  001014  140D               	andwf	___xxtofl@arg^0,w,c
  7009  001016  6E07               	movwf	??___xxtofl^0,c
  7010  001018  0E00               	movlw	0
  7011  00101A  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  7012  00101C  6E08               	movwf	(??___xxtofl+1)^0,c
  7013  00101E  0E00               	movlw	0
  7014  001020  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  7015  001022  6E09               	movwf	(??___xxtofl+2)^0,c
  7016  001024  0EFF               	movlw	255
  7017  001026  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  7018  001028  6E0A               	movwf	(??___xxtofl+3)^0,c
  7019  00102A  5007               	movf	??___xxtofl^0,w,c
  7020  00102C  1008               	iorwf	(??___xxtofl+1)^0,w,c
  7021  00102E  1009               	iorwf	(??___xxtofl+2)^0,w,c
  7022  001030  100A               	iorwf	(??___xxtofl+3)^0,w,c
  7023  001032  A4D8               	btfss	status,2,c
  7024  001034  EF1E  F008         	goto	u2491
  7025  001038  EF20  F008         	goto	u2490
  7026  00103C                     u2491:
  7027  00103C  EFFD  F007         	goto	l3301
  7028  001040                     u2490:
  7029  001040  EF28  F008         	goto	l3309
  7030  001044                     l3307:
  7031  001044  060C               	decf	___xxtofl@exp^0,f,c
  7032  001046  90D8               	bcf	status,0,c
  7033  001048  360D               	rlcf	___xxtofl@arg^0,f,c
  7034  00104A  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  7035  00104C  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  7036  00104E  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  7037  001050                     l3309:
  7038  001050  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  7039  001052  EF2D  F008         	goto	u2501
  7040  001056  EF2F  F008         	goto	u2500
  7041  00105A                     u2501:
  7042  00105A  EF37  F008         	goto	l1326
  7043  00105E                     u2500:
  7044  00105E  0E02               	movlw	2
  7045  001060  600C               	cpfslt	___xxtofl@exp^0,c
  7046  001062  EF35  F008         	goto	u2511
  7047  001066  EF37  F008         	goto	u2510
  7048  00106A                     u2511:
  7049  00106A  EF22  F008         	goto	l3307
  7050  00106E                     u2510:
  7051  00106E                     l1326:
  7052  00106E  B00C               	btfsc	___xxtofl@exp^0,0,c
  7053  001070  EF3C  F008         	goto	u2521
  7054  001074  EF3E  F008         	goto	u2520
  7055  001078                     u2521:
  7056  001078  EF3F  F008         	goto	l3315
  7057  00107C                     u2520:
  7058  00107C  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  7059  00107E                     l3315:
  7060  00107E  90D8               	bcf	status,0,c
  7061  001080  320C               	rrcf	___xxtofl@exp^0,f,c
  7062  001082  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  7063  001086  6A08               	clrf	(??___xxtofl+1)^0,c
  7064  001088  6A09               	clrf	(??___xxtofl+2)^0,c
  7065  00108A  6A0A               	clrf	(??___xxtofl+3)^0,c
  7066  00108C  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  7067  001090  6A09               	clrf	(??___xxtofl+2)^0,c
  7068  001092  6A08               	clrf	(??___xxtofl+1)^0,c
  7069  001094  6A07               	clrf	??___xxtofl^0,c
  7070  001096  5007               	movf	??___xxtofl^0,w,c
  7071  001098  120D               	iorwf	___xxtofl@arg^0,f,c
  7072  00109A  5008               	movf	(??___xxtofl+1)^0,w,c
  7073  00109C  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  7074  00109E  5009               	movf	(??___xxtofl+2)^0,w,c
  7075  0010A0  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  7076  0010A2  500A               	movf	(??___xxtofl+3)^0,w,c
  7077  0010A4  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  7078  0010A6  500B               	movf	___xxtofl@sign^0,w,c
  7079  0010A8  B4D8               	btfsc	status,2,c
  7080  0010AA  EF59  F008         	goto	u2531
  7081  0010AE  EF5B  F008         	goto	u2530
  7082  0010B2                     u2531:
  7083  0010B2  EF63  F008         	goto	l3325
  7084  0010B6                     u2530:
  7085  0010B6  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  7086  0010B8  EF62  F008         	goto	u2540
  7087  0010BC  EF60  F008         	goto	u2541
  7088  0010C0                     u2541:
  7089  0010C0  EF63  F008         	goto	l3325
  7090  0010C4                     u2540:
  7091  0010C4  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  7092  0010C6                     l3325:
  7093  0010C6  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  7094  0010CA  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  7095  0010CE  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  7096  0010D2  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  7097  0010D6                     l1315:
  7098  0010D6  0012               	return		;funcret
  7099  0010D8                     __end_of___xxtofl:
  7100                           	opt callstack 0
  7101                           
  7102 ;; *************** function ___fltol *****************
  7103 ;; Defined at:
  7104 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  f1              4   41[COMRAM] unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  exp1            1   50[COMRAM] unsigned char 
  7109 ;;  sign1           1   49[COMRAM] unsigned char 
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  4   41[COMRAM] long 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;Total ram usage:       10 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    4
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_function_relay
  7130 ;;		_function_pwm
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text29
  7135  00153E                     __ptext29:
  7136                           	opt callstack 0
  7137  00153E                     ___fltol:
  7138                           	opt callstack 25
  7139  00153E  342C               	rlcf	(___fltol@f1+2)^0,w,c
  7140  001540  342D               	rlcf	(___fltol@f1+3)^0,w,c
  7141  001542  6E33               	movwf	___fltol@exp1^0,c
  7142  001544  5033               	movf	___fltol@exp1^0,w,c
  7143  001546  A4D8               	btfss	status,2,c
  7144  001548  EFA8  F00A         	goto	u2381
  7145  00154C  EFAA  F00A         	goto	u2380
  7146  001550                     u2381:
  7147  001550  EFB4  F00A         	goto	l3245
  7148  001554                     u2380:
  7149  001554                     l3241:
  7150  001554  0E00               	movlw	0
  7151  001556  6E2A               	movwf	?___fltol^0,c
  7152  001558  0E00               	movlw	0
  7153  00155A  6E2B               	movwf	(?___fltol+1)^0,c
  7154  00155C  0E00               	movlw	0
  7155  00155E  6E2C               	movwf	(?___fltol+2)^0,c
  7156  001560  0E00               	movlw	0
  7157  001562  6E2D               	movwf	(?___fltol+3)^0,c
  7158  001564  EF21  F00B         	goto	l954
  7159  001568                     l3245:
  7160  001568  C02A  F02E         	movff	___fltol@f1,??___fltol
  7161  00156C  C02B  F02F         	movff	___fltol@f1+1,??___fltol+1
  7162  001570  C02C  F030         	movff	___fltol@f1+2,??___fltol+2
  7163  001574  C02D  F031         	movff	___fltol@f1+3,??___fltol+3
  7164  001578  0E20               	movlw	32
  7165  00157A  EFC4  F00A         	goto	u2390
  7166  00157E                     u2395:
  7167  00157E  90D8               	bcf	status,0,c
  7168  001580  3231               	rrcf	(??___fltol+3)^0,f,c
  7169  001582  3230               	rrcf	(??___fltol+2)^0,f,c
  7170  001584  322F               	rrcf	(??___fltol+1)^0,f,c
  7171  001586  322E               	rrcf	??___fltol^0,f,c
  7172  001588                     u2390:
  7173  001588  2EE8               	decfsz	wreg,f,c
  7174  00158A  EFBF  F00A         	goto	u2395
  7175  00158E  502E               	movf	??___fltol^0,w,c
  7176  001590  6E32               	movwf	___fltol@sign1^0,c
  7177  001592  8E2C               	bsf	(___fltol@f1+2)^0,7,c
  7178  001594  0EFF               	movlw	255
  7179  001596  162A               	andwf	___fltol@f1^0,f,c
  7180  001598  0EFF               	movlw	255
  7181  00159A  162B               	andwf	(___fltol@f1+1)^0,f,c
  7182  00159C  0EFF               	movlw	255
  7183  00159E  162C               	andwf	(___fltol@f1+2)^0,f,c
  7184  0015A0  0E00               	movlw	0
  7185  0015A2  162D               	andwf	(___fltol@f1+3)^0,f,c
  7186  0015A4  0E96               	movlw	150
  7187  0015A6  5E33               	subwf	___fltol@exp1^0,f,c
  7188  0015A8  BE33               	btfsc	___fltol@exp1^0,7,c
  7189  0015AA  EFDB  F00A         	goto	u2400
  7190  0015AE  EFD9  F00A         	goto	u2401
  7191  0015B2                     u2401:
  7192  0015B2  EFF1  F00A         	goto	l3265
  7193  0015B6                     u2400:
  7194  0015B6  5033               	movf	___fltol@exp1^0,w,c
  7195  0015B8  0A80               	xorlw	128
  7196  0015BA  0F97               	addlw	151
  7197  0015BC  B0D8               	btfsc	status,0,c
  7198  0015BE  EFE3  F00A         	goto	u2411
  7199  0015C2  EFE5  F00A         	goto	u2410
  7200  0015C6                     u2411:
  7201  0015C6  EFE7  F00A         	goto	l3261
  7202  0015CA                     u2410:
  7203  0015CA  EFAA  F00A         	goto	l3241
  7204  0015CE                     l3261:
  7205  0015CE  90D8               	bcf	status,0,c
  7206  0015D0  322D               	rrcf	(___fltol@f1+3)^0,f,c
  7207  0015D2  322C               	rrcf	(___fltol@f1+2)^0,f,c
  7208  0015D4  322B               	rrcf	(___fltol@f1+1)^0,f,c
  7209  0015D6  322A               	rrcf	___fltol@f1^0,f,c
  7210  0015D8  3E33               	incfsz	___fltol@exp1^0,f,c
  7211  0015DA  EFE7  F00A         	goto	l3261
  7212  0015DE  EF09  F00B         	goto	l3275
  7213  0015E2                     l3265:
  7214  0015E2  0E1F               	movlw	31
  7215  0015E4  6433               	cpfsgt	___fltol@exp1^0,c
  7216  0015E6  EFF7  F00A         	goto	u2421
  7217  0015EA  EFF9  F00A         	goto	u2420
  7218  0015EE                     u2421:
  7219  0015EE  EF01  F00B         	goto	l3273
  7220  0015F2                     u2420:
  7221  0015F2  EFAA  F00A         	goto	l3241
  7222  0015F6                     l3271:
  7223  0015F6  90D8               	bcf	status,0,c
  7224  0015F8  362A               	rlcf	___fltol@f1^0,f,c
  7225  0015FA  362B               	rlcf	(___fltol@f1+1)^0,f,c
  7226  0015FC  362C               	rlcf	(___fltol@f1+2)^0,f,c
  7227  0015FE  362D               	rlcf	(___fltol@f1+3)^0,f,c
  7228  001600  0633               	decf	___fltol@exp1^0,f,c
  7229  001602                     l3273:
  7230  001602  5033               	movf	___fltol@exp1^0,w,c
  7231  001604  A4D8               	btfss	status,2,c
  7232  001606  EF07  F00B         	goto	u2431
  7233  00160A  EF09  F00B         	goto	u2430
  7234  00160E                     u2431:
  7235  00160E  EFFB  F00A         	goto	l3271
  7236  001612                     u2430:
  7237  001612                     l3275:
  7238  001612  5032               	movf	___fltol@sign1^0,w,c
  7239  001614  B4D8               	btfsc	status,2,c
  7240  001616  EF0F  F00B         	goto	u2441
  7241  00161A  EF11  F00B         	goto	u2440
  7242  00161E                     u2441:
  7243  00161E  EF19  F00B         	goto	l3279
  7244  001622                     u2440:
  7245  001622  1E2D               	comf	(___fltol@f1+3)^0,f,c
  7246  001624  1E2C               	comf	(___fltol@f1+2)^0,f,c
  7247  001626  1E2B               	comf	(___fltol@f1+1)^0,f,c
  7248  001628  6C2A               	negf	___fltol@f1^0,c
  7249  00162A  0E00               	movlw	0
  7250  00162C  222B               	addwfc	(___fltol@f1+1)^0,f,c
  7251  00162E  222C               	addwfc	(___fltol@f1+2)^0,f,c
  7252  001630  222D               	addwfc	(___fltol@f1+3)^0,f,c
  7253  001632                     l3279:
  7254  001632  C02A  F02A         	movff	___fltol@f1,?___fltol
  7255  001636  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
  7256  00163A  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
  7257  00163E  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
  7258  001642                     l954:
  7259  001642  0012               	return		;funcret
  7260  001644                     __end_of___fltol:
  7261                           	opt callstack 0
  7262                           
  7263 ;; *************** function ___flmul *****************
  7264 ;; Defined at:
  7265 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  b               4   16[COMRAM] long 
  7268 ;;  a               4   20[COMRAM] long 
  7269 ;; Auto vars:     Size  Location     Type
  7270 ;;  prod            4   35[COMRAM] struct .
  7271 ;;  grs             4   29[COMRAM] unsigned long 
  7272 ;;  temp            2   39[COMRAM] struct .
  7273 ;;  bexp            1   34[COMRAM] unsigned char 
  7274 ;;  aexp            1   33[COMRAM] unsigned char 
  7275 ;;  sign            1   28[COMRAM] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  4   16[COMRAM] unsigned char 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0, prodl, prodh
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7285 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7286 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;Total ram usage:       25 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    4
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_function_relay
  7296 ;;		_function_pwm
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text30
  7301  00009C                     __ptext30:
  7302                           	opt callstack 0
  7303  00009C                     ___flmul:
  7304                           	opt callstack 25
  7305  00009C  5014               	movf	(___flmul@b+3)^0,w,c
  7306  00009E  0B80               	andlw	128
  7307  0000A0  6E1D               	movwf	___flmul@sign^0,c
  7308  0000A2  5014               	movf	(___flmul@b+3)^0,w,c
  7309  0000A4  2414               	addwf	(___flmul@b+3)^0,w,c
  7310  0000A6  6E23               	movwf	___flmul@bexp^0,c
  7311  0000A8  AE13               	btfss	(___flmul@b+2)^0,7,c
  7312  0000AA  EF59  F000         	goto	u2191
  7313  0000AE  EF5B  F000         	goto	u2190
  7314  0000B2                     u2191:
  7315  0000B2  EF5C  F000         	goto	l3115
  7316  0000B6                     u2190:
  7317  0000B6  8023               	bsf	___flmul@bexp^0,0,c
  7318  0000B8                     l3115:
  7319  0000B8  5023               	movf	___flmul@bexp^0,w,c
  7320  0000BA  B4D8               	btfsc	status,2,c
  7321  0000BC  EF62  F000         	goto	u2201
  7322  0000C0  EF64  F000         	goto	u2200
  7323  0000C4                     u2201:
  7324  0000C4  EF77  F000         	goto	l3123
  7325  0000C8                     u2200:
  7326  0000C8  2823               	incf	___flmul@bexp^0,w,c
  7327  0000CA  A4D8               	btfss	status,2,c
  7328  0000CC  EF6A  F000         	goto	u2211
  7329  0000D0  EF6C  F000         	goto	u2210
  7330  0000D4                     u2211:
  7331  0000D4  EF74  F000         	goto	l3121
  7332  0000D8                     u2210:
  7333  0000D8  0E00               	movlw	0
  7334  0000DA  6E11               	movwf	___flmul@b^0,c
  7335  0000DC  0E00               	movlw	0
  7336  0000DE  6E12               	movwf	(___flmul@b+1)^0,c
  7337  0000E0  0E00               	movlw	0
  7338  0000E2  6E13               	movwf	(___flmul@b+2)^0,c
  7339  0000E4  0E00               	movlw	0
  7340  0000E6  6E14               	movwf	(___flmul@b+3)^0,c
  7341  0000E8                     l3121:
  7342  0000E8  8E13               	bsf	(___flmul@b+2)^0,7,c
  7343  0000EA  EF7F  F000         	goto	l3125
  7344  0000EE                     l3123:
  7345  0000EE  0E00               	movlw	0
  7346  0000F0  6E11               	movwf	___flmul@b^0,c
  7347  0000F2  0E00               	movlw	0
  7348  0000F4  6E12               	movwf	(___flmul@b+1)^0,c
  7349  0000F6  0E00               	movlw	0
  7350  0000F8  6E13               	movwf	(___flmul@b+2)^0,c
  7351  0000FA  0E00               	movlw	0
  7352  0000FC  6E14               	movwf	(___flmul@b+3)^0,c
  7353  0000FE                     l3125:
  7354  0000FE  5018               	movf	(___flmul@a+3)^0,w,c
  7355  000100  0B80               	andlw	128
  7356  000102  1A1D               	xorwf	___flmul@sign^0,f,c
  7357  000104  5018               	movf	(___flmul@a+3)^0,w,c
  7358  000106  2418               	addwf	(___flmul@a+3)^0,w,c
  7359  000108  6E22               	movwf	___flmul@aexp^0,c
  7360  00010A  AE17               	btfss	(___flmul@a+2)^0,7,c
  7361  00010C  EF8A  F000         	goto	u2221
  7362  000110  EF8C  F000         	goto	u2220
  7363  000114                     u2221:
  7364  000114  EF8D  F000         	goto	l3133
  7365  000118                     u2220:
  7366  000118  8022               	bsf	___flmul@aexp^0,0,c
  7367  00011A                     l3133:
  7368  00011A  5022               	movf	___flmul@aexp^0,w,c
  7369  00011C  B4D8               	btfsc	status,2,c
  7370  00011E  EF93  F000         	goto	u2231
  7371  000122  EF95  F000         	goto	u2230
  7372  000126                     u2231:
  7373  000126  EFA8  F000         	goto	l3141
  7374  00012A                     u2230:
  7375  00012A  2822               	incf	___flmul@aexp^0,w,c
  7376  00012C  A4D8               	btfss	status,2,c
  7377  00012E  EF9B  F000         	goto	u2241
  7378  000132  EF9D  F000         	goto	u2240
  7379  000136                     u2241:
  7380  000136  EFA5  F000         	goto	l3139
  7381  00013A                     u2240:
  7382  00013A  0E00               	movlw	0
  7383  00013C  6E15               	movwf	___flmul@a^0,c
  7384  00013E  0E00               	movlw	0
  7385  000140  6E16               	movwf	(___flmul@a+1)^0,c
  7386  000142  0E00               	movlw	0
  7387  000144  6E17               	movwf	(___flmul@a+2)^0,c
  7388  000146  0E00               	movlw	0
  7389  000148  6E18               	movwf	(___flmul@a+3)^0,c
  7390  00014A                     l3139:
  7391  00014A  8E17               	bsf	(___flmul@a+2)^0,7,c
  7392  00014C  EFB0  F000         	goto	l1271
  7393  000150                     l3141:
  7394  000150  0E00               	movlw	0
  7395  000152  6E15               	movwf	___flmul@a^0,c
  7396  000154  0E00               	movlw	0
  7397  000156  6E16               	movwf	(___flmul@a+1)^0,c
  7398  000158  0E00               	movlw	0
  7399  00015A  6E17               	movwf	(___flmul@a+2)^0,c
  7400  00015C  0E00               	movlw	0
  7401  00015E  6E18               	movwf	(___flmul@a+3)^0,c
  7402  000160                     l1271:
  7403  000160  5022               	movf	___flmul@aexp^0,w,c
  7404  000162  B4D8               	btfsc	status,2,c
  7405  000164  EFB6  F000         	goto	u2251
  7406  000168  EFB8  F000         	goto	u2250
  7407  00016C                     u2251:
  7408  00016C  EFC0  F000         	goto	l3145
  7409  000170                     u2250:
  7410  000170  5023               	movf	___flmul@bexp^0,w,c
  7411  000172  A4D8               	btfss	status,2,c
  7412  000174  EFBE  F000         	goto	u2261
  7413  000178  EFC0  F000         	goto	u2260
  7414  00017C                     u2261:
  7415  00017C  EFCA  F000         	goto	l3149
  7416  000180                     u2260:
  7417  000180                     l3145:
  7418  000180  0E00               	movlw	0
  7419  000182  6E11               	movwf	?___flmul^0,c
  7420  000184  0E00               	movlw	0
  7421  000186  6E12               	movwf	(?___flmul+1)^0,c
  7422  000188  0E00               	movlw	0
  7423  00018A  6E13               	movwf	(?___flmul+2)^0,c
  7424  00018C  0E00               	movlw	0
  7425  00018E  6E14               	movwf	(?___flmul+3)^0,c
  7426  000190  EF62  F002         	goto	l1275
  7427  000194                     l3149:
  7428  000194  5017               	movf	(___flmul@a+2)^0,w,c
  7429  000196  0211               	mulwf	___flmul@b^0,c
  7430  000198  CFF3 F028          	movff	prodl,___flmul@temp
  7431  00019C  CFF4 F029          	movff	prodh,___flmul@temp+1
  7432  0001A0  5028               	movf	___flmul@temp^0,w,c
  7433  0001A2  6E1E               	movwf	___flmul@grs^0,c
  7434  0001A4  6A1F               	clrf	(___flmul@grs+1)^0,c
  7435  0001A6  6A20               	clrf	(___flmul@grs+2)^0,c
  7436  0001A8  6A21               	clrf	(___flmul@grs+3)^0,c
  7437  0001AA  5029               	movf	(___flmul@temp+1)^0,w,c
  7438  0001AC  6E24               	movwf	___flmul@prod^0,c
  7439  0001AE  6A25               	clrf	(___flmul@prod+1)^0,c
  7440  0001B0  6A26               	clrf	(___flmul@prod+2)^0,c
  7441  0001B2  6A27               	clrf	(___flmul@prod+3)^0,c
  7442  0001B4  5016               	movf	(___flmul@a+1)^0,w,c
  7443  0001B6  0212               	mulwf	(___flmul@b+1)^0,c
  7444  0001B8  CFF3 F028          	movff	prodl,___flmul@temp
  7445  0001BC  CFF4 F029          	movff	prodh,___flmul@temp+1
  7446  0001C0  5028               	movf	___flmul@temp^0,w,c
  7447  0001C2  261E               	addwf	___flmul@grs^0,f,c
  7448  0001C4  0E00               	movlw	0
  7449  0001C6  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7450  0001C8  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7451  0001CA  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7452  0001CC  5029               	movf	(___flmul@temp+1)^0,w,c
  7453  0001CE  2624               	addwf	___flmul@prod^0,f,c
  7454  0001D0  0E00               	movlw	0
  7455  0001D2  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7456  0001D4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7457  0001D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7458  0001D8  5015               	movf	___flmul@a^0,w,c
  7459  0001DA  0213               	mulwf	(___flmul@b+2)^0,c
  7460  0001DC  CFF3 F028          	movff	prodl,___flmul@temp
  7461  0001E0  CFF4 F029          	movff	prodh,___flmul@temp+1
  7462  0001E4  5028               	movf	___flmul@temp^0,w,c
  7463  0001E6  261E               	addwf	___flmul@grs^0,f,c
  7464  0001E8  0E00               	movlw	0
  7465  0001EA  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7466  0001EC  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7467  0001EE  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7468  0001F0  5029               	movf	(___flmul@temp+1)^0,w,c
  7469  0001F2  2624               	addwf	___flmul@prod^0,f,c
  7470  0001F4  0E00               	movlw	0
  7471  0001F6  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7472  0001F8  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7473  0001FA  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7474  0001FC  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7475  000200  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7476  000204  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7477  000208  6A1E               	clrf	___flmul@grs^0,c
  7478  00020A  5015               	movf	___flmul@a^0,w,c
  7479  00020C  0212               	mulwf	(___flmul@b+1)^0,c
  7480  00020E  CFF3 F028          	movff	prodl,___flmul@temp
  7481  000212  CFF4 F029          	movff	prodh,___flmul@temp+1
  7482  000216  5028               	movf	___flmul@temp^0,w,c
  7483  000218  261E               	addwf	___flmul@grs^0,f,c
  7484  00021A  5029               	movf	(___flmul@temp+1)^0,w,c
  7485  00021C  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7486  00021E  0E00               	movlw	0
  7487  000220  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7488  000222  0E00               	movlw	0
  7489  000224  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7490  000226  5016               	movf	(___flmul@a+1)^0,w,c
  7491  000228  0211               	mulwf	___flmul@b^0,c
  7492  00022A  CFF3 F028          	movff	prodl,___flmul@temp
  7493  00022E  CFF4 F029          	movff	prodh,___flmul@temp+1
  7494  000232  5028               	movf	___flmul@temp^0,w,c
  7495  000234  261E               	addwf	___flmul@grs^0,f,c
  7496  000236  5029               	movf	(___flmul@temp+1)^0,w,c
  7497  000238  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7498  00023A  0E00               	movlw	0
  7499  00023C  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7500  00023E  0E00               	movlw	0
  7501  000240  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7502  000242  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7503  000246  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7504  00024A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7505  00024E  6A1E               	clrf	___flmul@grs^0,c
  7506  000250  5015               	movf	___flmul@a^0,w,c
  7507  000252  0211               	mulwf	___flmul@b^0,c
  7508  000254  CFF3 F028          	movff	prodl,___flmul@temp
  7509  000258  CFF4 F029          	movff	prodh,___flmul@temp+1
  7510  00025C  5028               	movf	___flmul@temp^0,w,c
  7511  00025E  261E               	addwf	___flmul@grs^0,f,c
  7512  000260  5029               	movf	(___flmul@temp+1)^0,w,c
  7513  000262  221F               	addwfc	(___flmul@grs+1)^0,f,c
  7514  000264  0E00               	movlw	0
  7515  000266  2220               	addwfc	(___flmul@grs+2)^0,f,c
  7516  000268  0E00               	movlw	0
  7517  00026A  2221               	addwfc	(___flmul@grs+3)^0,f,c
  7518  00026C  5017               	movf	(___flmul@a+2)^0,w,c
  7519  00026E  0212               	mulwf	(___flmul@b+1)^0,c
  7520  000270  CFF3 F028          	movff	prodl,___flmul@temp
  7521  000274  CFF4 F029          	movff	prodh,___flmul@temp+1
  7522  000278  5028               	movf	___flmul@temp^0,w,c
  7523  00027A  2624               	addwf	___flmul@prod^0,f,c
  7524  00027C  5029               	movf	(___flmul@temp+1)^0,w,c
  7525  00027E  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7526  000280  0E00               	movlw	0
  7527  000282  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7528  000284  0E00               	movlw	0
  7529  000286  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7530  000288  5016               	movf	(___flmul@a+1)^0,w,c
  7531  00028A  0213               	mulwf	(___flmul@b+2)^0,c
  7532  00028C  CFF3 F028          	movff	prodl,___flmul@temp
  7533  000290  CFF4 F029          	movff	prodh,___flmul@temp+1
  7534  000294  5028               	movf	___flmul@temp^0,w,c
  7535  000296  2624               	addwf	___flmul@prod^0,f,c
  7536  000298  5029               	movf	(___flmul@temp+1)^0,w,c
  7537  00029A  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7538  00029C  0E00               	movlw	0
  7539  00029E  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7540  0002A0  0E00               	movlw	0
  7541  0002A2  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7542  0002A4  5017               	movf	(___flmul@a+2)^0,w,c
  7543  0002A6  0213               	mulwf	(___flmul@b+2)^0,c
  7544  0002A8  CFF3 F028          	movff	prodl,___flmul@temp
  7545  0002AC  CFF4 F029          	movff	prodh,___flmul@temp+1
  7546  0002B0  5028               	movf	___flmul@temp^0,w,c
  7547  0002B2  6E19               	movwf	??___flmul^0,c
  7548  0002B4  5029               	movf	(___flmul@temp+1)^0,w,c
  7549  0002B6  6E1A               	movwf	(??___flmul+1)^0,c
  7550  0002B8  6A1B               	clrf	(??___flmul+2)^0,c
  7551  0002BA  6A1C               	clrf	(??___flmul+3)^0,c
  7552  0002BC  C01B  F01C         	movff	??___flmul+2,??___flmul+3
  7553  0002C0  C01A  F01B         	movff	??___flmul+1,??___flmul+2
  7554  0002C4  C019  F01A         	movff	??___flmul,??___flmul+1
  7555  0002C8  6A19               	clrf	??___flmul^0,c
  7556  0002CA  5019               	movf	??___flmul^0,w,c
  7557  0002CC  2624               	addwf	___flmul@prod^0,f,c
  7558  0002CE  501A               	movf	(??___flmul+1)^0,w,c
  7559  0002D0  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7560  0002D2  501B               	movf	(??___flmul+2)^0,w,c
  7561  0002D4  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7562  0002D6  501C               	movf	(??___flmul+3)^0,w,c
  7563  0002D8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7564  0002DA  C01E  F019         	movff	___flmul@grs,??___flmul
  7565  0002DE  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
  7566  0002E2  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
  7567  0002E6  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
  7568  0002EA  0E19               	movlw	25
  7569  0002EC  EF7D  F001         	goto	u2270
  7570  0002F0                     u2275:
  7571  0002F0  90D8               	bcf	status,0,c
  7572  0002F2  321C               	rrcf	(??___flmul+3)^0,f,c
  7573  0002F4  321B               	rrcf	(??___flmul+2)^0,f,c
  7574  0002F6  321A               	rrcf	(??___flmul+1)^0,f,c
  7575  0002F8  3219               	rrcf	??___flmul^0,f,c
  7576  0002FA                     u2270:
  7577  0002FA  2EE8               	decfsz	wreg,f,c
  7578  0002FC  EF78  F001         	goto	u2275
  7579  000300  5019               	movf	??___flmul^0,w,c
  7580  000302  2624               	addwf	___flmul@prod^0,f,c
  7581  000304  501A               	movf	(??___flmul+1)^0,w,c
  7582  000306  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7583  000308  501B               	movf	(??___flmul+2)^0,w,c
  7584  00030A  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7585  00030C  501C               	movf	(??___flmul+3)^0,w,c
  7586  00030E  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7587  000310  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
  7588  000314  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
  7589  000318  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
  7590  00031C  6A1E               	clrf	___flmul@grs^0,c
  7591  00031E  5022               	movf	___flmul@aexp^0,w,c
  7592  000320  C023  F019         	movff	___flmul@bexp,??___flmul
  7593  000324  6A1A               	clrf	(??___flmul+1)^0,c
  7594  000326  2619               	addwf	??___flmul^0,f,c
  7595  000328  0E00               	movlw	0
  7596  00032A  221A               	addwfc	(??___flmul+1)^0,f,c
  7597  00032C  0E82               	movlw	130
  7598  00032E  2419               	addwf	??___flmul^0,w,c
  7599  000330  6E28               	movwf	___flmul@temp^0,c
  7600  000332  0EFF               	movlw	255
  7601  000334  201A               	addwfc	(??___flmul+1)^0,w,c
  7602  000336  6E29               	movwf	(___flmul@temp+1)^0,c
  7603  000338  EFB3  F001         	goto	l3197
  7604  00033C                     l3191:
  7605  00033C  90D8               	bcf	status,0,c
  7606  00033E  3624               	rlcf	___flmul@prod^0,f,c
  7607  000340  3625               	rlcf	(___flmul@prod+1)^0,f,c
  7608  000342  3626               	rlcf	(___flmul@prod+2)^0,f,c
  7609  000344  3627               	rlcf	(___flmul@prod+3)^0,f,c
  7610  000346  AE21               	btfss	(___flmul@grs+3)^0,7,c
  7611  000348  EFA8  F001         	goto	u2281
  7612  00034C  EFAA  F001         	goto	u2280
  7613  000350                     u2281:
  7614  000350  EFAB  F001         	goto	l1278
  7615  000354                     u2280:
  7616  000354  8024               	bsf	___flmul@prod^0,0,c
  7617  000356                     l1278:
  7618  000356  90D8               	bcf	status,0,c
  7619  000358  361E               	rlcf	___flmul@grs^0,f,c
  7620  00035A  361F               	rlcf	(___flmul@grs+1)^0,f,c
  7621  00035C  3620               	rlcf	(___flmul@grs+2)^0,f,c
  7622  00035E  3621               	rlcf	(___flmul@grs+3)^0,f,c
  7623  000360  0628               	decf	___flmul@temp^0,f,c
  7624  000362  A0D8               	btfss	status,0,c
  7625  000364  0629               	decf	(___flmul@temp+1)^0,f,c
  7626  000366                     l3197:
  7627  000366  AE26               	btfss	(___flmul@prod+2)^0,7,c
  7628  000368  EFB8  F001         	goto	u2291
  7629  00036C  EFBA  F001         	goto	u2290
  7630  000370                     u2291:
  7631  000370  EF9E  F001         	goto	l3191
  7632  000374                     u2290:
  7633  000374  0E00               	movlw	0
  7634  000376  6E22               	movwf	___flmul@aexp^0,c
  7635  000378  AE21               	btfss	(___flmul@grs+3)^0,7,c
  7636  00037A  EFC1  F001         	goto	u2301
  7637  00037E  EFC3  F001         	goto	u2300
  7638  000382                     u2301:
  7639  000382  EFE7  F001         	goto	l1280
  7640  000386                     u2300:
  7641  000386  0EFF               	movlw	255
  7642  000388  141E               	andwf	___flmul@grs^0,w,c
  7643  00038A  6E19               	movwf	??___flmul^0,c
  7644  00038C  0EFF               	movlw	255
  7645  00038E  141F               	andwf	(___flmul@grs+1)^0,w,c
  7646  000390  6E1A               	movwf	(??___flmul+1)^0,c
  7647  000392  0EFF               	movlw	255
  7648  000394  1420               	andwf	(___flmul@grs+2)^0,w,c
  7649  000396  6E1B               	movwf	(??___flmul+2)^0,c
  7650  000398  0E7F               	movlw	127
  7651  00039A  1421               	andwf	(___flmul@grs+3)^0,w,c
  7652  00039C  6E1C               	movwf	(??___flmul+3)^0,c
  7653  00039E  5019               	movf	??___flmul^0,w,c
  7654  0003A0  101A               	iorwf	(??___flmul+1)^0,w,c
  7655  0003A2  101B               	iorwf	(??___flmul+2)^0,w,c
  7656  0003A4  101C               	iorwf	(??___flmul+3)^0,w,c
  7657  0003A6  B4D8               	btfsc	status,2,c
  7658  0003A8  EFD8  F001         	goto	u2311
  7659  0003AC  EFDA  F001         	goto	u2310
  7660  0003B0                     u2311:
  7661  0003B0  EFDE  F001         	goto	l1281
  7662  0003B4                     u2310:
  7663  0003B4                     l3205:
  7664  0003B4  0E01               	movlw	1
  7665  0003B6  6E22               	movwf	___flmul@aexp^0,c
  7666  0003B8  EFE7  F001         	goto	l1280
  7667  0003BC                     l1281:
  7668  0003BC  A024               	btfss	___flmul@prod^0,0,c
  7669  0003BE  EFE3  F001         	goto	u2321
  7670  0003C2  EFE5  F001         	goto	u2320
  7671  0003C6                     u2321:
  7672  0003C6  EFE7  F001         	goto	l1280
  7673  0003CA                     u2320:
  7674  0003CA  EFDA  F001         	goto	l3205
  7675  0003CE                     l1280:
  7676  0003CE  5022               	movf	___flmul@aexp^0,w,c
  7677  0003D0  B4D8               	btfsc	status,2,c
  7678  0003D2  EFED  F001         	goto	u2331
  7679  0003D6  EFEF  F001         	goto	u2330
  7680  0003DA                     u2331:
  7681  0003DA  EF13  F002         	goto	l3217
  7682  0003DE                     u2330:
  7683  0003DE  0E01               	movlw	1
  7684  0003E0  2624               	addwf	___flmul@prod^0,f,c
  7685  0003E2  0E00               	movlw	0
  7686  0003E4  2225               	addwfc	(___flmul@prod+1)^0,f,c
  7687  0003E6  2226               	addwfc	(___flmul@prod+2)^0,f,c
  7688  0003E8  2227               	addwfc	(___flmul@prod+3)^0,f,c
  7689  0003EA  A027               	btfss	(___flmul@prod+3)^0,0,c
  7690  0003EC  EFFA  F001         	goto	u2341
  7691  0003F0  EFFC  F001         	goto	u2340
  7692  0003F4                     u2341:
  7693  0003F4  EF13  F002         	goto	l3217
  7694  0003F8                     u2340:
  7695  0003F8  C024  F019         	movff	___flmul@prod,??___flmul
  7696  0003FC  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
  7697  000400  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
  7698  000404  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
  7699  000408  341C               	rlcf	(??___flmul+3)^0,w,c
  7700  00040A  321C               	rrcf	(??___flmul+3)^0,f,c
  7701  00040C  321B               	rrcf	(??___flmul+2)^0,f,c
  7702  00040E  321A               	rrcf	(??___flmul+1)^0,f,c
  7703  000410  3219               	rrcf	??___flmul^0,f,c
  7704  000412  C019  F024         	movff	??___flmul,___flmul@prod
  7705  000416  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
  7706  00041A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
  7707  00041E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
  7708  000422  4A28               	infsnz	___flmul@temp^0,f,c
  7709  000424  2A29               	incf	(___flmul@temp+1)^0,f,c
  7710  000426                     l3217:
  7711  000426  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  7712  000428  EF1E  F002         	goto	u2351
  7713  00042C  5029               	movf	(___flmul@temp+1)^0,w,c
  7714  00042E  E108               	bnz	u2350
  7715  000430  2828               	incf	___flmul@temp^0,w,c
  7716  000432  A0D8               	btfss	status,0,c
  7717  000434  EF1E  F002         	goto	u2351
  7718  000438  EF20  F002         	goto	u2350
  7719  00043C                     u2351:
  7720  00043C  EF2A  F002         	goto	l3221
  7721  000440                     u2350:
  7722  000440  0E00               	movlw	0
  7723  000442  6E24               	movwf	___flmul@prod^0,c
  7724  000444  0E00               	movlw	0
  7725  000446  6E25               	movwf	(___flmul@prod+1)^0,c
  7726  000448  0E80               	movlw	128
  7727  00044A  6E26               	movwf	(___flmul@prod+2)^0,c
  7728  00044C  0E7F               	movlw	127
  7729  00044E  6E27               	movwf	(___flmul@prod+3)^0,c
  7730  000450  EF58  F002         	goto	l3233
  7731  000454                     l3221:
  7732  000454  BE29               	btfsc	(___flmul@temp+1)^0,7,c
  7733  000456  EF37  F002         	goto	u2360
  7734  00045A  5029               	movf	(___flmul@temp+1)^0,w,c
  7735  00045C  E106               	bnz	u2361
  7736  00045E  0428               	decf	___flmul@temp^0,w,c
  7737  000460  B0D8               	btfsc	status,0,c
  7738  000462  EF35  F002         	goto	u2361
  7739  000466  EF37  F002         	goto	u2360
  7740  00046A                     u2361:
  7741  00046A  EF43  F002         	goto	l1288
  7742  00046E                     u2360:
  7743  00046E  0E00               	movlw	0
  7744  000470  6E24               	movwf	___flmul@prod^0,c
  7745  000472  0E00               	movlw	0
  7746  000474  6E25               	movwf	(___flmul@prod+1)^0,c
  7747  000476  0E00               	movlw	0
  7748  000478  6E26               	movwf	(___flmul@prod+2)^0,c
  7749  00047A  0E00               	movlw	0
  7750  00047C  6E27               	movwf	(___flmul@prod+3)^0,c
  7751  00047E  0E00               	movlw	0
  7752  000480  6E1D               	movwf	___flmul@sign^0,c
  7753  000482  EF58  F002         	goto	l3233
  7754  000486                     l1288:
  7755  000486  C028  F023         	movff	___flmul@temp,___flmul@bexp
  7756  00048A  0EFF               	movlw	255
  7757  00048C  1624               	andwf	___flmul@prod^0,f,c
  7758  00048E  0EFF               	movlw	255
  7759  000490  1625               	andwf	(___flmul@prod+1)^0,f,c
  7760  000492  0E7F               	movlw	127
  7761  000494  1626               	andwf	(___flmul@prod+2)^0,f,c
  7762  000496  0E00               	movlw	0
  7763  000498  1627               	andwf	(___flmul@prod+3)^0,f,c
  7764  00049A  A023               	btfss	___flmul@bexp^0,0,c
  7765  00049C  EF52  F002         	goto	u2371
  7766  0004A0  EF54  F002         	goto	u2370
  7767  0004A4                     u2371:
  7768  0004A4  EF55  F002         	goto	l3231
  7769  0004A8                     u2370:
  7770  0004A8  8E26               	bsf	(___flmul@prod+2)^0,7,c
  7771  0004AA                     l3231:
  7772  0004AA  90D8               	bcf	status,0,c
  7773  0004AC  3023               	rrcf	___flmul@bexp^0,w,c
  7774  0004AE  6E27               	movwf	(___flmul@prod+3)^0,c
  7775  0004B0                     l3233:
  7776  0004B0  501D               	movf	___flmul@sign^0,w,c
  7777  0004B2  1227               	iorwf	(___flmul@prod+3)^0,f,c
  7778  0004B4  C024  F011         	movff	___flmul@prod,?___flmul
  7779  0004B8  C025  F012         	movff	___flmul@prod+1,?___flmul+1
  7780  0004BC  C026  F013         	movff	___flmul@prod+2,?___flmul+2
  7781  0004C0  C027  F014         	movff	___flmul@prod+3,?___flmul+3
  7782  0004C4                     l1275:
  7783  0004C4  0012               	return		;funcret
  7784  0004C6                     __end_of___flmul:
  7785                           	opt callstack 0
  7786                           
  7787 ;; *************** function _EPWM1_LoadDutyValue *****************
  7788 ;; Defined at:
  7789 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  dutyValue       2    2[COMRAM] unsigned short 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      void 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7805 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7807 ;;Total ram usage:        4 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    4
  7810 ;; This function calls:
  7811 ;;		Nothing
  7812 ;; This function is called by:
  7813 ;;		_function_pwm
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text31
  7818  001F46                     __ptext31:
  7819                           	opt callstack 0
  7820  001F46                     _EPWM1_LoadDutyValue:
  7821                           	opt callstack 25
  7822  001F46                     
  7823                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  7824  001F46  C003  F005         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7825  001F4A  C004  F006         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  7826  001F4E  90D8               	bcf	status,0,c
  7827  001F50  3206               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  7828  001F52  3205               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  7829  001F54  90D8               	bcf	status,0,c
  7830  001F56  3206               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  7831  001F58  3205               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  7832  001F5A  5005               	movf	??_EPWM1_LoadDutyValue^0,w,c
  7833  001F5C  6EBC               	movwf	188,c	;volatile
  7834                           
  7835                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  7836  001F5E  C003  F005         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7837  001F62  0E03               	movlw	3
  7838  001F64  1605               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  7839  001F66  3A05               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  7840  001F68  0EF0               	movlw	240
  7841  001F6A  1605               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  7842  001F6C  50BB               	movf	187,w,c	;volatile
  7843  001F6E  0BCF               	andlw	207
  7844  001F70  1005               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  7845  001F72  6EBB               	movwf	187,c	;volatile
  7846  001F74  0012               	return		;funcret
  7847  001F76                     __end_of_EPWM1_LoadDutyValue:
  7848                           	opt callstack 0
  7849                           
  7850 ;; *************** function _SYSTEM_Initialize *****************
  7851 ;; Defined at:
  7852 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7870 ;;Total ram usage:        0 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    6
  7873 ;; This function calls:
  7874 ;;		_ADC_Initialize
  7875 ;;		_EPWM1_Initialize
  7876 ;;		_EXT_INT_Initialize
  7877 ;;		_INTERRUPT_Initialize
  7878 ;;		_OSCILLATOR_Initialize
  7879 ;;		_PIN_MANAGER_Initialize
  7880 ;;		_SPI_Initialize
  7881 ;;		_TMR1_Initialize
  7882 ;;		_TMR2_Initialize
  7883 ;; This function is called by:
  7884 ;;		_main
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text32
  7889  00205C                     __ptext32:
  7890                           	opt callstack 0
  7891  00205C                     _SYSTEM_Initialize:
  7892                           	opt callstack 24
  7893  00205C                     
  7894                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7895  00205C  ECD4  F010         	call	_INTERRUPT_Initialize	;wreg free
  7896  002060                     
  7897                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
  7898  002060  ECA7  F010         	call	_SPI_Initialize	;wreg free
  7899  002064                     
  7900                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7901  002064  ECC1  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  7902  002068                     
  7903                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7904  002068  ECB0  F010         	call	_OSCILLATOR_Initialize	;wreg free
  7905  00206C                     
  7906                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7907  00206C  EC41  F010         	call	_ADC_Initialize	;wreg free
  7908  002070                     
  7909                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  7910  002070  EC53  F010         	call	_EPWM1_Initialize	;wreg free
  7911  002074                     
  7912                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7913  002074  ECB9  F010         	call	_TMR2_Initialize	;wreg free
  7914  002078                     
  7915                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  7916  002078  EC18  F010         	call	_TMR1_Initialize	;wreg free
  7917  00207C                     
  7918                           ;mcc_generated_files/mcc.c: 61:     EXT_INT_Initialize();
  7919  00207C  EC9D  F010         	call	_EXT_INT_Initialize	;wreg free
  7920  002080  0012               	return		;funcret
  7921  002082                     __end_of_SYSTEM_Initialize:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function _TMR2_Initialize *****************
  7925 ;; Defined at:
  7926 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;		None
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;		None
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;Total ram usage:        0 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:    4
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_SYSTEM_Initialize
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           	psect	text33
  7955  002172                     __ptext33:
  7956                           	opt callstack 0
  7957  002172                     _TMR2_Initialize:
  7958                           	opt callstack 25
  7959  002172                     
  7960                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF9;
  7961  002172  0EF9               	movlw	249
  7962  002174  6ECB               	movwf	203,c	;volatile
  7963                           
  7964                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7965  002176  0E00               	movlw	0
  7966  002178  6ECC               	movwf	204,c	;volatile
  7967  00217A                     
  7968                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7969  00217A  929E               	bcf	158,1,c	;volatile
  7970                           
  7971                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  7972  00217C  0E06               	movlw	6
  7973  00217E  6ECA               	movwf	202,c	;volatile
  7974  002180  0012               	return		;funcret
  7975  002182                     __end_of_TMR2_Initialize:
  7976                           	opt callstack 0
  7977                           
  7978 ;; *************** function _TMR1_Initialize *****************
  7979 ;; Defined at:
  7980 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;		None
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;Total ram usage:        2 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; Hardware stack levels required when called:    4
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_SYSTEM_Initialize
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text34
  8009  002030                     __ptext34:
  8010                           	opt callstack 0
  8011  002030                     _TMR1_Initialize:
  8012                           	opt callstack 25
  8013  002030                     
  8014                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  8015  002030  0E00               	movlw	0
  8016  002032  6EAA               	movwf	170,c	;volatile
  8017                           
  8018                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  8019  002034  0E0B               	movlw	11
  8020  002036  6ECF               	movwf	207,c	;volatile
  8021                           
  8022                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  8023  002038  0EDC               	movlw	220
  8024  00203A  6ECE               	movwf	206,c	;volatile
  8025  00203C                     
  8026                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  8027  00203C  909E               	bcf	158,0,c	;volatile
  8028  00203E                     
  8029                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8030  00203E  50CE               	movf	206,w,c	;volatile
  8031  002040  CFCF F003          	movff	4047,??_TMR1_Initialize	;volatile
  8032  002044  6A04               	clrf	(??_TMR1_Initialize+1)^0,c
  8033  002046  C003  F004         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  8034  00204A  6A03               	clrf	??_TMR1_Initialize^0,c
  8035  00204C  1003               	iorwf	??_TMR1_Initialize^0,w,c
  8036  00204E  0100               	movlb	0	; () banked
  8037  002050  6FA4               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  8038  002052  5004               	movf	(??_TMR1_Initialize+1)^0,w,c
  8039  002054  6FA5               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  8040  002056                     
  8041                           ; BSR set to: 0
  8042                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  8043  002056  0E31               	movlw	49
  8044  002058  6ECD               	movwf	205,c	;volatile
  8045  00205A                     
  8046                           ; BSR set to: 0
  8047  00205A  0012               	return		;funcret
  8048  00205C                     __end_of_TMR1_Initialize:
  8049                           	opt callstack 0
  8050                           
  8051 ;; *************** function _SPI_Initialize *****************
  8052 ;; Defined at:
  8053 ;;		line 62 in file "mcc_generated_files/spi.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;		None
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8071 ;;Total ram usage:        0 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:    4
  8074 ;; This function calls:
  8075 ;;		Nothing
  8076 ;; This function is called by:
  8077 ;;		_SYSTEM_Initialize
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text35
  8082  00214E                     __ptext35:
  8083                           	opt callstack 0
  8084  00214E                     _SPI_Initialize:
  8085                           	opt callstack 25
  8086  00214E                     
  8087                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  8088  00214E  0E40               	movlw	64
  8089  002150  6EC7               	movwf	199,c	;volatile
  8090                           
  8091                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
  8092  002152  0E00               	movlw	0
  8093  002154  6EC6               	movwf	198,c	;volatile
  8094                           
  8095                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  8096  002156  0E01               	movlw	1
  8097  002158  6EC8               	movwf	200,c	;volatile
  8098  00215A                     
  8099                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  8100  00215A  9694               	bcf	148,3,c	;volatile
  8101  00215C                     
  8102                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  8103  00215C  9AC6               	bcf	198,5,c	;volatile
  8104  00215E  0012               	return		;funcret
  8105  002160                     __end_of_SPI_Initialize:
  8106                           	opt callstack 0
  8107                           
  8108 ;; *************** function _PIN_MANAGER_Initialize *****************
  8109 ;; Defined at:
  8110 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;		None
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      void 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;Total ram usage:        0 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    5
  8131 ;; This function calls:
  8132 ;;		_IOCB4_SetInterruptHandler
  8133 ;; This function is called by:
  8134 ;;		_SYSTEM_Initialize
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text36
  8139  001D82                     __ptext36:
  8140                           	opt callstack 0
  8141  001D82                     _PIN_MANAGER_Initialize:
  8142                           	opt callstack 24
  8143  001D82                     
  8144                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
  8145  001D82  0E00               	movlw	0
  8146  001D84  6E8D               	movwf	141,c	;volatile
  8147                           
  8148                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
  8149  001D86  0E00               	movlw	0
  8150  001D88  6E8C               	movwf	140,c	;volatile
  8151                           
  8152                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  8153  001D8A  0E00               	movlw	0
  8154  001D8C  6E89               	movwf	137,c	;volatile
  8155                           
  8156                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
  8157  001D8E  0E00               	movlw	0
  8158  001D90  6E8A               	movwf	138,c	;volatile
  8159                           
  8160                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  8161  001D92  0E00               	movlw	0
  8162  001D94  6E8B               	movwf	139,c	;volatile
  8163                           
  8164                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x00;
  8165  001D96  0E00               	movlw	0
  8166  001D98  6E96               	movwf	150,c	;volatile
  8167                           
  8168                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
  8169  001D9A  0E0F               	movlw	15
  8170  001D9C  6E92               	movwf	146,c	;volatile
  8171  001D9E                     
  8172                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
  8173  001D9E  6893               	setf	147,c	;volatile
  8174                           
  8175                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
  8176  001DA0  0ED7               	movlw	215
  8177  001DA2  6E94               	movwf	148,c	;volatile
  8178                           
  8179                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xEF;
  8180  001DA4  0EEF               	movlw	239
  8181  001DA6  6E95               	movwf	149,c	;volatile
  8182                           
  8183                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x87;
  8184  001DA8  0E87               	movlw	135
  8185  001DAA  010F               	movlb	15	; () banked
  8186  001DAC  6F5D               	movwf	93,b	;volatile
  8187                           
  8188                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
  8189  001DAE  0E79               	movlw	121
  8190  001DB0  6F5C               	movwf	92,b	;volatile
  8191                           
  8192                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
  8193  001DB2  0E00               	movlw	0
  8194  001DB4  6F5B               	movwf	91,b	;volatile
  8195  001DB6                     
  8196                           ; BSR set to: 15
  8197                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
  8198  001DB6  8EF1               	bsf	241,7,c	;volatile
  8199  001DB8                     
  8200                           ; BSR set to: 15
  8201                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
  8202  001DB8  895A               	bsf	90,4,b	;volatile
  8203  001DBA                     
  8204                           ; BSR set to: 15
  8205                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
  8206  001DBA  0EB0               	movlw	low _IOCB4_DefaultInterruptHandler
  8207  001DBC  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  8208  001DBE  0E21               	movlw	high _IOCB4_DefaultInterruptHandler
  8209  001DC0  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  8210  001DC2  ECC1  F010         	call	_IOCB4_SetInterruptHandler	;wreg free
  8211  001DC6                     
  8212                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
  8213  001DC6  86F2               	bsf	242,3,c	;volatile
  8214  001DC8  0012               	return		;funcret
  8215  001DCA                     __end_of_PIN_MANAGER_Initialize:
  8216                           	opt callstack 0
  8217                           
  8218 ;; *************** function _IOCB4_SetInterruptHandler *****************
  8219 ;; Defined at:
  8220 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  8223 ;;		 -> IOCB4_InterruptCall(1), IOCB4_DefaultInterruptHandler(1), 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;Total ram usage:        2 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    4
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_PIN_MANAGER_Initialize
  8246 ;;		_main
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           	psect	text37
  8251  002182                     __ptext37:
  8252                           	opt callstack 0
  8253  002182                     _IOCB4_SetInterruptHandler:
  8254                           	opt callstack 24
  8255  002182                     
  8256                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
  8257  002182  C003  F0A8         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  8258  002186  C004  F0A9         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  8259  00218A  0012               	return		;funcret
  8260  00218C                     __end_of_IOCB4_SetInterruptHandler:
  8261                           	opt callstack 0
  8262                           
  8263 ;; *************** function _OSCILLATOR_Initialize *****************
  8264 ;; Defined at:
  8265 ;;		line 64 in file "mcc_generated_files/mcc.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    4
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_SYSTEM_Initialize
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text38
  8294  002160                     __ptext38:
  8295                           	opt callstack 0
  8296  002160                     _OSCILLATOR_Initialize:
  8297                           	opt callstack 25
  8298  002160                     
  8299                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x62;
  8300  002160  0E62               	movlw	98
  8301  002162  6ED3               	movwf	211,c	;volatile
  8302                           
  8303                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
  8304  002164  0E00               	movlw	0
  8305  002166  6ED2               	movwf	210,c	;volatile
  8306                           
  8307                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  8308  002168  0E00               	movlw	0
  8309  00216A  6E9B               	movwf	155,c	;volatile
  8310                           
  8311                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
  8312  00216C  0E00               	movlw	0
  8313  00216E  6E9A               	movwf	154,c	;volatile
  8314  002170  0012               	return		;funcret
  8315  002172                     __end_of_OSCILLATOR_Initialize:
  8316                           	opt callstack 0
  8317                           
  8318 ;; *************** function _INTERRUPT_Initialize *****************
  8319 ;; Defined at:
  8320 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		None
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    4
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_SYSTEM_Initialize
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text39
  8349  0021A8                     __ptext39:
  8350                           	opt callstack 0
  8351  0021A8                     _INTERRUPT_Initialize:
  8352                           	opt callstack 25
  8353  0021A8                     
  8354                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8355  0021A8  9ED0               	bcf	208,7,c	;volatile
  8356  0021AA  0012               	return		;funcret
  8357  0021AC                     __end_of_INTERRUPT_Initialize:
  8358                           	opt callstack 0
  8359                           
  8360 ;; *************** function _EXT_INT_Initialize *****************
  8361 ;; Defined at:
  8362 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      void 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;Total ram usage:        0 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    5
  8383 ;; This function calls:
  8384 ;;		_INT0_SetInterruptHandler
  8385 ;; This function is called by:
  8386 ;;		_SYSTEM_Initialize
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text40
  8391  00213A                     __ptext40:
  8392                           	opt callstack 0
  8393  00213A                     _EXT_INT_Initialize:
  8394                           	opt callstack 24
  8395  00213A                     
  8396                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
  8397  00213A  92F2               	bcf	242,1,c	;volatile
  8398                           
  8399                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 1);
  8400  00213C  8CF1               	bsf	241,6,c	;volatile
  8401  00213E                     
  8402                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  8403  00213E  0EB2               	movlw	low _INT0_DefaultInterruptHandler
  8404  002140  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  8405  002142  0E21               	movlw	high _INT0_DefaultInterruptHandler
  8406  002144  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  8407  002146  ECC6  F010         	call	_INT0_SetInterruptHandler	;wreg free
  8408  00214A                     
  8409                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
  8410  00214A  88F2               	bsf	242,4,c	;volatile
  8411  00214C  0012               	return		;funcret
  8412  00214E                     __end_of_EXT_INT_Initialize:
  8413                           	opt callstack 0
  8414                           
  8415 ;; *************** function _INT0_SetInterruptHandler *****************
  8416 ;; Defined at:
  8417 ;;		line 50 in file "mcc_generated_files/ext_int.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  8420 ;;		 -> INT0_InterruptCall(1), INT0_DefaultInterruptHandler(1), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      void 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8435 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8436 ;;Total ram usage:        2 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    4
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_EXT_INT_Initialize
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text41
  8448  00218C                     __ptext41:
  8449                           	opt callstack 0
  8450  00218C                     _INT0_SetInterruptHandler:
  8451                           	opt callstack 24
  8452  00218C                     
  8453                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
  8454  00218C  C003  F0A2         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8455  002190  C004  F0A3         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8456  002194  0012               	return		;funcret
  8457  002196                     __end_of_INT0_SetInterruptHandler:
  8458                           	opt callstack 0
  8459                           
  8460 ;; *************** function _EPWM1_Initialize *****************
  8461 ;; Defined at:
  8462 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;		None
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8480 ;;Total ram usage:        0 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    4
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_SYSTEM_Initialize
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text42
  8491  0020A6                     __ptext42:
  8492                           	opt callstack 0
  8493  0020A6                     _EPWM1_Initialize:
  8494                           	opt callstack 25
  8495  0020A6                     
  8496                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8497  0020A6  0E3C               	movlw	60
  8498  0020A8  6EBB               	movwf	187,c	;volatile
  8499                           
  8500                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8501  0020AA  0E00               	movlw	0
  8502  0020AC  6EBF               	movwf	191,c	;volatile
  8503                           
  8504                           ;mcc_generated_files/epwm1.c: 75:  PSTR1CON = 0x01;
  8505  0020AE  0E01               	movlw	1
  8506  0020B0  6E9C               	movwf	156,c	;volatile
  8507                           
  8508                           ;mcc_generated_files/epwm1.c: 78:  ECCP1DEL = 0x80;
  8509  0020B2  0E80               	movlw	128
  8510  0020B4  6EBE               	movwf	190,c	;volatile
  8511                           
  8512                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8513  0020B6  0E00               	movlw	0
  8514  0020B8  6EBD               	movwf	189,c	;volatile
  8515                           
  8516                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0xF9;
  8517  0020BA  0EF9               	movlw	249
  8518  0020BC  6EBC               	movwf	188,c	;volatile
  8519  0020BE                     
  8520                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRSbits.C1TSEL = 0x0;
  8521  0020BE  9099               	bcf	153,0,c	;volatile
  8522  0020C0  0012               	return		;funcret
  8523  0020C2                     __end_of_EPWM1_Initialize:
  8524                           	opt callstack 0
  8525                           
  8526 ;; *************** function _ADC_Initialize *****************
  8527 ;; Defined at:
  8528 ;;		line 62 in file "mcc_generated_files/adc.c"
  8529 ;; Parameters:    Size  Location     Type
  8530 ;;		None
  8531 ;; Auto vars:     Size  Location     Type
  8532 ;;		None
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;Total ram usage:        0 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    5
  8549 ;; This function calls:
  8550 ;;		_ADC_SetInterruptHandler
  8551 ;; This function is called by:
  8552 ;;		_SYSTEM_Initialize
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text43
  8557  002082                     __ptext43:
  8558                           	opt callstack 0
  8559  002082                     _ADC_Initialize:
  8560                           	opt callstack 24
  8561  002082                     
  8562                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  8563  002082  0E01               	movlw	1
  8564  002084  6EC2               	movwf	194,c	;volatile
  8565                           
  8566                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
  8567  002086  0E80               	movlw	128
  8568  002088  6EC1               	movwf	193,c	;volatile
  8569                           
  8570                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xAD;
  8571  00208A  0EAD               	movlw	173
  8572  00208C  6EC0               	movwf	192,c	;volatile
  8573                           
  8574                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8575  00208E  0E00               	movlw	0
  8576  002090  6EC4               	movwf	196,c	;volatile
  8577                           
  8578                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  8579  002092  0E00               	movlw	0
  8580  002094  6EC3               	movwf	195,c	;volatile
  8581  002096                     
  8582                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
  8583  002096  8C9D               	bsf	157,6,c	;volatile
  8584  002098                     
  8585                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
  8586  002098  0EB4               	movlw	low _ADC_DefaultInterruptHandler
  8587  00209A  6E03               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  8588  00209C  0E21               	movlw	high _ADC_DefaultInterruptHandler
  8589  00209E  6E04               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  8590  0020A0  ECCB  F010         	call	_ADC_SetInterruptHandler	;wreg free
  8591  0020A4  0012               	return		;funcret
  8592  0020A6                     __end_of_ADC_Initialize:
  8593                           	opt callstack 0
  8594                           
  8595 ;; *************** function _ADC_SetInterruptHandler *****************
  8596 ;; Defined at:
  8597 ;;		line 150 in file "mcc_generated_files/adc.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  8600 ;;		 -> ADC_DefaultInterruptHandler(1), 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;Total ram usage:        2 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    4
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_ADC_Initialize
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text44
  8627  002196                     __ptext44:
  8628                           	opt callstack 0
  8629  002196                     _ADC_SetInterruptHandler:
  8630                           	opt callstack 24
  8631  002196                     
  8632                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
  8633  002196  C003  F0A6         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
  8634  00219A  C004  F0A7         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
  8635  00219E  0012               	return		;funcret
  8636  0021A0                     __end_of_ADC_SetInterruptHandler:
  8637                           	opt callstack 0
  8638                           
  8639 ;; *************** function _SPI_Open *****************
  8640 ;; Defined at:
  8641 ;;		line 72 in file "mcc_generated_files/spi.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  spiUniqueCon    1    wreg     enum E353
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  spiUniqueCon    1    3[COMRAM] enum E353
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      _Bool 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;Total ram usage:        2 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    4
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_main
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text45
  8670  0019B2                     __ptext45:
  8671                           	opt callstack 0
  8672  0019B2                     _SPI_Open:
  8673                           	opt callstack 26
  8674                           
  8675                           ;incstack = 0
  8676                           ;SPI_Open@spiUniqueConfiguration stored from wreg
  8677  0019B2  6E04               	movwf	SPI_Open@spiUniqueConfiguration^0,c
  8678  0019B4                     
  8679                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
  8680  0019B4  BAC6               	btfsc	198,5,c	;volatile
  8681  0019B6  EFDF  F00C         	goto	u2581
  8682  0019BA  EFE1  F00C         	goto	u2580
  8683  0019BE                     u2581:
  8684  0019BE  EF30  F00D         	goto	l144
  8685  0019C2                     u2580:
  8686  0019C2                     
  8687                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
  8688  0019C2  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  8689  0019C4  0D04               	mullw	4
  8690  0019C6  0E01               	movlw	1
  8691  0019C8  26F3               	addwf	243,f,c
  8692  0019CA  0E00               	movlw	0
  8693  0019CC  22F4               	addwfc	244,f,c
  8694  0019CE  0ED1               	movlw	low _spi_configuration
  8695  0019D0  24F3               	addwf	243,w,c
  8696  0019D2  6EF6               	movwf	tblptrl,c
  8697  0019D4  0EFF               	movlw	high _spi_configuration
  8698  0019D6  20F4               	addwfc	244,w,c
  8699  0019D8  6EF7               	movwf	tblptrh,c
  8700  0019DA                     	if	1	;There are 3 active tblptr bytes
  8701  0019DA  6AF8               	clrf	tblptru,c
  8702  0019DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8703  0019DE  22F8               	addwfc	tblptru,f,c
  8704  0019E0                     	endif
  8705  0019E0  0008               	tblrd		*
  8706  0019E2  CFF5 FFC7          	movff	tablat,4039	;volatile
  8707                           
  8708                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
  8709  0019E6  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  8710  0019E8  0D04               	mullw	4
  8711  0019EA  0ED1               	movlw	low _spi_configuration
  8712  0019EC  24F3               	addwf	243,w,c
  8713  0019EE  6EF6               	movwf	tblptrl,c
  8714  0019F0  0EFF               	movlw	high _spi_configuration
  8715  0019F2  20F4               	addwfc	244,w,c
  8716  0019F4  6EF7               	movwf	tblptrh,c
  8717  0019F6                     	if	1	;There are 3 active tblptr bytes
  8718  0019F6  6AF8               	clrf	tblptru,c
  8719  0019F8  0E00               	movlw	low (__mediumconst shr (0+16))
  8720  0019FA  22F8               	addwfc	tblptru,f,c
  8721  0019FC                     	endif
  8722  0019FC  0008               	tblrd		*
  8723  0019FE  CFF5 FFC6          	movff	tablat,4038	;volatile
  8724  001A02                     
  8725                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
  8726  001A02  0E00               	movlw	0
  8727  001A04  6EC5               	movwf	197,c	;volatile
  8728  001A06                     
  8729                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
  8730  001A06  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  8731  001A08  0D04               	mullw	4
  8732  001A0A  0E02               	movlw	2
  8733  001A0C  26F3               	addwf	243,f,c
  8734  001A0E  0E00               	movlw	0
  8735  001A10  22F4               	addwfc	244,f,c
  8736  001A12  0ED1               	movlw	low _spi_configuration
  8737  001A14  24F3               	addwf	243,w,c
  8738  001A16  6EF6               	movwf	tblptrl,c
  8739  001A18  0EFF               	movlw	high _spi_configuration
  8740  001A1A  20F4               	addwfc	244,w,c
  8741  001A1C  6EF7               	movwf	tblptrh,c
  8742  001A1E                     	if	1	;There are 3 active tblptr bytes
  8743  001A1E  6AF8               	clrf	tblptru,c
  8744  001A20  0E00               	movlw	low (__mediumconst shr (0+16))
  8745  001A22  22F8               	addwfc	tblptru,f,c
  8746  001A24                     	endif
  8747  001A24  0008               	tblrd		*
  8748  001A26  CFF5 FFC8          	movff	tablat,4040	;volatile
  8749  001A2A                     
  8750                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
  8751  001A2A  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
  8752  001A2C  0D04               	mullw	4
  8753  001A2E  0E03               	movlw	3
  8754  001A30  26F3               	addwf	243,f,c
  8755  001A32  0E00               	movlw	0
  8756  001A34  22F4               	addwfc	244,f,c
  8757  001A36  0ED1               	movlw	low _spi_configuration
  8758  001A38  24F3               	addwf	243,w,c
  8759  001A3A  6EF6               	movwf	tblptrl,c
  8760  001A3C  0EFF               	movlw	high _spi_configuration
  8761  001A3E  20F4               	addwfc	244,w,c
  8762  001A40  6EF7               	movwf	tblptrh,c
  8763  001A42                     	if	1	;There are 3 active tblptr bytes
  8764  001A42  6AF8               	clrf	tblptru,c
  8765  001A44  0E00               	movlw	low (__mediumconst shr (0+16))
  8766  001A46  22F8               	addwfc	tblptru,f,c
  8767  001A48                     	endif
  8768  001A48  0008               	tblrd		*
  8769  001A4A  CFF5 F003          	movff	tablat,??_SPI_Open
  8770  001A4E  4603               	rlncf	??_SPI_Open^0,f,c
  8771  001A50  4603               	rlncf	??_SPI_Open^0,f,c
  8772  001A52  4603               	rlncf	??_SPI_Open^0,f,c
  8773  001A54  5094               	movf	148,w,c	;volatile
  8774  001A56  1803               	xorwf	??_SPI_Open^0,w,c
  8775  001A58  0BF7               	andlw	-9
  8776  001A5A  1803               	xorwf	??_SPI_Open^0,w,c
  8777  001A5C  6E94               	movwf	148,c	;volatile
  8778  001A5E                     
  8779                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
  8780  001A5E  8AC6               	bsf	198,5,c	;volatile
  8781  001A60                     l144:
  8782  001A60  0012               	return		;funcret
  8783  001A62                     __end_of_SPI_Open:
  8784                           	opt callstack 0
  8785                           
  8786 ;; *************** function _INTERRUPT_InterruptManager *****************
  8787 ;; Defined at:
  8788 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8789 ;; Parameters:    Size  Location     Type
  8790 ;;		None
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;		None
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      void 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;Total ram usage:        2 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    3
  8809 ;; This function calls:
  8810 ;;		_ADC_ISR
  8811 ;;		_INT0_ISR
  8812 ;;		_PIN_MANAGER_IOC
  8813 ;; This function is called by:
  8814 ;;		Interrupt level 2
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           	psect	intcode
  8819  000008                     __pintcode:
  8820                           	opt callstack 0
  8821  000008                     _INTERRUPT_InterruptManager:
  8822                           	opt callstack 19
  8823                           
  8824                           ;incstack = 0
  8825  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8826  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  8827  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8828  000012                     
  8829                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
  8830  000012  A8F2               	btfss	242,4,c	;volatile
  8831  000014  EF0E  F000         	goto	i2u278_41
  8832  000018  EF10  F000         	goto	i2u278_40
  8833  00001C                     i2u278_41:
  8834  00001C  EF1B  F000         	goto	i2l54
  8835  000020                     i2u278_40:
  8836  000020  A2F2               	btfss	242,1,c	;volatile
  8837  000022  EF15  F000         	goto	i2u279_41
  8838  000026  EF17  F000         	goto	i2u279_40
  8839  00002A                     i2u279_41:
  8840  00002A  EF1B  F000         	goto	i2l54
  8841  00002E                     i2u279_40:
  8842  00002E                     
  8843                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  8844  00002E  ECD0  F010         	call	_INT0_ISR	;wreg free
  8845                           
  8846                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  8847  000032  EF46  F000         	goto	i2l62
  8848  000036                     i2l54:
  8849  000036  A6F2               	btfss	242,3,c	;volatile
  8850  000038  EF20  F000         	goto	i2u280_41
  8851  00003C  EF22  F000         	goto	i2u280_40
  8852  000040                     i2u280_41:
  8853  000040  EF2D  F000         	goto	i2l56
  8854  000044                     i2u280_40:
  8855  000044  A0F2               	btfss	242,0,c	;volatile
  8856  000046  EF27  F000         	goto	i2u281_41
  8857  00004A  EF29  F000         	goto	i2u281_40
  8858  00004E                     i2u281_41:
  8859  00004E  EF2D  F000         	goto	i2l56
  8860  000052                     i2u281_40:
  8861  000052                     
  8862                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
  8863  000052  EC7A  F010         	call	_PIN_MANAGER_IOC	;wreg free
  8864                           
  8865                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  8866  000056  EF46  F000         	goto	i2l62
  8867  00005A                     i2l56:
  8868  00005A  ACF2               	btfss	242,6,c	;volatile
  8869  00005C  EF32  F000         	goto	i2u282_41
  8870  000060  EF34  F000         	goto	i2u282_40
  8871  000064                     i2u282_41:
  8872  000064  EF46  F000         	goto	i2l57
  8873  000068                     i2u282_40:
  8874  000068                     
  8875                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  8876  000068  AC9D               	btfss	157,6,c	;volatile
  8877  00006A  EF39  F000         	goto	i2u283_41
  8878  00006E  EF3B  F000         	goto	i2u283_40
  8879  000072                     i2u283_41:
  8880  000072  EF46  F000         	goto	i2l57
  8881  000076                     i2u283_40:
  8882  000076  AC9E               	btfss	158,6,c	;volatile
  8883  000078  EF40  F000         	goto	i2u284_41
  8884  00007C  EF42  F000         	goto	i2u284_40
  8885  000080                     i2u284_41:
  8886  000080  EF46  F000         	goto	i2l57
  8887  000084                     i2u284_40:
  8888  000084                     
  8889                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADC_ISR();
  8890  000084  ECBB  F00F         	call	_ADC_ISR	;wreg free
  8891                           
  8892                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  8893  000088  EF46  F000         	goto	i2l62
  8894  00008C                     i2l57:
  8895  00008C                     i2l62:
  8896  00008C  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8897  000090  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8898  000094  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8899  000096  0011               	retfie		f
  8900  000098                     __end_of_INTERRUPT_InterruptManager:
  8901                           	opt callstack 0
  8902                           
  8903 ;; *************** function _PIN_MANAGER_IOC *****************
  8904 ;; Defined at:
  8905 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;		None
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;Total ram usage:        0 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    2
  8926 ;; This function calls:
  8927 ;;		_IOCB4_ISR
  8928 ;; This function is called by:
  8929 ;;		_INTERRUPT_InterruptManager
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text47
  8934  0020F4                     __ptext47:
  8935                           	opt callstack 0
  8936  0020F4                     _PIN_MANAGER_IOC:
  8937                           	opt callstack 19
  8938  0020F4                     
  8939                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
  8940  0020F4  010F               	movlb	15	; () banked
  8941  0020F6  A95A               	btfss	90,4,b	;volatile
  8942  0020F8  EF80  F010         	goto	i2u255_41
  8943  0020FC  EF82  F010         	goto	i2u255_40
  8944  002100                     i2u255_41:
  8945  002100  EF84  F010         	goto	i2l3355
  8946  002104                     i2u255_40:
  8947  002104                     
  8948                           ; BSR set to: 15
  8949                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
  8950  002104  ECEA  F00F         	call	_IOCB4_ISR	;wreg free
  8951  002108                     i2l3355:
  8952                           
  8953                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
  8954  002108  90F2               	bcf	242,0,c	;volatile
  8955  00210A  0012               	return		;funcret
  8956  00210C                     __end_of_PIN_MANAGER_IOC:
  8957                           	opt callstack 0
  8958                           
  8959 ;; *************** function _IOCB4_ISR *****************
  8960 ;; Defined at:
  8961 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;		None
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;		None
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  1    wreg      void 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8979 ;;Total ram usage:        0 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    1
  8982 ;; This function calls:
  8983 ;;		Absolute function
  8984 ;;		_IOCB4_DefaultInterruptHandler
  8985 ;;		_IOCB4_InterruptCall
  8986 ;; This function is called by:
  8987 ;;		_PIN_MANAGER_IOC
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text48
  8992  001FD4                     __ptext48:
  8993                           	opt callstack 0
  8994  001FD4                     _IOCB4_ISR:
  8995                           	opt callstack 19
  8996  001FD4                     
  8997                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
  8998  001FD4  0100               	movlb	0	; () banked
  8999  001FD6  51A8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  9000  001FD8  11A9               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  9001  001FDA  B4D8               	btfsc	status,2,c
  9002  001FDC  EFF2  F00F         	goto	i2u203_41
  9003  001FE0  EFF4  F00F         	goto	i2u203_40
  9004  001FE4                     i2u203_41:
  9005  001FE4  EF00  F010         	goto	i2l113
  9006  001FE8                     i2u203_40:
  9007  001FE8                     
  9008                           ; BSR set to: 0
  9009                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
  9010  001FE8  D802               	call	i2u204_48
  9011  001FEA  EF00  F010         	goto	i2u204_49
  9012  001FEE                     i2u204_48:
  9013  001FEE  0005               	push	
  9014  001FF0  6EFA               	movwf	pclath,c
  9015  001FF2  51A8               	movf	_IOCB4_InterruptHandler& (0+255),w,b
  9016  001FF4  6EFD               	movwf	tosl,c
  9017  001FF6  51A9               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
  9018  001FF8  6EFE               	movwf	tosh,c
  9019  001FFA  6AFF               	clrf	tosu,c
  9020  001FFC  50FA               	movf	pclath,w,c
  9021  001FFE  0012               	return		;indir
  9022  002000                     i2u204_49:
  9023  002000                     i2l113:
  9024  002000  0012               	return		;funcret
  9025  002002                     __end_of_IOCB4_ISR:
  9026                           	opt callstack 0
  9027                           
  9028 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
  9029 ;; Defined at:
  9030 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;		None
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;                  1    wreg      void 
  9037 ;; Registers used:
  9038 ;;		None
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;Total ram usage:        0 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_PIN_MANAGER_Initialize
  9054 ;;		_IOCB4_ISR
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           	psect	text49
  9059  0021B0                     __ptext49:
  9060                           	opt callstack 0
  9061  0021B0                     _IOCB4_DefaultInterruptHandler:
  9062                           	opt callstack 19
  9063  0021B0  0012               	return		;funcret
  9064  0021B2                     __end_of_IOCB4_DefaultInterruptHandler:
  9065                           	opt callstack 0
  9066                           
  9067 ;; *************** function _IOCB4_InterruptCall *****************
  9068 ;; Defined at:
  9069 ;;		line 21 in file "main.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_main
  9093 ;;		_IOCB4_ISR
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           	psect	text50
  9098  001DCA                     __ptext50:
  9099                           	opt callstack 0
  9100  001DCA                     _IOCB4_InterruptCall:
  9101                           	opt callstack 19
  9102  001DCA                     
  9103                           ;main.c: 22:     if(PORTBbits.RB4==0){
  9104  001DCA  B881               	btfsc	129,4,c	;volatile
  9105  001DCC  EFEA  F00E         	goto	i2u193_41
  9106  001DD0  EFEC  F00E         	goto	i2u193_40
  9107  001DD4                     i2u193_41:
  9108  001DD4  EF07  F00F         	goto	i2l358
  9109  001DD8                     i2u193_40:
  9110  001DD8                     
  9111                           ;main.c: 23:         if (menu==3){
  9112  001DD8  0E03               	movlw	3
  9113  001DDA  0100               	movlb	0	; () banked
  9114  001DDC  19AA               	xorwf	_menu& (0+255),w,b
  9115  001DDE  11AB               	iorwf	(_menu+1)& (0+255),w,b
  9116  001DE0  A4D8               	btfss	status,2,c
  9117  001DE2  EFF5  F00E         	goto	i2u194_41
  9118  001DE6  EFF7  F00E         	goto	i2u194_40
  9119  001DEA                     i2u194_41:
  9120  001DEA  EF01  F00F         	goto	i2l2907
  9121  001DEE                     i2u194_40:
  9122  001DEE                     
  9123                           ; BSR set to: 0
  9124                           ;main.c: 24:             menu=1;
  9125  001DEE  0E00               	movlw	0
  9126  001DF0  6FAB               	movwf	(_menu+1)& (0+255),b
  9127  001DF2  0E01               	movlw	1
  9128  001DF4  6FAA               	movwf	_menu& (0+255),b
  9129                           
  9130                           ;main.c: 25:             clean=1;
  9131  001DF6  0E00               	movlw	0
  9132  001DF8  6F69               	movwf	(_clean+1)& (0+255),b
  9133  001DFA  0E01               	movlw	1
  9134  001DFC  6F68               	movwf	_clean& (0+255),b
  9135                           
  9136                           ;main.c: 26:         }
  9137  001DFE  EF07  F00F         	goto	i2l358
  9138  001E02                     i2l2907:
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;main.c: 28:             clean=1;
  9142  001E02  0E00               	movlw	0
  9143  001E04  6F69               	movwf	(_clean+1)& (0+255),b
  9144  001E06  0E01               	movlw	1
  9145  001E08  6F68               	movwf	_clean& (0+255),b
  9146  001E0A                     
  9147                           ; BSR set to: 0
  9148                           ;main.c: 29:             menu++;
  9149  001E0A  4BAA               	infsnz	_menu& (0+255),f,b
  9150  001E0C  2BAB               	incf	(_menu+1)& (0+255),f,b
  9151  001E0E                     i2l358:
  9152  001E0E  0012               	return		;funcret
  9153  001E10                     __end_of_IOCB4_InterruptCall:
  9154                           	opt callstack 0
  9155                           
  9156 ;; *************** function _INT0_ISR *****************
  9157 ;; Defined at:
  9158 ;;		line 32 in file "mcc_generated_files/ext_int.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;		None
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;		None
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  1    wreg      void 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9176 ;;Total ram usage:        0 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    2
  9179 ;; This function calls:
  9180 ;;		_INT0_CallBack
  9181 ;; This function is called by:
  9182 ;;		_INTERRUPT_InterruptManager
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text51
  9187  0021A0                     __ptext51:
  9188                           	opt callstack 0
  9189  0021A0                     _INT0_ISR:
  9190                           	opt callstack 19
  9191  0021A0                     
  9192                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
  9193  0021A0  92F2               	bcf	242,1,c	;volatile
  9194  0021A2                     
  9195                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
  9196  0021A2  EC01  F010         	call	_INT0_CallBack	;wreg free
  9197  0021A6  0012               	return		;funcret
  9198  0021A8                     __end_of_INT0_ISR:
  9199                           	opt callstack 0
  9200                           
  9201 ;; *************** function _INT0_CallBack *****************
  9202 ;; Defined at:
  9203 ;;		line 41 in file "mcc_generated_files/ext_int.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;		None
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  1    wreg      void 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;Total ram usage:        0 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    1
  9224 ;; This function calls:
  9225 ;;		Absolute function
  9226 ;;		_INT0_DefaultInterruptHandler
  9227 ;;		_INT0_InterruptCall
  9228 ;; This function is called by:
  9229 ;;		_INT0_ISR
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text52
  9234  002002                     __ptext52:
  9235                           	opt callstack 0
  9236  002002                     _INT0_CallBack:
  9237                           	opt callstack 19
  9238  002002                     
  9239                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
  9240  002002  0100               	movlb	0	; () banked
  9241  002004  51A2               	movf	_INT0_InterruptHandler& (0+255),w,b
  9242  002006  11A3               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
  9243  002008  B4D8               	btfsc	status,2,c
  9244  00200A  EF09  F010         	goto	i2u206_41
  9245  00200E  EF0B  F010         	goto	i2u206_40
  9246  002012                     i2u206_41:
  9247  002012  EF17  F010         	goto	i2l295
  9248  002016                     i2u206_40:
  9249  002016                     
  9250                           ; BSR set to: 0
  9251                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
  9252  002016  D802               	call	i2u207_48
  9253  002018  EF17  F010         	goto	i2u207_49
  9254  00201C                     i2u207_48:
  9255  00201C  0005               	push	
  9256  00201E  6EFA               	movwf	pclath,c
  9257  002020  51A2               	movf	_INT0_InterruptHandler& (0+255),w,b
  9258  002022  6EFD               	movwf	tosl,c
  9259  002024  51A3               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
  9260  002026  6EFE               	movwf	tosh,c
  9261  002028  6AFF               	clrf	tosu,c
  9262  00202A  50FA               	movf	pclath,w,c
  9263  00202C  0012               	return		;indir
  9264  00202E                     i2u207_49:
  9265  00202E                     i2l295:
  9266  00202E  0012               	return		;funcret
  9267  002030                     __end_of_INT0_CallBack:
  9268                           	opt callstack 0
  9269                           
  9270 ;; *************** function _INT0_DefaultInterruptHandler *****************
  9271 ;; Defined at:
  9272 ;;		line 54 in file "mcc_generated_files/ext_int.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;		None
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;		None
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		None
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9290 ;;Total ram usage:        0 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_EXT_INT_Initialize
  9296 ;;		_INT0_CallBack
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text53
  9301  0021B2                     __ptext53:
  9302                           	opt callstack 0
  9303  0021B2                     _INT0_DefaultInterruptHandler:
  9304                           	opt callstack 19
  9305  0021B2  0012               	return		;funcret
  9306  0021B4                     __end_of_INT0_DefaultInterruptHandler:
  9307                           	opt callstack 0
  9308                           
  9309 ;; *************** function _INT0_InterruptCall *****************
  9310 ;; Defined at:
  9311 ;;		line 33 in file "main.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9329 ;;Total ram usage:        0 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		_main
  9335 ;;		_INT0_CallBack
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text54
  9340  00210C                     __ptext54:
  9341                           	opt callstack 0
  9342  00210C                     _INT0_InterruptCall:
  9343                           	opt callstack 19
  9344  00210C                     
  9345                           ;main.c: 35:         mode = !mode;
  9346  00210C  505C               	movf	_mode^0,w,c
  9347  00210E  B4D8               	btfsc	status,2,c
  9348  002110  EF8C  F010         	goto	i2u195_41
  9349  002114  EF8F  F010         	goto	i2u195_40
  9350  002118                     i2u195_41:
  9351  002118  0E01               	movlw	1
  9352  00211A  EF90  F010         	goto	i2u196_40
  9353  00211E                     i2u195_40:
  9354  00211E  0E00               	movlw	0
  9355  002120                     i2u196_40:
  9356  002120  6E5C               	movwf	_mode^0,c
  9357  002122  0012               	return		;funcret
  9358  002124                     __end_of_INT0_InterruptCall:
  9359                           	opt callstack 0
  9360                           
  9361 ;; *************** function _ADC_ISR *****************
  9362 ;; Defined at:
  9363 ;;		line 139 in file "mcc_generated_files/adc.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;		None
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      void 
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9381 ;;Total ram usage:        0 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    1
  9384 ;; This function calls:
  9385 ;;		Absolute function
  9386 ;;		_ADC_DefaultInterruptHandler
  9387 ;; This function is called by:
  9388 ;;		_INTERRUPT_InterruptManager
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392                           	psect	text55
  9393  001F76                     __ptext55:
  9394                           	opt callstack 0
  9395  001F76                     _ADC_ISR:
  9396                           	opt callstack 20
  9397  001F76                     
  9398                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
  9399  001F76  9C9E               	bcf	158,6,c	;volatile
  9400  001F78                     
  9401                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
  9402  001F78  0100               	movlb	0	; () banked
  9403  001F7A  51A6               	movf	_ADC_InterruptHandler& (0+255),w,b
  9404  001F7C  11A7               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
  9405  001F7E  B4D8               	btfsc	status,2,c
  9406  001F80  EFC4  F00F         	goto	i2u256_41
  9407  001F84  EFC6  F00F         	goto	i2u256_40
  9408  001F88                     i2u256_41:
  9409  001F88  EFD2  F00F         	goto	i2l229
  9410  001F8C                     i2u256_40:
  9411  001F8C                     
  9412                           ; BSR set to: 0
  9413                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
  9414  001F8C  D802               	call	i2u257_48
  9415  001F8E  EFD2  F00F         	goto	i2u257_49
  9416  001F92                     i2u257_48:
  9417  001F92  0005               	push	
  9418  001F94  6EFA               	movwf	pclath,c
  9419  001F96  51A6               	movf	_ADC_InterruptHandler& (0+255),w,b
  9420  001F98  6EFD               	movwf	tosl,c
  9421  001F9A  51A7               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
  9422  001F9C  6EFE               	movwf	tosh,c
  9423  001F9E  6AFF               	clrf	tosu,c
  9424  001FA0  50FA               	movf	pclath,w,c
  9425  001FA2  0012               	return		;indir
  9426  001FA4                     i2u257_49:
  9427  001FA4                     i2l229:
  9428  001FA4  0012               	return		;funcret
  9429  001FA6                     __end_of_ADC_ISR:
  9430                           	opt callstack 0
  9431                           
  9432 ;; *************** function _ADC_DefaultInterruptHandler *****************
  9433 ;; Defined at:
  9434 ;;		line 154 in file "mcc_generated_files/adc.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		None
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;Total ram usage:        0 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_ADC_Initialize
  9458 ;;		_ADC_ISR
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text56
  9463  0021B4                     __ptext56:
  9464                           	opt callstack 0
  9465  0021B4                     _ADC_DefaultInterruptHandler:
  9466                           	opt callstack 20
  9467  0021B4  0012               	return		;funcret
  9468  0021B6                     __end_of_ADC_DefaultInterruptHandler:
  9469                           	opt callstack 0
  9470                           
  9471                           	psect	text57
  9472  000000                     __ptext57:
  9473                           	opt callstack 0
  9474  000000                     
  9475                           	psect	rparam
  9476  0000                     
  9477                           	psect	temp
  9478  00005D                     btemp:
  9479                           	opt callstack 0
  9480  00005D                     	ds	1
  9481  0000                     int$flags	set	btemp
  9482  0000                     wtemp8	set	btemp+1
  9483  0000                     ttemp5	set	btemp+1
  9484  0000                     ttemp6	set	btemp+4
  9485  0000                     ttemp7	set	btemp+8
  9486                           tosu	equ	0xFFF
  9487                           tosh	equ	0xFFE
  9488                           tosl	equ	0xFFD
  9489                           stkptr	equ	0xFFC
  9490                           pclatu	equ	0xFFB
  9491                           pclath	equ	0xFFA
  9492                           pcl	equ	0xFF9
  9493                           tblptru	equ	0xFF8
  9494                           tblptrh	equ	0xFF7
  9495                           tblptrl	equ	0xFF6
  9496                           tablat	equ	0xFF5
  9497                           prodh	equ	0xFF4
  9498                           prodl	equ	0xFF3
  9499                           indf0	equ	0xFEF
  9500                           postinc0	equ	0xFEE
  9501                           postdec0	equ	0xFED
  9502                           preinc0	equ	0xFEC
  9503                           plusw0	equ	0xFEB
  9504                           fsr0h	equ	0xFEA
  9505                           fsr0l	equ	0xFE9
  9506                           wreg	equ	0xFE8
  9507                           indf1	equ	0xFE7
  9508                           postinc1	equ	0xFE6
  9509                           postdec1	equ	0xFE5
  9510                           preinc1	equ	0xFE4
  9511                           plusw1	equ	0xFE3
  9512                           fsr1h	equ	0xFE2
  9513                           fsr1l	equ	0xFE1
  9514                           bsr	equ	0xFE0
  9515                           indf2	equ	0xFDF
  9516                           postinc2	equ	0xFDE
  9517                           postdec2	equ	0xFDD
  9518                           preinc2	equ	0xFDC
  9519                           plusw2	equ	0xFDB
  9520                           fsr2h	equ	0xFDA
  9521                           fsr2l	equ	0xFD9
  9522                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    3536
    Data        2
    BSS         351
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160     18      76
    BANK1           256      0     200
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> lcd_const_B(BANK2[100]), lcd_const_A(BANK1[100]), lcd_pot(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> lcd_const_B(BANK2[100]), lcd_const_A(BANK1[100]), lcd_pot(BANK1[100]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S2017_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> lcd_const_B(BANK2[100]), lcd_const_A(BANK1[100]), lcd_pot(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> lcd_const_B(BANK2[100]), lcd_const_A(BANK1[100]), lcd_pot(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> lcd_const_B(BANK2[100]), lcd_const_A(BANK1[100]), lcd_pot(BANK1[100]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_InterruptCall(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_InterruptCall(), INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_InterruptCall(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_fill_rect->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _function_relay->___fltol
    _function_pwm->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   95494
                                             16 BANK0      2     2      0
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                       _function_pwm
                     _function_relay
                    _lcd_draw_string
                      _lcd_fill_rect
                           _lcd_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6760
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             11 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_fill_rect                                       14     4     10   25105
                                             11 COMRAM    14     4     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25800
                                             33 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             11 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              7 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              3 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _function_relay                                       0     0      0    2773
                  _ADC_GetConversion
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _function_pwm                                         0     0      0    2871
                _EPWM1_LoadDutyValue
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             41 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1896
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2     120
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     446
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                            _ADC_ISR
                           _INT0_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (10) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (11) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                _IOCB4_InterruptCall *
 ---------------------------------------------------------------------------------
 (12) _IOCB4_InterruptCall                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (11) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                 _INT0_InterruptCall *
 ---------------------------------------------------------------------------------
 (12) _INT0_InterruptCall                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EPWM1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _function_pwm
     _EPWM1_LoadDutyValue
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _function_relay
     _ADC_GetConversion
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_fill_rect
     _lcd_draw_pixel
       _lcd_send
         _SPI_ExchangeByte
     _lcd_set_cursor
       _lcd_set_cursor_x
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor_y
         _lcd_send
           _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _INT0_InterruptCall *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _IOCB4_InterruptCall *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      64      10       39.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C8       8       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      4C       5       47.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D4       6        0.0%
DATA                 0      0     1D4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 02 10:55:01 2020

                           _SPI_Initialize 214E                                _SSPSTATbits 000FC7  
                                       l32 2170                                         l29 2080  
                                       l49 21AA         __size_of_IOCB4_SetInterruptHandler 000A  
                              __CFG_BORV$3 000000                      fp__INT0_InterruptCall 0000  
              __end_of_IOCB4_InterruptCall 1E10                 ?_IOCB4_SetInterruptHandler 0003  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l105 1DC8                                        l116 218A  
                                      l140 215E                                        l222 1F0E  
                                      l150 20C8                                        l207 20A4  
                                      l144 1A60                                        l232 219E  
                                      l304 214C                                        l152 20D6  
                                      l153 20DA                                        l219 1EEE  
                                      l254 205A                                        l431 20F2  
                                      l441 1D80                                        l521 13D8  
                                      l370 1B06                                        l530 1742  
                                      l419 1FD2                                        l452 1B88  
                                      l428 084A                                        l612 1976  
                                      l620 08EC                                        l373 1BEE  
                                      l365 1AE6                                        l445 1D38  
                                      l437 1E94                                        l614 19B0  
                                      l622 08F4                                        l543 2180  
                                      l368 1B04                                        l448 2138  
                                      l640 0B28                                        l609 1934  
                                      l298 2194                                        l653 1C4A  
                                      l582 1F74                                        l494 1806  
                                      l654 1C52                                        l487 1824  
                                      l647 0F22                                        l579 20C0  
                                      l771 125E                                        l784 153C  
                                      l954 1642                               __CFG_CPB$OFF 000000  
                                      _PR2 000FCB                               __CFG_CPD$OFF 000000  
               ??_INT0_SetInterruptHandler 0005                            _timer1ReloadVal 00A4  
                                      _abs 1E96                                        _pad 18F0  
                          __end_of_ADC_ISR 1FA6                                        _pwm 006A  
          __end_of_ADC_SetInterruptHandler 21A0                            _TMR2_Initialize 2172  
                                      tosl 000FFD                                        wreg 000FE8  
                            _INT0_CallBack 2002                               ___flmul@aexp 0022  
                             ___flmul@bexp 0023               ?_ADC_DefaultInterruptHandler 0001  
                             ___flmul@sign 001D                               ___flmul@temp 0028  
                             ___flmul@prod 0024                            ?_lcd_set_cursor 0008  
                             ___fltol@exp1 0033                         __size_of_IOCB4_ISR 002E  
                                     ?_abs 0015                                       l1312 0F7A  
                                     l3001 20BE                                       l3011 203E  
                                     l3003 2172                                       l1315 10D6  
                                     l1332 1ECC                                       l3013 2056  
                                     l3005 217A                                       l3101 1BF0  
                                     l1326 106E                                       l3015 213A  
                                     l3007 2030                                       l1271 0160  
                                     l3111 00A8                                       l1319 1012  
                                     l3031 1EFC                                       l1335 1ED4  
                                     l3103 1BF8                                       l1280 03CE  
                                     l3017 213E                                       l3009 203C  
                                     l1281 03BC                                       l3201 0378  
                                     l3121 00E8                                       l3113 00B6  
                                     l3025 1ED8                                       l3041 1FA8  
                                     l3105 1C06                                       l1362 1CA4  
                                     l3019 214A                                       l3211 03EA  
                                     l3203 0386                                       l1275 04C4  
                                     l3131 0118                                       l3123 00EE  
                                     l3115 00B8                                       l3027 1EEA  
                                     l3051 1B18                                       l3043 1FB0  
                                     l1347 18EE                                       l1355 1E52  
                                     l1371 1F44                                       l3107 1C2C  
                                     l3221 0454                                       l3213 03F8  
                                     l3205 03B4                                       l3141 0150  
                                     l3133 011A                                       l3125 00FE  
                                     l3117 00C8                                       l3109 009C  
                                     l3301 0FFA                                       l3029 1EEC  
                                     l3061 1B6E                                       l3045 1FBE  
                                     l1365 21AE                                       l1278 0356  
                                     l3039 1F46                                       l3231 04AA  
                                     l3223 046E                                       l3215 0422  
                                     l3151 01A0                                       l3143 0170  
                                     l3135 012A                                       l3127 0104  
                                     l3119 00D8                                       l3311 105E  
                                     l3303 0FFC                                       l3071 12AC  
                                     l3055 1B40                                       l3047 1FC0  
                                     l1288 0486                                       l3225 048A  
                                     l3233 04B0                                       l3209 03DE  
                                     l3217 0426                                       l3161 01F0  
                                     l3153 01AA                                       l3145 0180  
                                     l3137 013A                                       l3129 010A  
                                     l3241 1554                                       l3321 10B6  
                                     l3313 107C                                       l3305 1008  
                                     l3401 1BE2                                       l3057 1B4C  
                                     l3049 1B08                                       l3331 2060  
                                     l3235 04B4                                       l3227 049A  
                                     l3219 0440                                       l3171 0232  
                                     l3163 01FC                                       l3155 01C0  
                                     l3139 014A                                       l3251 15A4  
                                     l3323 10C4                                       l3315 107E  
                                     l3307 1044                                       l3091 137C  
                                     l3083 12B4                                       l3067 1260  
                                     l3059 1B66                                       l3411 04EA  
                                     l3403 04C6                                       l3341 2074  
                                     l3333 2064                                       l3229 04A8  
                                     l3181 0294                                       l3173 0242  
                                     l3165 020A                                       l3157 01CC  
                                     l3149 0194                                       l3261 15CE  
                                     l3253 15A8                                       l3245 1568  
                                     l3325 10C6                                       l3317 1082  
                                     l3309 1050                                       l2701 20F0  
                                     l3093 138C                                       l3085 135E  
                                     l3077 12B0                                       l3069 1268  
                                     l3501 06AC                                       l3421 051C  
                                     l3413 04F4                                       l3405 04D0  
                                     l3343 2078                                       l3335 2068  
                                     l3191 033C                                       l3183 02B0  
                                     l3175 025C                                       l3167 0216  
                                     l3159 01E4                                       l3271 15F6  
                                     l3263 15D8                                       l3255 15B6  
                                     l3247 1592                                       l3239 153E  
                                     l3319 10A6                                       l3095 138E  
                                     l3087 136E                                       l3511 06DE  
                                     l3503 06B6                                       l3431 054E  
                                     l3423 0526                                       l3415 04FE  
                                     l3407 04D6                                       l2711 192C  
                                     l2703 18F0                                       l3345 207C  
                                     l3337 206C                                       l3329 205C  
                                     l3193 0346                                       l3185 02DA  
                                     l3177 026C                                       l3169 0226  
                                     l3273 1602                                       l3265 15E2  
                                     l3249 1594                                       l3097 139E  
                                     l3089 137A                                       l3601 17D8  
                                     l3521 0710                                       l3513 06E8  
                                     l3505 06C0                                       l3441 0580  
                                     l3433 0558                                       l3425 0530  
                                     l3417 0508                                       l3409 04E0  
                                     l2801 14EC                                       l2721 1998  
                                     l2713 1940                                       l2705 18FE  
                                     l3371 1A2A                                       l3363 19B4  
                                     l3339 2070                                       l3195 0354  
                                     l3187 0310                                       l3179 0288  
                                     l3275 1612                                       l3291 0FA0  
                                     l3283 0F26                                       l2811 1D50  
                                     l3099 13A0                                       l3603 17E4  
                                     l3531 0742                                       l3523 071A  
                                     l3515 06F2                                       l3507 06CA  
                                     l3451 05B2                                       l3443 058A  
                                     l3435 0562                                       l3427 053A  
                                     l3419 0512                                       l2731 10DC  
                                     l2803 14FC                                       l2715 1954  
                                     l2707 1912                                       l3611 1C6E  
                                     l3373 1A5E                                       l3365 19C2  
                                     l3197 0366                                       l3189 031E  
                                     l3277 1622                                       l3285 0F36  
                                     l2821 1CF2                                       l3621 1648  
                                     l3605 180E                                       l3541 0774  
                                     l3533 074C                                       l3525 0724  
                                     l3517 06FC                                       l3509 06D4  
                                     l3461 05E4                                       l3453 05BC  
                                     l3445 0594                                       l3437 056C  
                                     l3429 0544                                       l2741 113C  
                                     l2733 10EA                                       l2805 151C  
                                     l2725 1E96                                       l2661 1826  
                                     l2717 1958                                       l2709 1920  
                                     l3613 1C76                                       l3367 1A02  
                                     l3199 0374                                       l3279 1632  
                                     l3295 0FB4                                       l3287 0F44  
                                     l3391 1A62                                       l2815 1D56  
                                     l2823 1D08                                       l3631 16FA  
                                     l3623 165C                                       l3551 07A6  
                                     l3543 077E                                       l3535 0756  
                                     l3527 072E                                       l3519 0706  
                                     l3471 0616                                       l3463 05EE  
                                     l3455 05C6                                       l3447 059E  
                                     l3439 0576                                       l2751 1186  
                                     l2743 1140                                       l2735 110A  
                                     l2727 1EB0                                       l2671 18A8  
                                     l2663 1838                                       l2719 1984  
                                     l3615 1C92                                       l3607 1C54  
                                     l3369 1A06                                       l3297 0FBC  
                                     l3289 0F8A                                       l3393 1A70  
                                     l2817 1D7E                                       l2809 1D3A  
                                     l2921 1E92                                       l2913 1E54  
                                     l3633 1726                                       l3625 1696  
                                     l3561 07D8                                       l3553 07B0  
                                     l3545 0788                                       l3537 0760  
                                     l3529 0738                                       l3481 0648  
                                     l3473 0620                                       l3465 05F8  
                                     l3457 05D0                                       l3449 05A8  
                                     l2761 11F6                                       l2753 1194  
                                     l2745 114C                                       l2737 110E  
                                     l2729 10D8                                       l2665 184A  
                                     l2681 1E2E                                       l2841 08C4  
                                     l2833 084C                                       l3609 1C66  
                                     l3299 0FC8                                       l3395 1AC8  
                                     l2675 20C4                                       l2827 1D0E  
                                     l2915 1E70                                       l3627 169A  
                                     l3635 172A                                       l3619 1644  
                                     l3571 080A                                       l3563 07E2  
                                     l3555 07BA                                       l3547 0792  
                                     l3539 076A                                       l3491 067A  
                                     l3483 0652                                       l3475 062A  
                                     l3467 0602                                       l3459 05DA  
                                     l2763 1208                                       l2755 11A6  
                                     l2747 116A                                       l2739 111C  
                                     l2667 1854                                       l2683 1E32  
                                     l2691 1F38                                       l2851 091C  
                                     l2843 08C6                                       l2835 086C  
                                     l2931 0D8C                                       l3397 1AE8  
                                     l2925 2124                                       l2829 1D36  
                                     l2917 1E8C                                       l3629 16CE  
                                     l3581 083E                                       l3573 0814  
                                     l3565 07EC                                       l3557 07C4  
                                     l3549 079C                                       l3493 0684  
                                     l3485 065C                                       l3477 0634  
                                     l3469 060C                                       l2757 11D4  
                                     l2749 1172                                       l2765 120E  
                                     l2781 1410                                       l2773 13DA  
                                     l2669 1872                                       l2677 1E10  
                                     l2685 1F10                                       l2861 09BA  
                                     l2853 0922                                       l2845 08E0  
                                     l2837 0894                                       l2941 0DFC  
                                     l2933 0D9A                                       l3901 0BA6  
                                     ?_pad 0013                                       l3399 1B8A  
                                     l2695 20DE                                       l3591 1792  
                                     l3583 1744                                       l3575 081E  
                                     l3567 07F6                                       l3559 07CE  
                                     l3495 068E                                       l3487 0666  
                                     l3479 063E                                       l2767 121E  
                                     l2759 11F4                                       l2791 1478  
                                     l2783 141E                                       l2775 13DE  
                                     l2679 1E1C                                       l2687 1F1C  
                                     l2871 0A62                                       l2863 09C0  
                                     l2855 092A                                       l2847 08FC  
                                     l2839 08B4                                       l2951 0EB0  
                                     l2943 0E44                                       l2935 0DAC  
                                     l3911 0C06                                       l3903 0BC2  
                                     l2697 20E8                                       l3593 179A  
                                     l3585 174C                                       l3577 082E  
                                     l3569 0800                                       l3497 0698  
                                     l3489 0670                                       l2769 123E  
                                     l2793 1486                                       l2785 143E  
                                     l2777 13EC                                       l2689 1F20  
                                     l2881 0AC4                                       l2873 0A7C  
                                     l2865 09C6                                       l2857 0932  
                                     l2849 090E                                       l2953 0EC4  
                                     l2937 0DB0                                       l2929 0D66  
                                     l3921 0C84                                       l3913 0C32  
                                     l3905 0BEC                                       l2971 21A8  
                                     l2699 20EA                                       l3595 17B0  
                                     l3587 1762                                       l3579 0838  
                                     l3499 06A2                                       l2795 14B4  
                                     l2787 145C                                       l2779 140C  
                                     l2883 0ACA                                       l2891 0B00  
                                     l2875 0A96                                       l2859 0938  
                                     l2867 0A2A                                       l2947 0E7C  
                                     l2939 0DD6                                       l2963 0EEA  
                                     l3931 0CEE                                       l3923 0C8A  
                                     l3915 0C3C                                       l3907 0BEE  
                                     l2981 1D9E                                       l2973 214E  
                                     l3597 17BC                                       l3589 177C  
                                     l2797 14D4                                       l2789 1464  
                                     l2885 0ADC                                       l2869 0A44  
                                     l2877 0AA4                                       l2965 0F10  
                                     l2949 0EA2                                       l2957 0ED0  
                                     l3933 0D18                                       l3925 0C9C  
                                     l3917 0C58                                       l3909 0BF4  
                                     l2991 2160                                       l2895 2182  
                                     l2983 1DB6                                       l2975 215A  
                                     l3599 17D0                                       l2799 14E6  
                                     l2887 0AE8                                       l2879 0AB6  
                                     l2959 0EDE                                       l3935 0D1A  
                                     l3927 0CC8                                       l3919 0C82  
                                     l3943 0D2C                                       l2897 2196  
                                     l2993 2082                                       l2985 1DB8  
                                     l2977 215C                                       l2889 0AF0  
                                     l3937 0D1C                                       l3929 0CD2  
                                     l3881 0B2E                                       l2995 2096  
                                     l2899 218C                                       l2987 1DBA  
                                     l2979 1D82                                       l3939 0D1E  
                                     l3891 0B52                                       l3883 0B34  
                                     l2997 2098                                       l2989 1DC6  
                                     l3893 0B56                                       l3885 0B38  
                                     l2999 20A6                                       l3895 0B5E  
                                     l3887 0B44                                       l3879 0B2A  
                                     l3969 0D44                                       l3897 0B70  
                                     l3889 0B50                                       l3899 0B9C  
                                     STR_1 FFF5                                       STR_2 FFD5  
                                     STR_3 FFE5                                       u2000 0DD6  
                                     u2001 0DD2                                       u2010 0DFC  
                                     u2011 0DF8                                       u2100 1B66  
                                     u2020 0EA2                                       u2101 1B62  
                                     u2021 0E9E                                       u2110 1B88  
                                     u2111 1B84                                       u2200 00C8  
                                     u2201 00C4                                       u2210 00D8  
                                     u2050 1EFC                                       u2211 00D4  
                                     u2051 1EF8                                       u2300 0386  
                                     u2220 0118                                       u2140 135E  
                                     u1500 1838                                       u2301 0382  
                                     u2221 0114                                       u2141 135A  
                                     u1501 1834                                       _LATA 000F89  
                                     u2310 03B4                                       u2230 012A  
                                     u2150 138C                                       u2134 133E  
                                     u1510 184A                                       _LATB 000F8A  
                                     u2311 03B0                                       u2231 0126  
                                     u2151 1388                                       u2135 1338  
                                     u1511 1846                                       _LATC 000F8B  
                                     u2320 03CA                                       u2240 013A  
                                     u2400 15B6                                       u2160 139E  
                                     u2080 1FD2                                       u1520 1872  
                                     u1600 1976                                       _LATD 000F8C  
                                     u2321 03C6                                       u2241 0136  
                                     u2401 15B2                                       u2161 139A  
                                     u2081 1FCE                                       u1521 186E  
                                     u1601 1972                                       _LATE 000F8D  
                                     u2330 03DE                                       u2250 0170  
                                     u2410 15CA                                       u2170 13D8  
                                     u2090 1B3C                                       u1530 18A8  
                                     u1610 1984                                       u2331 03DA  
                                     u2251 016C                                       u2411 15C6  
                                     u2171 13D4                                       u2091 1B38  
                                     u1531 18A4                                       u1611 1980  
                                     u2340 03F8                                       u2260 0180  
                                     u2420 15F2                                       u2500 105E  
                                     u1540 20D6                                       u1700 13EC  
                                     u1620 1EB0                                       u2180 1C4A  
                                     u2341 03F4                                       u2261 017C  
                                     u2421 15EE                                       u2501 105A  
                                     u1541 20D2                                       u1701 13E8  
                                     u1621 1EAC                                       u2181 1C46  
                                     u2350 0440                                       u2270 02FA  
                                     u2190 00B6                                       u2430 1612  
                                     u2510 106E                                       u1630 10EA  
                                     u1710 141E                                       u1550 1E52  
                                     u2351 043C                                       u2191 00B2  
                                     u2431 160E                                       u2511 106A  
                                     u1631 10E6                                       u1711 141A  
                                     u1551 1E4E                                       u2360 046E  
                                     u2280 0354                                       u2440 1622  
                                     u2520 107C                                       u2600 1AE6  
                                     u1640 111C                                       u1720 145C  
                                     u1560 1F38                                       u1800 0894  
                                     u2361 046A                                       u2281 0350  
                                     u2441 161E                                       u2521 1078  
                                     u2601 1AE2                                       u1641 1118  
                                     u1721 1458                                       u1561 1F34  
                                     u1801 0890                                       u2370 04A8  
                                     u2290 0374                                       u2530 10B6  
                                     u2450 0F36                                       u2610 1B04  
                                     u1730 1486                                       u1810 08C4  
                                     u2371 04A4                                       u2291 0370  
                                     u2275 02F0                                       u2531 10B2  
                                     u2451 0F32                                       u2611 1B00  
                                     u1651 1146                                       u1731 1482  
                                     u1811 08C0                                       u2380 1554  
                                     u2540 10C4                                       u2460 0F44  
                                     u2620 1762                                       u1660 116A  
                                     u1740 14B4                                       u1580 18FE  
                                     u1900 0AB6                                       u1820 08E0  
                                     u2381 1550                                       u2541 10C0  
                                     u2461 0F40                                       u2621 175E  
                                     u1661 1166                                       u1741 14B0  
                                     u1581 18FA                                       u1901 0AB2  
                                     u1821 08DC                                       u2390 1588  
                                     u2470 0FA0                                       u2630 1778  
                                     u1670 1194                                       u1750 14FC  
                                     u1590 1920                                       u1910 0AC4  
                                     u1830 090E                                       u2471 0F9C  
                                     u1575 20E6                                       u2631 1774  
                                     u1671 1190                                       u1751 14F8  
                                     u1591 191C                                       u1911 0AC0  
                                     u1831 090A                                       u2480 0FF6  
                                     u1576 20E8                                       u1760 1D50  
                                     u2640 1792                                       u1680 11D4  
                                     u1920 0ADC                                       u1840 091C  
                                     u2481 0FF2                                       u1761 1D4C  
                                     u2641 178E                                       u1681 11D0  
                                     u1921 0AD8                                       u1841 0918  
                                     u2490 1040                                       u1770 1D08  
                                     u2650 17B0                                       u1690 121E  
                                     u1850 0A44                                       u2395 157E  
                                     u2491 103C                                       u1771 1D04  
                                     u2651 17AC                                       u1691 121A  
                                     u1851 0A40                                       u2580 19C2  
                                     u2660 1806                                       u1860 0A62  
                                     u1780 087C                                       u2581 19BE  
                                     u2661 1802                                       u1861 0A5E  
                                     u1781 0876                                       u2670 1824  
                                     u1870 0A7C                                       u1790 087E  
                                     u2671 1820                                       u1871 0A78  
                                     u2680 16CE                                       u1880 0A96  
                                     u2681 16CA                                       u1881 0A92  
                                     u1970 1E70                                       u2690 1742  
                                     u1890 0AA4                                       u1971 1E6C  
                                     u2691 173E                                       u1891 0AA0  
                                     u1980 1E8C                                       u2940 0B70  
                                     u1981 1E88                                       u2941 0B6C  
                                     u1990 0D8C                                       u2950 0C06  
                                     u1991 0D88                                       u2951 0C02  
                                     u2960 0C9C                                       u2961 0C98  
                                     u2977 1FB6                                       i2l62 008C  
                                     i2l54 0036                                       i2l56 005A  
                                     i2l57 008C                                       _TMR2 000FCC  
                                     _WPUB 000F5B                                       abs@a 0015  
                                     _dbuf 006E                                       _main 0B2A  
                                     _dtoa 084C                                       _font F205  
                                     _menu 00AA                                       _mode 005C  
                                     _prec 0064                                       _nout 0060  
                                     pad@i 001A                                       pad@p 0017  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001C                                       fsr2l 000FD9  
                                     btemp 005D                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0098  
                            __CFG_IESO$OFF 000000                     __end_of_SPI_Initialize 2160  
                    ??_EPWM1_LoadDutyValue 0005                              lcd_fill@width 0010  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_abs 0017                                      ??_pad 0019  
                         __end_of_INT0_ISR 21A8             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 2172                              ___fltol@sign1 0032  
                          __end_of___aodiv 1260                                      ?_main 0001  
                                    ?_dtoa 001E                            __end_of___aomod 153E  
                          __end_of___flmul 04C6                            __end_of___fltol 1644  
        __end_of_IOCB4_SetInterruptHandler 218C                                      _T1CON 000FCD  
                                    _T2CON 000FCA                                      i2l113 2000  
                                    i2l301 21B2                                      i2l109 210A  
                                    i2l119 21B0                                      i2l235 21B4  
                                    i2l229 1FA4                                      i2l361 2122  
                                    i2l291 21A6                                      i2l358 1E0E  
                                    i2l295 202E                               vfpfcnvrt@fmt 0044  
                                    _TMR1H 000FCF                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0001                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                          ??_lcd_fill_rect 0016                              __CFG_WRT0$OFF 000000  
                          ??_lcd_draw_char 0016                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 1FD4                             __CFG_EBTRB$OFF 000000  
                                    _clean 0068                    __end_of_PIN_MANAGER_IOC 210C  
                                    _flags 005A                                      _fputc 1826  
                                    _fputs 1E10                                      pad@fp 0013  
                                    _width 0062                                      _putch 21AE  
                                    dtoa@d 0020                                      dtoa@i 0040  
                                    dtoa@n 0038                                      dtoa@p 0032  
                                    dtoa@s 0036                                      dtoa@w 0034  
                         __end_of_SPI_Open 1A62                    __end_of_TMR1_Initialize 205C  
                                    pclath 000FFA                                      tablat 000FF5  
                                    ttemp5 005E                                      ttemp6 0061  
                                    ttemp7 0065                                      status 000FD8  
                                    wtemp8 005E                            __end_of_sprintf 1CA6  
                           lcd_fill@height 000E                           ??_function_relay 0034  
                          ?_SPI_Initialize 0001            ??_IOCB4_DefaultInterruptHandler 0001  
                          __initialization 1CA6                               __end_of_main 0D66  
                             __end_of_dtoa 0B2A                               __end_of_font FFD1  
                        __end_of_IOCB4_ISR 2002                    __end_of_TMR2_Initialize 2182  
                                ??_ADC_ISR 0001                ?_INTERRUPT_InterruptManager 0001  
                                   ??_main 00A0                                     ??_dtoa 0028  
                        ?_lcd_set_cursor_x 0006                          ?_lcd_set_cursor_y 0006  
                            lcd_send@value 0004                              __activetblptr 000003  
                       ??_lcd_set_cursor_x 0008                         ??_lcd_set_cursor_y 0008  
                           __CFG_RETEN$OFF 000000                         _INT0_InterruptCall 210C  
                           lcd_draw_char@i 0021                             lcd_draw_char@j 001F  
                           lcd_draw_char@k 0020                   __end_of_SPI_ExchangeByte 20DC  
                           lcd_draw_char@x 000C                             lcd_draw_char@y 000E  
                                   _ADCON0 000FC2                                     _ADCON1 000FC1  
                                   _ADCON2 000FC0                                     ?_fputc 0003  
                                   ?_fputs 000C                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _CCPR1H 000FBD  
                                   _CCPR1L 000FBC                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                      ?_INT0_InterruptCall 0001                                     i2l3021 1FD4  
                                   i2l3023 1FE8                                     i2l3035 2002  
                                   i2l3037 2016                             __CFG_WDTEN$OFF 000000  
                                   i2l3351 20F4                                     i2l3361 1F8C  
                                   i2l3353 2104                                     i2l3347 21A0  
                                   i2l3355 2108                                     i2l3357 1F76  
                                   i2l3349 21A2                                     i2l2901 1DCA  
                                   i2l3359 1F78                                     i2l2911 210C  
                                   i2l2903 1DD8                                     i2l2905 1DEE  
                                   i2l2907 1E02                                     i2l2909 1E0A  
                                   i2l3681 0044                                     i2l3683 0052  
                                   i2l3675 0012                                     i2l3685 0068  
                                   i2l3677 0020                                     i2l3687 0076  
                                   i2l3679 002E                                     i2l3689 0084  
                                   _OSCCON 000FD3                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                           __end_of___xxtofl 10D8  
                          _global_bg_color 0066                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0008                           __end_of_lcd_fill 1B8A  
                             vfprintf@cfmt 0058                           __end_of_lcd_init 084C  
     __size_of_ADC_DefaultInterruptHandler 0002           __size_of_ADC_SetInterruptHandler 000A  
                         __end_of_lcd_send 20F4                                  ??___aodiv 0013  
                                ??___aomod 0013                             __CFG_STVREN$ON 000000  
                                ??___flmul 0019                                  ??___fltol 002E  
                     ??_INT0_InterruptCall 0001                                     clear_0 1CC4  
                                   clear_1 1CD0                                     clear_2 1CDC  
                                   pad@buf 0015                              ?_function_pwm 0001  
                          ??_INT0_CallBack 0001                                     dtoa@fp 001E  
                                   _strlen 1F10                                  ??_msDelay 0003  
                     lcd_fill_rect@y_start 0018                                     fputc@c 0003  
                                   fputs@c 0010                                     fputs@i 0011  
                                   fputs@s 000C                               __mediumconst F204  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                   ADC_GetConversion@channel 0007  
                                   putch@c 0001                           __end_of_vfprintf 1C54  
 INT0_SetInterruptHandler@InterruptHandler 0003    ADC_SetInterruptHandler@InterruptHandler 0003  
IOCB4_SetInterruptHandler@InterruptHandler 0003                           ?_PIN_MANAGER_IOC 0001  
                                ??_sprintf 005A              __size_of_INTERRUPT_Initialize 0004  
                         ?_TMR1_Initialize 0001                               ___xxtofl@arg 000D  
                             ___xxtofl@exp 000C                          _SYSTEM_Initialize 205C  
                             ___xxtofl@val 0003                                 __accesstop 0060  
                 __size_of_lcd_draw_string 0100                    __end_of__initialization 1CE8  
                                ?_INT0_ISR 0001                         ?_SYSTEM_Initialize 0001  
                            ___rparam_used 000001                                 ___fltol@f1 002A  
                        ?_EPWM1_Initialize 0001                             __pcstackCOMRAM 0001  
                             __pidataBANK0 21AC                        ??_SYSTEM_Initialize 0005  
                       ??_EPWM1_Initialize 0003                              __end_of_fputc 18F0  
                            __end_of_fputs 1E54      __end_of_IOCB4_DefaultInterruptHandler 21B2  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 21B0  
                            __end_of_putch 21B0                           ?_TMR2_Initialize 0001  
                           ??_function_pwm 0034                                  ?_SPI_Open 0001  
              ??_IOCB4_SetInterruptHandler 0005                           ??_lcd_set_cursor 000C  
              __size_of_EXT_INT_Initialize 0014                     fp__IOCB4_InterruptCall 0000  
                                  ??_fputc 0007                  __end_of_SYSTEM_Initialize 2082  
                                  ??_fputs 0010                                    ??_putch 0003  
                               __pbssBANK0 0060                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                            __CFG_PLLCFG$OFF 000000  
                          lcd_fill_rect@x0 000C                            lcd_fill_rect@x1 0010  
                          lcd_fill_rect@y0 000E                            lcd_fill_rect@y1 0012  
                    _INT0_InterruptHandler 00A2                                 ??_INT0_ISR 0001  
                                  _CCP1CON 000FBB                                    _ECCP1AS 000FBF  
                                  _ADC_ISR 1F76                                 ??_SPI_Open 0003  
                  __size_of_ADC_Initialize 0024                                    ?_strlen 0003  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0003  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 01BE                                    _OSCTUNE 000F9B  
             __size_of_IOCB4_InterruptCall 0046                                    _SSPCON1 000FC6  
                                  _SSPCON2 000FC5                                  ?_lcd_fill 000C  
                                ?_lcd_init 0001                                  ?_lcd_send 0004  
                                  _SSPSTAT 000FC7                __end_of_EPWM1_LoadDutyValue 1F76  
                         ??_SPI_Initialize 0003                  _IOCB4_SetInterruptHandler 2182  
        __size_of_INT0_SetInterruptHandler 000A                  ?_INT0_SetInterruptHandler 0003  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 00A6  
                                  __Hparam 0000                    _ADC_SetInterruptHandler 2196  
                                  __Lparam 0000                          ??_lcd_draw_string 002C  
                                  ___aodiv 10D8                                    ___aomod 13DA  
                                  ___flmul 009C                                    ___fltol 153E  
                                ?_vfprintf 0052                                    __pcinit 1CA6  
                                  __ramtop 0F00                                    __ptext0 0B2A  
                                  __ptext1 1C54                                    __ptext2 1BF0  
                                  __ptext3 0D66                                    __ptext4 084C  
                                  __ptext5 18F0                                    __ptext6 1F10  
                                  __ptext7 1E10                                    __ptext8 1826  
                                  __ptext9 21AE                                    _lcd_pot 0164  
                                  _msDelay 1FA6                                  _IOCB4_ISR 1FD4  
                          __size_of_strlen 0036                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 2160                                  _T2CONbits 000FCA  
                             __size_of_abs 0040                               __size_of_pad 00C2  
                               ??___xxtofl 0007                   ??_PIN_MANAGER_Initialize 0005  
                        __CFG_MSSPMSK$MSK7 000000                      __end_of_lcd_fill_rect 1826  
                                  _pot_val 008E                      __end_of_lcd_draw_char 13DA  
               __size_of_SYSTEM_Initialize 0026                                 ??_lcd_fill 000E  
                                  _sprintf 1C54                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 0012                                 ??_lcd_send 0005  
                     end_of_initialization 1CE8                         ??_SPI_ExchangeByte 0003  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0005                       __end_of_function_pwm 1BF0  
                                  fputs@fp 000E                        lcd_draw_char@fIndex 0010  
                        __end_of_vfpfcnvrt 0F24                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc1 000FE6  
                                  postinc2 000FDE                           lcd_fill@bg_color 000C  
                               ??_vfprintf 0058                                    strlen@a 0005  
                                  strlen@s 0003                          lcd_draw_string@pS 0026  
                                _PORTBbits 000F81                          _spi_configuration FFD1  
                               ?_IOCB4_ISR 0001                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 21B6                _ADC_DefaultInterruptHandler 21B4  
                            ___xxtofl@sign 000B                                  _TRISCbits 000F94  
                              ___flmul@grs 001E              ??_ADC_DefaultInterruptHandler 0001  
                               lcd_send@dc 0005                  ??_ADC_SetInterruptHandler 0005  
                        __size_of_INT0_ISR 0008               __end_of_INTERRUPT_Initialize 21AC  
                     SPI_ExchangeByte@data 0003       __end_of_INT0_DefaultInterruptHandler 21B4  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 21B2  
                __end_of_spi_configuration FFD5                                vfpfcnvrt@ap 0046  
                              vfpfcnvrt@fp 0042                                vfpfcnvrt@ll 004A  
              __size_of_INT0_InterruptCall 0018                             _ADC_Initialize 2082  
                       lcd_fill_rect@color 0014                    __size_of_function_relay 00A6  
                   ?_OSCILLATOR_Initialize 0001                      __end_of_INT0_CallBack 2030  
                        __size_of_SPI_Open 00B0                             __end_of_strlen 1F46  
                      start_initialization 1CA6                  __size_of_EPWM1_Initialize 001C  
          __size_of_PIN_MANAGER_Initialize 0048                                __end_of_abs 1ED6  
                              __end_of_pad 19B2                             _codigo_digital 006C  
             EPWM1_LoadDutyValue@dutyValue 0003                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0004                   __size_of_TMR1_Initialize 002C  
                              vfprintf@fmt 0054                        _IOCB4_InterruptCall 1DCA  
                              _CCPTMRSbits 000F99                     __end_of_ADC_Initialize 20A6  
                              __pdataBANK0 00AA                                   ?_ADC_ISR 0001  
               __end_of_EXT_INT_Initialize 214E            fp__INT0_DefaultInterruptHandler 0000  
            ?_INT0_DefaultInterruptHandler 0001                                   ??_strlen 0005  
                              ??_IOCB4_ISR 0001                    __size_of_lcd_draw_pixel 0016  
                                ___flmul@a 0015                                  ___flmul@b 0011  
                              __pbssCOMRAM 005A           __end_of_INT0_SetInterruptHandler 2196  
                            __pcstackBANK0 0090                           ___aodiv@dividend 0003  
                     ?_IOCB4_InterruptCall 0001                   __size_of_TMR2_Initialize 0010  
                        __size_of___xxtofl 01B4                      __size_of_function_pwm 0066  
                          _lcd_draw_string 1644                           _lcd_set_cursor_x 1D3A  
                         _lcd_set_cursor_y 1CF2                          __size_of_lcd_fill 0082  
                        __size_of_lcd_init 0386                          __size_of_lcd_send 0018  
                                __pnvBANK0 00A2                     _PIN_MANAGER_Initialize 1D82  
                                _dtoa$1556 0030                                  __pintcode 0008  
                            __pmediumconst F204                                   ?___aodiv 0003  
                                 ?___aomod 0003                           ___aodiv@quotient 0015  
                                 ?___flmul 0011                                   ?___fltol 002A  
                          ?_ADC_Initialize 0001               ??_INTERRUPT_InterruptManager 0001  
                        __size_of_vfprintf 0064                               _function_pwm 1B8A  
                                 ?_msDelay 0001                                   _ECCP1DEL 000FBE  
                    ??_IOCB4_InterruptCall 0001                                   ?_sprintf 0090  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 21A8  
                  __size_of_lcd_set_cursor 0042                                   _INT0_ISR 21A0  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                                   _PIE1bits 000F9D  
                              _lcd_const_A 0100                                _lcd_const_B 0200  
                          lcd_set_cursor@x 0008                            lcd_set_cursor@y 000A  
                                 i2u203_40 1FE8                                   i2u203_41 1FE4  
                                 i2u204_48 1FEE                                   i2u204_49 2000  
                                 i2u206_40 2016                                   i2u206_41 2012  
      __size_of_INTERRUPT_InterruptManager 0090                                   i2u207_48 201C  
                                 i2u207_49 202E                                   i2u255_40 2104  
                                 i2u255_41 2100                                   i2u256_40 1F8C  
                                 i2u280_40 0044                                   i2u256_41 1F88  
                                 i2u280_41 0040                                   i2u193_40 1DD8  
                                 i2u281_40 0052                                   i2u193_41 1DD4  
                                 i2u281_41 004E                                   _PIR1bits 000F9E  
                                 i2u257_48 1F92                                   i2u194_40 1DEE  
                                 i2u282_40 0068                                   i2u257_49 1FA4  
                                 i2u194_41 1DEA                                   i2u282_41 0064  
                                 i2u195_40 211E                                   i2u283_40 0076  
                                 i2u195_41 2118                                   i2u283_41 0072  
                                 i2u196_40 2120                                   i2u284_40 0084  
                                 i2u284_41 0080                                   i2u278_40 0020  
                                 i2u278_41 001C                                   i2u279_40 002E  
                                 i2u279_41 002A                      lcd_draw_string@lIndex 0032  
             __size_of_EPWM1_LoadDutyValue 0030                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A             fp__ADC_DefaultInterruptHandler 0000  
                                 _PSTR1CON 000F9C                           lcd_draw_string@k 0030  
                         lcd_draw_string@x 0022                           lcd_draw_string@y 0024  
                        ??_PIN_MANAGER_IOC 0001                                  _vfpfcnvrt 0D66  
                           _function_relay 1A62                                   _SPI_Open 19B2  
                        ??_TMR1_Initialize 0003                           __size_of_ADC_ISR 0030  
                               _ADCON0bits 000FC2                           __CFG_SOSCSEL$DIG 000000  
                  __end_of_lcd_draw_string 1744                           _EPWM1_Initialize 20A6  
           ??_INT0_DefaultInterruptHandler 0001                                  msDelay@ms 0004  
                              _INTCON2bits 000FF1                      ?_INTERRUPT_Initialize 0001  
                 _INT0_SetInterruptHandler 218C                          ??_TMR2_Initialize 0003  
                      lcd_draw_pixel@color 0006                                   __Hrparam 0000  
                               vfprintf@ap 0056                                   __Lrparam 0000  
                               vfprintf@fp 0052                          _ADC_GetConversion 1ED6  
                       __CFG_BOREN$SBORDIS 000000                     __size_of_lcd_fill_rect 00E2  
                  __size_of_SPI_Initialize 0012                     __end_of_function_relay 1B08  
                  ??_OSCILLATOR_Initialize 0003                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0003                           __size_of___aodiv 0188  
                         __size_of___aomod 0164                           __size_of___flmul 042A  
                         __size_of___fltol 0106                                 ?_vfpfcnvrt 0042  
                          ___aodiv@divisor 000B                            ___aodiv@counter 0013  
                   _IOCB4_InterruptHandler 00A8                             _lcd_draw_pixel 2124  
                      ??_ADC_GetConversion 0005                                 sprintf@fmt 0092  
                         __size_of_msDelay 002E                                   ___xxtofl 0F24  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                                 __ptext10 1E96                                   __ptext11 13DA  
                                 __ptext20 1CF2                                   __ptext12 10D8  
                                 __ptext21 1D3A                                   __ptext13 04C6  
                               _T1GCONbits 000FAA                                   __ptext30 009C  
                                 __ptext22 2124                                   __ptext14 1FA6  
                                 __ptext31 1F46                                   __ptext23 20DC  
                                 __ptext15 1B08                                   __ptext40 213A  
                                 __ptext32 205C                                   __ptext24 20C2  
                                 __ptext16 1744                                   __ptext41 218C  
                                 __ptext33 2172                                   __ptext25 1A62  
                                 __ptext17 1644                                   __ptext50 1DCA  
                                 __ptext42 20A6                                   __ptext34 2030  
                                 __ptext26 1ED6                                   __ptext18 1260  
                                 __ptext51 21A0                                   __ptext43 2082  
                                 __ptext35 214E                                   __ptext27 1B8A  
                                 __ptext19 1E54                                   __ptext52 2002  
                                 __ptext44 2196                                   __ptext36 1D82  
                                 __ptext28 0F24                                   __ptext53 21B2  
                                 __ptext45 19B2                                   __ptext37 2182  
                                 __ptext29 153E                                   __ptext54 210C  
                                 __ptext38 2160                                   __ptext55 1F76  
                                 __ptext47 20F4                                   __ptext39 21A8  
                                 __ptext56 21B4                                   __ptext48 1FD4  
                                 __ptext57 0000                                   __ptext49 21B0  
                                 _lcd_fill 1B08                                   _lcd_init 04C6  
                                 _lcd_send 20DC                           __size_of_sprintf 0052  
                            __size_of_main 023C                              __size_of_dtoa 02DE  
                __end_of_ADC_GetConversion 1F10                      lcd_draw_char@bg_color 0014  
               __end_of_INT0_InterruptCall 2124                                   int$flags 005D  
                          ?_function_relay 0001                                   _vfprintf 1BF0  
                    lcd_draw_char@fg_color 0012         __end_of_INTERRUPT_InterruptManager 0098  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 213A  
                 __end_of_lcd_set_cursor_x 1D82                   __end_of_lcd_set_cursor_y 1D3A  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0005  
                         ___aomod@dividend 0003                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0022                     ??_INTERRUPT_Initialize 0003  
                            _lcd_fill_rect 1744                         _EXT_INT_Initialize 213A  
                 ?_ADC_SetInterruptHandler 0003                              _lcd_draw_char 1260  
                                 intlevel2 0000                             _lcd_set_cursor 1E54  
                                sprintf@ap 0098                          lcd_set_cursor_x@x 0006  
                        lcd_set_cursor_y@y 0006                    ?_PIN_MANAGER_Initialize 0001  
                      ?_EXT_INT_Initialize 0001                           ??_ADC_Initialize 0005  
                   __size_of_INT0_CallBack 002E                           _SPI_ExchangeByte 20C2  
                  lcd_draw_string@bg_color 002A                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000B                    lcd_draw_string@fg_color 0028  
                          ?_lcd_draw_pixel 0006                                ??_vfpfcnvrt 0048  
                          ___aomod@counter 0013                       ??_EXT_INT_Initialize 0005  
                                 sprintf@f 009A                                   sprintf@s 0090  
                      _EPWM1_LoadDutyValue 1F46                             ?_lcd_fill_rect 000C  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 1E96  
                           ?_lcd_draw_char 000C                               ___aodiv@sign 0014  
           __end_of_PIN_MANAGER_Initialize 1DCA                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 20F4                 __size_of_ADC_GetConversion 003A  
                             ___aomod@sign 0014                            _TMR1_Initialize 2030  
                 __end_of_EPWM1_Initialize 20C2                       ?_EPWM1_LoadDutyValue 0003  
