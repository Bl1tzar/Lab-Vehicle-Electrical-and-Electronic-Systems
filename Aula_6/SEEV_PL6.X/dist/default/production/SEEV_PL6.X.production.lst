

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 15 23:45:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   109                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   110  0000                     
   111                           ; Version 2.10
   112                           ; Generated 31/07/2019 GMT
   113                           ; 
   114                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F46K80 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     
   146 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   147  0000                     
   148 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   149  0000                     
   150 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   151  0000                     
   152                           	psect	idataBANK0
   153  005422                     __pidataBANK0:
   154                           	opt callstack 0
   155                           
   156                           ;initializer for _turn_off_value
   157  005422  000A               	dw	10
   158                           
   159                           ;initializer for _turn_on_value
   160  005424  0014               	dw	20
   161                           
   162                           	psect	idataBANK1
   163  0053DA                     __pidataBANK1:
   164                           	opt callstack 0
   165                           
   166                           ;initializer for stoa@F1152
   167  0053DA  28                 	db	40
   168  0053DB  6E                 	db	110
   169  0053DC  75                 	db	117
   170  0053DD  6C                 	db	108
   171  0053DE  6C                 	db	108
   172  0053DF  29                 	db	41
   173  0053E0  00                 	db	0
   174                           
   175                           ;initializer for _KP
   176  0053E1  0000               	dw	0
   177  0053E3  3F80               	dw	16256
   178                           
   179                           	psect	mediumconst
   180  00F0A8                     __pmediumconst:
   181                           	opt callstack 0
   182  00F0A8  00                 	db	0
   183  00F0A9                     _font:
   184                           	opt callstack 0
   185  00F0A9  0004               	dw	4
   186  00F0AB  0000               	dw	0
   187  00F0AD  0000               	dw	0
   188  00F0AF  0000               	dw	0
   189  00F0B1  0000               	dw	0
   190  00F0B3  0000               	dw	0
   191  00F0B5  0000               	dw	0
   192  00F0B7  0000               	dw	0
   193  00F0B9  0000               	dw	0
   194  00F0BB  0003               	dw	3
   195  00F0BD  0000               	dw	0
   196  00F0BF  0000               	dw	0
   197  00F0C1  00FE               	dw	254
   198  00F0C3  001B               	dw	27
   199  00F0C5  0000               	dw	0
   200  00F0C7  0000               	dw	0
   201  00F0C9  0005               	dw	5
   202  00F0CB  001E               	dw	30
   203  00F0CD  0000               	dw	0
   204  00F0CF  0000               	dw	0
   205  00F0D1  0000               	dw	0
   206  00F0D3  0000               	dw	0
   207  00F0D5  0000               	dw	0
   208  00F0D7  001E               	dw	30
   209  00F0D9  0000               	dw	0
   210  00F0DB  0000               	dw	0
   211  00F0DD  0000               	dw	0
   212  00F0DF  000B               	dw	11
   213  00F0E1  0000               	dw	0
   214  00F0E3  0000               	dw	0
   215  00F0E5  0010               	dw	16
   216  00F0E7  0001               	dw	1
   217  00F0E9  0010               	dw	16
   218  00F0EB  001D               	dw	29
   219  00F0ED  00F0               	dw	240
   220  00F0EF  0003               	dw	3
   221  00F0F1  001E               	dw	30
   222  00F0F3  0001               	dw	1
   223  00F0F5  0010               	dw	16
   224  00F0F7  0001               	dw	1
   225  00F0F9  0010               	dw	16
   226  00F0FB  001D               	dw	29
   227  00F0FD  00F0               	dw	240
   228  00F0FF  0003               	dw	3
   229  00F101  001E               	dw	30
   230  00F103  0001               	dw	1
   231  00F105  0010               	dw	16
   232  00F107  0001               	dw	1
   233  00F109  0000               	dw	0
   234  00F10B  0000               	dw	0
   235  00F10D  0009               	dw	9
   236  00F10F  0000               	dw	0
   237  00F111  0004               	dw	4
   238  00F113  001C               	dw	28
   239  00F115  0008               	dw	8
   240  00F117  0022               	dw	34
   241  00F119  0010               	dw	16
   242  00F11B  0042               	dw	66
   243  00F11D  0010               	dw	16
   244  00F11F  00FF               	dw	255
   245  00F121  007F               	dw	127
   246  00F123  0042               	dw	66
   247  00F125  0010               	dw	16
   248  00F127  0084               	dw	132
   249  00F129  0010               	dw	16
   250  00F12B  0000               	dw	0
   251  00F12D  000F               	dw	15
   252  00F12F  0000               	dw	0
   253  00F131  0000               	dw	0
   254  00F133  000C               	dw	12
   255  00F135  001C               	dw	28
   256  00F137  0000               	dw	0
   257  00F139  0022               	dw	34
   258  00F13B  0010               	dw	16
   259  00F13D  0022               	dw	34
   260  00F13F  0008               	dw	8
   261  00F141  0022               	dw	34
   262  00F143  0006               	dw	6
   263  00F145  001C               	dw	28
   264  00F147  0001               	dw	1
   265  00F149  00C0               	dw	192
   266  00F14B  0000               	dw	0
   267  00F14D  0020               	dw	32
   268  00F14F  000E               	dw	14
   269  00F151  0018               	dw	24
   270  00F153  0011               	dw	17
   271  00F155  0004               	dw	4
   272  00F157  0011               	dw	17
   273  00F159  0002               	dw	2
   274  00F15B  0011               	dw	17
   275  00F15D  0000               	dw	0
   276  00F15F  000E               	dw	14
   277  00F161  0000               	dw	0
   278  00F163  0000               	dw	0
   279  00F165  000B               	dw	11
   280  00F167  0000               	dw	0
   281  00F169  0000               	dw	0
   282  00F16B  0000               	dw	0
   283  00F16D  000E               	dw	14
   284  00F16F  001C               	dw	28
   285  00F171  0011               	dw	17
   286  00F173  00A2               	dw	162
   287  00F175  0010               	dw	16
   288  00F177  00C2               	dw	194
   289  00F179  0010               	dw	16
   290  00F17B  0022               	dw	34
   291  00F17D  0011               	dw	17
   292  00F17F  001C               	dw	28
   293  00F181  000A               	dw	10
   294  00F183  0000               	dw	0
   295  00F185  000C               	dw	12
   296  00F187  0000               	dw	0
   297  00F189  000C               	dw	12
   298  00F18B  0000               	dw	0
   299  00F18D  0012               	dw	18
   300  00F18F  0000               	dw	0
   301  00F191  0000               	dw	0
   302  00F193  0003               	dw	3
   303  00F195  0000               	dw	0
   304  00F197  0000               	dw	0
   305  00F199  001E               	dw	30
   306  00F19B  0000               	dw	0
   307  00F19D  0000               	dw	0
   308  00F19F  0000               	dw	0
   309  00F1A1  0006               	dw	6
   310  00F1A3  0000               	dw	0
   311  00F1A5  0000               	dw	0
   312  00F1A7  0000               	dw	0
   313  00F1A9  0000               	dw	0
   314  00F1AB  00E0               	dw	224
   315  00F1AD  001F               	dw	31
   316  00F1AF  001C               	dw	28
   317  00F1B1  0060               	dw	96
   318  00F1B3  0002               	dw	2
   319  00F1B5  0080               	dw	128
   320  00F1B7  0000               	dw	0
   321  00F1B9  0000               	dw	0
   322  00F1BB  0004               	dw	4
   323  00F1BD  0000               	dw	0
   324  00F1BF  0000               	dw	0
   325  00F1C1  0006               	dw	6
   326  00F1C3  00C0               	dw	192
   327  00F1C5  00F8               	dw	248
   328  00F1C7  003F               	dw	63
   329  00F1C9  0000               	dw	0
   330  00F1CB  0000               	dw	0
   331  00F1CD  0006               	dw	6
   332  00F1CF  0024               	dw	36
   333  00F1D1  0000               	dw	0
   334  00F1D3  0018               	dw	24
   335  00F1D5  0000               	dw	0
   336  00F1D7  007E               	dw	126
   337  00F1D9  0000               	dw	0
   338  00F1DB  0018               	dw	24
   339  00F1DD  0000               	dw	0
   340  00F1DF  0024               	dw	36
   341  00F1E1  0000               	dw	0
   342  00F1E3  0000               	dw	0
   343  00F1E5  0000               	dw	0
   344  00F1E7  0009               	dw	9
   345  00F1E9  0000               	dw	0
   346  00F1EB  0000               	dw	0
   347  00F1ED  0080               	dw	128
   348  00F1EF  0000               	dw	0
   349  00F1F1  0080               	dw	128
   350  00F1F3  0000               	dw	0
   351  00F1F5  0080               	dw	128
   352  00F1F7  0000               	dw	0
   353  00F1F9  00F0               	dw	240
   354  00F1FB  0007               	dw	7
   355  00F1FD  0080               	dw	128
   356  00F1FF  0000               	dw	0
   357  00F201  0080               	dw	128
   358  00F203  0000               	dw	0
   359  00F205  0080               	dw	128
   360  00F207  0000               	dw	0
   361  00F209  0000               	dw	0
   362  00F20B  0000               	dw	0
   363  00F20D  0004               	dw	4
   364  00F20F  0000               	dw	0
   365  00F211  0000               	dw	0
   366  00F213  0000               	dw	0
   367  00F215  0060               	dw	96
   368  00F217  0000               	dw	0
   369  00F219  0018               	dw	24
   370  00F21B  0000               	dw	0
   371  00F21D  0000               	dw	0
   372  00F21F  0005               	dw	5
   373  00F221  0000               	dw	0
   374  00F223  0001               	dw	1
   375  00F225  0000               	dw	0
   376  00F227  0001               	dw	1
   377  00F229  0000               	dw	0
   378  00F22B  0001               	dw	1
   379  00F22D  0000               	dw	0
   380  00F22F  0001               	dw	1
   381  00F231  0000               	dw	0
   382  00F233  0000               	dw	0
   383  00F235  0004               	dw	4
   384  00F237  0000               	dw	0
   385  00F239  0000               	dw	0
   386  00F23B  0000               	dw	0
   387  00F23D  0018               	dw	24
   388  00F23F  0000               	dw	0
   389  00F241  0018               	dw	24
   390  00F243  0000               	dw	0
   391  00F245  0000               	dw	0
   392  00F247  0008               	dw	8
   393  00F249  0000               	dw	0
   394  00F24B  0000               	dw	0
   395  00F24D  0000               	dw	0
   396  00F24F  0040               	dw	64
   397  00F251  0000               	dw	0
   398  00F253  0038               	dw	56
   399  00F255  0000               	dw	0
   400  00F257  0007               	dw	7
   401  00F259  00E0               	dw	224
   402  00F25B  0000               	dw	0
   403  00F25D  001C               	dw	28
   404  00F25F  0000               	dw	0
   405  00F261  0002               	dw	2
   406  00F263  0000               	dw	0
   407  00F265  0000               	dw	0
   408  00F267  0000               	dw	0
   409  00F269  0009               	dw	9
   410  00F26B  00F8               	dw	248
   411  00F26D  0007               	dw	7
   412  00F26F  0004               	dw	4
   413  00F271  0008               	dw	8
   414  00F273  0002               	dw	2
   415  00F275  0010               	dw	16
   416  00F277  0002               	dw	2
   417  00F279  0010               	dw	16
   418  00F27B  0002               	dw	2
   419  00F27D  0010               	dw	16
   420  00F27F  0002               	dw	2
   421  00F281  0010               	dw	16
   422  00F283  0004               	dw	4
   423  00F285  0008               	dw	8
   424  00F287  00F8               	dw	248
   425  00F289  0007               	dw	7
   426  00F28B  0000               	dw	0
   427  00F28D  0000               	dw	0
   428  00F28F  0009               	dw	9
   429  00F291  0000               	dw	0
   430  00F293  0000               	dw	0
   431  00F295  0000               	dw	0
   432  00F297  0000               	dw	0
   433  00F299  0000               	dw	0
   434  00F29B  0000               	dw	0
   435  00F29D  0000               	dw	0
   436  00F29F  0000               	dw	0
   437  00F2A1  0000               	dw	0
   438  00F2A3  0000               	dw	0
   439  00F2A5  0002               	dw	2
   440  00F2A7  0000               	dw	0
   441  00F2A9  0002               	dw	2
   442  00F2AB  0000               	dw	0
   443  00F2AD  00FE               	dw	254
   444  00F2AF  001F               	dw	31
   445  00F2B1  0000               	dw	0
   446  00F2B3  0000               	dw	0
   447  00F2B5  0009               	dw	9
   448  00F2B7  0018               	dw	24
   449  00F2B9  0010               	dw	16
   450  00F2BB  0004               	dw	4
   451  00F2BD  0018               	dw	24
   452  00F2BF  0002               	dw	2
   453  00F2C1  0014               	dw	20
   454  00F2C3  0002               	dw	2
   455  00F2C5  0012               	dw	18
   456  00F2C7  0002               	dw	2
   457  00F2C9  0011               	dw	17
   458  00F2CB  0082               	dw	130
   459  00F2CD  0010               	dw	16
   460  00F2CF  0044               	dw	68
   461  00F2D1  0010               	dw	16
   462  00F2D3  0038               	dw	56
   463  00F2D5  0010               	dw	16
   464  00F2D7  0000               	dw	0
   465  00F2D9  0000               	dw	0
   466  00F2DB  0009               	dw	9
   467  00F2DD  0008               	dw	8
   468  00F2DF  000C               	dw	12
   469  00F2E1  0004               	dw	4
   470  00F2E3  0010               	dw	16
   471  00F2E5  0002               	dw	2
   472  00F2E7  0010               	dw	16
   473  00F2E9  0042               	dw	66
   474  00F2EB  0010               	dw	16
   475  00F2ED  0042               	dw	66
   476  00F2EF  0010               	dw	16
   477  00F2F1  0044               	dw	68
   478  00F2F3  0010               	dw	16
   479  00F2F5  00B8               	dw	184
   480  00F2F7  0008               	dw	8
   481  00F2F9  0000               	dw	0
   482  00F2FB  0007               	dw	7
   483  00F2FD  0000               	dw	0
   484  00F2FF  0000               	dw	0
   485  00F301  0009               	dw	9
   486  00F303  0000               	dw	0
   487  00F305  0002               	dw	2
   488  00F307  0000               	dw	0
   489  00F309  0003               	dw	3
   490  00F30B  0080               	dw	128
   491  00F30D  0002               	dw	2
   492  00F30F  0060               	dw	96
   493  00F311  0002               	dw	2
   494  00F313  0010               	dw	16
   495  00F315  0002               	dw	2
   496  00F317  0008               	dw	8
   497  00F319  0002               	dw	2
   498  00F31B  00FE               	dw	254
   499  00F31D  001F               	dw	31
   500  00F31F  0000               	dw	0
   501  00F321  0002               	dw	2
   502  00F323  0000               	dw	0
   503  00F325  0000               	dw	0
   504  00F327  0009               	dw	9
   505  00F329  0000               	dw	0
   506  00F32B  0004               	dw	4
   507  00F32D  0070               	dw	112
   508  00F32F  0008               	dw	8
   509  00F331  002E               	dw	46
   510  00F333  0010               	dw	16
   511  00F335  0022               	dw	34
   512  00F337  0010               	dw	16
   513  00F339  0022               	dw	34
   514  00F33B  0010               	dw	16
   515  00F33D  0022               	dw	34
   516  00F33F  0010               	dw	16
   517  00F341  0042               	dw	66
   518  00F343  0008               	dw	8
   519  00F345  0082               	dw	130
   520  00F347  0007               	dw	7
   521  00F349  0000               	dw	0
   522  00F34B  0000               	dw	0
   523  00F34D  0009               	dw	9
   524  00F34F  0000               	dw	0
   525  00F351  0000               	dw	0
   526  00F353  0000               	dw	0
   527  00F355  0007               	dw	7
   528  00F357  00C0               	dw	192
   529  00F359  0008               	dw	8
   530  00F35B  0060               	dw	96
   531  00F35D  0010               	dw	16
   532  00F35F  0058               	dw	88
   533  00F361  0010               	dw	16
   534  00F363  0044               	dw	68
   535  00F365  0010               	dw	16
   536  00F367  0082               	dw	130
   537  00F369  0008               	dw	8
   538  00F36B  0000               	dw	0
   539  00F36D  0007               	dw	7
   540  00F36F  0000               	dw	0
   541  00F371  0000               	dw	0
   542  00F373  0009               	dw	9
   543  00F375  0000               	dw	0
   544  00F377  0000               	dw	0
   545  00F379  0002               	dw	2
   546  00F37B  0010               	dw	16
   547  00F37D  0002               	dw	2
   548  00F37F  000C               	dw	12
   549  00F381  0002               	dw	2
   550  00F383  0003               	dw	3
   551  00F385  00C2               	dw	194
   552  00F387  0000               	dw	0
   553  00F389  0032               	dw	50
   554  00F38B  0000               	dw	0
   555  00F38D  000E               	dw	14
   556  00F38F  0000               	dw	0
   557  00F391  0002               	dw	2
   558  00F393  0000               	dw	0
   559  00F395  0000               	dw	0
   560  00F397  0000               	dw	0
   561  00F399  0009               	dw	9
   562  00F39B  0000               	dw	0
   563  00F39D  0007               	dw	7
   564  00F39F  0098               	dw	152
   565  00F3A1  0008               	dw	8
   566  00F3A3  0064               	dw	100
   567  00F3A5  0010               	dw	16
   568  00F3A7  0042               	dw	66
   569  00F3A9  0010               	dw	16
   570  00F3AB  0042               	dw	66
   571  00F3AD  0010               	dw	16
   572  00F3AF  0064               	dw	100
   573  00F3B1  0010               	dw	16
   574  00F3B3  0098               	dw	152
   575  00F3B5  0008               	dw	8
   576  00F3B7  0000               	dw	0
   577  00F3B9  0007               	dw	7
   578  00F3BB  0000               	dw	0
   579  00F3BD  0000               	dw	0
   580  00F3BF  0009               	dw	9
   581  00F3C1  0000               	dw	0
   582  00F3C3  0000               	dw	0
   583  00F3C5  0038               	dw	56
   584  00F3C7  0000               	dw	0
   585  00F3C9  0044               	dw	68
   586  00F3CB  0010               	dw	16
   587  00F3CD  0082               	dw	130
   588  00F3CF  0008               	dw	8
   589  00F3D1  0082               	dw	130
   590  00F3D3  0004               	dw	4
   591  00F3D5  0082               	dw	130
   592  00F3D7  0003               	dw	3
   593  00F3D9  0084               	dw	132
   594  00F3DB  0000               	dw	0
   595  00F3DD  0078               	dw	120
   596  00F3DF  0000               	dw	0
   597  00F3E1  0000               	dw	0
   598  00F3E3  0000               	dw	0
   599  00F3E5  0004               	dw	4
   600  00F3E7  0000               	dw	0
   601  00F3E9  0000               	dw	0
   602  00F3EB  0030               	dw	48
   603  00F3ED  0018               	dw	24
   604  00F3EF  0030               	dw	48
   605  00F3F1  0018               	dw	24
   606  00F3F3  0000               	dw	0
   607  00F3F5  0000               	dw	0
   608  00F3F7  0004               	dw	4
   609  00F3F9  0000               	dw	0
   610  00F3FB  0000               	dw	0
   611  00F3FD  0030               	dw	48
   612  00F3FF  0060               	dw	96
   613  00F401  0030               	dw	48
   614  00F403  0018               	dw	24
   615  00F405  0000               	dw	0
   616  00F407  0000               	dw	0
   617  00F409  000A               	dw	10
   618  00F40B  0000               	dw	0
   619  00F40D  0000               	dw	0
   620  00F40F  0080               	dw	128
   621  00F411  0000               	dw	0
   622  00F413  0080               	dw	128
   623  00F415  0000               	dw	0
   624  00F417  0040               	dw	64
   625  00F419  0001               	dw	1
   626  00F41B  0020               	dw	32
   627  00F41D  0002               	dw	2
   628  00F41F  0020               	dw	32
   629  00F421  0002               	dw	2
   630  00F423  0010               	dw	16
   631  00F425  0004               	dw	4
   632  00F427  0010               	dw	16
   633  00F429  0004               	dw	4
   634  00F42B  0008               	dw	8
   635  00F42D  0008               	dw	8
   636  00F42F  0000               	dw	0
   637  00F431  0000               	dw	0
   638  00F433  000A               	dw	10
   639  00F435  0000               	dw	0
   640  00F437  0000               	dw	0
   641  00F439  0020               	dw	32
   642  00F43B  0001               	dw	1
   643  00F43D  0020               	dw	32
   644  00F43F  0001               	dw	1
   645  00F441  0020               	dw	32
   646  00F443  0001               	dw	1
   647  00F445  0020               	dw	32
   648  00F447  0001               	dw	1
   649  00F449  0020               	dw	32
   650  00F44B  0001               	dw	1
   651  00F44D  0020               	dw	32
   652  00F44F  0001               	dw	1
   653  00F451  0020               	dw	32
   654  00F453  0001               	dw	1
   655  00F455  0020               	dw	32
   656  00F457  0001               	dw	1
   657  00F459  0000               	dw	0
   658  00F45B  0000               	dw	0
   659  00F45D  000A               	dw	10
   660  00F45F  0000               	dw	0
   661  00F461  0000               	dw	0
   662  00F463  0008               	dw	8
   663  00F465  0008               	dw	8
   664  00F467  0010               	dw	16
   665  00F469  0004               	dw	4
   666  00F46B  0010               	dw	16
   667  00F46D  0004               	dw	4
   668  00F46F  0020               	dw	32
   669  00F471  0002               	dw	2
   670  00F473  0020               	dw	32
   671  00F475  0002               	dw	2
   672  00F477  0040               	dw	64
   673  00F479  0001               	dw	1
   674  00F47B  0080               	dw	128
   675  00F47D  0000               	dw	0
   676  00F47F  0080               	dw	128
   677  00F481  0000               	dw	0
   678  00F483  0000               	dw	0
   679  00F485  0000               	dw	0
   680  00F487  0008               	dw	8
   681  00F489  0000               	dw	0
   682  00F48B  0000               	dw	0
   683  00F48D  000C               	dw	12
   684  00F48F  0000               	dw	0
   685  00F491  0082               	dw	130
   686  00F493  0001               	dw	1
   687  00F495  0042               	dw	66
   688  00F497  0002               	dw	2
   689  00F499  0022               	dw	34
   690  00F49B  001A               	dw	26
   691  00F49D  0022               	dw	34
   692  00F49F  001A               	dw	26
   693  00F4A1  009C               	dw	156
   694  00F4A3  0001               	dw	1
   695  00F4A5  0000               	dw	0
   696  00F4A7  0000               	dw	0
   697  00F4A9  000E               	dw	14
   698  00F4AB  0000               	dw	0
   699  00F4AD  0000               	dw	0
   700  00F4AF  00F0               	dw	240
   701  00F4B1  0003               	dw	3
   702  00F4B3  0008               	dw	8
   703  00F4B5  0004               	dw	4
   704  00F4B7  0004               	dw	4
   705  00F4B9  0008               	dw	8
   706  00F4BB  00C2               	dw	194
   707  00F4BD  0011               	dw	17
   708  00F4BF  0022               	dw	34
   709  00F4C1  0012               	dw	18
   710  00F4C3  0012               	dw	18
   711  00F4C5  0012               	dw	18
   712  00F4C7  0012               	dw	18
   713  00F4C9  0012               	dw	18
   714  00F4CB  00E2               	dw	226
   715  00F4CD  0011               	dw	17
   716  00F4CF  0012               	dw	18
   717  00F4D1  0012               	dw	18
   718  00F4D3  0004               	dw	4
   719  00F4D5  0012               	dw	18
   720  00F4D7  0008               	dw	8
   721  00F4D9  0009               	dw	9
   722  00F4DB  00F0               	dw	240
   723  00F4DD  0004               	dw	4
   724  00F4DF  0000               	dw	0
   725  00F4E1  0000               	dw	0
   726  00F4E3  000D               	dw	13
   727  00F4E5  0000               	dw	0
   728  00F4E7  0000               	dw	0
   729  00F4E9  0000               	dw	0
   730  00F4EB  0010               	dw	16
   731  00F4ED  0000               	dw	0
   732  00F4EF  000E               	dw	14
   733  00F4F1  0080               	dw	128
   734  00F4F3  0001               	dw	1
   735  00F4F5  0060               	dw	96
   736  00F4F7  0001               	dw	1
   737  00F4F9  001C               	dw	28
   738  00F4FB  0001               	dw	1
   739  00F4FD  0002               	dw	2
   740  00F4FF  0001               	dw	1
   741  00F501  001C               	dw	28
   742  00F503  0001               	dw	1
   743  00F505  0060               	dw	96
   744  00F507  0001               	dw	1
   745  00F509  0080               	dw	128
   746  00F50B  0001               	dw	1
   747  00F50D  0000               	dw	0
   748  00F50F  000E               	dw	14
   749  00F511  0000               	dw	0
   750  00F513  0010               	dw	16
   751  00F515  0000               	dw	0
   752  00F517  0000               	dw	0
   753  00F519  0009               	dw	9
   754  00F51B  0000               	dw	0
   755  00F51D  0000               	dw	0
   756  00F51F  0000               	dw	0
   757  00F521  0000               	dw	0
   758  00F523  00FE               	dw	254
   759  00F525  001F               	dw	31
   760  00F527  0042               	dw	66
   761  00F529  0010               	dw	16
   762  00F52B  0042               	dw	66
   763  00F52D  0010               	dw	16
   764  00F52F  0064               	dw	100
   765  00F531  0010               	dw	16
   766  00F533  0098               	dw	152
   767  00F535  0008               	dw	8
   768  00F537  0000               	dw	0
   769  00F539  0007               	dw	7
   770  00F53B  0000               	dw	0
   771  00F53D  0000               	dw	0
   772  00F53F  000D               	dw	13
   773  00F541  0000               	dw	0
   774  00F543  0000               	dw	0
   775  00F545  00F0               	dw	240
   776  00F547  0003               	dw	3
   777  00F549  0008               	dw	8
   778  00F54B  0004               	dw	4
   779  00F54D  0004               	dw	4
   780  00F54F  0008               	dw	8
   781  00F551  0002               	dw	2
   782  00F553  0010               	dw	16
   783  00F555  0002               	dw	2
   784  00F557  0010               	dw	16
   785  00F559  0002               	dw	2
   786  00F55B  0010               	dw	16
   787  00F55D  0002               	dw	2
   788  00F55F  0010               	dw	16
   789  00F561  0002               	dw	2
   790  00F563  0010               	dw	16
   791  00F565  0004               	dw	4
   792  00F567  0008               	dw	8
   793  00F569  0004               	dw	4
   794  00F56B  0008               	dw	8
   795  00F56D  0008               	dw	8
   796  00F56F  0004               	dw	4
   797  00F571  0000               	dw	0
   798  00F573  0000               	dw	0
   799  00F575  000C               	dw	12
   800  00F577  0000               	dw	0
   801  00F579  0000               	dw	0
   802  00F57B  0000               	dw	0
   803  00F57D  0000               	dw	0
   804  00F57F  00FE               	dw	254
   805  00F581  001F               	dw	31
   806  00F583  0002               	dw	2
   807  00F585  0010               	dw	16
   808  00F587  0002               	dw	2
   809  00F589  0010               	dw	16
   810  00F58B  0002               	dw	2
   811  00F58D  0010               	dw	16
   812  00F58F  0002               	dw	2
   813  00F591  0010               	dw	16
   814  00F593  0002               	dw	2
   815  00F595  0010               	dw	16
   816  00F597  0004               	dw	4
   817  00F599  0008               	dw	8
   818  00F59B  0008               	dw	8
   819  00F59D  0004               	dw	4
   820  00F59F  00F0               	dw	240
   821  00F5A1  0003               	dw	3
   822  00F5A3  0000               	dw	0
   823  00F5A5  0000               	dw	0
   824  00F5A7  0009               	dw	9
   825  00F5A9  0000               	dw	0
   826  00F5AB  0000               	dw	0
   827  00F5AD  0000               	dw	0
   828  00F5AF  0000               	dw	0
   829  00F5B1  00FE               	dw	254
   830  00F5B3  001F               	dw	31
   831  00F5B5  0042               	dw	66
   832  00F5B7  0010               	dw	16
   833  00F5B9  0042               	dw	66
   834  00F5BB  0010               	dw	16
   835  00F5BD  0042               	dw	66
   836  00F5BF  0010               	dw	16
   837  00F5C1  0042               	dw	66
   838  00F5C3  0010               	dw	16
   839  00F5C5  0042               	dw	66
   840  00F5C7  0010               	dw	16
   841  00F5C9  0000               	dw	0
   842  00F5CB  0000               	dw	0
   843  00F5CD  0008               	dw	8
   844  00F5CF  0000               	dw	0
   845  00F5D1  0000               	dw	0
   846  00F5D3  0000               	dw	0
   847  00F5D5  0000               	dw	0
   848  00F5D7  00FE               	dw	254
   849  00F5D9  001F               	dw	31
   850  00F5DB  0042               	dw	66
   851  00F5DD  0000               	dw	0
   852  00F5DF  0042               	dw	66
   853  00F5E1  0000               	dw	0
   854  00F5E3  0042               	dw	66
   855  00F5E5  0000               	dw	0
   856  00F5E7  0042               	dw	66
   857  00F5E9  0000               	dw	0
   858  00F5EB  0000               	dw	0
   859  00F5ED  0000               	dw	0
   860  00F5EF  000E               	dw	14
   861  00F5F1  0000               	dw	0
   862  00F5F3  0000               	dw	0
   863  00F5F5  00F0               	dw	240
   864  00F5F7  0003               	dw	3
   865  00F5F9  0008               	dw	8
   866  00F5FB  0004               	dw	4
   867  00F5FD  0004               	dw	4
   868  00F5FF  0008               	dw	8
   869  00F601  0002               	dw	2
   870  00F603  0010               	dw	16
   871  00F605  0002               	dw	2
   872  00F607  0010               	dw	16
   873  00F609  0002               	dw	2
   874  00F60B  0010               	dw	16
   875  00F60D  0002               	dw	2
   876  00F60F  0010               	dw	16
   877  00F611  0082               	dw	130
   878  00F613  0010               	dw	16
   879  00F615  0084               	dw	132
   880  00F617  0010               	dw	16
   881  00F619  0084               	dw	132
   882  00F61B  0008               	dw	8
   883  00F61D  0088               	dw	136
   884  00F61F  0004               	dw	4
   885  00F621  0080               	dw	128
   886  00F623  0003               	dw	3
   887  00F625  0000               	dw	0
   888  00F627  0000               	dw	0
   889  00F629  000A               	dw	10
   890  00F62B  0000               	dw	0
   891  00F62D  0000               	dw	0
   892  00F62F  0000               	dw	0
   893  00F631  0000               	dw	0
   894  00F633  00FE               	dw	254
   895  00F635  001F               	dw	31
   896  00F637  0040               	dw	64
   897  00F639  0000               	dw	0
   898  00F63B  0040               	dw	64
   899  00F63D  0000               	dw	0
   900  00F63F  0040               	dw	64
   901  00F641  0000               	dw	0
   902  00F643  0040               	dw	64
   903  00F645  0000               	dw	0
   904  00F647  0040               	dw	64
   905  00F649  0000               	dw	0
   906  00F64B  00FE               	dw	254
   907  00F64D  001F               	dw	31
   908  00F64F  0000               	dw	0
   909  00F651  0000               	dw	0
   910  00F653  0004               	dw	4
   911  00F655  0000               	dw	0
   912  00F657  0000               	dw	0
   913  00F659  0000               	dw	0
   914  00F65B  0000               	dw	0
   915  00F65D  00FE               	dw	254
   916  00F65F  001F               	dw	31
   917  00F661  0000               	dw	0
   918  00F663  0000               	dw	0
   919  00F665  0007               	dw	7
   920  00F667  0000               	dw	0
   921  00F669  0000               	dw	0
   922  00F66B  0000               	dw	0
   923  00F66D  0008               	dw	8
   924  00F66F  0000               	dw	0
   925  00F671  0010               	dw	16
   926  00F673  0000               	dw	0
   927  00F675  0010               	dw	16
   928  00F677  0000               	dw	0
   929  00F679  0008               	dw	8
   930  00F67B  00FE               	dw	254
   931  00F67D  0007               	dw	7
   932  00F67F  0000               	dw	0
   933  00F681  0000               	dw	0
   934  00F683  0009               	dw	9
   935  00F685  0000               	dw	0
   936  00F687  0000               	dw	0
   937  00F689  0000               	dw	0
   938  00F68B  0000               	dw	0
   939  00F68D  00FE               	dw	254
   940  00F68F  001F               	dw	31
   941  00F691  0060               	dw	96
   942  00F693  0000               	dw	0
   943  00F695  0090               	dw	144
   944  00F697  0001               	dw	1
   945  00F699  0008               	dw	8
   946  00F69B  0002               	dw	2
   947  00F69D  0004               	dw	4
   948  00F69F  000C               	dw	12
   949  00F6A1  0002               	dw	2
   950  00F6A3  0010               	dw	16
   951  00F6A5  0000               	dw	0
   952  00F6A7  0000               	dw	0
   953  00F6A9  0008               	dw	8
   954  00F6AB  0000               	dw	0
   955  00F6AD  0000               	dw	0
   956  00F6AF  0000               	dw	0
   957  00F6B1  0000               	dw	0
   958  00F6B3  00FE               	dw	254
   959  00F6B5  001F               	dw	31
   960  00F6B7  0000               	dw	0
   961  00F6B9  0010               	dw	16
   962  00F6BB  0000               	dw	0
   963  00F6BD  0010               	dw	16
   964  00F6BF  0000               	dw	0
   965  00F6C1  0010               	dw	16
   966  00F6C3  0000               	dw	0
   967  00F6C5  0010               	dw	16
   968  00F6C7  0000               	dw	0
   969  00F6C9  0000               	dw	0
   970  00F6CB  000F               	dw	15
   971  00F6CD  0000               	dw	0
   972  00F6CF  0000               	dw	0
   973  00F6D1  0000               	dw	0
   974  00F6D3  001C               	dw	28
   975  00F6D5  00F8               	dw	248
   976  00F6D7  0003               	dw	3
   977  00F6D9  0006               	dw	6
   978  00F6DB  0000               	dw	0
   979  00F6DD  0038               	dw	56
   980  00F6DF  0000               	dw	0
   981  00F6E1  00C0               	dw	192
   982  00F6E3  0001               	dw	1
   983  00F6E5  0000               	dw	0
   984  00F6E7  000E               	dw	14
   985  00F6E9  0000               	dw	0
   986  00F6EB  0010               	dw	16
   987  00F6ED  0000               	dw	0
   988  00F6EF  000E               	dw	14
   989  00F6F1  00C0               	dw	192
   990  00F6F3  0001               	dw	1
   991  00F6F5  0038               	dw	56
   992  00F6F7  0000               	dw	0
   993  00F6F9  0006               	dw	6
   994  00F6FB  0000               	dw	0
   995  00F6FD  00F8               	dw	248
   996  00F6FF  0003               	dw	3
   997  00F701  0000               	dw	0
   998  00F703  001C               	dw	28
   999  00F705  0000               	dw	0
  1000  00F707  0000               	dw	0
  1001  00F709  000B               	dw	11
  1002  00F70B  0000               	dw	0
  1003  00F70D  0000               	dw	0
  1004  00F70F  0000               	dw	0
  1005  00F711  0000               	dw	0
  1006  00F713  00FE               	dw	254
  1007  00F715  001F               	dw	31
  1008  00F717  0008               	dw	8
  1009  00F719  0000               	dw	0
  1010  00F71B  0030               	dw	48
  1011  00F71D  0000               	dw	0
  1012  00F71F  0040               	dw	64
  1013  00F721  0000               	dw	0
  1014  00F723  0080               	dw	128
  1015  00F725  0000               	dw	0
  1016  00F727  0000               	dw	0
  1017  00F729  0003               	dw	3
  1018  00F72B  0000               	dw	0
  1019  00F72D  0004               	dw	4
  1020  00F72F  00FE               	dw	254
  1021  00F731  001F               	dw	31
  1022  00F733  0000               	dw	0
  1023  00F735  0000               	dw	0
  1024  00F737  000E               	dw	14
  1025  00F739  0000               	dw	0
  1026  00F73B  0000               	dw	0
  1027  00F73D  00F0               	dw	240
  1028  00F73F  0003               	dw	3
  1029  00F741  0008               	dw	8
  1030  00F743  0004               	dw	4
  1031  00F745  0004               	dw	4
  1032  00F747  0008               	dw	8
  1033  00F749  0002               	dw	2
  1034  00F74B  0010               	dw	16
  1035  00F74D  0002               	dw	2
  1036  00F74F  0010               	dw	16
  1037  00F751  0002               	dw	2
  1038  00F753  0010               	dw	16
  1039  00F755  0002               	dw	2
  1040  00F757  0010               	dw	16
  1041  00F759  0002               	dw	2
  1042  00F75B  0010               	dw	16
  1043  00F75D  0002               	dw	2
  1044  00F75F  0010               	dw	16
  1045  00F761  0004               	dw	4
  1046  00F763  0008               	dw	8
  1047  00F765  0008               	dw	8
  1048  00F767  0004               	dw	4
  1049  00F769  00F0               	dw	240
  1050  00F76B  0003               	dw	3
  1051  00F76D  0000               	dw	0
  1052  00F76F  0000               	dw	0
  1053  00F771  0009               	dw	9
  1054  00F773  0000               	dw	0
  1055  00F775  0000               	dw	0
  1056  00F777  0000               	dw	0
  1057  00F779  0000               	dw	0
  1058  00F77B  00FE               	dw	254
  1059  00F77D  001F               	dw	31
  1060  00F77F  0042               	dw	66
  1061  00F781  0000               	dw	0
  1062  00F783  0042               	dw	66
  1063  00F785  0000               	dw	0
  1064  00F787  0042               	dw	66
  1065  00F789  0000               	dw	0
  1066  00F78B  0024               	dw	36
  1067  00F78D  0000               	dw	0
  1068  00F78F  0018               	dw	24
  1069  00F791  0000               	dw	0
  1070  00F793  0000               	dw	0
  1071  00F795  0000               	dw	0
  1072  00F797  000E               	dw	14
  1073  00F799  0000               	dw	0
  1074  00F79B  0000               	dw	0
  1075  00F79D  00F0               	dw	240
  1076  00F79F  0003               	dw	3
  1077  00F7A1  0008               	dw	8
  1078  00F7A3  0004               	dw	4
  1079  00F7A5  0004               	dw	4
  1080  00F7A7  0008               	dw	8
  1081  00F7A9  0002               	dw	2
  1082  00F7AB  0010               	dw	16
  1083  00F7AD  0002               	dw	2
  1084  00F7AF  0010               	dw	16
  1085  00F7B1  0002               	dw	2
  1086  00F7B3  0010               	dw	16
  1087  00F7B5  0002               	dw	2
  1088  00F7B7  0011               	dw	17
  1089  00F7B9  0002               	dw	2
  1090  00F7BB  0012               	dw	18
  1091  00F7BD  0002               	dw	2
  1092  00F7BF  000C               	dw	12
  1093  00F7C1  0004               	dw	4
  1094  00F7C3  0008               	dw	8
  1095  00F7C5  0008               	dw	8
  1096  00F7C7  0016               	dw	22
  1097  00F7C9  00F0               	dw	240
  1098  00F7CB  0021               	dw	33
  1099  00F7CD  0000               	dw	0
  1100  00F7CF  0000               	dw	0
  1101  00F7D1  000A               	dw	10
  1102  00F7D3  0000               	dw	0
  1103  00F7D5  0000               	dw	0
  1104  00F7D7  0000               	dw	0
  1105  00F7D9  0000               	dw	0
  1106  00F7DB  00FE               	dw	254
  1107  00F7DD  001F               	dw	31
  1108  00F7DF  0042               	dw	66
  1109  00F7E1  0000               	dw	0
  1110  00F7E3  00C2               	dw	194
  1111  00F7E5  0000               	dw	0
  1112  00F7E7  0042               	dw	66
  1113  00F7E9  0001               	dw	1
  1114  00F7EB  0042               	dw	66
  1115  00F7ED  0006               	dw	6
  1116  00F7EF  0024               	dw	36
  1117  00F7F1  0008               	dw	8
  1118  00F7F3  0018               	dw	24
  1119  00F7F5  0010               	dw	16
  1120  00F7F7  0000               	dw	0
  1121  00F7F9  0000               	dw	0
  1122  00F7FB  0008               	dw	8
  1123  00F7FD  0000               	dw	0
  1124  00F7FF  0004               	dw	4
  1125  00F801  0018               	dw	24
  1126  00F803  0008               	dw	8
  1127  00F805  0024               	dw	36
  1128  00F807  0010               	dw	16
  1129  00F809  0042               	dw	66
  1130  00F80B  0010               	dw	16
  1131  00F80D  0042               	dw	66
  1132  00F80F  0010               	dw	16
  1133  00F811  0084               	dw	132
  1134  00F813  0008               	dw	8
  1135  00F815  0008               	dw	8
  1136  00F817  0007               	dw	7
  1137  00F819  0000               	dw	0
  1138  00F81B  0000               	dw	0
  1139  00F81D  0008               	dw	8
  1140  00F81F  0002               	dw	2
  1141  00F821  0000               	dw	0
  1142  00F823  0002               	dw	2
  1143  00F825  0000               	dw	0
  1144  00F827  0002               	dw	2
  1145  00F829  0000               	dw	0
  1146  00F82B  00FE               	dw	254
  1147  00F82D  001F               	dw	31
  1148  00F82F  0002               	dw	2
  1149  00F831  0000               	dw	0
  1150  00F833  0002               	dw	2
  1151  00F835  0000               	dw	0
  1152  00F837  0002               	dw	2
  1153  00F839  0000               	dw	0
  1154  00F83B  0000               	dw	0
  1155  00F83D  0000               	dw	0
  1156  00F83F  000A               	dw	10
  1157  00F841  0000               	dw	0
  1158  00F843  0000               	dw	0
  1159  00F845  0000               	dw	0
  1160  00F847  0000               	dw	0
  1161  00F849  00FE               	dw	254
  1162  00F84B  0007               	dw	7
  1163  00F84D  0000               	dw	0
  1164  00F84F  0008               	dw	8
  1165  00F851  0000               	dw	0
  1166  00F853  0010               	dw	16
  1167  00F855  0000               	dw	0
  1168  00F857  0010               	dw	16
  1169  00F859  0000               	dw	0
  1170  00F85B  0010               	dw	16
  1171  00F85D  0000               	dw	0
  1172  00F85F  0008               	dw	8
  1173  00F861  00FE               	dw	254
  1174  00F863  0007               	dw	7
  1175  00F865  0000               	dw	0
  1176  00F867  0000               	dw	0
  1177  00F869  000C               	dw	12
  1178  00F86B  0002               	dw	2
  1179  00F86D  0000               	dw	0
  1180  00F86F  001C               	dw	28
  1181  00F871  0000               	dw	0
  1182  00F873  0060               	dw	96
  1183  00F875  0000               	dw	0
  1184  00F877  0080               	dw	128
  1185  00F879  0001               	dw	1
  1186  00F87B  0000               	dw	0
  1187  00F87D  000E               	dw	14
  1188  00F87F  0000               	dw	0
  1189  00F881  0010               	dw	16
  1190  00F883  0000               	dw	0
  1191  00F885  000E               	dw	14
  1192  00F887  0080               	dw	128
  1193  00F889  0001               	dw	1
  1194  00F88B  0060               	dw	96
  1195  00F88D  0000               	dw	0
  1196  00F88F  001C               	dw	28
  1197  00F891  0000               	dw	0
  1198  00F893  0002               	dw	2
  1199  00F895  0000               	dw	0
  1200  00F897  0000               	dw	0
  1201  00F899  0000               	dw	0
  1202  00F89B  000F               	dw	15
  1203  00F89D  0000               	dw	0
  1204  00F89F  0000               	dw	0
  1205  00F8A1  0006               	dw	6
  1206  00F8A3  0000               	dw	0
  1207  00F8A5  0078               	dw	120
  1208  00F8A7  0000               	dw	0
  1209  00F8A9  0080               	dw	128
  1210  00F8AB  0007               	dw	7
  1211  00F8AD  0000               	dw	0
  1212  00F8AF  0018               	dw	24
  1213  00F8B1  0080               	dw	128
  1214  00F8B3  0007               	dw	7
  1215  00F8B5  0078               	dw	120
  1216  00F8B7  0000               	dw	0
  1217  00F8B9  0006               	dw	6
  1218  00F8BB  0000               	dw	0
  1219  00F8BD  0078               	dw	120
  1220  00F8BF  0000               	dw	0
  1221  00F8C1  0080               	dw	128
  1222  00F8C3  0007               	dw	7
  1223  00F8C5  0000               	dw	0
  1224  00F8C7  0018               	dw	24
  1225  00F8C9  0080               	dw	128
  1226  00F8CB  0007               	dw	7
  1227  00F8CD  0078               	dw	120
  1228  00F8CF  0000               	dw	0
  1229  00F8D1  0006               	dw	6
  1230  00F8D3  0000               	dw	0
  1231  00F8D5  0000               	dw	0
  1232  00F8D7  0000               	dw	0
  1233  00F8D9  0009               	dw	9
  1234  00F8DB  0000               	dw	0
  1235  00F8DD  0000               	dw	0
  1236  00F8DF  0006               	dw	6
  1237  00F8E1  0018               	dw	24
  1238  00F8E3  0008               	dw	8
  1239  00F8E5  0004               	dw	4
  1240  00F8E7  0030               	dw	48
  1241  00F8E9  0003               	dw	3
  1242  00F8EB  00C0               	dw	192
  1243  00F8ED  0000               	dw	0
  1244  00F8EF  0030               	dw	48
  1245  00F8F1  0003               	dw	3
  1246  00F8F3  0008               	dw	8
  1247  00F8F5  0004               	dw	4
  1248  00F8F7  0006               	dw	6
  1249  00F8F9  0018               	dw	24
  1250  00F8FB  0000               	dw	0
  1251  00F8FD  0000               	dw	0
  1252  00F8FF  000B               	dw	11
  1253  00F901  0000               	dw	0
  1254  00F903  0000               	dw	0
  1255  00F905  0002               	dw	2
  1256  00F907  0000               	dw	0
  1257  00F909  0004               	dw	4
  1258  00F90B  0000               	dw	0
  1259  00F90D  0018               	dw	24
  1260  00F90F  0000               	dw	0
  1261  00F911  0060               	dw	96
  1262  00F913  0000               	dw	0
  1263  00F915  0080               	dw	128
  1264  00F917  001F               	dw	31
  1265  00F919  0060               	dw	96
  1266  00F91B  0000               	dw	0
  1267  00F91D  0018               	dw	24
  1268  00F91F  0000               	dw	0
  1269  00F921  0004               	dw	4
  1270  00F923  0000               	dw	0
  1271  00F925  0002               	dw	2
  1272  00F927  0000               	dw	0
  1273  00F929  0000               	dw	0
  1274  00F92B  0000               	dw	0
  1275  00F92D  0008               	dw	8
  1276  00F92F  0002               	dw	2
  1277  00F931  0010               	dw	16
  1278  00F933  0002               	dw	2
  1279  00F935  001C               	dw	28
  1280  00F937  0002               	dw	2
  1281  00F939  0013               	dw	19
  1282  00F93B  00C2               	dw	194
  1283  00F93D  0010               	dw	16
  1284  00F93F  0032               	dw	50
  1285  00F941  0010               	dw	16
  1286  00F943  000E               	dw	14
  1287  00F945  0010               	dw	16
  1288  00F947  0002               	dw	2
  1289  00F949  0010               	dw	16
  1290  00F94B  0000               	dw	0
  1291  00F94D  0000               	dw	0
  1292  00F94F  0006               	dw	6
  1293  00F951  0000               	dw	0
  1294  00F953  0000               	dw	0
  1295  00F955  0000               	dw	0
  1296  00F957  0000               	dw	0
  1297  00F959  00FE               	dw	254
  1298  00F95B  00FF               	dw	255
  1299  00F95D  0002               	dw	2
  1300  00F95F  0080               	dw	128
  1301  00F961  0002               	dw	2
  1302  00F963  0080               	dw	128
  1303  00F965  0000               	dw	0
  1304  00F967  0000               	dw	0
  1305  00F969  000A               	dw	10
  1306  00F96B  0002               	dw	2
  1307  00F96D  0000               	dw	0
  1308  00F96F  000C               	dw	12
  1309  00F971  0000               	dw	0
  1310  00F973  0010               	dw	16
  1311  00F975  0000               	dw	0
  1312  00F977  0060               	dw	96
  1313  00F979  0000               	dw	0
  1314  00F97B  0080               	dw	128
  1315  00F97D  0001               	dw	1
  1316  00F97F  0000               	dw	0
  1317  00F981  0006               	dw	6
  1318  00F983  0000               	dw	0
  1319  00F985  0008               	dw	8
  1320  00F987  0000               	dw	0
  1321  00F989  0030               	dw	48
  1322  00F98B  0000               	dw	0
  1323  00F98D  0040               	dw	64
  1324  00F98F  0000               	dw	0
  1325  00F991  0000               	dw	0
  1326  00F993  0005               	dw	5
  1327  00F995  0000               	dw	0
  1328  00F997  0000               	dw	0
  1329  00F999  0002               	dw	2
  1330  00F99B  0080               	dw	128
  1331  00F99D  0002               	dw	2
  1332  00F99F  0080               	dw	128
  1333  00F9A1  00FE               	dw	254
  1334  00F9A3  00FF               	dw	255
  1335  00F9A5  0000               	dw	0
  1336  00F9A7  0000               	dw	0
  1337  00F9A9  000B               	dw	11
  1338  00F9AB  0000               	dw	0
  1339  00F9AD  0000               	dw	0
  1340  00F9AF  0000               	dw	0
  1341  00F9B1  0002               	dw	2
  1342  00F9B3  0080               	dw	128
  1343  00F9B5  0001               	dw	1
  1344  00F9B7  0070               	dw	112
  1345  00F9B9  0000               	dw	0
  1346  00F9BB  000C               	dw	12
  1347  00F9BD  0000               	dw	0
  1348  00F9BF  0002               	dw	2
  1349  00F9C1  0000               	dw	0
  1350  00F9C3  000C               	dw	12
  1351  00F9C5  0000               	dw	0
  1352  00F9C7  0070               	dw	112
  1353  00F9C9  0000               	dw	0
  1354  00F9CB  0080               	dw	128
  1355  00F9CD  0001               	dw	1
  1356  00F9CF  0000               	dw	0
  1357  00F9D1  0002               	dw	2
  1358  00F9D3  0000               	dw	0
  1359  00F9D5  0000               	dw	0
  1360  00F9D7  0009               	dw	9
  1361  00F9D9  0000               	dw	0
  1362  00F9DB  0040               	dw	64
  1363  00F9DD  0000               	dw	0
  1364  00F9DF  0040               	dw	64
  1365  00F9E1  0000               	dw	0
  1366  00F9E3  0040               	dw	64
  1367  00F9E5  0000               	dw	0
  1368  00F9E7  0040               	dw	64
  1369  00F9E9  0000               	dw	0
  1370  00F9EB  0040               	dw	64
  1371  00F9ED  0000               	dw	0
  1372  00F9EF  0040               	dw	64
  1373  00F9F1  0000               	dw	0
  1374  00F9F3  0040               	dw	64
  1375  00F9F5  0000               	dw	0
  1376  00F9F7  0040               	dw	64
  1377  00F9F9  0000               	dw	0
  1378  00F9FB  0000               	dw	0
  1379  00F9FD  0005               	dw	5
  1380  00F9FF  0000               	dw	0
  1381  00FA01  0000               	dw	0
  1382  00FA03  0000               	dw	0
  1383  00FA05  0000               	dw	0
  1384  00FA07  0002               	dw	2
  1385  00FA09  0000               	dw	0
  1386  00FA0B  0004               	dw	4
  1387  00FA0D  0000               	dw	0
  1388  00FA0F  0000               	dw	0
  1389  00FA11  0000               	dw	0
  1390  00FA13  000B               	dw	11
  1391  00FA15  0000               	dw	0
  1392  00FA17  0000               	dw	0
  1393  00FA19  00C0               	dw	192
  1394  00FA1B  0007               	dw	7
  1395  00FA1D  0020               	dw	32
  1396  00FA1F  0008               	dw	8
  1397  00FA21  0010               	dw	16
  1398  00FA23  0010               	dw	16
  1399  00FA25  0010               	dw	16
  1400  00FA27  0010               	dw	16
  1401  00FA29  0010               	dw	16
  1402  00FA2B  0010               	dw	16
  1403  00FA2D  0010               	dw	16
  1404  00FA2F  0010               	dw	16
  1405  00FA31  0010               	dw	16
  1406  00FA33  0010               	dw	16
  1407  00FA35  0020               	dw	32
  1408  00FA37  0008               	dw	8
  1409  00FA39  00F0               	dw	240
  1410  00FA3B  001F               	dw	31
  1411  00FA3D  0000               	dw	0
  1412  00FA3F  0000               	dw	0
  1413  00FA41  000B               	dw	11
  1414  00FA43  0000               	dw	0
  1415  00FA45  0000               	dw	0
  1416  00FA47  00FE               	dw	254
  1417  00FA49  001F               	dw	31
  1418  00FA4B  0020               	dw	32
  1419  00FA4D  0008               	dw	8
  1420  00FA4F  0010               	dw	16
  1421  00FA51  0010               	dw	16
  1422  00FA53  0010               	dw	16
  1423  00FA55  0010               	dw	16
  1424  00FA57  0010               	dw	16
  1425  00FA59  0010               	dw	16
  1426  00FA5B  0010               	dw	16
  1427  00FA5D  0010               	dw	16
  1428  00FA5F  0010               	dw	16
  1429  00FA61  0010               	dw	16
  1430  00FA63  0020               	dw	32
  1431  00FA65  0008               	dw	8
  1432  00FA67  00C0               	dw	192
  1433  00FA69  0007               	dw	7
  1434  00FA6B  0000               	dw	0
  1435  00FA6D  0000               	dw	0
  1436  00FA6F  000A               	dw	10
  1437  00FA71  0000               	dw	0
  1438  00FA73  0000               	dw	0
  1439  00FA75  00C0               	dw	192
  1440  00FA77  0007               	dw	7
  1441  00FA79  0020               	dw	32
  1442  00FA7B  0008               	dw	8
  1443  00FA7D  0010               	dw	16
  1444  00FA7F  0010               	dw	16
  1445  00FA81  0010               	dw	16
  1446  00FA83  0010               	dw	16
  1447  00FA85  0010               	dw	16
  1448  00FA87  0010               	dw	16
  1449  00FA89  0010               	dw	16
  1450  00FA8B  0010               	dw	16
  1451  00FA8D  0020               	dw	32
  1452  00FA8F  0008               	dw	8
  1453  00FA91  0040               	dw	64
  1454  00FA93  0004               	dw	4
  1455  00FA95  0000               	dw	0
  1456  00FA97  0000               	dw	0
  1457  00FA99  000B               	dw	11
  1458  00FA9B  0000               	dw	0
  1459  00FA9D  0000               	dw	0
  1460  00FA9F  00C0               	dw	192
  1461  00FAA1  0007               	dw	7
  1462  00FAA3  0020               	dw	32
  1463  00FAA5  0008               	dw	8
  1464  00FAA7  0010               	dw	16
  1465  00FAA9  0010               	dw	16
  1466  00FAAB  0010               	dw	16
  1467  00FAAD  0010               	dw	16
  1468  00FAAF  0010               	dw	16
  1469  00FAB1  0010               	dw	16
  1470  00FAB3  0010               	dw	16
  1471  00FAB5  0010               	dw	16
  1472  00FAB7  0010               	dw	16
  1473  00FAB9  0010               	dw	16
  1474  00FABB  0020               	dw	32
  1475  00FABD  0008               	dw	8
  1476  00FABF  00FE               	dw	254
  1477  00FAC1  001F               	dw	31
  1478  00FAC3  0000               	dw	0
  1479  00FAC5  0000               	dw	0
  1480  00FAC7  000A               	dw	10
  1481  00FAC9  0000               	dw	0
  1482  00FACB  0000               	dw	0
  1483  00FACD  00C0               	dw	192
  1484  00FACF  0007               	dw	7
  1485  00FAD1  0020               	dw	32
  1486  00FAD3  0009               	dw	9
  1487  00FAD5  0010               	dw	16
  1488  00FAD7  0011               	dw	17
  1489  00FAD9  0010               	dw	16
  1490  00FADB  0011               	dw	17
  1491  00FADD  0010               	dw	16
  1492  00FADF  0011               	dw	17
  1493  00FAE1  0010               	dw	16
  1494  00FAE3  0011               	dw	17
  1495  00FAE5  0020               	dw	32
  1496  00FAE7  0009               	dw	9
  1497  00FAE9  00C0               	dw	192
  1498  00FAEB  0005               	dw	5
  1499  00FAED  0000               	dw	0
  1500  00FAEF  0000               	dw	0
  1501  00FAF1  0006               	dw	6
  1502  00FAF3  0000               	dw	0
  1503  00FAF5  0000               	dw	0
  1504  00FAF7  0010               	dw	16
  1505  00FAF9  0000               	dw	0
  1506  00FAFB  00FC               	dw	252
  1507  00FAFD  001F               	dw	31
  1508  00FAFF  0012               	dw	18
  1509  00FB01  0000               	dw	0
  1510  00FB03  0012               	dw	18
  1511  00FB05  0000               	dw	0
  1512  00FB07  0000               	dw	0
  1513  00FB09  0000               	dw	0
  1514  00FB0B  000B               	dw	11
  1515  00FB0D  0000               	dw	0
  1516  00FB0F  0000               	dw	0
  1517  00FB11  00C0               	dw	192
  1518  00FB13  0027               	dw	39
  1519  00FB15  0020               	dw	32
  1520  00FB17  0048               	dw	72
  1521  00FB19  0010               	dw	16
  1522  00FB1B  0090               	dw	144
  1523  00FB1D  0010               	dw	16
  1524  00FB1F  0090               	dw	144
  1525  00FB21  0010               	dw	16
  1526  00FB23  0090               	dw	144
  1527  00FB25  0010               	dw	16
  1528  00FB27  0090               	dw	144
  1529  00FB29  0010               	dw	16
  1530  00FB2B  0090               	dw	144
  1531  00FB2D  0020               	dw	32
  1532  00FB2F  0048               	dw	72
  1533  00FB31  00F0               	dw	240
  1534  00FB33  003F               	dw	63
  1535  00FB35  0000               	dw	0
  1536  00FB37  0000               	dw	0
  1537  00FB39  000A               	dw	10
  1538  00FB3B  0000               	dw	0
  1539  00FB3D  0000               	dw	0
  1540  00FB3F  00FE               	dw	254
  1541  00FB41  001F               	dw	31
  1542  00FB43  0020               	dw	32
  1543  00FB45  0000               	dw	0
  1544  00FB47  0010               	dw	16
  1545  00FB49  0000               	dw	0
  1546  00FB4B  0010               	dw	16
  1547  00FB4D  0000               	dw	0
  1548  00FB4F  0010               	dw	16
  1549  00FB51  0000               	dw	0
  1550  00FB53  0010               	dw	16
  1551  00FB55  0000               	dw	0
  1552  00FB57  0020               	dw	32
  1553  00FB59  0000               	dw	0
  1554  00FB5B  00C0               	dw	192
  1555  00FB5D  001F               	dw	31
  1556  00FB5F  0000               	dw	0
  1557  00FB61  0000               	dw	0
  1558  00FB63  0003               	dw	3
  1559  00FB65  0000               	dw	0
  1560  00FB67  0000               	dw	0
  1561  00FB69  00F6               	dw	246
  1562  00FB6B  001F               	dw	31
  1563  00FB6D  0000               	dw	0
  1564  00FB6F  0000               	dw	0
  1565  00FB71  0003               	dw	3
  1566  00FB73  0000               	dw	0
  1567  00FB75  0080               	dw	128
  1568  00FB77  00F6               	dw	246
  1569  00FB79  007F               	dw	127
  1570  00FB7B  0000               	dw	0
  1571  00FB7D  0000               	dw	0
  1572  00FB7F  0008               	dw	8
  1573  00FB81  0000               	dw	0
  1574  00FB83  0000               	dw	0
  1575  00FB85  00FE               	dw	254
  1576  00FB87  001F               	dw	31
  1577  00FB89  0000               	dw	0
  1578  00FB8B  0001               	dw	1
  1579  00FB8D  0080               	dw	128
  1580  00FB8F  0002               	dw	2
  1581  00FB91  0040               	dw	64
  1582  00FB93  0004               	dw	4
  1583  00FB95  0020               	dw	32
  1584  00FB97  0008               	dw	8
  1585  00FB99  0010               	dw	16
  1586  00FB9B  0010               	dw	16
  1587  00FB9D  0000               	dw	0
  1588  00FB9F  0000               	dw	0
  1589  00FBA1  0003               	dw	3
  1590  00FBA3  0000               	dw	0
  1591  00FBA5  0000               	dw	0
  1592  00FBA7  00FE               	dw	254
  1593  00FBA9  001F               	dw	31
  1594  00FBAB  0000               	dw	0
  1595  00FBAD  0000               	dw	0
  1596  00FBAF  000F               	dw	15
  1597  00FBB1  0000               	dw	0
  1598  00FBB3  0000               	dw	0
  1599  00FBB5  00F0               	dw	240
  1600  00FBB7  001F               	dw	31
  1601  00FBB9  0020               	dw	32
  1602  00FBBB  0000               	dw	0
  1603  00FBBD  0010               	dw	16
  1604  00FBBF  0000               	dw	0
  1605  00FBC1  0010               	dw	16
  1606  00FBC3  0000               	dw	0
  1607  00FBC5  0010               	dw	16
  1608  00FBC7  0000               	dw	0
  1609  00FBC9  0020               	dw	32
  1610  00FBCB  0000               	dw	0
  1611  00FBCD  00C0               	dw	192
  1612  00FBCF  001F               	dw	31
  1613  00FBD1  0020               	dw	32
  1614  00FBD3  0000               	dw	0
  1615  00FBD5  0010               	dw	16
  1616  00FBD7  0000               	dw	0
  1617  00FBD9  0010               	dw	16
  1618  00FBDB  0000               	dw	0
  1619  00FBDD  0010               	dw	16
  1620  00FBDF  0000               	dw	0
  1621  00FBE1  0020               	dw	32
  1622  00FBE3  0000               	dw	0
  1623  00FBE5  00C0               	dw	192
  1624  00FBE7  001F               	dw	31
  1625  00FBE9  0000               	dw	0
  1626  00FBEB  0000               	dw	0
  1627  00FBED  000A               	dw	10
  1628  00FBEF  0000               	dw	0
  1629  00FBF1  0000               	dw	0
  1630  00FBF3  00F0               	dw	240
  1631  00FBF5  001F               	dw	31
  1632  00FBF7  0020               	dw	32
  1633  00FBF9  0000               	dw	0
  1634  00FBFB  0010               	dw	16
  1635  00FBFD  0000               	dw	0
  1636  00FBFF  0010               	dw	16
  1637  00FC01  0000               	dw	0
  1638  00FC03  0010               	dw	16
  1639  00FC05  0000               	dw	0
  1640  00FC07  0010               	dw	16
  1641  00FC09  0000               	dw	0
  1642  00FC0B  0020               	dw	32
  1643  00FC0D  0000               	dw	0
  1644  00FC0F  00C0               	dw	192
  1645  00FC11  001F               	dw	31
  1646  00FC13  0000               	dw	0
  1647  00FC15  0000               	dw	0
  1648  00FC17  000A               	dw	10
  1649  00FC19  0000               	dw	0
  1650  00FC1B  0000               	dw	0
  1651  00FC1D  00C0               	dw	192
  1652  00FC1F  0007               	dw	7
  1653  00FC21  0020               	dw	32
  1654  00FC23  0008               	dw	8
  1655  00FC25  0010               	dw	16
  1656  00FC27  0010               	dw	16
  1657  00FC29  0010               	dw	16
  1658  00FC2B  0010               	dw	16
  1659  00FC2D  0010               	dw	16
  1660  00FC2F  0010               	dw	16
  1661  00FC31  0010               	dw	16
  1662  00FC33  0010               	dw	16
  1663  00FC35  0020               	dw	32
  1664  00FC37  0008               	dw	8
  1665  00FC39  00C0               	dw	192
  1666  00FC3B  0007               	dw	7
  1667  00FC3D  0000               	dw	0
  1668  00FC3F  0000               	dw	0
  1669  00FC41  000B               	dw	11
  1670  00FC43  0000               	dw	0
  1671  00FC45  0000               	dw	0
  1672  00FC47  00F0               	dw	240
  1673  00FC49  00FF               	dw	255
  1674  00FC4B  0020               	dw	32
  1675  00FC4D  0008               	dw	8
  1676  00FC4F  0010               	dw	16
  1677  00FC51  0010               	dw	16
  1678  00FC53  0010               	dw	16
  1679  00FC55  0010               	dw	16
  1680  00FC57  0010               	dw	16
  1681  00FC59  0010               	dw	16
  1682  00FC5B  0010               	dw	16
  1683  00FC5D  0010               	dw	16
  1684  00FC5F  0010               	dw	16
  1685  00FC61  0010               	dw	16
  1686  00FC63  0020               	dw	32
  1687  00FC65  0008               	dw	8
  1688  00FC67  00C0               	dw	192
  1689  00FC69  0007               	dw	7
  1690  00FC6B  0000               	dw	0
  1691  00FC6D  0000               	dw	0
  1692  00FC6F  000B               	dw	11
  1693  00FC71  0000               	dw	0
  1694  00FC73  0000               	dw	0
  1695  00FC75  00C0               	dw	192
  1696  00FC77  0007               	dw	7
  1697  00FC79  0020               	dw	32
  1698  00FC7B  0008               	dw	8
  1699  00FC7D  0010               	dw	16
  1700  00FC7F  0010               	dw	16
  1701  00FC81  0010               	dw	16
  1702  00FC83  0010               	dw	16
  1703  00FC85  0010               	dw	16
  1704  00FC87  0010               	dw	16
  1705  00FC89  0010               	dw	16
  1706  00FC8B  0010               	dw	16
  1707  00FC8D  0010               	dw	16
  1708  00FC8F  0010               	dw	16
  1709  00FC91  0020               	dw	32
  1710  00FC93  0008               	dw	8
  1711  00FC95  00F0               	dw	240
  1712  00FC97  00FF               	dw	255
  1713  00FC99  0000               	dw	0
  1714  00FC9B  0000               	dw	0
  1715  00FC9D  0006               	dw	6
  1716  00FC9F  0000               	dw	0
  1717  00FCA1  0000               	dw	0
  1718  00FCA3  00F0               	dw	240
  1719  00FCA5  001F               	dw	31
  1720  00FCA7  0020               	dw	32
  1721  00FCA9  0000               	dw	0
  1722  00FCAB  0010               	dw	16
  1723  00FCAD  0000               	dw	0
  1724  00FCAF  0010               	dw	16
  1725  00FCB1  0000               	dw	0
  1726  00FCB3  0000               	dw	0
  1727  00FCB5  0000               	dw	0
  1728  00FCB7  0006               	dw	6
  1729  00FCB9  0060               	dw	96
  1730  00FCBB  0008               	dw	8
  1731  00FCBD  0090               	dw	144
  1732  00FCBF  0010               	dw	16
  1733  00FCC1  0010               	dw	16
  1734  00FCC3  0011               	dw	17
  1735  00FCC5  0010               	dw	16
  1736  00FCC7  0011               	dw	17
  1737  00FCC9  0020               	dw	32
  1738  00FCCB  000E               	dw	14
  1739  00FCCD  0000               	dw	0
  1740  00FCCF  0000               	dw	0
  1741  00FCD1  0007               	dw	7
  1742  00FCD3  0000               	dw	0
  1743  00FCD5  0000               	dw	0
  1744  00FCD7  0010               	dw	16
  1745  00FCD9  0000               	dw	0
  1746  00FCDB  0010               	dw	16
  1747  00FCDD  0000               	dw	0
  1748  00FCDF  00FE               	dw	254
  1749  00FCE1  001F               	dw	31
  1750  00FCE3  0010               	dw	16
  1751  00FCE5  0000               	dw	0
  1752  00FCE7  0010               	dw	16
  1753  00FCE9  0000               	dw	0
  1754  00FCEB  0000               	dw	0
  1755  00FCED  0000               	dw	0
  1756  00FCEF  000A               	dw	10
  1757  00FCF1  0000               	dw	0
  1758  00FCF3  0000               	dw	0
  1759  00FCF5  00F0               	dw	240
  1760  00FCF7  0007               	dw	7
  1761  00FCF9  0000               	dw	0
  1762  00FCFB  0008               	dw	8
  1763  00FCFD  0000               	dw	0
  1764  00FCFF  0010               	dw	16
  1765  00FD01  0000               	dw	0
  1766  00FD03  0010               	dw	16
  1767  00FD05  0000               	dw	0
  1768  00FD07  0010               	dw	16
  1769  00FD09  0000               	dw	0
  1770  00FD0B  0010               	dw	16
  1771  00FD0D  0000               	dw	0
  1772  00FD0F  0008               	dw	8
  1773  00FD11  00F0               	dw	240
  1774  00FD13  0007               	dw	7
  1775  00FD15  0000               	dw	0
  1776  00FD17  0000               	dw	0
  1777  00FD19  000A               	dw	10
  1778  00FD1B  0010               	dw	16
  1779  00FD1D  0000               	dw	0
  1780  00FD1F  0060               	dw	96
  1781  00FD21  0000               	dw	0
  1782  00FD23  0080               	dw	128
  1783  00FD25  0003               	dw	3
  1784  00FD27  0000               	dw	0
  1785  00FD29  000C               	dw	12
  1786  00FD2B  0000               	dw	0
  1787  00FD2D  0010               	dw	16
  1788  00FD2F  0000               	dw	0
  1789  00FD31  000C               	dw	12
  1790  00FD33  0080               	dw	128
  1791  00FD35  0003               	dw	3
  1792  00FD37  0060               	dw	96
  1793  00FD39  0000               	dw	0
  1794  00FD3B  0010               	dw	16
  1795  00FD3D  0000               	dw	0
  1796  00FD3F  0000               	dw	0
  1797  00FD41  0000               	dw	0
  1798  00FD43  000E               	dw	14
  1799  00FD45  0010               	dw	16
  1800  00FD47  0000               	dw	0
  1801  00FD49  00E0               	dw	224
  1802  00FD4B  0000               	dw	0
  1803  00FD4D  0000               	dw	0
  1804  00FD4F  0007               	dw	7
  1805  00FD51  0000               	dw	0
  1806  00FD53  0018               	dw	24
  1807  00FD55  0000               	dw	0
  1808  00FD57  0007               	dw	7
  1809  00FD59  00E0               	dw	224
  1810  00FD5B  0000               	dw	0
  1811  00FD5D  0010               	dw	16
  1812  00FD5F  0000               	dw	0
  1813  00FD61  00E0               	dw	224
  1814  00FD63  0000               	dw	0
  1815  00FD65  0000               	dw	0
  1816  00FD67  0007               	dw	7
  1817  00FD69  0000               	dw	0
  1818  00FD6B  0018               	dw	24
  1819  00FD6D  0000               	dw	0
  1820  00FD6F  0007               	dw	7
  1821  00FD71  00E0               	dw	224
  1822  00FD73  0000               	dw	0
  1823  00FD75  0010               	dw	16
  1824  00FD77  0000               	dw	0
  1825  00FD79  0000               	dw	0
  1826  00FD7B  0000               	dw	0
  1827  00FD7D  0009               	dw	9
  1828  00FD7F  0010               	dw	16
  1829  00FD81  0010               	dw	16
  1830  00FD83  0020               	dw	32
  1831  00FD85  0008               	dw	8
  1832  00FD87  0040               	dw	64
  1833  00FD89  0004               	dw	4
  1834  00FD8B  0080               	dw	128
  1835  00FD8D  0003               	dw	3
  1836  00FD8F  0080               	dw	128
  1837  00FD91  0003               	dw	3
  1838  00FD93  0040               	dw	64
  1839  00FD95  0004               	dw	4
  1840  00FD97  0020               	dw	32
  1841  00FD99  0008               	dw	8
  1842  00FD9B  0010               	dw	16
  1843  00FD9D  0010               	dw	16
  1844  00FD9F  0000               	dw	0
  1845  00FDA1  0000               	dw	0
  1846  00FDA3  0009               	dw	9
  1847  00FDA5  0010               	dw	16
  1848  00FDA7  0000               	dw	0
  1849  00FDA9  00E0               	dw	224
  1850  00FDAB  0000               	dw	0
  1851  00FDAD  0000               	dw	0
  1852  00FDAF  0083               	dw	131
  1853  00FDB1  0000               	dw	0
  1854  00FDB3  007C               	dw	124
  1855  00FDB5  0000               	dw	0
  1856  00FDB7  000C               	dw	12
  1857  00FDB9  0000               	dw	0
  1858  00FDBB  0003               	dw	3
  1859  00FDBD  00E0               	dw	224
  1860  00FDBF  0000               	dw	0
  1861  00FDC1  0010               	dw	16
  1862  00FDC3  0000               	dw	0
  1863  00FDC5  0000               	dw	0
  1864  00FDC7  0000               	dw	0
  1865  00FDC9  0008               	dw	8
  1866  00FDCB  0010               	dw	16
  1867  00FDCD  0010               	dw	16
  1868  00FDCF  0010               	dw	16
  1869  00FDD1  0018               	dw	24
  1870  00FDD3  0010               	dw	16
  1871  00FDD5  0016               	dw	22
  1872  00FDD7  0010               	dw	16
  1873  00FDD9  0011               	dw	17
  1874  00FDDB  00D0               	dw	208
  1875  00FDDD  0010               	dw	16
  1876  00FDDF  0030               	dw	48
  1877  00FDE1  0010               	dw	16
  1878  00FDE3  0010               	dw	16
  1879  00FDE5  0010               	dw	16
  1880  00FDE7  0000               	dw	0
  1881  00FDE9  0000               	dw	0
  1882  00FDEB  0007               	dw	7
  1883  00FDED  0000               	dw	0
  1884  00FDEF  0000               	dw	0
  1885  00FDF1  0000               	dw	0
  1886  00FDF3  0001               	dw	1
  1887  00FDF5  0080               	dw	128
  1888  00FDF7  0002               	dw	2
  1889  00FDF9  00FC               	dw	252
  1890  00FDFB  007E               	dw	126
  1891  00FDFD  0002               	dw	2
  1892  00FDFF  0080               	dw	128
  1893  00FE01  0002               	dw	2
  1894  00FE03  0080               	dw	128
  1895  00FE05  0000               	dw	0
  1896  00FE07  0000               	dw	0
  1897  00FE09  0007               	dw	7
  1898  00FE0B  0000               	dw	0
  1899  00FE0D  0000               	dw	0
  1900  00FE0F  0000               	dw	0
  1901  00FE11  0000               	dw	0
  1902  00FE13  0000               	dw	0
  1903  00FE15  0000               	dw	0
  1904  00FE17  0000               	dw	0
  1905  00FE19  0000               	dw	0
  1906  00FE1B  0000               	dw	0
  1907  00FE1D  0000               	dw	0
  1908  00FE1F  00FE               	dw	254
  1909  00FE21  00FF               	dw	255
  1910  00FE23  0000               	dw	0
  1911  00FE25  0000               	dw	0
  1912  00FE27  0006               	dw	6
  1913  00FE29  0002               	dw	2
  1914  00FE2B  0080               	dw	128
  1915  00FE2D  0002               	dw	2
  1916  00FE2F  0080               	dw	128
  1917  00FE31  00FC               	dw	252
  1918  00FE33  007E               	dw	126
  1919  00FE35  0080               	dw	128
  1920  00FE37  0002               	dw	2
  1921  00FE39  0000               	dw	0
  1922  00FE3B  0001               	dw	1
  1923  00FE3D  0000               	dw	0
  1924  00FE3F  0000               	dw	0
  1925  00FE41  000A               	dw	10
  1926  00FE43  0000               	dw	0
  1927  00FE45  0000               	dw	0
  1928  00FE47  0080               	dw	128
  1929  00FE49  0000               	dw	0
  1930  00FE4B  0040               	dw	64
  1931  00FE4D  0000               	dw	0
  1932  00FE4F  0040               	dw	64
  1933  00FE51  0000               	dw	0
  1934  00FE53  0040               	dw	64
  1935  00FE55  0000               	dw	0
  1936  00FE57  0080               	dw	128
  1937  00FE59  0000               	dw	0
  1938  00FE5B  0080               	dw	128
  1939  00FE5D  0000               	dw	0
  1940  00FE5F  0080               	dw	128
  1941  00FE61  0000               	dw	0
  1942  00FE63  0040               	dw	64
  1943  00FE65  0000               	dw	0
  1944  00FE67  0000               	dw	0
  1945  00FE69  0000               	dw	0
  1946  00FE6B  0005               	dw	5
  1947  00FE6D  00FF               	dw	255
  1948  00FE6F  000F               	dw	15
  1949  00FE71  0001               	dw	1
  1950  00FE73  0008               	dw	8
  1951  00FE75  0001               	dw	1
  1952  00FE77  0008               	dw	8
  1953  00FE79  00FF               	dw	255
  1954  00FE7B  000F               	dw	15
  1955  00FE7D  0000               	dw	0
  1956  00FE7F  0000               	dw	0
  1957  00FE81                     __end_of_font:
  1958                           	opt callstack 0
  1959  00FE81                     _spi_configuration:
  1960                           	opt callstack 0
  1961  00FE81  00                 	db	0
  1962  00FE82  40                 	db	64
  1963  00FE83  01                 	db	1
  1964  00FE84  00                 	db	0
  1965  00FE85                     __end_of_spi_configuration:
  1966                           	opt callstack 0
  1967  00FE85                     STR_1:
  1968  00FE85  0A                 	db	10
  1969  00FE86  0D                 	db	13
  1970  00FE87  20                 	db	32
  1971  00FE88  45                 	db	69	;'E'
  1972  00FE89  52                 	db	82	;'R'
  1973  00FE8A  52                 	db	82	;'R'
  1974  00FE8B  4F                 	db	79	;'O'
  1975  00FE8C  52                 	db	82	;'R'
  1976  00FE8D  20                 	db	32
  1977  00FE8E  41                 	db	65	;'A'
  1978  00FE8F  4C                 	db	76	;'L'
  1979  00FE90  41                 	db	65	;'A'
  1980  00FE91  52                 	db	82	;'R'
  1981  00FE92  4D                 	db	77	;'M'
  1982  00FE93  20                 	db	32
  1983  00FE94  48                 	db	72	;'H'
  1984  00FE95  79                 	db	121	;'y'
  1985  00FE96  73                 	db	115	;'s'
  1986  00FE97  74                 	db	116	;'t'
  1987  00FE98  65                 	db	101	;'e'
  1988  00FE99  72                 	db	114	;'r'
  1989  00FE9A  65                 	db	101	;'e'
  1990  00FE9B  73                 	db	115	;'s'
  1991  00FE9C  69                 	db	105	;'i'
  1992  00FE9D  73                 	db	115	;'s'
  1993  00FE9E  20                 	db	32
  1994  00FE9F  0A                 	db	10
  1995  00FEA0  0D                 	db	13
  1996  00FEA1  20                 	db	32
  1997  00FEA2  49                 	db	73	;'I'
  1998  00FEA3  6E                 	db	110	;'n'
  1999  00FEA4  73                 	db	115	;'s'
  2000  00FEA5  65                 	db	101	;'e'
  2001  00FEA6  72                 	db	114	;'r'
  2002  00FEA7  74                 	db	116	;'t'
  2003  00FEA8  20                 	db	32
  2004  00FEA9  61                 	db	97	;'a'
  2005  00FEAA  20                 	db	32
  2006  00FEAB  6E                 	db	110	;'n'
  2007  00FEAC  65                 	db	101	;'e'
  2008  00FEAD  77                 	db	119	;'w'
  2009  00FEAE  20                 	db	32
  2010  00FEAF  74                 	db	116	;'t'
  2011  00FEB0  75                 	db	117	;'u'
  2012  00FEB1  72                 	db	114	;'r'
  2013  00FEB2  6E                 	db	110	;'n'
  2014  00FEB3  20                 	db	32
  2015  00FEB4  4F                 	db	79	;'O'
  2016  00FEB5  4E                 	db	78	;'N'
  2017  00FEB6  20                 	db	32
  2018  00FEB7  76                 	db	118	;'v'
  2019  00FEB8  61                 	db	97	;'a'
  2020  00FEB9  6C                 	db	108	;'l'
  2021  00FEBA  75                 	db	117	;'u'
  2022  00FEBB  65                 	db	101	;'e'
  2023  00FEBC  20                 	db	32
  2024  00FEBD  62                 	db	98	;'b'
  2025  00FEBE  65                 	db	101	;'e'
  2026  00FEBF  74                 	db	116	;'t'
  2027  00FEC0  77                 	db	119	;'w'
  2028  00FEC1  65                 	db	101	;'e'
  2029  00FEC2  65                 	db	101	;'e'
  2030  00FEC3  6E                 	db	110	;'n'
  2031  00FEC4  20                 	db	32
  2032  00FEC5  30                 	db	48	;'0'
  2033  00FEC6  30                 	db	48	;'0'
  2034  00FEC7  2D                 	db	45
  2035  00FEC8  39                 	db	57	;'9'
  2036  00FEC9  39                 	db	57	;'9'
  2037  00FECA  3A                 	db	58	;':'
  2038  00FECB  00                 	db	0
  2039  00FECC                     STR_3:
  2040  00FECC  0A                 	db	10
  2041  00FECD  0D                 	db	13
  2042  00FECE  49                 	db	73	;'I'
  2043  00FECF  6E                 	db	110	;'n'
  2044  00FED0  73                 	db	115	;'s'
  2045  00FED1  65                 	db	101	;'e'
  2046  00FED2  72                 	db	114	;'r'
  2047  00FED3  74                 	db	116	;'t'
  2048  00FED4  20                 	db	32
  2049  00FED5  61                 	db	97	;'a'
  2050  00FED6  20                 	db	32
  2051  00FED7  6E                 	db	110	;'n'
  2052  00FED8  65                 	db	101	;'e'
  2053  00FED9  77                 	db	119	;'w'
  2054  00FEDA  20                 	db	32
  2055  00FEDB  74                 	db	116	;'t'
  2056  00FEDC  75                 	db	117	;'u'
  2057  00FEDD  72                 	db	114	;'r'
  2058  00FEDE  6E                 	db	110	;'n'
  2059  00FEDF  20                 	db	32
  2060  00FEE0  4F                 	db	79	;'O'
  2061  00FEE1  46                 	db	70	;'F'
  2062  00FEE2  46                 	db	70	;'F'
  2063  00FEE3  20                 	db	32
  2064  00FEE4  76                 	db	118	;'v'
  2065  00FEE5  61                 	db	97	;'a'
  2066  00FEE6  6C                 	db	108	;'l'
  2067  00FEE7  75                 	db	117	;'u'
  2068  00FEE8  65                 	db	101	;'e'
  2069  00FEE9  20                 	db	32
  2070  00FEEA  62                 	db	98	;'b'
  2071  00FEEB  65                 	db	101	;'e'
  2072  00FEEC  74                 	db	116	;'t'
  2073  00FEED  77                 	db	119	;'w'
  2074  00FEEE  65                 	db	101	;'e'
  2075  00FEEF  65                 	db	101	;'e'
  2076  00FEF0  6E                 	db	110	;'n'
  2077  00FEF1  20                 	db	32
  2078  00FEF2  30                 	db	48	;'0'
  2079  00FEF3  30                 	db	48	;'0'
  2080  00FEF4  2D                 	db	45
  2081  00FEF5  39                 	db	57	;'9'
  2082  00FEF6  39                 	db	57	;'9'
  2083  00FEF7  3A                 	db	58	;':'
  2084  00FEF8  00                 	db	0
  2085  00FEF9                     STR_6:
  2086  00FEF9  0A                 	db	10
  2087  00FEFA  0D                 	db	13
  2088  00FEFB  49                 	db	73	;'I'
  2089  00FEFC  6E                 	db	110	;'n'
  2090  00FEFD  73                 	db	115	;'s'
  2091  00FEFE  65                 	db	101	;'e'
  2092  00FEFF  72                 	db	114	;'r'
  2093  00FF00  74                 	db	116	;'t'
  2094  00FF01  20                 	db	32
  2095  00FF02  61                 	db	97	;'a'
  2096  00FF03  20                 	db	32
  2097  00FF04  6E                 	db	110	;'n'
  2098  00FF05  65                 	db	101	;'e'
  2099  00FF06  77                 	db	119	;'w'
  2100  00FF07  20                 	db	32
  2101  00FF08  74                 	db	116	;'t'
  2102  00FF09  75                 	db	117	;'u'
  2103  00FF0A  72                 	db	114	;'r'
  2104  00FF0B  6E                 	db	110	;'n'
  2105  00FF0C  20                 	db	32
  2106  00FF0D  4B                 	db	75	;'K'
  2107  00FF0E  50                 	db	80	;'P'
  2108  00FF0F  20                 	db	32
  2109  00FF10  76                 	db	118	;'v'
  2110  00FF11  61                 	db	97	;'a'
  2111  00FF12  6C                 	db	108	;'l'
  2112  00FF13  75                 	db	117	;'u'
  2113  00FF14  65                 	db	101	;'e'
  2114  00FF15  20                 	db	32
  2115  00FF16  62                 	db	98	;'b'
  2116  00FF17  65                 	db	101	;'e'
  2117  00FF18  74                 	db	116	;'t'
  2118  00FF19  77                 	db	119	;'w'
  2119  00FF1A  65                 	db	101	;'e'
  2120  00FF1B  65                 	db	101	;'e'
  2121  00FF1C  6E                 	db	110	;'n'
  2122  00FF1D  20                 	db	32
  2123  00FF1E  30                 	db	48	;'0'
  2124  00FF1F  30                 	db	48	;'0'
  2125  00FF20  2D                 	db	45
  2126  00FF21  39                 	db	57	;'9'
  2127  00FF22  39                 	db	57	;'9'
  2128  00FF23  3A                 	db	58	;':'
  2129  00FF24  00                 	db	0
  2130  00FF25                     STR_8:
  2131  00FF25  45                 	db	69	;'E'
  2132  00FF26  41                 	db	65	;'A'
  2133  00FF27  55                 	db	85	;'U'
  2134  00FF28  20                 	db	32
  2135  00FF29  20                 	db	32
  2136  00FF2A  20                 	db	32
  2137  00FF2B  20                 	db	32
  2138  00FF2C  20                 	db	32
  2139  00FF2D  20                 	db	32
  2140  00FF2E  20                 	db	32
  2141  00FF2F  20                 	db	32
  2142  00FF30  20                 	db	32
  2143  00FF31  20                 	db	32
  2144  00FF32  53                 	db	83	;'S'
  2145  00FF33  45                 	db	69	;'E'
  2146  00FF34  45                 	db	69	;'E'
  2147  00FF35  56                 	db	86	;'V'
  2148  00FF36  20                 	db	32
  2149  00FF37  20                 	db	32
  2150  00FF38  20                 	db	32
  2151  00FF39  20                 	db	32
  2152  00FF3A  20                 	db	32
  2153  00FF3B  20                 	db	32
  2154  00FF3C  20                 	db	32
  2155  00FF3D  20                 	db	32
  2156  00FF3E  20                 	db	32
  2157  00FF3F  41                 	db	65	;'A'
  2158  00FF40  55                 	db	85	;'U'
  2159  00FF41  4C                 	db	76	;'L'
  2160  00FF42  41                 	db	65	;'A'
  2161  00FF43  5F                 	db	95	;'_'
  2162  00FF44  36                 	db	54	;'6'
  2163  00FF45  00                 	db	0
  2164  00FF46                     STR_5:
  2165  00FF46  0A                 	db	10
  2166  00FF47  0D                 	db	13
  2167  00FF48  4E                 	db	78	;'N'
  2168  00FF49  65                 	db	101	;'e'
  2169  00FF4A  77                 	db	119	;'w'
  2170  00FF4B  20                 	db	32
  2171  00FF4C  76                 	db	118	;'v'
  2172  00FF4D  61                 	db	97	;'a'
  2173  00FF4E  6C                 	db	108	;'l'
  2174  00FF4F  75                 	db	117	;'u'
  2175  00FF50  65                 	db	101	;'e'
  2176  00FF51  20                 	db	32
  2177  00FF52  61                 	db	97	;'a'
  2178  00FF53  72                 	db	114	;'r'
  2179  00FF54  65                 	db	101	;'e'
  2180  00FF55  3A                 	db	58	;':'
  2181  00FF56  20                 	db	32
  2182  00FF57  25                 	db	37
  2183  00FF58  64                 	db	100	;'d'
  2184  00FF59  20                 	db	32
  2185  00FF5A  20                 	db	32
  2186  00FF5B  61                 	db	97	;'a'
  2187  00FF5C  6E                 	db	110	;'n'
  2188  00FF5D  64                 	db	100	;'d'
  2189  00FF5E  20                 	db	32
  2190  00FF5F  25                 	db	37
  2191  00FF60  64                 	db	100	;'d'
  2192  00FF61  00                 	db	0
  2193  00FF62                     STR_14:
  2194  00FF62  25                 	db	37
  2195  00FF63  30                 	db	48	;'0'
  2196  00FF64  33                 	db	51	;'3'
  2197  00FF65  64                 	db	100	;'d'
  2198  00FF66  25                 	db	37
  2199  00FF67  25                 	db	37
  2200  00FF68  20                 	db	32
  2201  00FF69  25                 	db	37
  2202  00FF6A  30                 	db	48	;'0'
  2203  00FF6B  33                 	db	51	;'3'
  2204  00FF6C  64                 	db	100	;'d'
  2205  00FF6D  25                 	db	37
  2206  00FF6E  25                 	db	37
  2207  00FF6F  20                 	db	32
  2208  00FF70  25                 	db	37
  2209  00FF71  30                 	db	48	;'0'
  2210  00FF72  33                 	db	51	;'3'
  2211  00FF73  64                 	db	100	;'d'
  2212  00FF74  25                 	db	37
  2213  00FF75  25                 	db	37
  2214  00FF76  20                 	db	32
  2215  00FF77  25                 	db	37
  2216  00FF78  30                 	db	48	;'0'
  2217  00FF79  34                 	db	52	;'4'
  2218  00FF7A  64                 	db	100	;'d'
  2219  00FF7B  20                 	db	32
  2220  00FF7C  00                 	db	0
  2221  00FF7D                     STR_13:
  2222  00FF7D  53                 	db	83	;'S'
  2223  00FF7E  50                 	db	80	;'P'
  2224  00FF7F  54                 	db	84	;'T'
  2225  00FF80  20                 	db	32
  2226  00FF81  20                 	db	32
  2227  00FF82  20                 	db	32
  2228  00FF83  4D                 	db	77	;'M'
  2229  00FF84  54                 	db	84	;'T'
  2230  00FF85  52                 	db	82	;'R'
  2231  00FF86  20                 	db	32
  2232  00FF87  20                 	db	32
  2233  00FF88  20                 	db	32
  2234  00FF89  45                 	db	69	;'E'
  2235  00FF8A  52                 	db	82	;'R'
  2236  00FF8B  52                 	db	82	;'R'
  2237  00FF8C  20                 	db	32
  2238  00FF8D  20                 	db	32
  2239  00FF8E  20                 	db	32
  2240  00FF8F  44                 	db	68	;'D'
  2241  00FF90  43                 	db	67	;'C'
  2242  00FF91  00                 	db	0
  2243  00FF92                     STR_12:
  2244  00FF92  44                 	db	68	;'D'
  2245  00FF93  55                 	db	85	;'U'
  2246  00FF94  54                 	db	84	;'T'
  2247  00FF95  59                 	db	89	;'Y'
  2248  00FF96  43                 	db	67	;'C'
  2249  00FF97  59                 	db	89	;'Y'
  2250  00FF98  43                 	db	67	;'C'
  2251  00FF99  4C                 	db	76	;'L'
  2252  00FF9A  45                 	db	69	;'E'
  2253  00FF9B  3A                 	db	58	;':'
  2254  00FF9C  20                 	db	32
  2255  00FF9D  44                 	db	68	;'D'
  2256  00FF9E  43                 	db	67	;'C'
  2257  00FF9F  00                 	db	0
  2258  00FFA0                     STR_9:
  2259  00FFA0  53                 	db	83	;'S'
  2260  00FFA1  45                 	db	69	;'E'
  2261  00FFA2  54                 	db	84	;'T'
  2262  00FFA3  50                 	db	80	;'P'
  2263  00FFA4  4F                 	db	79	;'O'
  2264  00FFA5  49                 	db	73	;'I'
  2265  00FFA6  4E                 	db	78	;'N'
  2266  00FFA7  54                 	db	84	;'T'
  2267  00FFA8  3A                 	db	58	;':'
  2268  00FFA9  20                 	db	32
  2269  00FFAA  53                 	db	83	;'S'
  2270  00FFAB  50                 	db	80	;'P'
  2271  00FFAC  54                 	db	84	;'T'
  2272  00FFAD  00                 	db	0
  2273  00FFAE                     STR_2:
  2274  00FFAE  0A                 	db	10
  2275  00FFAF  0D                 	db	13
  2276  00FFB0  56                 	db	86	;'V'
  2277  00FFB1  61                 	db	97	;'a'
  2278  00FFB2  6C                 	db	108	;'l'
  2279  00FFB3  75                 	db	117	;'u'
  2280  00FFB4  65                 	db	101	;'e'
  2281  00FFB5  3A                 	db	58	;':'
  2282  00FFB6  20                 	db	32
  2283  00FFB7  25                 	db	37
  2284  00FFB8  64                 	db	100	;'d'
  2285  00FFB9  00                 	db	0
  2286  00FFBA                     STR_11:
  2287  00FFBA  45                 	db	69	;'E'
  2288  00FFBB  52                 	db	82	;'R'
  2289  00FFBC  52                 	db	82	;'R'
  2290  00FFBD  4F                 	db	79	;'O'
  2291  00FFBE  52                 	db	82	;'R'
  2292  00FFBF  3A                 	db	58	;':'
  2293  00FFC0  45                 	db	69	;'E'
  2294  00FFC1  52                 	db	82	;'R'
  2295  00FFC2  52                 	db	82	;'R'
  2296  00FFC3  00                 	db	0
  2297  00FFC4                     STR_10:
  2298  00FFC4  4D                 	db	77	;'M'
  2299  00FFC5  4F                 	db	79	;'O'
  2300  00FFC6  54                 	db	84	;'T'
  2301  00FFC7  4F                 	db	79	;'O'
  2302  00FFC8  52                 	db	82	;'R'
  2303  00FFC9  3A                 	db	58	;':'
  2304  00FFCA  4D                 	db	77	;'M'
  2305  00FFCB  54                 	db	84	;'T'
  2306  00FFCC  52                 	db	82	;'R'
  2307  00FFCD  00                 	db	0
  2308  00FFCE                     STR_91:
  2309  00FFCE  68                 	db	104	;'h'
  2310  00FFCF  68                 	db	104	;'h'
  2311  00FFD0  58                 	db	88	;'X'
  2312  00FFD1  00                 	db	0
  2313  00FFD2                     STR_15:
  2314  00FFD2  68                 	db	104	;'h'
  2315  00FFD3  68                 	db	104	;'h'
  2316  00FFD4  64                 	db	100	;'d'
  2317  00FFD5  00                 	db	0
  2318  00FFD6                     STR_19:
  2319  00FFD6  68                 	db	104	;'h'
  2320  00FFD7  68                 	db	104	;'h'
  2321  00FFD8  69                 	db	105	;'i'
  2322  00FFD9  00                 	db	0
  2323  00FFDA                     STR_57:
  2324  00FFDA  68                 	db	104	;'h'
  2325  00FFDB  68                 	db	104	;'h'
  2326  00FFDC  6E                 	db	110	;'n'
  2327  00FFDD  00                 	db	0
  2328  00FFDE                     STR_42:
  2329  00FFDE  68                 	db	104	;'h'
  2330  00FFDF  68                 	db	104	;'h'
  2331  00FFE0  6F                 	db	111	;'o'
  2332  00FFE1  00                 	db	0
  2333  00FFE2                     STR_72:
  2334  00FFE2  68                 	db	104	;'h'
  2335  00FFE3  68                 	db	104	;'h'
  2336  00FFE4  75                 	db	117	;'u'
  2337  00FFE5  00                 	db	0
  2338  00FFE6                     STR_87:
  2339  00FFE6  68                 	db	104	;'h'
  2340  00FFE7  68                 	db	104	;'h'
  2341  00FFE8  78                 	db	120	;'x'
  2342  00FFE9  00                 	db	0
  2343  00FFEA                     STR_109:
  2344  00FFEA  7A                 	db	122	;'z'
  2345  00FFEB  58                 	db	88	;'X'
  2346  00FFEC  00                 	db	0
  2347  00FFED                     STR_33:
  2348  00FFED  7A                 	db	122	;'z'
  2349  00FFEE  64                 	db	100	;'d'
  2350  00FFEF  00                 	db	0
  2351  00FFF0                     STR_37:
  2352  00FFF0  7A                 	db	122	;'z'
  2353  00FFF1  69                 	db	105	;'i'
  2354  00FFF2  00                 	db	0
  2355  00FFF3                     STR_67:
  2356  00FFF3  7A                 	db	122	;'z'
  2357  00FFF4  6E                 	db	110	;'n'
  2358  00FFF5  00                 	db	0
  2359  00FFF6                     STR_52:
  2360  00FFF6  7A                 	db	122	;'z'
  2361  00FFF7  6F                 	db	111	;'o'
  2362  00FFF8  00                 	db	0
  2363  00FFF9                     STR_82:
  2364  00FFF9  7A                 	db	122	;'z'
  2365  00FFFA  75                 	db	117	;'u'
  2366  00FFFB  00                 	db	0
  2367  00FFFC                     STR_105:
  2368  00FFFC  7A                 	db	122	;'z'
  2369  00FFFD  78                 	db	120	;'x'
  2370  00FFFE  00                 	db	0
  2371  0000                     
  2372                           ; #config settings
  2373  00FFFF  00                 	db	0	; dummy byte at the end
  2374  0000                     
  2375                           	psect	nvBANK1
  2376  00017D                     __pnvBANK1:
  2377                           	opt callstack 0
  2378  00017D                     _TMR2_InterruptHandler:
  2379                           	opt callstack 0
  2380  00017D                     	ds	2
  2381  00017F                     _EUSART1_ErrorHandler:
  2382                           	opt callstack 0
  2383  00017F                     	ds	2
  2384  000181                     _EUSART1_OverrunErrorHandler:
  2385                           	opt callstack 0
  2386  000181                     	ds	2
  2387  000183                     _EUSART1_FramingErrorHandler:
  2388                           	opt callstack 0
  2389  000183                     	ds	2
  2390  000185                     _timer1ReloadVal:
  2391                           	opt callstack 0
  2392  000185                     	ds	2
  2393  000187                     _IOCB4_InterruptHandler:
  2394                           	opt callstack 0
  2395  000187                     	ds	2
  2396  0000                     _IOCBbits	set	3930
  2397  0000                     _WPUB	set	3931
  2398  0000                     _ANCON1	set	3932
  2399  0000                     _ANCON0	set	3933
  2400  0000                     _LATEbits	set	3981
  2401  0000                     _SSPSTATbits	set	4039
  2402  0000                     _PORTB	set	3969
  2403  0000                     _PORTBbits	set	3969
  2404  0000                     _LATAbits	set	3977
  2405  0000                     _CCPTMRSbits	set	3993
  2406  0000                     _CCPR1L	set	4028
  2407  0000                     _CCPR1H	set	4029
  2408  0000                     _ECCP1DEL	set	4030
  2409  0000                     _PSTR1CON	set	3996
  2410  0000                     _ECCP1AS	set	4031
  2411  0000                     _CCP1CON	set	4027
  2412  0000                     _T2CONbits	set	4042
  2413  0000                     _T2CON	set	4042
  2414  0000                     _TMR2	set	4044
  2415  0000                     _PR2	set	4043
  2416  0000                     _PIE1bits	set	3997
  2417  0000                     _RCONbits	set	4048
  2418  0000                     _TXREG1	set	4013
  2419  0000                     _RCREG1	set	4014
  2420  0000                     _RCSTA1bits	set	4011
  2421  0000                     _TXSTA1bits	set	4012
  2422  0000                     _SPBRGH1	set	3965
  2423  0000                     _SPBRG1	set	4015
  2424  0000                     _TXSTA1	set	4012
  2425  0000                     _RCSTA1	set	4011
  2426  0000                     _BAUDCON1	set	4007
  2427  0000                     _T1GCONbits	set	4010
  2428  0000                     _T1CONbits	set	4045
  2429  0000                     _T1CON	set	4045
  2430  0000                     _TMR1L	set	4046
  2431  0000                     _TMR1H	set	4047
  2432  0000                     _T1GCON	set	4010
  2433  0000                     _ADCON0bits	set	4034
  2434  0000                     _ADRESL	set	4035
  2435  0000                     _ADRESH	set	4036
  2436  0000                     _ADCON2	set	4032
  2437  0000                     _ADCON1	set	4033
  2438  0000                     _ADCON0	set	4034
  2439  0000                     _INTCONbits	set	4082
  2440  0000                     _INTCON2bits	set	4081
  2441  0000                     _TRISD	set	3989
  2442  0000                     _TRISC	set	3988
  2443  0000                     _TRISB	set	3987
  2444  0000                     _TRISA	set	3986
  2445  0000                     _TRISE	set	3990
  2446  0000                     _LATC	set	3979
  2447  0000                     _LATB	set	3978
  2448  0000                     _LATA	set	3977
  2449  0000                     _LATD	set	3980
  2450  0000                     _LATE	set	3981
  2451  0000                     _PIR1bits	set	3998
  2452  0000                     _SSPBUF	set	4041
  2453  0000                     _SSPCON2	set	4037
  2454  0000                     _SSPCON1bits	set	4038
  2455  0000                     _TRISCbits	set	3988
  2456  0000                     _SSPADD	set	4040
  2457  0000                     _SSPCON1	set	4038
  2458  0000                     _SSPSTAT	set	4039
  2459  0000                     _REFOCON	set	3994
  2460  0000                     _OSCTUNE	set	3995
  2461  0000                     _OSCCON2	set	4050
  2462  0000                     _OSCCON	set	4051
  2463                           
  2464                           	psect	cinit
  2465  004AAC                     __pcinit:
  2466                           	opt callstack 0
  2467  004AAC                     start_initialization:
  2468                           	opt callstack 0
  2469  004AAC                     __initialization:
  2470                           	opt callstack 0
  2471                           
  2472                           ; Initialize objects allocated to BANK1 (11 bytes)
  2473                           ; load TBLPTR registers with __pidataBANK1
  2474  004AAC  0EDA               	movlw	low __pidataBANK1
  2475  004AAE  6EF6               	movwf	tblptrl,c
  2476  004AB0  0E53               	movlw	high __pidataBANK1
  2477  004AB2  6EF7               	movwf	tblptrh,c
  2478  004AB4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2479  004AB6  6EF8               	movwf	tblptru,c
  2480  004AB8  EE01  F089         	lfsr	0,__pdataBANK1
  2481  004ABC  EE10 F00B          	lfsr	1,11
  2482  004AC0                     copy_data0:
  2483  004AC0  0009               	tblrd		*+
  2484  004AC2  CFF5 FFEE          	movff	tablat,postinc0
  2485  004AC6  50E5               	movf	postdec1,w,c
  2486  004AC8  50E1               	movf	fsr1l,w,c
  2487  004ACA  E1FA               	bnz	copy_data0
  2488                           
  2489                           ; Initialize objects allocated to BANK0 (4 bytes)
  2490                           ; load TBLPTR registers with __pidataBANK0
  2491  004ACC  0E22               	movlw	low __pidataBANK0
  2492  004ACE  6EF6               	movwf	tblptrl,c
  2493  004AD0  0E54               	movlw	high __pidataBANK0
  2494  004AD2  6EF7               	movwf	tblptrh,c
  2495  004AD4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2496  004AD6  6EF8               	movwf	tblptru,c
  2497  004AD8  EE00  F0EE         	lfsr	0,__pdataBANK0
  2498  004ADC  EE10 F004          	lfsr	1,4
  2499  004AE0                     copy_data1:
  2500  004AE0  0009               	tblrd		*+
  2501  004AE2  CFF5 FFEE          	movff	tablat,postinc0
  2502  004AE6  50E5               	movf	postdec1,w,c
  2503  004AE8  50E1               	movf	fsr1l,w,c
  2504  004AEA  E1FA               	bnz	copy_data1
  2505                           
  2506                           ; Clear objects allocated to BANK1 (81 bytes)
  2507  004AEC  EE01  F000         	lfsr	0,__pbssBANK1
  2508  004AF0  0E51               	movlw	81
  2509  004AF2                     clear_0:
  2510  004AF2  6AEE               	clrf	postinc0,c
  2511  004AF4  06E8               	decf	wreg,f,c
  2512  004AF6  E1FD               	bnz	clear_0
  2513                           
  2514                           ; Clear objects allocated to BANK0 (12 bytes)
  2515  004AF8  EE00  F0E2         	lfsr	0,__pbssBANK0
  2516  004AFC  0E0C               	movlw	12
  2517  004AFE                     clear_1:
  2518  004AFE  6AEE               	clrf	postinc0,c
  2519  004B00  06E8               	decf	wreg,f,c
  2520  004B02  E1FD               	bnz	clear_1
  2521                           
  2522                           ; Clear objects allocated to COMRAM (7 bytes)
  2523  004B04  EE00  F058         	lfsr	0,__pbssCOMRAM
  2524  004B08  0E07               	movlw	7
  2525  004B0A                     clear_2:
  2526  004B0A  6AEE               	clrf	postinc0,c
  2527  004B0C  06E8               	decf	wreg,f,c
  2528  004B0E  E1FD               	bnz	clear_2
  2529  004B10                     end_of_initialization:
  2530                           	opt callstack 0
  2531  004B10                     __end_of__initialization:
  2532                           	opt callstack 0
  2533  004B10  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2534  004B12  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2535  004B14  0100               	movlb	0
  2536  004B16  EFC3  F014         	goto	_main	;jump to C main() function
  2537                           
  2538                           	psect	bssCOMRAM
  2539  000058                     __pbssCOMRAM:
  2540                           	opt callstack 0
  2541  000058                     _dc_value:
  2542                           	opt callstack 0
  2543  000058                     	ds	4
  2544  00005C                     TMR2_ISR@CountCallBack:
  2545                           	opt callstack 0
  2546  00005C                     	ds	2
  2547  00005E                     _eusart1RxLastError:
  2548                           	opt callstack 0
  2549  00005E                     	ds	1
  2550                           
  2551                           	psect	bssBANK0
  2552  0000E2                     __pbssBANK0:
  2553                           	opt callstack 0
  2554  0000E2                     _error:
  2555                           	opt callstack 0
  2556  0000E2                     	ds	4
  2557  0000E6                     _nout:
  2558                           	opt callstack 0
  2559  0000E6                     	ds	2
  2560  0000E8                     _width:
  2561                           	opt callstack 0
  2562  0000E8                     	ds	2
  2563  0000EA                     _prec:
  2564                           	opt callstack 0
  2565  0000EA                     	ds	2
  2566  0000EC                     _flags:
  2567                           	opt callstack 0
  2568  0000EC                     	ds	2
  2569                           
  2570                           	psect	dataBANK0
  2571  0000EE                     __pdataBANK0:
  2572                           	opt callstack 0
  2573  0000EE                     _turn_off_value:
  2574                           	opt callstack 0
  2575  0000EE                     	ds	2
  2576  0000F0                     _turn_on_value:
  2577                           	opt callstack 0
  2578  0000F0                     	ds	2
  2579                           
  2580                           	psect	bssBANK1
  2581  000100                     __pbssBANK1:
  2582                           	opt callstack 0
  2583  000100                     _setpoint:
  2584                           	opt callstack 0
  2585  000100                     	ds	4
  2586  000104                     _sensor:
  2587                           	opt callstack 0
  2588  000104                     	ds	4
  2589  000108                     _errno:
  2590                           	opt callstack 0
  2591  000108                     	ds	2
  2592  00010A                     _global_bg_color:
  2593                           	opt callstack 0
  2594  00010A                     	ds	2
  2595  00010C                     	ds	2
  2596  00010E                     	ds	2
  2597  000110                     _ADC_InterruptHandler:
  2598                           	opt callstack 0
  2599  000110                     	ds	2
  2600  000112                     _Draw_Graph:
  2601                           	opt callstack 0
  2602  000112                     	ds	1
  2603  000113                     _dbuf:
  2604                           	opt callstack 0
  2605  000113                     	ds	32
  2606  000133                     _string:
  2607                           	opt callstack 0
  2608  000133                     	ds	30
  2609                           
  2610                           	psect	dataBANK1
  2611  000189                     __pdataBANK1:
  2612                           	opt callstack 0
  2613  000189                     stoa@F1152:
  2614                           	opt callstack 0
  2615  000189                     	ds	7
  2616  000190                     _KP:
  2617                           	opt callstack 0
  2618  000190                     	ds	4
  2619                           
  2620                           	psect	cstackBANK1
  2621  000151                     __pcstackBANK1:
  2622                           	opt callstack 0
  2623  000151                     ?_printf:
  2624                           	opt callstack 0
  2625  000151                     ?_vsnprintf:
  2626                           	opt callstack 0
  2627  000151                     printf@fmt:
  2628                           	opt callstack 0
  2629  000151                     vsnprintf@s:
  2630                           	opt callstack 0
  2631                           
  2632                           ; 2 bytes @ 0x0
  2633  000151                     	ds	2
  2634  000153                     vsnprintf@n:
  2635                           	opt callstack 0
  2636                           
  2637                           ; 2 bytes @ 0x2
  2638  000153                     	ds	2
  2639  000155                     vsnprintf@fmt:
  2640                           	opt callstack 0
  2641                           
  2642                           ; 2 bytes @ 0x4
  2643  000155                     	ds	2
  2644  000157                     vsnprintf@ap:
  2645                           	opt callstack 0
  2646                           
  2647                           ; 2 bytes @ 0x6
  2648  000157                     	ds	1
  2649  000158                     Out_USART@value_1:
  2650                           	opt callstack 0
  2651                           
  2652                           ; 2 bytes @ 0x7
  2653  000158                     	ds	1
  2654  000159                     _vsnprintf$2542:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 2 bytes @ 0x8
  2658  000159                     	ds	1
  2659  00015A                     Out_USART@value_2:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 2 bytes @ 0x9
  2663  00015A                     	ds	1
  2664  00015B                     vsnprintf@cnt:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 2 bytes @ 0xA
  2668  00015B                     	ds	2
  2669  00015D                     vsnprintf@f:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 6 bytes @ 0xC
  2673  00015D                     	ds	6
  2674  000163                     ?_snprintf:
  2675                           	opt callstack 0
  2676  000163                     snprintf@s:
  2677                           	opt callstack 0
  2678                           
  2679                           ; 2 bytes @ 0x12
  2680  000163                     	ds	2
  2681  000165                     snprintf@n:
  2682                           	opt callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x14
  2685  000165                     	ds	2
  2686  000167                     snprintf@fmt:
  2687                           	opt callstack 0
  2688                           
  2689                           ; 2 bytes @ 0x16
  2690  000167                     	ds	20
  2691  00017B                     snprintf@ap:
  2692                           	opt callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x2A
  2695  00017B                     	ds	2
  2696                           
  2697                           	psect	cstackBANK0
  2698  000060                     __pcstackBANK0:
  2699                           	opt callstack 0
  2700  000060                     ___fldiv@rem:
  2701                           	opt callstack 0
  2702                           
  2703                           ; 4 bytes @ 0x0
  2704  000060                     	ds	4
  2705  000064                     ___fldiv@sign:
  2706                           	opt callstack 0
  2707                           
  2708                           ; 1 bytes @ 0x4
  2709  000064                     	ds	1
  2710  000065                     ___fldiv@new_exp:
  2711                           	opt callstack 0
  2712                           
  2713                           ; 2 bytes @ 0x5
  2714  000065                     	ds	2
  2715  000067                     ___fldiv@grs:
  2716                           	opt callstack 0
  2717                           
  2718                           ; 4 bytes @ 0x7
  2719  000067                     	ds	4
  2720  00006B                     ___fldiv@bexp:
  2721                           	opt callstack 0
  2722                           
  2723                           ; 1 bytes @ 0xB
  2724  00006B                     	ds	1
  2725  00006C                     ___fldiv@aexp:
  2726                           	opt callstack 0
  2727                           
  2728                           ; 1 bytes @ 0xC
  2729  00006C                     	ds	1
  2730  00006D                     ??_TMR1_Initialize:
  2731  00006D                     ??_SPI_Open:
  2732  00006D                     ??_msDelay:
  2733  00006D                     ?_strlen:
  2734                           	opt callstack 0
  2735  00006D                     ?_isupper:
  2736                           	opt callstack 0
  2737  00006D                     ?_isalpha:
  2738                           	opt callstack 0
  2739  00006D                     ?_isdigit:
  2740                           	opt callstack 0
  2741  00006D                     ?_strncmp:
  2742                           	opt callstack 0
  2743  00006D                     ?_isspace:
  2744                           	opt callstack 0
  2745  00006D                     ?_islower:
  2746                           	opt callstack 0
  2747  00006D                     ?___wmul:
  2748                           	opt callstack 0
  2749  00006D                     ?___aodiv:
  2750                           	opt callstack 0
  2751  00006D                     ?___aomod:
  2752                           	opt callstack 0
  2753  00006D                     ?___lodiv:
  2754                           	opt callstack 0
  2755  00006D                     ?___lomod:
  2756                           	opt callstack 0
  2757  00006D                     SPI_ExchangeByte@data:
  2758                           	opt callstack 0
  2759  00006D                     EUSART1_Write@txData:
  2760                           	opt callstack 0
  2761  00006D                     IOCB4_SetInterruptHandler@InterruptHandler:
  2762                           	opt callstack 0
  2763  00006D                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2764                           	opt callstack 0
  2765  00006D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2766                           	opt callstack 0
  2767  00006D                     EUSART1_SetErrorHandler@interruptHandler:
  2768                           	opt callstack 0
  2769  00006D                     TMR2_SetInterruptHandler@InterruptHandler:
  2770                           	opt callstack 0
  2771  00006D                     ___wmul@multiplier:
  2772                           	opt callstack 0
  2773  00006D                     isalpha@c:
  2774                           	opt callstack 0
  2775  00006D                     isdigit@c:
  2776                           	opt callstack 0
  2777  00006D                     isspace@c:
  2778                           	opt callstack 0
  2779  00006D                     isupper@c:
  2780                           	opt callstack 0
  2781  00006D                     strlen@s:
  2782                           	opt callstack 0
  2783  00006D                     strncmp@_l:
  2784                           	opt callstack 0
  2785  00006D                     islower@c:
  2786                           	opt callstack 0
  2787  00006D                     ___aodiv@dividend:
  2788                           	opt callstack 0
  2789  00006D                     ___aomod@dividend:
  2790                           	opt callstack 0
  2791  00006D                     ___lodiv@dividend:
  2792                           	opt callstack 0
  2793  00006D                     ___lomod@dividend:
  2794                           	opt callstack 0
  2795                           
  2796                           ; 8 bytes @ 0xD
  2797  00006D                     	ds	1
  2798  00006E                     SPI_Open@spiUniqueConfiguration:
  2799                           	opt callstack 0
  2800  00006E                     putch@txData:
  2801                           	opt callstack 0
  2802  00006E                     msDelay@ms:
  2803                           	opt callstack 0
  2804  00006E                     lcd_send@value:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 1 bytes @ 0xE
  2808  00006E                     	ds	1
  2809  00006F                     ??_isupper:
  2810  00006F                     ??_isalpha:
  2811  00006F                     ??_isdigit:
  2812  00006F                     ??_isspace:
  2813  00006F                     ??_islower:
  2814  00006F                     msDelay@k:
  2815                           	opt callstack 0
  2816  00006F                     lcd_send@dc:
  2817                           	opt callstack 0
  2818  00006F                     ___wmul@multiplicand:
  2819                           	opt callstack 0
  2820  00006F                     fputc@c:
  2821                           	opt callstack 0
  2822  00006F                     strlen@a:
  2823                           	opt callstack 0
  2824  00006F                     strncmp@_r:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0xF
  2828  00006F                     	ds	1
  2829  000070                     lcd_set_cursor_x@x:
  2830                           	opt callstack 0
  2831  000070                     lcd_set_cursor_y@y:
  2832                           	opt callstack 0
  2833  000070                     lcd_draw_pixel@color:
  2834                           	opt callstack 0
  2835                           
  2836                           ; 2 bytes @ 0x10
  2837  000070                     	ds	1
  2838  000071                     ___wmul@product:
  2839                           	opt callstack 0
  2840  000071                     fputc@fp:
  2841                           	opt callstack 0
  2842  000071                     strncmp@n:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 2 bytes @ 0x11
  2846  000071                     	ds	1
  2847  000072                     lcd_set_cursor@x:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 2 bytes @ 0x12
  2851  000072                     	ds	1
  2852  000073                     ??_fputc:
  2853  000073                     ??_strncmp:
  2854  000073                     ?_toupper:
  2855                           	opt callstack 0
  2856  000073                     _isspace$2424:
  2857                           	opt callstack 0
  2858  000073                     toupper@c:
  2859                           	opt callstack 0
  2860                           
  2861                           ; 2 bytes @ 0x13
  2862  000073                     	ds	1
  2863  000074                     ?_atoi:
  2864                           	opt callstack 0
  2865  000074                     lcd_set_cursor@y:
  2866                           	opt callstack 0
  2867  000074                     atoi@s:
  2868                           	opt callstack 0
  2869  000074                     strncmp@l:
  2870                           	opt callstack 0
  2871                           
  2872                           ; 2 bytes @ 0x14
  2873  000074                     	ds	1
  2874  000075                     ??_toupper:
  2875  000075                     ___aodiv@divisor:
  2876                           	opt callstack 0
  2877  000075                     ___aomod@divisor:
  2878                           	opt callstack 0
  2879  000075                     ___lodiv@divisor:
  2880                           	opt callstack 0
  2881  000075                     ___lomod@divisor:
  2882                           	opt callstack 0
  2883                           
  2884                           ; 8 bytes @ 0x15
  2885  000075                     	ds	1
  2886  000076                     ??_atoi:
  2887  000076                     lcd_fill@bg_color:
  2888                           	opt callstack 0
  2889  000076                     lcd_draw_char@x:
  2890                           	opt callstack 0
  2891  000076                     strncmp@r:
  2892                           	opt callstack 0
  2893                           
  2894                           ; 2 bytes @ 0x16
  2895  000076                     	ds	2
  2896  000078                     ?_stoa:
  2897                           	opt callstack 0
  2898  000078                     lcd_fill@height:
  2899                           	opt callstack 0
  2900  000078                     lcd_draw_char@y:
  2901                           	opt callstack 0
  2902  000078                     stoa@fp:
  2903                           	opt callstack 0
  2904  000078                     fputs@s:
  2905                           	opt callstack 0
  2906                           
  2907                           ; 2 bytes @ 0x18
  2908  000078                     	ds	1
  2909  000079                     _toupper$2511:
  2910                           	opt callstack 0
  2911                           
  2912                           ; 2 bytes @ 0x19
  2913  000079                     	ds	1
  2914  00007A                     lcd_fill@width:
  2915                           	opt callstack 0
  2916  00007A                     lcd_draw_char@fIndex:
  2917                           	opt callstack 0
  2918  00007A                     stoa@s:
  2919                           	opt callstack 0
  2920  00007A                     atoi@neg:
  2921                           	opt callstack 0
  2922  00007A                     fputs@fp:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 2 bytes @ 0x1A
  2926  00007A                     	ds	2
  2927  00007C                     ??_stoa:
  2928  00007C                     fputs@c:
  2929                           	opt callstack 0
  2930  00007C                     lcd_draw_char@fg_color:
  2931                           	opt callstack 0
  2932  00007C                     _atoi$2397:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 2 bytes @ 0x1C
  2936  00007C                     	ds	1
  2937  00007D                     ___aodiv@counter:
  2938                           	opt callstack 0
  2939  00007D                     ___aomod@counter:
  2940                           	opt callstack 0
  2941  00007D                     ___lomod@counter:
  2942                           	opt callstack 0
  2943  00007D                     fputs@i:
  2944                           	opt callstack 0
  2945  00007D                     stoa@nuls:
  2946                           	opt callstack 0
  2947  00007D                     ___lodiv@quotient:
  2948                           	opt callstack 0
  2949                           
  2950                           ; 8 bytes @ 0x1D
  2951  00007D                     	ds	1
  2952  00007E                     ___aodiv@sign:
  2953                           	opt callstack 0
  2954  00007E                     ___aomod@sign:
  2955                           	opt callstack 0
  2956  00007E                     lcd_draw_char@bg_color:
  2957                           	opt callstack 0
  2958  00007E                     _atoi$2399:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 2 bytes @ 0x1E
  2962  00007E                     	ds	1
  2963  00007F                     ?_abs:
  2964                           	opt callstack 0
  2965  00007F                     ?_pad:
  2966                           	opt callstack 0
  2967  00007F                     pad@fp:
  2968                           	opt callstack 0
  2969  00007F                     abs@a:
  2970                           	opt callstack 0
  2971  00007F                     ___aodiv@quotient:
  2972                           	opt callstack 0
  2973                           
  2974                           ; 8 bytes @ 0x1F
  2975  00007F                     	ds	1
  2976  000080                     ??_lcd_draw_char:
  2977  000080                     _atoi$2398:
  2978                           	opt callstack 0
  2979                           
  2980                           ; 1 bytes @ 0x20
  2981  000080                     	ds	1
  2982  000081                     ??_abs:
  2983  000081                     pad@buf:
  2984                           	opt callstack 0
  2985  000081                     atoi@n:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x21
  2989  000081                     	ds	2
  2990  000083                     ?___xxtofl:
  2991                           	opt callstack 0
  2992  000083                     pad@p:
  2993                           	opt callstack 0
  2994  000083                     ___xxtofl@val:
  2995                           	opt callstack 0
  2996                           
  2997                           ; 4 bytes @ 0x23
  2998  000083                     	ds	1
  2999  000084                     stoa@i:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x24
  3003  000084                     	ds	1
  3004  000085                     ??_pad:
  3005  000085                     ___lodiv@counter:
  3006                           	opt callstack 0
  3007                           
  3008                           ; 1 bytes @ 0x25
  3009  000085                     	ds	1
  3010  000086                     pad@i:
  3011                           	opt callstack 0
  3012  000086                     stoa@w:
  3013                           	opt callstack 0
  3014                           
  3015                           ; 2 bytes @ 0x26
  3016  000086                     	ds	1
  3017  000087                     ??___xxtofl:
  3018                           
  3019                           ; 1 bytes @ 0x27
  3020  000087                     	ds	1
  3021  000088                     pad@w:
  3022                           	opt callstack 0
  3023  000088                     stoa@cp:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x28
  3027  000088                     	ds	1
  3028  000089                     lcd_draw_char@j:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 1 bytes @ 0x29
  3032  000089                     	ds	1
  3033  00008A                     ?_ctoa:
  3034                           	opt callstack 0
  3035  00008A                     ?_dtoa:
  3036                           	opt callstack 0
  3037  00008A                     ?_otoa:
  3038                           	opt callstack 0
  3039  00008A                     ?_utoa:
  3040                           	opt callstack 0
  3041  00008A                     ?_xtoa:
  3042                           	opt callstack 0
  3043  00008A                     lcd_draw_char@k:
  3044                           	opt callstack 0
  3045  00008A                     ctoa@fp:
  3046                           	opt callstack 0
  3047  00008A                     dtoa@fp:
  3048                           	opt callstack 0
  3049  00008A                     otoa@fp:
  3050                           	opt callstack 0
  3051  00008A                     stoa@p:
  3052                           	opt callstack 0
  3053  00008A                     utoa@fp:
  3054                           	opt callstack 0
  3055  00008A                     xtoa@fp:
  3056                           	opt callstack 0
  3057                           
  3058                           ; 2 bytes @ 0x2A
  3059  00008A                     	ds	1
  3060  00008B                     lcd_draw_char@i:
  3061                           	opt callstack 0
  3062  00008B                     ___xxtofl@sign:
  3063                           	opt callstack 0
  3064                           
  3065                           ; 1 bytes @ 0x2B
  3066  00008B                     	ds	1
  3067  00008C                     ctoa@c:
  3068                           	opt callstack 0
  3069  00008C                     ___xxtofl@exp:
  3070                           	opt callstack 0
  3071  00008C                     lcd_draw_string@x:
  3072                           	opt callstack 0
  3073  00008C                     stoa@l:
  3074                           	opt callstack 0
  3075  00008C                     dtoa@d:
  3076                           	opt callstack 0
  3077  00008C                     otoa@d:
  3078                           	opt callstack 0
  3079  00008C                     utoa@d:
  3080                           	opt callstack 0
  3081  00008C                     xtoa@d:
  3082                           	opt callstack 0
  3083                           
  3084                           ; 8 bytes @ 0x2C
  3085  00008C                     	ds	1
  3086  00008D                     ctoa@w:
  3087                           	opt callstack 0
  3088  00008D                     ___xxtofl@arg:
  3089                           	opt callstack 0
  3090                           
  3091                           ; 4 bytes @ 0x2D
  3092  00008D                     	ds	1
  3093  00008E                     lcd_draw_string@y:
  3094                           	opt callstack 0
  3095                           
  3096                           ; 2 bytes @ 0x2E
  3097  00008E                     	ds	2
  3098  000090                     lcd_draw_string@pS:
  3099                           	opt callstack 0
  3100                           
  3101                           ; 2 bytes @ 0x30
  3102  000090                     	ds	2
  3103  000092                     lcd_draw_string@fg_color:
  3104                           	opt callstack 0
  3105                           
  3106                           ; 2 bytes @ 0x32
  3107  000092                     	ds	2
  3108  000094                     ??_dtoa:
  3109  000094                     ??_otoa:
  3110  000094                     ??_utoa:
  3111  000094                     xtoa@x:
  3112                           	opt callstack 0
  3113  000094                     lcd_draw_string@bg_color:
  3114                           	opt callstack 0
  3115                           
  3116                           ; 2 bytes @ 0x34
  3117  000094                     	ds	1
  3118  000095                     ??_xtoa:
  3119                           
  3120                           ; 1 bytes @ 0x35
  3121  000095                     	ds	1
  3122  000096                     ??_lcd_draw_string:
  3123                           
  3124                           ; 1 bytes @ 0x36
  3125  000096                     	ds	4
  3126  00009A                     lcd_draw_string@k:
  3127                           	opt callstack 0
  3128                           
  3129                           ; 2 bytes @ 0x3A
  3130  00009A                     	ds	2
  3131  00009C                     lcd_draw_string@lIndex:
  3132                           	opt callstack 0
  3133  00009C                     _dtoa$1784:
  3134                           	opt callstack 0
  3135  00009C                     otoa@p:
  3136                           	opt callstack 0
  3137  00009C                     utoa@p:
  3138                           	opt callstack 0
  3139                           
  3140                           ; 2 bytes @ 0x3C
  3141  00009C                     	ds	1
  3142  00009D                     _xtoa$1820:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 2 bytes @ 0x3D
  3146  00009D                     	ds	1
  3147  00009E                     dtoa@p:
  3148                           	opt callstack 0
  3149  00009E                     otoa@t:
  3150                           	opt callstack 0
  3151  00009E                     utoa@w:
  3152                           	opt callstack 0
  3153                           
  3154                           ; 2 bytes @ 0x3E
  3155  00009E                     	ds	1
  3156  00009F                     _xtoa$1821:
  3157                           	opt callstack 0
  3158                           
  3159                           ; 2 bytes @ 0x3F
  3160  00009F                     	ds	1
  3161  0000A0                     dtoa@w:
  3162                           	opt callstack 0
  3163  0000A0                     otoa@w:
  3164                           	opt callstack 0
  3165  0000A0                     utoa@n:
  3166                           	opt callstack 0
  3167                           
  3168                           ; 8 bytes @ 0x40
  3169  0000A0                     	ds	1
  3170  0000A1                     xtoa@p:
  3171                           	opt callstack 0
  3172                           
  3173                           ; 2 bytes @ 0x41
  3174  0000A1                     	ds	1
  3175  0000A2                     dtoa@s:
  3176                           	opt callstack 0
  3177  0000A2                     otoa@n:
  3178                           	opt callstack 0
  3179                           
  3180                           ; 8 bytes @ 0x42
  3181  0000A2                     	ds	1
  3182  0000A3                     xtoa@w:
  3183                           	opt callstack 0
  3184                           
  3185                           ; 2 bytes @ 0x43
  3186  0000A3                     	ds	1
  3187  0000A4                     dtoa@n:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 8 bytes @ 0x44
  3191  0000A4                     	ds	1
  3192  0000A5                     xtoa@n:
  3193                           	opt callstack 0
  3194                           
  3195                           ; 8 bytes @ 0x45
  3196  0000A5                     	ds	3
  3197  0000A8                     utoa@i:
  3198                           	opt callstack 0
  3199                           
  3200                           ; 2 bytes @ 0x48
  3201  0000A8                     	ds	2
  3202  0000AA                     otoa@i:
  3203                           	opt callstack 0
  3204                           
  3205                           ; 2 bytes @ 0x4A
  3206  0000AA                     	ds	2
  3207  0000AC                     dtoa@i:
  3208                           	opt callstack 0
  3209                           
  3210                           ; 2 bytes @ 0x4C
  3211  0000AC                     	ds	1
  3212  0000AD                     xtoa@i:
  3213                           	opt callstack 0
  3214                           
  3215                           ; 2 bytes @ 0x4D
  3216  0000AD                     	ds	2
  3217  0000AF                     xtoa@c:
  3218                           	opt callstack 0
  3219                           
  3220                           ; 2 bytes @ 0x4F
  3221  0000AF                     	ds	2
  3222  0000B1                     ?_vfpfcnvrt:
  3223                           	opt callstack 0
  3224  0000B1                     vfpfcnvrt@fp:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 2 bytes @ 0x51
  3228  0000B1                     	ds	2
  3229  0000B3                     vfpfcnvrt@fmt:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x53
  3233  0000B3                     	ds	2
  3234  0000B5                     vfpfcnvrt@ap:
  3235                           	opt callstack 0
  3236                           
  3237                           ; 2 bytes @ 0x55
  3238  0000B5                     	ds	2
  3239  0000B7                     ??_vfpfcnvrt:
  3240                           
  3241                           ; 1 bytes @ 0x57
  3242  0000B7                     	ds	4
  3243  0000BB                     vfpfcnvrt@cp:
  3244                           	opt callstack 0
  3245                           
  3246                           ; 2 bytes @ 0x5B
  3247  0000BB                     	ds	2
  3248  0000BD                     vfpfcnvrt@done:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 2 bytes @ 0x5D
  3252  0000BD                     	ds	2
  3253  0000BF                     _vfpfcnvrt$1835:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 2 bytes @ 0x5F
  3257  0000BF                     	ds	2
  3258  0000C1                     _vfpfcnvrt$1836:
  3259                           	opt callstack 0
  3260                           
  3261                           ; 2 bytes @ 0x61
  3262  0000C1                     	ds	2
  3263  0000C3                     vfpfcnvrt@ll:
  3264                           	opt callstack 0
  3265                           
  3266                           ; 8 bytes @ 0x63
  3267  0000C3                     	ds	8
  3268  0000CB                     vfpfcnvrt@vp:
  3269                           	opt callstack 0
  3270                           
  3271                           ; 2 bytes @ 0x6B
  3272  0000CB                     	ds	2
  3273  0000CD                     vfpfcnvrt@c:
  3274                           	opt callstack 0
  3275                           
  3276                           ; 1 bytes @ 0x6D
  3277  0000CD                     	ds	1
  3278  0000CE                     vfpfcnvrt@llu:
  3279                           	opt callstack 0
  3280                           
  3281                           ; 8 bytes @ 0x6E
  3282  0000CE                     	ds	8
  3283  0000D6                     ?_vfprintf:
  3284                           	opt callstack 0
  3285  0000D6                     vfprintf@fp:
  3286                           	opt callstack 0
  3287                           
  3288                           ; 2 bytes @ 0x76
  3289  0000D6                     	ds	2
  3290  0000D8                     vfprintf@fmt:
  3291                           	opt callstack 0
  3292                           
  3293                           ; 2 bytes @ 0x78
  3294  0000D8                     	ds	2
  3295  0000DA                     vfprintf@ap:
  3296                           	opt callstack 0
  3297                           
  3298                           ; 2 bytes @ 0x7A
  3299  0000DA                     	ds	2
  3300  0000DC                     vfprintf@cfmt:
  3301                           	opt callstack 0
  3302                           
  3303                           ; 2 bytes @ 0x7C
  3304  0000DC                     	ds	2
  3305  0000DE                     ??_vsnprintf:
  3306                           
  3307                           ; 1 bytes @ 0x7E
  3308  0000DE                     	ds	2
  3309  0000E0                     printf@ap:
  3310                           	opt callstack 0
  3311                           
  3312                           ; 2 bytes @ 0x80
  3313  0000E0                     	ds	2
  3314  0000E2                     
  3315                           ; 1 bytes @ 0x82
  3316                           
  3317                           	psect	cstackCOMRAM
  3318  000001                     __pcstackCOMRAM:
  3319                           	opt callstack 0
  3320  000001                     ?_ADC_GetConversion:
  3321                           	opt callstack 0
  3322  000001                     ?___fladd:
  3323                           	opt callstack 0
  3324  000001                     ?___fltol:
  3325                           	opt callstack 0
  3326  000001                     ___flge@ff1:
  3327                           	opt callstack 0
  3328  000001                     ___fltol@f1:
  3329                           	opt callstack 0
  3330  000001                     ___fladd@b:
  3331                           	opt callstack 0
  3332                           
  3333                           ; 4 bytes @ 0x0
  3334  000001                     	ds	2
  3335  000003                     ??_ADC_GetConversion:
  3336                           
  3337                           ; 1 bytes @ 0x2
  3338  000003                     	ds	2
  3339  000005                     ??___fltol:
  3340  000005                     ADC_GetConversion@channel:
  3341                           	opt callstack 0
  3342  000005                     ___flge@ff2:
  3343                           	opt callstack 0
  3344  000005                     ___fladd@a:
  3345                           	opt callstack 0
  3346                           
  3347                           ; 4 bytes @ 0x4
  3348  000005                     	ds	1
  3349  000006                     ?___lmul:
  3350                           	opt callstack 0
  3351  000006                     ___lmul@multiplier:
  3352                           	opt callstack 0
  3353                           
  3354                           ; 4 bytes @ 0x5
  3355  000006                     	ds	3
  3356  000009                     ??___fladd:
  3357  000009                     ??___flge:
  3358  000009                     ___fltol@sign1:
  3359                           	opt callstack 0
  3360                           
  3361                           ; 1 bytes @ 0x8
  3362  000009                     	ds	1
  3363  00000A                     ___fltol@exp1:
  3364                           	opt callstack 0
  3365  00000A                     ___lmul@multiplicand:
  3366                           	opt callstack 0
  3367                           
  3368                           ; 4 bytes @ 0x9
  3369  00000A                     	ds	1
  3370  00000B                     ?i2_abs:
  3371                           	opt callstack 0
  3372  00000B                     EPWM1_LoadDutyValue@dutyValue:
  3373                           	opt callstack 0
  3374  00000B                     i2abs@a:
  3375                           	opt callstack 0
  3376                           
  3377                           ; 2 bytes @ 0xA
  3378  00000B                     	ds	2
  3379  00000D                     ??_EPWM1_LoadDutyValue:
  3380  00000D                     ??i2_abs:
  3381  00000D                     ___fladd@signs:
  3382                           	opt callstack 0
  3383                           
  3384                           ; 1 bytes @ 0xC
  3385  00000D                     	ds	1
  3386  00000E                     ___fladd@aexp:
  3387                           	opt callstack 0
  3388  00000E                     ___lmul@product:
  3389                           	opt callstack 0
  3390                           
  3391                           ; 4 bytes @ 0xD
  3392  00000E                     	ds	1
  3393  00000F                     ___fladd@bexp:
  3394                           	opt callstack 0
  3395                           
  3396                           ; 1 bytes @ 0xE
  3397  00000F                     	ds	1
  3398  000010                     ___fladd@grs:
  3399                           	opt callstack 0
  3400                           
  3401                           ; 1 bytes @ 0xF
  3402  000010                     	ds	1
  3403  000011                     ?___flsub:
  3404                           	opt callstack 0
  3405  000011                     ___flsub@b:
  3406                           	opt callstack 0
  3407                           
  3408                           ; 4 bytes @ 0x10
  3409  000011                     	ds	1
  3410  000012                     ?___aldiv:
  3411                           	opt callstack 0
  3412  000012                     ___aldiv@dividend:
  3413                           	opt callstack 0
  3414                           
  3415                           ; 4 bytes @ 0x11
  3416  000012                     	ds	3
  3417  000015                     ___flsub@a:
  3418                           	opt callstack 0
  3419                           
  3420                           ; 4 bytes @ 0x14
  3421  000015                     	ds	1
  3422  000016                     ___aldiv@divisor:
  3423                           	opt callstack 0
  3424                           
  3425                           ; 4 bytes @ 0x15
  3426  000016                     	ds	3
  3427  000019                     
  3428                           ; 1 bytes @ 0x18
  3429  000019                     	ds	1
  3430  00001A                     ___aldiv@counter:
  3431                           	opt callstack 0
  3432                           
  3433                           ; 1 bytes @ 0x19
  3434  00001A                     	ds	1
  3435  00001B                     ___aldiv@sign:
  3436                           	opt callstack 0
  3437                           
  3438                           ; 1 bytes @ 0x1A
  3439  00001B                     	ds	1
  3440  00001C                     ___aldiv@quotient:
  3441                           	opt callstack 0
  3442                           
  3443                           ; 4 bytes @ 0x1B
  3444  00001C                     	ds	4
  3445  000020                     ?i2___xxtofl:
  3446                           	opt callstack 0
  3447  000020                     i2___xxtofl@val:
  3448                           	opt callstack 0
  3449                           
  3450                           ; 4 bytes @ 0x1F
  3451  000020                     	ds	4
  3452  000024                     ??i2___xxtofl:
  3453                           
  3454                           ; 1 bytes @ 0x23
  3455  000024                     	ds	4
  3456  000028                     i2___xxtofl@sign:
  3457                           	opt callstack 0
  3458                           
  3459                           ; 1 bytes @ 0x27
  3460  000028                     	ds	1
  3461  000029                     i2___xxtofl@exp:
  3462                           	opt callstack 0
  3463                           
  3464                           ; 1 bytes @ 0x28
  3465  000029                     	ds	1
  3466  00002A                     i2___xxtofl@arg:
  3467                           	opt callstack 0
  3468                           
  3469                           ; 4 bytes @ 0x29
  3470  00002A                     	ds	4
  3471  00002E                     ?___flmul:
  3472                           	opt callstack 0
  3473  00002E                     ___flmul@b:
  3474                           	opt callstack 0
  3475                           
  3476                           ; 4 bytes @ 0x2D
  3477  00002E                     	ds	4
  3478  000032                     ___flmul@a:
  3479                           	opt callstack 0
  3480                           
  3481                           ; 4 bytes @ 0x31
  3482  000032                     	ds	4
  3483  000036                     ??___flmul:
  3484                           
  3485                           ; 1 bytes @ 0x35
  3486  000036                     	ds	4
  3487  00003A                     ___flmul@sign:
  3488                           	opt callstack 0
  3489                           
  3490                           ; 1 bytes @ 0x39
  3491  00003A                     	ds	1
  3492  00003B                     ___flmul@grs:
  3493                           	opt callstack 0
  3494                           
  3495                           ; 4 bytes @ 0x3A
  3496  00003B                     	ds	4
  3497  00003F                     ___flmul@aexp:
  3498                           	opt callstack 0
  3499                           
  3500                           ; 1 bytes @ 0x3E
  3501  00003F                     	ds	1
  3502  000040                     ___flmul@bexp:
  3503                           	opt callstack 0
  3504                           
  3505                           ; 1 bytes @ 0x3F
  3506  000040                     	ds	1
  3507  000041                     ___flmul@prod:
  3508                           	opt callstack 0
  3509                           
  3510                           ; 4 bytes @ 0x40
  3511  000041                     	ds	4
  3512  000045                     ___flmul@temp:
  3513                           	opt callstack 0
  3514                           
  3515                           ; 2 bytes @ 0x44
  3516  000045                     	ds	2
  3517  000047                     ?___fldiv:
  3518                           	opt callstack 0
  3519  000047                     ___fldiv@b:
  3520                           	opt callstack 0
  3521                           
  3522                           ; 4 bytes @ 0x46
  3523  000047                     	ds	4
  3524  00004B                     ___fldiv@a:
  3525                           	opt callstack 0
  3526                           
  3527                           ; 4 bytes @ 0x4A
  3528  00004B                     	ds	4
  3529  00004F                     ??___fldiv:
  3530                           
  3531                           ; 1 bytes @ 0x4E
  3532  00004F                     	ds	4
  3533  000053                     ??_PI_Controller:
  3534                           
  3535                           ; 1 bytes @ 0x52
  3536  000053                     	ds	1
  3537  000054                     ??_INTERRUPT_InterruptManager:
  3538  000054                     
  3539                           ; 1 bytes @ 0x53
  3540  000054                     	ds	4
  3541                           
  3542 ;;
  3543 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3544 ;;
  3545 ;; *************** function _main *****************
  3546 ;; Defined at:
  3547 ;;		line 97 in file "main.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  dummy           2    0        int 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;Total ram usage:        2 bytes
  3566 ;; Hardware stack levels required when called:   17
  3567 ;; This function calls:
  3568 ;;		_EUSART1_is_rx_ready
  3569 ;;		_IOCB4_SetInterruptHandler
  3570 ;;		_Out_USART
  3571 ;;		_SPI_Open
  3572 ;;		_SYSTEM_Initialize
  3573 ;;		_TMR2_SetInterruptHandler
  3574 ;;		_TMR2_StartTimer
  3575 ;;		_TMR2_StopTimer
  3576 ;;		_lcd_draw_string
  3577 ;;		_lcd_init
  3578 ;;		_snprintf
  3579 ;; This function is called by:
  3580 ;;		Startup code after reset
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text0
  3585  002986                     __ptext0:
  3586                           	opt callstack 0
  3587  002986                     _main:
  3588                           	opt callstack 14
  3589  002986                     
  3590                           ;main.c: 98:     int dummy;;main.c: 101:     SYSTEM_Initialize();
  3591  002986  EC4E  F029         	call	_SYSTEM_Initialize	;wreg free
  3592  00298A                     
  3593                           ;main.c: 102:     TMR2_StopTimer();
  3594  00298A  EC13  F02A         	call	_TMR2_StopTimer	;wreg free
  3595  00298E                     
  3596                           ;main.c: 104:     SPI_Open(SPI_DEFAULT);
  3597  00298E  0E00               	movlw	0
  3598  002990  ECB8  F024         	call	_SPI_Open
  3599  002994                     
  3600                           ;main.c: 105:     lcd_init();
  3601  002994  ECE6  F00B         	call	_lcd_init	;wreg free
  3602  002998  5081               	movf	129,w,c	;volatile
  3603  00299A                     
  3604                           ;main.c: 110:     INTCONbits.RBIF = 0;
  3605  00299A  90F2               	bcf	242,0,c	;volatile
  3606  00299C                     
  3607                           ;main.c: 113:     IOCB4_SetInterruptHandler(INTERRUPT_S1_CALLBACK);
  3608  00299C  0E32               	movlw	low _INTERRUPT_S1_CALLBACK
  3609  00299E  0100               	movlb	0	; () banked
  3610  0029A0  6F6D               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3611  0029A2  0E54               	movlw	high _INTERRUPT_S1_CALLBACK
  3612  0029A4  6F6E               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3613  0029A6  ECF8  F029         	call	_IOCB4_SetInterruptHandler	;wreg free
  3614  0029AA                     
  3615                           ;main.c: 114:     TMR2_SetInterruptHandler(TIMER2_CALLBACK);
  3616  0029AA  0E18               	movlw	low _TIMER2_CALLBACK
  3617  0029AC  0100               	movlb	0	; () banked
  3618  0029AE  6F6D               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  3619  0029B0  0E54               	movlw	high _TIMER2_CALLBACK
  3620  0029B2  6F6E               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3621  0029B4  ECF3  F029         	call	_TMR2_SetInterruptHandler	;wreg free
  3622  0029B8                     
  3623                           ;main.c: 120:     (INTCONbits.GIE = 1);
  3624  0029B8  8EF2               	bsf	242,7,c	;volatile
  3625  0029BA                     
  3626                           ;main.c: 126:     (INTCONbits.PEIE = 1);
  3627  0029BA  8CF2               	bsf	242,6,c	;volatile
  3628  0029BC                     
  3629                           ;main.c: 130:     lcd_draw_string(60, 220, "EAU          SEEV         AULA_6", 0xFFFF, 0
      +                          x0000);
  3630  0029BC  0E00               	movlw	0
  3631  0029BE  0100               	movlb	0	; () banked
  3632  0029C0  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3633  0029C2  0E3C               	movlw	60
  3634  0029C4  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3635  0029C6  0E00               	movlw	0
  3636  0029C8  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3637  0029CA  0EDC               	movlw	220
  3638  0029CC  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3639  0029CE  0E25               	movlw	low STR_8
  3640  0029D0  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3641  0029D2  0EFF               	movlw	high STR_8
  3642  0029D4  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3643  0029D6  0EFF               	movlw	255
  3644  0029D8  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3645  0029DA  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3646  0029DC  0E00               	movlw	0
  3647  0029DE  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3648  0029E0  0E00               	movlw	0
  3649  0029E2  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3650  0029E4  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3651  0029E8                     
  3652                           ;main.c: 131:     snprintf(string, sizeof (string), "SETPOINT: SPT");
  3653  0029E8  0E33               	movlw	low _string
  3654  0029EA  0101               	movlb	1	; () banked
  3655  0029EC  6F63               	movwf	snprintf@s& (0+255),b
  3656  0029EE  0E01               	movlw	high _string
  3657  0029F0  6F64               	movwf	(snprintf@s+1)& (0+255),b
  3658  0029F2  0E00               	movlw	0
  3659  0029F4  6F66               	movwf	(snprintf@n+1)& (0+255),b
  3660  0029F6  0E1E               	movlw	30
  3661  0029F8  6F65               	movwf	snprintf@n& (0+255),b
  3662  0029FA  0EA0               	movlw	low STR_9
  3663  0029FC  6F67               	movwf	snprintf@fmt& (0+255),b
  3664  0029FE  0EFF               	movlw	high STR_9
  3665  002A00  6F68               	movwf	(snprintf@fmt+1)& (0+255),b
  3666  002A02  EC9F  F028         	call	_snprintf	;wreg free
  3667  002A06                     
  3668                           ;main.c: 132:     lcd_draw_string(100, 180, string, 0xFFFF, 0x0000);
  3669  002A06  0E00               	movlw	0
  3670  002A08  0100               	movlb	0	; () banked
  3671  002A0A  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3672  002A0C  0E64               	movlw	100
  3673  002A0E  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3674  002A10  0E00               	movlw	0
  3675  002A12  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3676  002A14  0EB4               	movlw	180
  3677  002A16  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3678  002A18  0E33               	movlw	low _string
  3679  002A1A  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3680  002A1C  0E01               	movlw	high _string
  3681  002A1E  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3682  002A20  0EFF               	movlw	255
  3683  002A22  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3684  002A24  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3685  002A26  0E00               	movlw	0
  3686  002A28  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3687  002A2A  0E00               	movlw	0
  3688  002A2C  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3689  002A2E  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3690  002A32                     
  3691                           ;main.c: 133:     snprintf(string, sizeof (string), "MOTOR:MTR");
  3692  002A32  0E33               	movlw	low _string
  3693  002A34  0101               	movlb	1	; () banked
  3694  002A36  6F63               	movwf	snprintf@s& (0+255),b
  3695  002A38  0E01               	movlw	high _string
  3696  002A3A  6F64               	movwf	(snprintf@s+1)& (0+255),b
  3697  002A3C  0E00               	movlw	0
  3698  002A3E  6F66               	movwf	(snprintf@n+1)& (0+255),b
  3699  002A40  0E1E               	movlw	30
  3700  002A42  6F65               	movwf	snprintf@n& (0+255),b
  3701  002A44  0EC4               	movlw	low STR_10
  3702  002A46  6F67               	movwf	snprintf@fmt& (0+255),b
  3703  002A48  0EFF               	movlw	high STR_10
  3704  002A4A  6F68               	movwf	(snprintf@fmt+1)& (0+255),b
  3705  002A4C  EC9F  F028         	call	_snprintf	;wreg free
  3706  002A50                     
  3707                           ;main.c: 134:     lcd_draw_string(100, 160, string, 0xFFFF, 0x0000);
  3708  002A50  0E00               	movlw	0
  3709  002A52  0100               	movlb	0	; () banked
  3710  002A54  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3711  002A56  0E64               	movlw	100
  3712  002A58  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3713  002A5A  0E00               	movlw	0
  3714  002A5C  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3715  002A5E  0EA0               	movlw	160
  3716  002A60  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3717  002A62  0E33               	movlw	low _string
  3718  002A64  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3719  002A66  0E01               	movlw	high _string
  3720  002A68  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3721  002A6A  0EFF               	movlw	255
  3722  002A6C  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3723  002A6E  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3724  002A70  0E00               	movlw	0
  3725  002A72  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3726  002A74  0E00               	movlw	0
  3727  002A76  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3728  002A78  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3729  002A7C                     
  3730                           ;main.c: 135:     snprintf(string, sizeof (string), "ERROR:ERR");
  3731  002A7C  0E33               	movlw	low _string
  3732  002A7E  0101               	movlb	1	; () banked
  3733  002A80  6F63               	movwf	snprintf@s& (0+255),b
  3734  002A82  0E01               	movlw	high _string
  3735  002A84  6F64               	movwf	(snprintf@s+1)& (0+255),b
  3736  002A86  0E00               	movlw	0
  3737  002A88  6F66               	movwf	(snprintf@n+1)& (0+255),b
  3738  002A8A  0E1E               	movlw	30
  3739  002A8C  6F65               	movwf	snprintf@n& (0+255),b
  3740  002A8E  0EBA               	movlw	low STR_11
  3741  002A90  6F67               	movwf	snprintf@fmt& (0+255),b
  3742  002A92  0EFF               	movlw	high STR_11
  3743  002A94  6F68               	movwf	(snprintf@fmt+1)& (0+255),b
  3744  002A96  EC9F  F028         	call	_snprintf	;wreg free
  3745  002A9A                     
  3746                           ;main.c: 136:     lcd_draw_string(100, 140, string, 0xFFFF, 0x0000);
  3747  002A9A  0E00               	movlw	0
  3748  002A9C  0100               	movlb	0	; () banked
  3749  002A9E  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3750  002AA0  0E64               	movlw	100
  3751  002AA2  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3752  002AA4  0E00               	movlw	0
  3753  002AA6  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3754  002AA8  0E8C               	movlw	140
  3755  002AAA  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3756  002AAC  0E33               	movlw	low _string
  3757  002AAE  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3758  002AB0  0E01               	movlw	high _string
  3759  002AB2  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3760  002AB4  0EFF               	movlw	255
  3761  002AB6  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3762  002AB8  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3763  002ABA  0E00               	movlw	0
  3764  002ABC  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3765  002ABE  0E00               	movlw	0
  3766  002AC0  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3767  002AC2  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3768  002AC6                     
  3769                           ;main.c: 137:     snprintf(string, sizeof (string), "DUTYCYCLE: DC");
  3770  002AC6  0E33               	movlw	low _string
  3771  002AC8  0101               	movlb	1	; () banked
  3772  002ACA  6F63               	movwf	snprintf@s& (0+255),b
  3773  002ACC  0E01               	movlw	high _string
  3774  002ACE  6F64               	movwf	(snprintf@s+1)& (0+255),b
  3775  002AD0  0E00               	movlw	0
  3776  002AD2  6F66               	movwf	(snprintf@n+1)& (0+255),b
  3777  002AD4  0E1E               	movlw	30
  3778  002AD6  6F65               	movwf	snprintf@n& (0+255),b
  3779  002AD8  0E92               	movlw	low STR_12
  3780  002ADA  6F67               	movwf	snprintf@fmt& (0+255),b
  3781  002ADC  0EFF               	movlw	high STR_12
  3782  002ADE  6F68               	movwf	(snprintf@fmt+1)& (0+255),b
  3783  002AE0  EC9F  F028         	call	_snprintf	;wreg free
  3784  002AE4                     
  3785                           ;main.c: 138:     lcd_draw_string(100, 120, string, 0xFFFF, 0x0000);
  3786  002AE4  0E00               	movlw	0
  3787  002AE6  0100               	movlb	0	; () banked
  3788  002AE8  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3789  002AEA  0E64               	movlw	100
  3790  002AEC  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3791  002AEE  0E00               	movlw	0
  3792  002AF0  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3793  002AF2  0E78               	movlw	120
  3794  002AF4  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3795  002AF6  0E33               	movlw	low _string
  3796  002AF8  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3797  002AFA  0E01               	movlw	high _string
  3798  002AFC  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3799  002AFE  0EFF               	movlw	255
  3800  002B00  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3801  002B02  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3802  002B04  0E00               	movlw	0
  3803  002B06  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3804  002B08  0E00               	movlw	0
  3805  002B0A  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3806  002B0C  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3807  002B10                     
  3808                           ;main.c: 139:     snprintf(string, sizeof (string), "SPT   MTR   ERR   DC", setpoint, se
      +                          nsor);
  3809  002B10  0E33               	movlw	low _string
  3810  002B12  0101               	movlb	1	; () banked
  3811  002B14  6F63               	movwf	snprintf@s& (0+255),b
  3812  002B16  0E01               	movlw	high _string
  3813  002B18  6F64               	movwf	(snprintf@s+1)& (0+255),b
  3814  002B1A  0E00               	movlw	0
  3815  002B1C  6F66               	movwf	(snprintf@n+1)& (0+255),b
  3816  002B1E  0E1E               	movlw	30
  3817  002B20  6F65               	movwf	snprintf@n& (0+255),b
  3818  002B22  0E7D               	movlw	low STR_13
  3819  002B24  6F67               	movwf	snprintf@fmt& (0+255),b
  3820  002B26  0EFF               	movlw	high STR_13
  3821  002B28  6F68               	movwf	(snprintf@fmt+1)& (0+255),b
  3822  002B2A  C100  F169         	movff	_setpoint,?_snprintf+6
  3823  002B2E  C101  F16A         	movff	_setpoint+1,?_snprintf+7
  3824  002B32  C102  F16B         	movff	_setpoint+2,?_snprintf+8
  3825  002B36  C103  F16C         	movff	_setpoint+3,?_snprintf+9
  3826  002B3A  C104  F16D         	movff	_sensor,?_snprintf+10
  3827  002B3E  C105  F16E         	movff	_sensor+1,?_snprintf+11
  3828  002B42  C106  F16F         	movff	_sensor+2,?_snprintf+12
  3829  002B46  C107  F170         	movff	_sensor+3,?_snprintf+13
  3830  002B4A  EC9F  F028         	call	_snprintf	;wreg free
  3831  002B4E                     
  3832                           ;main.c: 140:     lcd_draw_string(100, 50, string, 0xFFFF, 0x0000);
  3833  002B4E  0E00               	movlw	0
  3834  002B50  0100               	movlb	0	; () banked
  3835  002B52  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3836  002B54  0E64               	movlw	100
  3837  002B56  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3838  002B58  0E00               	movlw	0
  3839  002B5A  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3840  002B5C  0E32               	movlw	50
  3841  002B5E  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3842  002B60  0E33               	movlw	low _string
  3843  002B62  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3844  002B64  0E01               	movlw	high _string
  3845  002B66  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3846  002B68  0EFF               	movlw	255
  3847  002B6A  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3848  002B6C  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3849  002B6E  0E00               	movlw	0
  3850  002B70  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3851  002B72  0E00               	movlw	0
  3852  002B74  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3853  002B76  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3854  002B7A                     
  3855                           ;main.c: 142:     TMR2_StartTimer();
  3856  002B7A  EC15  F02A         	call	_TMR2_StartTimer	;wreg free
  3857  002B7E                     l8266:
  3858                           
  3859                           ;main.c: 146:         if (EUSART1_is_rx_ready()) {
  3860  002B7E  ECCA  F029         	call	_EUSART1_is_rx_ready	;wreg free
  3861  002B82  0900               	iorlw	0
  3862  002B84  B4D8               	btfsc	status,2,c
  3863  002B86  EFC7  F015         	goto	u9371
  3864  002B8A  EFC9  F015         	goto	u9370
  3865  002B8E                     u9371:
  3866  002B8E  EFCB  F015         	goto	l8272
  3867  002B92                     u9370:
  3868  002B92                     
  3869                           ;main.c: 147:             Out_USART();
  3870  002B92  ECC5  F01E         	call	_Out_USART	;wreg free
  3871  002B96                     l8272:
  3872                           
  3873                           ;main.c: 152:             snprintf(string, sizeof (string), "%03d%% %03d%% %03d%% %04d "
      +                          , setpoint, sensor, error, dc_value);
  3874  002B96  0E33               	movlw	low _string
  3875  002B98  0101               	movlb	1	; () banked
  3876  002B9A  6F63               	movwf	snprintf@s& (0+255),b
  3877  002B9C  0E01               	movlw	high _string
  3878  002B9E  6F64               	movwf	(snprintf@s+1)& (0+255),b
  3879  002BA0  0E00               	movlw	0
  3880  002BA2  6F66               	movwf	(snprintf@n+1)& (0+255),b
  3881  002BA4  0E1E               	movlw	30
  3882  002BA6  6F65               	movwf	snprintf@n& (0+255),b
  3883  002BA8  0E62               	movlw	low STR_14
  3884  002BAA  6F67               	movwf	snprintf@fmt& (0+255),b
  3885  002BAC  0EFF               	movlw	high STR_14
  3886  002BAE  6F68               	movwf	(snprintf@fmt+1)& (0+255),b
  3887  002BB0  C100  F169         	movff	_setpoint,?_snprintf+6
  3888  002BB4  C101  F16A         	movff	_setpoint+1,?_snprintf+7
  3889  002BB8  C102  F16B         	movff	_setpoint+2,?_snprintf+8
  3890  002BBC  C103  F16C         	movff	_setpoint+3,?_snprintf+9
  3891  002BC0  C104  F16D         	movff	_sensor,?_snprintf+10
  3892  002BC4  C105  F16E         	movff	_sensor+1,?_snprintf+11
  3893  002BC8  C106  F16F         	movff	_sensor+2,?_snprintf+12
  3894  002BCC  C107  F170         	movff	_sensor+3,?_snprintf+13
  3895  002BD0  C0E2  F171         	movff	_error,?_snprintf+14
  3896  002BD4  C0E3  F172         	movff	_error+1,?_snprintf+15
  3897  002BD8  C0E4  F173         	movff	_error+2,?_snprintf+16
  3898  002BDC  C0E5  F174         	movff	_error+3,?_snprintf+17
  3899  002BE0  C058  F175         	movff	_dc_value,?_snprintf+18
  3900  002BE4  C059  F176         	movff	_dc_value+1,?_snprintf+19
  3901  002BE8  C05A  F177         	movff	_dc_value+2,?_snprintf+20
  3902  002BEC  C05B  F178         	movff	_dc_value+3,?_snprintf+21
  3903  002BF0  EC9F  F028         	call	_snprintf	;wreg free
  3904  002BF4                     
  3905                           ;main.c: 153:             lcd_draw_string(100, 25, string, 0xFFFF, 0x0000);
  3906  002BF4  0E00               	movlw	0
  3907  002BF6  0100               	movlb	0	; () banked
  3908  002BF8  6F8D               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3909  002BFA  0E64               	movlw	100
  3910  002BFC  6F8C               	movwf	lcd_draw_string@x& (0+255),b
  3911  002BFE  0E00               	movlw	0
  3912  002C00  6F8F               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3913  002C02  0E19               	movlw	25
  3914  002C04  6F8E               	movwf	lcd_draw_string@y& (0+255),b
  3915  002C06  0E33               	movlw	low _string
  3916  002C08  6F90               	movwf	lcd_draw_string@pS& (0+255),b
  3917  002C0A  0E01               	movlw	high _string
  3918  002C0C  6F91               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3919  002C0E  0EFF               	movlw	255
  3920  002C10  6F93               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3921  002C12  6992               	setf	lcd_draw_string@fg_color& (0+255),b
  3922  002C14  0E00               	movlw	0
  3923  002C16  6F95               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3924  002C18  0E00               	movlw	0
  3925  002C1A  6F94               	movwf	lcd_draw_string@bg_color& (0+255),b
  3926  002C1C  EC70  F01F         	call	_lcd_draw_string	;wreg free
  3927  002C20  EFBF  F015         	goto	l8266
  3928  002C24  EF42  F000         	goto	start
  3929  002C28                     __end_of_main:
  3930                           	opt callstack 0
  3931                           
  3932 ;; *************** function _snprintf *****************
  3933 ;; Defined at:
  3934 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  s               2   18[BANK1 ] PTR unsigned char 
  3937 ;;		 -> string(30), 
  3938 ;;  n               2   20[BANK1 ] unsigned int 
  3939 ;;  fmt             2   22[BANK1 ] PTR const unsigned char 
  3940 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
  3941 ;;		 -> STR_10(10), STR_9(14), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  ap              2   42[BANK1 ] PTR void [1]
  3944 ;;		 -> ?_snprintf(2), ?_printf(2), 
  3945 ;;  ret             2    0        int 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2   18[BANK1 ] int 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3955 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3956 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3959 ;;Total ram usage:       26 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   16
  3962 ;; This function calls:
  3963 ;;		_vsnprintf
  3964 ;; This function is called by:
  3965 ;;		_main
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text1
  3970  00513E                     __ptext1:
  3971                           	opt callstack 0
  3972  00513E                     _snprintf:
  3973                           	opt callstack 14
  3974  00513E  0E69               	movlw	low (?_snprintf+6)
  3975  005140  0101               	movlb	1	; () banked
  3976  005142  6F7B               	movwf	snprintf@ap& (0+255),b
  3977  005144  0E01               	movlw	high (?_snprintf+6)
  3978  005146  6F7C               	movwf	(snprintf@ap+1)& (0+255),b
  3979  005148                     
  3980                           ; BSR set to: 1
  3981  005148  C163  F151         	movff	snprintf@s,vsnprintf@s
  3982  00514C  C164  F152         	movff	snprintf@s+1,vsnprintf@s+1
  3983  005150  C165  F153         	movff	snprintf@n,vsnprintf@n
  3984  005154  C166  F154         	movff	snprintf@n+1,vsnprintf@n+1
  3985  005158  C167  F155         	movff	snprintf@fmt,vsnprintf@fmt
  3986  00515C  C168  F156         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3987  005160  0E7B               	movlw	low snprintf@ap
  3988  005162  6F57               	movwf	vsnprintf@ap& (0+255),b
  3989  005164  0E01               	movlw	high snprintf@ap
  3990  005166  6F58               	movwf	(vsnprintf@ap+1)& (0+255),b
  3991  005168  EC0C  F020         	call	_vsnprintf	;wreg free
  3992  00516C  0012               	return		;funcret
  3993  00516E                     __end_of_snprintf:
  3994                           	opt callstack 0
  3995                           
  3996 ;; *************** function _vsnprintf *****************
  3997 ;; Defined at:
  3998 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  s               2    0[BANK1 ] PTR unsigned char 
  4001 ;;		 -> string(30), 
  4002 ;;  n               2    2[BANK1 ] unsigned int 
  4003 ;;  fmt             2    4[BANK1 ] PTR const unsigned char 
  4004 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
  4005 ;;		 -> STR_10(10), STR_9(14), 
  4006 ;;  ap              2    6[BANK1 ] PTR PTR void 
  4007 ;;		 -> snprintf@ap(2), 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  f               6   12[BANK1 ] struct _IO_FILE
  4010 ;;  cnt             2   10[BANK1 ] int 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  2    0[BANK1 ] int 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4020 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4021 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4022 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4023 ;;      Totals:         0       4      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;Total ram usage:       22 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:   15
  4027 ;; This function calls:
  4028 ;;		_vfprintf
  4029 ;; This function is called by:
  4030 ;;		_snprintf
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           	psect	text2
  4035  004018                     __ptext2:
  4036                           	opt callstack 0
  4037  004018                     _vsnprintf:
  4038                           	opt callstack 14
  4039  004018  0E80               	movlw	128
  4040  00401A  0101               	movlb	1	; () banked
  4041  00401C  5D54               	subwf	(vsnprintf@n+1)& (0+255),w,b
  4042  00401E  A0D8               	btfss	status,0,c
  4043  004020  EF14  F020         	goto	u9161
  4044  004024  EF16  F020         	goto	u9160
  4045  004028                     u9161:
  4046  004028  EF1E  F020         	goto	l7870
  4047  00402C                     u9160:
  4048  00402C                     
  4049                           ; BSR set to: 1
  4050  00402C  0E00               	movlw	0
  4051  00402E  6F09               	movwf	(_errno+1)& (0+255),b
  4052  004030  0E4B               	movlw	75
  4053  004032  6F08               	movwf	_errno& (0+255),b
  4054  004034                     
  4055                           ; BSR set to: 1
  4056  004034  6951               	setf	?_vsnprintf& (0+255),b
  4057  004036  6952               	setf	(?_vsnprintf+1)& (0+255),b
  4058  004038  EF98  F020         	goto	l1727
  4059  00403C                     l7870:
  4060                           
  4061                           ; BSR set to: 1
  4062  00403C  C151  F15D         	movff	vsnprintf@s,vsnprintf@f
  4063  004040  C152  F15E         	movff	vsnprintf@s+1,vsnprintf@f+1
  4064  004044  5154               	movf	(vsnprintf@n+1)& (0+255),w,b
  4065  004046  E109               	bnz	u9170
  4066  004048  0E02               	movlw	2
  4067  00404A  5D53               	subwf	vsnprintf@n& (0+255),w,b
  4068  00404C  A0D8               	btfss	status,0,c
  4069  00404E  EF2B  F020         	goto	u9171
  4070  004052  EF2D  F020         	goto	u9170
  4071  004056                     u9171:
  4072  004056  EF39  F020         	goto	l7876
  4073  00405A                     u9170:
  4074  00405A                     
  4075                           ; BSR set to: 1
  4076  00405A  0EFF               	movlw	255
  4077  00405C  2553               	addwf	vsnprintf@n& (0+255),w,b
  4078  00405E  6F61               	movwf	(vsnprintf@f+4)& (0+255),b
  4079  004060  0EFF               	movlw	255
  4080  004062  2154               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4081  004064  6F62               	movwf	(vsnprintf@f+5)& (0+255),b
  4082  004066                     
  4083                           ; BSR set to: 1
  4084  004066  0E00               	movlw	0
  4085  004068  6F60               	movwf	(vsnprintf@f+3)& (0+255),b
  4086  00406A  0E00               	movlw	0
  4087  00406C  6F5F               	movwf	(vsnprintf@f+2)& (0+255),b
  4088  00406E  EF41  F020         	goto	l7878
  4089  004072                     l7876:
  4090                           
  4091                           ; BSR set to: 1
  4092  004072  0E00               	movlw	0
  4093  004074  6F62               	movwf	(vsnprintf@f+5)& (0+255),b
  4094  004076  0E01               	movlw	1
  4095  004078  6F61               	movwf	(vsnprintf@f+4)& (0+255),b
  4096  00407A  0E00               	movlw	0
  4097  00407C  6F60               	movwf	(vsnprintf@f+3)& (0+255),b
  4098  00407E  0E01               	movlw	1
  4099  004080  6F5F               	movwf	(vsnprintf@f+2)& (0+255),b
  4100  004082                     l7878:
  4101                           
  4102                           ; BSR set to: 1
  4103  004082  0E5D               	movlw	low vsnprintf@f
  4104  004084  0100               	movlb	0	; () banked
  4105  004086  6FD6               	movwf	vfprintf@fp& (0+255),b
  4106  004088  0E01               	movlw	high vsnprintf@f
  4107  00408A  6FD7               	movwf	(vfprintf@fp+1)& (0+255),b
  4108  00408C  C155  F0D8         	movff	vsnprintf@fmt,vfprintf@fmt
  4109  004090  C156  F0D9         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4110  004094  C157  F0DA         	movff	vsnprintf@ap,vfprintf@ap
  4111  004098  C158  F0DB         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4112  00409C  ECC2  F025         	call	_vfprintf	;wreg free
  4113  0040A0  C0D6  F15B         	movff	?_vfprintf,vsnprintf@cnt
  4114  0040A4  C0D7  F15C         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4115  0040A8  0101               	movlb	1	; () banked
  4116  0040AA  5153               	movf	vsnprintf@n& (0+255),w,b
  4117  0040AC  1154               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4118  0040AE  B4D8               	btfsc	status,2,c
  4119  0040B0  EF5C  F020         	goto	u9181
  4120  0040B4  EF5E  F020         	goto	u9180
  4121  0040B8                     u9181:
  4122  0040B8  EF94  F020         	goto	l7890
  4123  0040BC                     u9180:
  4124  0040BC                     
  4125                           ; BSR set to: 1
  4126  0040BC  BF5C               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4127  0040BE  EF63  F020         	goto	u9191
  4128  0040C2  EF65  F020         	goto	u9190
  4129  0040C6                     u9191:
  4130  0040C6  EF94  F020         	goto	l7890
  4131  0040CA                     u9190:
  4132  0040CA                     
  4133                           ; BSR set to: 1
  4134  0040CA  0EFF               	movlw	255
  4135  0040CC  0100               	movlb	0	; () banked
  4136  0040CE  6FDE               	movwf	??_vsnprintf& (0+255),b
  4137  0040D0  0EFF               	movlw	255
  4138  0040D2  6FDF               	movwf	(??_vsnprintf+1)& (0+255),b
  4139  0040D4  C153  F0E0         	movff	vsnprintf@n,??_vsnprintf+2
  4140  0040D8  C154  F0E1         	movff	vsnprintf@n+1,??_vsnprintf+3
  4141  0040DC  51DE               	movf	??_vsnprintf& (0+255),w,b
  4142  0040DE  27E0               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4143  0040E0  51DF               	movf	(??_vsnprintf+1)& (0+255),w,b
  4144  0040E2  23E1               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4145  0040E4  51E0               	movf	(??_vsnprintf+2)& (0+255),w,b
  4146  0040E6  0101               	movlb	1	; () banked
  4147  0040E8  5D5B               	subwf	vsnprintf@cnt& (0+255),w,b
  4148  0040EA  0100               	movlb	0	; () banked
  4149  0040EC  51E1               	movf	(??_vsnprintf+3)& (0+255),w,b
  4150  0040EE  0101               	movlb	1	; () banked
  4151  0040F0  595C               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4152  0040F2  A0D8               	btfss	status,0,c
  4153  0040F4  EF7E  F020         	goto	u9201
  4154  0040F8  EF80  F020         	goto	u9200
  4155  0040FC                     u9201:
  4156  0040FC  EF88  F020         	goto	l1732
  4157  004100                     u9200:
  4158  004100                     
  4159                           ; BSR set to: 1
  4160  004100  0EFF               	movlw	255
  4161  004102  2553               	addwf	vsnprintf@n& (0+255),w,b
  4162  004104  6F59               	movwf	_vsnprintf$2542& (0+255),b
  4163  004106  0EFF               	movlw	255
  4164  004108  2154               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4165  00410A  6F5A               	movwf	(_vsnprintf$2542+1)& (0+255),b
  4166  00410C  EF8C  F020         	goto	l7888
  4167  004110                     l1732:
  4168                           
  4169                           ; BSR set to: 1
  4170  004110  C15B  F159         	movff	vsnprintf@cnt,_vsnprintf$2542
  4171  004114  C15C  F15A         	movff	vsnprintf@cnt+1,_vsnprintf$2542+1
  4172  004118                     l7888:
  4173                           
  4174                           ; BSR set to: 1
  4175  004118  5159               	movf	_vsnprintf$2542& (0+255),w,b
  4176  00411A  2551               	addwf	vsnprintf@s& (0+255),w,b
  4177  00411C  6ED9               	movwf	fsr2l,c
  4178  00411E  515A               	movf	(_vsnprintf$2542+1)& (0+255),w,b
  4179  004120  2152               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4180  004122  6EDA               	movwf	fsr2h,c
  4181  004124  0E00               	movlw	0
  4182  004126  6EDF               	movwf	indf2,c
  4183  004128                     l7890:
  4184                           
  4185                           ; BSR set to: 1
  4186  004128  C15B  F151         	movff	vsnprintf@cnt,?_vsnprintf
  4187  00412C  C15C  F152         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4188  004130                     l1727:
  4189                           
  4190                           ; BSR set to: 1
  4191  004130  0012               	return		;funcret
  4192  004132                     __end_of_vsnprintf:
  4193                           	opt callstack 0
  4194                           
  4195 ;; *************** function _lcd_init *****************
  4196 ;; Defined at:
  4197 ;;		line 34 in file "lib_ili9341.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; Hardware stack levels required when called:   12
  4218 ;; This function calls:
  4219 ;;		_lcd_fill
  4220 ;;		_lcd_send
  4221 ;;		_msDelay
  4222 ;; This function is called by:
  4223 ;;		_main
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text3
  4228  0017CC                     __ptext3:
  4229                           	opt callstack 0
  4230  0017CC                     _lcd_init:
  4231                           	opt callstack 18
  4232  0017CC                     
  4233                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
  4234  0017CC  0E01               	movlw	1
  4235  0017CE  0100               	movlb	0	; () banked
  4236  0017D0  6F6E               	movwf	lcd_send@value& (0+255),b
  4237  0017D2  0E00               	movlw	0
  4238  0017D4  EC61  F029         	call	_lcd_send
  4239  0017D8                     
  4240                           ;lib_ili9341.c: 38:     msDelay(150);
  4241  0017D8  0E96               	movlw	150
  4242  0017DA  EC6A  F028         	call	_msDelay
  4243  0017DE                     
  4244                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
  4245  0017DE  0EEF               	movlw	239
  4246  0017E0  0100               	movlb	0	; () banked
  4247  0017E2  6F6E               	movwf	lcd_send@value& (0+255),b
  4248  0017E4  0E00               	movlw	0
  4249  0017E6  EC61  F029         	call	_lcd_send
  4250  0017EA                     
  4251                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
  4252  0017EA  0E03               	movlw	3
  4253  0017EC  0100               	movlb	0	; () banked
  4254  0017EE  6F6E               	movwf	lcd_send@value& (0+255),b
  4255  0017F0  0E01               	movlw	1
  4256  0017F2  EC61  F029         	call	_lcd_send
  4257  0017F6                     
  4258                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
  4259  0017F6  0E80               	movlw	128
  4260  0017F8  0100               	movlb	0	; () banked
  4261  0017FA  6F6E               	movwf	lcd_send@value& (0+255),b
  4262  0017FC  0E01               	movlw	1
  4263  0017FE  EC61  F029         	call	_lcd_send
  4264  001802                     
  4265                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
  4266  001802  0E02               	movlw	2
  4267  001804  0100               	movlb	0	; () banked
  4268  001806  6F6E               	movwf	lcd_send@value& (0+255),b
  4269  001808  0E01               	movlw	1
  4270  00180A  EC61  F029         	call	_lcd_send
  4271  00180E                     
  4272                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
  4273  00180E  0ECF               	movlw	207
  4274  001810  0100               	movlb	0	; () banked
  4275  001812  6F6E               	movwf	lcd_send@value& (0+255),b
  4276  001814  0E00               	movlw	0
  4277  001816  EC61  F029         	call	_lcd_send
  4278  00181A                     
  4279                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
  4280  00181A  0E00               	movlw	0
  4281  00181C  0100               	movlb	0	; () banked
  4282  00181E  6F6E               	movwf	lcd_send@value& (0+255),b
  4283  001820  0E01               	movlw	1
  4284  001822  EC61  F029         	call	_lcd_send
  4285  001826                     
  4286                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
  4287  001826  0EC1               	movlw	193
  4288  001828  0100               	movlb	0	; () banked
  4289  00182A  6F6E               	movwf	lcd_send@value& (0+255),b
  4290  00182C  0E01               	movlw	1
  4291  00182E  EC61  F029         	call	_lcd_send
  4292  001832                     
  4293                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
  4294  001832  0E30               	movlw	48
  4295  001834  0100               	movlb	0	; () banked
  4296  001836  6F6E               	movwf	lcd_send@value& (0+255),b
  4297  001838  0E01               	movlw	1
  4298  00183A  EC61  F029         	call	_lcd_send
  4299  00183E                     
  4300                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
  4301  00183E  0EED               	movlw	237
  4302  001840  0100               	movlb	0	; () banked
  4303  001842  6F6E               	movwf	lcd_send@value& (0+255),b
  4304  001844  0E00               	movlw	0
  4305  001846  EC61  F029         	call	_lcd_send
  4306  00184A                     
  4307                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
  4308  00184A  0E64               	movlw	100
  4309  00184C  0100               	movlb	0	; () banked
  4310  00184E  6F6E               	movwf	lcd_send@value& (0+255),b
  4311  001850  0E01               	movlw	1
  4312  001852  EC61  F029         	call	_lcd_send
  4313  001856                     
  4314                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
  4315  001856  0E03               	movlw	3
  4316  001858  0100               	movlb	0	; () banked
  4317  00185A  6F6E               	movwf	lcd_send@value& (0+255),b
  4318  00185C  0E01               	movlw	1
  4319  00185E  EC61  F029         	call	_lcd_send
  4320  001862                     
  4321                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
  4322  001862  0E12               	movlw	18
  4323  001864  0100               	movlb	0	; () banked
  4324  001866  6F6E               	movwf	lcd_send@value& (0+255),b
  4325  001868  0E01               	movlw	1
  4326  00186A  EC61  F029         	call	_lcd_send
  4327  00186E                     
  4328                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
  4329  00186E  0E81               	movlw	129
  4330  001870  0100               	movlb	0	; () banked
  4331  001872  6F6E               	movwf	lcd_send@value& (0+255),b
  4332  001874  0E01               	movlw	1
  4333  001876  EC61  F029         	call	_lcd_send
  4334  00187A                     
  4335                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
  4336  00187A  0EE8               	movlw	232
  4337  00187C  0100               	movlb	0	; () banked
  4338  00187E  6F6E               	movwf	lcd_send@value& (0+255),b
  4339  001880  0E00               	movlw	0
  4340  001882  EC61  F029         	call	_lcd_send
  4341  001886                     
  4342                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
  4343  001886  0E85               	movlw	133
  4344  001888  0100               	movlb	0	; () banked
  4345  00188A  6F6E               	movwf	lcd_send@value& (0+255),b
  4346  00188C  0E01               	movlw	1
  4347  00188E  EC61  F029         	call	_lcd_send
  4348  001892                     
  4349                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
  4350  001892  0E00               	movlw	0
  4351  001894  0100               	movlb	0	; () banked
  4352  001896  6F6E               	movwf	lcd_send@value& (0+255),b
  4353  001898  0E01               	movlw	1
  4354  00189A  EC61  F029         	call	_lcd_send
  4355  00189E                     
  4356                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
  4357  00189E  0E78               	movlw	120
  4358  0018A0  0100               	movlb	0	; () banked
  4359  0018A2  6F6E               	movwf	lcd_send@value& (0+255),b
  4360  0018A4  0E01               	movlw	1
  4361  0018A6  EC61  F029         	call	_lcd_send
  4362  0018AA                     
  4363                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
  4364  0018AA  0ECB               	movlw	203
  4365  0018AC  0100               	movlb	0	; () banked
  4366  0018AE  6F6E               	movwf	lcd_send@value& (0+255),b
  4367  0018B0  0E00               	movlw	0
  4368  0018B2  EC61  F029         	call	_lcd_send
  4369  0018B6                     
  4370                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
  4371  0018B6  0E39               	movlw	57
  4372  0018B8  0100               	movlb	0	; () banked
  4373  0018BA  6F6E               	movwf	lcd_send@value& (0+255),b
  4374  0018BC  0E01               	movlw	1
  4375  0018BE  EC61  F029         	call	_lcd_send
  4376  0018C2                     
  4377                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
  4378  0018C2  0E2C               	movlw	44
  4379  0018C4  0100               	movlb	0	; () banked
  4380  0018C6  6F6E               	movwf	lcd_send@value& (0+255),b
  4381  0018C8  0E01               	movlw	1
  4382  0018CA  EC61  F029         	call	_lcd_send
  4383  0018CE                     
  4384                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
  4385  0018CE  0E00               	movlw	0
  4386  0018D0  0100               	movlb	0	; () banked
  4387  0018D2  6F6E               	movwf	lcd_send@value& (0+255),b
  4388  0018D4  0E01               	movlw	1
  4389  0018D6  EC61  F029         	call	_lcd_send
  4390  0018DA                     
  4391                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
  4392  0018DA  0E34               	movlw	52
  4393  0018DC  0100               	movlb	0	; () banked
  4394  0018DE  6F6E               	movwf	lcd_send@value& (0+255),b
  4395  0018E0  0E01               	movlw	1
  4396  0018E2  EC61  F029         	call	_lcd_send
  4397  0018E6                     
  4398                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
  4399  0018E6  0E02               	movlw	2
  4400  0018E8  0100               	movlb	0	; () banked
  4401  0018EA  6F6E               	movwf	lcd_send@value& (0+255),b
  4402  0018EC  0E01               	movlw	1
  4403  0018EE  EC61  F029         	call	_lcd_send
  4404  0018F2                     
  4405                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
  4406  0018F2  0EF7               	movlw	247
  4407  0018F4  0100               	movlb	0	; () banked
  4408  0018F6  6F6E               	movwf	lcd_send@value& (0+255),b
  4409  0018F8  0E00               	movlw	0
  4410  0018FA  EC61  F029         	call	_lcd_send
  4411  0018FE                     
  4412                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
  4413  0018FE  0E20               	movlw	32
  4414  001900  0100               	movlb	0	; () banked
  4415  001902  6F6E               	movwf	lcd_send@value& (0+255),b
  4416  001904  0E01               	movlw	1
  4417  001906  EC61  F029         	call	_lcd_send
  4418  00190A                     
  4419                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
  4420  00190A  0EEA               	movlw	234
  4421  00190C  0100               	movlb	0	; () banked
  4422  00190E  6F6E               	movwf	lcd_send@value& (0+255),b
  4423  001910  0E00               	movlw	0
  4424  001912  EC61  F029         	call	_lcd_send
  4425  001916                     
  4426                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
  4427  001916  0E00               	movlw	0
  4428  001918  0100               	movlb	0	; () banked
  4429  00191A  6F6E               	movwf	lcd_send@value& (0+255),b
  4430  00191C  0E01               	movlw	1
  4431  00191E  EC61  F029         	call	_lcd_send
  4432  001922                     
  4433                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
  4434  001922  0E00               	movlw	0
  4435  001924  0100               	movlb	0	; () banked
  4436  001926  6F6E               	movwf	lcd_send@value& (0+255),b
  4437  001928  0E01               	movlw	1
  4438  00192A  EC61  F029         	call	_lcd_send
  4439  00192E                     
  4440                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
  4441  00192E  0EC0               	movlw	192
  4442  001930  0100               	movlb	0	; () banked
  4443  001932  6F6E               	movwf	lcd_send@value& (0+255),b
  4444  001934  0E00               	movlw	0
  4445  001936  EC61  F029         	call	_lcd_send
  4446  00193A                     
  4447                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
  4448  00193A  0E23               	movlw	35
  4449  00193C  0100               	movlb	0	; () banked
  4450  00193E  6F6E               	movwf	lcd_send@value& (0+255),b
  4451  001940  0E01               	movlw	1
  4452  001942  EC61  F029         	call	_lcd_send
  4453  001946                     
  4454                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
  4455  001946  0EC1               	movlw	193
  4456  001948  0100               	movlb	0	; () banked
  4457  00194A  6F6E               	movwf	lcd_send@value& (0+255),b
  4458  00194C  0E00               	movlw	0
  4459  00194E  EC61  F029         	call	_lcd_send
  4460  001952                     
  4461                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
  4462  001952  0E10               	movlw	16
  4463  001954  0100               	movlb	0	; () banked
  4464  001956  6F6E               	movwf	lcd_send@value& (0+255),b
  4465  001958  0E01               	movlw	1
  4466  00195A  EC61  F029         	call	_lcd_send
  4467  00195E                     
  4468                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
  4469  00195E  0EC5               	movlw	197
  4470  001960  0100               	movlb	0	; () banked
  4471  001962  6F6E               	movwf	lcd_send@value& (0+255),b
  4472  001964  0E00               	movlw	0
  4473  001966  EC61  F029         	call	_lcd_send
  4474  00196A                     
  4475                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
  4476  00196A  0E3E               	movlw	62
  4477  00196C  0100               	movlb	0	; () banked
  4478  00196E  6F6E               	movwf	lcd_send@value& (0+255),b
  4479  001970  0E01               	movlw	1
  4480  001972  EC61  F029         	call	_lcd_send
  4481  001976                     
  4482                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
  4483  001976  0E28               	movlw	40
  4484  001978  0100               	movlb	0	; () banked
  4485  00197A  6F6E               	movwf	lcd_send@value& (0+255),b
  4486  00197C  0E01               	movlw	1
  4487  00197E  EC61  F029         	call	_lcd_send
  4488  001982                     
  4489                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
  4490  001982  0EC7               	movlw	199
  4491  001984  0100               	movlb	0	; () banked
  4492  001986  6F6E               	movwf	lcd_send@value& (0+255),b
  4493  001988  0E00               	movlw	0
  4494  00198A  EC61  F029         	call	_lcd_send
  4495  00198E                     
  4496                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
  4497  00198E  0E86               	movlw	134
  4498  001990  0100               	movlb	0	; () banked
  4499  001992  6F6E               	movwf	lcd_send@value& (0+255),b
  4500  001994  0E01               	movlw	1
  4501  001996  EC61  F029         	call	_lcd_send
  4502  00199A                     
  4503                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
  4504  00199A  0E36               	movlw	54
  4505  00199C  0100               	movlb	0	; () banked
  4506  00199E  6F6E               	movwf	lcd_send@value& (0+255),b
  4507  0019A0  0E00               	movlw	0
  4508  0019A2  EC61  F029         	call	_lcd_send
  4509  0019A6                     
  4510                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
  4511  0019A6  0E48               	movlw	72
  4512  0019A8  0100               	movlb	0	; () banked
  4513  0019AA  6F6E               	movwf	lcd_send@value& (0+255),b
  4514  0019AC  0E01               	movlw	1
  4515  0019AE  EC61  F029         	call	_lcd_send
  4516  0019B2                     
  4517                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
  4518  0019B2  0E3A               	movlw	58
  4519  0019B4  0100               	movlb	0	; () banked
  4520  0019B6  6F6E               	movwf	lcd_send@value& (0+255),b
  4521  0019B8  0E00               	movlw	0
  4522  0019BA  EC61  F029         	call	_lcd_send
  4523  0019BE                     
  4524                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
  4525  0019BE  0E55               	movlw	85
  4526  0019C0  0100               	movlb	0	; () banked
  4527  0019C2  6F6E               	movwf	lcd_send@value& (0+255),b
  4528  0019C4  0E01               	movlw	1
  4529  0019C6  EC61  F029         	call	_lcd_send
  4530  0019CA                     
  4531                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
  4532  0019CA  0EB1               	movlw	177
  4533  0019CC  0100               	movlb	0	; () banked
  4534  0019CE  6F6E               	movwf	lcd_send@value& (0+255),b
  4535  0019D0  0E00               	movlw	0
  4536  0019D2  EC61  F029         	call	_lcd_send
  4537  0019D6                     
  4538                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
  4539  0019D6  0E00               	movlw	0
  4540  0019D8  0100               	movlb	0	; () banked
  4541  0019DA  6F6E               	movwf	lcd_send@value& (0+255),b
  4542  0019DC  0E01               	movlw	1
  4543  0019DE  EC61  F029         	call	_lcd_send
  4544  0019E2                     
  4545                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
  4546  0019E2  0E18               	movlw	24
  4547  0019E4  0100               	movlb	0	; () banked
  4548  0019E6  6F6E               	movwf	lcd_send@value& (0+255),b
  4549  0019E8  0E01               	movlw	1
  4550  0019EA  EC61  F029         	call	_lcd_send
  4551  0019EE                     
  4552                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
  4553  0019EE  0EB6               	movlw	182
  4554  0019F0  0100               	movlb	0	; () banked
  4555  0019F2  6F6E               	movwf	lcd_send@value& (0+255),b
  4556  0019F4  0E00               	movlw	0
  4557  0019F6  EC61  F029         	call	_lcd_send
  4558  0019FA                     
  4559                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
  4560  0019FA  0E08               	movlw	8
  4561  0019FC  0100               	movlb	0	; () banked
  4562  0019FE  6F6E               	movwf	lcd_send@value& (0+255),b
  4563  001A00  0E01               	movlw	1
  4564  001A02  EC61  F029         	call	_lcd_send
  4565  001A06                     
  4566                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
  4567  001A06  0E82               	movlw	130
  4568  001A08  0100               	movlb	0	; () banked
  4569  001A0A  6F6E               	movwf	lcd_send@value& (0+255),b
  4570  001A0C  0E01               	movlw	1
  4571  001A0E  EC61  F029         	call	_lcd_send
  4572  001A12                     
  4573                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
  4574  001A12  0E27               	movlw	39
  4575  001A14  0100               	movlb	0	; () banked
  4576  001A16  6F6E               	movwf	lcd_send@value& (0+255),b
  4577  001A18  0E01               	movlw	1
  4578  001A1A  EC61  F029         	call	_lcd_send
  4579  001A1E                     
  4580                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
  4581  001A1E  0EF2               	movlw	242
  4582  001A20  0100               	movlb	0	; () banked
  4583  001A22  6F6E               	movwf	lcd_send@value& (0+255),b
  4584  001A24  0E00               	movlw	0
  4585  001A26  EC61  F029         	call	_lcd_send
  4586  001A2A                     
  4587                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
  4588  001A2A  0E00               	movlw	0
  4589  001A2C  0100               	movlb	0	; () banked
  4590  001A2E  6F6E               	movwf	lcd_send@value& (0+255),b
  4591  001A30  0E01               	movlw	1
  4592  001A32  EC61  F029         	call	_lcd_send
  4593  001A36                     
  4594                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
  4595  001A36  0E26               	movlw	38
  4596  001A38  0100               	movlb	0	; () banked
  4597  001A3A  6F6E               	movwf	lcd_send@value& (0+255),b
  4598  001A3C  0E00               	movlw	0
  4599  001A3E  EC61  F029         	call	_lcd_send
  4600  001A42                     
  4601                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
  4602  001A42  0E01               	movlw	1
  4603  001A44  0100               	movlb	0	; () banked
  4604  001A46  6F6E               	movwf	lcd_send@value& (0+255),b
  4605  001A48  0E01               	movlw	1
  4606  001A4A  EC61  F029         	call	_lcd_send
  4607  001A4E                     
  4608                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
  4609  001A4E  0EE0               	movlw	224
  4610  001A50  0100               	movlb	0	; () banked
  4611  001A52  6F6E               	movwf	lcd_send@value& (0+255),b
  4612  001A54  0E00               	movlw	0
  4613  001A56  EC61  F029         	call	_lcd_send
  4614  001A5A                     
  4615                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
  4616  001A5A  0E0F               	movlw	15
  4617  001A5C  0100               	movlb	0	; () banked
  4618  001A5E  6F6E               	movwf	lcd_send@value& (0+255),b
  4619  001A60  0E01               	movlw	1
  4620  001A62  EC61  F029         	call	_lcd_send
  4621  001A66                     
  4622                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
  4623  001A66  0E31               	movlw	49
  4624  001A68  0100               	movlb	0	; () banked
  4625  001A6A  6F6E               	movwf	lcd_send@value& (0+255),b
  4626  001A6C  0E01               	movlw	1
  4627  001A6E  EC61  F029         	call	_lcd_send
  4628  001A72                     
  4629                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
  4630  001A72  0E2B               	movlw	43
  4631  001A74  0100               	movlb	0	; () banked
  4632  001A76  6F6E               	movwf	lcd_send@value& (0+255),b
  4633  001A78  0E01               	movlw	1
  4634  001A7A  EC61  F029         	call	_lcd_send
  4635  001A7E                     
  4636                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
  4637  001A7E  0E0C               	movlw	12
  4638  001A80  0100               	movlb	0	; () banked
  4639  001A82  6F6E               	movwf	lcd_send@value& (0+255),b
  4640  001A84  0E01               	movlw	1
  4641  001A86  EC61  F029         	call	_lcd_send
  4642  001A8A                     
  4643                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
  4644  001A8A  0E0E               	movlw	14
  4645  001A8C  0100               	movlb	0	; () banked
  4646  001A8E  6F6E               	movwf	lcd_send@value& (0+255),b
  4647  001A90  0E01               	movlw	1
  4648  001A92  EC61  F029         	call	_lcd_send
  4649  001A96                     
  4650                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
  4651  001A96  0E08               	movlw	8
  4652  001A98  0100               	movlb	0	; () banked
  4653  001A9A  6F6E               	movwf	lcd_send@value& (0+255),b
  4654  001A9C  0E01               	movlw	1
  4655  001A9E  EC61  F029         	call	_lcd_send
  4656  001AA2                     
  4657                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
  4658  001AA2  0E4E               	movlw	78
  4659  001AA4  0100               	movlb	0	; () banked
  4660  001AA6  6F6E               	movwf	lcd_send@value& (0+255),b
  4661  001AA8  0E01               	movlw	1
  4662  001AAA  EC61  F029         	call	_lcd_send
  4663  001AAE                     
  4664                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
  4665  001AAE  0EF1               	movlw	241
  4666  001AB0  0100               	movlb	0	; () banked
  4667  001AB2  6F6E               	movwf	lcd_send@value& (0+255),b
  4668  001AB4  0E01               	movlw	1
  4669  001AB6  EC61  F029         	call	_lcd_send
  4670  001ABA                     
  4671                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
  4672  001ABA  0E37               	movlw	55
  4673  001ABC  0100               	movlb	0	; () banked
  4674  001ABE  6F6E               	movwf	lcd_send@value& (0+255),b
  4675  001AC0  0E01               	movlw	1
  4676  001AC2  EC61  F029         	call	_lcd_send
  4677  001AC6                     
  4678                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
  4679  001AC6  0E07               	movlw	7
  4680  001AC8  0100               	movlb	0	; () banked
  4681  001ACA  6F6E               	movwf	lcd_send@value& (0+255),b
  4682  001ACC  0E01               	movlw	1
  4683  001ACE  EC61  F029         	call	_lcd_send
  4684  001AD2                     
  4685                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
  4686  001AD2  0E10               	movlw	16
  4687  001AD4  0100               	movlb	0	; () banked
  4688  001AD6  6F6E               	movwf	lcd_send@value& (0+255),b
  4689  001AD8  0E01               	movlw	1
  4690  001ADA  EC61  F029         	call	_lcd_send
  4691  001ADE                     
  4692                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
  4693  001ADE  0E03               	movlw	3
  4694  001AE0  0100               	movlb	0	; () banked
  4695  001AE2  6F6E               	movwf	lcd_send@value& (0+255),b
  4696  001AE4  0E01               	movlw	1
  4697  001AE6  EC61  F029         	call	_lcd_send
  4698  001AEA                     
  4699                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
  4700  001AEA  0E0E               	movlw	14
  4701  001AEC  0100               	movlb	0	; () banked
  4702  001AEE  6F6E               	movwf	lcd_send@value& (0+255),b
  4703  001AF0  0E01               	movlw	1
  4704  001AF2  EC61  F029         	call	_lcd_send
  4705  001AF6                     
  4706                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
  4707  001AF6  0E09               	movlw	9
  4708  001AF8  0100               	movlb	0	; () banked
  4709  001AFA  6F6E               	movwf	lcd_send@value& (0+255),b
  4710  001AFC  0E01               	movlw	1
  4711  001AFE  EC61  F029         	call	_lcd_send
  4712  001B02                     
  4713                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
  4714  001B02  0E00               	movlw	0
  4715  001B04  0100               	movlb	0	; () banked
  4716  001B06  6F6E               	movwf	lcd_send@value& (0+255),b
  4717  001B08  0E01               	movlw	1
  4718  001B0A  EC61  F029         	call	_lcd_send
  4719  001B0E                     
  4720                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
  4721  001B0E  0EE1               	movlw	225
  4722  001B10  0100               	movlb	0	; () banked
  4723  001B12  6F6E               	movwf	lcd_send@value& (0+255),b
  4724  001B14  0E00               	movlw	0
  4725  001B16  EC61  F029         	call	_lcd_send
  4726  001B1A                     
  4727                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
  4728  001B1A  0E00               	movlw	0
  4729  001B1C  0100               	movlb	0	; () banked
  4730  001B1E  6F6E               	movwf	lcd_send@value& (0+255),b
  4731  001B20  0E01               	movlw	1
  4732  001B22  EC61  F029         	call	_lcd_send
  4733  001B26                     
  4734                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
  4735  001B26  0E0E               	movlw	14
  4736  001B28  0100               	movlb	0	; () banked
  4737  001B2A  6F6E               	movwf	lcd_send@value& (0+255),b
  4738  001B2C  0E01               	movlw	1
  4739  001B2E  EC61  F029         	call	_lcd_send
  4740  001B32                     
  4741                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
  4742  001B32  0E14               	movlw	20
  4743  001B34  0100               	movlb	0	; () banked
  4744  001B36  6F6E               	movwf	lcd_send@value& (0+255),b
  4745  001B38  0E01               	movlw	1
  4746  001B3A  EC61  F029         	call	_lcd_send
  4747  001B3E                     
  4748                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
  4749  001B3E  0E03               	movlw	3
  4750  001B40  0100               	movlb	0	; () banked
  4751  001B42  6F6E               	movwf	lcd_send@value& (0+255),b
  4752  001B44  0E01               	movlw	1
  4753  001B46  EC61  F029         	call	_lcd_send
  4754  001B4A                     
  4755                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
  4756  001B4A  0E11               	movlw	17
  4757  001B4C  0100               	movlb	0	; () banked
  4758  001B4E  6F6E               	movwf	lcd_send@value& (0+255),b
  4759  001B50  0E01               	movlw	1
  4760  001B52  EC61  F029         	call	_lcd_send
  4761  001B56                     
  4762                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
  4763  001B56  0E07               	movlw	7
  4764  001B58  0100               	movlb	0	; () banked
  4765  001B5A  6F6E               	movwf	lcd_send@value& (0+255),b
  4766  001B5C  0E01               	movlw	1
  4767  001B5E  EC61  F029         	call	_lcd_send
  4768  001B62                     
  4769                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
  4770  001B62  0E31               	movlw	49
  4771  001B64  0100               	movlb	0	; () banked
  4772  001B66  6F6E               	movwf	lcd_send@value& (0+255),b
  4773  001B68  0E01               	movlw	1
  4774  001B6A  EC61  F029         	call	_lcd_send
  4775  001B6E                     
  4776                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
  4777  001B6E  0EC1               	movlw	193
  4778  001B70  0100               	movlb	0	; () banked
  4779  001B72  6F6E               	movwf	lcd_send@value& (0+255),b
  4780  001B74  0E01               	movlw	1
  4781  001B76  EC61  F029         	call	_lcd_send
  4782  001B7A                     
  4783                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
  4784  001B7A  0E48               	movlw	72
  4785  001B7C  0100               	movlb	0	; () banked
  4786  001B7E  6F6E               	movwf	lcd_send@value& (0+255),b
  4787  001B80  0E01               	movlw	1
  4788  001B82  EC61  F029         	call	_lcd_send
  4789  001B86                     
  4790                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
  4791  001B86  0E08               	movlw	8
  4792  001B88  0100               	movlb	0	; () banked
  4793  001B8A  6F6E               	movwf	lcd_send@value& (0+255),b
  4794  001B8C  0E01               	movlw	1
  4795  001B8E  EC61  F029         	call	_lcd_send
  4796  001B92                     
  4797                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
  4798  001B92  0E0F               	movlw	15
  4799  001B94  0100               	movlb	0	; () banked
  4800  001B96  6F6E               	movwf	lcd_send@value& (0+255),b
  4801  001B98  0E01               	movlw	1
  4802  001B9A  EC61  F029         	call	_lcd_send
  4803  001B9E                     
  4804                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
  4805  001B9E  0E0C               	movlw	12
  4806  001BA0  0100               	movlb	0	; () banked
  4807  001BA2  6F6E               	movwf	lcd_send@value& (0+255),b
  4808  001BA4  0E01               	movlw	1
  4809  001BA6  EC61  F029         	call	_lcd_send
  4810  001BAA                     
  4811                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
  4812  001BAA  0E31               	movlw	49
  4813  001BAC  0100               	movlb	0	; () banked
  4814  001BAE  6F6E               	movwf	lcd_send@value& (0+255),b
  4815  001BB0  0E01               	movlw	1
  4816  001BB2  EC61  F029         	call	_lcd_send
  4817  001BB6                     
  4818                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
  4819  001BB6  0E36               	movlw	54
  4820  001BB8  0100               	movlb	0	; () banked
  4821  001BBA  6F6E               	movwf	lcd_send@value& (0+255),b
  4822  001BBC  0E01               	movlw	1
  4823  001BBE  EC61  F029         	call	_lcd_send
  4824  001BC2                     
  4825                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
  4826  001BC2  0E0F               	movlw	15
  4827  001BC4  0100               	movlb	0	; () banked
  4828  001BC6  6F6E               	movwf	lcd_send@value& (0+255),b
  4829  001BC8  0E01               	movlw	1
  4830  001BCA  EC61  F029         	call	_lcd_send
  4831  001BCE                     
  4832                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
  4833  001BCE  0E11               	movlw	17
  4834  001BD0  0100               	movlb	0	; () banked
  4835  001BD2  6F6E               	movwf	lcd_send@value& (0+255),b
  4836  001BD4  0E00               	movlw	0
  4837  001BD6  EC61  F029         	call	_lcd_send
  4838                           
  4839                           ;lib_ili9341.c: 125:     msDelay(120);
  4840  001BDA  0E78               	movlw	120
  4841  001BDC  EC6A  F028         	call	_msDelay
  4842  001BE0                     
  4843                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
  4844  001BE0  0E29               	movlw	41
  4845  001BE2  0100               	movlb	0	; () banked
  4846  001BE4  6F6E               	movwf	lcd_send@value& (0+255),b
  4847  001BE6  0E00               	movlw	0
  4848  001BE8  EC61  F029         	call	_lcd_send
  4849  001BEC                     
  4850                           ;lib_ili9341.c: 127:     msDelay(120);
  4851  001BEC  0E78               	movlw	120
  4852  001BEE  EC6A  F028         	call	_msDelay
  4853  001BF2                     
  4854                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
  4855  001BF2  0E00               	movlw	0
  4856  001BF4  0100               	movlb	0	; () banked
  4857  001BF6  6F77               	movwf	(lcd_fill@bg_color+1)& (0+255),b
  4858  001BF8  0E00               	movlw	0
  4859  001BFA  6F76               	movwf	lcd_fill@bg_color& (0+255),b
  4860  001BFC  EC12  F025         	call	_lcd_fill	;wreg free
  4861  001C00  0012               	return		;funcret
  4862  001C02                     __end_of_lcd_init:
  4863                           	opt callstack 0
  4864                           
  4865 ;; *************** function _msDelay *****************
  4866 ;; Defined at:
  4867 ;;		line 16 in file "lib_ili9341.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  ms              1    wreg     unsigned char 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  ms              1   14[BANK0 ] unsigned char 
  4872 ;;  k               1   15[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;Total ram usage:        3 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    7
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_lcd_init
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text4
  4897  0050D4                     __ptext4:
  4898                           	opt callstack 0
  4899  0050D4                     _msDelay:
  4900                           	opt callstack 22
  4901                           
  4902                           ;incstack = 0
  4903                           ;msDelay@ms stored from wreg
  4904  0050D4  0100               	movlb	0	; () banked
  4905  0050D6  6F6E               	movwf	msDelay@ms& (0+255),b
  4906  0050D8                     
  4907                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
  4908  0050D8  0E00               	movlw	0
  4909  0050DA  0100               	movlb	0	; () banked
  4910  0050DC  6F6F               	movwf	msDelay@k& (0+255),b
  4911  0050DE  EF7C  F028         	goto	l7762
  4912  0050E2                     l7758:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
  4916  0050E2  0E03               	movlw	3
  4917  0050E4  0100               	movlb	0	; () banked
  4918  0050E6  6F6D               	movwf	??_msDelay& (0+255),b
  4919  0050E8  0E97               	movlw	151
  4920  0050EA                     u9487:
  4921  0050EA  2EE8               	decfsz	wreg,f,c
  4922  0050EC  D7FE               	bra	u9487
  4923  0050EE  2F6D               	decfsz	??_msDelay& (0+255),f,b
  4924  0050F0  D7FC               	bra	u9487
  4925  0050F2  D000               	nop2	
  4926  0050F4                     
  4927                           ;lib_ili9341.c: 23:     }
  4928  0050F4  0100               	movlb	0	; () banked
  4929  0050F6  2B6F               	incf	msDelay@k& (0+255),f,b
  4930  0050F8                     l7762:
  4931                           
  4932                           ; BSR set to: 0
  4933  0050F8  516E               	movf	msDelay@ms& (0+255),w,b
  4934  0050FA  5D6F               	subwf	msDelay@k& (0+255),w,b
  4935  0050FC  A0D8               	btfss	status,0,c
  4936  0050FE  EF83  F028         	goto	u8961
  4937  005102  EF85  F028         	goto	u8960
  4938  005106                     u8961:
  4939  005106  EF71  F028         	goto	l7758
  4940  00510A                     u8960:
  4941  00510A                     
  4942                           ; BSR set to: 0
  4943  00510A  0012               	return		;funcret
  4944  00510C                     __end_of_msDelay:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _lcd_fill *****************
  4948 ;; Defined at:
  4949 ;;		line 193 in file "lib_ili9341.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  bg_color        2   22[BANK0 ] unsigned short 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  width           2   26[BANK0 ] unsigned short 
  4954 ;;  height          2   24[BANK0 ] unsigned short 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;Total ram usage:        6 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:   11
  4971 ;; This function calls:
  4972 ;;		_lcd_draw_pixel
  4973 ;;		_lcd_set_cursor
  4974 ;; This function is called by:
  4975 ;;		_lcd_init
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text5
  4980  004A24                     __ptext5:
  4981                           	opt callstack 0
  4982  004A24                     _lcd_fill:
  4983                           	opt callstack 18
  4984  004A24                     
  4985                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
  4986  004A24  0E01               	movlw	1
  4987  004A26  0100               	movlb	0	; () banked
  4988  004A28  6F7B               	movwf	(lcd_fill@width+1)& (0+255),b
  4989  004A2A  0E40               	movlw	64
  4990  004A2C  6F7A               	movwf	lcd_fill@width& (0+255),b
  4991  004A2E  0E00               	movlw	0
  4992  004A30  6F79               	movwf	(lcd_fill@height+1)& (0+255),b
  4993  004A32  0EF0               	movlw	240
  4994  004A34  6F78               	movwf	lcd_fill@height& (0+255),b
  4995  004A36                     
  4996                           ; BSR set to: 0
  4997                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
  4998  004A36  0E00               	movlw	0
  4999  004A38  6F73               	movwf	(lcd_set_cursor@x+1)& (0+255),b
  5000  004A3A  0E00               	movlw	0
  5001  004A3C  6F72               	movwf	lcd_set_cursor@x& (0+255),b
  5002  004A3E  0E00               	movlw	0
  5003  004A40  6F75               	movwf	(lcd_set_cursor@y+1)& (0+255),b
  5004  004A42  0E00               	movlw	0
  5005  004A44  6F74               	movwf	lcd_set_cursor@y& (0+255),b
  5006  004A46  EC58  F027         	call	_lcd_set_cursor	;wreg free
  5007  004A4A  0900               	iorlw	0
  5008  004A4C  B4D8               	btfsc	status,2,c
  5009  004A4E  EF2B  F025         	goto	u8971
  5010  004A52  EF2D  F025         	goto	u8970
  5011  004A56                     u8971:
  5012  004A56  EF47  F025         	goto	l7776
  5013  004A5A                     u8970:
  5014  004A5A  EF55  F025         	goto	l592
  5015  004A5E                     l7770:
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
  5019  004A5E  C076  F070         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
  5020  004A62  C077  F071         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
  5021  004A66  EC9B  F029         	call	_lcd_draw_pixel	;wreg free
  5022  004A6A                     l7772:
  5023                           
  5024                           ;lib_ili9341.c: 204:         while(width--)
  5025  004A6A  0100               	movlb	0	; () banked
  5026  004A6C  077A               	decf	lcd_fill@width& (0+255),f,b
  5027  004A6E  A0D8               	btfss	status,0,c
  5028  004A70  077B               	decf	(lcd_fill@width+1)& (0+255),f,b
  5029  004A72  297A               	incf	lcd_fill@width& (0+255),w,b
  5030  004A74  E106               	bnz	u8981
  5031  004A76  297B               	incf	(lcd_fill@width+1)& (0+255),w,b
  5032  004A78  A4D8               	btfss	status,2,c
  5033  004A7A  EF41  F025         	goto	u8981
  5034  004A7E  EF43  F025         	goto	u8980
  5035  004A82                     u8981:
  5036  004A82  EF2F  F025         	goto	l7770
  5037  004A86                     u8980:
  5038  004A86                     
  5039                           ; BSR set to: 0
  5040                           ;lib_ili9341.c: 208:         width = 320;
  5041  004A86  0E01               	movlw	1
  5042  004A88  6F7B               	movwf	(lcd_fill@width+1)& (0+255),b
  5043  004A8A  0E40               	movlw	64
  5044  004A8C  6F7A               	movwf	lcd_fill@width& (0+255),b
  5045  004A8E                     l7776:
  5046                           
  5047                           ;lib_ili9341.c: 202:     while(height--)
  5048  004A8E  0100               	movlb	0	; () banked
  5049  004A90  0778               	decf	lcd_fill@height& (0+255),f,b
  5050  004A92  A0D8               	btfss	status,0,c
  5051  004A94  0779               	decf	(lcd_fill@height+1)& (0+255),f,b
  5052  004A96  2978               	incf	lcd_fill@height& (0+255),w,b
  5053  004A98  E106               	bnz	u8991
  5054  004A9A  2979               	incf	(lcd_fill@height+1)& (0+255),w,b
  5055  004A9C  A4D8               	btfss	status,2,c
  5056  004A9E  EF53  F025         	goto	u8991
  5057  004AA2  EF55  F025         	goto	u8990
  5058  004AA6                     u8991:
  5059  004AA6  EF35  F025         	goto	l7772
  5060  004AAA                     u8990:
  5061  004AAA                     l592:
  5062  004AAA  0012               	return		;funcret
  5063  004AAC                     __end_of_lcd_fill:
  5064                           	opt callstack 0
  5065                           
  5066 ;; *************** function _lcd_draw_string *****************
  5067 ;; Defined at:
  5068 ;;		line 380 in file "lib_ili9341.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  x               2   44[BANK0 ] unsigned short 
  5071 ;;  y               2   46[BANK0 ] unsigned short 
  5072 ;;  pS              2   48[BANK0 ] PTR const unsigned char 
  5073 ;;		 -> string(30), STR_8(33), 
  5074 ;;  fg_color        2   50[BANK0 ] unsigned short 
  5075 ;;  bg_color        2   52[BANK0 ] unsigned short 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  lIndex          2   60[BANK0 ] unsigned short 
  5078 ;;  k               2   58[BANK0 ] unsigned short 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:       18 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:   12
  5095 ;; This function calls:
  5096 ;;		_lcd_draw_char
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text6
  5103  003EE0                     __ptext6:
  5104                           	opt callstack 0
  5105  003EE0                     _lcd_draw_string:
  5106                           	opt callstack 18
  5107  003EE0                     
  5108                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
  5109  003EE0  EFF2  F01F         	goto	l8156
  5110  003EE4                     l8142:
  5111                           
  5112                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
  5113  003EE4  0E00               	movlw	0
  5114  003EE6  0100               	movlb	0	; () banked
  5115  003EE8  6F9D               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
  5116  003EEA  0E00               	movlw	0
  5117  003EEC  6F9C               	movwf	lcd_draw_string@lIndex& (0+255),b
  5118                           
  5119                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
  5120  003EEE  0E00               	movlw	0
  5121  003EF0  6F9B               	movwf	(lcd_draw_string@k+1)& (0+255),b
  5122  003EF2  0E00               	movlw	0
  5123  003EF4  6F9A               	movwf	lcd_draw_string@k& (0+255),b
  5124  003EF6  EF9C  F01F         	goto	l8148
  5125  003EFA                     l8144:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
  5129  003EFA  90D8               	bcf	status,0,c
  5130  003EFC  359C               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
  5131  003EFE  6EF6               	movwf	tblptrl,c
  5132  003F00  359D               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
  5133  003F02  6EF7               	movwf	tblptrh,c
  5134  003F04  0EA9               	movlw	low _font
  5135  003F06  26F6               	addwf	tblptrl,f,c
  5136  003F08  0EF0               	movlw	high _font
  5137  003F0A  22F7               	addwfc	tblptrh,f,c
  5138  003F0C                     	if	1	;There are 3 active tblptr bytes
  5139  003F0C  6AF8               	clrf	tblptru,c
  5140  003F0E  0E00               	movlw	low (__mediumconst shr (0+16))
  5141  003F10  22F8               	addwfc	tblptru,f,c
  5142  003F12                     	endif
  5143  003F12  0009               	tblrd		*+
  5144  003F14  CFF5 F096          	movff	tablat,??_lcd_draw_string
  5145  003F18  0009               	tblrd		*+
  5146  003F1A  CFF5 F097          	movff	tablat,??_lcd_draw_string+1
  5147  003F1E  90D8               	bcf	status,0,c
  5148  003F20  3796               	rlcf	??_lcd_draw_string& (0+255),f,b
  5149  003F22  3797               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
  5150  003F24  0E01               	movlw	1
  5151  003F26  2796               	addwf	??_lcd_draw_string& (0+255),f,b
  5152  003F28  0E00               	movlw	0
  5153  003F2A  2397               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
  5154  003F2C  5196               	movf	??_lcd_draw_string& (0+255),w,b
  5155  003F2E  279C               	addwf	lcd_draw_string@lIndex& (0+255),f,b
  5156  003F30  5197               	movf	(??_lcd_draw_string+1)& (0+255),w,b
  5157  003F32  239D               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
  5158  003F34                     
  5159                           ; BSR set to: 0
  5160                           ;lib_ili9341.c: 390:         }
  5161  003F34  4B9A               	infsnz	lcd_draw_string@k& (0+255),f,b
  5162  003F36  2B9B               	incf	(lcd_draw_string@k+1)& (0+255),f,b
  5163  003F38                     l8148:
  5164                           
  5165                           ; BSR set to: 0
  5166  003F38  0EE0               	movlw	224
  5167  003F3A  6F96               	movwf	??_lcd_draw_string& (0+255),b
  5168  003F3C  0EFF               	movlw	255
  5169  003F3E  6F97               	movwf	(??_lcd_draw_string+1)& (0+255),b
  5170  003F40  C090  FFF6         	movff	lcd_draw_string@pS,tblptrl
  5171  003F44  C091  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
  5172  003F48  0E00               	movlw	low (__mediumconst shr (0+16))
  5173  003F4A  6EF8               	movwf	tblptru,c
  5174  003F4C  0E0E               	movlw	(high __ramtop+-1)
  5175  003F4E  64F7               	cpfsgt	tblptrh,c
  5176  003F50  D003               	bra	u9237
  5177  003F52  0008               	tblrd		*
  5178  003F54  50F5               	movf	tablat,w,c
  5179  003F56  D005               	bra	u9230
  5180  003F58                     u9237:
  5181  003F58  CFF6 FFE1          	movff	tblptrl,fsr1l
  5182  003F5C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5183  003F60  50E7               	movf	indf1,w,c
  5184  003F62                     u9230:
  5185  003F62  0100               	movlb	0	; () banked
  5186  003F64  6F98               	movwf	(??_lcd_draw_string+2)& (0+255),b
  5187  003F66  6B99               	clrf	(??_lcd_draw_string+3)& (0+255),b
  5188  003F68  5196               	movf	??_lcd_draw_string& (0+255),w,b
  5189  003F6A  2798               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
  5190  003F6C  5197               	movf	(??_lcd_draw_string+1)& (0+255),w,b
  5191  003F6E  2399               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
  5192  003F70  5198               	movf	(??_lcd_draw_string+2)& (0+255),w,b
  5193  003F72  5D9A               	subwf	lcd_draw_string@k& (0+255),w,b
  5194  003F74  5199               	movf	(??_lcd_draw_string+3)& (0+255),w,b
  5195  003F76  599B               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
  5196  003F78  A0D8               	btfss	status,0,c
  5197  003F7A  EFC1  F01F         	goto	u9241
  5198  003F7E  EFC3  F01F         	goto	u9240
  5199  003F82                     u9241:
  5200  003F82  EF7D  F01F         	goto	l8144
  5201  003F86                     u9240:
  5202  003F86                     
  5203                           ; BSR set to: 0
  5204                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
  5205  003F86  C08C  F076         	movff	lcd_draw_string@x,lcd_draw_char@x
  5206  003F8A  C08D  F077         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
  5207  003F8E  C08E  F078         	movff	lcd_draw_string@y,lcd_draw_char@y
  5208  003F92  C08F  F079         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
  5209  003F96  C09C  F07A         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
  5210  003F9A  C09D  F07B         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
  5211  003F9E  C092  F07C         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
  5212  003FA2  C093  F07D         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
  5213  003FA6  C094  F07E         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
  5214  003FAA  C095  F07F         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
  5215  003FAE  EC51  F01D         	call	_lcd_draw_char	;wreg free
  5216  003FB2                     
  5217                           ;lib_ili9341.c: 394:         x += font[lIndex];
  5218  003FB2  90D8               	bcf	status,0,c
  5219  003FB4  0100               	movlb	0	; () banked
  5220  003FB6  359C               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
  5221  003FB8  6EF6               	movwf	tblptrl,c
  5222  003FBA  359D               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
  5223  003FBC  6EF7               	movwf	tblptrh,c
  5224  003FBE  0EA9               	movlw	low _font
  5225  003FC0  26F6               	addwf	tblptrl,f,c
  5226  003FC2  0EF0               	movlw	high _font
  5227  003FC4  22F7               	addwfc	tblptrh,f,c
  5228  003FC6                     	if	1	;There are 3 active tblptr bytes
  5229  003FC6  6AF8               	clrf	tblptru,c
  5230  003FC8  0E00               	movlw	low (__mediumconst shr (0+16))
  5231  003FCA  22F8               	addwfc	tblptru,f,c
  5232  003FCC                     	endif
  5233  003FCC  0009               	tblrd		*+
  5234  003FCE  CFF5 F096          	movff	tablat,??_lcd_draw_string
  5235  003FD2  0009               	tblrd		*+
  5236  003FD4  CFF5 F097          	movff	tablat,??_lcd_draw_string+1
  5237  003FD8  5196               	movf	??_lcd_draw_string& (0+255),w,b
  5238  003FDA  278C               	addwf	lcd_draw_string@x& (0+255),f,b
  5239  003FDC  5197               	movf	(??_lcd_draw_string+1)& (0+255),w,b
  5240  003FDE  238D               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
  5241  003FE0                     
  5242                           ; BSR set to: 0
  5243                           ;lib_ili9341.c: 396:         pS++;
  5244  003FE0  4B90               	infsnz	lcd_draw_string@pS& (0+255),f,b
  5245  003FE2  2B91               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
  5246  003FE4                     l8156:
  5247                           
  5248                           ;lib_ili9341.c: 384:     while(*pS)
  5249  003FE4  C090  FFF6         	movff	lcd_draw_string@pS,tblptrl
  5250  003FE8  C091  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
  5251  003FEC  0E00               	movlw	low (__mediumconst shr (0+16))
  5252  003FEE  6EF8               	movwf	tblptru,c
  5253  003FF0  0E0E               	movlw	(high __ramtop+-1)
  5254  003FF2  64F7               	cpfsgt	tblptrh,c
  5255  003FF4  D003               	bra	u9257
  5256  003FF6  0008               	tblrd		*
  5257  003FF8  50F5               	movf	tablat,w,c
  5258  003FFA  D005               	bra	u9250
  5259  003FFC                     u9257:
  5260  003FFC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5261  004000  CFF7 FFE2          	movff	tblptrh,fsr1h
  5262  004004  50E7               	movf	indf1,w,c
  5263  004006                     u9250:
  5264  004006  0900               	iorlw	0
  5265  004008  A4D8               	btfss	status,2,c
  5266  00400A  EF09  F020         	goto	u9261
  5267  00400E  EF0B  F020         	goto	u9260
  5268  004012                     u9261:
  5269  004012  EF72  F01F         	goto	l8142
  5270  004016                     u9260:
  5271  004016  0012               	return		;funcret
  5272  004018                     __end_of_lcd_draw_string:
  5273                           	opt callstack 0
  5274                           
  5275 ;; *************** function _lcd_draw_char *****************
  5276 ;; Defined at:
  5277 ;;		line 355 in file "lib_ili9341.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  x               2   22[BANK0 ] unsigned short 
  5280 ;;  y               2   24[BANK0 ] unsigned short 
  5281 ;;  fIndex          2   26[BANK0 ] unsigned short 
  5282 ;;  fg_color        2   28[BANK0 ] unsigned short 
  5283 ;;  bg_color        2   30[BANK0 ] unsigned short 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  i               1   43[BANK0 ] unsigned char 
  5286 ;;  k               1   42[BANK0 ] unsigned char 
  5287 ;;  j               1   41[BANK0 ] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5297 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;Total ram usage:       22 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:   11
  5304 ;; This function calls:
  5305 ;;		_lcd_draw_pixel
  5306 ;;		_lcd_set_cursor
  5307 ;; This function is called by:
  5308 ;;		_lcd_draw_string
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text7
  5313  003AA2                     __ptext7:
  5314                           	opt callstack 0
  5315  003AA2                     _lcd_draw_char:
  5316                           	opt callstack 18
  5317  003AA2                     
  5318                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
  5319  003AA2  0E00               	movlw	0
  5320  003AA4  0100               	movlb	0	; () banked
  5321  003AA6  6F89               	movwf	lcd_draw_char@j& (0+255),b
  5322  003AA8  EFF5  F01D         	goto	l7814
  5323  003AAC                     l7784:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
  5327  003AAC  90D8               	bcf	status,0,c
  5328  003AAE  357A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
  5329  003AB0  6EF6               	movwf	tblptrl,c
  5330  003AB2  357B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5331  003AB4  6EF7               	movwf	tblptrh,c
  5332  003AB6  0EA9               	movlw	low _font
  5333  003AB8  26F6               	addwf	tblptrl,f,c
  5334  003ABA  0EF0               	movlw	high _font
  5335  003ABC  22F7               	addwfc	tblptrh,f,c
  5336  003ABE                     	if	1	;There are 3 active tblptr bytes
  5337  003ABE  6AF8               	clrf	tblptru,c
  5338  003AC0  0E00               	movlw	low (__mediumconst shr (0+16))
  5339  003AC2  22F8               	addwfc	tblptru,f,c
  5340  003AC4                     	endif
  5341  003AC4  0009               	tblrd		*+
  5342  003AC6  CFF5 F080          	movff	tablat,??_lcd_draw_char
  5343  003ACA  0009               	tblrd		*+
  5344  003ACC  CFF5 F081          	movff	tablat,??_lcd_draw_char+1
  5345  003AD0  5189               	movf	lcd_draw_char@j& (0+255),w,b
  5346  003AD2  5F80               	subwf	??_lcd_draw_char& (0+255),f,b
  5347  003AD4  0E00               	movlw	0
  5348  003AD6  5B81               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
  5349  003AD8  5176               	movf	lcd_draw_char@x& (0+255),w,b
  5350  003ADA  2580               	addwf	??_lcd_draw_char& (0+255),w,b
  5351  003ADC  6F72               	movwf	lcd_set_cursor@x& (0+255),b
  5352  003ADE  5177               	movf	(lcd_draw_char@x+1)& (0+255),w,b
  5353  003AE0  2181               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
  5354  003AE2  6F73               	movwf	(lcd_set_cursor@x+1)& (0+255),b
  5355  003AE4  C078  F074         	movff	lcd_draw_char@y,lcd_set_cursor@y
  5356  003AE8  C079  F075         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
  5357  003AEC  EC58  F027         	call	_lcd_set_cursor	;wreg free
  5358  003AF0                     
  5359                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
  5360  003AF0  0E00               	movlw	0
  5361  003AF2  0100               	movlb	0	; () banked
  5362  003AF4  6F8A               	movwf	lcd_draw_char@k& (0+255),b
  5363  003AF6                     l7792:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
  5367  003AF6  0E00               	movlw	0
  5368  003AF8  6F8B               	movwf	lcd_draw_char@i& (0+255),b
  5369  003AFA                     l7798:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
  5373  003AFA  5189               	movf	lcd_draw_char@j& (0+255),w,b
  5374  003AFC  6F80               	movwf	??_lcd_draw_char& (0+255),b
  5375  003AFE  6B81               	clrf	(??_lcd_draw_char+1)& (0+255),b
  5376  003B00  90D8               	bcf	status,0,c
  5377  003B02  3780               	rlcf	??_lcd_draw_char& (0+255),f,b
  5378  003B04  3781               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
  5379  003B06  90D8               	bcf	status,0,c
  5380  003B08  357A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
  5381  003B0A  6EF6               	movwf	tblptrl,c
  5382  003B0C  357B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5383  003B0E  6EF7               	movwf	tblptrh,c
  5384  003B10  0EA9               	movlw	low _font
  5385  003B12  26F6               	addwf	tblptrl,f,c
  5386  003B14  0EF0               	movlw	high _font
  5387  003B16  22F7               	addwfc	tblptrh,f,c
  5388  003B18                     	if	1	;There are 3 active tblptr bytes
  5389  003B18  6AF8               	clrf	tblptru,c
  5390  003B1A  0E00               	movlw	low (__mediumconst shr (0+16))
  5391  003B1C  22F8               	addwfc	tblptru,f,c
  5392  003B1E                     	endif
  5393  003B1E  0009               	tblrd		*+
  5394  003B20  CFF5 F082          	movff	tablat,??_lcd_draw_char+2
  5395  003B24  0009               	tblrd		*+
  5396  003B26  CFF5 F083          	movff	tablat,??_lcd_draw_char+3
  5397  003B2A  90D8               	bcf	status,0,c
  5398  003B2C  3782               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
  5399  003B2E  3783               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
  5400  003B30  5180               	movf	??_lcd_draw_char& (0+255),w,b
  5401  003B32  5F82               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
  5402  003B34  5181               	movf	(??_lcd_draw_char+1)& (0+255),w,b
  5403  003B36  5B83               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
  5404  003B38  518A               	movf	lcd_draw_char@k& (0+255),w,b
  5405  003B3A  5F82               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
  5406  003B3C  0E00               	movlw	0
  5407  003B3E  5B83               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
  5408  003B40  517A               	movf	lcd_draw_char@fIndex& (0+255),w,b
  5409  003B42  2782               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
  5410  003B44  517B               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5411  003B46  2383               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
  5412  003B48  90D8               	bcf	status,0,c
  5413  003B4A  3782               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
  5414  003B4C  3783               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
  5415  003B4E  0EA9               	movlw	low _font
  5416  003B50  2582               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
  5417  003B52  6EF6               	movwf	tblptrl,c
  5418  003B54  0EF0               	movlw	high _font
  5419  003B56  2183               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
  5420  003B58  6EF7               	movwf	tblptrh,c
  5421  003B5A                     	if	1	;There are 3 active tblptr bytes
  5422  003B5A  6AF8               	clrf	tblptru,c
  5423  003B5C  0E00               	movlw	low (__mediumconst shr (0+16))
  5424  003B5E  22F8               	addwfc	tblptru,f,c
  5425  003B60                     	endif
  5426  003B60  0009               	tblrd		*+
  5427  003B62  CFF5 F084          	movff	tablat,??_lcd_draw_char+4
  5428  003B66  0009               	tblrd		*+
  5429  003B68  CFF5 F085          	movff	tablat,??_lcd_draw_char+5
  5430  003B6C  C08B  F086         	movff	lcd_draw_char@i,??_lcd_draw_char+6
  5431  003B70  0E80               	movlw	128
  5432  003B72  6F87               	movwf	(??_lcd_draw_char+7)& (0+255),b
  5433  003B74  0E00               	movlw	0
  5434  003B76  6F88               	movwf	(??_lcd_draw_char+8)& (0+255),b
  5435  003B78  2B86               	incf	(??_lcd_draw_char+6)& (0+255),f,b
  5436  003B7A  EFC2  F01D         	goto	u9014
  5437  003B7E                     u9015:
  5438  003B7E  3588               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
  5439  003B80  3388               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
  5440  003B82  3387               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
  5441  003B84                     u9014:
  5442  003B84  2F86               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
  5443  003B86  EFBF  F01D         	goto	u9015
  5444  003B8A  0100               	movlb	0	; () banked
  5445  003B8C  5184               	movf	(??_lcd_draw_char+4)& (0+255),w,b
  5446  003B8E  1787               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
  5447  003B90  5185               	movf	(??_lcd_draw_char+5)& (0+255),w,b
  5448  003B92  1788               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
  5449  003B94  5187               	movf	(??_lcd_draw_char+7)& (0+255),w,b
  5450  003B96  1188               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
  5451  003B98  B4D8               	btfsc	status,2,c
  5452  003B9A  EFD1  F01D         	goto	u9021
  5453  003B9E  EFD3  F01D         	goto	u9020
  5454  003BA2                     u9021:
  5455  003BA2  EFDB  F01D         	goto	l7802
  5456  003BA6                     u9020:
  5457  003BA6                     
  5458                           ; BSR set to: 0
  5459                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
  5460  003BA6  C07C  F070         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
  5461  003BAA  C07D  F071         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
  5462  003BAE  EC9B  F029         	call	_lcd_draw_pixel	;wreg free
  5463                           
  5464                           ;lib_ili9341.c: 370:                 }
  5465  003BB2  EFE1  F01D         	goto	l7804
  5466  003BB6                     l7802:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
  5470  003BB6  C07E  F070         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
  5471  003BBA  C07F  F071         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
  5472  003BBE  EC9B  F029         	call	_lcd_draw_pixel	;wreg free
  5473  003BC2                     l7804:
  5474                           
  5475                           ;lib_ili9341.c: 375:             }
  5476  003BC2  0100               	movlb	0	; () banked
  5477  003BC4  2B8B               	incf	lcd_draw_char@i& (0+255),f,b
  5478  003BC6                     
  5479                           ; BSR set to: 0
  5480  003BC6  0E07               	movlw	7
  5481  003BC8  658B               	cpfsgt	lcd_draw_char@i& (0+255),b
  5482  003BCA  EFE9  F01D         	goto	u9031
  5483  003BCE  EFEB  F01D         	goto	u9030
  5484  003BD2                     u9031:
  5485  003BD2  EF7D  F01D         	goto	l7798
  5486  003BD6                     u9030:
  5487  003BD6                     
  5488                           ; BSR set to: 0
  5489                           ;lib_ili9341.c: 376:         }
  5490  003BD6  2B8A               	incf	lcd_draw_char@k& (0+255),f,b
  5491  003BD8                     
  5492                           ; BSR set to: 0
  5493  003BD8  0E01               	movlw	1
  5494  003BDA  658A               	cpfsgt	lcd_draw_char@k& (0+255),b
  5495  003BDC  EFF2  F01D         	goto	u9041
  5496  003BE0  EFF4  F01D         	goto	u9040
  5497  003BE4                     u9041:
  5498  003BE4  EF7B  F01D         	goto	l7792
  5499  003BE8                     u9040:
  5500  003BE8                     
  5501                           ; BSR set to: 0
  5502                           ;lib_ili9341.c: 377:     }
  5503  003BE8  2B89               	incf	lcd_draw_char@j& (0+255),f,b
  5504  003BEA                     l7814:
  5505                           
  5506                           ; BSR set to: 0
  5507  003BEA  90D8               	bcf	status,0,c
  5508  003BEC  357A               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
  5509  003BEE  6EF6               	movwf	tblptrl,c
  5510  003BF0  357B               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5511  003BF2  6EF7               	movwf	tblptrh,c
  5512  003BF4  0EA9               	movlw	low _font
  5513  003BF6  26F6               	addwf	tblptrl,f,c
  5514  003BF8  0EF0               	movlw	high _font
  5515  003BFA  22F7               	addwfc	tblptrh,f,c
  5516  003BFC                     	if	1	;There are 3 active tblptr bytes
  5517  003BFC  6AF8               	clrf	tblptru,c
  5518  003BFE  0E00               	movlw	low (__mediumconst shr (0+16))
  5519  003C00  22F8               	addwfc	tblptru,f,c
  5520  003C02                     	endif
  5521  003C02  5189               	movf	lcd_draw_char@j& (0+255),w,b
  5522  003C04  6F80               	movwf	??_lcd_draw_char& (0+255),b
  5523  003C06  6B81               	clrf	(??_lcd_draw_char+1)& (0+255),b
  5524  003C08  0009               	tblrd		*+
  5525  003C0A  50F5               	movf	tablat,w,c
  5526  003C0C  5D80               	subwf	??_lcd_draw_char& (0+255),w,b
  5527  003C0E  0009               	tblrd		*+
  5528  003C10  50F5               	movf	tablat,w,c
  5529  003C12  5981               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
  5530  003C14  A0D8               	btfss	status,0,c
  5531  003C16  EF0F  F01E         	goto	u9051
  5532  003C1A  EF11  F01E         	goto	u9050
  5533  003C1E                     u9051:
  5534  003C1E  EF56  F01D         	goto	l7784
  5535  003C22                     u9050:
  5536  003C22                     
  5537                           ; BSR set to: 0
  5538  003C22  0012               	return		;funcret
  5539  003C24                     __end_of_lcd_draw_char:
  5540                           	opt callstack 0
  5541                           
  5542 ;; *************** function _lcd_set_cursor *****************
  5543 ;; Defined at:
  5544 ;;		line 144 in file "lib_ili9341.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  x               2   18[BANK0 ] unsigned short 
  5547 ;;  y               2   20[BANK0 ] unsigned short 
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      unsigned char 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5559 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5563 ;;Total ram usage:        4 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:   10
  5566 ;; This function calls:
  5567 ;;		_lcd_set_cursor_x
  5568 ;;		_lcd_set_cursor_y
  5569 ;; This function is called by:
  5570 ;;		_lcd_fill
  5571 ;;		_lcd_draw_char
  5572 ;;		_lcd_draw_pixel_at
  5573 ;;		_lcd_fill_rect
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text8
  5578  004EB0                     __ptext8:
  5579                           	opt callstack 0
  5580  004EB0                     _lcd_set_cursor:
  5581                           	opt callstack 18
  5582  004EB0                     
  5583                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
  5584  004EB0  C072  F070         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
  5585  004EB4  C073  F071         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
  5586  004EB8  ECA4  F026         	call	_lcd_set_cursor_x	;wreg free
  5587  004EBC  0900               	iorlw	0
  5588  004EBE  A4D8               	btfss	status,2,c
  5589  004EC0  EF64  F027         	goto	u8901
  5590  004EC4  EF66  F027         	goto	u8900
  5591  004EC8                     u8901:
  5592  004EC8  EF74  F027         	goto	l7654
  5593  004ECC                     u8900:
  5594  004ECC  C074  F070         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
  5595  004ED0  C075  F071         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
  5596  004ED4  EC7D  F026         	call	_lcd_set_cursor_y	;wreg free
  5597  004ED8  0900               	iorlw	0
  5598  004EDA  B4D8               	btfsc	status,2,c
  5599  004EDC  EF72  F027         	goto	u8911
  5600  004EE0  EF74  F027         	goto	u8910
  5601  004EE4                     u8911:
  5602  004EE4  EF77  F027         	goto	l7658
  5603  004EE8                     u8910:
  5604  004EE8                     l7654:
  5605                           
  5606                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
  5607  004EE8  0E01               	movlw	1
  5608  004EEA  EF78  F027         	goto	l577
  5609  004EEE                     l7658:
  5610                           
  5611                           ;lib_ili9341.c: 151:     return 0;
  5612  004EEE  0E00               	movlw	0
  5613  004EF0                     l577:
  5614  004EF0  0012               	return		;funcret
  5615  004EF2                     __end_of_lcd_set_cursor:
  5616                           	opt callstack 0
  5617                           
  5618 ;; *************** function _lcd_set_cursor_y *****************
  5619 ;; Defined at:
  5620 ;;		line 170 in file "lib_ili9341.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  y               2   16[BANK0 ] unsigned short 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;Total ram usage:        2 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    9
  5641 ;; This function calls:
  5642 ;;		_lcd_send
  5643 ;; This function is called by:
  5644 ;;		_lcd_set_cursor
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text9
  5649  004CFA                     __ptext9:
  5650                           	opt callstack 0
  5651  004CFA                     _lcd_set_cursor_y:
  5652                           	opt callstack 18
  5653  004CFA                     
  5654                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
  5655  004CFA  0100               	movlb	0	; () banked
  5656  004CFC  5171               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
  5657  004CFE  E109               	bnz	u8440
  5658  004D00  0EF0               	movlw	240
  5659  004D02  5D70               	subwf	lcd_set_cursor_y@y& (0+255),w,b
  5660  004D04  A0D8               	btfss	status,0,c
  5661  004D06  EF87  F026         	goto	u8441
  5662  004D0A  EF89  F026         	goto	u8440
  5663  004D0E                     u8441:
  5664  004D0E  EF8C  F026         	goto	l7302
  5665  004D12                     u8440:
  5666  004D12                     
  5667                           ; BSR set to: 0
  5668                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
  5669  004D12  0E01               	movlw	1
  5670  004D14  EFA3  F026         	goto	l585
  5671  004D18                     l7302:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
  5675  004D18  0E2A               	movlw	42
  5676  004D1A  6F6E               	movwf	lcd_send@value& (0+255),b
  5677  004D1C  0E00               	movlw	0
  5678  004D1E  EC61  F029         	call	_lcd_send
  5679                           
  5680                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
  5681  004D22  0100               	movlb	0	; () banked
  5682  004D24  5171               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
  5683  004D26  6F6E               	movwf	lcd_send@value& (0+255),b
  5684  004D28  0E01               	movlw	1
  5685  004D2A  EC61  F029         	call	_lcd_send
  5686                           
  5687                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
  5688  004D2E  C070  F06E         	movff	lcd_set_cursor_y@y,lcd_send@value
  5689  004D32  0E01               	movlw	1
  5690  004D34  EC61  F029         	call	_lcd_send
  5691                           
  5692                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
  5693  004D38  0E2C               	movlw	44
  5694  004D3A  0100               	movlb	0	; () banked
  5695  004D3C  6F6E               	movwf	lcd_send@value& (0+255),b
  5696  004D3E  0E00               	movlw	0
  5697  004D40  EC61  F029         	call	_lcd_send
  5698  004D44                     
  5699                           ;lib_ili9341.c: 182:     return 0;
  5700  004D44  0E00               	movlw	0
  5701  004D46                     l585:
  5702  004D46  0012               	return		;funcret
  5703  004D48                     __end_of_lcd_set_cursor_y:
  5704                           	opt callstack 0
  5705                           
  5706 ;; *************** function _lcd_set_cursor_x *****************
  5707 ;; Defined at:
  5708 ;;		line 155 in file "lib_ili9341.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  x               2   16[BANK0 ] unsigned short 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      unsigned char 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5726 ;;Total ram usage:        2 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    9
  5729 ;; This function calls:
  5730 ;;		_lcd_send
  5731 ;; This function is called by:
  5732 ;;		_lcd_set_cursor
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text10
  5737  004D48                     __ptext10:
  5738                           	opt callstack 0
  5739  004D48                     _lcd_set_cursor_x:
  5740                           	opt callstack 18
  5741  004D48                     
  5742                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
  5743  004D48  0E40               	movlw	64
  5744  004D4A  0100               	movlb	0	; () banked
  5745  004D4C  5D70               	subwf	lcd_set_cursor_x@x& (0+255),w,b
  5746  004D4E  0E01               	movlw	1
  5747  004D50  5971               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
  5748  004D52  A0D8               	btfss	status,0,c
  5749  004D54  EFAE  F026         	goto	u8431
  5750  004D58  EFB0  F026         	goto	u8430
  5751  004D5C                     u8431:
  5752  004D5C  EFB3  F026         	goto	l7290
  5753  004D60                     u8430:
  5754  004D60                     
  5755                           ; BSR set to: 0
  5756                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
  5757  004D60  0E01               	movlw	1
  5758  004D62  EFCA  F026         	goto	l581
  5759  004D66                     l7290:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
  5763  004D66  0E2B               	movlw	43
  5764  004D68  6F6E               	movwf	lcd_send@value& (0+255),b
  5765  004D6A  0E00               	movlw	0
  5766  004D6C  EC61  F029         	call	_lcd_send
  5767                           
  5768                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
  5769  004D70  0100               	movlb	0	; () banked
  5770  004D72  5171               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
  5771  004D74  6F6E               	movwf	lcd_send@value& (0+255),b
  5772  004D76  0E01               	movlw	1
  5773  004D78  EC61  F029         	call	_lcd_send
  5774                           
  5775                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
  5776  004D7C  C070  F06E         	movff	lcd_set_cursor_x@x,lcd_send@value
  5777  004D80  0E01               	movlw	1
  5778  004D82  EC61  F029         	call	_lcd_send
  5779                           
  5780                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
  5781  004D86  0E2C               	movlw	44
  5782  004D88  0100               	movlb	0	; () banked
  5783  004D8A  6F6E               	movwf	lcd_send@value& (0+255),b
  5784  004D8C  0E00               	movlw	0
  5785  004D8E  EC61  F029         	call	_lcd_send
  5786  004D92                     
  5787                           ;lib_ili9341.c: 167:     return 0;
  5788  004D92  0E00               	movlw	0
  5789  004D94                     l581:
  5790  004D94  0012               	return		;funcret
  5791  004D96                     __end_of_lcd_set_cursor_x:
  5792                           	opt callstack 0
  5793                           
  5794 ;; *************** function _lcd_draw_pixel *****************
  5795 ;; Defined at:
  5796 ;;		line 185 in file "lib_ili9341.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  color           2   16[BANK0 ] unsigned short 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      unsigned char 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;Total ram usage:        2 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    9
  5817 ;; This function calls:
  5818 ;;		_lcd_send
  5819 ;; This function is called by:
  5820 ;;		_lcd_fill
  5821 ;;		_lcd_draw_char
  5822 ;;		_lcd_draw_pixel_at
  5823 ;;		_lcd_fill_rect
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text11
  5828  005336                     __ptext11:
  5829                           	opt callstack 0
  5830  005336                     _lcd_draw_pixel:
  5831                           	opt callstack 19
  5832  005336                     
  5833                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
  5834  005336  0100               	movlb	0	; () banked
  5835  005338  5171               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
  5836  00533A  6F6E               	movwf	lcd_send@value& (0+255),b
  5837  00533C  0E01               	movlw	1
  5838  00533E  EC61  F029         	call	_lcd_send
  5839                           
  5840                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
  5841  005342  C070  F06E         	movff	lcd_draw_pixel@color,lcd_send@value
  5842  005346  0E01               	movlw	1
  5843  005348  EC61  F029         	call	_lcd_send
  5844  00534C  0012               	return		;funcret
  5845  00534E                     __end_of_lcd_draw_pixel:
  5846                           	opt callstack 0
  5847                           
  5848 ;; *************** function _lcd_send *****************
  5849 ;; Defined at:
  5850 ;;		line 134 in file "lib_ili9341.c"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;  dc              1    wreg     _Bool 
  5853 ;;  value           1   14[BANK0 ] unsigned char 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  dc              1   15[BANK0 ] _Bool 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5865 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5869 ;;Total ram usage:        2 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    8
  5872 ;; This function calls:
  5873 ;;		_SPI_ExchangeByte
  5874 ;; This function is called by:
  5875 ;;		_lcd_init
  5876 ;;		_lcd_set_cursor_x
  5877 ;;		_lcd_set_cursor_y
  5878 ;;		_lcd_draw_pixel
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text12
  5883  0052C2                     __ptext12:
  5884                           	opt callstack 0
  5885  0052C2                     _lcd_send:
  5886                           	opt callstack 21
  5887                           
  5888                           ;incstack = 0
  5889                           ;lcd_send@dc stored from wreg
  5890  0052C2  0100               	movlb	0	; () banked
  5891  0052C4  6F6F               	movwf	lcd_send@dc& (0+255),b
  5892  0052C6                     
  5893                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
  5894  0052C6  0100               	movlb	0	; () banked
  5895  0052C8  B16F               	btfsc	lcd_send@dc& (0+255),0,b
  5896  0052CA  D002               	bra	u7785
  5897  0052CC  908D               	bcf	141,0,c	;volatile
  5898  0052CE  D001               	bra	u7786
  5899  0052D0                     u7785:
  5900  0052D0  808D               	bsf	141,0,c	;volatile
  5901  0052D2                     u7786:
  5902  0052D2                     
  5903                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
  5904  0052D2  928D               	bcf	141,1,c	;volatile
  5905  0052D4                     
  5906                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
  5907  0052D4  0100               	movlb	0	; () banked
  5908  0052D6  516E               	movf	lcd_send@value& (0+255),w,b
  5909  0052D8  EC7F  F029         	call	_SPI_ExchangeByte
  5910  0052DC                     
  5911                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
  5912  0052DC  828D               	bsf	141,1,c	;volatile
  5913  0052DE  0012               	return		;funcret
  5914  0052E0                     __end_of_lcd_send:
  5915                           	opt callstack 0
  5916                           
  5917 ;; *************** function _SPI_ExchangeByte *****************
  5918 ;; Defined at:
  5919 ;;		line 92 in file "mcc_generated_files/spi.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  data            1    wreg     unsigned char 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  data            1   13[BANK0 ] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      unsigned char 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;Total ram usage:        1 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    7
  5940 ;; This function calls:
  5941 ;;		Nothing
  5942 ;; This function is called by:
  5943 ;;		_lcd_send
  5944 ;;		_SPI_WriteBlock
  5945 ;;		_SPI_ReadBlock
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text13
  5950  0052FE                     __ptext13:
  5951                           	opt callstack 0
  5952  0052FE                     _SPI_ExchangeByte:
  5953                           	opt callstack 21
  5954                           
  5955                           ;incstack = 0
  5956                           ;SPI_ExchangeByte@data stored from wreg
  5957  0052FE  0100               	movlb	0	; () banked
  5958  005300  6F6D               	movwf	SPI_ExchangeByte@data& (0+255),b
  5959  005302                     
  5960                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  5961  005302  C06D  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  5962  005306                     l63:
  5963  005306  A69E               	btfss	158,3,c	;volatile
  5964  005308  EF88  F029         	goto	u7291
  5965  00530C  EF8A  F029         	goto	u7290
  5966  005310                     u7291:
  5967  005310  EF83  F029         	goto	l63
  5968  005314                     u7290:
  5969  005314                     
  5970                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  5971  005314  969E               	bcf	158,3,c	;volatile
  5972                           
  5973                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  5974  005316  50C9               	movf	201,w,c	;volatile
  5975  005318  0012               	return		;funcret
  5976  00531A                     __end_of_SPI_ExchangeByte:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function _TMR2_StopTimer *****************
  5980 ;; Defined at:
  5981 ;;		line 93 in file "mcc_generated_files/tmr2.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		None
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    7
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_main
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text14
  6010  005426                     __ptext14:
  6011                           	opt callstack 0
  6012  005426                     _TMR2_StopTimer:
  6013                           	opt callstack 23
  6014  005426                     
  6015                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
  6016  005426  94CA               	bcf	202,2,c	;volatile
  6017  005428  0012               	return		;funcret
  6018  00542A                     __end_of_TMR2_StopTimer:
  6019                           	opt callstack 0
  6020                           
  6021 ;; *************** function _TMR2_StartTimer *****************
  6022 ;; Defined at:
  6023 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;		None
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;		None
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      void 
  6030 ;; Registers used:
  6031 ;;		None
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;Total ram usage:        0 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    7
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		_main
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text15
  6052  00542A                     __ptext15:
  6053                           	opt callstack 0
  6054  00542A                     _TMR2_StartTimer:
  6055                           	opt callstack 23
  6056  00542A                     
  6057                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  6058  00542A  84CA               	bsf	202,2,c	;volatile
  6059  00542C  0012               	return		;funcret
  6060  00542E                     __end_of_TMR2_StartTimer:
  6061                           	opt callstack 0
  6062                           
  6063 ;; *************** function _SYSTEM_Initialize *****************
  6064 ;; Defined at:
  6065 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:    9
  6086 ;; This function calls:
  6087 ;;		_ADC_Initialize
  6088 ;;		_EPWM1_Initialize
  6089 ;;		_EUSART1_Initialize
  6090 ;;		_INTERRUPT_Initialize
  6091 ;;		_OSCILLATOR_Initialize
  6092 ;;		_PIN_MANAGER_Initialize
  6093 ;;		_SPI_Initialize
  6094 ;;		_TMR1_Initialize
  6095 ;;		_TMR2_Initialize
  6096 ;; This function is called by:
  6097 ;;		_main
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text16
  6102  00529C                     __ptext16:
  6103                           	opt callstack 0
  6104  00529C                     _SYSTEM_Initialize:
  6105                           	opt callstack 21
  6106  00529C                     
  6107                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6108  00529C  EC17  F02A         	call	_INTERRUPT_Initialize	;wreg free
  6109  0052A0                     
  6110                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
  6111  0052A0  ECD4  F029         	call	_SPI_Initialize	;wreg free
  6112  0052A4                     
  6113                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6114  0052A4  ECCB  F026         	call	_PIN_MANAGER_Initialize	;wreg free
  6115  0052A8                     
  6116                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6117  0052A8  ECDD  F029         	call	_OSCILLATOR_Initialize	;wreg free
  6118  0052AC                     
  6119                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  6120  0052AC  ECBF  F029         	call	_ADC_Initialize	;wreg free
  6121  0052B0                     
  6122                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  6123  0052B0  EC8D  F029         	call	_EPWM1_Initialize	;wreg free
  6124  0052B4                     
  6125                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6126  0052B4  EC70  F029         	call	_TMR2_Initialize	;wreg free
  6127  0052B8                     
  6128                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  6129  0052B8  EC86  F028         	call	_TMR1_Initialize	;wreg free
  6130  0052BC                     
  6131                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  6132  0052BC  EC36  F027         	call	_EUSART1_Initialize	;wreg free
  6133  0052C0  0012               	return		;funcret
  6134  0052C2                     __end_of_SYSTEM_Initialize:
  6135                           	opt callstack 0
  6136                           
  6137 ;; *************** function _TMR2_Initialize *****************
  6138 ;; Defined at:
  6139 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    8
  6160 ;; This function calls:
  6161 ;;		_TMR2_SetInterruptHandler
  6162 ;; This function is called by:
  6163 ;;		_SYSTEM_Initialize
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text17
  6168  0052E0                     __ptext17:
  6169                           	opt callstack 0
  6170  0052E0                     _TMR2_Initialize:
  6171                           	opt callstack 21
  6172  0052E0                     
  6173                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
  6174  0052E0  68CB               	setf	203,c	;volatile
  6175  0052E2                     
  6176                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  6177  0052E2  0E00               	movlw	0
  6178  0052E4  6ECC               	movwf	204,c	;volatile
  6179  0052E6                     
  6180                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  6181  0052E6  929E               	bcf	158,1,c	;volatile
  6182  0052E8                     
  6183                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  6184  0052E8  829D               	bsf	157,1,c	;volatile
  6185  0052EA                     
  6186                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  6187  0052EA  0E36               	movlw	low _TMR2_DefaultInterruptHandler
  6188  0052EC  0100               	movlb	0	; () banked
  6189  0052EE  6F6D               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  6190  0052F0  0E54               	movlw	high _TMR2_DefaultInterruptHandler
  6191  0052F2  6F6E               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6192  0052F4  ECF3  F029         	call	_TMR2_SetInterruptHandler	;wreg free
  6193  0052F8                     
  6194                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  6195  0052F8  0E06               	movlw	6
  6196  0052FA  6ECA               	movwf	202,c	;volatile
  6197  0052FC  0012               	return		;funcret
  6198  0052FE                     __end_of_TMR2_Initialize:
  6199                           	opt callstack 0
  6200                           
  6201 ;; *************** function _TMR2_SetInterruptHandler *****************
  6202 ;; Defined at:
  6203 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  InterruptHan    2   13[BANK0 ] PTR FTN()void 
  6206 ;;		 -> TIMER2_CALLBACK(1), TMR2_DefaultInterruptHandler(1), 
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6222 ;;Total ram usage:        2 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    7
  6225 ;; This function calls:
  6226 ;;		Nothing
  6227 ;; This function is called by:
  6228 ;;		_TMR2_Initialize
  6229 ;;		_main
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text18
  6234  0053E6                     __ptext18:
  6235                           	opt callstack 0
  6236  0053E6                     _TMR2_SetInterruptHandler:
  6237                           	opt callstack 23
  6238  0053E6                     
  6239                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  6240  0053E6  C06D  F17D         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  6241  0053EA  C06E  F17E         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  6242  0053EE  0012               	return		;funcret
  6243  0053F0                     __end_of_TMR2_SetInterruptHandler:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function _TMR1_Initialize *****************
  6247 ;; Defined at:
  6248 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;Total ram usage:        2 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    7
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_SYSTEM_Initialize
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text19
  6277  00510C                     __ptext19:
  6278                           	opt callstack 0
  6279  00510C                     _TMR1_Initialize:
  6280                           	opt callstack 22
  6281  00510C                     
  6282                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  6283  00510C  0E00               	movlw	0
  6284  00510E  6EAA               	movwf	170,c	;volatile
  6285                           
  6286                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  6287  005110  0E0B               	movlw	11
  6288  005112  6ECF               	movwf	207,c	;volatile
  6289                           
  6290                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  6291  005114  0EDC               	movlw	220
  6292  005116  6ECE               	movwf	206,c	;volatile
  6293  005118                     
  6294                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  6295  005118  909E               	bcf	158,0,c	;volatile
  6296  00511A                     
  6297                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6298  00511A  50CE               	movf	206,w,c	;volatile
  6299  00511C  CFCF F06D          	movff	4047,??_TMR1_Initialize	;volatile
  6300  005120  0100               	movlb	0	; () banked
  6301  005122  6B6E               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  6302  005124  C06D  F06E         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  6303  005128  6B6D               	clrf	??_TMR1_Initialize& (0+255),b
  6304  00512A  116D               	iorwf	??_TMR1_Initialize& (0+255),w,b
  6305  00512C  0101               	movlb	1	; () banked
  6306  00512E  6F85               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  6307  005130  0100               	movlb	0	; () banked
  6308  005132  516E               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  6309  005134  0101               	movlb	1	; () banked
  6310  005136  6F86               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  6311  005138                     
  6312                           ; BSR set to: 1
  6313                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  6314  005138  0E31               	movlw	49
  6315  00513A  6ECD               	movwf	205,c	;volatile
  6316  00513C                     
  6317                           ; BSR set to: 1
  6318  00513C  0012               	return		;funcret
  6319  00513E                     __end_of_TMR1_Initialize:
  6320                           	opt callstack 0
  6321                           
  6322 ;; *************** function _SPI_Initialize *****************
  6323 ;; Defined at:
  6324 ;;		line 62 in file "mcc_generated_files/spi.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;		None
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6342 ;;Total ram usage:        0 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; Hardware stack levels required when called:    7
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_SYSTEM_Initialize
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text20
  6353  0053A8                     __ptext20:
  6354                           	opt callstack 0
  6355  0053A8                     _SPI_Initialize:
  6356                           	opt callstack 22
  6357  0053A8                     
  6358                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  6359  0053A8  0E40               	movlw	64
  6360  0053AA  6EC7               	movwf	199,c	;volatile
  6361                           
  6362                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
  6363  0053AC  0E00               	movlw	0
  6364  0053AE  6EC6               	movwf	198,c	;volatile
  6365                           
  6366                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  6367  0053B0  0E01               	movlw	1
  6368  0053B2  6EC8               	movwf	200,c	;volatile
  6369  0053B4                     
  6370                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  6371  0053B4  9694               	bcf	148,3,c	;volatile
  6372  0053B6                     
  6373                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  6374  0053B6  9AC6               	bcf	198,5,c	;volatile
  6375  0053B8  0012               	return		;funcret
  6376  0053BA                     __end_of_SPI_Initialize:
  6377                           	opt callstack 0
  6378                           
  6379 ;; *************** function _PIN_MANAGER_Initialize *****************
  6380 ;; Defined at:
  6381 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;		None
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;Total ram usage:        0 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    8
  6402 ;; This function calls:
  6403 ;;		_IOCB4_SetInterruptHandler
  6404 ;; This function is called by:
  6405 ;;		_SYSTEM_Initialize
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text21
  6410  004D96                     __ptext21:
  6411                           	opt callstack 0
  6412  004D96                     _PIN_MANAGER_Initialize:
  6413                           	opt callstack 21
  6414  004D96                     
  6415                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
  6416  004D96  0E00               	movlw	0
  6417  004D98  6E8D               	movwf	141,c	;volatile
  6418                           
  6419                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
  6420  004D9A  0E00               	movlw	0
  6421  004D9C  6E8C               	movwf	140,c	;volatile
  6422                           
  6423                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  6424  004D9E  0E00               	movlw	0
  6425  004DA0  6E89               	movwf	137,c	;volatile
  6426                           
  6427                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
  6428  004DA2  0E00               	movlw	0
  6429  004DA4  6E8A               	movwf	138,c	;volatile
  6430                           
  6431                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  6432  004DA6  0E00               	movlw	0
  6433  004DA8  6E8B               	movwf	139,c	;volatile
  6434                           
  6435                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
  6436  004DAA  0E04               	movlw	4
  6437  004DAC  6E96               	movwf	150,c	;volatile
  6438                           
  6439                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
  6440  004DAE  0E0F               	movlw	15
  6441  004DB0  6E92               	movwf	146,c	;volatile
  6442  004DB2                     
  6443                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
  6444  004DB2  6893               	setf	147,c	;volatile
  6445                           
  6446                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
  6447  004DB4  0E97               	movlw	151
  6448  004DB6  6E94               	movwf	148,c	;volatile
  6449                           
  6450                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xEF;
  6451  004DB8  0EEF               	movlw	239
  6452  004DBA  6E95               	movwf	149,c	;volatile
  6453  004DBC                     
  6454                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xFF;
  6455  004DBC  010F               	movlb	15	; () banked
  6456  004DBE  695D               	setf	93,b	;volatile
  6457                           
  6458                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
  6459  004DC0  0E7D               	movlw	125
  6460  004DC2  6F5C               	movwf	92,b	;volatile
  6461                           
  6462                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
  6463  004DC4  0E00               	movlw	0
  6464  004DC6  6F5B               	movwf	91,b	;volatile
  6465  004DC8                     
  6466                           ; BSR set to: 15
  6467                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
  6468  004DC8  8EF1               	bsf	241,7,c	;volatile
  6469  004DCA                     
  6470                           ; BSR set to: 15
  6471                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
  6472  004DCA  895A               	bsf	90,4,b	;volatile
  6473  004DCC                     
  6474                           ; BSR set to: 15
  6475                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
  6476  004DCC  0E38               	movlw	low _IOCB4_DefaultInterruptHandler
  6477  004DCE  0100               	movlb	0	; () banked
  6478  004DD0  6F6D               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  6479  004DD2  0E54               	movlw	high _IOCB4_DefaultInterruptHandler
  6480  004DD4  6F6E               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6481  004DD6  ECF8  F029         	call	_IOCB4_SetInterruptHandler	;wreg free
  6482  004DDA                     
  6483                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
  6484  004DDA  86F2               	bsf	242,3,c	;volatile
  6485  004DDC  0012               	return		;funcret
  6486  004DDE                     __end_of_PIN_MANAGER_Initialize:
  6487                           	opt callstack 0
  6488                           
  6489 ;; *************** function _IOCB4_SetInterruptHandler *****************
  6490 ;; Defined at:
  6491 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  InterruptHan    2   13[BANK0 ] PTR FTN()void 
  6494 ;;		 -> INTERRUPT_S1_CALLBACK(1), IOCB4_DefaultInterruptHandler(1), 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  1    wreg      void 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;Total ram usage:        2 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    7
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_PIN_MANAGER_Initialize
  6517 ;;		_main
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text22
  6522  0053F0                     __ptext22:
  6523                           	opt callstack 0
  6524  0053F0                     _IOCB4_SetInterruptHandler:
  6525                           	opt callstack 21
  6526  0053F0                     
  6527                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
  6528  0053F0  C06D  F187         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  6529  0053F4  C06E  F188         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  6530  0053F8  0012               	return		;funcret
  6531  0053FA                     __end_of_IOCB4_SetInterruptHandler:
  6532                           	opt callstack 0
  6533                           
  6534 ;; *************** function _OSCILLATOR_Initialize *****************
  6535 ;; Defined at:
  6536 ;;		line 64 in file "mcc_generated_files/mcc.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;		None
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;		None
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      void 
  6543 ;; Registers used:
  6544 ;;		wreg, status,2
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6554 ;;Total ram usage:        0 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    7
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_SYSTEM_Initialize
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text23
  6565  0053BA                     __ptext23:
  6566                           	opt callstack 0
  6567  0053BA                     _OSCILLATOR_Initialize:
  6568                           	opt callstack 22
  6569  0053BA                     
  6570                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x60;
  6571  0053BA  0E60               	movlw	96
  6572  0053BC  6ED3               	movwf	211,c	;volatile
  6573                           
  6574                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
  6575  0053BE  0E00               	movlw	0
  6576  0053C0  6ED2               	movwf	210,c	;volatile
  6577                           
  6578                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  6579  0053C2  0E00               	movlw	0
  6580  0053C4  6E9B               	movwf	155,c	;volatile
  6581                           
  6582                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
  6583  0053C6  0E00               	movlw	0
  6584  0053C8  6E9A               	movwf	154,c	;volatile
  6585  0053CA  0012               	return		;funcret
  6586  0053CC                     __end_of_OSCILLATOR_Initialize:
  6587                           	opt callstack 0
  6588                           
  6589 ;; *************** function _INTERRUPT_Initialize *****************
  6590 ;; Defined at:
  6591 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;		None
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;		None
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		None
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;Total ram usage:        0 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    7
  6612 ;; This function calls:
  6613 ;;		Nothing
  6614 ;; This function is called by:
  6615 ;;		_SYSTEM_Initialize
  6616 ;; This function uses a non-reentrant model
  6617 ;;
  6618                           
  6619                           	psect	text24
  6620  00542E                     __ptext24:
  6621                           	opt callstack 0
  6622  00542E                     _INTERRUPT_Initialize:
  6623                           	opt callstack 22
  6624  00542E                     
  6625                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6626  00542E  9ED0               	bcf	208,7,c	;volatile
  6627  005430  0012               	return		;funcret
  6628  005432                     __end_of_INTERRUPT_Initialize:
  6629                           	opt callstack 0
  6630                           
  6631 ;; *************** function _EUSART1_Initialize *****************
  6632 ;; Defined at:
  6633 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    8
  6654 ;; This function calls:
  6655 ;;		_EUSART1_SetErrorHandler
  6656 ;;		_EUSART1_SetFramingErrorHandler
  6657 ;;		_EUSART1_SetOverrunErrorHandler
  6658 ;; This function is called by:
  6659 ;;		_SYSTEM_Initialize
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text25
  6664  004E6C                     __ptext25:
  6665                           	opt callstack 0
  6666  004E6C                     _EUSART1_Initialize:
  6667                           	opt callstack 21
  6668  004E6C                     
  6669                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6670  004E6C  0E08               	movlw	8
  6671  004E6E  6EA7               	movwf	167,c	;volatile
  6672                           
  6673                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6674  004E70  0E90               	movlw	144
  6675  004E72  6EAB               	movwf	171,c	;volatile
  6676                           
  6677                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6678  004E74  0E24               	movlw	36
  6679  004E76  6EAC               	movwf	172,c	;volatile
  6680                           
  6681                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
  6682  004E78  0ECF               	movlw	207
  6683  004E7A  6EAF               	movwf	175,c	;volatile
  6684                           
  6685                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  6686  004E7C  0E00               	movlw	0
  6687  004E7E  6E7D               	movwf	125,c	;volatile
  6688  004E80                     
  6689                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6690  004E80  0E00               	movlw	0
  6691  004E82  0100               	movlb	0	; () banked
  6692  004E84  6F6D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  6693  004E86  0E00               	movlw	0
  6694  004E88  6F6E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  6695  004E8A  EC02  F02A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6696  004E8E                     
  6697                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6698  004E8E  0E00               	movlw	0
  6699  004E90  0100               	movlb	0	; () banked
  6700  004E92  6F6D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  6701  004E94  0E00               	movlw	0
  6702  004E96  6F6E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  6703  004E98  ECFD  F029         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6704  004E9C                     
  6705                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6706  004E9C  0E00               	movlw	0
  6707  004E9E  0100               	movlb	0	; () banked
  6708  004EA0  6F6D               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  6709  004EA2  0E00               	movlw	0
  6710  004EA4  6F6E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  6711  004EA6  EC07  F02A         	call	_EUSART1_SetErrorHandler	;wreg free
  6712  004EAA                     
  6713                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6714  004EAA  0E00               	movlw	0
  6715  004EAC  6E5E               	movwf	_eusart1RxLastError^0,c	;volatile
  6716  004EAE  0012               	return		;funcret
  6717  004EB0                     __end_of_EUSART1_Initialize:
  6718                           	opt callstack 0
  6719                           
  6720 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6721 ;; Defined at:
  6722 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  interruptHan    2   13[BANK0 ] PTR FTN()void 
  6725 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;		None
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, status,2, status,0
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;Total ram usage:        2 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    7
  6744 ;; This function calls:
  6745 ;;		Nothing
  6746 ;; This function is called by:
  6747 ;;		_EUSART1_Initialize
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text26
  6752  0053FA                     __ptext26:
  6753                           	opt callstack 0
  6754  0053FA                     _EUSART1_SetOverrunErrorHandler:
  6755                           	opt callstack 21
  6756  0053FA                     
  6757                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6758  0053FA  C06D  F181         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6759  0053FE  C06E  F182         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6760  005402  0012               	return		;funcret
  6761  005404                     __end_of_EUSART1_SetOverrunErrorHandler:
  6762                           	opt callstack 0
  6763                           
  6764 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6765 ;; Defined at:
  6766 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  interruptHan    2   13[BANK0 ] PTR FTN()void 
  6769 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6781 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6784 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;Total ram usage:        2 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    7
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_EUSART1_Initialize
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text27
  6796  005404                     __ptext27:
  6797                           	opt callstack 0
  6798  005404                     _EUSART1_SetFramingErrorHandler:
  6799                           	opt callstack 21
  6800  005404                     
  6801                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6802  005404  C06D  F183         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6803  005408  C06E  F184         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6804  00540C  0012               	return		;funcret
  6805  00540E                     __end_of_EUSART1_SetFramingErrorHandler:
  6806                           	opt callstack 0
  6807                           
  6808 ;; *************** function _EUSART1_SetErrorHandler *****************
  6809 ;; Defined at:
  6810 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;  interruptHan    2   13[BANK0 ] PTR FTN()void 
  6813 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;		None
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  1    wreg      void 
  6818 ;; Registers used:
  6819 ;;		wreg, status,2, status,0
  6820 ;; Tracked objects:
  6821 ;;		On entry : 0/0
  6822 ;;		On exit  : 0/0
  6823 ;;		Unchanged: 0/0
  6824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6825 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6829 ;;Total ram usage:        2 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    7
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_EUSART1_Initialize
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text28
  6840  00540E                     __ptext28:
  6841                           	opt callstack 0
  6842  00540E                     _EUSART1_SetErrorHandler:
  6843                           	opt callstack 21
  6844  00540E                     
  6845                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  6846  00540E  C06D  F17F         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6847  005412  C06E  F180         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6848  005416  0012               	return		;funcret
  6849  005418                     __end_of_EUSART1_SetErrorHandler:
  6850                           	opt callstack 0
  6851                           
  6852 ;; *************** function _EPWM1_Initialize *****************
  6853 ;; Defined at:
  6854 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    7
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_SYSTEM_Initialize
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text29
  6883  00531A                     __ptext29:
  6884                           	opt callstack 0
  6885  00531A                     _EPWM1_Initialize:
  6886                           	opt callstack 22
  6887  00531A                     
  6888                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x0C;
  6889  00531A  0E0C               	movlw	12
  6890  00531C  6EBB               	movwf	187,c	;volatile
  6891                           
  6892                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  6893  00531E  0E00               	movlw	0
  6894  005320  6EBF               	movwf	191,c	;volatile
  6895                           
  6896                           ;mcc_generated_files/epwm1.c: 75:  PSTR1CON = 0x01;
  6897  005322  0E01               	movlw	1
  6898  005324  6E9C               	movwf	156,c	;volatile
  6899                           
  6900                           ;mcc_generated_files/epwm1.c: 78:  ECCP1DEL = 0x80;
  6901  005326  0E80               	movlw	128
  6902  005328  6EBE               	movwf	190,c	;volatile
  6903                           
  6904                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  6905  00532A  0E00               	movlw	0
  6906  00532C  6EBD               	movwf	189,c	;volatile
  6907                           
  6908                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x00;
  6909  00532E  0E00               	movlw	0
  6910  005330  6EBC               	movwf	188,c	;volatile
  6911  005332                     
  6912                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRSbits.C1TSEL = 0x0;
  6913  005332  9099               	bcf	153,0,c	;volatile
  6914  005334  0012               	return		;funcret
  6915  005336                     __end_of_EPWM1_Initialize:
  6916                           	opt callstack 0
  6917                           
  6918 ;; *************** function _ADC_Initialize *****************
  6919 ;; Defined at:
  6920 ;;		line 62 in file "mcc_generated_files/adc.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    7
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_SYSTEM_Initialize
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text30
  6949  00537E                     __ptext30:
  6950                           	opt callstack 0
  6951  00537E                     _ADC_Initialize:
  6952                           	opt callstack 22
  6953  00537E                     
  6954                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  6955  00537E  0E01               	movlw	1
  6956  005380  6EC2               	movwf	194,c	;volatile
  6957                           
  6958                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
  6959  005382  0E80               	movlw	128
  6960  005384  6EC1               	movwf	193,c	;volatile
  6961                           
  6962                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xB5;
  6963  005386  0EB5               	movlw	181
  6964  005388  6EC0               	movwf	192,c	;volatile
  6965                           
  6966                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  6967  00538A  0E00               	movlw	0
  6968  00538C  6EC4               	movwf	196,c	;volatile
  6969                           
  6970                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  6971  00538E  0E00               	movlw	0
  6972  005390  6EC3               	movwf	195,c	;volatile
  6973  005392  0012               	return		;funcret
  6974  005394                     __end_of_ADC_Initialize:
  6975                           	opt callstack 0
  6976                           
  6977 ;; *************** function _SPI_Open *****************
  6978 ;; Defined at:
  6979 ;;		line 72 in file "mcc_generated_files/spi.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  spiUniqueCon    1    wreg     enum E353
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  spiUniqueCon    1   14[BANK0 ] enum E353
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      _Bool 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6997 ;;Total ram usage:        2 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    7
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text31
  7008  004970                     __ptext31:
  7009                           	opt callstack 0
  7010  004970                     _SPI_Open:
  7011                           	opt callstack 23
  7012                           
  7013                           ;incstack = 0
  7014                           ;SPI_Open@spiUniqueConfiguration stored from wreg
  7015  004970  0100               	movlb	0	; () banked
  7016  004972  6F6E               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
  7017  004974                     
  7018                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
  7019  004974  BAC6               	btfsc	198,5,c	;volatile
  7020  004976  EFBF  F024         	goto	u9211
  7021  00497A  EFC1  F024         	goto	u9210
  7022  00497E                     u9211:
  7023  00497E  EF11  F025         	goto	l57
  7024  004982                     u9210:
  7025  004982                     
  7026                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
  7027  004982  0100               	movlb	0	; () banked
  7028  004984  516E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  7029  004986  0D04               	mullw	4
  7030  004988  0E01               	movlw	1
  7031  00498A  26F3               	addwf	243,f,c
  7032  00498C  0E00               	movlw	0
  7033  00498E  22F4               	addwfc	244,f,c
  7034  004990  0E81               	movlw	low _spi_configuration
  7035  004992  24F3               	addwf	243,w,c
  7036  004994  6EF6               	movwf	tblptrl,c
  7037  004996  0EFE               	movlw	high _spi_configuration
  7038  004998  20F4               	addwfc	244,w,c
  7039  00499A  6EF7               	movwf	tblptrh,c
  7040  00499C                     	if	1	;There are 3 active tblptr bytes
  7041  00499C  6AF8               	clrf	tblptru,c
  7042  00499E  0E00               	movlw	low (__mediumconst shr (0+16))
  7043  0049A0  22F8               	addwfc	tblptru,f,c
  7044  0049A2                     	endif
  7045  0049A2  0008               	tblrd		*
  7046  0049A4  CFF5 FFC7          	movff	tablat,4039	;volatile
  7047                           
  7048                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
  7049  0049A8  516E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  7050  0049AA  0D04               	mullw	4
  7051  0049AC  0E81               	movlw	low _spi_configuration
  7052  0049AE  24F3               	addwf	243,w,c
  7053  0049B0  6EF6               	movwf	tblptrl,c
  7054  0049B2  0EFE               	movlw	high _spi_configuration
  7055  0049B4  20F4               	addwfc	244,w,c
  7056  0049B6  6EF7               	movwf	tblptrh,c
  7057  0049B8                     	if	1	;There are 3 active tblptr bytes
  7058  0049B8  6AF8               	clrf	tblptru,c
  7059  0049BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7060  0049BC  22F8               	addwfc	tblptru,f,c
  7061  0049BE                     	endif
  7062  0049BE  0008               	tblrd		*
  7063  0049C0  CFF5 FFC6          	movff	tablat,4038	;volatile
  7064  0049C4                     
  7065                           ; BSR set to: 0
  7066                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
  7067  0049C4  0E00               	movlw	0
  7068  0049C6  6EC5               	movwf	197,c	;volatile
  7069  0049C8                     
  7070                           ; BSR set to: 0
  7071                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
  7072  0049C8  516E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  7073  0049CA  0D04               	mullw	4
  7074  0049CC  0E02               	movlw	2
  7075  0049CE  26F3               	addwf	243,f,c
  7076  0049D0  0E00               	movlw	0
  7077  0049D2  22F4               	addwfc	244,f,c
  7078  0049D4  0E81               	movlw	low _spi_configuration
  7079  0049D6  24F3               	addwf	243,w,c
  7080  0049D8  6EF6               	movwf	tblptrl,c
  7081  0049DA  0EFE               	movlw	high _spi_configuration
  7082  0049DC  20F4               	addwfc	244,w,c
  7083  0049DE  6EF7               	movwf	tblptrh,c
  7084  0049E0                     	if	1	;There are 3 active tblptr bytes
  7085  0049E0  6AF8               	clrf	tblptru,c
  7086  0049E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7087  0049E4  22F8               	addwfc	tblptru,f,c
  7088  0049E6                     	endif
  7089  0049E6  0008               	tblrd		*
  7090  0049E8  CFF5 FFC8          	movff	tablat,4040	;volatile
  7091  0049EC                     
  7092                           ; BSR set to: 0
  7093                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
  7094  0049EC  516E               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  7095  0049EE  0D04               	mullw	4
  7096  0049F0  0E03               	movlw	3
  7097  0049F2  26F3               	addwf	243,f,c
  7098  0049F4  0E00               	movlw	0
  7099  0049F6  22F4               	addwfc	244,f,c
  7100  0049F8  0E81               	movlw	low _spi_configuration
  7101  0049FA  24F3               	addwf	243,w,c
  7102  0049FC  6EF6               	movwf	tblptrl,c
  7103  0049FE  0EFE               	movlw	high _spi_configuration
  7104  004A00  20F4               	addwfc	244,w,c
  7105  004A02  6EF7               	movwf	tblptrh,c
  7106  004A04                     	if	1	;There are 3 active tblptr bytes
  7107  004A04  6AF8               	clrf	tblptru,c
  7108  004A06  0E00               	movlw	low (__mediumconst shr (0+16))
  7109  004A08  22F8               	addwfc	tblptru,f,c
  7110  004A0A                     	endif
  7111  004A0A  0008               	tblrd		*
  7112  004A0C  CFF5 F06D          	movff	tablat,??_SPI_Open
  7113  004A10  476D               	rlncf	??_SPI_Open& (0+255),f,b
  7114  004A12  476D               	rlncf	??_SPI_Open& (0+255),f,b
  7115  004A14  476D               	rlncf	??_SPI_Open& (0+255),f,b
  7116  004A16  5094               	movf	148,w,c	;volatile
  7117  004A18  196D               	xorwf	??_SPI_Open& (0+255),w,b
  7118  004A1A  0BF7               	andlw	-9
  7119  004A1C  196D               	xorwf	??_SPI_Open& (0+255),w,b
  7120  004A1E  6E94               	movwf	148,c	;volatile
  7121  004A20                     
  7122                           ; BSR set to: 0
  7123                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
  7124  004A20  8AC6               	bsf	198,5,c	;volatile
  7125  004A22                     l57:
  7126  004A22  0012               	return		;funcret
  7127  004A24                     __end_of_SPI_Open:
  7128                           	opt callstack 0
  7129                           
  7130 ;; *************** function _Out_USART *****************
  7131 ;; Defined at:
  7132 ;;		line 15 in file "main.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  value_2         2    9[BANK1 ] unsigned char [2]
  7137 ;;  value_1         2    7[BANK1 ] unsigned char [2]
  7138 ;;  lixo            1    0        unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      void 
  7141 ;; Registers used:
  7142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7149 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;Total ram usage:        5 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; Hardware stack levels required when called:   16
  7155 ;; This function calls:
  7156 ;;		_EUSART1_Read
  7157 ;;		_EUSART1_is_rx_ready
  7158 ;;		___xxtofl
  7159 ;;		_atoi
  7160 ;;		_printf
  7161 ;; This function is called by:
  7162 ;;		_main
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text32
  7167  003D8A                     __ptext32:
  7168                           	opt callstack 0
  7169  003D8A                     _Out_USART:
  7170                           	opt callstack 14
  7171  003D8A                     
  7172                           ;main.c: 16:     char value_1[2] = "";
  7173  003D8A  0E00               	movlw	0
  7174  003D8C  0101               	movlb	1	; () banked
  7175  003D8E  6F59               	movwf	(Out_USART@value_1+1)& (0+255),b
  7176  003D90  0E00               	movlw	0
  7177  003D92  6F58               	movwf	Out_USART@value_1& (0+255),b
  7178                           
  7179                           ;main.c: 17:     char value_2[2] = "";
  7180  003D94  0E00               	movlw	0
  7181  003D96  6F5B               	movwf	(Out_USART@value_2+1)& (0+255),b
  7182  003D98  0E00               	movlw	0
  7183  003D9A  6F5A               	movwf	Out_USART@value_2& (0+255),b
  7184                           
  7185                           ;main.c: 18:     char lixo;;main.c: 20:     while (EUSART1_is_rx_ready()) {
  7186  003D9C  EFD2  F01E         	goto	l493
  7187  003DA0                     l7932:
  7188  003DA0  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7189  003DA4                     l493:
  7190                           
  7191                           ;main.c: 20:     while (EUSART1_is_rx_ready()) {
  7192  003DA4  ECCA  F029         	call	_EUSART1_is_rx_ready	;wreg free
  7193  003DA8  0900               	iorlw	0
  7194  003DAA  A4D8               	btfss	status,2,c
  7195  003DAC  EFDA  F01E         	goto	u9221
  7196  003DB0  EFDC  F01E         	goto	u9220
  7197  003DB4                     u9221:
  7198  003DB4  EFD0  F01E         	goto	l7932
  7199  003DB8                     u9220:
  7200  003DB8                     
  7201                           ;main.c: 24:     printf("\n\r ERROR ALARM Hysteresis \n\r Insert a new turn ON value bet
      +                          ween 00-99:");
  7202  003DB8  0E85               	movlw	low STR_1
  7203  003DBA  0101               	movlb	1	; () banked
  7204  003DBC  6F51               	movwf	printf@fmt& (0+255),b
  7205  003DBE  0EFE               	movlw	high STR_1
  7206  003DC0  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7207  003DC2  EC12  F029         	call	_printf	;wreg free
  7208  003DC6                     
  7209                           ;main.c: 25:     value_1[0] = EUSART1_Read();
  7210  003DC6  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7211  003DCA  0101               	movlb	1	; () banked
  7212  003DCC  6F58               	movwf	Out_USART@value_1& (0+255),b
  7213  003DCE                     
  7214                           ; BSR set to: 1
  7215                           ;main.c: 26:     value_1[1] = EUSART1_Read();
  7216  003DCE  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7217  003DD2  0101               	movlb	1	; () banked
  7218  003DD4  6F59               	movwf	(Out_USART@value_1+1)& (0+255),b
  7219  003DD6                     
  7220                           ; BSR set to: 1
  7221                           ;main.c: 27:     turn_on_value = atoi(value_1);
  7222  003DD6  0E58               	movlw	low Out_USART@value_1
  7223  003DD8  0100               	movlb	0	; () banked
  7224  003DDA  6F74               	movwf	atoi@s& (0+255),b
  7225  003DDC  0E01               	movlw	high Out_USART@value_1
  7226  003DDE  6F75               	movwf	(atoi@s+1)& (0+255),b
  7227  003DE0  EC14  F016         	call	_atoi	;wreg free
  7228  003DE4  C074  F0F0         	movff	?_atoi,_turn_on_value
  7229  003DE8  C075  F0F1         	movff	?_atoi+1,_turn_on_value+1
  7230  003DEC                     
  7231                           ;main.c: 28:     printf("\n\rValue: %d", turn_on_value);
  7232  003DEC  0EAE               	movlw	low STR_2
  7233  003DEE  0101               	movlb	1	; () banked
  7234  003DF0  6F51               	movwf	printf@fmt& (0+255),b
  7235  003DF2  0EFF               	movlw	high STR_2
  7236  003DF4  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7237  003DF6  C0F0  F153         	movff	_turn_on_value,?_printf+2
  7238  003DFA  C0F1  F154         	movff	_turn_on_value+1,?_printf+3
  7239  003DFE  EC12  F029         	call	_printf	;wreg free
  7240  003E02                     
  7241                           ;main.c: 30:     printf("\n\rInsert a new turn OFF value between 00-99:");
  7242  003E02  0ECC               	movlw	low STR_3
  7243  003E04  0101               	movlb	1	; () banked
  7244  003E06  6F51               	movwf	printf@fmt& (0+255),b
  7245  003E08  0EFE               	movlw	high STR_3
  7246  003E0A  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7247  003E0C  EC12  F029         	call	_printf	;wreg free
  7248  003E10                     
  7249                           ;main.c: 31:     value_2[0] = EUSART1_Read();
  7250  003E10  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7251  003E14  0101               	movlb	1	; () banked
  7252  003E16  6F5A               	movwf	Out_USART@value_2& (0+255),b
  7253  003E18                     
  7254                           ; BSR set to: 1
  7255                           ;main.c: 32:     value_2[1] = EUSART1_Read();
  7256  003E18  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7257  003E1C  0101               	movlb	1	; () banked
  7258  003E1E  6F5B               	movwf	(Out_USART@value_2+1)& (0+255),b
  7259  003E20                     
  7260                           ; BSR set to: 1
  7261                           ;main.c: 33:     turn_off_value = atoi(value_2);
  7262  003E20  0E5A               	movlw	low Out_USART@value_2
  7263  003E22  0100               	movlb	0	; () banked
  7264  003E24  6F74               	movwf	atoi@s& (0+255),b
  7265  003E26  0E01               	movlw	high Out_USART@value_2
  7266  003E28  6F75               	movwf	(atoi@s+1)& (0+255),b
  7267  003E2A  EC14  F016         	call	_atoi	;wreg free
  7268  003E2E  C074  F0EE         	movff	?_atoi,_turn_off_value
  7269  003E32  C075  F0EF         	movff	?_atoi+1,_turn_off_value+1
  7270                           
  7271                           ;main.c: 34:     printf("\n\rValue: %d", turn_off_value);
  7272  003E36  0EAE               	movlw	low STR_2
  7273  003E38  0101               	movlb	1	; () banked
  7274  003E3A  6F51               	movwf	printf@fmt& (0+255),b
  7275  003E3C  0EFF               	movlw	high STR_2
  7276  003E3E  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7277  003E40  C0EE  F153         	movff	_turn_off_value,?_printf+2
  7278  003E44  C0EF  F154         	movff	_turn_off_value+1,?_printf+3
  7279  003E48  EC12  F029         	call	_printf	;wreg free
  7280                           
  7281                           ;main.c: 36:     printf("\n\rNew value are: %d  and %d", turn_on_value, turn_off_value);
  7282  003E4C  0E46               	movlw	low STR_5
  7283  003E4E  0101               	movlb	1	; () banked
  7284  003E50  6F51               	movwf	printf@fmt& (0+255),b
  7285  003E52  0EFF               	movlw	high STR_5
  7286  003E54  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7287  003E56  C0F0  F153         	movff	_turn_on_value,?_printf+2
  7288  003E5A  C0F1  F154         	movff	_turn_on_value+1,?_printf+3
  7289  003E5E  C0EE  F155         	movff	_turn_off_value,?_printf+4
  7290  003E62  C0EF  F156         	movff	_turn_off_value+1,?_printf+5
  7291  003E66  EC12  F029         	call	_printf	;wreg free
  7292                           
  7293                           ;main.c: 38:     printf("\n\rInsert a new turn KP value between 00-99:");
  7294  003E6A  0EF9               	movlw	low STR_6
  7295  003E6C  0101               	movlb	1	; () banked
  7296  003E6E  6F51               	movwf	printf@fmt& (0+255),b
  7297  003E70  0EFE               	movlw	high STR_6
  7298  003E72  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7299  003E74  EC12  F029         	call	_printf	;wreg free
  7300  003E78                     
  7301                           ;main.c: 39:     value_2[0] = EUSART1_Read();
  7302  003E78  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7303  003E7C  0101               	movlb	1	; () banked
  7304  003E7E  6F5A               	movwf	Out_USART@value_2& (0+255),b
  7305  003E80                     
  7306                           ; BSR set to: 1
  7307                           ;main.c: 40:     value_2[1] = EUSART1_Read();
  7308  003E80  EC3A  F029         	call	_EUSART1_Read	;wreg free
  7309  003E84  0101               	movlb	1	; () banked
  7310  003E86  6F5B               	movwf	(Out_USART@value_2+1)& (0+255),b
  7311  003E88                     
  7312                           ; BSR set to: 1
  7313                           ;main.c: 41:     KP = atoi(value_2);
  7314  003E88  0E5A               	movlw	low Out_USART@value_2
  7315  003E8A  0100               	movlb	0	; () banked
  7316  003E8C  6F74               	movwf	atoi@s& (0+255),b
  7317  003E8E  0E01               	movlw	high Out_USART@value_2
  7318  003E90  6F75               	movwf	(atoi@s+1)& (0+255),b
  7319  003E92  EC14  F016         	call	_atoi	;wreg free
  7320  003E96  0100               	movlb	0	; () banked
  7321  003E98  C074  F083         	movff	?_atoi,___xxtofl@val
  7322  003E9C  C075  F084         	movff	?_atoi+1,___xxtofl@val+1
  7323  003EA0  0E00               	movlw	0
  7324  003EA2  BF84               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7325  003EA4  0EFF               	movlw	-1
  7326  003EA6  6F85               	movwf	(___xxtofl@val+2)& (0+255),b
  7327  003EA8  6F86               	movwf	(___xxtofl@val+3)& (0+255),b
  7328  003EAA  0E01               	movlw	1
  7329  003EAC  EC10  F01A         	call	___xxtofl
  7330  003EB0  C083  F190         	movff	?___xxtofl,_KP
  7331  003EB4  C084  F191         	movff	?___xxtofl+1,_KP+1
  7332  003EB8  C085  F192         	movff	?___xxtofl+2,_KP+2
  7333  003EBC  C086  F193         	movff	?___xxtofl+3,_KP+3
  7334  003EC0                     
  7335                           ;main.c: 42:     printf("\n\rValue: %d", KP);
  7336  003EC0  0EAE               	movlw	low STR_2
  7337  003EC2  0101               	movlb	1	; () banked
  7338  003EC4  6F51               	movwf	printf@fmt& (0+255),b
  7339  003EC6  0EFF               	movlw	high STR_2
  7340  003EC8  6F52               	movwf	(printf@fmt+1)& (0+255),b
  7341  003ECA  C190  F153         	movff	_KP,?_printf+2
  7342  003ECE  C191  F154         	movff	_KP+1,?_printf+3
  7343  003ED2  C192  F155         	movff	_KP+2,?_printf+4
  7344  003ED6  C193  F156         	movff	_KP+3,?_printf+5
  7345  003EDA  EC12  F029         	call	_printf	;wreg free
  7346  003EDE  0012               	return		;funcret
  7347  003EE0                     __end_of_Out_USART:
  7348                           	opt callstack 0
  7349                           
  7350 ;; *************** function _printf *****************
  7351 ;; Defined at:
  7352 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  7355 ;;		 -> STR_7(12), STR_6(44), STR_5(28), STR_4(12), 
  7356 ;;		 -> STR_3(45), STR_2(12), STR_1(71), 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  ap              2  128[BANK0 ] PTR void [1]
  7359 ;;		 -> ?_snprintf(2), ?_printf(2), 
  7360 ;;  ret             2    0        int 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  2    0[BANK1 ] int 
  7363 ;; Registers used:
  7364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7370 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7371 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7373 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7374 ;;Total ram usage:       10 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:   15
  7377 ;; This function calls:
  7378 ;;		_vfprintf
  7379 ;; This function is called by:
  7380 ;;		_Out_USART
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           	psect	text33
  7385  005224                     __ptext33:
  7386                           	opt callstack 0
  7387  005224                     _printf:
  7388                           	opt callstack 14
  7389  005224  0E53               	movlw	low (?_printf+2)
  7390  005226  0100               	movlb	0	; () banked
  7391  005228  6FE0               	movwf	printf@ap& (0+255),b
  7392  00522A  0E01               	movlw	high (?_printf+2)
  7393  00522C  6FE1               	movwf	(printf@ap+1)& (0+255),b
  7394  00522E                     
  7395                           ; BSR set to: 0
  7396  00522E  0E00               	movlw	0
  7397  005230  6FD6               	movwf	vfprintf@fp& (0+255),b
  7398  005232  0E00               	movlw	0
  7399  005234  6FD7               	movwf	(vfprintf@fp+1)& (0+255),b
  7400  005236  C151  F0D8         	movff	printf@fmt,vfprintf@fmt
  7401  00523A  C152  F0D9         	movff	printf@fmt+1,vfprintf@fmt+1
  7402  00523E  0EE0               	movlw	low printf@ap
  7403  005240  6FDA               	movwf	vfprintf@ap& (0+255),b
  7404  005242  0E00               	movlw	high printf@ap
  7405  005244  6FDB               	movwf	(vfprintf@ap+1)& (0+255),b
  7406  005246  ECC2  F025         	call	_vfprintf	;wreg free
  7407  00524A  0012               	return		;funcret
  7408  00524C                     __end_of_printf:
  7409                           	opt callstack 0
  7410                           
  7411 ;; *************** function _vfprintf *****************
  7412 ;; Defined at:
  7413 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  fp              2  118[BANK0 ] PTR struct _IO_FILE
  7416 ;;		 -> vsnprintf@f(6), NULL(0), 
  7417 ;;  fmt             2  120[BANK0 ] PTR const unsigned char 
  7418 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
  7419 ;;		 -> STR_10(10), STR_9(14), STR_7(12), STR_6(44), 
  7420 ;;		 -> STR_5(28), STR_4(12), STR_3(45), STR_2(12), 
  7421 ;;		 -> STR_1(71), 
  7422 ;;  ap              2  122[BANK0 ] PTR PTR void 
  7423 ;;		 -> snprintf@ap(2), printf@ap(2), 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  cfmt            2  124[BANK0 ] PTR unsigned char 
  7426 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
  7427 ;;		 -> STR_10(10), STR_9(14), STR_7(12), STR_6(44), 
  7428 ;;		 -> STR_5(28), STR_4(12), STR_3(45), STR_2(12), 
  7429 ;;		 -> STR_1(71), 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  2  118[BANK0 ] int 
  7432 ;; Registers used:
  7433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7440 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7442 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7443 ;;Total ram usage:        8 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:   14
  7446 ;; This function calls:
  7447 ;;		_vfpfcnvrt
  7448 ;; This function is called by:
  7449 ;;		_printf
  7450 ;;		_vsnprintf
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text34
  7455  004B84                     __ptext34:
  7456                           	opt callstack 0
  7457  004B84                     _vfprintf:
  7458                           	opt callstack 14
  7459  004B84                     
  7460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7461  004B84  C0D8  F0DC         	movff	vfprintf@fmt,vfprintf@cfmt
  7462  004B88  C0D9  F0DD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7463  004B8C                     
  7464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7465  004B8C  0E00               	movlw	0
  7466  004B8E  0100               	movlb	0	; () banked
  7467  004B90  6FE7               	movwf	(_nout+1)& (0+255),b
  7468  004B92  0E00               	movlw	0
  7469  004B94  6FE6               	movwf	_nout& (0+255),b
  7470                           
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7472  004B96  EFE0  F025         	goto	l7672
  7473  004B9A                     l7670:
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7477  004B9A  C0D6  F0B1         	movff	vfprintf@fp,vfpfcnvrt@fp
  7478  004B9E  C0D7  F0B2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7479  004BA2  0EDC               	movlw	low vfprintf@cfmt
  7480  004BA4  6FB3               	movwf	vfpfcnvrt@fmt& (0+255),b
  7481  004BA6  0E00               	movlw	high vfprintf@cfmt
  7482  004BA8  6FB4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7483  004BAA  C0DA  F0B5         	movff	vfprintf@ap,vfpfcnvrt@ap
  7484  004BAE  C0DB  F0B6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7485  004BB2  EC44  F000         	call	_vfpfcnvrt	;wreg free
  7486  004BB6  0100               	movlb	0	; () banked
  7487  004BB8  51B1               	movf	?_vfpfcnvrt& (0+255),w,b
  7488  004BBA  27E6               	addwf	_nout& (0+255),f,b
  7489  004BBC  51B2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7490  004BBE  23E7               	addwfc	(_nout+1)& (0+255),f,b
  7491  004BC0                     l7672:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7495  004BC0  C0DC  FFF6         	movff	vfprintf@cfmt,tblptrl
  7496  004BC4  C0DD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7497  004BC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7498  004BC8  6AF8               	clrf	tblptru,c
  7499  004BCA                     	endif
  7500  004BCA                     	if	0	;tblptru may be non-zero
  7501  004BCA                     	endif
  7502  004BCA  0008               	tblrd		*
  7503  004BCC  50F5               	movf	tablat,w,c
  7504  004BCE  0900               	iorlw	0
  7505  004BD0  A4D8               	btfss	status,2,c
  7506  004BD2  EFED  F025         	goto	u8921
  7507  004BD6  EFEF  F025         	goto	u8920
  7508  004BDA                     u8921:
  7509  004BDA  EFCD  F025         	goto	l7670
  7510  004BDE                     u8920:
  7511  004BDE                     
  7512                           ; BSR set to: 0
  7513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7514  004BDE  C0E6  F0D6         	movff	_nout,?_vfprintf
  7515  004BE2  C0E7  F0D7         	movff	_nout+1,?_vfprintf+1
  7516  004BE6                     
  7517                           ; BSR set to: 0
  7518  004BE6  0012               	return		;funcret
  7519  004BE8                     __end_of_vfprintf:
  7520                           	opt callstack 0
  7521                           
  7522 ;; *************** function _vfpfcnvrt *****************
  7523 ;; Defined at:
  7524 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  7527 ;;		 -> vsnprintf@f(6), NULL(0), 
  7528 ;;  fmt             2   83[BANK0 ] PTR PTR unsigned char 
  7529 ;;		 -> vfprintf@cfmt(2), 
  7530 ;;  ap              2   85[BANK0 ] PTR PTR void 
  7531 ;;		 -> snprintf@ap(2), printf@ap(2), 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  llu             8  110[BANK0 ] unsigned long long 
  7534 ;;  ll              8   99[BANK0 ] long long 
  7535 ;;  f               4    0        long long 
  7536 ;;  ct              3    0        unsigned char [3]
  7537 ;;  vp              2  107[BANK0 ] PTR void 
  7538 ;;		 -> ?_snprintf(2), ?_printf(2), 
  7539 ;;  done            2   93[BANK0 ] int 
  7540 ;;  cp              2   91[BANK0 ] PTR unsigned char 
  7541 ;;		 -> ?_snprintf(2), ?_printf(2), 
  7542 ;;  i               2    0        int 
  7543 ;;  c               1  109[BANK0 ] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  2   81[BANK0 ] int 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7553 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7554 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7555 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;Total ram usage:       37 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:   13
  7560 ;; This function calls:
  7561 ;;		_atoi
  7562 ;;		_ctoa
  7563 ;;		_dtoa
  7564 ;;		_fputc
  7565 ;;		_isdigit
  7566 ;;		_otoa
  7567 ;;		_stoa
  7568 ;;		_strncmp
  7569 ;;		_utoa
  7570 ;;		_xtoa
  7571 ;; This function is called by:
  7572 ;;		_vfprintf
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text35
  7577  000088                     __ptext35:
  7578                           	opt callstack 0
  7579  000088                     _vfpfcnvrt:
  7580                           	opt callstack 14
  7581  000088                     
  7582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7583  000088  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7584  00008C  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7585  000090  CFDE FFF6          	movff	postinc2,tblptrl
  7586  000094  CFDD FFF7          	movff	postdec2,tblptrh
  7587  000098                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7588  000098  6AF8               	clrf	tblptru,c
  7589  00009A                     	endif
  7590  00009A                     	if	0	;tblptru may be non-zero
  7591  00009A                     	endif
  7592  00009A  0008               	tblrd		*
  7593  00009C  50F5               	movf	tablat,w,c
  7594  00009E  0A25               	xorlw	37
  7595  0000A0  A4D8               	btfss	status,2,c
  7596  0000A2  EF55  F000         	goto	u8451
  7597  0000A6  EF57  F000         	goto	u8450
  7598  0000AA                     u8451:
  7599  0000AA  EF68  F009         	goto	l7626
  7600  0000AE                     u8450:
  7601  0000AE                     
  7602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7603  0000AE  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7604  0000B2  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7605  0000B6  2ADE               	incf	postinc2,f,c
  7606  0000B8  0E00               	movlw	0
  7607  0000BA  22DD               	addwfc	postdec2,f,c
  7608  0000BC                     
  7609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7610  0000BC  0E00               	movlw	0
  7611  0000BE  0100               	movlb	0	; () banked
  7612  0000C0  6FE9               	movwf	(_width+1)& (0+255),b
  7613  0000C2  0E00               	movlw	0
  7614  0000C4  6FE8               	movwf	_width& (0+255),b
  7615  0000C6  C0E8  F0EC         	movff	_width,_flags
  7616  0000CA  C0E9  F0ED         	movff	_width+1,_flags+1
  7617  0000CE                     
  7618                           ; BSR set to: 0
  7619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7620  0000CE  69EA               	setf	_prec& (0+255),b
  7621  0000D0  69EB               	setf	(_prec+1)& (0+255),b
  7622  0000D2                     
  7623                           ; BSR set to: 0
  7624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7625  0000D2  0E00               	movlw	0
  7626  0000D4  6FBE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7627  0000D6  0E00               	movlw	0
  7628  0000D8  6FBD               	movwf	vfpfcnvrt@done& (0+255),b
  7629                           
  7630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7631  0000DA  EFB6  F000         	goto	l7344
  7632  0000DE                     l7318:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7636  0000DE  81EC               	bsf	_flags& (0+255),0,b
  7637  0000E0                     l7320:
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7641  0000E0  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7642  0000E4  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7643  0000E8  2ADE               	incf	postinc2,f,c
  7644  0000EA  0E00               	movlw	0
  7645  0000EC  22DD               	addwfc	postdec2,f,c
  7646                           
  7647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7648  0000EE  EFB6  F000         	goto	l7344
  7649  0000F2                     l7322:
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7653  0000F2  83EC               	bsf	_flags& (0+255),1,b
  7654  0000F4  EF70  F000         	goto	l7320
  7655  0000F8                     l7326:
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7659  0000F8  85EC               	bsf	_flags& (0+255),2,b
  7660  0000FA  EF70  F000         	goto	l7320
  7661  0000FE                     l7330:
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7665  0000FE  87EC               	bsf	_flags& (0+255),3,b
  7666  000100  EF70  F000         	goto	l7320
  7667  000104                     l7334:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7671  000104  89EC               	bsf	_flags& (0+255),4,b
  7672  000106  EF70  F000         	goto	l7320
  7673  00010A                     l7338:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7677  00010A  0E00               	movlw	0
  7678  00010C  6FBE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7679  00010E  0E01               	movlw	1
  7680  000110  6FBD               	movwf	vfpfcnvrt@done& (0+255),b
  7681                           
  7682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7683  000112  EFB6  F000         	goto	l7344
  7684  000116                     l7342:
  7685                           
  7686                           ; BSR set to: 0
  7687  000116  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7688  00011A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7689  00011E  CFDE FFF6          	movff	postinc2,tblptrl
  7690  000122  CFDD FFF7          	movff	postdec2,tblptrh
  7691  000126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7692  000126  6AF8               	clrf	tblptru,c
  7693  000128                     	endif
  7694  000128                     	if	0	;tblptru may be non-zero
  7695  000128                     	endif
  7696  000128  0008               	tblrd		*
  7697  00012A  50F5               	movf	tablat,w,c
  7698  00012C  6FB7               	movwf	??_vfpfcnvrt& (0+255),b
  7699  00012E  6BB8               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7700                           
  7701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7702                           ; Switch size 1, requested type "simple"
  7703                           ; Number of cases is 1, Range of values is 0 to 0
  7704                           ; switch strategies available:
  7705                           ; Name         Instructions Cycles
  7706                           ; simple_byte            4     3 (average)
  7707                           ;	Chosen strategy is simple_byte
  7708  000130  51B8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7709  000132  0A00               	xorlw	0	; case 0
  7710  000134  B4D8               	btfsc	status,2,c
  7711  000136  EF9F  F000         	goto	l8430
  7712  00013A  EF85  F000         	goto	l7338
  7713  00013E                     l8430:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ; Switch size 1, requested type "simple"
  7717                           ; Number of cases is 5, Range of values is 32 to 48
  7718                           ; switch strategies available:
  7719                           ; Name         Instructions Cycles
  7720                           ; simple_byte           16     9 (average)
  7721                           ;	Chosen strategy is simple_byte
  7722  00013E  51B7               	movf	??_vfpfcnvrt& (0+255),w,b
  7723  000140  0A20               	xorlw	32	; case 32
  7724  000142  B4D8               	btfsc	status,2,c
  7725  000144  EF7F  F000         	goto	l7330
  7726  000148  0A03               	xorlw	3	; case 35
  7727  00014A  B4D8               	btfsc	status,2,c
  7728  00014C  EF82  F000         	goto	l7334
  7729  000150  0A08               	xorlw	8	; case 43
  7730  000152  B4D8               	btfsc	status,2,c
  7731  000154  EF7C  F000         	goto	l7326
  7732  000158  0A06               	xorlw	6	; case 45
  7733  00015A  B4D8               	btfsc	status,2,c
  7734  00015C  EF6F  F000         	goto	l7318
  7735  000160  0A1D               	xorlw	29	; case 48
  7736  000162  B4D8               	btfsc	status,2,c
  7737  000164  EF79  F000         	goto	l7322
  7738  000168  EF85  F000         	goto	l7338
  7739  00016C                     l7344:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7743  00016C  51BD               	movf	vfpfcnvrt@done& (0+255),w,b
  7744  00016E  11BE               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  7745  000170  B4D8               	btfsc	status,2,c
  7746  000172  EFBD  F000         	goto	u8461
  7747  000176  EFBF  F000         	goto	u8460
  7748  00017A                     u8461:
  7749  00017A  EF8B  F000         	goto	l7342
  7750  00017E                     u8460:
  7751  00017E                     
  7752                           ; BSR set to: 0
  7753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7754  00017E  A1EC               	btfss	_flags& (0+255),0,b
  7755  000180  EFC4  F000         	goto	u8471
  7756  000184  EFC6  F000         	goto	u8470
  7757  000188                     u8471:
  7758  000188  EFC7  F000         	goto	l7348
  7759  00018C                     u8470:
  7760  00018C                     
  7761                           ; BSR set to: 0
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7763  00018C  93EC               	bcf	_flags& (0+255),1,b
  7764  00018E                     l7348:
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7768  00018E  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7769  000192  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7770  000196  CFDE FFF6          	movff	postinc2,tblptrl
  7771  00019A  CFDD FFF7          	movff	postdec2,tblptrh
  7772  00019E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7773  00019E  6AF8               	clrf	tblptru,c
  7774  0001A0                     	endif
  7775  0001A0                     	if	0	;tblptru may be non-zero
  7776  0001A0                     	endif
  7777  0001A0  0008               	tblrd		*
  7778  0001A2  50F5               	movf	tablat,w,c
  7779  0001A4  0A2A               	xorlw	42
  7780  0001A6  A4D8               	btfss	status,2,c
  7781  0001A8  EFD8  F000         	goto	u8481
  7782  0001AC  EFDA  F000         	goto	u8480
  7783  0001B0                     u8481:
  7784  0001B0  EF03  F001         	goto	l7356
  7785  0001B4                     u8480:
  7786  0001B4                     
  7787                           ; BSR set to: 0
  7788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7789  0001B4  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7790  0001B8  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7791  0001BC  2ADE               	incf	postinc2,f,c
  7792  0001BE  0E00               	movlw	0
  7793  0001C0  22DD               	addwfc	postdec2,f,c
  7794                           
  7795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7796  0001C2  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7797  0001C6  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7798  0001CA  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  7799  0001CE  0E02               	movlw	2
  7800  0001D0  26DE               	addwf	postinc2,f,c
  7801  0001D2  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  7802  0001D6  0E00               	movlw	0
  7803  0001D8  22DD               	addwfc	postdec2,f,c
  7804  0001DA  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7805  0001DE  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7806  0001E2  CFDE F0E8          	movff	postinc2,_width
  7807  0001E6  CFDD F0E9          	movff	postdec2,_width+1
  7808  0001EA                     
  7809                           ; BSR set to: 0
  7810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7811  0001EA  BFE9               	btfsc	(_width+1)& (0+255),7,b
  7812  0001EC  EFFC  F000         	goto	u8490
  7813  0001F0  EFFA  F000         	goto	u8491
  7814  0001F4                     u8491:
  7815  0001F4  EF48  F001         	goto	l7366
  7816  0001F8                     u8490:
  7817  0001F8                     
  7818                           ; BSR set to: 0
  7819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7820  0001F8  81EC               	bsf	_flags& (0+255),0,b
  7821                           
  7822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7823  0001FA  6DE8               	negf	_width& (0+255),b
  7824  0001FC  1FE9               	comf	(_width+1)& (0+255),f,b
  7825  0001FE  B0D8               	btfsc	status,0,c
  7826  000200  2BE9               	incf	(_width+1)& (0+255),f,b
  7827  000202  EF48  F001         	goto	l7366
  7828  000206                     l7356:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7832  000206  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7833  00020A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7834  00020E  CFDE F074          	movff	postinc2,atoi@s
  7835  000212  CFDD F075          	movff	postdec2,atoi@s+1
  7836  000216  EC14  F016         	call	_atoi	;wreg free
  7837  00021A  C074  F0E8         	movff	?_atoi,_width
  7838  00021E  C075  F0E9         	movff	?_atoi+1,_width+1
  7839                           
  7840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7841  000222  EF1A  F001         	goto	l7360
  7842  000226                     l7358:
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7846  000226  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7847  00022A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7848  00022E  2ADE               	incf	postinc2,f,c
  7849  000230  0E00               	movlw	0
  7850  000232  22DD               	addwfc	postdec2,f,c
  7851  000234                     l7360:
  7852  000234  0ED0               	movlw	208
  7853  000236  0100               	movlb	0	; () banked
  7854  000238  6FB7               	movwf	??_vfpfcnvrt& (0+255),b
  7855  00023A  0EFF               	movlw	255
  7856  00023C  6FB8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7857  00023E  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7858  000242  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7859  000246  CFDE FFF6          	movff	postinc2,tblptrl
  7860  00024A  CFDD FFF7          	movff	postdec2,tblptrh
  7861  00024E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7862  00024E  6AF8               	clrf	tblptru,c
  7863  000250                     	endif
  7864  000250                     	if	0	;tblptru may be non-zero
  7865  000250                     	endif
  7866  000250  0008               	tblrd		*
  7867  000252  50F5               	movf	tablat,w,c
  7868  000254  6FB9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7869  000256  6BBA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7870  000258  51B7               	movf	??_vfpfcnvrt& (0+255),w,b
  7871  00025A  27B9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7872  00025C  51B8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7873  00025E  23BA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7874  000260  51BA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7875  000262  E10A               	bnz	u8500
  7876  000264  0E0A               	movlw	10
  7877  000266  5DB9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7878  000268  A0D8               	btfss	status,0,c
  7879  00026A  EF39  F001         	goto	u8501
  7880  00026E  EF3C  F001         	goto	u8500
  7881  000272                     u8501:
  7882  000272  0E01               	movlw	1
  7883  000274  EF3D  F001         	goto	u8510
  7884  000278                     u8500:
  7885  000278  0E00               	movlw	0
  7886  00027A                     u8510:
  7887  00027A  6FBF               	movwf	_vfpfcnvrt$1835& (0+255),b
  7888  00027C  6BC0               	clrf	(_vfpfcnvrt$1835+1)& (0+255),b
  7889  00027E                     
  7890                           ; BSR set to: 0
  7891  00027E  51BF               	movf	_vfpfcnvrt$1835& (0+255),w,b
  7892  000280  11C0               	iorwf	(_vfpfcnvrt$1835+1)& (0+255),w,b
  7893  000282  A4D8               	btfss	status,2,c
  7894  000284  EF46  F001         	goto	u8521
  7895  000288  EF48  F001         	goto	u8520
  7896  00028C                     u8521:
  7897  00028C  EF13  F001         	goto	l7358
  7898  000290                     u8520:
  7899  000290                     l7366:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7903  000290  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7904  000294  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7905  000298  CFDE FFF6          	movff	postinc2,tblptrl
  7906  00029C  CFDD FFF7          	movff	postdec2,tblptrh
  7907  0002A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7908  0002A0  6AF8               	clrf	tblptru,c
  7909  0002A2                     	endif
  7910  0002A2                     	if	0	;tblptru may be non-zero
  7911  0002A2                     	endif
  7912  0002A2  0008               	tblrd		*
  7913  0002A4  50F5               	movf	tablat,w,c
  7914  0002A6  0A2E               	xorlw	46
  7915  0002A8  A4D8               	btfss	status,2,c
  7916  0002AA  EF59  F001         	goto	u8531
  7917  0002AE  EF5B  F001         	goto	u8530
  7918  0002B2                     u8531:
  7919  0002B2  EFDB  F001         	goto	l7386
  7920  0002B6                     u8530:
  7921  0002B6                     
  7922                           ; BSR set to: 0
  7923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7924  0002B6  0E00               	movlw	0
  7925  0002B8  6FEB               	movwf	(_prec+1)& (0+255),b
  7926  0002BA  0E00               	movlw	0
  7927  0002BC  6FEA               	movwf	_prec& (0+255),b
  7928  0002BE                     
  7929                           ; BSR set to: 0
  7930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7931  0002BE  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7932  0002C2  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7933  0002C6  2ADE               	incf	postinc2,f,c
  7934  0002C8  0E00               	movlw	0
  7935  0002CA  22DD               	addwfc	postdec2,f,c
  7936  0002CC                     
  7937                           ; BSR set to: 0
  7938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7939  0002CC  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7940  0002D0  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7941  0002D4  CFDE FFF6          	movff	postinc2,tblptrl
  7942  0002D8  CFDD FFF7          	movff	postdec2,tblptrh
  7943  0002DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7944  0002DC  6AF8               	clrf	tblptru,c
  7945  0002DE                     	endif
  7946  0002DE                     	if	0	;tblptru may be non-zero
  7947  0002DE                     	endif
  7948  0002DE  0008               	tblrd		*
  7949  0002E0  50F5               	movf	tablat,w,c
  7950  0002E2  0A2A               	xorlw	42
  7951  0002E4  A4D8               	btfss	status,2,c
  7952  0002E6  EF77  F001         	goto	u8541
  7953  0002EA  EF79  F001         	goto	u8540
  7954  0002EE                     u8541:
  7955  0002EE  EF96  F001         	goto	l7376
  7956  0002F2                     u8540:
  7957  0002F2                     
  7958                           ; BSR set to: 0
  7959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7960  0002F2  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7961  0002F6  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7962  0002FA  2ADE               	incf	postinc2,f,c
  7963  0002FC  0E00               	movlw	0
  7964  0002FE  22DD               	addwfc	postdec2,f,c
  7965                           
  7966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7967  000300  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7968  000304  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7969  000308  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  7970  00030C  0E02               	movlw	2
  7971  00030E  26DE               	addwf	postinc2,f,c
  7972  000310  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  7973  000314  0E00               	movlw	0
  7974  000316  22DD               	addwfc	postdec2,f,c
  7975  000318  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7976  00031C  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7977  000320  CFDE F0EA          	movff	postinc2,_prec
  7978  000324  CFDD F0EB          	movff	postdec2,_prec+1
  7979                           
  7980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7981  000328  EFDB  F001         	goto	l7386
  7982  00032C                     l7376:
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7986  00032C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7987  000330  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7988  000334  CFDE F074          	movff	postinc2,atoi@s
  7989  000338  CFDD F075          	movff	postdec2,atoi@s+1
  7990  00033C  EC14  F016         	call	_atoi	;wreg free
  7991  000340  C074  F0EA         	movff	?_atoi,_prec
  7992  000344  C075  F0EB         	movff	?_atoi+1,_prec+1
  7993                           
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7995  000348  EFAD  F001         	goto	l7380
  7996  00034C                     l7378:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  8000  00034C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8001  000350  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8002  000354  2ADE               	incf	postinc2,f,c
  8003  000356  0E00               	movlw	0
  8004  000358  22DD               	addwfc	postdec2,f,c
  8005  00035A                     l7380:
  8006  00035A  0ED0               	movlw	208
  8007  00035C  0100               	movlb	0	; () banked
  8008  00035E  6FB7               	movwf	??_vfpfcnvrt& (0+255),b
  8009  000360  0EFF               	movlw	255
  8010  000362  6FB8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8011  000364  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8012  000368  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8013  00036C  CFDE FFF6          	movff	postinc2,tblptrl
  8014  000370  CFDD FFF7          	movff	postdec2,tblptrh
  8015  000374                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8016  000374  6AF8               	clrf	tblptru,c
  8017  000376                     	endif
  8018  000376                     	if	0	;tblptru may be non-zero
  8019  000376                     	endif
  8020  000376  0008               	tblrd		*
  8021  000378  50F5               	movf	tablat,w,c
  8022  00037A  6FB9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8023  00037C  6BBA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  8024  00037E  51B7               	movf	??_vfpfcnvrt& (0+255),w,b
  8025  000380  27B9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  8026  000382  51B8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8027  000384  23BA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  8028  000386  51BA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8029  000388  E10A               	bnz	u8550
  8030  00038A  0E0A               	movlw	10
  8031  00038C  5DB9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  8032  00038E  A0D8               	btfss	status,0,c
  8033  000390  EFCC  F001         	goto	u8551
  8034  000394  EFCF  F001         	goto	u8550
  8035  000398                     u8551:
  8036  000398  0E01               	movlw	1
  8037  00039A  EFD0  F001         	goto	u8560
  8038  00039E                     u8550:
  8039  00039E  0E00               	movlw	0
  8040  0003A0                     u8560:
  8041  0003A0  6FC1               	movwf	_vfpfcnvrt$1836& (0+255),b
  8042  0003A2  6BC2               	clrf	(_vfpfcnvrt$1836+1)& (0+255),b
  8043  0003A4                     
  8044                           ; BSR set to: 0
  8045  0003A4  51C1               	movf	_vfpfcnvrt$1836& (0+255),w,b
  8046  0003A6  11C2               	iorwf	(_vfpfcnvrt$1836+1)& (0+255),w,b
  8047  0003A8  A4D8               	btfss	status,2,c
  8048  0003AA  EFD9  F001         	goto	u8571
  8049  0003AE  EFDB  F001         	goto	u8570
  8050  0003B2                     u8571:
  8051  0003B2  EFA6  F001         	goto	l7378
  8052  0003B6                     u8570:
  8053  0003B6                     l7386:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  8057  0003B6  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8058  0003BA  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8059  0003BE  CFDE FFF6          	movff	postinc2,tblptrl
  8060  0003C2  CFDD FFF7          	movff	postdec2,tblptrh
  8061  0003C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8062  0003C6  6AF8               	clrf	tblptru,c
  8063  0003C8                     	endif
  8064  0003C8                     	if	0	;tblptru may be non-zero
  8065  0003C8                     	endif
  8066  0003C8  0008               	tblrd		*
  8067  0003CA  50F5               	movf	tablat,w,c
  8068  0003CC  0A63               	xorlw	99
  8069  0003CE  A4D8               	btfss	status,2,c
  8070  0003D0  EFEC  F001         	goto	u8581
  8071  0003D4  EFEE  F001         	goto	u8580
  8072  0003D8                     u8581:
  8073  0003D8  EF15  F002         	goto	l7394
  8074  0003DC                     u8580:
  8075  0003DC                     
  8076                           ; BSR set to: 0
  8077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  8078  0003DC  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8079  0003E0  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8080  0003E4  2ADE               	incf	postinc2,f,c
  8081  0003E6  0E00               	movlw	0
  8082  0003E8  22DD               	addwfc	postdec2,f,c
  8083                           
  8084                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8085  0003EA  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8086  0003EE  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8087  0003F2  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8088  0003F6  0E02               	movlw	2
  8089  0003F8  26DE               	addwf	postinc2,f,c
  8090  0003FA  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8091  0003FE  0E00               	movlw	0
  8092  000400  22DD               	addwfc	postdec2,f,c
  8093  000402  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8094  000406  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8095  00040A  50DF               	movf	indf2,w,c
  8096  00040C  6FCD               	movwf	vfpfcnvrt@c& (0+255),b
  8097  00040E                     
  8098                           ; BSR set to: 0
  8099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  8100  00040E  C0B1  F08A         	movff	vfpfcnvrt@fp,ctoa@fp
  8101  000412  C0B2  F08B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  8102  000416  C0CD  F08C         	movff	vfpfcnvrt@c,ctoa@c
  8103  00041A  EC24  F026         	call	_ctoa	;wreg free
  8104  00041E  C08A  F0B1         	movff	?_ctoa,?_vfpfcnvrt
  8105  000422  C08B  F0B2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  8106  000426  EF85  F009         	goto	l868
  8107  00042A                     l7394:
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  8111  00042A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8112  00042E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8113  000432  CFDE F06D          	movff	postinc2,strncmp@_l
  8114  000436  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8115  00043A  0ED2               	movlw	low STR_15
  8116  00043C  6F6F               	movwf	strncmp@_r& (0+255),b
  8117  00043E  0EFF               	movlw	high STR_15
  8118  000440  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8119  000442  0E00               	movlw	0
  8120  000444  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8121  000446  0E03               	movlw	3
  8122  000448  6F71               	movwf	strncmp@n& (0+255),b
  8123  00044A  EC9D  F022         	call	_strncmp	;wreg free
  8124  00044E  0100               	movlb	0	; () banked
  8125  000450  516D               	movf	?_strncmp& (0+255),w,b
  8126  000452  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8127  000454  B4D8               	btfsc	status,2,c
  8128  000456  EF2F  F002         	goto	u8591
  8129  00045A  EF31  F002         	goto	u8590
  8130  00045E                     u8591:
  8131  00045E  EF4D  F002         	goto	l7398
  8132  000462                     u8590:
  8133  000462                     
  8134                           ; BSR set to: 0
  8135  000462  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8136  000466  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8137  00046A  CFDE F06D          	movff	postinc2,strncmp@_l
  8138  00046E  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8139  000472  0ED6               	movlw	low STR_19
  8140  000474  6F6F               	movwf	strncmp@_r& (0+255),b
  8141  000476  0EFF               	movlw	high STR_19
  8142  000478  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8143  00047A  0E00               	movlw	0
  8144  00047C  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8145  00047E  0E03               	movlw	3
  8146  000480  6F71               	movwf	strncmp@n& (0+255),b
  8147  000482  EC9D  F022         	call	_strncmp	;wreg free
  8148  000486  0100               	movlb	0	; () banked
  8149  000488  516D               	movf	?_strncmp& (0+255),w,b
  8150  00048A  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8151  00048C  A4D8               	btfss	status,2,c
  8152  00048E  EF4B  F002         	goto	u8601
  8153  000492  EF4D  F002         	goto	u8600
  8154  000496                     u8601:
  8155  000496  EF8D  F002         	goto	l7404
  8156  00049A                     u8600:
  8157  00049A                     l7398:
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  8161  00049A  0E03               	movlw	3
  8162  00049C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8163  0004A0  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8164  0004A4  26DE               	addwf	postinc2,f,c
  8165  0004A6  0E00               	movlw	0
  8166  0004A8  22DD               	addwfc	postdec2,f,c
  8167                           
  8168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8169  0004AA  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8170  0004AE  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8171  0004B2  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8172  0004B6  0E02               	movlw	2
  8173  0004B8  26DE               	addwf	postinc2,f,c
  8174  0004BA  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8175  0004BE  0E00               	movlw	0
  8176  0004C0  22DD               	addwfc	postdec2,f,c
  8177  0004C2  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8178  0004C6  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8179  0004CA  50DF               	movf	indf2,w,c
  8180  0004CC  6FC3               	movwf	vfpfcnvrt@ll& (0+255),b
  8181  0004CE  0E00               	movlw	0
  8182  0004D0  BFC3               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  8183  0004D2  0EFF               	movlw	-1
  8184  0004D4  6FC4               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  8185  0004D6  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8186  0004D8  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8187  0004DA  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8188  0004DC  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8189  0004DE  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8190  0004E0  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8191  0004E2                     l7400:
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  8195  0004E2  C0B1  F08A         	movff	vfpfcnvrt@fp,dtoa@fp
  8196  0004E6  C0B2  F08B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8197  0004EA  C0C3  F08C         	movff	vfpfcnvrt@ll,dtoa@d
  8198  0004EE  C0C4  F08D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8199  0004F2  C0C5  F08E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8200  0004F6  C0C6  F08F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8201  0004FA  C0C7  F090         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8202  0004FE  C0C8  F091         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8203  000502  C0C9  F092         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8204  000506  C0CA  F093         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8205  00050A  ECE4  F011         	call	_dtoa	;wreg free
  8206  00050E  C08A  F0B1         	movff	?_dtoa,?_vfpfcnvrt
  8207  000512  C08B  F0B2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8208  000516  EF85  F009         	goto	l868
  8209  00051A                     l7404:
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  8213  00051A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8214  00051E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8215  000522  CFDE F06D          	movff	postinc2,strncmp@_l
  8216  000526  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8217  00052A  0ED3               	movlw	low (STR_15+1)
  8218  00052C  6F6F               	movwf	strncmp@_r& (0+255),b
  8219  00052E  0EFF               	movlw	high (STR_15+1)
  8220  000530  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8221  000532  0E00               	movlw	0
  8222  000534  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8223  000536  0E02               	movlw	2
  8224  000538  6F71               	movwf	strncmp@n& (0+255),b
  8225  00053A  EC9D  F022         	call	_strncmp	;wreg free
  8226  00053E  0100               	movlb	0	; () banked
  8227  000540  516D               	movf	?_strncmp& (0+255),w,b
  8228  000542  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8229  000544  B4D8               	btfsc	status,2,c
  8230  000546  EFA7  F002         	goto	u8611
  8231  00054A  EFA9  F002         	goto	u8610
  8232  00054E                     u8611:
  8233  00054E  EFC5  F002         	goto	l7408
  8234  000552                     u8610:
  8235  000552                     
  8236                           ; BSR set to: 0
  8237  000552  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8238  000556  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8239  00055A  CFDE F06D          	movff	postinc2,strncmp@_l
  8240  00055E  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8241  000562  0ED7               	movlw	low (STR_19+1)
  8242  000564  6F6F               	movwf	strncmp@_r& (0+255),b
  8243  000566  0EFF               	movlw	high (STR_19+1)
  8244  000568  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8245  00056A  0E00               	movlw	0
  8246  00056C  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8247  00056E  0E02               	movlw	2
  8248  000570  6F71               	movwf	strncmp@n& (0+255),b
  8249  000572  EC9D  F022         	call	_strncmp	;wreg free
  8250  000576  0100               	movlb	0	; () banked
  8251  000578  516D               	movf	?_strncmp& (0+255),w,b
  8252  00057A  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8253  00057C  A4D8               	btfss	status,2,c
  8254  00057E  EFC3  F002         	goto	u8621
  8255  000582  EFC5  F002         	goto	u8620
  8256  000586                     u8621:
  8257  000586  EFEC  F002         	goto	l7414
  8258  00058A                     u8620:
  8259  00058A                     l7408:
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  8263  00058A  0E02               	movlw	2
  8264  00058C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8265  000590  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8266  000594  26DE               	addwf	postinc2,f,c
  8267  000596  0E00               	movlw	0
  8268  000598  22DD               	addwfc	postdec2,f,c
  8269                           
  8270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8271  00059A  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8272  00059E  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8273  0005A2  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8274  0005A6  0E02               	movlw	2
  8275  0005A8  26DE               	addwf	postinc2,f,c
  8276  0005AA  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8277  0005AE  0E00               	movlw	0
  8278  0005B0  22DD               	addwfc	postdec2,f,c
  8279  0005B2  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8280  0005B6  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8281  0005BA  CFDE F0C3          	movff	postinc2,vfpfcnvrt@ll
  8282  0005BE  CFDD F0C4          	movff	postdec2,vfpfcnvrt@ll+1
  8283  0005C2  0E00               	movlw	0
  8284  0005C4  BFC4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8285  0005C6  0EFF               	movlw	-1
  8286  0005C8  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8287  0005CA  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8288  0005CC  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8289  0005CE  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8290  0005D0  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8291  0005D2  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8292  0005D4  EF71  F002         	goto	l7400
  8293  0005D8                     l7414:
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8297  0005D8  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8298  0005DC  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8299  0005E0  CFDE FFF6          	movff	postinc2,tblptrl
  8300  0005E4  CFDD FFF7          	movff	postdec2,tblptrh
  8301  0005E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8302  0005E8  6AF8               	clrf	tblptru,c
  8303  0005EA                     	endif
  8304  0005EA                     	if	0	;tblptru may be non-zero
  8305  0005EA                     	endif
  8306  0005EA  0008               	tblrd		*
  8307  0005EC  50F5               	movf	tablat,w,c
  8308  0005EE  0A64               	xorlw	100
  8309  0005F0  B4D8               	btfsc	status,2,c
  8310  0005F2  EFFD  F002         	goto	u8631
  8311  0005F6  EFFF  F002         	goto	u8630
  8312  0005FA                     u8631:
  8313  0005FA  EF12  F003         	goto	l7418
  8314  0005FE                     u8630:
  8315  0005FE                     
  8316                           ; BSR set to: 0
  8317  0005FE  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8318  000602  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8319  000606  CFDE FFF6          	movff	postinc2,tblptrl
  8320  00060A  CFDD FFF7          	movff	postdec2,tblptrh
  8321  00060E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8322  00060E  6AF8               	clrf	tblptru,c
  8323  000610                     	endif
  8324  000610                     	if	0	;tblptru may be non-zero
  8325  000610                     	endif
  8326  000610  0008               	tblrd		*
  8327  000612  50F5               	movf	tablat,w,c
  8328  000614  0A69               	xorlw	105
  8329  000616  A4D8               	btfss	status,2,c
  8330  000618  EF10  F003         	goto	u8641
  8331  00061C  EF12  F003         	goto	u8640
  8332  000620                     u8641:
  8333  000620  EF38  F003         	goto	l7424
  8334  000624                     u8640:
  8335  000624                     l7418:
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8339  000624  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8340  000628  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8341  00062C  2ADE               	incf	postinc2,f,c
  8342  00062E  0E00               	movlw	0
  8343  000630  22DD               	addwfc	postdec2,f,c
  8344                           
  8345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8346  000632  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8347  000636  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8348  00063A  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8349  00063E  0E02               	movlw	2
  8350  000640  26DE               	addwf	postinc2,f,c
  8351  000642  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8352  000646  0E00               	movlw	0
  8353  000648  22DD               	addwfc	postdec2,f,c
  8354  00064A  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8355  00064E  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8356  000652  CFDE F0C3          	movff	postinc2,vfpfcnvrt@ll
  8357  000656  CFDD F0C4          	movff	postdec2,vfpfcnvrt@ll+1
  8358  00065A  0E00               	movlw	0
  8359  00065C  BFC4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8360  00065E  0EFF               	movlw	-1
  8361  000660  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8362  000662  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8363  000664  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8364  000666  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8365  000668  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8366  00066A  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8367  00066C  EF71  F002         	goto	l7400
  8368  000670                     l7424:
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  8372  000670  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8373  000674  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8374  000678  CFDE F06D          	movff	postinc2,strncmp@_l
  8375  00067C  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8376  000680  0EED               	movlw	low STR_33
  8377  000682  6F6F               	movwf	strncmp@_r& (0+255),b
  8378  000684  0EFF               	movlw	high STR_33
  8379  000686  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8380  000688  0E00               	movlw	0
  8381  00068A  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8382  00068C  0E02               	movlw	2
  8383  00068E  6F71               	movwf	strncmp@n& (0+255),b
  8384  000690  EC9D  F022         	call	_strncmp	;wreg free
  8385  000694  0100               	movlb	0	; () banked
  8386  000696  516D               	movf	?_strncmp& (0+255),w,b
  8387  000698  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8388  00069A  B4D8               	btfsc	status,2,c
  8389  00069C  EF52  F003         	goto	u8651
  8390  0006A0  EF54  F003         	goto	u8650
  8391  0006A4                     u8651:
  8392  0006A4  EF70  F003         	goto	l7428
  8393  0006A8                     u8650:
  8394  0006A8                     
  8395                           ; BSR set to: 0
  8396  0006A8  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8397  0006AC  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8398  0006B0  CFDE F06D          	movff	postinc2,strncmp@_l
  8399  0006B4  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8400  0006B8  0EF0               	movlw	low STR_37
  8401  0006BA  6F6F               	movwf	strncmp@_r& (0+255),b
  8402  0006BC  0EFF               	movlw	high STR_37
  8403  0006BE  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8404  0006C0  0E00               	movlw	0
  8405  0006C2  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8406  0006C4  0E02               	movlw	2
  8407  0006C6  6F71               	movwf	strncmp@n& (0+255),b
  8408  0006C8  EC9D  F022         	call	_strncmp	;wreg free
  8409  0006CC  0100               	movlb	0	; () banked
  8410  0006CE  516D               	movf	?_strncmp& (0+255),w,b
  8411  0006D0  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8412  0006D2  A4D8               	btfss	status,2,c
  8413  0006D4  EF6E  F003         	goto	u8661
  8414  0006D8  EF70  F003         	goto	u8660
  8415  0006DC                     u8661:
  8416  0006DC  EF98  F003         	goto	l7434
  8417  0006E0                     u8660:
  8418  0006E0                     l7428:
  8419                           
  8420                           ; BSR set to: 0
  8421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  8422  0006E0  0E02               	movlw	2
  8423  0006E2  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8424  0006E6  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8425  0006EA  26DE               	addwf	postinc2,f,c
  8426  0006EC  0E00               	movlw	0
  8427  0006EE  22DD               	addwfc	postdec2,f,c
  8428                           
  8429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  8430  0006F0  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8431  0006F4  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8432  0006F8  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8433  0006FC  0E02               	movlw	2
  8434  0006FE  26DE               	addwf	postinc2,f,c
  8435  000700  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8436  000704  0E00               	movlw	0
  8437  000706  22DD               	addwfc	postdec2,f,c
  8438  000708  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8439  00070C  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8440  000710  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  8441  000714  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  8442  000718  C0B9  F0C3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  8443  00071C  C0BA  F0C4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  8444  000720  6BC5               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  8445  000722  6BC6               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  8446  000724  6BC7               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  8447  000726  6BC8               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  8448  000728  6BC9               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  8449  00072A  6BCA               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  8450  00072C  EF71  F002         	goto	l7400
  8451  000730                     l7434:
  8452                           
  8453                           ; BSR set to: 0
  8454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  8455  000730  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8456  000734  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8457  000738  CFDE F06D          	movff	postinc2,strncmp@_l
  8458  00073C  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8459  000740  0EDE               	movlw	low STR_42
  8460  000742  6F6F               	movwf	strncmp@_r& (0+255),b
  8461  000744  0EFF               	movlw	high STR_42
  8462  000746  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8463  000748  0E00               	movlw	0
  8464  00074A  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8465  00074C  0E03               	movlw	3
  8466  00074E  6F71               	movwf	strncmp@n& (0+255),b
  8467  000750  EC9D  F022         	call	_strncmp	;wreg free
  8468  000754  0100               	movlb	0	; () banked
  8469  000756  516D               	movf	?_strncmp& (0+255),w,b
  8470  000758  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8471  00075A  A4D8               	btfss	status,2,c
  8472  00075C  EFB2  F003         	goto	u8671
  8473  000760  EFB4  F003         	goto	u8670
  8474  000764                     u8671:
  8475  000764  EFF3  F003         	goto	l7442
  8476  000768                     u8670:
  8477  000768                     
  8478                           ; BSR set to: 0
  8479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  8480  000768  0E03               	movlw	3
  8481  00076A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8482  00076E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8483  000772  26DE               	addwf	postinc2,f,c
  8484  000774  0E00               	movlw	0
  8485  000776  22DD               	addwfc	postdec2,f,c
  8486                           
  8487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8488  000778  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8489  00077C  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8490  000780  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8491  000784  0E02               	movlw	2
  8492  000786  26DE               	addwf	postinc2,f,c
  8493  000788  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8494  00078C  0E00               	movlw	0
  8495  00078E  22DD               	addwfc	postdec2,f,c
  8496  000790  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8497  000794  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8498  000798  50DF               	movf	indf2,w,c
  8499  00079A  6FB9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8500  00079C  51B9               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  8501  00079E  6FCE               	movwf	vfpfcnvrt@llu& (0+255),b
  8502  0007A0  6BCF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  8503  0007A2  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8504  0007A4  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8505  0007A6  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8506  0007A8  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8507  0007AA  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8508  0007AC  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8509  0007AE                     l7438:
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  8513  0007AE  C0B1  F08A         	movff	vfpfcnvrt@fp,otoa@fp
  8514  0007B2  C0B2  F08B         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  8515  0007B6  C0CE  F08C         	movff	vfpfcnvrt@llu,otoa@d
  8516  0007BA  C0CF  F08D         	movff	vfpfcnvrt@llu+1,otoa@d+1
  8517  0007BE  C0D0  F08E         	movff	vfpfcnvrt@llu+2,otoa@d+2
  8518  0007C2  C0D1  F08F         	movff	vfpfcnvrt@llu+3,otoa@d+3
  8519  0007C6  C0D2  F090         	movff	vfpfcnvrt@llu+4,otoa@d+4
  8520  0007CA  C0D3  F091         	movff	vfpfcnvrt@llu+5,otoa@d+5
  8521  0007CE  C0D4  F092         	movff	vfpfcnvrt@llu+6,otoa@d+6
  8522  0007D2  C0D5  F093         	movff	vfpfcnvrt@llu+7,otoa@d+7
  8523  0007D6  EC19  F019         	call	_otoa	;wreg free
  8524  0007DA  C08A  F0B1         	movff	?_otoa,?_vfpfcnvrt
  8525  0007DE  C08B  F0B2         	movff	?_otoa+1,?_vfpfcnvrt+1
  8526  0007E2  EF85  F009         	goto	l868
  8527  0007E6                     l7442:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  8531  0007E6  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8532  0007EA  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8533  0007EE  CFDE F06D          	movff	postinc2,strncmp@_l
  8534  0007F2  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8535  0007F6  0EDF               	movlw	low (STR_42+1)
  8536  0007F8  6F6F               	movwf	strncmp@_r& (0+255),b
  8537  0007FA  0EFF               	movlw	high (STR_42+1)
  8538  0007FC  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8539  0007FE  0E00               	movlw	0
  8540  000800  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8541  000802  0E02               	movlw	2
  8542  000804  6F71               	movwf	strncmp@n& (0+255),b
  8543  000806  EC9D  F022         	call	_strncmp	;wreg free
  8544  00080A  0100               	movlb	0	; () banked
  8545  00080C  516D               	movf	?_strncmp& (0+255),w,b
  8546  00080E  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8547  000810  A4D8               	btfss	status,2,c
  8548  000812  EF0D  F004         	goto	u8681
  8549  000816  EF0F  F004         	goto	u8680
  8550  00081A                     u8681:
  8551  00081A  EF37  F004         	goto	l7450
  8552  00081E                     u8680:
  8553  00081E                     
  8554                           ; BSR set to: 0
  8555                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  8556  00081E  0E02               	movlw	2
  8557  000820  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8558  000824  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8559  000828  26DE               	addwf	postinc2,f,c
  8560  00082A  0E00               	movlw	0
  8561  00082C  22DD               	addwfc	postdec2,f,c
  8562                           
  8563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8564  00082E  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8565  000832  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8566  000836  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8567  00083A  0E02               	movlw	2
  8568  00083C  26DE               	addwf	postinc2,f,c
  8569  00083E  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8570  000842  0E00               	movlw	0
  8571  000844  22DD               	addwfc	postdec2,f,c
  8572  000846  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8573  00084A  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8574  00084E  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  8575  000852  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  8576  000856  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8577  00085A  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8578  00085E  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8579  000860  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8580  000862  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8581  000864  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8582  000866  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8583  000868  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8584  00086A  EFD7  F003         	goto	l7438
  8585  00086E                     l7450:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  8589  00086E  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8590  000872  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8591  000876  CFDE FFF6          	movff	postinc2,tblptrl
  8592  00087A  CFDD FFF7          	movff	postdec2,tblptrh
  8593  00087E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8594  00087E  6AF8               	clrf	tblptru,c
  8595  000880                     	endif
  8596  000880                     	if	0	;tblptru may be non-zero
  8597  000880                     	endif
  8598  000880  0008               	tblrd		*
  8599  000882  50F5               	movf	tablat,w,c
  8600  000884  0A6F               	xorlw	111
  8601  000886  A4D8               	btfss	status,2,c
  8602  000888  EF48  F004         	goto	u8691
  8603  00088C  EF4A  F004         	goto	u8690
  8604  000890                     u8691:
  8605  000890  EF71  F004         	goto	l7458
  8606  000894                     u8690:
  8607  000894                     
  8608                           ; BSR set to: 0
  8609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  8610  000894  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8611  000898  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8612  00089C  2ADE               	incf	postinc2,f,c
  8613  00089E  0E00               	movlw	0
  8614  0008A0  22DD               	addwfc	postdec2,f,c
  8615                           
  8616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  8617  0008A2  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8618  0008A6  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8619  0008AA  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8620  0008AE  0E02               	movlw	2
  8621  0008B0  26DE               	addwf	postinc2,f,c
  8622  0008B2  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8623  0008B6  0E00               	movlw	0
  8624  0008B8  22DD               	addwfc	postdec2,f,c
  8625  0008BA  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8626  0008BE  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8627  0008C2  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  8628  0008C6  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  8629  0008CA  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8630  0008CE  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8631  0008D2  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8632  0008D4  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8633  0008D6  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8634  0008D8  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8635  0008DA  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8636  0008DC  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8637  0008DE  EFD7  F003         	goto	l7438
  8638  0008E2                     l7458:
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  8642  0008E2  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8643  0008E6  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8644  0008EA  CFDE F06D          	movff	postinc2,strncmp@_l
  8645  0008EE  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8646  0008F2  0EF6               	movlw	low STR_52
  8647  0008F4  6F6F               	movwf	strncmp@_r& (0+255),b
  8648  0008F6  0EFF               	movlw	high STR_52
  8649  0008F8  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8650  0008FA  0E00               	movlw	0
  8651  0008FC  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8652  0008FE  0E02               	movlw	2
  8653  000900  6F71               	movwf	strncmp@n& (0+255),b
  8654  000902  EC9D  F022         	call	_strncmp	;wreg free
  8655  000906  0100               	movlb	0	; () banked
  8656  000908  516D               	movf	?_strncmp& (0+255),w,b
  8657  00090A  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8658  00090C  A4D8               	btfss	status,2,c
  8659  00090E  EF8B  F004         	goto	u8701
  8660  000912  EF8D  F004         	goto	u8700
  8661  000916                     u8701:
  8662  000916  EFB5  F004         	goto	l7466
  8663  00091A                     u8700:
  8664  00091A                     
  8665                           ; BSR set to: 0
  8666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  8667  00091A  0E02               	movlw	2
  8668  00091C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8669  000920  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8670  000924  26DE               	addwf	postinc2,f,c
  8671  000926  0E00               	movlw	0
  8672  000928  22DD               	addwfc	postdec2,f,c
  8673                           
  8674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  8675  00092A  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8676  00092E  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8677  000932  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8678  000936  0E02               	movlw	2
  8679  000938  26DE               	addwf	postinc2,f,c
  8680  00093A  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8681  00093E  0E00               	movlw	0
  8682  000940  22DD               	addwfc	postdec2,f,c
  8683  000942  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8684  000946  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8685  00094A  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  8686  00094E  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  8687  000952  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8688  000956  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8689  00095A  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8690  00095C  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8691  00095E  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8692  000960  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8693  000962  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8694  000964  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8695  000966  EFD7  F003         	goto	l7438
  8696  00096A                     l7466:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  8700  00096A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8701  00096E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8702  000972  CFDE F06D          	movff	postinc2,strncmp@_l
  8703  000976  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8704  00097A  0EDA               	movlw	low STR_57
  8705  00097C  6F6F               	movwf	strncmp@_r& (0+255),b
  8706  00097E  0EFF               	movlw	high STR_57
  8707  000980  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8708  000982  0E00               	movlw	0
  8709  000984  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8710  000986  0E03               	movlw	3
  8711  000988  6F71               	movwf	strncmp@n& (0+255),b
  8712  00098A  EC9D  F022         	call	_strncmp	;wreg free
  8713  00098E  0100               	movlb	0	; () banked
  8714  000990  516D               	movf	?_strncmp& (0+255),w,b
  8715  000992  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8716  000994  A4D8               	btfss	status,2,c
  8717  000996  EFCF  F004         	goto	u8711
  8718  00099A  EFD1  F004         	goto	u8710
  8719  00099E                     u8711:
  8720  00099E  EFF9  F004         	goto	l7476
  8721  0009A2                     u8710:
  8722  0009A2                     
  8723                           ; BSR set to: 0
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  8725  0009A2  0E03               	movlw	3
  8726  0009A4  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8727  0009A8  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8728  0009AC  26DE               	addwf	postinc2,f,c
  8729  0009AE  0E00               	movlw	0
  8730  0009B0  22DD               	addwfc	postdec2,f,c
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8733  0009B2  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8734  0009B6  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8735  0009BA  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8736  0009BE  0E02               	movlw	2
  8737  0009C0  26DE               	addwf	postinc2,f,c
  8738  0009C2  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8739  0009C6  0E00               	movlw	0
  8740  0009C8  22DD               	addwfc	postdec2,f,c
  8741  0009CA  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8742  0009CE  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8743  0009D2  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  8744  0009D6  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  8745  0009DA                     
  8746                           ; BSR set to: 0
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  8748  0009DA  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8749  0009DE  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8750  0009E2  C0E6  FFDF         	movff	_nout,indf2
  8751  0009E6                     l7472:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  8755  0009E6  0E00               	movlw	0
  8756  0009E8  6FB2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8757  0009EA  0E00               	movlw	0
  8758  0009EC  6FB1               	movwf	?_vfpfcnvrt& (0+255),b
  8759  0009EE  EF85  F009         	goto	l868
  8760  0009F2                     l7476:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  8764  0009F2  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8765  0009F6  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8766  0009FA  CFDE F06D          	movff	postinc2,strncmp@_l
  8767  0009FE  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8768  000A02  0EDB               	movlw	low (STR_57+1)
  8769  000A04  6F6F               	movwf	strncmp@_r& (0+255),b
  8770  000A06  0EFF               	movlw	high (STR_57+1)
  8771  000A08  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8772  000A0A  0E00               	movlw	0
  8773  000A0C  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8774  000A0E  0E02               	movlw	2
  8775  000A10  6F71               	movwf	strncmp@n& (0+255),b
  8776  000A12  EC9D  F022         	call	_strncmp	;wreg free
  8777  000A16  0100               	movlb	0	; () banked
  8778  000A18  516D               	movf	?_strncmp& (0+255),w,b
  8779  000A1A  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8780  000A1C  A4D8               	btfss	status,2,c
  8781  000A1E  EF13  F005         	goto	u8721
  8782  000A22  EF15  F005         	goto	u8720
  8783  000A26                     u8721:
  8784  000A26  EF3B  F005         	goto	l7486
  8785  000A2A                     u8720:
  8786  000A2A                     
  8787                           ; BSR set to: 0
  8788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  8789  000A2A  0E02               	movlw	2
  8790  000A2C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8791  000A30  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8792  000A34  26DE               	addwf	postinc2,f,c
  8793  000A36  0E00               	movlw	0
  8794  000A38  22DD               	addwfc	postdec2,f,c
  8795                           
  8796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  8797  000A3A  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8798  000A3E  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8799  000A42  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8800  000A46  0E02               	movlw	2
  8801  000A48  26DE               	addwf	postinc2,f,c
  8802  000A4A  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8803  000A4E  0E00               	movlw	0
  8804  000A50  22DD               	addwfc	postdec2,f,c
  8805  000A52  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8806  000A56  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8807  000A5A  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  8808  000A5E  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  8809  000A62                     
  8810                           ; BSR set to: 0
  8811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  8812  000A62  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8813  000A66  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8814  000A6A  C0E6  FFDE         	movff	_nout,postinc2
  8815  000A6E  C0E7  FFDD         	movff	_nout+1,postdec2
  8816  000A72  EFF3  F004         	goto	l7472
  8817  000A76                     l7486:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  8821  000A76  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8822  000A7A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8823  000A7E  CFDE FFF6          	movff	postinc2,tblptrl
  8824  000A82  CFDD FFF7          	movff	postdec2,tblptrh
  8825  000A86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8826  000A86  6AF8               	clrf	tblptru,c
  8827  000A88                     	endif
  8828  000A88                     	if	0	;tblptru may be non-zero
  8829  000A88                     	endif
  8830  000A88  0008               	tblrd		*
  8831  000A8A  50F5               	movf	tablat,w,c
  8832  000A8C  0A6E               	xorlw	110
  8833  000A8E  A4D8               	btfss	status,2,c
  8834  000A90  EF4C  F005         	goto	u8731
  8835  000A94  EF4E  F005         	goto	u8730
  8836  000A98                     u8731:
  8837  000A98  EF73  F005         	goto	l7496
  8838  000A9C                     u8730:
  8839  000A9C                     
  8840                           ; BSR set to: 0
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  8842  000A9C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8843  000AA0  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8844  000AA4  2ADE               	incf	postinc2,f,c
  8845  000AA6  0E00               	movlw	0
  8846  000AA8  22DD               	addwfc	postdec2,f,c
  8847                           
  8848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  8849  000AAA  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8850  000AAE  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8851  000AB2  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8852  000AB6  0E02               	movlw	2
  8853  000AB8  26DE               	addwf	postinc2,f,c
  8854  000ABA  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8855  000ABE  0E00               	movlw	0
  8856  000AC0  22DD               	addwfc	postdec2,f,c
  8857  000AC2  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8858  000AC6  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8859  000ACA  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  8860  000ACE  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  8861  000AD2                     
  8862                           ; BSR set to: 0
  8863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  8864  000AD2  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8865  000AD6  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8866  000ADA  C0E6  FFDE         	movff	_nout,postinc2
  8867  000ADE  C0E7  FFDD         	movff	_nout+1,postdec2
  8868  000AE2  EFF3  F004         	goto	l7472
  8869  000AE6                     l7496:
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  8873  000AE6  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8874  000AEA  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8875  000AEE  CFDE F06D          	movff	postinc2,strncmp@_l
  8876  000AF2  CFDD F06E          	movff	postdec2,strncmp@_l+1
  8877  000AF6  0EF3               	movlw	low STR_67
  8878  000AF8  6F6F               	movwf	strncmp@_r& (0+255),b
  8879  000AFA  0EFF               	movlw	high STR_67
  8880  000AFC  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  8881  000AFE  0E00               	movlw	0
  8882  000B00  6F72               	movwf	(strncmp@n+1)& (0+255),b
  8883  000B02  0E02               	movlw	2
  8884  000B04  6F71               	movwf	strncmp@n& (0+255),b
  8885  000B06  EC9D  F022         	call	_strncmp	;wreg free
  8886  000B0A  0100               	movlb	0	; () banked
  8887  000B0C  516D               	movf	?_strncmp& (0+255),w,b
  8888  000B0E  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8889  000B10  A4D8               	btfss	status,2,c
  8890  000B12  EF8D  F005         	goto	u8741
  8891  000B16  EF8F  F005         	goto	u8740
  8892  000B1A                     u8741:
  8893  000B1A  EFB5  F005         	goto	l7506
  8894  000B1E                     u8740:
  8895  000B1E                     
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  8898  000B1E  0E02               	movlw	2
  8899  000B20  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8900  000B24  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8901  000B28  26DE               	addwf	postinc2,f,c
  8902  000B2A  0E00               	movlw	0
  8903  000B2C  22DD               	addwfc	postdec2,f,c
  8904                           
  8905                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  8906  000B2E  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8907  000B32  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8908  000B36  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8909  000B3A  0E02               	movlw	2
  8910  000B3C  26DE               	addwf	postinc2,f,c
  8911  000B3E  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8912  000B42  0E00               	movlw	0
  8913  000B44  22DD               	addwfc	postdec2,f,c
  8914  000B46  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8915  000B4A  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8916  000B4E  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  8917  000B52  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  8918  000B56                     
  8919                           ; BSR set to: 0
  8920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  8921  000B56  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8922  000B5A  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8923  000B5E  C0E6  FFDE         	movff	_nout,postinc2
  8924  000B62  C0E7  FFDD         	movff	_nout+1,postdec2
  8925  000B66  EFF3  F004         	goto	l7472
  8926  000B6A                     l7506:
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  8930  000B6A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8931  000B6E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8932  000B72  CFDE FFF6          	movff	postinc2,tblptrl
  8933  000B76  CFDD FFF7          	movff	postdec2,tblptrh
  8934  000B7A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8935  000B7A  6AF8               	clrf	tblptru,c
  8936  000B7C                     	endif
  8937  000B7C                     	if	0	;tblptru may be non-zero
  8938  000B7C                     	endif
  8939  000B7C  0008               	tblrd		*
  8940  000B7E  50F5               	movf	tablat,w,c
  8941  000B80  0A70               	xorlw	112
  8942  000B82  A4D8               	btfss	status,2,c
  8943  000B84  EFC6  F005         	goto	u8751
  8944  000B88  EFC8  F005         	goto	u8750
  8945  000B8C                     u8751:
  8946  000B8C  EF0B  F006         	goto	l7514
  8947  000B90                     u8750:
  8948  000B90                     
  8949                           ; BSR set to: 0
  8950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  8951  000B90  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8952  000B94  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8953  000B98  2ADE               	incf	postinc2,f,c
  8954  000B9A  0E00               	movlw	0
  8955  000B9C  22DD               	addwfc	postdec2,f,c
  8956                           
  8957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  8958  000B9E  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8959  000BA2  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8960  000BA6  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  8961  000BAA  0E02               	movlw	2
  8962  000BAC  26DE               	addwf	postinc2,f,c
  8963  000BAE  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  8964  000BB2  0E00               	movlw	0
  8965  000BB4  22DD               	addwfc	postdec2,f,c
  8966  000BB6  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8967  000BBA  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8968  000BBE  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  8969  000BC2  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  8970  000BC6  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8971  000BCA  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8972  000BCE  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8973  000BD0  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8974  000BD2  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8975  000BD4  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8976  000BD6  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8977  000BD8  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8978  000BDA                     
  8979                           ; BSR set to: 0
  8980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  8981  000BDA  C0B1  F08A         	movff	vfpfcnvrt@fp,xtoa@fp
  8982  000BDE  C0B2  F08B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8983  000BE2  C0CE  F08C         	movff	vfpfcnvrt@llu,xtoa@d
  8984  000BE6  C0CF  F08D         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8985  000BEA  C0D0  F08E         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8986  000BEE  C0D1  F08F         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8987  000BF2  C0D2  F090         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8988  000BF6  C0D3  F091         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8989  000BFA  C0D4  F092         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8990  000BFE  C0D5  F093         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8991  000C02  0E78               	movlw	120
  8992  000C04  6F94               	movwf	xtoa@x& (0+255),b
  8993  000C06  EC56  F013         	call	_xtoa	;wreg free
  8994  000C0A  C08A  F0B1         	movff	?_xtoa,?_vfpfcnvrt
  8995  000C0E  C08B  F0B2         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8996  000C12  EF85  F009         	goto	l868
  8997  000C16                     l7514:
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  9001  000C16  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9002  000C1A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9003  000C1E  CFDE FFF6          	movff	postinc2,tblptrl
  9004  000C22  CFDD FFF7          	movff	postdec2,tblptrh
  9005  000C26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9006  000C26  6AF8               	clrf	tblptru,c
  9007  000C28                     	endif
  9008  000C28                     	if	0	;tblptru may be non-zero
  9009  000C28                     	endif
  9010  000C28  0008               	tblrd		*
  9011  000C2A  50F5               	movf	tablat,w,c
  9012  000C2C  0A73               	xorlw	115
  9013  000C2E  A4D8               	btfss	status,2,c
  9014  000C30  EF1C  F006         	goto	u8761
  9015  000C34  EF1E  F006         	goto	u8760
  9016  000C38                     u8761:
  9017  000C38  EF49  F006         	goto	l7522
  9018  000C3C                     u8760:
  9019  000C3C                     
  9020                           ; BSR set to: 0
  9021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  9022  000C3C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9023  000C40  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9024  000C44  2ADE               	incf	postinc2,f,c
  9025  000C46  0E00               	movlw	0
  9026  000C48  22DD               	addwfc	postdec2,f,c
  9027                           
  9028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  9029  000C4A  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9030  000C4E  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9031  000C52  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9032  000C56  0E02               	movlw	2
  9033  000C58  26DE               	addwf	postinc2,f,c
  9034  000C5A  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9035  000C5E  0E00               	movlw	0
  9036  000C60  22DD               	addwfc	postdec2,f,c
  9037  000C62  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9038  000C66  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9039  000C6A  CFDE F0BB          	movff	postinc2,vfpfcnvrt@cp
  9040  000C6E  CFDD F0BC          	movff	postdec2,vfpfcnvrt@cp+1
  9041  000C72                     
  9042                           ; BSR set to: 0
  9043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  9044  000C72  C0B1  F078         	movff	vfpfcnvrt@fp,stoa@fp
  9045  000C76  C0B2  F079         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9046  000C7A  C0BB  F07A         	movff	vfpfcnvrt@cp,stoa@s
  9047  000C7E  C0BC  F07B         	movff	vfpfcnvrt@cp+1,stoa@s+1
  9048  000C82  ECC6  F01B         	call	_stoa	;wreg free
  9049  000C86  C078  F0B1         	movff	?_stoa,?_vfpfcnvrt
  9050  000C8A  C079  F0B2         	movff	?_stoa+1,?_vfpfcnvrt+1
  9051  000C8E  EF85  F009         	goto	l868
  9052  000C92                     l7522:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  9056  000C92  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9057  000C96  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9058  000C9A  CFDE F06D          	movff	postinc2,strncmp@_l
  9059  000C9E  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9060  000CA2  0EE2               	movlw	low STR_72
  9061  000CA4  6F6F               	movwf	strncmp@_r& (0+255),b
  9062  000CA6  0EFF               	movlw	high STR_72
  9063  000CA8  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9064  000CAA  0E00               	movlw	0
  9065  000CAC  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9066  000CAE  0E03               	movlw	3
  9067  000CB0  6F71               	movwf	strncmp@n& (0+255),b
  9068  000CB2  EC9D  F022         	call	_strncmp	;wreg free
  9069  000CB6  0100               	movlb	0	; () banked
  9070  000CB8  516D               	movf	?_strncmp& (0+255),w,b
  9071  000CBA  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9072  000CBC  A4D8               	btfss	status,2,c
  9073  000CBE  EF63  F006         	goto	u8771
  9074  000CC2  EF65  F006         	goto	u8770
  9075  000CC6                     u8771:
  9076  000CC6  EFA4  F006         	goto	l7530
  9077  000CCA                     u8770:
  9078  000CCA                     
  9079                           ; BSR set to: 0
  9080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  9081  000CCA  0E03               	movlw	3
  9082  000CCC  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9083  000CD0  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9084  000CD4  26DE               	addwf	postinc2,f,c
  9085  000CD6  0E00               	movlw	0
  9086  000CD8  22DD               	addwfc	postdec2,f,c
  9087                           
  9088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9089  000CDA  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9090  000CDE  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9091  000CE2  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9092  000CE6  0E02               	movlw	2
  9093  000CE8  26DE               	addwf	postinc2,f,c
  9094  000CEA  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9095  000CEE  0E00               	movlw	0
  9096  000CF0  22DD               	addwfc	postdec2,f,c
  9097  000CF2  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9098  000CF6  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9099  000CFA  50DF               	movf	indf2,w,c
  9100  000CFC  6FB9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9101  000CFE  51B9               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  9102  000D00  6FCE               	movwf	vfpfcnvrt@llu& (0+255),b
  9103  000D02  6BCF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  9104  000D04  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9105  000D06  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9106  000D08  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9107  000D0A  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9108  000D0C  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9109  000D0E  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9110  000D10                     l7526:
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  9114  000D10  C0B1  F08A         	movff	vfpfcnvrt@fp,utoa@fp
  9115  000D14  C0B2  F08B         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  9116  000D18  C0CE  F08C         	movff	vfpfcnvrt@llu,utoa@d
  9117  000D1C  C0CF  F08D         	movff	vfpfcnvrt@llu+1,utoa@d+1
  9118  000D20  C0D0  F08E         	movff	vfpfcnvrt@llu+2,utoa@d+2
  9119  000D24  C0D1  F08F         	movff	vfpfcnvrt@llu+3,utoa@d+3
  9120  000D28  C0D2  F090         	movff	vfpfcnvrt@llu+4,utoa@d+4
  9121  000D2C  C0D3  F091         	movff	vfpfcnvrt@llu+5,utoa@d+5
  9122  000D30  C0D4  F092         	movff	vfpfcnvrt@llu+6,utoa@d+6
  9123  000D34  C0D5  F093         	movff	vfpfcnvrt@llu+7,utoa@d+7
  9124  000D38  EC1C  F017         	call	_utoa	;wreg free
  9125  000D3C  C08A  F0B1         	movff	?_utoa,?_vfpfcnvrt
  9126  000D40  C08B  F0B2         	movff	?_utoa+1,?_vfpfcnvrt+1
  9127  000D44  EF85  F009         	goto	l868
  9128  000D48                     l7530:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  9132  000D48  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9133  000D4C  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9134  000D50  CFDE F06D          	movff	postinc2,strncmp@_l
  9135  000D54  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9136  000D58  0EE3               	movlw	low (STR_72+1)
  9137  000D5A  6F6F               	movwf	strncmp@_r& (0+255),b
  9138  000D5C  0EFF               	movlw	high (STR_72+1)
  9139  000D5E  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9140  000D60  0E00               	movlw	0
  9141  000D62  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9142  000D64  0E02               	movlw	2
  9143  000D66  6F71               	movwf	strncmp@n& (0+255),b
  9144  000D68  EC9D  F022         	call	_strncmp	;wreg free
  9145  000D6C  0100               	movlb	0	; () banked
  9146  000D6E  516D               	movf	?_strncmp& (0+255),w,b
  9147  000D70  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9148  000D72  A4D8               	btfss	status,2,c
  9149  000D74  EFBE  F006         	goto	u8781
  9150  000D78  EFC0  F006         	goto	u8780
  9151  000D7C                     u8781:
  9152  000D7C  EFE8  F006         	goto	l7538
  9153  000D80                     u8780:
  9154  000D80                     
  9155                           ; BSR set to: 0
  9156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  9157  000D80  0E02               	movlw	2
  9158  000D82  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9159  000D86  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9160  000D8A  26DE               	addwf	postinc2,f,c
  9161  000D8C  0E00               	movlw	0
  9162  000D8E  22DD               	addwfc	postdec2,f,c
  9163                           
  9164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  9165  000D90  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9166  000D94  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9167  000D98  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9168  000D9C  0E02               	movlw	2
  9169  000D9E  26DE               	addwf	postinc2,f,c
  9170  000DA0  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9171  000DA4  0E00               	movlw	0
  9172  000DA6  22DD               	addwfc	postdec2,f,c
  9173  000DA8  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9174  000DAC  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9175  000DB0  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  9176  000DB4  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  9177  000DB8  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9178  000DBC  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9179  000DC0  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9180  000DC2  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9181  000DC4  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9182  000DC6  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9183  000DC8  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9184  000DCA  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9185  000DCC  EF88  F006         	goto	l7526
  9186  000DD0                     l7538:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  9190  000DD0  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9191  000DD4  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9192  000DD8  CFDE FFF6          	movff	postinc2,tblptrl
  9193  000DDC  CFDD FFF7          	movff	postdec2,tblptrh
  9194  000DE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9195  000DE0  6AF8               	clrf	tblptru,c
  9196  000DE2                     	endif
  9197  000DE2                     	if	0	;tblptru may be non-zero
  9198  000DE2                     	endif
  9199  000DE2  0008               	tblrd		*
  9200  000DE4  50F5               	movf	tablat,w,c
  9201  000DE6  0A75               	xorlw	117
  9202  000DE8  A4D8               	btfss	status,2,c
  9203  000DEA  EFF9  F006         	goto	u8791
  9204  000DEE  EFFB  F006         	goto	u8790
  9205  000DF2                     u8791:
  9206  000DF2  EF22  F007         	goto	l7546
  9207  000DF6                     u8790:
  9208  000DF6                     
  9209                           ; BSR set to: 0
  9210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  9211  000DF6  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9212  000DFA  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9213  000DFE  2ADE               	incf	postinc2,f,c
  9214  000E00  0E00               	movlw	0
  9215  000E02  22DD               	addwfc	postdec2,f,c
  9216                           
  9217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9218  000E04  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9219  000E08  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9220  000E0C  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9221  000E10  0E02               	movlw	2
  9222  000E12  26DE               	addwf	postinc2,f,c
  9223  000E14  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9224  000E18  0E00               	movlw	0
  9225  000E1A  22DD               	addwfc	postdec2,f,c
  9226  000E1C  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9227  000E20  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9228  000E24  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  9229  000E28  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  9230  000E2C  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9231  000E30  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9232  000E34  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9233  000E36  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9234  000E38  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9235  000E3A  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9236  000E3C  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9237  000E3E  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9238  000E40  EF88  F006         	goto	l7526
  9239  000E44                     l7546:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  9243  000E44  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9244  000E48  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9245  000E4C  CFDE F06D          	movff	postinc2,strncmp@_l
  9246  000E50  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9247  000E54  0EF9               	movlw	low STR_82
  9248  000E56  6F6F               	movwf	strncmp@_r& (0+255),b
  9249  000E58  0EFF               	movlw	high STR_82
  9250  000E5A  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9251  000E5C  0E00               	movlw	0
  9252  000E5E  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9253  000E60  0E02               	movlw	2
  9254  000E62  6F71               	movwf	strncmp@n& (0+255),b
  9255  000E64  EC9D  F022         	call	_strncmp	;wreg free
  9256  000E68  0100               	movlb	0	; () banked
  9257  000E6A  516D               	movf	?_strncmp& (0+255),w,b
  9258  000E6C  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9259  000E6E  A4D8               	btfss	status,2,c
  9260  000E70  EF3C  F007         	goto	u8801
  9261  000E74  EF3E  F007         	goto	u8800
  9262  000E78                     u8801:
  9263  000E78  EF66  F007         	goto	l7554
  9264  000E7C                     u8800:
  9265  000E7C                     
  9266                           ; BSR set to: 0
  9267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  9268  000E7C  0E02               	movlw	2
  9269  000E7E  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9270  000E82  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9271  000E86  26DE               	addwf	postinc2,f,c
  9272  000E88  0E00               	movlw	0
  9273  000E8A  22DD               	addwfc	postdec2,f,c
  9274                           
  9275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  9276  000E8C  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9277  000E90  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9278  000E94  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9279  000E98  0E02               	movlw	2
  9280  000E9A  26DE               	addwf	postinc2,f,c
  9281  000E9C  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9282  000EA0  0E00               	movlw	0
  9283  000EA2  22DD               	addwfc	postdec2,f,c
  9284  000EA4  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9285  000EA8  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9286  000EAC  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  9287  000EB0  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  9288  000EB4  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9289  000EB8  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9290  000EBC  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9291  000EBE  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9292  000EC0  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9293  000EC2  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9294  000EC4  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9295  000EC6  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9296  000EC8  EF88  F006         	goto	l7526
  9297  000ECC                     l7554:
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  9301  000ECC  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9302  000ED0  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9303  000ED4  CFDE F06D          	movff	postinc2,strncmp@_l
  9304  000ED8  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9305  000EDC  0EE6               	movlw	low STR_87
  9306  000EDE  6F6F               	movwf	strncmp@_r& (0+255),b
  9307  000EE0  0EFF               	movlw	high STR_87
  9308  000EE2  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9309  000EE4  0E00               	movlw	0
  9310  000EE6  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9311  000EE8  0E03               	movlw	3
  9312  000EEA  6F71               	movwf	strncmp@n& (0+255),b
  9313  000EEC  EC9D  F022         	call	_strncmp	;wreg free
  9314  000EF0  0100               	movlb	0	; () banked
  9315  000EF2  516D               	movf	?_strncmp& (0+255),w,b
  9316  000EF4  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9317  000EF6  B4D8               	btfsc	status,2,c
  9318  000EF8  EF80  F007         	goto	u8811
  9319  000EFC  EF82  F007         	goto	u8810
  9320  000F00                     u8811:
  9321  000F00  EF9E  F007         	goto	l7558
  9322  000F04                     u8810:
  9323  000F04                     
  9324                           ; BSR set to: 0
  9325  000F04  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9326  000F08  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9327  000F0C  CFDE F06D          	movff	postinc2,strncmp@_l
  9328  000F10  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9329  000F14  0ECE               	movlw	low STR_91
  9330  000F16  6F6F               	movwf	strncmp@_r& (0+255),b
  9331  000F18  0EFF               	movlw	high STR_91
  9332  000F1A  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9333  000F1C  0E00               	movlw	0
  9334  000F1E  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9335  000F20  0E03               	movlw	3
  9336  000F22  6F71               	movwf	strncmp@n& (0+255),b
  9337  000F24  EC9D  F022         	call	_strncmp	;wreg free
  9338  000F28  0100               	movlb	0	; () banked
  9339  000F2A  516D               	movf	?_strncmp& (0+255),w,b
  9340  000F2C  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9341  000F2E  A4D8               	btfss	status,2,c
  9342  000F30  EF9C  F007         	goto	u8821
  9343  000F34  EF9E  F007         	goto	u8820
  9344  000F38                     u8821:
  9345  000F38  EFF3  F007         	goto	l7568
  9346  000F3C                     u8820:
  9347  000F3C                     l7558:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  9351  000F3C  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9352  000F40  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9353  000F44  CFDE F0B7          	movff	postinc2,??_vfpfcnvrt
  9354  000F48  CFDD F0B8          	movff	postdec2,??_vfpfcnvrt+1
  9355  000F4C  0E02               	movlw	2
  9356  000F4E  27B7               	addwf	??_vfpfcnvrt& (0+255),f,b
  9357  000F50  0E00               	movlw	0
  9358  000F52  23B8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9359  000F54  C0B7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9360  000F58  C0B8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9361  000F5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9362  000F5C  6AF8               	clrf	tblptru,c
  9363  000F5E                     	endif
  9364  000F5E                     	if	0	;tblptru may be non-zero
  9365  000F5E                     	endif
  9366  000F5E  0008               	tblrd		*
  9367  000F60  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  9368  000F64                     
  9369                           ; BSR set to: 0
  9370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  9371  000F64  0E03               	movlw	3
  9372  000F66  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9373  000F6A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9374  000F6E  26DE               	addwf	postinc2,f,c
  9375  000F70  0E00               	movlw	0
  9376  000F72  22DD               	addwfc	postdec2,f,c
  9377  000F74                     
  9378                           ; BSR set to: 0
  9379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9380  000F74  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9381  000F78  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9382  000F7C  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9383  000F80  0E02               	movlw	2
  9384  000F82  26DE               	addwf	postinc2,f,c
  9385  000F84  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9386  000F88  0E00               	movlw	0
  9387  000F8A  22DD               	addwfc	postdec2,f,c
  9388  000F8C  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9389  000F90  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9390  000F94  50DF               	movf	indf2,w,c
  9391  000F96  6FB9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9392  000F98  51B9               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  9393  000F9A  6FCE               	movwf	vfpfcnvrt@llu& (0+255),b
  9394  000F9C  6BCF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  9395  000F9E  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9396  000FA0  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9397  000FA2  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9398  000FA4  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9399  000FA6  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9400  000FA8  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9401  000FAA                     l7564:
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  9405  000FAA  C0B1  F08A         	movff	vfpfcnvrt@fp,xtoa@fp
  9406  000FAE  C0B2  F08B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9407  000FB2  C0CE  F08C         	movff	vfpfcnvrt@llu,xtoa@d
  9408  000FB6  C0CF  F08D         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9409  000FBA  C0D0  F08E         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9410  000FBE  C0D1  F08F         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9411  000FC2  C0D2  F090         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9412  000FC6  C0D3  F091         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9413  000FCA  C0D4  F092         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9414  000FCE  C0D5  F093         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9415  000FD2  C0CD  F094         	movff	vfpfcnvrt@c,xtoa@x
  9416  000FD6  EC56  F013         	call	_xtoa	;wreg free
  9417  000FDA  C08A  F0B1         	movff	?_xtoa,?_vfpfcnvrt
  9418  000FDE  C08B  F0B2         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9419  000FE2  EF85  F009         	goto	l868
  9420  000FE6                     l7568:
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  9424  000FE6  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9425  000FEA  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9426  000FEE  CFDE F06D          	movff	postinc2,strncmp@_l
  9427  000FF2  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9428  000FF6  0EE7               	movlw	low (STR_87+1)
  9429  000FF8  6F6F               	movwf	strncmp@_r& (0+255),b
  9430  000FFA  0EFF               	movlw	high (STR_87+1)
  9431  000FFC  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9432  000FFE  0E00               	movlw	0
  9433  001000  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9434  001002  0E02               	movlw	2
  9435  001004  6F71               	movwf	strncmp@n& (0+255),b
  9436  001006  EC9D  F022         	call	_strncmp	;wreg free
  9437  00100A  0100               	movlb	0	; () banked
  9438  00100C  516D               	movf	?_strncmp& (0+255),w,b
  9439  00100E  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9440  001010  B4D8               	btfsc	status,2,c
  9441  001012  EF0D  F008         	goto	u8831
  9442  001016  EF0F  F008         	goto	u8830
  9443  00101A                     u8831:
  9444  00101A  EF2B  F008         	goto	l7572
  9445  00101E                     u8830:
  9446  00101E                     
  9447                           ; BSR set to: 0
  9448  00101E  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9449  001022  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9450  001026  CFDE F06D          	movff	postinc2,strncmp@_l
  9451  00102A  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9452  00102E  0ECF               	movlw	low (STR_91+1)
  9453  001030  6F6F               	movwf	strncmp@_r& (0+255),b
  9454  001032  0EFF               	movlw	high (STR_91+1)
  9455  001034  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9456  001036  0E00               	movlw	0
  9457  001038  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9458  00103A  0E02               	movlw	2
  9459  00103C  6F71               	movwf	strncmp@n& (0+255),b
  9460  00103E  EC9D  F022         	call	_strncmp	;wreg free
  9461  001042  0100               	movlb	0	; () banked
  9462  001044  516D               	movf	?_strncmp& (0+255),w,b
  9463  001046  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9464  001048  A4D8               	btfss	status,2,c
  9465  00104A  EF29  F008         	goto	u8841
  9466  00104E  EF2B  F008         	goto	u8840
  9467  001052                     u8841:
  9468  001052  EF67  F008         	goto	l7582
  9469  001056                     u8840:
  9470  001056                     l7572:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  9474  001056  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9475  00105A  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9476  00105E  CFDE F0B7          	movff	postinc2,??_vfpfcnvrt
  9477  001062  CFDD F0B8          	movff	postdec2,??_vfpfcnvrt+1
  9478  001066  0E01               	movlw	1
  9479  001068  27B7               	addwf	??_vfpfcnvrt& (0+255),f,b
  9480  00106A  0E00               	movlw	0
  9481  00106C  23B8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9482  00106E  C0B7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9483  001072  C0B8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9484  001076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9485  001076  6AF8               	clrf	tblptru,c
  9486  001078                     	endif
  9487  001078                     	if	0	;tblptru may be non-zero
  9488  001078                     	endif
  9489  001078  0008               	tblrd		*
  9490  00107A  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  9491  00107E                     
  9492                           ; BSR set to: 0
  9493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  9494  00107E  0E02               	movlw	2
  9495  001080  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9496  001084  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9497  001088  26DE               	addwf	postinc2,f,c
  9498  00108A  0E00               	movlw	0
  9499  00108C  22DD               	addwfc	postdec2,f,c
  9500  00108E                     
  9501                           ; BSR set to: 0
  9502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  9503  00108E  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9504  001092  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9505  001096  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9506  00109A  0E02               	movlw	2
  9507  00109C  26DE               	addwf	postinc2,f,c
  9508  00109E  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9509  0010A2  0E00               	movlw	0
  9510  0010A4  22DD               	addwfc	postdec2,f,c
  9511  0010A6  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9512  0010AA  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9513  0010AE  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  9514  0010B2  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  9515  0010B6  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9516  0010BA  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9517  0010BE  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9518  0010C0  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9519  0010C2  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9520  0010C4  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9521  0010C6  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9522  0010C8  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9523  0010CA  EFD5  F007         	goto	l7564
  9524  0010CE                     l7582:
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9528  0010CE  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9529  0010D2  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9530  0010D6  CFDE FFF6          	movff	postinc2,tblptrl
  9531  0010DA  CFDD FFF7          	movff	postdec2,tblptrh
  9532  0010DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9533  0010DE  6AF8               	clrf	tblptru,c
  9534  0010E0                     	endif
  9535  0010E0                     	if	0	;tblptru may be non-zero
  9536  0010E0                     	endif
  9537  0010E0  0008               	tblrd		*
  9538  0010E2  50F5               	movf	tablat,w,c
  9539  0010E4  0A78               	xorlw	120
  9540  0010E6  B4D8               	btfsc	status,2,c
  9541  0010E8  EF78  F008         	goto	u8851
  9542  0010EC  EF7A  F008         	goto	u8850
  9543  0010F0                     u8851:
  9544  0010F0  EF8D  F008         	goto	l7586
  9545  0010F4                     u8850:
  9546  0010F4                     
  9547                           ; BSR set to: 0
  9548  0010F4  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9549  0010F8  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9550  0010FC  CFDE FFF6          	movff	postinc2,tblptrl
  9551  001100  CFDD FFF7          	movff	postdec2,tblptrh
  9552  001104                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9553  001104  6AF8               	clrf	tblptru,c
  9554  001106                     	endif
  9555  001106                     	if	0	;tblptru may be non-zero
  9556  001106                     	endif
  9557  001106  0008               	tblrd		*
  9558  001108  50F5               	movf	tablat,w,c
  9559  00110A  0A58               	xorlw	88
  9560  00110C  A4D8               	btfss	status,2,c
  9561  00110E  EF8B  F008         	goto	u8861
  9562  001112  EF8D  F008         	goto	u8860
  9563  001116                     u8861:
  9564  001116  EFC0  F008         	goto	l7596
  9565  00111A                     u8860:
  9566  00111A                     l7586:
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9570  00111A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9571  00111E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9572  001122  CFDE FFF6          	movff	postinc2,tblptrl
  9573  001126  CFDD FFF7          	movff	postdec2,tblptrh
  9574  00112A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9575  00112A  6AF8               	clrf	tblptru,c
  9576  00112C                     	endif
  9577  00112C                     	if	0	;tblptru may be non-zero
  9578  00112C                     	endif
  9579  00112C  0008               	tblrd		*
  9580  00112E  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  9581  001132                     
  9582                           ; BSR set to: 0
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9584  001132  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9585  001136  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9586  00113A  2ADE               	incf	postinc2,f,c
  9587  00113C  0E00               	movlw	0
  9588  00113E  22DD               	addwfc	postdec2,f,c
  9589  001140                     
  9590                           ; BSR set to: 0
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9592  001140  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9593  001144  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9594  001148  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9595  00114C  0E02               	movlw	2
  9596  00114E  26DE               	addwf	postinc2,f,c
  9597  001150  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9598  001154  0E00               	movlw	0
  9599  001156  22DD               	addwfc	postdec2,f,c
  9600  001158  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9601  00115C  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9602  001160  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  9603  001164  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  9604  001168  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9605  00116C  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9606  001170  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9607  001172  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9608  001174  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9609  001176  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9610  001178  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9611  00117A  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9612  00117C  EFD5  F007         	goto	l7564
  9613  001180                     l7596:
  9614                           
  9615                           ; BSR set to: 0
  9616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  9617  001180  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9618  001184  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9619  001188  CFDE F06D          	movff	postinc2,strncmp@_l
  9620  00118C  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9621  001190  0EFC               	movlw	low STR_105
  9622  001192  6F6F               	movwf	strncmp@_r& (0+255),b
  9623  001194  0EFF               	movlw	high STR_105
  9624  001196  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9625  001198  0E00               	movlw	0
  9626  00119A  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9627  00119C  0E02               	movlw	2
  9628  00119E  6F71               	movwf	strncmp@n& (0+255),b
  9629  0011A0  EC9D  F022         	call	_strncmp	;wreg free
  9630  0011A4  0100               	movlb	0	; () banked
  9631  0011A6  516D               	movf	?_strncmp& (0+255),w,b
  9632  0011A8  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9633  0011AA  B4D8               	btfsc	status,2,c
  9634  0011AC  EFDA  F008         	goto	u8871
  9635  0011B0  EFDC  F008         	goto	u8870
  9636  0011B4                     u8871:
  9637  0011B4  EFF8  F008         	goto	l7600
  9638  0011B8                     u8870:
  9639  0011B8                     
  9640                           ; BSR set to: 0
  9641  0011B8  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9642  0011BC  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9643  0011C0  CFDE F06D          	movff	postinc2,strncmp@_l
  9644  0011C4  CFDD F06E          	movff	postdec2,strncmp@_l+1
  9645  0011C8  0EEA               	movlw	low STR_109
  9646  0011CA  6F6F               	movwf	strncmp@_r& (0+255),b
  9647  0011CC  0EFF               	movlw	high STR_109
  9648  0011CE  6F70               	movwf	(strncmp@_r+1)& (0+255),b
  9649  0011D0  0E00               	movlw	0
  9650  0011D2  6F72               	movwf	(strncmp@n+1)& (0+255),b
  9651  0011D4  0E02               	movlw	2
  9652  0011D6  6F71               	movwf	strncmp@n& (0+255),b
  9653  0011D8  EC9D  F022         	call	_strncmp	;wreg free
  9654  0011DC  0100               	movlb	0	; () banked
  9655  0011DE  516D               	movf	?_strncmp& (0+255),w,b
  9656  0011E0  116E               	iorwf	(?_strncmp+1)& (0+255),w,b
  9657  0011E2  A4D8               	btfss	status,2,c
  9658  0011E4  EFF6  F008         	goto	u8881
  9659  0011E8  EFF8  F008         	goto	u8880
  9660  0011EC                     u8881:
  9661  0011EC  EF34  F009         	goto	l7610
  9662  0011F0                     u8880:
  9663  0011F0                     l7600:
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  9667  0011F0  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9668  0011F4  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9669  0011F8  CFDE F0B7          	movff	postinc2,??_vfpfcnvrt
  9670  0011FC  CFDD F0B8          	movff	postdec2,??_vfpfcnvrt+1
  9671  001200  0E01               	movlw	1
  9672  001202  27B7               	addwf	??_vfpfcnvrt& (0+255),f,b
  9673  001204  0E00               	movlw	0
  9674  001206  23B8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9675  001208  C0B7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9676  00120C  C0B8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9677  001210                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9678  001210  6AF8               	clrf	tblptru,c
  9679  001212                     	endif
  9680  001212                     	if	0	;tblptru may be non-zero
  9681  001212                     	endif
  9682  001212  0008               	tblrd		*
  9683  001214  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  9684  001218                     
  9685                           ; BSR set to: 0
  9686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  9687  001218  0E02               	movlw	2
  9688  00121A  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9689  00121E  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9690  001222  26DE               	addwf	postinc2,f,c
  9691  001224  0E00               	movlw	0
  9692  001226  22DD               	addwfc	postdec2,f,c
  9693  001228                     
  9694                           ; BSR set to: 0
  9695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  9696  001228  C0B5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9697  00122C  C0B6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9698  001230  CFDF F0B7          	movff	indf2,??_vfpfcnvrt
  9699  001234  0E02               	movlw	2
  9700  001236  26DE               	addwf	postinc2,f,c
  9701  001238  CFDF F0B8          	movff	indf2,??_vfpfcnvrt+1
  9702  00123C  0E00               	movlw	0
  9703  00123E  22DD               	addwfc	postdec2,f,c
  9704  001240  C0B7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9705  001244  C0B8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9706  001248  CFDE F0B9          	movff	postinc2,??_vfpfcnvrt+2
  9707  00124C  CFDD F0BA          	movff	postdec2,??_vfpfcnvrt+3
  9708  001250  C0B9  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9709  001254  C0BA  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9710  001258  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9711  00125A  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9712  00125C  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9713  00125E  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9714  001260  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9715  001262  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9716  001264  EFD5  F007         	goto	l7564
  9717  001268                     l7610:
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9721  001268  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9722  00126C  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9723  001270  CFDE FFF6          	movff	postinc2,tblptrl
  9724  001274  CFDD FFF7          	movff	postdec2,tblptrh
  9725  001278                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9726  001278  6AF8               	clrf	tblptru,c
  9727  00127A                     	endif
  9728  00127A                     	if	0	;tblptru may be non-zero
  9729  00127A                     	endif
  9730  00127A  0008               	tblrd		*
  9731  00127C  50F5               	movf	tablat,w,c
  9732  00127E  0A25               	xorlw	37
  9733  001280  A4D8               	btfss	status,2,c
  9734  001282  EF45  F009         	goto	u8891
  9735  001286  EF47  F009         	goto	u8890
  9736  00128A                     u8891:
  9737  00128A  EF5F  F009         	goto	l7620
  9738  00128E                     u8890:
  9739  00128E                     
  9740                           ; BSR set to: 0
  9741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9742  00128E  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9743  001292  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9744  001296  2ADE               	incf	postinc2,f,c
  9745  001298  0E00               	movlw	0
  9746  00129A  22DD               	addwfc	postdec2,f,c
  9747  00129C                     
  9748                           ; BSR set to: 0
  9749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9750  00129C  0E00               	movlw	0
  9751  00129E  6F70               	movwf	(fputc@c+1)& (0+255),b
  9752  0012A0  0E25               	movlw	37
  9753  0012A2  6F6F               	movwf	fputc@c& (0+255),b
  9754  0012A4  C0B1  F071         	movff	vfpfcnvrt@fp,fputc@fp
  9755  0012A8  C0B2  F072         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9756  0012AC  ECED  F023         	call	_fputc	;wreg free
  9757  0012B0                     l7616:
  9758                           
  9759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9760  0012B0  0E00               	movlw	0
  9761  0012B2  0100               	movlb	0	; () banked
  9762  0012B4  6FB2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9763  0012B6  0E01               	movlw	1
  9764  0012B8  6FB1               	movwf	?_vfpfcnvrt& (0+255),b
  9765  0012BA  EF85  F009         	goto	l868
  9766  0012BE                     l7620:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9770  0012BE  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9771  0012C2  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9772  0012C6  2ADE               	incf	postinc2,f,c
  9773  0012C8  0E00               	movlw	0
  9774  0012CA  22DD               	addwfc	postdec2,f,c
  9775  0012CC  EFF3  F004         	goto	l7472
  9776  0012D0                     l7626:
  9777                           
  9778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9779  0012D0  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9780  0012D4  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9781  0012D8  CFDE FFF6          	movff	postinc2,tblptrl
  9782  0012DC  CFDD FFF7          	movff	postdec2,tblptrh
  9783  0012E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9784  0012E0  6AF8               	clrf	tblptru,c
  9785  0012E2                     	endif
  9786  0012E2                     	if	0	;tblptru may be non-zero
  9787  0012E2                     	endif
  9788  0012E2  0008               	tblrd		*
  9789  0012E4  50F5               	movf	tablat,w,c
  9790  0012E6  0100               	movlb	0	; () banked
  9791  0012E8  6F6F               	movwf	fputc@c& (0+255),b
  9792  0012EA  6B70               	clrf	(fputc@c+1)& (0+255),b
  9793  0012EC  C0B1  F071         	movff	vfpfcnvrt@fp,fputc@fp
  9794  0012F0  C0B2  F072         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9795  0012F4  ECED  F023         	call	_fputc	;wreg free
  9796  0012F8                     
  9797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9798  0012F8  C0B3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9799  0012FC  C0B4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9800  001300  2ADE               	incf	postinc2,f,c
  9801  001302  0E00               	movlw	0
  9802  001304  22DD               	addwfc	postdec2,f,c
  9803  001306  EF58  F009         	goto	l7616
  9804  00130A                     l868:
  9805  00130A  0012               	return		;funcret
  9806  00130C                     __end_of_vfpfcnvrt:
  9807                           	opt callstack 0
  9808                           
  9809 ;; *************** function _xtoa *****************
  9810 ;; Defined at:
  9811 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9812 ;; Parameters:    Size  Location     Type
  9813 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  9814 ;;		 -> vsnprintf@f(6), NULL(0), 
  9815 ;;  d               8   44[BANK0 ] unsigned long long 
  9816 ;;  x               1   52[BANK0 ] unsigned char 
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;  n               8   69[BANK0 ] unsigned long long 
  9819 ;;  c               2   79[BANK0 ] int 
  9820 ;;  i               2   77[BANK0 ] int 
  9821 ;;  w               2   67[BANK0 ] int 
  9822 ;;  p               2   65[BANK0 ] int 
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  2   42[BANK0 ] int 
  9825 ;; Registers used:
  9826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9832 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9833 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9834 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9836 ;;Total ram usage:       39 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:   12
  9839 ;; This function calls:
  9840 ;;		_isalpha
  9841 ;;		_isupper
  9842 ;;		_pad
  9843 ;;		_toupper
  9844 ;; This function is called by:
  9845 ;;		_vfpfcnvrt
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text36
  9850  0026AC                     __ptext36:
  9851                           	opt callstack 0
  9852  0026AC                     _xtoa:
  9853                           	opt callstack 14
  9854  0026AC                     
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9856  0026AC  0100               	movlb	0	; () banked
  9857  0026AE  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  9858  0026B0  EF5C  F013         	goto	u8211
  9859  0026B4  EF5E  F013         	goto	u8210
  9860  0026B8                     u8211:
  9861  0026B8  EF5F  F013         	goto	l7202
  9862  0026BC                     u8210:
  9863  0026BC                     
  9864                           ; BSR set to: 0
  9865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9866  0026BC  93EC               	bcf	_flags& (0+255),1,b
  9867  0026BE                     l7202:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9871  0026BE  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  9872  0026C0  EF6C  F013         	goto	u8220
  9873  0026C4  51EB               	movf	(_prec+1)& (0+255),w,b
  9874  0026C6  E106               	bnz	u8221
  9875  0026C8  05EA               	decf	_prec& (0+255),w,b
  9876  0026CA  B0D8               	btfsc	status,0,c
  9877  0026CC  EF6A  F013         	goto	u8221
  9878  0026D0  EF6C  F013         	goto	u8220
  9879  0026D4                     u8221:
  9880  0026D4  EF72  F013         	goto	l806
  9881  0026D8                     u8220:
  9882  0026D8                     
  9883                           ; BSR set to: 0
  9884  0026D8  0E00               	movlw	0
  9885  0026DA  6FA2               	movwf	(xtoa@p+1)& (0+255),b
  9886  0026DC  0E01               	movlw	1
  9887  0026DE  6FA1               	movwf	xtoa@p& (0+255),b
  9888  0026E0  EF76  F013         	goto	l808
  9889  0026E4                     l806:
  9890                           
  9891                           ; BSR set to: 0
  9892  0026E4  C0EA  F0A1         	movff	_prec,xtoa@p
  9893  0026E8  C0EB  F0A2         	movff	_prec+1,xtoa@p+1
  9894  0026EC                     l808:
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9898  0026EC  C0E8  F0A3         	movff	_width,xtoa@w
  9899  0026F0  C0E9  F0A4         	movff	_width+1,xtoa@w+1
  9900                           
  9901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9902  0026F4  A9EC               	btfss	_flags& (0+255),4,b
  9903  0026F6  EF7F  F013         	goto	u8231
  9904  0026FA  EF81  F013         	goto	u8230
  9905  0026FE                     u8231:
  9906  0026FE  EF85  F013         	goto	l7208
  9907  002702                     u8230:
  9908  002702                     
  9909                           ; BSR set to: 0
  9910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9911  002702  0EFE               	movlw	254
  9912  002704  27A3               	addwf	xtoa@w& (0+255),f,b
  9913  002706  0EFF               	movlw	255
  9914  002708  23A4               	addwfc	(xtoa@w+1)& (0+255),f,b
  9915  00270A                     l7208:
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9919  00270A  C08C  F0A5         	movff	xtoa@d,xtoa@n
  9920  00270E  C08D  F0A6         	movff	xtoa@d+1,xtoa@n+1
  9921  002712  C08E  F0A7         	movff	xtoa@d+2,xtoa@n+2
  9922  002716  C08F  F0A8         	movff	xtoa@d+3,xtoa@n+3
  9923  00271A  C090  F0A9         	movff	xtoa@d+4,xtoa@n+4
  9924  00271E  C091  F0AA         	movff	xtoa@d+5,xtoa@n+5
  9925  002722  C092  F0AB         	movff	xtoa@d+6,xtoa@n+6
  9926  002726  C093  F0AC         	movff	xtoa@d+7,xtoa@n+7
  9927  00272A                     
  9928                           ; BSR set to: 0
  9929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9930  00272A  0E00               	movlw	0
  9931  00272C  6FAE               	movwf	(xtoa@i+1)& (0+255),b
  9932  00272E  0E1F               	movlw	31
  9933  002730  6FAD               	movwf	xtoa@i& (0+255),b
  9934  002732                     
  9935                           ; BSR set to: 0
  9936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9937  002732  0E00               	movlw	0
  9938  002734  0101               	movlb	1	; () banked
  9939  002736  6F32               	movwf	(_dbuf+31)& (0+255),b
  9940                           
  9941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9942  002738  EF52  F014         	goto	l7244
  9943  00273C                     l7214:
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9947  00273C  07AD               	decf	xtoa@i& (0+255),f,b
  9948  00273E  A0D8               	btfss	status,0,c
  9949  002740  07AE               	decf	(xtoa@i+1)& (0+255),f,b
  9950  002742                     
  9951                           ; BSR set to: 0
  9952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9953  002742  0E0F               	movlw	15
  9954  002744  15A5               	andwf	xtoa@n& (0+255),w,b
  9955  002746  6FAF               	movwf	xtoa@c& (0+255),b
  9956  002748  6BB0               	clrf	(xtoa@c+1)& (0+255),b
  9957  00274A                     
  9958                           ; BSR set to: 0
  9959                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9960  00274A  BFB0               	btfsc	(xtoa@c+1)& (0+255),7,b
  9961  00274C  EFB1  F013         	goto	u8241
  9962  002750  51B0               	movf	(xtoa@c+1)& (0+255),w,b
  9963  002752  E109               	bnz	u8240
  9964  002754  0E0A               	movlw	10
  9965  002756  5DAF               	subwf	xtoa@c& (0+255),w,b
  9966  002758  A0D8               	btfss	status,0,c
  9967  00275A  EFB1  F013         	goto	u8241
  9968  00275E  EFB3  F013         	goto	u8240
  9969  002762                     u8241:
  9970  002762  EFBB  F013         	goto	l7222
  9971  002766                     u8240:
  9972  002766                     
  9973                           ; BSR set to: 0
  9974  002766  0E57               	movlw	87
  9975  002768  25AF               	addwf	xtoa@c& (0+255),w,b
  9976  00276A  6FAF               	movwf	xtoa@c& (0+255),b
  9977  00276C  0E00               	movlw	0
  9978  00276E  21B0               	addwfc	(xtoa@c+1)& (0+255),w,b
  9979  002770  6FB0               	movwf	(xtoa@c+1)& (0+255),b
  9980  002772  EFC1  F013         	goto	l815
  9981  002776                     l7222:
  9982                           
  9983                           ; BSR set to: 0
  9984  002776  0E30               	movlw	48
  9985  002778  25AF               	addwf	xtoa@c& (0+255),w,b
  9986  00277A  6FAF               	movwf	xtoa@c& (0+255),b
  9987  00277C  0E00               	movlw	0
  9988  00277E  21B0               	addwfc	(xtoa@c+1)& (0+255),w,b
  9989  002780  6FB0               	movwf	(xtoa@c+1)& (0+255),b
  9990  002782                     l815:
  9991                           
  9992                           ; BSR set to: 0
  9993  002782  0EBF               	movlw	191
  9994  002784  6F95               	movwf	??_xtoa& (0+255),b
  9995  002786  0EFF               	movlw	255
  9996  002788  6F96               	movwf	(??_xtoa+1)& (0+255),b
  9997  00278A  5194               	movf	xtoa@x& (0+255),w,b
  9998  00278C  6F97               	movwf	(??_xtoa+2)& (0+255),b
  9999  00278E  6B98               	clrf	(??_xtoa+3)& (0+255),b
 10000  002790  5195               	movf	??_xtoa& (0+255),w,b
 10001  002792  2797               	addwf	(??_xtoa+2)& (0+255),f,b
 10002  002794  5196               	movf	(??_xtoa+1)& (0+255),w,b
 10003  002796  2398               	addwfc	(??_xtoa+3)& (0+255),f,b
 10004  002798  5198               	movf	(??_xtoa+3)& (0+255),w,b
 10005  00279A  E10A               	bnz	u8250
 10006  00279C  0E1A               	movlw	26
 10007  00279E  5D97               	subwf	(??_xtoa+2)& (0+255),w,b
 10008  0027A0  A0D8               	btfss	status,0,c
 10009  0027A2  EFD5  F013         	goto	u8251
 10010  0027A6  EFD8  F013         	goto	u8250
 10011  0027AA                     u8251:
 10012  0027AA  0E01               	movlw	1
 10013  0027AC  EFD9  F013         	goto	u8260
 10014  0027B0                     u8250:
 10015  0027B0  0E00               	movlw	0
 10016  0027B2                     u8260:
 10017  0027B2  6F9D               	movwf	_xtoa$1820& (0+255),b
 10018  0027B4  6B9E               	clrf	(_xtoa$1820+1)& (0+255),b
 10019  0027B6                     
 10020                           ; BSR set to: 0
 10021  0027B6  519D               	movf	_xtoa$1820& (0+255),w,b
 10022  0027B8  119E               	iorwf	(_xtoa$1820+1)& (0+255),w,b
 10023  0027BA  B4D8               	btfsc	status,2,c
 10024  0027BC  EFE2  F013         	goto	u8271
 10025  0027C0  EFE4  F013         	goto	u8270
 10026  0027C4                     u8271:
 10027  0027C4  EF14  F014         	goto	l7236
 10028  0027C8                     u8270:
 10029  0027C8                     
 10030                           ; BSR set to: 0
 10031  0027C8  0E9F               	movlw	159
 10032  0027CA  6F95               	movwf	??_xtoa& (0+255),b
 10033  0027CC  0EFF               	movlw	255
 10034  0027CE  6F96               	movwf	(??_xtoa+1)& (0+255),b
 10035  0027D0  0E20               	movlw	32
 10036  0027D2  11AF               	iorwf	xtoa@c& (0+255),w,b
 10037  0027D4  6F97               	movwf	(??_xtoa+2)& (0+255),b
 10038  0027D6  0E00               	movlw	0
 10039  0027D8  11B0               	iorwf	(xtoa@c+1)& (0+255),w,b
 10040  0027DA  6F98               	movwf	(??_xtoa+3)& (0+255),b
 10041  0027DC  5195               	movf	??_xtoa& (0+255),w,b
 10042  0027DE  2797               	addwf	(??_xtoa+2)& (0+255),f,b
 10043  0027E0  5196               	movf	(??_xtoa+1)& (0+255),w,b
 10044  0027E2  2398               	addwfc	(??_xtoa+3)& (0+255),f,b
 10045  0027E4  5198               	movf	(??_xtoa+3)& (0+255),w,b
 10046  0027E6  E10A               	bnz	u8280
 10047  0027E8  0E1A               	movlw	26
 10048  0027EA  5D97               	subwf	(??_xtoa+2)& (0+255),w,b
 10049  0027EC  A0D8               	btfss	status,0,c
 10050  0027EE  EFFB  F013         	goto	u8281
 10051  0027F2  EFFE  F013         	goto	u8280
 10052  0027F6                     u8281:
 10053  0027F6  0E01               	movlw	1
 10054  0027F8  EFFF  F013         	goto	u8290
 10055  0027FC                     u8280:
 10056  0027FC  0E00               	movlw	0
 10057  0027FE                     u8290:
 10058  0027FE  6F9F               	movwf	_xtoa$1821& (0+255),b
 10059  002800  6BA0               	clrf	(_xtoa$1821+1)& (0+255),b
 10060  002802                     
 10061                           ; BSR set to: 0
 10062  002802  519F               	movf	_xtoa$1821& (0+255),w,b
 10063  002804  11A0               	iorwf	(_xtoa$1821+1)& (0+255),w,b
 10064  002806  B4D8               	btfsc	status,2,c
 10065  002808  EF08  F014         	goto	u8301
 10066  00280C  EF0A  F014         	goto	u8300
 10067  002810                     u8301:
 10068  002810  EF14  F014         	goto	l7236
 10069  002814                     u8300:
 10070  002814                     
 10071                           ; BSR set to: 0
 10072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 10073  002814  C0AF  F073         	movff	xtoa@c,toupper@c
 10074  002818  C0B0  F074         	movff	xtoa@c+1,toupper@c+1
 10075  00281C  ECF4  F025         	call	_toupper	;wreg free
 10076  002820  C073  F0AF         	movff	?_toupper,xtoa@c
 10077  002824  C074  F0B0         	movff	?_toupper+1,xtoa@c+1
 10078  002828                     l7236:
 10079                           
 10080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 10081  002828  0E13               	movlw	low _dbuf
 10082  00282A  0100               	movlb	0	; () banked
 10083  00282C  25AD               	addwf	xtoa@i& (0+255),w,b
 10084  00282E  6ED9               	movwf	fsr2l,c
 10085  002830  0E01               	movlw	high _dbuf
 10086  002832  21AE               	addwfc	(xtoa@i+1)& (0+255),w,b
 10087  002834  6EDA               	movwf	fsr2h,c
 10088  002836  C0AF  FFDF         	movff	xtoa@c,indf2
 10089  00283A                     
 10090                           ; BSR set to: 0
 10091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 10092  00283A  07A1               	decf	xtoa@p& (0+255),f,b
 10093  00283C  A0D8               	btfss	status,0,c
 10094  00283E  07A2               	decf	(xtoa@p+1)& (0+255),f,b
 10095  002840                     
 10096                           ; BSR set to: 0
 10097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 10098  002840  07A3               	decf	xtoa@w& (0+255),f,b
 10099  002842  A0D8               	btfss	status,0,c
 10100  002844  07A4               	decf	(xtoa@w+1)& (0+255),f,b
 10101  002846                     
 10102                           ; BSR set to: 0
 10103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 10104  002846  C0A5  F095         	movff	xtoa@n,??_xtoa
 10105  00284A  C0A6  F096         	movff	xtoa@n+1,??_xtoa+1
 10106  00284E  C0A7  F097         	movff	xtoa@n+2,??_xtoa+2
 10107  002852  C0A8  F098         	movff	xtoa@n+3,??_xtoa+3
 10108  002856  C0A9  F099         	movff	xtoa@n+4,??_xtoa+4
 10109  00285A  C0AA  F09A         	movff	xtoa@n+5,??_xtoa+5
 10110  00285E  C0AB  F09B         	movff	xtoa@n+6,??_xtoa+6
 10111  002862  C0AC  F09C         	movff	xtoa@n+7,??_xtoa+7
 10112  002866  0E05               	movlw	5
 10113  002868  EF3F  F014         	goto	u8310
 10114  00286C                     u8315:
 10115  00286C  90D8               	bcf	status,0,c
 10116  00286E  339C               	rrcf	(??_xtoa+7)& (0+255),f,b
 10117  002870  339B               	rrcf	(??_xtoa+6)& (0+255),f,b
 10118  002872  339A               	rrcf	(??_xtoa+5)& (0+255),f,b
 10119  002874  3399               	rrcf	(??_xtoa+4)& (0+255),f,b
 10120  002876  3398               	rrcf	(??_xtoa+3)& (0+255),f,b
 10121  002878  3397               	rrcf	(??_xtoa+2)& (0+255),f,b
 10122  00287A  3396               	rrcf	(??_xtoa+1)& (0+255),f,b
 10123  00287C  3395               	rrcf	??_xtoa& (0+255),f,b
 10124  00287E                     u8310:
 10125  00287E  2EE8               	decfsz	wreg,f,c
 10126  002880  EF36  F014         	goto	u8315
 10127  002884  C095  F0A5         	movff	??_xtoa,xtoa@n
 10128  002888  C096  F0A6         	movff	??_xtoa+1,xtoa@n+1
 10129  00288C  C097  F0A7         	movff	??_xtoa+2,xtoa@n+2
 10130  002890  C098  F0A8         	movff	??_xtoa+3,xtoa@n+3
 10131  002894  C099  F0A9         	movff	??_xtoa+4,xtoa@n+4
 10132  002898  C09A  F0AA         	movff	??_xtoa+5,xtoa@n+5
 10133  00289C  C09B  F0AB         	movff	??_xtoa+6,xtoa@n+6
 10134  0028A0  C09C  F0AC         	movff	??_xtoa+7,xtoa@n+7
 10135  0028A4                     l7244:
 10136                           
 10137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10138  0028A4  0100               	movlb	0	; () banked
 10139  0028A6  BFAE               	btfsc	(xtoa@i+1)& (0+255),7,b
 10140  0028A8  EF5F  F014         	goto	u8321
 10141  0028AC  51AE               	movf	(xtoa@i+1)& (0+255),w,b
 10142  0028AE  E109               	bnz	u8320
 10143  0028B0  0E02               	movlw	2
 10144  0028B2  5DAD               	subwf	xtoa@i& (0+255),w,b
 10145  0028B4  A0D8               	btfss	status,0,c
 10146  0028B6  EF5F  F014         	goto	u8321
 10147  0028BA  EF61  F014         	goto	u8320
 10148  0028BE                     u8321:
 10149  0028BE  EF91  F014         	goto	l829
 10150  0028C2                     u8320:
 10151  0028C2                     
 10152                           ; BSR set to: 0
 10153  0028C2  51A5               	movf	xtoa@n& (0+255),w,b
 10154  0028C4  11A6               	iorwf	(xtoa@n+1)& (0+255),w,b
 10155  0028C6  11A7               	iorwf	(xtoa@n+2)& (0+255),w,b
 10156  0028C8  11A8               	iorwf	(xtoa@n+3)& (0+255),w,b
 10157  0028CA  11A9               	iorwf	(xtoa@n+4)& (0+255),w,b
 10158  0028CC  11AA               	iorwf	(xtoa@n+5)& (0+255),w,b
 10159  0028CE  11AB               	iorwf	(xtoa@n+6)& (0+255),w,b
 10160  0028D0  11AC               	iorwf	(xtoa@n+7)& (0+255),w,b
 10161  0028D2  A4D8               	btfss	status,2,c
 10162  0028D4  EF6E  F014         	goto	u8331
 10163  0028D8  EF70  F014         	goto	u8330
 10164  0028DC                     u8331:
 10165  0028DC  EF9E  F013         	goto	l7214
 10166  0028E0                     u8330:
 10167  0028E0                     
 10168                           ; BSR set to: 0
 10169  0028E0  BFA2               	btfsc	(xtoa@p+1)& (0+255),7,b
 10170  0028E2  EF7D  F014         	goto	u8340
 10171  0028E6  51A2               	movf	(xtoa@p+1)& (0+255),w,b
 10172  0028E8  E106               	bnz	u8341
 10173  0028EA  05A1               	decf	xtoa@p& (0+255),w,b
 10174  0028EC  B0D8               	btfsc	status,0,c
 10175  0028EE  EF7B  F014         	goto	u8341
 10176  0028F2  EF7D  F014         	goto	u8340
 10177  0028F6                     u8341:
 10178  0028F6  EF9E  F013         	goto	l7214
 10179  0028FA                     u8340:
 10180  0028FA                     
 10181                           ; BSR set to: 0
 10182  0028FA  BFA4               	btfsc	(xtoa@w+1)& (0+255),7,b
 10183  0028FC  EF88  F014         	goto	u8351
 10184  002900  51A4               	movf	(xtoa@w+1)& (0+255),w,b
 10185  002902  E108               	bnz	u8350
 10186  002904  05A3               	decf	xtoa@w& (0+255),w,b
 10187  002906  A0D8               	btfss	status,0,c
 10188  002908  EF88  F014         	goto	u8351
 10189  00290C  EF8A  F014         	goto	u8350
 10190  002910                     u8351:
 10191  002910  EF91  F014         	goto	l829
 10192  002914                     u8350:
 10193  002914                     
 10194                           ; BSR set to: 0
 10195  002914  B3EC               	btfsc	_flags& (0+255),1,b
 10196  002916  EF8F  F014         	goto	u8361
 10197  00291A  EF91  F014         	goto	u8360
 10198  00291E                     u8361:
 10199  00291E  EF9E  F013         	goto	l7214
 10200  002922                     u8360:
 10201  002922                     l829:
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10205  002922  A9EC               	btfss	_flags& (0+255),4,b
 10206  002924  EF96  F014         	goto	u8371
 10207  002928  EF98  F014         	goto	u8370
 10208  00292C                     u8371:
 10209  00292C  EFAE  F014         	goto	l7260
 10210  002930                     u8370:
 10211  002930                     
 10212                           ; BSR set to: 0
 10213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10214  002930  07AD               	decf	xtoa@i& (0+255),f,b
 10215  002932  A0D8               	btfss	status,0,c
 10216  002934  07AE               	decf	(xtoa@i+1)& (0+255),f,b
 10217  002936                     
 10218                           ; BSR set to: 0
 10219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10220  002936  0E13               	movlw	low _dbuf
 10221  002938  25AD               	addwf	xtoa@i& (0+255),w,b
 10222  00293A  6ED9               	movwf	fsr2l,c
 10223  00293C  0E01               	movlw	high _dbuf
 10224  00293E  21AE               	addwfc	(xtoa@i+1)& (0+255),w,b
 10225  002940  6EDA               	movwf	fsr2h,c
 10226  002942  C094  FFDF         	movff	xtoa@x,indf2
 10227  002946                     
 10228                           ; BSR set to: 0
 10229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10230  002946  07AD               	decf	xtoa@i& (0+255),f,b
 10231  002948  A0D8               	btfss	status,0,c
 10232  00294A  07AE               	decf	(xtoa@i+1)& (0+255),f,b
 10233                           
 10234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10235  00294C  0E13               	movlw	low _dbuf
 10236  00294E  25AD               	addwf	xtoa@i& (0+255),w,b
 10237  002950  6ED9               	movwf	fsr2l,c
 10238  002952  0E01               	movlw	high _dbuf
 10239  002954  21AE               	addwfc	(xtoa@i+1)& (0+255),w,b
 10240  002956  6EDA               	movwf	fsr2h,c
 10241  002958  0E30               	movlw	48
 10242  00295A  6EDF               	movwf	indf2,c
 10243  00295C                     l7260:
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10247  00295C  C08A  F07F         	movff	xtoa@fp,pad@fp
 10248  002960  C08B  F080         	movff	xtoa@fp+1,pad@fp+1
 10249  002964  0E13               	movlw	low _dbuf
 10250  002966  25AD               	addwf	xtoa@i& (0+255),w,b
 10251  002968  6F81               	movwf	pad@buf& (0+255),b
 10252  00296A  0E01               	movlw	high _dbuf
 10253  00296C  21AE               	addwfc	(xtoa@i+1)& (0+255),w,b
 10254  00296E  6F82               	movwf	(pad@buf+1)& (0+255),b
 10255  002970  C0A3  F083         	movff	xtoa@w,pad@p
 10256  002974  C0A4  F084         	movff	xtoa@w+1,pad@p+1
 10257  002978  EC53  F024         	call	_pad	;wreg free
 10258  00297C  C07F  F08A         	movff	?_pad,?_xtoa
 10259  002980  C080  F08B         	movff	?_pad+1,?_xtoa+1
 10260  002984  0012               	return		;funcret
 10261  002986                     __end_of_xtoa:
 10262                           	opt callstack 0
 10263                           
 10264 ;; *************** function _toupper *****************
 10265 ;; Defined at:
 10266 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  c               2   19[BANK0 ] int 
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  2   19[BANK0 ] int 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10280 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10281 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10283 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10284 ;;Total ram usage:        8 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    8
 10287 ;; This function calls:
 10288 ;;		_islower
 10289 ;; This function is called by:
 10290 ;;		_xtoa
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           	psect	text37
 10295  004BE8                     __ptext37:
 10296                           	opt callstack 0
 10297  004BE8                     _toupper:
 10298                           	opt callstack 17
 10299  004BE8  0E9F               	movlw	159
 10300  004BEA  0100               	movlb	0	; () banked
 10301  004BEC  6F75               	movwf	??_toupper& (0+255),b
 10302  004BEE  0EFF               	movlw	255
 10303  004BF0  6F76               	movwf	(??_toupper+1)& (0+255),b
 10304  004BF2  C073  F077         	movff	toupper@c,??_toupper+2
 10305  004BF6  C074  F078         	movff	toupper@c+1,??_toupper+3
 10306  004BFA  5175               	movf	??_toupper& (0+255),w,b
 10307  004BFC  2777               	addwf	(??_toupper+2)& (0+255),f,b
 10308  004BFE  5176               	movf	(??_toupper+1)& (0+255),w,b
 10309  004C00  2378               	addwfc	(??_toupper+3)& (0+255),f,b
 10310  004C02  5178               	movf	(??_toupper+3)& (0+255),w,b
 10311  004C04  E10A               	bnz	u7390
 10312  004C06  0E1A               	movlw	26
 10313  004C08  5D77               	subwf	(??_toupper+2)& (0+255),w,b
 10314  004C0A  A0D8               	btfss	status,0,c
 10315  004C0C  EF0A  F026         	goto	u7391
 10316  004C10  EF0D  F026         	goto	u7390
 10317  004C14                     u7391:
 10318  004C14  0E01               	movlw	1
 10319  004C16  EF0E  F026         	goto	u7400
 10320  004C1A                     u7390:
 10321  004C1A  0E00               	movlw	0
 10322  004C1C                     u7400:
 10323  004C1C  6F79               	movwf	_toupper$2511& (0+255),b
 10324  004C1E  6B7A               	clrf	(_toupper$2511+1)& (0+255),b
 10325  004C20                     
 10326                           ; BSR set to: 0
 10327  004C20  5179               	movf	_toupper$2511& (0+255),w,b
 10328  004C22  117A               	iorwf	(_toupper$2511+1)& (0+255),w,b
 10329  004C24  B4D8               	btfsc	status,2,c
 10330  004C26  EF17  F026         	goto	u7411
 10331  004C2A  EF19  F026         	goto	u7410
 10332  004C2E                     u7411:
 10333  004C2E  EF1F  F026         	goto	l1705
 10334  004C32                     u7410:
 10335  004C32                     
 10336                           ; BSR set to: 0
 10337  004C32  0E5F               	movlw	95
 10338  004C34  1573               	andwf	toupper@c& (0+255),w,b
 10339  004C36  6F73               	movwf	?_toupper& (0+255),b
 10340  004C38  6B74               	clrf	(?_toupper+1)& (0+255),b
 10341  004C3A  EF23  F026         	goto	l1710
 10342  004C3E                     l1705:
 10343                           
 10344                           ; BSR set to: 0
 10345  004C3E  C073  F073         	movff	toupper@c,?_toupper
 10346  004C42  C074  F074         	movff	toupper@c+1,?_toupper+1
 10347  004C46                     l1710:
 10348                           
 10349                           ; BSR set to: 0
 10350  004C46  0012               	return		;funcret
 10351  004C48                     __end_of_toupper:
 10352                           	opt callstack 0
 10353                           
 10354 ;; *************** function _islower *****************
 10355 ;; Defined at:
 10356 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  c               2   13[BANK0 ] int 
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;		None
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  2   13[BANK0 ] int 
 10363 ;; Registers used:
 10364 ;;		wreg, status,2, status,0
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10370 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10372 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10373 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10374 ;;Total ram usage:        6 bytes
 10375 ;; Hardware stack levels used:    1
 10376 ;; Hardware stack levels required when called:    7
 10377 ;; This function calls:
 10378 ;;		Nothing
 10379 ;; This function is called by:
 10380 ;;		_toupper
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text38
 10385  004FB2                     __ptext38:
 10386                           	opt callstack 0
 10387  004FB2                     _islower:
 10388                           	opt callstack 17
 10389  004FB2  0E9F               	movlw	159
 10390  004FB4  0100               	movlb	0	; () banked
 10391  004FB6  6F6F               	movwf	??_islower& (0+255),b
 10392  004FB8  0EFF               	movlw	255
 10393  004FBA  6F70               	movwf	(??_islower+1)& (0+255),b
 10394  004FBC  C06D  F071         	movff	islower@c,??_islower+2
 10395  004FC0  C06E  F072         	movff	islower@c+1,??_islower+3
 10396  004FC4  516F               	movf	??_islower& (0+255),w,b
 10397  004FC6  2771               	addwf	(??_islower+2)& (0+255),f,b
 10398  004FC8  5170               	movf	(??_islower+1)& (0+255),w,b
 10399  004FCA  2372               	addwfc	(??_islower+3)& (0+255),f,b
 10400  004FCC  5172               	movf	(??_islower+3)& (0+255),w,b
 10401  004FCE  E10A               	bnz	u7270
 10402  004FD0  0E1A               	movlw	26
 10403  004FD2  5D71               	subwf	(??_islower+2)& (0+255),w,b
 10404  004FD4  A0D8               	btfss	status,0,c
 10405  004FD6  EFEF  F027         	goto	u7271
 10406  004FDA  EFF2  F027         	goto	u7270
 10407  004FDE                     u7271:
 10408  004FDE  0E01               	movlw	1
 10409  004FE0  EFF3  F027         	goto	u7280
 10410  004FE4                     u7270:
 10411  004FE4  0E00               	movlw	0
 10412  004FE6                     u7280:
 10413  004FE6  6F6D               	movwf	?_islower& (0+255),b
 10414  004FE8  6B6E               	clrf	(?_islower+1)& (0+255),b
 10415  004FEA                     
 10416                           ; BSR set to: 0
 10417  004FEA  0012               	return		;funcret
 10418  004FEC                     __end_of_islower:
 10419                           	opt callstack 0
 10420                           
 10421 ;; *************** function _isupper *****************
 10422 ;; Defined at:
 10423 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;  c               2   13[BANK0 ] int 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  2   13[BANK0 ] int 
 10430 ;; Registers used:
 10431 ;;		wreg, status,2, status,0
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10441 ;;Total ram usage:        6 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    7
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_xtoa
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text39
 10452  004FEC                     __ptext39:
 10453                           	opt callstack 0
 10454  004FEC                     _isupper:
 10455                           	opt callstack 18
 10456  004FEC  0EBF               	movlw	191
 10457  004FEE  0100               	movlb	0	; () banked
 10458  004FF0  6F6F               	movwf	??_isupper& (0+255),b
 10459  004FF2  0EFF               	movlw	255
 10460  004FF4  6F70               	movwf	(??_isupper+1)& (0+255),b
 10461  004FF6  C06D  F071         	movff	isupper@c,??_isupper+2
 10462  004FFA  C06E  F072         	movff	isupper@c+1,??_isupper+3
 10463  004FFE  516F               	movf	??_isupper& (0+255),w,b
 10464  005000  2771               	addwf	(??_isupper+2)& (0+255),f,b
 10465  005002  5170               	movf	(??_isupper+1)& (0+255),w,b
 10466  005004  2372               	addwfc	(??_isupper+3)& (0+255),f,b
 10467  005006  5172               	movf	(??_isupper+3)& (0+255),w,b
 10468  005008  E10A               	bnz	u7350
 10469  00500A  0E1A               	movlw	26
 10470  00500C  5D71               	subwf	(??_isupper+2)& (0+255),w,b
 10471  00500E  A0D8               	btfss	status,0,c
 10472  005010  EF0C  F028         	goto	u7351
 10473  005014  EF0F  F028         	goto	u7350
 10474  005018                     u7351:
 10475  005018  0E01               	movlw	1
 10476  00501A  EF10  F028         	goto	u7360
 10477  00501E                     u7350:
 10478  00501E  0E00               	movlw	0
 10479  005020                     u7360:
 10480  005020  6F6D               	movwf	?_isupper& (0+255),b
 10481  005022  6B6E               	clrf	(?_isupper+1)& (0+255),b
 10482  005024                     
 10483                           ; BSR set to: 0
 10484  005024  0012               	return		;funcret
 10485  005026                     __end_of_isupper:
 10486                           	opt callstack 0
 10487                           
 10488 ;; *************** function _isalpha *****************
 10489 ;; Defined at:
 10490 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  c               2   13[BANK0 ] int 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;		None
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  2   13[BANK0 ] int 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10507 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10508 ;;Total ram usage:        6 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    7
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_xtoa
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text40
 10519  004F74                     __ptext40:
 10520                           	opt callstack 0
 10521  004F74                     _isalpha:
 10522                           	opt callstack 18
 10523  004F74  0E9F               	movlw	159
 10524  004F76  0100               	movlb	0	; () banked
 10525  004F78  6F6F               	movwf	??_isalpha& (0+255),b
 10526  004F7A  0EFF               	movlw	255
 10527  004F7C  6F70               	movwf	(??_isalpha+1)& (0+255),b
 10528  004F7E  0E20               	movlw	32
 10529  004F80  116D               	iorwf	isalpha@c& (0+255),w,b
 10530  004F82  6F71               	movwf	(??_isalpha+2)& (0+255),b
 10531  004F84  0E00               	movlw	0
 10532  004F86  116E               	iorwf	(isalpha@c+1)& (0+255),w,b
 10533  004F88  6F72               	movwf	(??_isalpha+3)& (0+255),b
 10534  004F8A  516F               	movf	??_isalpha& (0+255),w,b
 10535  004F8C  2771               	addwf	(??_isalpha+2)& (0+255),f,b
 10536  004F8E  5170               	movf	(??_isalpha+1)& (0+255),w,b
 10537  004F90  2372               	addwfc	(??_isalpha+3)& (0+255),f,b
 10538  004F92  5172               	movf	(??_isalpha+3)& (0+255),w,b
 10539  004F94  E10A               	bnz	u7370
 10540  004F96  0E1A               	movlw	26
 10541  004F98  5D71               	subwf	(??_isalpha+2)& (0+255),w,b
 10542  004F9A  A0D8               	btfss	status,0,c
 10543  004F9C  EFD2  F027         	goto	u7371
 10544  004FA0  EFD5  F027         	goto	u7370
 10545  004FA4                     u7371:
 10546  004FA4  0E01               	movlw	1
 10547  004FA6  EFD6  F027         	goto	u7380
 10548  004FAA                     u7370:
 10549  004FAA  0E00               	movlw	0
 10550  004FAC                     u7380:
 10551  004FAC  6F6D               	movwf	?_isalpha& (0+255),b
 10552  004FAE  6B6E               	clrf	(?_isalpha+1)& (0+255),b
 10553  004FB0                     
 10554                           ; BSR set to: 0
 10555  004FB0  0012               	return		;funcret
 10556  004FB2                     __end_of_isalpha:
 10557                           	opt callstack 0
 10558                           
 10559 ;; *************** function _utoa *****************
 10560 ;; Defined at:
 10561 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10562 ;; Parameters:    Size  Location     Type
 10563 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
 10564 ;;		 -> vsnprintf@f(6), NULL(0), 
 10565 ;;  d               8   44[BANK0 ] unsigned long long 
 10566 ;; Auto vars:     Size  Location     Type
 10567 ;;  n               8   64[BANK0 ] unsigned long long 
 10568 ;;  i               2   72[BANK0 ] int 
 10569 ;;  w               2   62[BANK0 ] int 
 10570 ;;  p               2   60[BANK0 ] int 
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  2   42[BANK0 ] int 
 10573 ;; Registers used:
 10574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10580 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10581 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10582 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10583 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10584 ;;Total ram usage:       32 bytes
 10585 ;; Hardware stack levels used:    1
 10586 ;; Hardware stack levels required when called:   12
 10587 ;; This function calls:
 10588 ;;		___lodiv
 10589 ;;		___lomod
 10590 ;;		_pad
 10591 ;; This function is called by:
 10592 ;;		_vfpfcnvrt
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text41
 10597  002E38                     __ptext41:
 10598                           	opt callstack 0
 10599  002E38                     _utoa:
 10600                           	opt callstack 14
 10601  002E38                     
 10602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 10603  002E38  0100               	movlb	0	; () banked
 10604  002E3A  BFEB               	btfsc	(_prec+1)& (0+255),7,b
 10605  002E3C  EF22  F017         	goto	u8141
 10606  002E40  EF24  F017         	goto	u8140
 10607  002E44                     u8141:
 10608  002E44  EF25  F017         	goto	l7166
 10609  002E48                     u8140:
 10610  002E48                     
 10611                           ; BSR set to: 0
 10612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 10613  002E48  93EC               	bcf	_flags& (0+255),1,b
 10614  002E4A                     l7166:
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 10618  002E4A  BFEB               	btfsc	(_prec+1)& (0+255),7,b
 10619  002E4C  EF32  F017         	goto	u8150
 10620  002E50  51EB               	movf	(_prec+1)& (0+255),w,b
 10621  002E52  E106               	bnz	u8151
 10622  002E54  05EA               	decf	_prec& (0+255),w,b
 10623  002E56  B0D8               	btfsc	status,0,c
 10624  002E58  EF30  F017         	goto	u8151
 10625  002E5C  EF32  F017         	goto	u8150
 10626  002E60                     u8151:
 10627  002E60  EF38  F017         	goto	l791
 10628  002E64                     u8150:
 10629  002E64                     
 10630                           ; BSR set to: 0
 10631  002E64  0E00               	movlw	0
 10632  002E66  6F9D               	movwf	(utoa@p+1)& (0+255),b
 10633  002E68  0E01               	movlw	1
 10634  002E6A  6F9C               	movwf	utoa@p& (0+255),b
 10635  002E6C  EF3C  F017         	goto	l793
 10636  002E70                     l791:
 10637                           
 10638                           ; BSR set to: 0
 10639  002E70  C0EA  F09C         	movff	_prec,utoa@p
 10640  002E74  C0EB  F09D         	movff	_prec+1,utoa@p+1
 10641  002E78                     l793:
 10642                           
 10643                           ; BSR set to: 0
 10644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 10645  002E78  C0E8  F09E         	movff	_width,utoa@w
 10646  002E7C  C0E9  F09F         	movff	_width+1,utoa@w+1
 10647                           
 10648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 10649  002E80  C08C  F0A0         	movff	utoa@d,utoa@n
 10650  002E84  C08D  F0A1         	movff	utoa@d+1,utoa@n+1
 10651  002E88  C08E  F0A2         	movff	utoa@d+2,utoa@n+2
 10652  002E8C  C08F  F0A3         	movff	utoa@d+3,utoa@n+3
 10653  002E90  C090  F0A4         	movff	utoa@d+4,utoa@n+4
 10654  002E94  C091  F0A5         	movff	utoa@d+5,utoa@n+5
 10655  002E98  C092  F0A6         	movff	utoa@d+6,utoa@n+6
 10656  002E9C  C093  F0A7         	movff	utoa@d+7,utoa@n+7
 10657  002EA0                     
 10658                           ; BSR set to: 0
 10659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 10660  002EA0  0E00               	movlw	0
 10661  002EA2  6FA9               	movwf	(utoa@i+1)& (0+255),b
 10662  002EA4  0E1F               	movlw	31
 10663  002EA6  6FA8               	movwf	utoa@i& (0+255),b
 10664  002EA8                     
 10665                           ; BSR set to: 0
 10666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 10667  002EA8  0E00               	movlw	0
 10668  002EAA  0101               	movlb	1	; () banked
 10669  002EAC  6F32               	movwf	(_dbuf+31)& (0+255),b
 10670                           
 10671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10672  002EAE  EFD0  F017         	goto	l7184
 10673  002EB2                     l7174:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 10677  002EB2  07A8               	decf	utoa@i& (0+255),f,b
 10678  002EB4  A0D8               	btfss	status,0,c
 10679  002EB6  07A9               	decf	(utoa@i+1)& (0+255),f,b
 10680  002EB8                     
 10681                           ; BSR set to: 0
 10682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 10683  002EB8  0E13               	movlw	low _dbuf
 10684  002EBA  25A8               	addwf	utoa@i& (0+255),w,b
 10685  002EBC  6ED9               	movwf	fsr2l,c
 10686  002EBE  0E01               	movlw	high _dbuf
 10687  002EC0  21A9               	addwfc	(utoa@i+1)& (0+255),w,b
 10688  002EC2  6EDA               	movwf	fsr2h,c
 10689  002EC4  C0A0  F06D         	movff	utoa@n,___lomod@dividend
 10690  002EC8  C0A1  F06E         	movff	utoa@n+1,___lomod@dividend+1
 10691  002ECC  C0A2  F06F         	movff	utoa@n+2,___lomod@dividend+2
 10692  002ED0  C0A3  F070         	movff	utoa@n+3,___lomod@dividend+3
 10693  002ED4  C0A4  F071         	movff	utoa@n+4,___lomod@dividend+4
 10694  002ED8  C0A5  F072         	movff	utoa@n+5,___lomod@dividend+5
 10695  002EDC  C0A6  F073         	movff	utoa@n+6,___lomod@dividend+6
 10696  002EE0  C0A7  F074         	movff	utoa@n+7,___lomod@dividend+7
 10697  002EE4  0E0A               	movlw	10
 10698  002EE6  6F75               	movwf	___lomod@divisor& (0+255),b
 10699  002EE8  0E00               	movlw	0
 10700  002EEA  6F76               	movwf	(___lomod@divisor+1)& (0+255),b
 10701  002EEC  0E00               	movlw	0
 10702  002EEE  6F77               	movwf	(___lomod@divisor+2)& (0+255),b
 10703  002EF0  0E00               	movlw	0
 10704  002EF2  6F78               	movwf	(___lomod@divisor+3)& (0+255),b
 10705  002EF4  0E00               	movlw	0
 10706  002EF6  6F79               	movwf	(___lomod@divisor+4)& (0+255),b
 10707  002EF8  0E00               	movlw	0
 10708  002EFA  6F7A               	movwf	(___lomod@divisor+5)& (0+255),b
 10709  002EFC  0E00               	movlw	0
 10710  002EFE  6F7B               	movwf	(___lomod@divisor+6)& (0+255),b
 10711  002F00  0E00               	movlw	0
 10712  002F02  6F7C               	movwf	(___lomod@divisor+7)& (0+255),b
 10713  002F04  EC84  F023         	call	___lomod	;wreg free
 10714  002F08  C06D  F094         	movff	?___lomod,??_utoa
 10715  002F0C  C06E  F095         	movff	?___lomod+1,??_utoa+1
 10716  002F10  C06F  F096         	movff	?___lomod+2,??_utoa+2
 10717  002F14  C070  F097         	movff	?___lomod+3,??_utoa+3
 10718  002F18  C071  F098         	movff	?___lomod+4,??_utoa+4
 10719  002F1C  C072  F099         	movff	?___lomod+5,??_utoa+5
 10720  002F20  C073  F09A         	movff	?___lomod+6,??_utoa+6
 10721  002F24  C074  F09B         	movff	?___lomod+7,??_utoa+7
 10722  002F28  0100               	movlb	0	; () banked
 10723  002F2A  5194               	movf	??_utoa& (0+255),w,b
 10724  002F2C  0F30               	addlw	48
 10725  002F2E  6EDF               	movwf	indf2,c
 10726  002F30                     
 10727                           ; BSR set to: 0
 10728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 10729  002F30  079C               	decf	utoa@p& (0+255),f,b
 10730  002F32  A0D8               	btfss	status,0,c
 10731  002F34  079D               	decf	(utoa@p+1)& (0+255),f,b
 10732  002F36                     
 10733                           ; BSR set to: 0
 10734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 10735  002F36  079E               	decf	utoa@w& (0+255),f,b
 10736  002F38  A0D8               	btfss	status,0,c
 10737  002F3A  079F               	decf	(utoa@w+1)& (0+255),f,b
 10738  002F3C                     
 10739                           ; BSR set to: 0
 10740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 10741  002F3C  C0A0  F06D         	movff	utoa@n,___lodiv@dividend
 10742  002F40  C0A1  F06E         	movff	utoa@n+1,___lodiv@dividend+1
 10743  002F44  C0A2  F06F         	movff	utoa@n+2,___lodiv@dividend+2
 10744  002F48  C0A3  F070         	movff	utoa@n+3,___lodiv@dividend+3
 10745  002F4C  C0A4  F071         	movff	utoa@n+4,___lodiv@dividend+4
 10746  002F50  C0A5  F072         	movff	utoa@n+5,___lodiv@dividend+5
 10747  002F54  C0A6  F073         	movff	utoa@n+6,___lodiv@dividend+6
 10748  002F58  C0A7  F074         	movff	utoa@n+7,___lodiv@dividend+7
 10749  002F5C  0E0A               	movlw	10
 10750  002F5E  6F75               	movwf	___lodiv@divisor& (0+255),b
 10751  002F60  0E00               	movlw	0
 10752  002F62  6F76               	movwf	(___lodiv@divisor+1)& (0+255),b
 10753  002F64  0E00               	movlw	0
 10754  002F66  6F77               	movwf	(___lodiv@divisor+2)& (0+255),b
 10755  002F68  0E00               	movlw	0
 10756  002F6A  6F78               	movwf	(___lodiv@divisor+3)& (0+255),b
 10757  002F6C  0E00               	movlw	0
 10758  002F6E  6F79               	movwf	(___lodiv@divisor+4)& (0+255),b
 10759  002F70  0E00               	movlw	0
 10760  002F72  6F7A               	movwf	(___lodiv@divisor+5)& (0+255),b
 10761  002F74  0E00               	movlw	0
 10762  002F76  6F7B               	movwf	(___lodiv@divisor+6)& (0+255),b
 10763  002F78  0E00               	movlw	0
 10764  002F7A  6F7C               	movwf	(___lodiv@divisor+7)& (0+255),b
 10765  002F7C  EC24  F022         	call	___lodiv	;wreg free
 10766  002F80  C06D  F0A0         	movff	?___lodiv,utoa@n
 10767  002F84  C06E  F0A1         	movff	?___lodiv+1,utoa@n+1
 10768  002F88  C06F  F0A2         	movff	?___lodiv+2,utoa@n+2
 10769  002F8C  C070  F0A3         	movff	?___lodiv+3,utoa@n+3
 10770  002F90  C071  F0A4         	movff	?___lodiv+4,utoa@n+4
 10771  002F94  C072  F0A5         	movff	?___lodiv+5,utoa@n+5
 10772  002F98  C073  F0A6         	movff	?___lodiv+6,utoa@n+6
 10773  002F9C  C074  F0A7         	movff	?___lodiv+7,utoa@n+7
 10774  002FA0                     l7184:
 10775                           
 10776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10777  002FA0  0100               	movlb	0	; () banked
 10778  002FA2  51A8               	movf	utoa@i& (0+255),w,b
 10779  002FA4  11A9               	iorwf	(utoa@i+1)& (0+255),w,b
 10780  002FA6  B4D8               	btfsc	status,2,c
 10781  002FA8  EFD8  F017         	goto	u8161
 10782  002FAC  EFDA  F017         	goto	u8160
 10783  002FB0                     u8161:
 10784  002FB0  EF0A  F018         	goto	l7194
 10785  002FB4                     u8160:
 10786  002FB4                     
 10787                           ; BSR set to: 0
 10788  002FB4  51A0               	movf	utoa@n& (0+255),w,b
 10789  002FB6  11A1               	iorwf	(utoa@n+1)& (0+255),w,b
 10790  002FB8  11A2               	iorwf	(utoa@n+2)& (0+255),w,b
 10791  002FBA  11A3               	iorwf	(utoa@n+3)& (0+255),w,b
 10792  002FBC  11A4               	iorwf	(utoa@n+4)& (0+255),w,b
 10793  002FBE  11A5               	iorwf	(utoa@n+5)& (0+255),w,b
 10794  002FC0  11A6               	iorwf	(utoa@n+6)& (0+255),w,b
 10795  002FC2  11A7               	iorwf	(utoa@n+7)& (0+255),w,b
 10796  002FC4  A4D8               	btfss	status,2,c
 10797  002FC6  EFE7  F017         	goto	u8171
 10798  002FCA  EFE9  F017         	goto	u8170
 10799  002FCE                     u8171:
 10800  002FCE  EF59  F017         	goto	l7174
 10801  002FD2                     u8170:
 10802  002FD2                     
 10803                           ; BSR set to: 0
 10804  002FD2  BF9D               	btfsc	(utoa@p+1)& (0+255),7,b
 10805  002FD4  EFF6  F017         	goto	u8180
 10806  002FD8  519D               	movf	(utoa@p+1)& (0+255),w,b
 10807  002FDA  E106               	bnz	u8181
 10808  002FDC  059C               	decf	utoa@p& (0+255),w,b
 10809  002FDE  B0D8               	btfsc	status,0,c
 10810  002FE0  EFF4  F017         	goto	u8181
 10811  002FE4  EFF6  F017         	goto	u8180
 10812  002FE8                     u8181:
 10813  002FE8  EF59  F017         	goto	l7174
 10814  002FEC                     u8180:
 10815  002FEC                     
 10816                           ; BSR set to: 0
 10817  002FEC  BF9F               	btfsc	(utoa@w+1)& (0+255),7,b
 10818  002FEE  EF01  F018         	goto	u8191
 10819  002FF2  519F               	movf	(utoa@w+1)& (0+255),w,b
 10820  002FF4  E108               	bnz	u8190
 10821  002FF6  059E               	decf	utoa@w& (0+255),w,b
 10822  002FF8  A0D8               	btfss	status,0,c
 10823  002FFA  EF01  F018         	goto	u8191
 10824  002FFE  EF03  F018         	goto	u8190
 10825  003002                     u8191:
 10826  003002  EF0A  F018         	goto	l7194
 10827  003006                     u8190:
 10828  003006                     
 10829                           ; BSR set to: 0
 10830  003006  B3EC               	btfsc	_flags& (0+255),1,b
 10831  003008  EF08  F018         	goto	u8201
 10832  00300C  EF0A  F018         	goto	u8200
 10833  003010                     u8201:
 10834  003010  EF59  F017         	goto	l7174
 10835  003014                     u8200:
 10836  003014                     l7194:
 10837                           
 10838                           ; BSR set to: 0
 10839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 10840  003014  C08A  F07F         	movff	utoa@fp,pad@fp
 10841  003018  C08B  F080         	movff	utoa@fp+1,pad@fp+1
 10842  00301C  0E13               	movlw	low _dbuf
 10843  00301E  25A8               	addwf	utoa@i& (0+255),w,b
 10844  003020  6F81               	movwf	pad@buf& (0+255),b
 10845  003022  0E01               	movlw	high _dbuf
 10846  003024  21A9               	addwfc	(utoa@i+1)& (0+255),w,b
 10847  003026  6F82               	movwf	(pad@buf+1)& (0+255),b
 10848  003028  C09E  F083         	movff	utoa@w,pad@p
 10849  00302C  C09F  F084         	movff	utoa@w+1,pad@p+1
 10850  003030  EC53  F024         	call	_pad	;wreg free
 10851  003034  C07F  F08A         	movff	?_pad,?_utoa
 10852  003038  C080  F08B         	movff	?_pad+1,?_utoa+1
 10853  00303C  0012               	return		;funcret
 10854  00303E                     __end_of_utoa:
 10855                           	opt callstack 0
 10856                           
 10857 ;; *************** function ___lomod *****************
 10858 ;; Defined at:
 10859 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  dividend        8   13[BANK0 ] unsigned long long 
 10862 ;;  divisor         8   21[BANK0 ] unsigned long long 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  counter         1   29[BANK0 ] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  8   13[BANK0 ] unsigned long long 
 10867 ;; Registers used:
 10868 ;;		wreg, status,2, status,0
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10874 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;Total ram usage:       17 bytes
 10879 ;; Hardware stack levels used:    1
 10880 ;; Hardware stack levels required when called:    7
 10881 ;; This function calls:
 10882 ;;		Nothing
 10883 ;; This function is called by:
 10884 ;;		_utoa
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           	psect	text42
 10889  004708                     __ptext42:
 10890                           	opt callstack 0
 10891  004708                     ___lomod:
 10892                           	opt callstack 18
 10893  004708  0100               	movlb	0	; () banked
 10894  00470A  5175               	movf	___lomod@divisor& (0+255),w,b
 10895  00470C  1176               	iorwf	(___lomod@divisor+1)& (0+255),w,b
 10896  00470E  1177               	iorwf	(___lomod@divisor+2)& (0+255),w,b
 10897  004710  1178               	iorwf	(___lomod@divisor+3)& (0+255),w,b
 10898  004712  1179               	iorwf	(___lomod@divisor+4)& (0+255),w,b
 10899  004714  117A               	iorwf	(___lomod@divisor+5)& (0+255),w,b
 10900  004716  117B               	iorwf	(___lomod@divisor+6)& (0+255),w,b
 10901  004718  117C               	iorwf	(___lomod@divisor+7)& (0+255),w,b
 10902  00471A  B4D8               	btfsc	status,2,c
 10903  00471C  EF92  F023         	goto	u7611
 10904  004720  EF94  F023         	goto	u7610
 10905  004724                     u7611:
 10906  004724  EFDC  F023         	goto	l1364
 10907  004728                     u7610:
 10908  004728                     
 10909                           ; BSR set to: 0
 10910  004728  0E01               	movlw	1
 10911  00472A  6F7D               	movwf	___lomod@counter& (0+255),b
 10912  00472C  EFA2  F023         	goto	l6924
 10913  004730                     l6922:
 10914                           
 10915                           ; BSR set to: 0
 10916  004730  90D8               	bcf	status,0,c
 10917  004732  3775               	rlcf	___lomod@divisor& (0+255),f,b
 10918  004734  3776               	rlcf	(___lomod@divisor+1)& (0+255),f,b
 10919  004736  3777               	rlcf	(___lomod@divisor+2)& (0+255),f,b
 10920  004738  3778               	rlcf	(___lomod@divisor+3)& (0+255),f,b
 10921  00473A  3779               	rlcf	(___lomod@divisor+4)& (0+255),f,b
 10922  00473C  377A               	rlcf	(___lomod@divisor+5)& (0+255),f,b
 10923  00473E  377B               	rlcf	(___lomod@divisor+6)& (0+255),f,b
 10924  004740  377C               	rlcf	(___lomod@divisor+7)& (0+255),f,b
 10925  004742  2B7D               	incf	___lomod@counter& (0+255),f,b
 10926  004744                     l6924:
 10927                           
 10928                           ; BSR set to: 0
 10929  004744  AF7C               	btfss	(___lomod@divisor+7)& (0+255),7,b
 10930  004746  EFA7  F023         	goto	u7621
 10931  00474A  EFA9  F023         	goto	u7620
 10932  00474E                     u7621:
 10933  00474E  EF98  F023         	goto	l6922
 10934  004752                     u7620:
 10935  004752                     l6926:
 10936                           
 10937                           ; BSR set to: 0
 10938  004752  5175               	movf	___lomod@divisor& (0+255),w,b
 10939  004754  5D6D               	subwf	___lomod@dividend& (0+255),w,b
 10940  004756  5176               	movf	(___lomod@divisor+1)& (0+255),w,b
 10941  004758  596E               	subwfb	(___lomod@dividend+1)& (0+255),w,b
 10942  00475A  5177               	movf	(___lomod@divisor+2)& (0+255),w,b
 10943  00475C  596F               	subwfb	(___lomod@dividend+2)& (0+255),w,b
 10944  00475E  5178               	movf	(___lomod@divisor+3)& (0+255),w,b
 10945  004760  5970               	subwfb	(___lomod@dividend+3)& (0+255),w,b
 10946  004762  5179               	movf	(___lomod@divisor+4)& (0+255),w,b
 10947  004764  5971               	subwfb	(___lomod@dividend+4)& (0+255),w,b
 10948  004766  517A               	movf	(___lomod@divisor+5)& (0+255),w,b
 10949  004768  5972               	subwfb	(___lomod@dividend+5)& (0+255),w,b
 10950  00476A  517B               	movf	(___lomod@divisor+6)& (0+255),w,b
 10951  00476C  5973               	subwfb	(___lomod@dividend+6)& (0+255),w,b
 10952  00476E  517C               	movf	(___lomod@divisor+7)& (0+255),w,b
 10953  004770  5974               	subwfb	(___lomod@dividend+7)& (0+255),w,b
 10954  004772  A0D8               	btfss	status,0,c
 10955  004774  EFBE  F023         	goto	u7631
 10956  004778  EFC0  F023         	goto	u7630
 10957  00477C                     u7631:
 10958  00477C  EFD0  F023         	goto	l6930
 10959  004780                     u7630:
 10960  004780                     
 10961                           ; BSR set to: 0
 10962  004780  5175               	movf	___lomod@divisor& (0+255),w,b
 10963  004782  5F6D               	subwf	___lomod@dividend& (0+255),f,b
 10964  004784  5176               	movf	(___lomod@divisor+1)& (0+255),w,b
 10965  004786  5B6E               	subwfb	(___lomod@dividend+1)& (0+255),f,b
 10966  004788  5177               	movf	(___lomod@divisor+2)& (0+255),w,b
 10967  00478A  5B6F               	subwfb	(___lomod@dividend+2)& (0+255),f,b
 10968  00478C  5178               	movf	(___lomod@divisor+3)& (0+255),w,b
 10969  00478E  5B70               	subwfb	(___lomod@dividend+3)& (0+255),f,b
 10970  004790  5179               	movf	(___lomod@divisor+4)& (0+255),w,b
 10971  004792  5B71               	subwfb	(___lomod@dividend+4)& (0+255),f,b
 10972  004794  517A               	movf	(___lomod@divisor+5)& (0+255),w,b
 10973  004796  5B72               	subwfb	(___lomod@dividend+5)& (0+255),f,b
 10974  004798  517B               	movf	(___lomod@divisor+6)& (0+255),w,b
 10975  00479A  5B73               	subwfb	(___lomod@dividend+6)& (0+255),f,b
 10976  00479C  517C               	movf	(___lomod@divisor+7)& (0+255),w,b
 10977  00479E  5B74               	subwfb	(___lomod@dividend+7)& (0+255),f,b
 10978  0047A0                     l6930:
 10979                           
 10980                           ; BSR set to: 0
 10981  0047A0  90D8               	bcf	status,0,c
 10982  0047A2  337C               	rrcf	(___lomod@divisor+7)& (0+255),f,b
 10983  0047A4  337B               	rrcf	(___lomod@divisor+6)& (0+255),f,b
 10984  0047A6  337A               	rrcf	(___lomod@divisor+5)& (0+255),f,b
 10985  0047A8  3379               	rrcf	(___lomod@divisor+4)& (0+255),f,b
 10986  0047AA  3378               	rrcf	(___lomod@divisor+3)& (0+255),f,b
 10987  0047AC  3377               	rrcf	(___lomod@divisor+2)& (0+255),f,b
 10988  0047AE  3376               	rrcf	(___lomod@divisor+1)& (0+255),f,b
 10989  0047B0  3375               	rrcf	___lomod@divisor& (0+255),f,b
 10990  0047B2                     
 10991                           ; BSR set to: 0
 10992  0047B2  2F7D               	decfsz	___lomod@counter& (0+255),f,b
 10993  0047B4  EFA9  F023         	goto	l6926
 10994  0047B8                     l1364:
 10995                           
 10996                           ; BSR set to: 0
 10997  0047B8  C06D  F06D         	movff	___lomod@dividend,?___lomod
 10998  0047BC  C06E  F06E         	movff	___lomod@dividend+1,?___lomod+1
 10999  0047C0  C06F  F06F         	movff	___lomod@dividend+2,?___lomod+2
 11000  0047C4  C070  F070         	movff	___lomod@dividend+3,?___lomod+3
 11001  0047C8  C071  F071         	movff	___lomod@dividend+4,?___lomod+4
 11002  0047CC  C072  F072         	movff	___lomod@dividend+5,?___lomod+5
 11003  0047D0  C073  F073         	movff	___lomod@dividend+6,?___lomod+6
 11004  0047D4  C074  F074         	movff	___lomod@dividend+7,?___lomod+7
 11005  0047D8                     
 11006                           ; BSR set to: 0
 11007  0047D8  0012               	return		;funcret
 11008  0047DA                     __end_of___lomod:
 11009                           	opt callstack 0
 11010                           
 11011 ;; *************** function ___lodiv *****************
 11012 ;; Defined at:
 11013 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 11014 ;; Parameters:    Size  Location     Type
 11015 ;;  dividend        8   13[BANK0 ] unsigned long long 
 11016 ;;  divisor         8   21[BANK0 ] unsigned long long 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  quotient        8   29[BANK0 ] unsigned long long 
 11019 ;;  counter         1   37[BANK0 ] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  8   13[BANK0 ] unsigned long long 
 11022 ;; Registers used:
 11023 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11029 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11030 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11032 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;Total ram usage:       25 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    7
 11036 ;; This function calls:
 11037 ;;		Nothing
 11038 ;; This function is called by:
 11039 ;;		_utoa
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text43
 11044  004448                     __ptext43:
 11045                           	opt callstack 0
 11046  004448                     ___lodiv:
 11047                           	opt callstack 18
 11048  004448  EE20  F07D         	lfsr	2,___lodiv@quotient
 11049  00444C  0E07               	movlw	7
 11050  00444E                     u7571:
 11051  00444E  6ADE               	clrf	postinc2,c
 11052  004450  06E8               	decf	wreg,f,c
 11053  004452  E2FD               	bc	u7571
 11054  004454  0100               	movlb	0	; () banked
 11055  004456  5175               	movf	___lodiv@divisor& (0+255),w,b
 11056  004458  1176               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
 11057  00445A  1177               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
 11058  00445C  1178               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
 11059  00445E  1179               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
 11060  004460  117A               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
 11061  004462  117B               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
 11062  004464  117C               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
 11063  004466  B4D8               	btfsc	status,2,c
 11064  004468  EF38  F022         	goto	u7581
 11065  00446C  EF3A  F022         	goto	u7580
 11066  004470                     u7581:
 11067  004470  EF8C  F022         	goto	l1354
 11068  004474                     u7580:
 11069  004474                     
 11070                           ; BSR set to: 0
 11071  004474  0E01               	movlw	1
 11072  004476  6F85               	movwf	___lodiv@counter& (0+255),b
 11073  004478  EF48  F022         	goto	l6904
 11074  00447C                     l6902:
 11075                           
 11076                           ; BSR set to: 0
 11077  00447C  90D8               	bcf	status,0,c
 11078  00447E  3775               	rlcf	___lodiv@divisor& (0+255),f,b
 11079  004480  3776               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
 11080  004482  3777               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
 11081  004484  3778               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
 11082  004486  3779               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
 11083  004488  377A               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
 11084  00448A  377B               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
 11085  00448C  377C               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
 11086  00448E  2B85               	incf	___lodiv@counter& (0+255),f,b
 11087  004490                     l6904:
 11088                           
 11089                           ; BSR set to: 0
 11090  004490  AF7C               	btfss	(___lodiv@divisor+7)& (0+255),7,b
 11091  004492  EF4D  F022         	goto	u7591
 11092  004496  EF4F  F022         	goto	u7590
 11093  00449A                     u7591:
 11094  00449A  EF3E  F022         	goto	l6902
 11095  00449E                     u7590:
 11096  00449E                     l6906:
 11097                           
 11098                           ; BSR set to: 0
 11099  00449E  90D8               	bcf	status,0,c
 11100  0044A0  377D               	rlcf	___lodiv@quotient& (0+255),f,b
 11101  0044A2  377E               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
 11102  0044A4  377F               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
 11103  0044A6  3780               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
 11104  0044A8  3781               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
 11105  0044AA  3782               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
 11106  0044AC  3783               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
 11107  0044AE  3784               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
 11108  0044B0                     
 11109                           ; BSR set to: 0
 11110  0044B0  5175               	movf	___lodiv@divisor& (0+255),w,b
 11111  0044B2  5D6D               	subwf	___lodiv@dividend& (0+255),w,b
 11112  0044B4  5176               	movf	(___lodiv@divisor+1)& (0+255),w,b
 11113  0044B6  596E               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
 11114  0044B8  5177               	movf	(___lodiv@divisor+2)& (0+255),w,b
 11115  0044BA  596F               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
 11116  0044BC  5178               	movf	(___lodiv@divisor+3)& (0+255),w,b
 11117  0044BE  5970               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
 11118  0044C0  5179               	movf	(___lodiv@divisor+4)& (0+255),w,b
 11119  0044C2  5971               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
 11120  0044C4  517A               	movf	(___lodiv@divisor+5)& (0+255),w,b
 11121  0044C6  5972               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
 11122  0044C8  517B               	movf	(___lodiv@divisor+6)& (0+255),w,b
 11123  0044CA  5973               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
 11124  0044CC  517C               	movf	(___lodiv@divisor+7)& (0+255),w,b
 11125  0044CE  5974               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
 11126  0044D0  A0D8               	btfss	status,0,c
 11127  0044D2  EF6D  F022         	goto	u7601
 11128  0044D6  EF6F  F022         	goto	u7600
 11129  0044DA                     u7601:
 11130  0044DA  EF80  F022         	goto	l6914
 11131  0044DE                     u7600:
 11132  0044DE                     
 11133                           ; BSR set to: 0
 11134  0044DE  5175               	movf	___lodiv@divisor& (0+255),w,b
 11135  0044E0  5F6D               	subwf	___lodiv@dividend& (0+255),f,b
 11136  0044E2  5176               	movf	(___lodiv@divisor+1)& (0+255),w,b
 11137  0044E4  5B6E               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
 11138  0044E6  5177               	movf	(___lodiv@divisor+2)& (0+255),w,b
 11139  0044E8  5B6F               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
 11140  0044EA  5178               	movf	(___lodiv@divisor+3)& (0+255),w,b
 11141  0044EC  5B70               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
 11142  0044EE  5179               	movf	(___lodiv@divisor+4)& (0+255),w,b
 11143  0044F0  5B71               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
 11144  0044F2  517A               	movf	(___lodiv@divisor+5)& (0+255),w,b
 11145  0044F4  5B72               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
 11146  0044F6  517B               	movf	(___lodiv@divisor+6)& (0+255),w,b
 11147  0044F8  5B73               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
 11148  0044FA  517C               	movf	(___lodiv@divisor+7)& (0+255),w,b
 11149  0044FC  5B74               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
 11150  0044FE                     
 11151                           ; BSR set to: 0
 11152  0044FE  817D               	bsf	___lodiv@quotient& (0+255),0,b
 11153  004500                     l6914:
 11154                           
 11155                           ; BSR set to: 0
 11156  004500  90D8               	bcf	status,0,c
 11157  004502  337C               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
 11158  004504  337B               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
 11159  004506  337A               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
 11160  004508  3379               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
 11161  00450A  3378               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
 11162  00450C  3377               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
 11163  00450E  3376               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
 11164  004510  3375               	rrcf	___lodiv@divisor& (0+255),f,b
 11165  004512                     
 11166                           ; BSR set to: 0
 11167  004512  2F85               	decfsz	___lodiv@counter& (0+255),f,b
 11168  004514  EF4F  F022         	goto	l6906
 11169  004518                     l1354:
 11170                           
 11171                           ; BSR set to: 0
 11172  004518  C07D  F06D         	movff	___lodiv@quotient,?___lodiv
 11173  00451C  C07E  F06E         	movff	___lodiv@quotient+1,?___lodiv+1
 11174  004520  C07F  F06F         	movff	___lodiv@quotient+2,?___lodiv+2
 11175  004524  C080  F070         	movff	___lodiv@quotient+3,?___lodiv+3
 11176  004528  C081  F071         	movff	___lodiv@quotient+4,?___lodiv+4
 11177  00452C  C082  F072         	movff	___lodiv@quotient+5,?___lodiv+5
 11178  004530  C083  F073         	movff	___lodiv@quotient+6,?___lodiv+6
 11179  004534  C084  F074         	movff	___lodiv@quotient+7,?___lodiv+7
 11180  004538                     
 11181                           ; BSR set to: 0
 11182  004538  0012               	return		;funcret
 11183  00453A                     __end_of___lodiv:
 11184                           	opt callstack 0
 11185                           
 11186 ;; *************** function _strncmp *****************
 11187 ;; Defined at:
 11188 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;  _l              2   13[BANK0 ] PTR const unsigned char 
 11191 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
 11192 ;;		 -> STR_10(10), STR_9(14), STR_7(12), STR_6(44), 
 11193 ;;		 -> STR_5(28), STR_4(12), STR_3(45), STR_2(12), 
 11194 ;;		 -> STR_1(71), 
 11195 ;;  _r              2   15[BANK0 ] PTR const unsigned char 
 11196 ;;		 -> STR_111(3), STR_107(3), STR_102(3), STR_98(3), 
 11197 ;;		 -> STR_93(4), STR_89(4), STR_84(3), STR_79(3), 
 11198 ;;		 -> STR_74(4), STR_69(3), STR_64(3), STR_59(4), 
 11199 ;;		 -> STR_54(3), STR_49(3), STR_44(4), STR_39(3), 
 11200 ;;		 -> STR_35(3), STR_30(3), STR_26(3), STR_21(4), 
 11201 ;;		 -> STR_17(4), 
 11202 ;;  n               2   17[BANK0 ] unsigned int 
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;  r               2   22[BANK0 ] PTR const unsigned char 
 11205 ;;		 -> STR_111(3), STR_107(3), STR_102(3), STR_98(3), 
 11206 ;;		 -> STR_93(4), STR_89(4), STR_84(3), STR_79(3), 
 11207 ;;		 -> STR_74(4), STR_69(3), STR_64(3), STR_59(4), 
 11208 ;;		 -> STR_54(3), STR_49(3), STR_44(4), STR_39(3), 
 11209 ;;		 -> STR_35(3), STR_30(3), STR_26(3), STR_21(4), 
 11210 ;;		 -> STR_17(4), 
 11211 ;;  l               2   20[BANK0 ] PTR const unsigned char 
 11212 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
 11213 ;;		 -> STR_10(10), STR_9(14), STR_7(12), STR_6(44), 
 11214 ;;		 -> STR_5(28), STR_4(12), STR_3(45), STR_2(12), 
 11215 ;;		 -> STR_1(71), 
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  2   13[BANK0 ] int 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11225 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11226 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11227 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11228 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11229 ;;Total ram usage:       11 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    7
 11232 ;; This function calls:
 11233 ;;		Nothing
 11234 ;; This function is called by:
 11235 ;;		_vfpfcnvrt
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text44
 11240  00453A                     __ptext44:
 11241                           	opt callstack 0
 11242  00453A                     _strncmp:
 11243                           	opt callstack 19
 11244  00453A  C06D  F074         	movff	strncmp@_l,strncmp@l
 11245  00453E  C06E  F075         	movff	strncmp@_l+1,strncmp@l+1
 11246  004542  C06F  F076         	movff	strncmp@_r,strncmp@r
 11247  004546  C070  F077         	movff	strncmp@_r+1,strncmp@r+1
 11248  00454A  0100               	movlb	0	; () banked
 11249  00454C  0771               	decf	strncmp@n& (0+255),f,b
 11250  00454E  A0D8               	btfss	status,0,c
 11251  004550  0772               	decf	(strncmp@n+1)& (0+255),f,b
 11252  004552  2971               	incf	strncmp@n& (0+255),w,b
 11253  004554  E106               	bnz	u8381
 11254  004556  2972               	incf	(strncmp@n+1)& (0+255),w,b
 11255  004558  A4D8               	btfss	status,2,c
 11256  00455A  EFB1  F022         	goto	u8381
 11257  00455E  EFB3  F022         	goto	u8380
 11258  004562                     u8381:
 11259  004562  EFC0  F022         	goto	l7272
 11260  004566                     u8380:
 11261  004566                     
 11262                           ; BSR set to: 0
 11263  004566  0E00               	movlw	0
 11264  004568  6F6E               	movwf	(?_strncmp+1)& (0+255),b
 11265  00456A  0E00               	movlw	0
 11266  00456C  6F6D               	movwf	?_strncmp& (0+255),b
 11267  00456E  EF12  F023         	goto	l1695
 11268  004572                     l7270:
 11269                           
 11270                           ; BSR set to: 0
 11271  004572  4B74               	infsnz	strncmp@l& (0+255),f,b
 11272  004574  2B75               	incf	(strncmp@l+1)& (0+255),f,b
 11273  004576  4B76               	infsnz	strncmp@r& (0+255),f,b
 11274  004578  2B77               	incf	(strncmp@r+1)& (0+255),f,b
 11275  00457A  0771               	decf	strncmp@n& (0+255),f,b
 11276  00457C  A0D8               	btfss	status,0,c
 11277  00457E  0772               	decf	(strncmp@n+1)& (0+255),f,b
 11278  004580                     l7272:
 11279                           
 11280                           ; BSR set to: 0
 11281  004580  C074  FFF6         	movff	strncmp@l,tblptrl
 11282  004584  C075  FFF7         	movff	strncmp@l+1,tblptrh
 11283  004588                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11284  004588  6AF8               	clrf	tblptru,c
 11285  00458A                     	endif
 11286  00458A                     	if	0	;tblptru may be non-zero
 11287  00458A                     	endif
 11288  00458A  0008               	tblrd		*
 11289  00458C  50F5               	movf	tablat,w,c
 11290  00458E  0900               	iorlw	0
 11291  004590  B4D8               	btfsc	status,2,c
 11292  004592  EFCD  F022         	goto	u8391
 11293  004596  EFCF  F022         	goto	u8390
 11294  00459A                     u8391:
 11295  00459A  EFFE  F022         	goto	l7280
 11296  00459E                     u8390:
 11297  00459E                     
 11298                           ; BSR set to: 0
 11299  00459E  C076  FFF6         	movff	strncmp@r,tblptrl
 11300  0045A2  C077  FFF7         	movff	strncmp@r+1,tblptrh
 11301  0045A6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11302  0045A6  6AF8               	clrf	tblptru,c
 11303  0045A8                     	endif
 11304  0045A8                     	if	0	;tblptru may be non-zero
 11305  0045A8                     	endif
 11306  0045A8  0008               	tblrd		*
 11307  0045AA  50F5               	movf	tablat,w,c
 11308  0045AC  0900               	iorlw	0
 11309  0045AE  B4D8               	btfsc	status,2,c
 11310  0045B0  EFDC  F022         	goto	u8401
 11311  0045B4  EFDE  F022         	goto	u8400
 11312  0045B8                     u8401:
 11313  0045B8  EFFE  F022         	goto	l7280
 11314  0045BC                     u8400:
 11315  0045BC                     
 11316                           ; BSR set to: 0
 11317  0045BC  5171               	movf	strncmp@n& (0+255),w,b
 11318  0045BE  1172               	iorwf	(strncmp@n+1)& (0+255),w,b
 11319  0045C0  B4D8               	btfsc	status,2,c
 11320  0045C2  EFE5  F022         	goto	u8411
 11321  0045C6  EFE7  F022         	goto	u8410
 11322  0045CA                     u8411:
 11323  0045CA  EFFE  F022         	goto	l7280
 11324  0045CE                     u8410:
 11325  0045CE                     
 11326                           ; BSR set to: 0
 11327  0045CE  C074  FFF6         	movff	strncmp@l,tblptrl
 11328  0045D2  C075  FFF7         	movff	strncmp@l+1,tblptrh
 11329  0045D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11330  0045D6  6AF8               	clrf	tblptru,c
 11331  0045D8                     	endif
 11332  0045D8                     	if	0	;tblptru may be non-zero
 11333  0045D8                     	endif
 11334  0045D8  0008               	tblrd		*
 11335  0045DA  CFF5 F073          	movff	tablat,??_strncmp
 11336  0045DE  C076  FFF6         	movff	strncmp@r,tblptrl
 11337  0045E2  C077  FFF7         	movff	strncmp@r+1,tblptrh
 11338  0045E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11339  0045E6  6AF8               	clrf	tblptru,c
 11340  0045E8                     	endif
 11341  0045E8                     	if	0	;tblptru may be non-zero
 11342  0045E8                     	endif
 11343  0045E8  0008               	tblrd		*
 11344  0045EA  50F5               	movf	tablat,w,c
 11345  0045EC  1973               	xorwf	??_strncmp& (0+255),w,b
 11346  0045EE  B4D8               	btfsc	status,2,c
 11347  0045F0  EFFC  F022         	goto	u8421
 11348  0045F4  EFFE  F022         	goto	u8420
 11349  0045F8                     u8421:
 11350  0045F8  EFB9  F022         	goto	l7270
 11351  0045FC                     u8420:
 11352  0045FC                     l7280:
 11353                           
 11354                           ; BSR set to: 0
 11355  0045FC  C074  FFF6         	movff	strncmp@l,tblptrl
 11356  004600  C075  FFF7         	movff	strncmp@l+1,tblptrh
 11357  004604                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11358  004604  6AF8               	clrf	tblptru,c
 11359  004606                     	endif
 11360  004606                     	if	0	;tblptru may be non-zero
 11361  004606                     	endif
 11362  004606  0008               	tblrd		*
 11363  004608  CFF5 F073          	movff	tablat,??_strncmp
 11364  00460C  C076  FFF6         	movff	strncmp@r,tblptrl
 11365  004610  C077  FFF7         	movff	strncmp@r+1,tblptrh
 11366  004614                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11367  004614  6AF8               	clrf	tblptru,c
 11368  004616                     	endif
 11369  004616                     	if	0	;tblptru may be non-zero
 11370  004616                     	endif
 11371  004616  0008               	tblrd		*
 11372  004618  50F5               	movf	tablat,w,c
 11373  00461A  5D73               	subwf	??_strncmp& (0+255),w,b
 11374  00461C  6F6D               	movwf	?_strncmp& (0+255),b
 11375  00461E  6B6E               	clrf	(?_strncmp+1)& (0+255),b
 11376  004620  A0D8               	btfss	status,0,c
 11377  004622  076E               	decf	(?_strncmp+1)& (0+255),f,b
 11378  004624                     l1695:
 11379                           
 11380                           ; BSR set to: 0
 11381  004624  0012               	return		;funcret
 11382  004626                     __end_of_strncmp:
 11383                           	opt callstack 0
 11384                           
 11385 ;; *************** function _stoa *****************
 11386 ;; Defined at:
 11387 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  fp              2   24[BANK0 ] PTR struct _IO_FILE
 11390 ;;		 -> vsnprintf@f(6), NULL(0), 
 11391 ;;  s               2   26[BANK0 ] PTR unsigned char 
 11392 ;;		 -> ?_snprintf(2), ?_printf(2), 
 11393 ;; Auto vars:     Size  Location     Type
 11394 ;;  nuls            7   29[BANK0 ] unsigned char [7]
 11395 ;;  l               2   44[BANK0 ] int 
 11396 ;;  p               2   42[BANK0 ] int 
 11397 ;;  cp              2   40[BANK0 ] PTR unsigned char 
 11398 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 11399 ;;  w               2   38[BANK0 ] int 
 11400 ;;  i               2   36[BANK0 ] int 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  2   24[BANK0 ] int 
 11403 ;; Registers used:
 11404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;Total ram usage:       22 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:   10
 11417 ;; This function calls:
 11418 ;;		_fputc
 11419 ;;		_strlen
 11420 ;; This function is called by:
 11421 ;;		_vfpfcnvrt
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text45
 11426  00378C                     __ptext45:
 11427                           	opt callstack 0
 11428  00378C                     _stoa:
 11429                           	opt callstack 16
 11430  00378C                     
 11431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11432  00378C  EE21  F089         	lfsr	2,stoa@F1152
 11433  003790  EE10  F07D         	lfsr	1,stoa@nuls
 11434  003794  0E06               	movlw	6
 11435  003796                     u8051:
 11436  003796  CFDB FFE3          	movff	plusw2,plusw1
 11437  00379A  06E8               	decf	wreg,f,c
 11438  00379C  E2FC               	bc	u8051
 11439  00379E                     
 11440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11441  00379E  C07A  F088         	movff	stoa@s,stoa@cp
 11442  0037A2  C07B  F089         	movff	stoa@s+1,stoa@cp+1
 11443  0037A6                     
 11444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11445  0037A6  0100               	movlb	0	; () banked
 11446  0037A8  5188               	movf	stoa@cp& (0+255),w,b
 11447  0037AA  1189               	iorwf	(stoa@cp+1)& (0+255),w,b
 11448  0037AC  A4D8               	btfss	status,2,c
 11449  0037AE  EFDB  F01B         	goto	u8061
 11450  0037B2  EFDD  F01B         	goto	u8060
 11451  0037B6                     u8061:
 11452  0037B6  EFE1  F01B         	goto	l7128
 11453  0037BA                     u8060:
 11454  0037BA                     
 11455                           ; BSR set to: 0
 11456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11457  0037BA  0E7D               	movlw	low stoa@nuls
 11458  0037BC  6F88               	movwf	stoa@cp& (0+255),b
 11459  0037BE  0E00               	movlw	high stoa@nuls
 11460  0037C0  6F89               	movwf	(stoa@cp+1)& (0+255),b
 11461  0037C2                     l7128:
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11465  0037C2  C088  F06D         	movff	stoa@cp,strlen@s
 11466  0037C6  C089  F06E         	movff	stoa@cp+1,strlen@s+1
 11467  0037CA  EC13  F028         	call	_strlen	;wreg free
 11468  0037CE  C06D  F08C         	movff	?_strlen,stoa@l
 11469  0037D2  C06E  F08D         	movff	?_strlen+1,stoa@l+1
 11470  0037D6                     
 11471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 11472  0037D6  C0EA  F08A         	movff	_prec,stoa@p
 11473  0037DA  C0EB  F08B         	movff	_prec+1,stoa@p+1
 11474  0037DE                     
 11475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 11476  0037DE  0100               	movlb	0	; () banked
 11477  0037E0  BF8B               	btfsc	(stoa@p+1)& (0+255),7,b
 11478  0037E2  EFF5  F01B         	goto	u8071
 11479  0037E6  EFF7  F01B         	goto	u8070
 11480  0037EA                     u8071:
 11481  0037EA  EF0C  F01C         	goto	l772
 11482  0037EE                     u8070:
 11483  0037EE                     
 11484                           ; BSR set to: 0
 11485  0037EE  518C               	movf	stoa@l& (0+255),w,b
 11486  0037F0  5D8A               	subwf	stoa@p& (0+255),w,b
 11487  0037F2  518B               	movf	(stoa@p+1)& (0+255),w,b
 11488  0037F4  0A80               	xorlw	128
 11489  0037F6  6F7C               	movwf	??_stoa& (0+255),b
 11490  0037F8  518D               	movf	(stoa@l+1)& (0+255),w,b
 11491  0037FA  0A80               	xorlw	128
 11492  0037FC  597C               	subwfb	??_stoa& (0+255),w,b
 11493  0037FE  A0D8               	btfss	status,0,c
 11494  003800  EF04  F01C         	goto	u8081
 11495  003804  EF06  F01C         	goto	u8080
 11496  003808                     u8081:
 11497  003808  EF08  F01C         	goto	l770
 11498  00380C                     u8080:
 11499  00380C  EF0C  F01C         	goto	l772
 11500  003810                     l770:
 11501                           
 11502                           ; BSR set to: 0
 11503  003810  C08A  F08C         	movff	stoa@p,stoa@l
 11504  003814  C08B  F08D         	movff	stoa@p+1,stoa@l+1
 11505  003818                     l772:
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 11509  003818  C08C  F08A         	movff	stoa@l,stoa@p
 11510  00381C  C08D  F08B         	movff	stoa@l+1,stoa@p+1
 11511                           
 11512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 11513  003820  C0E8  F086         	movff	_width,stoa@w
 11514  003824  C0E9  F087         	movff	_width+1,stoa@w+1
 11515                           
 11516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 11517  003828  B1EC               	btfsc	_flags& (0+255),0,b
 11518  00382A  EF19  F01C         	goto	u8091
 11519  00382E  EF1B  F01C         	goto	u8090
 11520  003832                     u8091:
 11521  003832  EF39  F01C         	goto	l7144
 11522  003836                     u8090:
 11523  003836  EF2A  F01C         	goto	l7142
 11524  00383A                     l7138:
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 11528  00383A  0E00               	movlw	0
 11529  00383C  6F70               	movwf	(fputc@c+1)& (0+255),b
 11530  00383E  0E20               	movlw	32
 11531  003840  6F6F               	movwf	fputc@c& (0+255),b
 11532  003842  C078  F071         	movff	stoa@fp,fputc@fp
 11533  003846  C079  F072         	movff	stoa@fp+1,fputc@fp+1
 11534  00384A  ECED  F023         	call	_fputc	;wreg free
 11535  00384E                     
 11536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 11537  00384E  0100               	movlb	0	; () banked
 11538  003850  4B8C               	infsnz	stoa@l& (0+255),f,b
 11539  003852  2B8D               	incf	(stoa@l+1)& (0+255),f,b
 11540  003854                     l7142:
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 11544  003854  5186               	movf	stoa@w& (0+255),w,b
 11545  003856  5D8C               	subwf	stoa@l& (0+255),w,b
 11546  003858  518D               	movf	(stoa@l+1)& (0+255),w,b
 11547  00385A  0A80               	xorlw	128
 11548  00385C  6F7C               	movwf	??_stoa& (0+255),b
 11549  00385E  5187               	movf	(stoa@w+1)& (0+255),w,b
 11550  003860  0A80               	xorlw	128
 11551  003862  597C               	subwfb	??_stoa& (0+255),w,b
 11552  003864  A0D8               	btfss	status,0,c
 11553  003866  EF37  F01C         	goto	u8101
 11554  00386A  EF39  F01C         	goto	u8100
 11555  00386E                     u8101:
 11556  00386E  EF1D  F01C         	goto	l7138
 11557  003872                     u8100:
 11558  003872                     l7144:
 11559                           
 11560                           ; BSR set to: 0
 11561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 11562  003872  0E00               	movlw	0
 11563  003874  6F85               	movwf	(stoa@i+1)& (0+255),b
 11564  003876  0E00               	movlw	0
 11565  003878  6F84               	movwf	stoa@i& (0+255),b
 11566                           
 11567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11568  00387A  EF53  F01C         	goto	l7152
 11569  00387E                     l7146:
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 11573  00387E  C088  FFD9         	movff	stoa@cp,fsr2l
 11574  003882  C089  FFDA         	movff	stoa@cp+1,fsr2h
 11575  003886  50DF               	movf	indf2,w,c
 11576  003888  6F7C               	movwf	??_stoa& (0+255),b
 11577  00388A  517C               	movf	??_stoa& (0+255),w,b
 11578  00388C  6F6F               	movwf	fputc@c& (0+255),b
 11579  00388E  6B70               	clrf	(fputc@c+1)& (0+255),b
 11580  003890  C078  F071         	movff	stoa@fp,fputc@fp
 11581  003894  C079  F072         	movff	stoa@fp+1,fputc@fp+1
 11582  003898  ECED  F023         	call	_fputc	;wreg free
 11583  00389C                     
 11584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 11585  00389C  0100               	movlb	0	; () banked
 11586  00389E  4B88               	infsnz	stoa@cp& (0+255),f,b
 11587  0038A0  2B89               	incf	(stoa@cp+1)& (0+255),f,b
 11588  0038A2                     
 11589                           ; BSR set to: 0
 11590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 11591  0038A2  4B84               	infsnz	stoa@i& (0+255),f,b
 11592  0038A4  2B85               	incf	(stoa@i+1)& (0+255),f,b
 11593  0038A6                     l7152:
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11597  0038A6  518A               	movf	stoa@p& (0+255),w,b
 11598  0038A8  5D84               	subwf	stoa@i& (0+255),w,b
 11599  0038AA  5185               	movf	(stoa@i+1)& (0+255),w,b
 11600  0038AC  0A80               	xorlw	128
 11601  0038AE  6F7C               	movwf	??_stoa& (0+255),b
 11602  0038B0  518B               	movf	(stoa@p+1)& (0+255),w,b
 11603  0038B2  0A80               	xorlw	128
 11604  0038B4  597C               	subwfb	??_stoa& (0+255),w,b
 11605  0038B6  A0D8               	btfss	status,0,c
 11606  0038B8  EF60  F01C         	goto	u8111
 11607  0038BC  EF62  F01C         	goto	u8110
 11608  0038C0                     u8111:
 11609  0038C0  EF3F  F01C         	goto	l7146
 11610  0038C4                     u8110:
 11611  0038C4                     
 11612                           ; BSR set to: 0
 11613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 11614  0038C4  A1EC               	btfss	_flags& (0+255),0,b
 11615  0038C6  EF67  F01C         	goto	u8121
 11616  0038CA  EF69  F01C         	goto	u8120
 11617  0038CE                     u8121:
 11618  0038CE  EF87  F01C         	goto	l782
 11619  0038D2                     u8120:
 11620  0038D2  EF78  F01C         	goto	l7160
 11621  0038D6                     l7156:
 11622                           
 11623                           ; BSR set to: 0
 11624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 11625  0038D6  0E00               	movlw	0
 11626  0038D8  6F70               	movwf	(fputc@c+1)& (0+255),b
 11627  0038DA  0E20               	movlw	32
 11628  0038DC  6F6F               	movwf	fputc@c& (0+255),b
 11629  0038DE  C078  F071         	movff	stoa@fp,fputc@fp
 11630  0038E2  C079  F072         	movff	stoa@fp+1,fputc@fp+1
 11631  0038E6  ECED  F023         	call	_fputc	;wreg free
 11632  0038EA                     
 11633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 11634  0038EA  0100               	movlb	0	; () banked
 11635  0038EC  4B8C               	infsnz	stoa@l& (0+255),f,b
 11636  0038EE  2B8D               	incf	(stoa@l+1)& (0+255),f,b
 11637  0038F0                     l7160:
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11641  0038F0  5186               	movf	stoa@w& (0+255),w,b
 11642  0038F2  5D8C               	subwf	stoa@l& (0+255),w,b
 11643  0038F4  518D               	movf	(stoa@l+1)& (0+255),w,b
 11644  0038F6  0A80               	xorlw	128
 11645  0038F8  6F7C               	movwf	??_stoa& (0+255),b
 11646  0038FA  5187               	movf	(stoa@w+1)& (0+255),w,b
 11647  0038FC  0A80               	xorlw	128
 11648  0038FE  597C               	subwfb	??_stoa& (0+255),w,b
 11649  003900  A0D8               	btfss	status,0,c
 11650  003902  EF85  F01C         	goto	u8131
 11651  003906  EF87  F01C         	goto	u8130
 11652  00390A                     u8131:
 11653  00390A  EF6B  F01C         	goto	l7156
 11654  00390E                     u8130:
 11655  00390E                     l782:
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11659  00390E  C08C  F078         	movff	stoa@l,?_stoa
 11660  003912  C08D  F079         	movff	stoa@l+1,?_stoa+1
 11661  003916                     
 11662                           ; BSR set to: 0
 11663  003916  0012               	return		;funcret
 11664  003918                     __end_of_stoa:
 11665                           	opt callstack 0
 11666                           
 11667 ;; *************** function _otoa *****************
 11668 ;; Defined at:
 11669 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11670 ;; Parameters:    Size  Location     Type
 11671 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
 11672 ;;		 -> vsnprintf@f(6), NULL(0), 
 11673 ;;  d               8   44[BANK0 ] unsigned long long 
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;  n               8   66[BANK0 ] unsigned long long 
 11676 ;;  i               2   74[BANK0 ] int 
 11677 ;;  w               2   64[BANK0 ] int 
 11678 ;;  t               2   62[BANK0 ] int 
 11679 ;;  p               2   60[BANK0 ] int 
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  2   42[BANK0 ] int 
 11682 ;; Registers used:
 11683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11689 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11692 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11693 ;;Total ram usage:       34 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:   12
 11696 ;; This function calls:
 11697 ;;		_pad
 11698 ;; This function is called by:
 11699 ;;		_vfpfcnvrt
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           	psect	text46
 11704  003232                     __ptext46:
 11705                           	opt callstack 0
 11706  003232                     _otoa:
 11707                           	opt callstack 14
 11708  003232                     
 11709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
 11710  003232  0100               	movlb	0	; () banked
 11711  003234  BFEB               	btfsc	(_prec+1)& (0+255),7,b
 11712  003236  EF1F  F019         	goto	u7951
 11713  00323A  EF21  F019         	goto	u7950
 11714  00323E                     u7951:
 11715  00323E  EF22  F019         	goto	l7076
 11716  003242                     u7950:
 11717  003242                     
 11718                           ; BSR set to: 0
 11719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
 11720  003242  93EC               	bcf	_flags& (0+255),1,b
 11721  003244                     l7076:
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
 11725  003244  BFEB               	btfsc	(_prec+1)& (0+255),7,b
 11726  003246  EF2F  F019         	goto	u7960
 11727  00324A  51EB               	movf	(_prec+1)& (0+255),w,b
 11728  00324C  E106               	bnz	u7961
 11729  00324E  05EA               	decf	_prec& (0+255),w,b
 11730  003250  B0D8               	btfsc	status,0,c
 11731  003252  EF2D  F019         	goto	u7961
 11732  003256  EF2F  F019         	goto	u7960
 11733  00325A                     u7961:
 11734  00325A  EF35  F019         	goto	l752
 11735  00325E                     u7960:
 11736  00325E                     
 11737                           ; BSR set to: 0
 11738  00325E  0E00               	movlw	0
 11739  003260  6F9D               	movwf	(otoa@p+1)& (0+255),b
 11740  003262  0E01               	movlw	1
 11741  003264  6F9C               	movwf	otoa@p& (0+255),b
 11742  003266  EF39  F019         	goto	l754
 11743  00326A                     l752:
 11744                           
 11745                           ; BSR set to: 0
 11746  00326A  C0EA  F09C         	movff	_prec,otoa@p
 11747  00326E  C0EB  F09D         	movff	_prec+1,otoa@p+1
 11748  003272                     l754:
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
 11752  003272  C0E8  F0A0         	movff	_width,otoa@w
 11753  003276  C0E9  F0A1         	movff	_width+1,otoa@w+1
 11754                           
 11755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
 11756  00327A  C08C  F0A2         	movff	otoa@d,otoa@n
 11757  00327E  C08D  F0A3         	movff	otoa@d+1,otoa@n+1
 11758  003282  C08E  F0A4         	movff	otoa@d+2,otoa@n+2
 11759  003286  C08F  F0A5         	movff	otoa@d+3,otoa@n+3
 11760  00328A  C090  F0A6         	movff	otoa@d+4,otoa@n+4
 11761  00328E  C091  F0A7         	movff	otoa@d+5,otoa@n+5
 11762  003292  C092  F0A8         	movff	otoa@d+6,otoa@n+6
 11763  003296  C093  F0A9         	movff	otoa@d+7,otoa@n+7
 11764  00329A                     
 11765                           ; BSR set to: 0
 11766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
 11767  00329A  0E00               	movlw	0
 11768  00329C  6FAB               	movwf	(otoa@i+1)& (0+255),b
 11769  00329E  0E1F               	movlw	31
 11770  0032A0  6FAA               	movwf	otoa@i& (0+255),b
 11771  0032A2                     
 11772                           ; BSR set to: 0
 11773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
 11774  0032A2  0E00               	movlw	0
 11775  0032A4  0101               	movlb	1	; () banked
 11776  0032A6  6F32               	movwf	(_dbuf+31)& (0+255),b
 11777  0032A8                     
 11778                           ; BSR set to: 1
 11779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
 11780  0032A8  0E00               	movlw	0
 11781  0032AA  0100               	movlb	0	; () banked
 11782  0032AC  6F9F               	movwf	(otoa@t+1)& (0+255),b
 11783  0032AE  0E00               	movlw	0
 11784  0032B0  6F9E               	movwf	otoa@t& (0+255),b
 11785                           
 11786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11787  0032B2  EFA0  F019         	goto	l7098
 11788  0032B6                     l7086:
 11789                           
 11790                           ; BSR set to: 0
 11791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
 11792  0032B6  07AA               	decf	otoa@i& (0+255),f,b
 11793  0032B8  A0D8               	btfss	status,0,c
 11794  0032BA  07AB               	decf	(otoa@i+1)& (0+255),f,b
 11795  0032BC                     
 11796                           ; BSR set to: 0
 11797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
 11798  0032BC  0E07               	movlw	7
 11799  0032BE  15A2               	andwf	otoa@n& (0+255),w,b
 11800  0032C0  6F9E               	movwf	otoa@t& (0+255),b
 11801  0032C2  6B9F               	clrf	(otoa@t+1)& (0+255),b
 11802  0032C4                     
 11803                           ; BSR set to: 0
 11804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
 11805  0032C4  0E13               	movlw	low _dbuf
 11806  0032C6  25AA               	addwf	otoa@i& (0+255),w,b
 11807  0032C8  6ED9               	movwf	fsr2l,c
 11808  0032CA  0E01               	movlw	high _dbuf
 11809  0032CC  21AB               	addwfc	(otoa@i+1)& (0+255),w,b
 11810  0032CE  6EDA               	movwf	fsr2h,c
 11811  0032D0  519E               	movf	otoa@t& (0+255),w,b
 11812  0032D2  0F30               	addlw	48
 11813  0032D4  6EDF               	movwf	indf2,c
 11814  0032D6                     
 11815                           ; BSR set to: 0
 11816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
 11817  0032D6  079C               	decf	otoa@p& (0+255),f,b
 11818  0032D8  A0D8               	btfss	status,0,c
 11819  0032DA  079D               	decf	(otoa@p+1)& (0+255),f,b
 11820  0032DC                     
 11821                           ; BSR set to: 0
 11822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
 11823  0032DC  07A0               	decf	otoa@w& (0+255),f,b
 11824  0032DE  A0D8               	btfss	status,0,c
 11825  0032E0  07A1               	decf	(otoa@w+1)& (0+255),f,b
 11826  0032E2                     
 11827                           ; BSR set to: 0
 11828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
 11829  0032E2  C0A2  F094         	movff	otoa@n,??_otoa
 11830  0032E6  C0A3  F095         	movff	otoa@n+1,??_otoa+1
 11831  0032EA  C0A4  F096         	movff	otoa@n+2,??_otoa+2
 11832  0032EE  C0A5  F097         	movff	otoa@n+3,??_otoa+3
 11833  0032F2  C0A6  F098         	movff	otoa@n+4,??_otoa+4
 11834  0032F6  C0A7  F099         	movff	otoa@n+5,??_otoa+5
 11835  0032FA  C0A8  F09A         	movff	otoa@n+6,??_otoa+6
 11836  0032FE  C0A9  F09B         	movff	otoa@n+7,??_otoa+7
 11837  003302  0E04               	movlw	4
 11838  003304  EF8D  F019         	goto	u7970
 11839  003308                     u7975:
 11840  003308  90D8               	bcf	status,0,c
 11841  00330A  339B               	rrcf	(??_otoa+7)& (0+255),f,b
 11842  00330C  339A               	rrcf	(??_otoa+6)& (0+255),f,b
 11843  00330E  3399               	rrcf	(??_otoa+5)& (0+255),f,b
 11844  003310  3398               	rrcf	(??_otoa+4)& (0+255),f,b
 11845  003312  3397               	rrcf	(??_otoa+3)& (0+255),f,b
 11846  003314  3396               	rrcf	(??_otoa+2)& (0+255),f,b
 11847  003316  3395               	rrcf	(??_otoa+1)& (0+255),f,b
 11848  003318  3394               	rrcf	??_otoa& (0+255),f,b
 11849  00331A                     u7970:
 11850  00331A  2EE8               	decfsz	wreg,f,c
 11851  00331C  EF84  F019         	goto	u7975
 11852  003320  C094  F0A2         	movff	??_otoa,otoa@n
 11853  003324  C095  F0A3         	movff	??_otoa+1,otoa@n+1
 11854  003328  C096  F0A4         	movff	??_otoa+2,otoa@n+2
 11855  00332C  C097  F0A5         	movff	??_otoa+3,otoa@n+3
 11856  003330  C098  F0A6         	movff	??_otoa+4,otoa@n+4
 11857  003334  C099  F0A7         	movff	??_otoa+5,otoa@n+5
 11858  003338  C09A  F0A8         	movff	??_otoa+6,otoa@n+6
 11859  00333C  C09B  F0A9         	movff	??_otoa+7,otoa@n+7
 11860  003340                     l7098:
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11864  003340  BFAB               	btfsc	(otoa@i+1)& (0+255),7,b
 11865  003342  EFAB  F019         	goto	u7981
 11866  003346  51AB               	movf	(otoa@i+1)& (0+255),w,b
 11867  003348  E108               	bnz	u7980
 11868  00334A  05AA               	decf	otoa@i& (0+255),w,b
 11869  00334C  A0D8               	btfss	status,0,c
 11870  00334E  EFAB  F019         	goto	u7981
 11871  003352  EFAD  F019         	goto	u7980
 11872  003356                     u7981:
 11873  003356  EFDD  F019         	goto	l761
 11874  00335A                     u7980:
 11875  00335A                     
 11876                           ; BSR set to: 0
 11877  00335A  51A2               	movf	otoa@n& (0+255),w,b
 11878  00335C  11A3               	iorwf	(otoa@n+1)& (0+255),w,b
 11879  00335E  11A4               	iorwf	(otoa@n+2)& (0+255),w,b
 11880  003360  11A5               	iorwf	(otoa@n+3)& (0+255),w,b
 11881  003362  11A6               	iorwf	(otoa@n+4)& (0+255),w,b
 11882  003364  11A7               	iorwf	(otoa@n+5)& (0+255),w,b
 11883  003366  11A8               	iorwf	(otoa@n+6)& (0+255),w,b
 11884  003368  11A9               	iorwf	(otoa@n+7)& (0+255),w,b
 11885  00336A  A4D8               	btfss	status,2,c
 11886  00336C  EFBA  F019         	goto	u7991
 11887  003370  EFBC  F019         	goto	u7990
 11888  003374                     u7991:
 11889  003374  EF5B  F019         	goto	l7086
 11890  003378                     u7990:
 11891  003378                     
 11892                           ; BSR set to: 0
 11893  003378  BF9D               	btfsc	(otoa@p+1)& (0+255),7,b
 11894  00337A  EFC9  F019         	goto	u8000
 11895  00337E  519D               	movf	(otoa@p+1)& (0+255),w,b
 11896  003380  E106               	bnz	u8001
 11897  003382  059C               	decf	otoa@p& (0+255),w,b
 11898  003384  B0D8               	btfsc	status,0,c
 11899  003386  EFC7  F019         	goto	u8001
 11900  00338A  EFC9  F019         	goto	u8000
 11901  00338E                     u8001:
 11902  00338E  EF5B  F019         	goto	l7086
 11903  003392                     u8000:
 11904  003392                     
 11905                           ; BSR set to: 0
 11906  003392  BFA1               	btfsc	(otoa@w+1)& (0+255),7,b
 11907  003394  EFD4  F019         	goto	u8011
 11908  003398  51A1               	movf	(otoa@w+1)& (0+255),w,b
 11909  00339A  E108               	bnz	u8010
 11910  00339C  05A0               	decf	otoa@w& (0+255),w,b
 11911  00339E  A0D8               	btfss	status,0,c
 11912  0033A0  EFD4  F019         	goto	u8011
 11913  0033A4  EFD6  F019         	goto	u8010
 11914  0033A8                     u8011:
 11915  0033A8  EFDD  F019         	goto	l761
 11916  0033AC                     u8010:
 11917  0033AC                     
 11918                           ; BSR set to: 0
 11919  0033AC  B3EC               	btfsc	_flags& (0+255),1,b
 11920  0033AE  EFDB  F019         	goto	u8021
 11921  0033B2  EFDD  F019         	goto	u8020
 11922  0033B6                     u8021:
 11923  0033B6  EF5B  F019         	goto	l7086
 11924  0033BA                     u8020:
 11925  0033BA                     l761:
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
 11929  0033BA  A9EC               	btfss	_flags& (0+255),4,b
 11930  0033BC  EFE2  F019         	goto	u8031
 11931  0033C0  EFE4  F019         	goto	u8030
 11932  0033C4                     u8031:
 11933  0033C4  EFFB  F019         	goto	l7116
 11934  0033C8                     u8030:
 11935  0033C8                     
 11936                           ; BSR set to: 0
 11937  0033C8  519E               	movf	otoa@t& (0+255),w,b
 11938  0033CA  119F               	iorwf	(otoa@t+1)& (0+255),w,b
 11939  0033CC  B4D8               	btfsc	status,2,c
 11940  0033CE  EFEB  F019         	goto	u8041
 11941  0033D2  EFED  F019         	goto	u8040
 11942  0033D6                     u8041:
 11943  0033D6  EFFB  F019         	goto	l7116
 11944  0033DA                     u8040:
 11945  0033DA                     
 11946                           ; BSR set to: 0
 11947                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
 11948  0033DA  07AA               	decf	otoa@i& (0+255),f,b
 11949  0033DC  A0D8               	btfss	status,0,c
 11950  0033DE  07AB               	decf	(otoa@i+1)& (0+255),f,b
 11951  0033E0                     
 11952                           ; BSR set to: 0
 11953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
 11954  0033E0  0E13               	movlw	low _dbuf
 11955  0033E2  25AA               	addwf	otoa@i& (0+255),w,b
 11956  0033E4  6ED9               	movwf	fsr2l,c
 11957  0033E6  0E01               	movlw	high _dbuf
 11958  0033E8  21AB               	addwfc	(otoa@i+1)& (0+255),w,b
 11959  0033EA  6EDA               	movwf	fsr2h,c
 11960  0033EC  0E30               	movlw	48
 11961  0033EE  6EDF               	movwf	indf2,c
 11962  0033F0                     
 11963                           ; BSR set to: 0
 11964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
 11965  0033F0  07A0               	decf	otoa@w& (0+255),f,b
 11966  0033F2  A0D8               	btfss	status,0,c
 11967  0033F4  07A1               	decf	(otoa@w+1)& (0+255),f,b
 11968  0033F6                     l7116:
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
 11972  0033F6  C08A  F07F         	movff	otoa@fp,pad@fp
 11973  0033FA  C08B  F080         	movff	otoa@fp+1,pad@fp+1
 11974  0033FE  0E13               	movlw	low _dbuf
 11975  003400  25AA               	addwf	otoa@i& (0+255),w,b
 11976  003402  6F81               	movwf	pad@buf& (0+255),b
 11977  003404  0E01               	movlw	high _dbuf
 11978  003406  21AB               	addwfc	(otoa@i+1)& (0+255),w,b
 11979  003408  6F82               	movwf	(pad@buf+1)& (0+255),b
 11980  00340A  C0A0  F083         	movff	otoa@w,pad@p
 11981  00340E  C0A1  F084         	movff	otoa@w+1,pad@p+1
 11982  003412  EC53  F024         	call	_pad	;wreg free
 11983  003416  C07F  F08A         	movff	?_pad,?_otoa
 11984  00341A  C080  F08B         	movff	?_pad+1,?_otoa+1
 11985  00341E  0012               	return		;funcret
 11986  003420                     __end_of_otoa:
 11987                           	opt callstack 0
 11988                           
 11989 ;; *************** function _dtoa *****************
 11990 ;; Defined at:
 11991 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11992 ;; Parameters:    Size  Location     Type
 11993 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
 11994 ;;		 -> vsnprintf@f(6), NULL(0), 
 11995 ;;  d               8   44[BANK0 ] long long 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  n               8   68[BANK0 ] long long 
 11998 ;;  i               2   76[BANK0 ] int 
 11999 ;;  s               2   66[BANK0 ] int 
 12000 ;;  w               2   64[BANK0 ] int 
 12001 ;;  p               2   62[BANK0 ] int 
 12002 ;; Return value:  Size  Location     Type
 12003 ;;                  2   42[BANK0 ] int 
 12004 ;; Registers used:
 12005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12006 ;; Tracked objects:
 12007 ;;		On entry : 0/0
 12008 ;;		On exit  : 0/0
 12009 ;;		Unchanged: 0/0
 12010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12011 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12012 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;Total ram usage:       36 bytes
 12016 ;; Hardware stack levels used:    1
 12017 ;; Hardware stack levels required when called:   12
 12018 ;; This function calls:
 12019 ;;		___aodiv
 12020 ;;		___aomod
 12021 ;;		_abs
 12022 ;;		_pad
 12023 ;; This function is called by:
 12024 ;;		_vfpfcnvrt
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text47
 12029  0023C8                     __ptext47:
 12030                           	opt callstack 0
 12031  0023C8                     _dtoa:
 12032                           	opt callstack 14
 12033  0023C8                     
 12034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12035  0023C8  C08C  F0A4         	movff	dtoa@d,dtoa@n
 12036  0023CC  C08D  F0A5         	movff	dtoa@d+1,dtoa@n+1
 12037  0023D0  C08E  F0A6         	movff	dtoa@d+2,dtoa@n+2
 12038  0023D4  C08F  F0A7         	movff	dtoa@d+3,dtoa@n+3
 12039  0023D8  C090  F0A8         	movff	dtoa@d+4,dtoa@n+4
 12040  0023DC  C091  F0A9         	movff	dtoa@d+5,dtoa@n+5
 12041  0023E0  C092  F0AA         	movff	dtoa@d+6,dtoa@n+6
 12042  0023E4  C093  F0AB         	movff	dtoa@d+7,dtoa@n+7
 12043  0023E8                     
 12044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12045  0023E8  0100               	movlb	0	; () banked
 12046  0023EA  BFAB               	btfsc	(dtoa@n+7)& (0+255),7,b
 12047  0023EC  EFFA  F011         	goto	u7801
 12048  0023F0  EFFD  F011         	goto	u7800
 12049  0023F4                     u7801:
 12050  0023F4  0E01               	movlw	1
 12051  0023F6  EFFE  F011         	goto	u7810
 12052  0023FA                     u7800:
 12053  0023FA  0E00               	movlw	0
 12054  0023FC                     u7810:
 12055  0023FC  6FA2               	movwf	dtoa@s& (0+255),b
 12056  0023FE  6BA3               	clrf	(dtoa@s+1)& (0+255),b
 12057                           
 12058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12059  002400  51A2               	movf	dtoa@s& (0+255),w,b
 12060  002402  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
 12061  002404  B4D8               	btfsc	status,2,c
 12062  002406  EF07  F012         	goto	u7821
 12063  00240A  EF09  F012         	goto	u7820
 12064  00240E                     u7821:
 12065  00240E  EF19  F012         	goto	l7016
 12066  002412                     u7820:
 12067  002412                     
 12068                           ; BSR set to: 0
 12069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12070  002412  1FAB               	comf	(dtoa@n+7)& (0+255),f,b
 12071  002414  1FAA               	comf	(dtoa@n+6)& (0+255),f,b
 12072  002416  1FA9               	comf	(dtoa@n+5)& (0+255),f,b
 12073  002418  1FA8               	comf	(dtoa@n+4)& (0+255),f,b
 12074  00241A  1FA7               	comf	(dtoa@n+3)& (0+255),f,b
 12075  00241C  1FA6               	comf	(dtoa@n+2)& (0+255),f,b
 12076  00241E  1FA5               	comf	(dtoa@n+1)& (0+255),f,b
 12077  002420  6DA4               	negf	dtoa@n& (0+255),b
 12078  002422  0E00               	movlw	0
 12079  002424  23A5               	addwfc	(dtoa@n+1)& (0+255),f,b
 12080  002426  23A6               	addwfc	(dtoa@n+2)& (0+255),f,b
 12081  002428  23A7               	addwfc	(dtoa@n+3)& (0+255),f,b
 12082  00242A  23A8               	addwfc	(dtoa@n+4)& (0+255),f,b
 12083  00242C  23A9               	addwfc	(dtoa@n+5)& (0+255),f,b
 12084  00242E  23AA               	addwfc	(dtoa@n+6)& (0+255),f,b
 12085  002430  23AB               	addwfc	(dtoa@n+7)& (0+255),f,b
 12086  002432                     l7016:
 12087                           
 12088                           ; BSR set to: 0
 12089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12090  002432  BFEB               	btfsc	(_prec+1)& (0+255),7,b
 12091  002434  EF1E  F012         	goto	u7831
 12092  002438  EF20  F012         	goto	u7830
 12093  00243C                     u7831:
 12094  00243C  EF21  F012         	goto	l7020
 12095  002440                     u7830:
 12096  002440                     
 12097                           ; BSR set to: 0
 12098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12099  002440  93EC               	bcf	_flags& (0+255),1,b
 12100  002442                     l7020:
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12104  002442  BFEB               	btfsc	(_prec+1)& (0+255),7,b
 12105  002444  EF2E  F012         	goto	u7840
 12106  002448  51EB               	movf	(_prec+1)& (0+255),w,b
 12107  00244A  E106               	bnz	u7841
 12108  00244C  05EA               	decf	_prec& (0+255),w,b
 12109  00244E  B0D8               	btfsc	status,0,c
 12110  002450  EF2C  F012         	goto	u7841
 12111  002454  EF2E  F012         	goto	u7840
 12112  002458                     u7841:
 12113  002458  EF34  F012         	goto	l727
 12114  00245C                     u7840:
 12115  00245C                     
 12116                           ; BSR set to: 0
 12117  00245C  0E00               	movlw	0
 12118  00245E  6F9F               	movwf	(dtoa@p+1)& (0+255),b
 12119  002460  0E01               	movlw	1
 12120  002462  6F9E               	movwf	dtoa@p& (0+255),b
 12121  002464  EF38  F012         	goto	l729
 12122  002468                     l727:
 12123                           
 12124                           ; BSR set to: 0
 12125  002468  C0EA  F09E         	movff	_prec,dtoa@p
 12126  00246C  C0EB  F09F         	movff	_prec+1,dtoa@p+1
 12127  002470                     l729:
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12131  002470  C0E8  F0A0         	movff	_width,dtoa@w
 12132  002474  C0E9  F0A1         	movff	_width+1,dtoa@w+1
 12133  002478                     
 12134                           ; BSR set to: 0
 12135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12136  002478  51A2               	movf	dtoa@s& (0+255),w,b
 12137  00247A  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
 12138  00247C  A4D8               	btfss	status,2,c
 12139  00247E  EF43  F012         	goto	u7851
 12140  002482  EF45  F012         	goto	u7850
 12141  002486                     u7851:
 12142  002486  EF4C  F012         	goto	l7028
 12143  00248A                     u7850:
 12144  00248A                     
 12145                           ; BSR set to: 0
 12146  00248A  A5EC               	btfss	_flags& (0+255),2,b
 12147  00248C  EF4A  F012         	goto	u7861
 12148  002490  EF4C  F012         	goto	u7860
 12149  002494                     u7861:
 12150  002494  EF4F  F012         	goto	l7030
 12151  002498                     u7860:
 12152  002498                     l7028:
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12156  002498  07A0               	decf	dtoa@w& (0+255),f,b
 12157  00249A  A0D8               	btfss	status,0,c
 12158  00249C  07A1               	decf	(dtoa@w+1)& (0+255),f,b
 12159  00249E                     l7030:
 12160                           
 12161                           ; BSR set to: 0
 12162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12163  00249E  0E00               	movlw	0
 12164  0024A0  6FAD               	movwf	(dtoa@i+1)& (0+255),b
 12165  0024A2  0E1F               	movlw	31
 12166  0024A4  6FAC               	movwf	dtoa@i& (0+255),b
 12167  0024A6                     
 12168                           ; BSR set to: 0
 12169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12170  0024A6  0E00               	movlw	0
 12171  0024A8  0101               	movlb	1	; () banked
 12172  0024AA  6F32               	movwf	(_dbuf+31)& (0+255),b
 12173                           
 12174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12175  0024AC  EFD5  F012         	goto	l7044
 12176  0024B0                     l7034:
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12180  0024B0  07AC               	decf	dtoa@i& (0+255),f,b
 12181  0024B2  A0D8               	btfss	status,0,c
 12182  0024B4  07AD               	decf	(dtoa@i+1)& (0+255),f,b
 12183  0024B6                     
 12184                           ; BSR set to: 0
 12185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12186  0024B6  0E13               	movlw	low _dbuf
 12187  0024B8  25AC               	addwf	dtoa@i& (0+255),w,b
 12188  0024BA  6ED9               	movwf	fsr2l,c
 12189  0024BC  0E01               	movlw	high _dbuf
 12190  0024BE  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
 12191  0024C0  6EDA               	movwf	fsr2h,c
 12192  0024C2  C0A4  F06D         	movff	dtoa@n,___aomod@dividend
 12193  0024C6  C0A5  F06E         	movff	dtoa@n+1,___aomod@dividend+1
 12194  0024CA  C0A6  F06F         	movff	dtoa@n+2,___aomod@dividend+2
 12195  0024CE  C0A7  F070         	movff	dtoa@n+3,___aomod@dividend+3
 12196  0024D2  C0A8  F071         	movff	dtoa@n+4,___aomod@dividend+4
 12197  0024D6  C0A9  F072         	movff	dtoa@n+5,___aomod@dividend+5
 12198  0024DA  C0AA  F073         	movff	dtoa@n+6,___aomod@dividend+6
 12199  0024DE  C0AB  F074         	movff	dtoa@n+7,___aomod@dividend+7
 12200  0024E2  0E0A               	movlw	10
 12201  0024E4  6F75               	movwf	___aomod@divisor& (0+255),b
 12202  0024E6  0E00               	movlw	0
 12203  0024E8  6F76               	movwf	(___aomod@divisor+1)& (0+255),b
 12204  0024EA  0E00               	movlw	0
 12205  0024EC  6F77               	movwf	(___aomod@divisor+2)& (0+255),b
 12206  0024EE  0E00               	movlw	0
 12207  0024F0  6F78               	movwf	(___aomod@divisor+3)& (0+255),b
 12208  0024F2  0E00               	movlw	0
 12209  0024F4  6F79               	movwf	(___aomod@divisor+4)& (0+255),b
 12210  0024F6  0E00               	movlw	0
 12211  0024F8  6F7A               	movwf	(___aomod@divisor+5)& (0+255),b
 12212  0024FA  0E00               	movlw	0
 12213  0024FC  6F7B               	movwf	(___aomod@divisor+6)& (0+255),b
 12214  0024FE  0E00               	movlw	0
 12215  002500  6F7C               	movwf	(___aomod@divisor+7)& (0+255),b
 12216  002502  EC12  F01E         	call	___aomod	;wreg free
 12217  002506  C06D  F094         	movff	?___aomod,??_dtoa
 12218  00250A  C06E  F095         	movff	?___aomod+1,??_dtoa+1
 12219  00250E  C06F  F096         	movff	?___aomod+2,??_dtoa+2
 12220  002512  C070  F097         	movff	?___aomod+3,??_dtoa+3
 12221  002516  C071  F098         	movff	?___aomod+4,??_dtoa+4
 12222  00251A  C072  F099         	movff	?___aomod+5,??_dtoa+5
 12223  00251E  C073  F09A         	movff	?___aomod+6,??_dtoa+6
 12224  002522  C074  F09B         	movff	?___aomod+7,??_dtoa+7
 12225  002526  C094  F07F         	movff	??_dtoa,abs@a
 12226  00252A  C096  F080         	movff	??_dtoa+2,abs@a+1
 12227  00252E  EC79  F027         	call	_abs	;wreg free
 12228  002532  0100               	movlb	0	; () banked
 12229  002534  517F               	movf	?_abs& (0+255),w,b
 12230  002536  0F30               	addlw	48
 12231  002538  6EDF               	movwf	indf2,c
 12232  00253A                     
 12233                           ; BSR set to: 0
 12234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12235  00253A  079E               	decf	dtoa@p& (0+255),f,b
 12236  00253C  A0D8               	btfss	status,0,c
 12237  00253E  079F               	decf	(dtoa@p+1)& (0+255),f,b
 12238  002540                     
 12239                           ; BSR set to: 0
 12240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12241  002540  07A0               	decf	dtoa@w& (0+255),f,b
 12242  002542  A0D8               	btfss	status,0,c
 12243  002544  07A1               	decf	(dtoa@w+1)& (0+255),f,b
 12244  002546                     
 12245                           ; BSR set to: 0
 12246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12247  002546  C0A4  F06D         	movff	dtoa@n,___aodiv@dividend
 12248  00254A  C0A5  F06E         	movff	dtoa@n+1,___aodiv@dividend+1
 12249  00254E  C0A6  F06F         	movff	dtoa@n+2,___aodiv@dividend+2
 12250  002552  C0A7  F070         	movff	dtoa@n+3,___aodiv@dividend+3
 12251  002556  C0A8  F071         	movff	dtoa@n+4,___aodiv@dividend+4
 12252  00255A  C0A9  F072         	movff	dtoa@n+5,___aodiv@dividend+5
 12253  00255E  C0AA  F073         	movff	dtoa@n+6,___aodiv@dividend+6
 12254  002562  C0AB  F074         	movff	dtoa@n+7,___aodiv@dividend+7
 12255  002566  0E0A               	movlw	10
 12256  002568  6F75               	movwf	___aodiv@divisor& (0+255),b
 12257  00256A  0E00               	movlw	0
 12258  00256C  6F76               	movwf	(___aodiv@divisor+1)& (0+255),b
 12259  00256E  0E00               	movlw	0
 12260  002570  6F77               	movwf	(___aodiv@divisor+2)& (0+255),b
 12261  002572  0E00               	movlw	0
 12262  002574  6F78               	movwf	(___aodiv@divisor+3)& (0+255),b
 12263  002576  0E00               	movlw	0
 12264  002578  6F79               	movwf	(___aodiv@divisor+4)& (0+255),b
 12265  00257A  0E00               	movlw	0
 12266  00257C  6F7A               	movwf	(___aodiv@divisor+5)& (0+255),b
 12267  00257E  0E00               	movlw	0
 12268  002580  6F7B               	movwf	(___aodiv@divisor+6)& (0+255),b
 12269  002582  0E00               	movlw	0
 12270  002584  6F7C               	movwf	(___aodiv@divisor+7)& (0+255),b
 12271  002586  EC8C  F01C         	call	___aodiv	;wreg free
 12272  00258A  C06D  F0A4         	movff	?___aodiv,dtoa@n
 12273  00258E  C06E  F0A5         	movff	?___aodiv+1,dtoa@n+1
 12274  002592  C06F  F0A6         	movff	?___aodiv+2,dtoa@n+2
 12275  002596  C070  F0A7         	movff	?___aodiv+3,dtoa@n+3
 12276  00259A  C071  F0A8         	movff	?___aodiv+4,dtoa@n+4
 12277  00259E  C072  F0A9         	movff	?___aodiv+5,dtoa@n+5
 12278  0025A2  C073  F0AA         	movff	?___aodiv+6,dtoa@n+6
 12279  0025A6  C074  F0AB         	movff	?___aodiv+7,dtoa@n+7
 12280  0025AA                     l7044:
 12281                           
 12282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12283  0025AA  0100               	movlb	0	; () banked
 12284  0025AC  BFAD               	btfsc	(dtoa@i+1)& (0+255),7,b
 12285  0025AE  EFE1  F012         	goto	u7871
 12286  0025B2  51AD               	movf	(dtoa@i+1)& (0+255),w,b
 12287  0025B4  E108               	bnz	u7870
 12288  0025B6  05AC               	decf	dtoa@i& (0+255),w,b
 12289  0025B8  A0D8               	btfss	status,0,c
 12290  0025BA  EFE1  F012         	goto	u7871
 12291  0025BE  EFE3  F012         	goto	u7870
 12292  0025C2                     u7871:
 12293  0025C2  EF13  F013         	goto	l7054
 12294  0025C6                     u7870:
 12295  0025C6                     
 12296                           ; BSR set to: 0
 12297  0025C6  51A4               	movf	dtoa@n& (0+255),w,b
 12298  0025C8  11A5               	iorwf	(dtoa@n+1)& (0+255),w,b
 12299  0025CA  11A6               	iorwf	(dtoa@n+2)& (0+255),w,b
 12300  0025CC  11A7               	iorwf	(dtoa@n+3)& (0+255),w,b
 12301  0025CE  11A8               	iorwf	(dtoa@n+4)& (0+255),w,b
 12302  0025D0  11A9               	iorwf	(dtoa@n+5)& (0+255),w,b
 12303  0025D2  11AA               	iorwf	(dtoa@n+6)& (0+255),w,b
 12304  0025D4  11AB               	iorwf	(dtoa@n+7)& (0+255),w,b
 12305  0025D6  A4D8               	btfss	status,2,c
 12306  0025D8  EFF0  F012         	goto	u7881
 12307  0025DC  EFF2  F012         	goto	u7880
 12308  0025E0                     u7881:
 12309  0025E0  EF58  F012         	goto	l7034
 12310  0025E4                     u7880:
 12311  0025E4                     
 12312                           ; BSR set to: 0
 12313  0025E4  BF9F               	btfsc	(dtoa@p+1)& (0+255),7,b
 12314  0025E6  EFFF  F012         	goto	u7890
 12315  0025EA  519F               	movf	(dtoa@p+1)& (0+255),w,b
 12316  0025EC  E106               	bnz	u7891
 12317  0025EE  059E               	decf	dtoa@p& (0+255),w,b
 12318  0025F0  B0D8               	btfsc	status,0,c
 12319  0025F2  EFFD  F012         	goto	u7891
 12320  0025F6  EFFF  F012         	goto	u7890
 12321  0025FA                     u7891:
 12322  0025FA  EF58  F012         	goto	l7034
 12323  0025FE                     u7890:
 12324  0025FE                     
 12325                           ; BSR set to: 0
 12326  0025FE  BFA1               	btfsc	(dtoa@w+1)& (0+255),7,b
 12327  002600  EF0A  F013         	goto	u7901
 12328  002604  51A1               	movf	(dtoa@w+1)& (0+255),w,b
 12329  002606  E108               	bnz	u7900
 12330  002608  05A0               	decf	dtoa@w& (0+255),w,b
 12331  00260A  A0D8               	btfss	status,0,c
 12332  00260C  EF0A  F013         	goto	u7901
 12333  002610  EF0C  F013         	goto	u7900
 12334  002614                     u7901:
 12335  002614  EF13  F013         	goto	l7054
 12336  002618                     u7900:
 12337  002618                     
 12338                           ; BSR set to: 0
 12339  002618  B3EC               	btfsc	_flags& (0+255),1,b
 12340  00261A  EF11  F013         	goto	u7911
 12341  00261E  EF13  F013         	goto	u7910
 12342  002622                     u7911:
 12343  002622  EF58  F012         	goto	l7034
 12344  002626                     u7910:
 12345  002626                     l7054:
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12349  002626  51A2               	movf	dtoa@s& (0+255),w,b
 12350  002628  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
 12351  00262A  A4D8               	btfss	status,2,c
 12352  00262C  EF1A  F013         	goto	u7921
 12353  002630  EF1C  F013         	goto	u7920
 12354  002634                     u7921:
 12355  002634  EF23  F013         	goto	l7058
 12356  002638                     u7920:
 12357  002638                     
 12358                           ; BSR set to: 0
 12359  002638  A5EC               	btfss	_flags& (0+255),2,b
 12360  00263A  EF21  F013         	goto	u7931
 12361  00263E  EF23  F013         	goto	u7930
 12362  002642                     u7931:
 12363  002642  EF41  F013         	goto	l7068
 12364  002646                     u7930:
 12365  002646                     l7058:
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12369  002646  07AC               	decf	dtoa@i& (0+255),f,b
 12370  002648  A0D8               	btfss	status,0,c
 12371  00264A  07AD               	decf	(dtoa@i+1)& (0+255),f,b
 12372  00264C                     
 12373                           ; BSR set to: 0
 12374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12375  00264C  51A2               	movf	dtoa@s& (0+255),w,b
 12376  00264E  11A3               	iorwf	(dtoa@s+1)& (0+255),w,b
 12377  002650  A4D8               	btfss	status,2,c
 12378  002652  EF2D  F013         	goto	u7941
 12379  002656  EF2F  F013         	goto	u7940
 12380  00265A                     u7941:
 12381  00265A  EF35  F013         	goto	l7064
 12382  00265E                     u7940:
 12383  00265E                     
 12384                           ; BSR set to: 0
 12385  00265E  0E00               	movlw	0
 12386  002660  6F9D               	movwf	(_dtoa$1784+1)& (0+255),b
 12387  002662  0E2B               	movlw	43
 12388  002664  6F9C               	movwf	_dtoa$1784& (0+255),b
 12389  002666  EF39  F013         	goto	l7066
 12390  00266A                     l7064:
 12391                           
 12392                           ; BSR set to: 0
 12393  00266A  0E00               	movlw	0
 12394  00266C  6F9D               	movwf	(_dtoa$1784+1)& (0+255),b
 12395  00266E  0E2D               	movlw	45
 12396  002670  6F9C               	movwf	_dtoa$1784& (0+255),b
 12397  002672                     l7066:
 12398                           
 12399                           ; BSR set to: 0
 12400  002672  0E13               	movlw	low _dbuf
 12401  002674  25AC               	addwf	dtoa@i& (0+255),w,b
 12402  002676  6ED9               	movwf	fsr2l,c
 12403  002678  0E01               	movlw	high _dbuf
 12404  00267A  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
 12405  00267C  6EDA               	movwf	fsr2h,c
 12406  00267E  C09C  FFDF         	movff	_dtoa$1784,indf2
 12407  002682                     l7068:
 12408                           
 12409                           ; BSR set to: 0
 12410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12411  002682  C08A  F07F         	movff	dtoa@fp,pad@fp
 12412  002686  C08B  F080         	movff	dtoa@fp+1,pad@fp+1
 12413  00268A  0E13               	movlw	low _dbuf
 12414  00268C  25AC               	addwf	dtoa@i& (0+255),w,b
 12415  00268E  6F81               	movwf	pad@buf& (0+255),b
 12416  002690  0E01               	movlw	high _dbuf
 12417  002692  21AD               	addwfc	(dtoa@i+1)& (0+255),w,b
 12418  002694  6F82               	movwf	(pad@buf+1)& (0+255),b
 12419  002696  C0A0  F083         	movff	dtoa@w,pad@p
 12420  00269A  C0A1  F084         	movff	dtoa@w+1,pad@p+1
 12421  00269E  EC53  F024         	call	_pad	;wreg free
 12422  0026A2  C07F  F08A         	movff	?_pad,?_dtoa
 12423  0026A6  C080  F08B         	movff	?_pad+1,?_dtoa+1
 12424  0026AA  0012               	return		;funcret
 12425  0026AC                     __end_of_dtoa:
 12426                           	opt callstack 0
 12427                           
 12428 ;; *************** function _abs *****************
 12429 ;; Defined at:
 12430 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  a               2   31[BANK0 ] int 
 12433 ;; Auto vars:     Size  Location     Type
 12434 ;;		None
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  2   31[BANK0 ] int 
 12437 ;; Registers used:
 12438 ;;		wreg, status,2, status,0
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;Total ram usage:        4 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    7
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_dtoa
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           	psect	text48
 12459  004EF2                     __ptext48:
 12460                           	opt callstack 0
 12461  004EF2                     _abs:
 12462                           	opt callstack 18
 12463  004EF2  0100               	movlb	0	; () banked
 12464  004EF4  BF80               	btfsc	(abs@a+1)& (0+255),7,b
 12465  004EF6  EF87  F027         	goto	u7300
 12466  004EFA  5180               	movf	(abs@a+1)& (0+255),w,b
 12467  004EFC  E106               	bnz	u7301
 12468  004EFE  057F               	decf	abs@a& (0+255),w,b
 12469  004F00  B0D8               	btfsc	status,0,c
 12470  004F02  EF85  F027         	goto	u7301
 12471  004F06  EF87  F027         	goto	u7300
 12472  004F0A                     u7301:
 12473  004F0A  EF95  F027         	goto	l1591
 12474  004F0E                     u7300:
 12475  004F0E                     
 12476                           ; BSR set to: 0
 12477  004F0E  C07F  F081         	movff	abs@a,??_abs
 12478  004F12  C080  F082         	movff	abs@a+1,??_abs+1
 12479  004F16  1F81               	comf	??_abs& (0+255),f,b
 12480  004F18  1F82               	comf	(??_abs+1)& (0+255),f,b
 12481  004F1A  4B81               	infsnz	??_abs& (0+255),f,b
 12482  004F1C  2B82               	incf	(??_abs+1)& (0+255),f,b
 12483  004F1E  C081  F07F         	movff	??_abs,?_abs
 12484  004F22  C082  F080         	movff	??_abs+1,?_abs+1
 12485  004F26  EF99  F027         	goto	l1594
 12486  004F2A                     l1591:
 12487                           
 12488                           ; BSR set to: 0
 12489  004F2A  C07F  F07F         	movff	abs@a,?_abs
 12490  004F2E  C080  F080         	movff	abs@a+1,?_abs+1
 12491  004F32                     l1594:
 12492                           
 12493                           ; BSR set to: 0
 12494  004F32  0012               	return		;funcret
 12495  004F34                     __end_of_abs:
 12496                           	opt callstack 0
 12497                           
 12498 ;; *************** function ___aomod *****************
 12499 ;; Defined at:
 12500 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  dividend        8   13[BANK0 ] long long 
 12503 ;;  divisor         8   21[BANK0 ] long long 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  sign            1   30[BANK0 ] unsigned char 
 12506 ;;  counter         1   29[BANK0 ] unsigned char 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  8   13[BANK0 ] long long 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12516 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12519 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12520 ;;Total ram usage:       18 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:    7
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_dtoa
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           	psect	text49
 12531  003C24                     __ptext49:
 12532                           	opt callstack 0
 12533  003C24                     ___aomod:
 12534                           	opt callstack 18
 12535  003C24  0E00               	movlw	0
 12536  003C26  0100               	movlb	0	; () banked
 12537  003C28  6F7E               	movwf	___aomod@sign& (0+255),b
 12538  003C2A                     
 12539                           ; BSR set to: 0
 12540  003C2A  BF74               	btfsc	(___aomod@dividend+7)& (0+255),7,b
 12541  003C2C  EF1C  F01E         	goto	u7510
 12542  003C30  EF1A  F01E         	goto	u7511
 12543  003C34                     u7511:
 12544  003C34  EF2E  F01E         	goto	l6868
 12545  003C38                     u7510:
 12546  003C38                     
 12547                           ; BSR set to: 0
 12548  003C38  1F74               	comf	(___aomod@dividend+7)& (0+255),f,b
 12549  003C3A  1F73               	comf	(___aomod@dividend+6)& (0+255),f,b
 12550  003C3C  1F72               	comf	(___aomod@dividend+5)& (0+255),f,b
 12551  003C3E  1F71               	comf	(___aomod@dividend+4)& (0+255),f,b
 12552  003C40  1F70               	comf	(___aomod@dividend+3)& (0+255),f,b
 12553  003C42  1F6F               	comf	(___aomod@dividend+2)& (0+255),f,b
 12554  003C44  1F6E               	comf	(___aomod@dividend+1)& (0+255),f,b
 12555  003C46  6D6D               	negf	___aomod@dividend& (0+255),b
 12556  003C48  0E00               	movlw	0
 12557  003C4A  236E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 12558  003C4C  236F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 12559  003C4E  2370               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 12560  003C50  2371               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 12561  003C52  2372               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 12562  003C54  2373               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 12563  003C56  2374               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 12564  003C58                     
 12565                           ; BSR set to: 0
 12566  003C58  0E01               	movlw	1
 12567  003C5A  6F7E               	movwf	___aomod@sign& (0+255),b
 12568  003C5C                     l6868:
 12569                           
 12570                           ; BSR set to: 0
 12571  003C5C  BF7C               	btfsc	(___aomod@divisor+7)& (0+255),7,b
 12572  003C5E  EF35  F01E         	goto	u7520
 12573  003C62  EF33  F01E         	goto	u7521
 12574  003C66                     u7521:
 12575  003C66  EF45  F01E         	goto	l6872
 12576  003C6A                     u7520:
 12577  003C6A                     
 12578                           ; BSR set to: 0
 12579  003C6A  1F7C               	comf	(___aomod@divisor+7)& (0+255),f,b
 12580  003C6C  1F7B               	comf	(___aomod@divisor+6)& (0+255),f,b
 12581  003C6E  1F7A               	comf	(___aomod@divisor+5)& (0+255),f,b
 12582  003C70  1F79               	comf	(___aomod@divisor+4)& (0+255),f,b
 12583  003C72  1F78               	comf	(___aomod@divisor+3)& (0+255),f,b
 12584  003C74  1F77               	comf	(___aomod@divisor+2)& (0+255),f,b
 12585  003C76  1F76               	comf	(___aomod@divisor+1)& (0+255),f,b
 12586  003C78  6D75               	negf	___aomod@divisor& (0+255),b
 12587  003C7A  0E00               	movlw	0
 12588  003C7C  2376               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 12589  003C7E  2377               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 12590  003C80  2378               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 12591  003C82  2379               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 12592  003C84  237A               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 12593  003C86  237B               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 12594  003C88  237C               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 12595  003C8A                     l6872:
 12596                           
 12597                           ; BSR set to: 0
 12598  003C8A  5175               	movf	___aomod@divisor& (0+255),w,b
 12599  003C8C  1176               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 12600  003C8E  1177               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 12601  003C90  1178               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 12602  003C92  1179               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 12603  003C94  117A               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 12604  003C96  117B               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 12605  003C98  117C               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 12606  003C9A  B4D8               	btfsc	status,2,c
 12607  003C9C  EF52  F01E         	goto	u7531
 12608  003CA0  EF54  F01E         	goto	u7530
 12609  003CA4                     u7531:
 12610  003CA4  EF9C  F01E         	goto	l6888
 12611  003CA8                     u7530:
 12612  003CA8                     
 12613                           ; BSR set to: 0
 12614  003CA8  0E01               	movlw	1
 12615  003CAA  6F7D               	movwf	___aomod@counter& (0+255),b
 12616  003CAC  EF62  F01E         	goto	l6878
 12617  003CB0                     l6876:
 12618                           
 12619                           ; BSR set to: 0
 12620  003CB0  90D8               	bcf	status,0,c
 12621  003CB2  3775               	rlcf	___aomod@divisor& (0+255),f,b
 12622  003CB4  3776               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 12623  003CB6  3777               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 12624  003CB8  3778               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 12625  003CBA  3779               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 12626  003CBC  377A               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 12627  003CBE  377B               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 12628  003CC0  377C               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 12629  003CC2  2B7D               	incf	___aomod@counter& (0+255),f,b
 12630  003CC4                     l6878:
 12631                           
 12632                           ; BSR set to: 0
 12633  003CC4  AF7C               	btfss	(___aomod@divisor+7)& (0+255),7,b
 12634  003CC6  EF67  F01E         	goto	u7541
 12635  003CCA  EF69  F01E         	goto	u7540
 12636  003CCE                     u7541:
 12637  003CCE  EF58  F01E         	goto	l6876
 12638  003CD2                     u7540:
 12639  003CD2                     l6880:
 12640                           
 12641                           ; BSR set to: 0
 12642  003CD2  5175               	movf	___aomod@divisor& (0+255),w,b
 12643  003CD4  5D6D               	subwf	___aomod@dividend& (0+255),w,b
 12644  003CD6  5176               	movf	(___aomod@divisor+1)& (0+255),w,b
 12645  003CD8  596E               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 12646  003CDA  5177               	movf	(___aomod@divisor+2)& (0+255),w,b
 12647  003CDC  596F               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 12648  003CDE  5178               	movf	(___aomod@divisor+3)& (0+255),w,b
 12649  003CE0  5970               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 12650  003CE2  5179               	movf	(___aomod@divisor+4)& (0+255),w,b
 12651  003CE4  5971               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 12652  003CE6  517A               	movf	(___aomod@divisor+5)& (0+255),w,b
 12653  003CE8  5972               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 12654  003CEA  517B               	movf	(___aomod@divisor+6)& (0+255),w,b
 12655  003CEC  5973               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 12656  003CEE  517C               	movf	(___aomod@divisor+7)& (0+255),w,b
 12657  003CF0  5974               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 12658  003CF2  A0D8               	btfss	status,0,c
 12659  003CF4  EF7E  F01E         	goto	u7551
 12660  003CF8  EF80  F01E         	goto	u7550
 12661  003CFC                     u7551:
 12662  003CFC  EF90  F01E         	goto	l6884
 12663  003D00                     u7550:
 12664  003D00                     
 12665                           ; BSR set to: 0
 12666  003D00  5175               	movf	___aomod@divisor& (0+255),w,b
 12667  003D02  5F6D               	subwf	___aomod@dividend& (0+255),f,b
 12668  003D04  5176               	movf	(___aomod@divisor+1)& (0+255),w,b
 12669  003D06  5B6E               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 12670  003D08  5177               	movf	(___aomod@divisor+2)& (0+255),w,b
 12671  003D0A  5B6F               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 12672  003D0C  5178               	movf	(___aomod@divisor+3)& (0+255),w,b
 12673  003D0E  5B70               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 12674  003D10  5179               	movf	(___aomod@divisor+4)& (0+255),w,b
 12675  003D12  5B71               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 12676  003D14  517A               	movf	(___aomod@divisor+5)& (0+255),w,b
 12677  003D16  5B72               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 12678  003D18  517B               	movf	(___aomod@divisor+6)& (0+255),w,b
 12679  003D1A  5B73               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 12680  003D1C  517C               	movf	(___aomod@divisor+7)& (0+255),w,b
 12681  003D1E  5B74               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 12682  003D20                     l6884:
 12683                           
 12684                           ; BSR set to: 0
 12685  003D20  90D8               	bcf	status,0,c
 12686  003D22  337C               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 12687  003D24  337B               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 12688  003D26  337A               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 12689  003D28  3379               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 12690  003D2A  3378               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 12691  003D2C  3377               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 12692  003D2E  3376               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 12693  003D30  3375               	rrcf	___aomod@divisor& (0+255),f,b
 12694  003D32                     
 12695                           ; BSR set to: 0
 12696  003D32  2F7D               	decfsz	___aomod@counter& (0+255),f,b
 12697  003D34  EF69  F01E         	goto	l6880
 12698  003D38                     l6888:
 12699                           
 12700                           ; BSR set to: 0
 12701  003D38  517E               	movf	___aomod@sign& (0+255),w,b
 12702  003D3A  B4D8               	btfsc	status,2,c
 12703  003D3C  EFA2  F01E         	goto	u7561
 12704  003D40  EFA4  F01E         	goto	u7560
 12705  003D44                     u7561:
 12706  003D44  EFB4  F01E         	goto	l6892
 12707  003D48                     u7560:
 12708  003D48                     
 12709                           ; BSR set to: 0
 12710  003D48  1F74               	comf	(___aomod@dividend+7)& (0+255),f,b
 12711  003D4A  1F73               	comf	(___aomod@dividend+6)& (0+255),f,b
 12712  003D4C  1F72               	comf	(___aomod@dividend+5)& (0+255),f,b
 12713  003D4E  1F71               	comf	(___aomod@dividend+4)& (0+255),f,b
 12714  003D50  1F70               	comf	(___aomod@dividend+3)& (0+255),f,b
 12715  003D52  1F6F               	comf	(___aomod@dividend+2)& (0+255),f,b
 12716  003D54  1F6E               	comf	(___aomod@dividend+1)& (0+255),f,b
 12717  003D56  6D6D               	negf	___aomod@dividend& (0+255),b
 12718  003D58  0E00               	movlw	0
 12719  003D5A  236E               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 12720  003D5C  236F               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 12721  003D5E  2370               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 12722  003D60  2371               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 12723  003D62  2372               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 12724  003D64  2373               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 12725  003D66  2374               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 12726  003D68                     l6892:
 12727                           
 12728                           ; BSR set to: 0
 12729  003D68  C06D  F06D         	movff	___aomod@dividend,?___aomod
 12730  003D6C  C06E  F06E         	movff	___aomod@dividend+1,?___aomod+1
 12731  003D70  C06F  F06F         	movff	___aomod@dividend+2,?___aomod+2
 12732  003D74  C070  F070         	movff	___aomod@dividend+3,?___aomod+3
 12733  003D78  C071  F071         	movff	___aomod@dividend+4,?___aomod+4
 12734  003D7C  C072  F072         	movff	___aomod@dividend+5,?___aomod+5
 12735  003D80  C073  F073         	movff	___aomod@dividend+6,?___aomod+6
 12736  003D84  C074  F074         	movff	___aomod@dividend+7,?___aomod+7
 12737  003D88                     
 12738                           ; BSR set to: 0
 12739  003D88  0012               	return		;funcret
 12740  003D8A                     __end_of___aomod:
 12741                           	opt callstack 0
 12742                           
 12743 ;; *************** function ___aodiv *****************
 12744 ;; Defined at:
 12745 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  dividend        8   13[BANK0 ] long long 
 12748 ;;  divisor         8   21[BANK0 ] long long 
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;  quotient        8   31[BANK0 ] long long 
 12751 ;;  sign            1   30[BANK0 ] unsigned char 
 12752 ;;  counter         1   29[BANK0 ] unsigned char 
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  8   13[BANK0 ] long long 
 12755 ;; Registers used:
 12756 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12762 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12763 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12765 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12766 ;;Total ram usage:       26 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    7
 12769 ;; This function calls:
 12770 ;;		Nothing
 12771 ;; This function is called by:
 12772 ;;		_dtoa
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text50
 12777  003918                     __ptext50:
 12778                           	opt callstack 0
 12779  003918                     ___aodiv:
 12780                           	opt callstack 18
 12781  003918  0E00               	movlw	0
 12782  00391A  0100               	movlb	0	; () banked
 12783  00391C  6F7E               	movwf	___aodiv@sign& (0+255),b
 12784  00391E                     
 12785                           ; BSR set to: 0
 12786  00391E  BF7C               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 12787  003920  EF96  F01C         	goto	u7440
 12788  003924  EF94  F01C         	goto	u7441
 12789  003928                     u7441:
 12790  003928  EFA8  F01C         	goto	l6824
 12791  00392C                     u7440:
 12792  00392C                     
 12793                           ; BSR set to: 0
 12794  00392C  1F7C               	comf	(___aodiv@divisor+7)& (0+255),f,b
 12795  00392E  1F7B               	comf	(___aodiv@divisor+6)& (0+255),f,b
 12796  003930  1F7A               	comf	(___aodiv@divisor+5)& (0+255),f,b
 12797  003932  1F79               	comf	(___aodiv@divisor+4)& (0+255),f,b
 12798  003934  1F78               	comf	(___aodiv@divisor+3)& (0+255),f,b
 12799  003936  1F77               	comf	(___aodiv@divisor+2)& (0+255),f,b
 12800  003938  1F76               	comf	(___aodiv@divisor+1)& (0+255),f,b
 12801  00393A  6D75               	negf	___aodiv@divisor& (0+255),b
 12802  00393C  0E00               	movlw	0
 12803  00393E  2376               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 12804  003940  2377               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 12805  003942  2378               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 12806  003944  2379               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 12807  003946  237A               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 12808  003948  237B               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 12809  00394A  237C               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 12810  00394C                     
 12811                           ; BSR set to: 0
 12812  00394C  0E01               	movlw	1
 12813  00394E  6F7E               	movwf	___aodiv@sign& (0+255),b
 12814  003950                     l6824:
 12815                           
 12816                           ; BSR set to: 0
 12817  003950  BF74               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 12818  003952  EFAF  F01C         	goto	u7450
 12819  003956  EFAD  F01C         	goto	u7451
 12820  00395A                     u7451:
 12821  00395A  EFC1  F01C         	goto	l6830
 12822  00395E                     u7450:
 12823  00395E                     
 12824                           ; BSR set to: 0
 12825  00395E  1F74               	comf	(___aodiv@dividend+7)& (0+255),f,b
 12826  003960  1F73               	comf	(___aodiv@dividend+6)& (0+255),f,b
 12827  003962  1F72               	comf	(___aodiv@dividend+5)& (0+255),f,b
 12828  003964  1F71               	comf	(___aodiv@dividend+4)& (0+255),f,b
 12829  003966  1F70               	comf	(___aodiv@dividend+3)& (0+255),f,b
 12830  003968  1F6F               	comf	(___aodiv@dividend+2)& (0+255),f,b
 12831  00396A  1F6E               	comf	(___aodiv@dividend+1)& (0+255),f,b
 12832  00396C  6D6D               	negf	___aodiv@dividend& (0+255),b
 12833  00396E  0E00               	movlw	0
 12834  003970  236E               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 12835  003972  236F               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 12836  003974  2370               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 12837  003976  2371               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 12838  003978  2372               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 12839  00397A  2373               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 12840  00397C  2374               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 12841  00397E                     
 12842                           ; BSR set to: 0
 12843  00397E  0E01               	movlw	1
 12844  003980  1B7E               	xorwf	___aodiv@sign& (0+255),f,b
 12845  003982                     l6830:
 12846                           
 12847                           ; BSR set to: 0
 12848  003982  EE20  F07F         	lfsr	2,___aodiv@quotient
 12849  003986  0E07               	movlw	7
 12850  003988                     u7461:
 12851  003988  6ADE               	clrf	postinc2,c
 12852  00398A  06E8               	decf	wreg,f,c
 12853  00398C  E2FD               	bc	u7461
 12854  00398E                     
 12855                           ; BSR set to: 0
 12856  00398E  5175               	movf	___aodiv@divisor& (0+255),w,b
 12857  003990  1176               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 12858  003992  1177               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 12859  003994  1178               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 12860  003996  1179               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 12861  003998  117A               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 12862  00399A  117B               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 12863  00399C  117C               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 12864  00399E  B4D8               	btfsc	status,2,c
 12865  0039A0  EFD4  F01C         	goto	u7471
 12866  0039A4  EFD6  F01C         	goto	u7470
 12867  0039A8                     u7471:
 12868  0039A8  EF28  F01D         	goto	l6852
 12869  0039AC                     u7470:
 12870  0039AC                     
 12871                           ; BSR set to: 0
 12872  0039AC  0E01               	movlw	1
 12873  0039AE  6F7D               	movwf	___aodiv@counter& (0+255),b
 12874  0039B0  EFE4  F01C         	goto	l6838
 12875  0039B4                     l6836:
 12876                           
 12877                           ; BSR set to: 0
 12878  0039B4  90D8               	bcf	status,0,c
 12879  0039B6  3775               	rlcf	___aodiv@divisor& (0+255),f,b
 12880  0039B8  3776               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 12881  0039BA  3777               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 12882  0039BC  3778               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 12883  0039BE  3779               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 12884  0039C0  377A               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 12885  0039C2  377B               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 12886  0039C4  377C               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 12887  0039C6  2B7D               	incf	___aodiv@counter& (0+255),f,b
 12888  0039C8                     l6838:
 12889                           
 12890                           ; BSR set to: 0
 12891  0039C8  AF7C               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 12892  0039CA  EFE9  F01C         	goto	u7481
 12893  0039CE  EFEB  F01C         	goto	u7480
 12894  0039D2                     u7481:
 12895  0039D2  EFDA  F01C         	goto	l6836
 12896  0039D6                     u7480:
 12897  0039D6                     l6840:
 12898                           
 12899                           ; BSR set to: 0
 12900  0039D6  90D8               	bcf	status,0,c
 12901  0039D8  377F               	rlcf	___aodiv@quotient& (0+255),f,b
 12902  0039DA  3780               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 12903  0039DC  3781               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 12904  0039DE  3782               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 12905  0039E0  3783               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 12906  0039E2  3784               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 12907  0039E4  3785               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 12908  0039E6  3786               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 12909  0039E8                     
 12910                           ; BSR set to: 0
 12911  0039E8  5175               	movf	___aodiv@divisor& (0+255),w,b
 12912  0039EA  5D6D               	subwf	___aodiv@dividend& (0+255),w,b
 12913  0039EC  5176               	movf	(___aodiv@divisor+1)& (0+255),w,b
 12914  0039EE  596E               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 12915  0039F0  5177               	movf	(___aodiv@divisor+2)& (0+255),w,b
 12916  0039F2  596F               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 12917  0039F4  5178               	movf	(___aodiv@divisor+3)& (0+255),w,b
 12918  0039F6  5970               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 12919  0039F8  5179               	movf	(___aodiv@divisor+4)& (0+255),w,b
 12920  0039FA  5971               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 12921  0039FC  517A               	movf	(___aodiv@divisor+5)& (0+255),w,b
 12922  0039FE  5972               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 12923  003A00  517B               	movf	(___aodiv@divisor+6)& (0+255),w,b
 12924  003A02  5973               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 12925  003A04  517C               	movf	(___aodiv@divisor+7)& (0+255),w,b
 12926  003A06  5974               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 12927  003A08  A0D8               	btfss	status,0,c
 12928  003A0A  EF09  F01D         	goto	u7491
 12929  003A0E  EF0B  F01D         	goto	u7490
 12930  003A12                     u7491:
 12931  003A12  EF1C  F01D         	goto	l6848
 12932  003A16                     u7490:
 12933  003A16                     
 12934                           ; BSR set to: 0
 12935  003A16  5175               	movf	___aodiv@divisor& (0+255),w,b
 12936  003A18  5F6D               	subwf	___aodiv@dividend& (0+255),f,b
 12937  003A1A  5176               	movf	(___aodiv@divisor+1)& (0+255),w,b
 12938  003A1C  5B6E               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 12939  003A1E  5177               	movf	(___aodiv@divisor+2)& (0+255),w,b
 12940  003A20  5B6F               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 12941  003A22  5178               	movf	(___aodiv@divisor+3)& (0+255),w,b
 12942  003A24  5B70               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 12943  003A26  5179               	movf	(___aodiv@divisor+4)& (0+255),w,b
 12944  003A28  5B71               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 12945  003A2A  517A               	movf	(___aodiv@divisor+5)& (0+255),w,b
 12946  003A2C  5B72               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 12947  003A2E  517B               	movf	(___aodiv@divisor+6)& (0+255),w,b
 12948  003A30  5B73               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 12949  003A32  517C               	movf	(___aodiv@divisor+7)& (0+255),w,b
 12950  003A34  5B74               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 12951  003A36                     
 12952                           ; BSR set to: 0
 12953  003A36  817F               	bsf	___aodiv@quotient& (0+255),0,b
 12954  003A38                     l6848:
 12955                           
 12956                           ; BSR set to: 0
 12957  003A38  90D8               	bcf	status,0,c
 12958  003A3A  337C               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 12959  003A3C  337B               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 12960  003A3E  337A               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 12961  003A40  3379               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 12962  003A42  3378               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 12963  003A44  3377               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 12964  003A46  3376               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 12965  003A48  3375               	rrcf	___aodiv@divisor& (0+255),f,b
 12966  003A4A                     
 12967                           ; BSR set to: 0
 12968  003A4A  2F7D               	decfsz	___aodiv@counter& (0+255),f,b
 12969  003A4C  EFEB  F01C         	goto	l6840
 12970  003A50                     l6852:
 12971                           
 12972                           ; BSR set to: 0
 12973  003A50  517E               	movf	___aodiv@sign& (0+255),w,b
 12974  003A52  B4D8               	btfsc	status,2,c
 12975  003A54  EF2E  F01D         	goto	u7501
 12976  003A58  EF30  F01D         	goto	u7500
 12977  003A5C                     u7501:
 12978  003A5C  EF40  F01D         	goto	l6856
 12979  003A60                     u7500:
 12980  003A60                     
 12981                           ; BSR set to: 0
 12982  003A60  1F86               	comf	(___aodiv@quotient+7)& (0+255),f,b
 12983  003A62  1F85               	comf	(___aodiv@quotient+6)& (0+255),f,b
 12984  003A64  1F84               	comf	(___aodiv@quotient+5)& (0+255),f,b
 12985  003A66  1F83               	comf	(___aodiv@quotient+4)& (0+255),f,b
 12986  003A68  1F82               	comf	(___aodiv@quotient+3)& (0+255),f,b
 12987  003A6A  1F81               	comf	(___aodiv@quotient+2)& (0+255),f,b
 12988  003A6C  1F80               	comf	(___aodiv@quotient+1)& (0+255),f,b
 12989  003A6E  6D7F               	negf	___aodiv@quotient& (0+255),b
 12990  003A70  0E00               	movlw	0
 12991  003A72  2380               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 12992  003A74  2381               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 12993  003A76  2382               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 12994  003A78  2383               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 12995  003A7A  2384               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 12996  003A7C  2385               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 12997  003A7E  2386               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 12998  003A80                     l6856:
 12999                           
 13000                           ; BSR set to: 0
 13001  003A80  C07F  F06D         	movff	___aodiv@quotient,?___aodiv
 13002  003A84  C080  F06E         	movff	___aodiv@quotient+1,?___aodiv+1
 13003  003A88  C081  F06F         	movff	___aodiv@quotient+2,?___aodiv+2
 13004  003A8C  C082  F070         	movff	___aodiv@quotient+3,?___aodiv+3
 13005  003A90  C083  F071         	movff	___aodiv@quotient+4,?___aodiv+4
 13006  003A94  C084  F072         	movff	___aodiv@quotient+5,?___aodiv+5
 13007  003A98  C085  F073         	movff	___aodiv@quotient+6,?___aodiv+6
 13008  003A9C  C086  F074         	movff	___aodiv@quotient+7,?___aodiv+7
 13009  003AA0                     
 13010                           ; BSR set to: 0
 13011  003AA0  0012               	return		;funcret
 13012  003AA2                     __end_of___aodiv:
 13013                           	opt callstack 0
 13014                           
 13015 ;; *************** function _ctoa *****************
 13016 ;; Defined at:
 13017 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
 13020 ;;		 -> vsnprintf@f(6), NULL(0), 
 13021 ;;  c               1   44[BANK0 ] unsigned char 
 13022 ;; Auto vars:     Size  Location     Type
 13023 ;;  w               2   45[BANK0 ] int 
 13024 ;;  l               2    0        int 
 13025 ;; Return value:  Size  Location     Type
 13026 ;;                  2   42[BANK0 ] int 
 13027 ;; Registers used:
 13028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13029 ;; Tracked objects:
 13030 ;;		On entry : 0/0
 13031 ;;		On exit  : 0/0
 13032 ;;		Unchanged: 0/0
 13033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13034 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13037 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;Total ram usage:        5 bytes
 13039 ;; Hardware stack levels used:    1
 13040 ;; Hardware stack levels required when called:   12
 13041 ;; This function calls:
 13042 ;;		_pad
 13043 ;; This function is called by:
 13044 ;;		_vfpfcnvrt
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           	psect	text51
 13049  004C48                     __ptext51:
 13050                           	opt callstack 0
 13051  004C48                     _ctoa:
 13052                           	opt callstack 14
 13053  004C48                     
 13054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 13055  004C48  0100               	movlb	0	; () banked
 13056  004C4A  51E8               	movf	_width& (0+255),w,b
 13057  004C4C  11E9               	iorwf	(_width+1)& (0+255),w,b
 13058  004C4E  A4D8               	btfss	status,2,c
 13059  004C50  EF2C  F026         	goto	u7791
 13060  004C54  EF2E  F026         	goto	u7790
 13061  004C58                     u7791:
 13062  004C58  EF34  F026         	goto	l7000
 13063  004C5C                     u7790:
 13064  004C5C                     
 13065                           ; BSR set to: 0
 13066  004C5C  C0E8  F08D         	movff	_width,ctoa@w
 13067  004C60  C0E9  F08E         	movff	_width+1,ctoa@w+1
 13068  004C64  EF3A  F026         	goto	l7002
 13069  004C68                     l7000:
 13070                           
 13071                           ; BSR set to: 0
 13072  004C68  0EFF               	movlw	255
 13073  004C6A  25E8               	addwf	_width& (0+255),w,b
 13074  004C6C  6F8D               	movwf	ctoa@w& (0+255),b
 13075  004C6E  0EFF               	movlw	255
 13076  004C70  21E9               	addwfc	(_width+1)& (0+255),w,b
 13077  004C72  6F8E               	movwf	(ctoa@w+1)& (0+255),b
 13078  004C74                     l7002:
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 13082  004C74  C08C  F113         	movff	ctoa@c,_dbuf
 13083  004C78                     
 13084                           ; BSR set to: 0
 13085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 13086  004C78  0E00               	movlw	0
 13087  004C7A  0101               	movlb	1	; () banked
 13088  004C7C  6F14               	movwf	(_dbuf+1)& (0+255),b
 13089  004C7E                     
 13090                           ; BSR set to: 1
 13091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13092  004C7E  C08A  F07F         	movff	ctoa@fp,pad@fp
 13093  004C82  C08B  F080         	movff	ctoa@fp+1,pad@fp+1
 13094  004C86  0E13               	movlw	low _dbuf
 13095  004C88  0100               	movlb	0	; () banked
 13096  004C8A  6F81               	movwf	pad@buf& (0+255),b
 13097  004C8C  0E01               	movlw	high _dbuf
 13098  004C8E  6F82               	movwf	(pad@buf+1)& (0+255),b
 13099  004C90  C08D  F083         	movff	ctoa@w,pad@p
 13100  004C94  C08E  F084         	movff	ctoa@w+1,pad@p+1
 13101  004C98  EC53  F024         	call	_pad	;wreg free
 13102  004C9C  C07F  F08A         	movff	?_pad,?_ctoa
 13103  004CA0  C080  F08B         	movff	?_pad+1,?_ctoa+1
 13104  004CA4  0012               	return		;funcret
 13105  004CA6                     __end_of_ctoa:
 13106                           	opt callstack 0
 13107                           
 13108 ;; *************** function _pad *****************
 13109 ;; Defined at:
 13110 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
 13113 ;;		 -> vsnprintf@f(6), NULL(0), 
 13114 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 13115 ;;		 -> dbuf(32), 
 13116 ;;  p               2   35[BANK0 ] int 
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;  w               2   40[BANK0 ] int 
 13119 ;;  i               2   38[BANK0 ] int 
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  2   31[BANK0 ] int 
 13122 ;; Registers used:
 13123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13130 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13132 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13133 ;;Total ram usage:       11 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:   11
 13136 ;; This function calls:
 13137 ;;		_fputc
 13138 ;;		_fputs
 13139 ;;		_strlen
 13140 ;; This function is called by:
 13141 ;;		_ctoa
 13142 ;;		_dtoa
 13143 ;;		_otoa
 13144 ;;		_utoa
 13145 ;;		_xtoa
 13146 ;; This function uses a non-reentrant model
 13147 ;;
 13148                           
 13149                           	psect	text52
 13150  0048A6                     __ptext52:
 13151                           	opt callstack 0
 13152  0048A6                     _pad:
 13153                           	opt callstack 14
 13154  0048A6                     
 13155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13156  0048A6  0100               	movlb	0	; () banked
 13157  0048A8  A1EC               	btfss	_flags& (0+255),0,b
 13158  0048AA  EF59  F024         	goto	u7311
 13159  0048AE  EF5B  F024         	goto	u7310
 13160  0048B2                     u7311:
 13161  0048B2  EF65  F024         	goto	l6770
 13162  0048B6                     u7310:
 13163  0048B6                     
 13164                           ; BSR set to: 0
 13165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13166  0048B6  C081  F078         	movff	pad@buf,fputs@s
 13167  0048BA  C082  F079         	movff	pad@buf+1,fputs@s+1
 13168  0048BE  C07F  F07A         	movff	pad@fp,fputs@fp
 13169  0048C2  C080  F07B         	movff	pad@fp+1,fputs@fp+1
 13170  0048C6  ECEF  F026         	call	_fputs	;wreg free
 13171  0048CA                     l6770:
 13172                           
 13173                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13174  0048CA  0100               	movlb	0	; () banked
 13175  0048CC  BF84               	btfsc	(pad@p+1)& (0+255),7,b
 13176  0048CE  EF6B  F024         	goto	u7321
 13177  0048D2  EF6D  F024         	goto	u7320
 13178  0048D6                     u7321:
 13179  0048D6  EF73  F024         	goto	l6774
 13180  0048DA                     u7320:
 13181  0048DA                     
 13182                           ; BSR set to: 0
 13183  0048DA  C083  F088         	movff	pad@p,pad@w
 13184  0048DE  C084  F089         	movff	pad@p+1,pad@w+1
 13185  0048E2  EF77  F024         	goto	l709
 13186  0048E6                     l6774:
 13187                           
 13188                           ; BSR set to: 0
 13189  0048E6  0E00               	movlw	0
 13190  0048E8  6F89               	movwf	(pad@w+1)& (0+255),b
 13191  0048EA  0E00               	movlw	0
 13192  0048EC  6F88               	movwf	pad@w& (0+255),b
 13193  0048EE                     l709:
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13197  0048EE  0E00               	movlw	0
 13198  0048F0  6F87               	movwf	(pad@i+1)& (0+255),b
 13199  0048F2  0E00               	movlw	0
 13200  0048F4  6F86               	movwf	pad@i& (0+255),b
 13201                           
 13202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13203  0048F6  EF8A  F024         	goto	l6780
 13204  0048FA                     l6776:
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13208  0048FA  0E00               	movlw	0
 13209  0048FC  6F70               	movwf	(fputc@c+1)& (0+255),b
 13210  0048FE  0E20               	movlw	32
 13211  004900  6F6F               	movwf	fputc@c& (0+255),b
 13212  004902  C07F  F071         	movff	pad@fp,fputc@fp
 13213  004906  C080  F072         	movff	pad@fp+1,fputc@fp+1
 13214  00490A  ECED  F023         	call	_fputc	;wreg free
 13215  00490E                     
 13216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13217  00490E  0100               	movlb	0	; () banked
 13218  004910  4B86               	infsnz	pad@i& (0+255),f,b
 13219  004912  2B87               	incf	(pad@i+1)& (0+255),f,b
 13220  004914                     l6780:
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13224  004914  5188               	movf	pad@w& (0+255),w,b
 13225  004916  5D86               	subwf	pad@i& (0+255),w,b
 13226  004918  5187               	movf	(pad@i+1)& (0+255),w,b
 13227  00491A  0A80               	xorlw	128
 13228  00491C  6F85               	movwf	??_pad& (0+255),b
 13229  00491E  5189               	movf	(pad@w+1)& (0+255),w,b
 13230  004920  0A80               	xorlw	128
 13231  004922  5985               	subwfb	??_pad& (0+255),w,b
 13232  004924  A0D8               	btfss	status,0,c
 13233  004926  EF97  F024         	goto	u7331
 13234  00492A  EF99  F024         	goto	u7330
 13235  00492E                     u7331:
 13236  00492E  EF7D  F024         	goto	l6776
 13237  004932                     u7330:
 13238  004932                     
 13239                           ; BSR set to: 0
 13240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13241  004932  B1EC               	btfsc	_flags& (0+255),0,b
 13242  004934  EF9E  F024         	goto	u7341
 13243  004938  EFA0  F024         	goto	u7340
 13244  00493C                     u7341:
 13245  00493C  EFAA  F024         	goto	l6784
 13246  004940                     u7340:
 13247  004940                     
 13248                           ; BSR set to: 0
 13249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13250  004940  C081  F078         	movff	pad@buf,fputs@s
 13251  004944  C082  F079         	movff	pad@buf+1,fputs@s+1
 13252  004948  C07F  F07A         	movff	pad@fp,fputs@fp
 13253  00494C  C080  F07B         	movff	pad@fp+1,fputs@fp+1
 13254  004950  ECEF  F026         	call	_fputs	;wreg free
 13255  004954                     l6784:
 13256                           
 13257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13258  004954  C081  F06D         	movff	pad@buf,strlen@s
 13259  004958  C082  F06E         	movff	pad@buf+1,strlen@s+1
 13260  00495C  EC13  F028         	call	_strlen	;wreg free
 13261  004960  0100               	movlb	0	; () banked
 13262  004962  5188               	movf	pad@w& (0+255),w,b
 13263  004964  256D               	addwf	?_strlen& (0+255),w,b
 13264  004966  6F7F               	movwf	?_pad& (0+255),b
 13265  004968  5189               	movf	(pad@w+1)& (0+255),w,b
 13266  00496A  216E               	addwfc	(?_strlen+1)& (0+255),w,b
 13267  00496C  6F80               	movwf	(?_pad+1)& (0+255),b
 13268  00496E                     
 13269                           ; BSR set to: 0
 13270  00496E  0012               	return		;funcret
 13271  004970                     __end_of_pad:
 13272                           	opt callstack 0
 13273                           
 13274 ;; *************** function _strlen *****************
 13275 ;; Defined at:
 13276 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;  s               2   13[BANK0 ] PTR const unsigned char 
 13279 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 13280 ;; Auto vars:     Size  Location     Type
 13281 ;;  a               2   15[BANK0 ] PTR const unsigned char 
 13282 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  2   13[BANK0 ] unsigned int 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13296 ;;Total ram usage:        4 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:    7
 13299 ;; This function calls:
 13300 ;;		Nothing
 13301 ;; This function is called by:
 13302 ;;		_pad
 13303 ;;		_stoa
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           	psect	text53
 13308  005026                     __ptext53:
 13309                           	opt callstack 0
 13310  005026                     _strlen:
 13311                           	opt callstack 17
 13312  005026  C06D  F06F         	movff	strlen@s,strlen@a
 13313  00502A  C06E  F070         	movff	strlen@s+1,strlen@a+1
 13314  00502E  EF1C  F028         	goto	l6750
 13315  005032                     l6748:
 13316  005032  0100               	movlb	0	; () banked
 13317  005034  4B6D               	infsnz	strlen@s& (0+255),f,b
 13318  005036  2B6E               	incf	(strlen@s+1)& (0+255),f,b
 13319  005038                     l6750:
 13320  005038  C06D  FFD9         	movff	strlen@s,fsr2l
 13321  00503C  C06E  FFDA         	movff	strlen@s+1,fsr2h
 13322  005040  50DF               	movf	indf2,w,c
 13323  005042  A4D8               	btfss	status,2,c
 13324  005044  EF26  F028         	goto	u7261
 13325  005048  EF28  F028         	goto	u7260
 13326  00504C                     u7261:
 13327  00504C  EF19  F028         	goto	l6748
 13328  005050                     u7260:
 13329  005050  0100               	movlb	0	; () banked
 13330  005052  516F               	movf	strlen@a& (0+255),w,b
 13331  005054  5D6D               	subwf	strlen@s& (0+255),w,b
 13332  005056  6F6D               	movwf	?_strlen& (0+255),b
 13333  005058  5170               	movf	(strlen@a+1)& (0+255),w,b
 13334  00505A  596E               	subwfb	(strlen@s+1)& (0+255),w,b
 13335  00505C  6F6E               	movwf	(?_strlen+1)& (0+255),b
 13336  00505E                     
 13337                           ; BSR set to: 0
 13338  00505E  0012               	return		;funcret
 13339  005060                     __end_of_strlen:
 13340                           	opt callstack 0
 13341                           
 13342 ;; *************** function _fputs *****************
 13343 ;; Defined at:
 13344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  s               2   24[BANK0 ] PTR const unsigned char 
 13347 ;;		 -> dbuf(32), 
 13348 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
 13349 ;;		 -> vsnprintf@f(6), NULL(0), 
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;  i               2   29[BANK0 ] int 
 13352 ;;  c               1   28[BANK0 ] unsigned char 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  2   24[BANK0 ] int 
 13355 ;; Registers used:
 13356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13363 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13365 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13366 ;;Total ram usage:        7 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:   10
 13369 ;; This function calls:
 13370 ;;		_fputc
 13371 ;; This function is called by:
 13372 ;;		_pad
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           	psect	text54
 13377  004DDE                     __ptext54:
 13378                           	opt callstack 0
 13379  004DDE                     _fputs:
 13380                           	opt callstack 14
 13381  004DDE  0E00               	movlw	0
 13382  004DE0  0100               	movlb	0	; () banked
 13383  004DE2  6F7E               	movwf	(fputs@i+1)& (0+255),b
 13384  004DE4  0E00               	movlw	0
 13385  004DE6  6F7D               	movwf	fputs@i& (0+255),b
 13386  004DE8  EF02  F027         	goto	l6744
 13387  004DEC                     l6740:
 13388                           
 13389                           ; BSR set to: 0
 13390  004DEC  C07C  F06F         	movff	fputs@c,fputc@c
 13391  004DF0  6B70               	clrf	(fputc@c+1)& (0+255),b
 13392  004DF2  C07A  F071         	movff	fputs@fp,fputc@fp
 13393  004DF6  C07B  F072         	movff	fputs@fp+1,fputc@fp+1
 13394  004DFA  ECED  F023         	call	_fputc	;wreg free
 13395  004DFE  0100               	movlb	0	; () banked
 13396  004E00  4B7D               	infsnz	fputs@i& (0+255),f,b
 13397  004E02  2B7E               	incf	(fputs@i+1)& (0+255),f,b
 13398  004E04                     l6744:
 13399                           
 13400                           ; BSR set to: 0
 13401  004E04  517D               	movf	fputs@i& (0+255),w,b
 13402  004E06  2578               	addwf	fputs@s& (0+255),w,b
 13403  004E08  6ED9               	movwf	fsr2l,c
 13404  004E0A  517E               	movf	(fputs@i+1)& (0+255),w,b
 13405  004E0C  2179               	addwfc	(fputs@s+1)& (0+255),w,b
 13406  004E0E  6EDA               	movwf	fsr2h,c
 13407  004E10  50DF               	movf	indf2,w,c
 13408  004E12  6F7C               	movwf	fputs@c& (0+255),b
 13409  004E14  517C               	movf	fputs@c& (0+255),w,b
 13410  004E16  A4D8               	btfss	status,2,c
 13411  004E18  EF10  F027         	goto	u7251
 13412  004E1C  EF12  F027         	goto	u7250
 13413  004E20                     u7251:
 13414  004E20  EFF6  F026         	goto	l6740
 13415  004E24                     u7250:
 13416  004E24                     
 13417                           ; BSR set to: 0
 13418  004E24  0012               	return		;funcret
 13419  004E26                     __end_of_fputs:
 13420                           	opt callstack 0
 13421                           
 13422 ;; *************** function _fputc *****************
 13423 ;; Defined at:
 13424 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13425 ;; Parameters:    Size  Location     Type
 13426 ;;  c               2   15[BANK0 ] int 
 13427 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
 13428 ;;		 -> vsnprintf@f(6), NULL(0), 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  2   15[BANK0 ] int 
 13433 ;; Registers used:
 13434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13442 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13443 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13444 ;;Total ram usage:        9 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:    9
 13447 ;; This function calls:
 13448 ;;		_putch
 13449 ;; This function is called by:
 13450 ;;		_pad
 13451 ;;		_stoa
 13452 ;;		_vfpfcnvrt
 13453 ;;		_fputs
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           	psect	text55
 13458  0047DA                     __ptext55:
 13459                           	opt callstack 0
 13460  0047DA                     _fputc:
 13461                           	opt callstack 14
 13462  0047DA  0100               	movlb	0	; () banked
 13463  0047DC  5171               	movf	fputc@fp& (0+255),w,b
 13464  0047DE  1172               	iorwf	(fputc@fp+1)& (0+255),w,b
 13465  0047E0  B4D8               	btfsc	status,2,c
 13466  0047E2  EFF5  F023         	goto	u7211
 13467  0047E6  EFF7  F023         	goto	u7210
 13468  0047EA                     u7211:
 13469  0047EA  EF00  F024         	goto	l6728
 13470  0047EE                     u7210:
 13471  0047EE                     
 13472                           ; BSR set to: 0
 13473  0047EE  5171               	movf	fputc@fp& (0+255),w,b
 13474  0047F0  1172               	iorwf	(fputc@fp+1)& (0+255),w,b
 13475  0047F2  A4D8               	btfss	status,2,c
 13476  0047F4  EFFE  F023         	goto	u7221
 13477  0047F8  EF00  F024         	goto	u7220
 13478  0047FC                     u7221:
 13479  0047FC  EF05  F024         	goto	l6730
 13480  004800                     u7220:
 13481  004800                     l6728:
 13482                           
 13483                           ; BSR set to: 0
 13484  004800  516F               	movf	fputc@c& (0+255),w,b
 13485  004802  ECE6  F029         	call	_putch
 13486  004806  EF52  F024         	goto	l1663
 13487  00480A                     l6730:
 13488                           
 13489                           ; BSR set to: 0
 13490  00480A  EE20 F004          	lfsr	2,4
 13491  00480E  5171               	movf	fputc@fp& (0+255),w,b
 13492  004810  26D9               	addwf	fsr2l,f,c
 13493  004812  5172               	movf	(fputc@fp+1)& (0+255),w,b
 13494  004814  22DA               	addwfc	fsr2h,f,c
 13495  004816  50DE               	movf	postinc2,w,c
 13496  004818  10DE               	iorwf	postinc2,w,c
 13497  00481A  B4D8               	btfsc	status,2,c
 13498  00481C  EF12  F024         	goto	u7231
 13499  004820  EF14  F024         	goto	u7230
 13500  004824                     u7231:
 13501  004824  EF2F  F024         	goto	l6734
 13502  004828                     u7230:
 13503  004828                     
 13504                           ; BSR set to: 0
 13505  004828  EE20 F004          	lfsr	2,4
 13506  00482C  5171               	movf	fputc@fp& (0+255),w,b
 13507  00482E  26D9               	addwf	fsr2l,f,c
 13508  004830  5172               	movf	(fputc@fp+1)& (0+255),w,b
 13509  004832  22DA               	addwfc	fsr2h,f,c
 13510  004834  EE10 F002          	lfsr	1,2
 13511  004838  5171               	movf	fputc@fp& (0+255),w,b
 13512  00483A  26E1               	addwf	fsr1l,f,c
 13513  00483C  5172               	movf	(fputc@fp+1)& (0+255),w,b
 13514  00483E  22E2               	addwfc	fsr1h,f,c
 13515  004840  50DE               	movf	postinc2,w,c
 13516  004842  5CE6               	subwf	postinc1,w,c
 13517  004844  50E6               	movf	postinc1,w,c
 13518  004846  0A80               	xorlw	128
 13519  004848  6F77               	movwf	(??_fputc+4)& (0+255),b
 13520  00484A  50DE               	movf	postinc2,w,c
 13521  00484C  0A80               	xorlw	128
 13522  00484E  5977               	subwfb	(??_fputc+4)& (0+255),w,b
 13523  004850  B0D8               	btfsc	status,0,c
 13524  004852  EF2D  F024         	goto	u7241
 13525  004856  EF2F  F024         	goto	u7240
 13526  00485A                     u7241:
 13527  00485A  EF52  F024         	goto	l1663
 13528  00485E                     u7240:
 13529  00485E                     l6734:
 13530                           
 13531                           ; BSR set to: 0
 13532  00485E  EE20 F002          	lfsr	2,2
 13533  004862  5171               	movf	fputc@fp& (0+255),w,b
 13534  004864  26D9               	addwf	fsr2l,f,c
 13535  004866  5172               	movf	(fputc@fp+1)& (0+255),w,b
 13536  004868  22DA               	addwfc	fsr2h,f,c
 13537  00486A  CFDE F073          	movff	postinc2,??_fputc
 13538  00486E  CFDD F074          	movff	postdec2,??_fputc+1
 13539  004872  C071  FFD9         	movff	fputc@fp,fsr2l
 13540  004876  C072  FFDA         	movff	fputc@fp+1,fsr2h
 13541  00487A  CFDE F075          	movff	postinc2,??_fputc+2
 13542  00487E  CFDD F076          	movff	postdec2,??_fputc+3
 13543  004882  5173               	movf	??_fputc& (0+255),w,b
 13544  004884  2575               	addwf	(??_fputc+2)& (0+255),w,b
 13545  004886  6ED9               	movwf	fsr2l,c
 13546  004888  5174               	movf	(??_fputc+1)& (0+255),w,b
 13547  00488A  2176               	addwfc	(??_fputc+3)& (0+255),w,b
 13548  00488C  6EDA               	movwf	fsr2h,c
 13549  00488E  C06F  FFDF         	movff	fputc@c,indf2
 13550  004892  EE20 F002          	lfsr	2,2
 13551  004896  5171               	movf	fputc@fp& (0+255),w,b
 13552  004898  26D9               	addwf	fsr2l,f,c
 13553  00489A  5172               	movf	(fputc@fp+1)& (0+255),w,b
 13554  00489C  22DA               	addwfc	fsr2h,f,c
 13555  00489E  2ADE               	incf	postinc2,f,c
 13556  0048A0  0E00               	movlw	0
 13557  0048A2  22DD               	addwfc	postdec2,f,c
 13558  0048A4                     l1663:
 13559  0048A4  0012               	return		;funcret
 13560  0048A6                     __end_of_fputc:
 13561                           	opt callstack 0
 13562                           
 13563 ;; *************** function _putch *****************
 13564 ;; Defined at:
 13565 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;  txData          1    wreg     unsigned char 
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;  txData          1   14[BANK0 ] unsigned char 
 13570 ;; Return value:  Size  Location     Type
 13571 ;;                  1    wreg      void 
 13572 ;; Registers used:
 13573 ;;		wreg, status,2, cstack
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13580 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13582 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13583 ;;Total ram usage:        1 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; Hardware stack levels required when called:    8
 13586 ;; This function calls:
 13587 ;;		_EUSART1_Write
 13588 ;; This function is called by:
 13589 ;;		_fputc
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           	psect	text56
 13594  0053CC                     __ptext56:
 13595                           	opt callstack 0
 13596  0053CC                     _putch:
 13597                           	opt callstack 14
 13598                           
 13599                           ;incstack = 0
 13600                           ;putch@txData stored from wreg
 13601  0053CC  0100               	movlb	0	; () banked
 13602  0053CE  6F6E               	movwf	putch@txData& (0+255),b
 13603  0053D0                     
 13604                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13605  0053D0  0100               	movlb	0	; () banked
 13606  0053D2  516E               	movf	putch@txData& (0+255),w,b
 13607  0053D4  ECA7  F029         	call	_EUSART1_Write
 13608  0053D8  0012               	return		;funcret
 13609  0053DA                     __end_of_putch:
 13610                           	opt callstack 0
 13611                           
 13612 ;; *************** function _EUSART1_Write *****************
 13613 ;; Defined at:
 13614 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;  txData          1    wreg     unsigned char 
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;  txData          1   13[BANK0 ] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13632 ;;Total ram usage:        1 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:    7
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_putch
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642                           	psect	text57
 13643  00534E                     __ptext57:
 13644                           	opt callstack 0
 13645  00534E                     _EUSART1_Write:
 13646                           	opt callstack 14
 13647                           
 13648                           ;incstack = 0
 13649                           ;EUSART1_Write@txData stored from wreg
 13650  00534E  0100               	movlb	0	; () banked
 13651  005350  6F6D               	movwf	EUSART1_Write@txData& (0+255),b
 13652  005352                     l299:
 13653                           
 13654                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13655  005352  A89E               	btfss	158,4,c	;volatile
 13656  005354  EFAE  F029         	goto	u7201
 13657  005358  EFB0  F029         	goto	u7200
 13658  00535C                     u7201:
 13659  00535C  EFA9  F029         	goto	l299
 13660  005360                     u7200:
 13661  005360                     
 13662                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13663  005360  C06D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13664  005364  0012               	return		;funcret
 13665  005366                     __end_of_EUSART1_Write:
 13666                           	opt callstack 0
 13667                           
 13668 ;; *************** function _atoi *****************
 13669 ;; Defined at:
 13670 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;  s               2   20[BANK0 ] PTR const unsigned char 
 13673 ;;		 -> STR_14(27), STR_13(21), STR_12(14), STR_11(10), 
 13674 ;;		 -> STR_10(10), STR_9(14), STR_7(12), STR_6(44), 
 13675 ;;		 -> STR_5(28), STR_4(12), STR_3(45), STR_2(12), 
 13676 ;;		 -> STR_1(71), Out_USART@value_2(2), Out_USART@value_1(2), 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;  n               2   33[BANK0 ] int 
 13679 ;;  neg             2   26[BANK0 ] int 
 13680 ;; Return value:  Size  Location     Type
 13681 ;;                  2   20[BANK0 ] int 
 13682 ;; Registers used:
 13683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13684 ;; Tracked objects:
 13685 ;;		On entry : 0/0
 13686 ;;		On exit  : 0/0
 13687 ;;		Unchanged: 0/0
 13688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13690 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13692 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13693 ;;Total ram usage:       15 bytes
 13694 ;; Hardware stack levels used:    1
 13695 ;; Hardware stack levels required when called:    8
 13696 ;; This function calls:
 13697 ;;		___wmul
 13698 ;;		_isdigit
 13699 ;;		_isspace
 13700 ;; This function is called by:
 13701 ;;		_Out_USART
 13702 ;;		_vfpfcnvrt
 13703 ;; This function uses a non-reentrant model
 13704 ;;
 13705                           
 13706                           	psect	text58
 13707  002C28                     __ptext58:
 13708                           	opt callstack 0
 13709  002C28                     _atoi:
 13710                           	opt callstack 18
 13711  002C28  0E00               	movlw	0
 13712  002C2A  0100               	movlb	0	; () banked
 13713  002C2C  6F82               	movwf	(atoi@n+1)& (0+255),b
 13714  002C2E  0E00               	movlw	0
 13715  002C30  6F81               	movwf	atoi@n& (0+255),b
 13716  002C32  0E00               	movlw	0
 13717  002C34  6F7B               	movwf	(atoi@neg+1)& (0+255),b
 13718  002C36  0E00               	movlw	0
 13719  002C38  6F7A               	movwf	atoi@neg& (0+255),b
 13720  002C3A  EF21  F016         	goto	l6950
 13721  002C3E                     l6948:
 13722                           
 13723                           ; BSR set to: 0
 13724  002C3E  4B74               	infsnz	atoi@s& (0+255),f,b
 13725  002C40  2B75               	incf	(atoi@s+1)& (0+255),f,b
 13726  002C42                     l6950:
 13727                           
 13728                           ; BSR set to: 0
 13729  002C42  0E01               	movlw	1
 13730  002C44  6F80               	movwf	_atoi$2398& (0+255),b
 13731  002C46                     
 13732                           ; BSR set to: 0
 13733  002C46  C074  FFF6         	movff	atoi@s,tblptrl
 13734  002C4A  C075  FFF7         	movff	atoi@s+1,tblptrh
 13735  002C4E  0E00               	movlw	low (__mediumconst shr (0+16))
 13736  002C50  6EF8               	movwf	tblptru,c
 13737  002C52  0E0E               	movlw	(high __ramtop+-1)
 13738  002C54  64F7               	cpfsgt	tblptrh,c
 13739  002C56  D003               	bra	u7667
 13740  002C58  0008               	tblrd		*
 13741  002C5A  50F5               	movf	tablat,w,c
 13742  002C5C  D005               	bra	u7660
 13743  002C5E                     u7667:
 13744  002C5E  CFF6 FFE1          	movff	tblptrl,fsr1l
 13745  002C62  CFF7 FFE2          	movff	tblptrh,fsr1h
 13746  002C66  50E7               	movf	indf1,w,c
 13747  002C68                     u7660:
 13748  002C68  0A20               	xorlw	32
 13749  002C6A  B4D8               	btfsc	status,2,c
 13750  002C6C  EF3A  F016         	goto	u7671
 13751  002C70  EF3C  F016         	goto	u7670
 13752  002C74                     u7671:
 13753  002C74  EF66  F016         	goto	l6958
 13754  002C78                     u7670:
 13755  002C78  0EF7               	movlw	247
 13756  002C7A  0100               	movlb	0	; () banked
 13757  002C7C  6F76               	movwf	??_atoi& (0+255),b
 13758  002C7E  0EFF               	movlw	255
 13759  002C80  6F77               	movwf	(??_atoi+1)& (0+255),b
 13760  002C82  C074  FFF6         	movff	atoi@s,tblptrl
 13761  002C86  C075  FFF7         	movff	atoi@s+1,tblptrh
 13762  002C8A  0E00               	movlw	low (__mediumconst shr (0+16))
 13763  002C8C  6EF8               	movwf	tblptru,c
 13764  002C8E  0E0E               	movlw	(high __ramtop+-1)
 13765  002C90  64F7               	cpfsgt	tblptrh,c
 13766  002C92  D003               	bra	u7687
 13767  002C94  0008               	tblrd		*
 13768  002C96  50F5               	movf	tablat,w,c
 13769  002C98  D005               	bra	u7680
 13770  002C9A                     u7687:
 13771  002C9A  CFF6 FFE1          	movff	tblptrl,fsr1l
 13772  002C9E  CFF7 FFE2          	movff	tblptrh,fsr1h
 13773  002CA2  50E7               	movf	indf1,w,c
 13774  002CA4                     u7680:
 13775  002CA4  0100               	movlb	0	; () banked
 13776  002CA6  6F78               	movwf	(??_atoi+2)& (0+255),b
 13777  002CA8  6B79               	clrf	(??_atoi+3)& (0+255),b
 13778  002CAA  5176               	movf	??_atoi& (0+255),w,b
 13779  002CAC  2778               	addwf	(??_atoi+2)& (0+255),f,b
 13780  002CAE  5177               	movf	(??_atoi+1)& (0+255),w,b
 13781  002CB0  2379               	addwfc	(??_atoi+3)& (0+255),f,b
 13782  002CB2  5179               	movf	(??_atoi+3)& (0+255),w,b
 13783  002CB4  E109               	bnz	u7690
 13784  002CB6  0E05               	movlw	5
 13785  002CB8  5D78               	subwf	(??_atoi+2)& (0+255),w,b
 13786  002CBA  A0D8               	btfss	status,0,c
 13787  002CBC  EF62  F016         	goto	u7691
 13788  002CC0  EF64  F016         	goto	u7690
 13789  002CC4                     u7691:
 13790  002CC4  EF66  F016         	goto	l6958
 13791  002CC8                     u7690:
 13792  002CC8                     
 13793                           ; BSR set to: 0
 13794  002CC8  0E00               	movlw	0
 13795  002CCA  6F80               	movwf	_atoi$2398& (0+255),b
 13796  002CCC                     l6958:
 13797  002CCC  C080  F07C         	movff	_atoi$2398,_atoi$2397
 13798  002CD0  0100               	movlb	0	; () banked
 13799  002CD2  6B7D               	clrf	(_atoi$2397+1)& (0+255),b
 13800  002CD4                     
 13801                           ; BSR set to: 0
 13802  002CD4  517C               	movf	_atoi$2397& (0+255),w,b
 13803  002CD6  117D               	iorwf	(_atoi$2397+1)& (0+255),w,b
 13804  002CD8  A4D8               	btfss	status,2,c
 13805  002CDA  EF71  F016         	goto	u7701
 13806  002CDE  EF73  F016         	goto	u7700
 13807  002CE2                     u7701:
 13808  002CE2  EF1F  F016         	goto	l6948
 13809  002CE6                     u7700:
 13810  002CE6  EF7D  F016         	goto	l6968
 13811  002CEA                     l6964:
 13812                           
 13813                           ; BSR set to: 0
 13814  002CEA  0E00               	movlw	0
 13815  002CEC  6F7B               	movwf	(atoi@neg+1)& (0+255),b
 13816  002CEE  0E01               	movlw	1
 13817  002CF0  6F7A               	movwf	atoi@neg& (0+255),b
 13818  002CF2                     l6966:
 13819                           
 13820                           ; BSR set to: 0
 13821  002CF2  4B74               	infsnz	atoi@s& (0+255),f,b
 13822  002CF4  2B75               	incf	(atoi@s+1)& (0+255),f,b
 13823  002CF6  EFCC  F016         	goto	l6974
 13824  002CFA                     l6968:
 13825                           
 13826                           ; BSR set to: 0
 13827  002CFA  C074  FFF6         	movff	atoi@s,tblptrl
 13828  002CFE  C075  FFF7         	movff	atoi@s+1,tblptrh
 13829  002D02  0E00               	movlw	low (__mediumconst shr (0+16))
 13830  002D04  6EF8               	movwf	tblptru,c
 13831  002D06  0E0E               	movlw	(high __ramtop+-1)
 13832  002D08  64F7               	cpfsgt	tblptrh,c
 13833  002D0A  D003               	bra	u7717
 13834  002D0C  0008               	tblrd		*
 13835  002D0E  50F5               	movf	tablat,w,c
 13836  002D10  D005               	bra	u7710
 13837  002D12                     u7717:
 13838  002D12  CFF6 FFE1          	movff	tblptrl,fsr1l
 13839  002D16  CFF7 FFE2          	movff	tblptrh,fsr1h
 13840  002D1A  50E7               	movf	indf1,w,c
 13841  002D1C                     u7710:
 13842  002D1C  0100               	movlb	0	; () banked
 13843  002D1E  6F76               	movwf	??_atoi& (0+255),b
 13844  002D20  6B77               	clrf	(??_atoi+1)& (0+255),b
 13845                           
 13846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13847                           ; Switch size 1, requested type "simple"
 13848                           ; Number of cases is 1, Range of values is 0 to 0
 13849                           ; switch strategies available:
 13850                           ; Name         Instructions Cycles
 13851                           ; simple_byte            4     3 (average)
 13852                           ;	Chosen strategy is simple_byte
 13853  002D22  5177               	movf	(??_atoi+1)& (0+255),w,b
 13854  002D24  0A00               	xorlw	0	; case 0
 13855  002D26  B4D8               	btfsc	status,2,c
 13856  002D28  EF98  F016         	goto	l8432
 13857  002D2C  EFCC  F016         	goto	l6974
 13858  002D30                     l8432:
 13859                           
 13860                           ; BSR set to: 0
 13861                           ; Switch size 1, requested type "simple"
 13862                           ; Number of cases is 2, Range of values is 43 to 45
 13863                           ; switch strategies available:
 13864                           ; Name         Instructions Cycles
 13865                           ; simple_byte            7     4 (average)
 13866                           ;	Chosen strategy is simple_byte
 13867  002D30  5176               	movf	??_atoi& (0+255),w,b
 13868  002D32  0A2B               	xorlw	43	; case 43
 13869  002D34  B4D8               	btfsc	status,2,c
 13870  002D36  EF79  F016         	goto	l6966
 13871  002D3A  0A06               	xorlw	6	; case 45
 13872  002D3C  B4D8               	btfsc	status,2,c
 13873  002D3E  EF75  F016         	goto	l6964
 13874  002D42  EFCC  F016         	goto	l6974
 13875  002D46                     l6970:
 13876                           
 13877                           ; BSR set to: 0
 13878  002D46  C081  F06D         	movff	atoi@n,___wmul@multiplier
 13879  002D4A  C082  F06E         	movff	atoi@n+1,___wmul@multiplier+1
 13880  002D4E  0E00               	movlw	0
 13881  002D50  6F70               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13882  002D52  0E0A               	movlw	10
 13883  002D54  6F6F               	movwf	___wmul@multiplicand& (0+255),b
 13884  002D56  EC26  F029         	call	___wmul	;wreg free
 13885  002D5A  C074  FFF6         	movff	atoi@s,tblptrl
 13886  002D5E  C075  FFF7         	movff	atoi@s+1,tblptrh
 13887  002D62  0E00               	movlw	low (__mediumconst shr (0+16))
 13888  002D64  6EF8               	movwf	tblptru,c
 13889  002D66  0E0E               	movlw	(high __ramtop+-1)
 13890  002D68  64F7               	cpfsgt	tblptrh,c
 13891  002D6A  D003               	bra	u7727
 13892  002D6C  0008               	tblrd		*
 13893  002D6E  50F5               	movf	tablat,w,c
 13894  002D70  D005               	bra	u7720
 13895  002D72                     u7727:
 13896  002D72  CFF6 FFE1          	movff	tblptrl,fsr1l
 13897  002D76  CFF7 FFE2          	movff	tblptrh,fsr1h
 13898  002D7A  50E7               	movf	indf1,w,c
 13899  002D7C                     u7720:
 13900  002D7C  0100               	movlb	0	; () banked
 13901  002D7E  6F76               	movwf	??_atoi& (0+255),b
 13902  002D80  5176               	movf	??_atoi& (0+255),w,b
 13903  002D82  5F6D               	subwf	?___wmul& (0+255),f,b
 13904  002D84  0E00               	movlw	0
 13905  002D86  5B6E               	subwfb	(?___wmul+1)& (0+255),f,b
 13906  002D88  0E30               	movlw	48
 13907  002D8A  256D               	addwf	?___wmul& (0+255),w,b
 13908  002D8C  6F81               	movwf	atoi@n& (0+255),b
 13909  002D8E  0E00               	movlw	0
 13910  002D90  216E               	addwfc	(?___wmul+1)& (0+255),w,b
 13911  002D92  6F82               	movwf	(atoi@n+1)& (0+255),b
 13912  002D94  EF79  F016         	goto	l6966
 13913  002D98                     l6974:
 13914                           
 13915                           ; BSR set to: 0
 13916  002D98  0ED0               	movlw	208
 13917  002D9A  6F76               	movwf	??_atoi& (0+255),b
 13918  002D9C  0EFF               	movlw	255
 13919  002D9E  6F77               	movwf	(??_atoi+1)& (0+255),b
 13920  002DA0  C074  FFF6         	movff	atoi@s,tblptrl
 13921  002DA4  C075  FFF7         	movff	atoi@s+1,tblptrh
 13922  002DA8  0E00               	movlw	low (__mediumconst shr (0+16))
 13923  002DAA  6EF8               	movwf	tblptru,c
 13924  002DAC  0E0E               	movlw	(high __ramtop+-1)
 13925  002DAE  64F7               	cpfsgt	tblptrh,c
 13926  002DB0  D003               	bra	u7737
 13927  002DB2  0008               	tblrd		*
 13928  002DB4  50F5               	movf	tablat,w,c
 13929  002DB6  D005               	bra	u7730
 13930  002DB8                     u7737:
 13931  002DB8  CFF6 FFE1          	movff	tblptrl,fsr1l
 13932  002DBC  CFF7 FFE2          	movff	tblptrh,fsr1h
 13933  002DC0  50E7               	movf	indf1,w,c
 13934  002DC2                     u7730:
 13935  002DC2  0100               	movlb	0	; () banked
 13936  002DC4  6F78               	movwf	(??_atoi+2)& (0+255),b
 13937  002DC6  6B79               	clrf	(??_atoi+3)& (0+255),b
 13938  002DC8  5176               	movf	??_atoi& (0+255),w,b
 13939  002DCA  2778               	addwf	(??_atoi+2)& (0+255),f,b
 13940  002DCC  5177               	movf	(??_atoi+1)& (0+255),w,b
 13941  002DCE  2379               	addwfc	(??_atoi+3)& (0+255),f,b
 13942  002DD0  5179               	movf	(??_atoi+3)& (0+255),w,b
 13943  002DD2  E10A               	bnz	u7740
 13944  002DD4  0E0A               	movlw	10
 13945  002DD6  5D78               	subwf	(??_atoi+2)& (0+255),w,b
 13946  002DD8  A0D8               	btfss	status,0,c
 13947  002DDA  EFF1  F016         	goto	u7741
 13948  002DDE  EFF4  F016         	goto	u7740
 13949  002DE2                     u7741:
 13950  002DE2  0E01               	movlw	1
 13951  002DE4  EFF5  F016         	goto	u7750
 13952  002DE8                     u7740:
 13953  002DE8  0E00               	movlw	0
 13954  002DEA                     u7750:
 13955  002DEA  6F7E               	movwf	_atoi$2399& (0+255),b
 13956  002DEC  6B7F               	clrf	(_atoi$2399+1)& (0+255),b
 13957  002DEE                     
 13958                           ; BSR set to: 0
 13959  002DEE  517E               	movf	_atoi$2399& (0+255),w,b
 13960  002DF0  117F               	iorwf	(_atoi$2399+1)& (0+255),w,b
 13961  002DF2  A4D8               	btfss	status,2,c
 13962  002DF4  EFFE  F016         	goto	u7761
 13963  002DF8  EF00  F017         	goto	u7760
 13964  002DFC                     u7761:
 13965  002DFC  EFA3  F016         	goto	l6970
 13966  002E00                     u7760:
 13967  002E00                     
 13968                           ; BSR set to: 0
 13969  002E00  517A               	movf	atoi@neg& (0+255),w,b
 13970  002E02  117B               	iorwf	(atoi@neg+1)& (0+255),w,b
 13971  002E04  A4D8               	btfss	status,2,c
 13972  002E06  EF07  F017         	goto	u7771
 13973  002E0A  EF09  F017         	goto	u7770
 13974  002E0E                     u7771:
 13975  002E0E  EF17  F017         	goto	l1622
 13976  002E12                     u7770:
 13977  002E12                     
 13978                           ; BSR set to: 0
 13979  002E12  C081  F076         	movff	atoi@n,??_atoi
 13980  002E16  C082  F077         	movff	atoi@n+1,??_atoi+1
 13981  002E1A  1F76               	comf	??_atoi& (0+255),f,b
 13982  002E1C  1F77               	comf	(??_atoi+1)& (0+255),f,b
 13983  002E1E  4B76               	infsnz	??_atoi& (0+255),f,b
 13984  002E20  2B77               	incf	(??_atoi+1)& (0+255),f,b
 13985  002E22  C076  F074         	movff	??_atoi,?_atoi
 13986  002E26  C077  F075         	movff	??_atoi+1,?_atoi+1
 13987  002E2A  EF1B  F017         	goto	l1625
 13988  002E2E                     l1622:
 13989                           
 13990                           ; BSR set to: 0
 13991  002E2E  C081  F074         	movff	atoi@n,?_atoi
 13992  002E32  C082  F075         	movff	atoi@n+1,?_atoi+1
 13993  002E36                     l1625:
 13994                           
 13995                           ; BSR set to: 0
 13996  002E36  0012               	return		;funcret
 13997  002E38                     __end_of_atoi:
 13998                           	opt callstack 0
 13999                           
 14000 ;; *************** function _isspace *****************
 14001 ;; Defined at:
 14002 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;  c               2   13[BANK0 ] int 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  2   13[BANK0 ] int 
 14009 ;; Registers used:
 14010 ;;		wreg, status,2, status,0
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14019 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14020 ;;Total ram usage:        7 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:    7
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_atoi
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030                           	psect	text59
 14031  004CA6                     __ptext59:
 14032                           	opt callstack 0
 14033  004CA6                     _isspace:
 14034                           	opt callstack 18
 14035  004CA6  0E01               	movlw	1
 14036  004CA8  0100               	movlb	0	; () banked
 14037  004CAA  6F73               	movwf	_isspace$2424& (0+255),b
 14038  004CAC                     
 14039                           ; BSR set to: 0
 14040  004CAC  0E20               	movlw	32
 14041  004CAE  196D               	xorwf	isspace@c& (0+255),w,b
 14042  004CB0  116E               	iorwf	(isspace@c+1)& (0+255),w,b
 14043  004CB2  B4D8               	btfsc	status,2,c
 14044  004CB4  EF5E  F026         	goto	u7641
 14045  004CB8  EF60  F026         	goto	u7640
 14046  004CBC                     u7641:
 14047  004CBC  EF79  F026         	goto	l6942
 14048  004CC0                     u7640:
 14049  004CC0                     
 14050                           ; BSR set to: 0
 14051  004CC0  0EF7               	movlw	247
 14052  004CC2  6F6F               	movwf	??_isspace& (0+255),b
 14053  004CC4  0EFF               	movlw	255
 14054  004CC6  6F70               	movwf	(??_isspace+1)& (0+255),b
 14055  004CC8  C06D  F071         	movff	isspace@c,??_isspace+2
 14056  004CCC  C06E  F072         	movff	isspace@c+1,??_isspace+3
 14057  004CD0  516F               	movf	??_isspace& (0+255),w,b
 14058  004CD2  2771               	addwf	(??_isspace+2)& (0+255),f,b
 14059  004CD4  5170               	movf	(??_isspace+1)& (0+255),w,b
 14060  004CD6  2372               	addwfc	(??_isspace+3)& (0+255),f,b
 14061  004CD8  5172               	movf	(??_isspace+3)& (0+255),w,b
 14062  004CDA  E109               	bnz	u7650
 14063  004CDC  0E05               	movlw	5
 14064  004CDE  5D71               	subwf	(??_isspace+2)& (0+255),w,b
 14065  004CE0  A0D8               	btfss	status,0,c
 14066  004CE2  EF75  F026         	goto	u7651
 14067  004CE6  EF77  F026         	goto	u7650
 14068  004CEA                     u7651:
 14069  004CEA  EF79  F026         	goto	l6942
 14070  004CEE                     u7650:
 14071  004CEE                     
 14072                           ; BSR set to: 0
 14073  004CEE  0E00               	movlw	0
 14074  004CF0  6F73               	movwf	_isspace$2424& (0+255),b
 14075  004CF2                     l6942:
 14076                           
 14077                           ; BSR set to: 0
 14078  004CF2  C073  F06D         	movff	_isspace$2424,?_isspace
 14079  004CF6  6B6E               	clrf	(?_isspace+1)& (0+255),b
 14080  004CF8                     
 14081                           ; BSR set to: 0
 14082  004CF8  0012               	return		;funcret
 14083  004CFA                     __end_of_isspace:
 14084                           	opt callstack 0
 14085                           
 14086 ;; *************** function _isdigit *****************
 14087 ;; Defined at:
 14088 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  c               2   13[BANK0 ] int 
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  2   13[BANK0 ] int 
 14095 ;; Registers used:
 14096 ;;		wreg, status,2, status,0
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14105 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14106 ;;Total ram usage:        6 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; Hardware stack levels required when called:    7
 14109 ;; This function calls:
 14110 ;;		Nothing
 14111 ;; This function is called by:
 14112 ;;		_vfpfcnvrt
 14113 ;;		_atoi
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text60
 14118  005060                     __ptext60:
 14119                           	opt callstack 0
 14120  005060                     _isdigit:
 14121                           	opt callstack 19
 14122  005060  0ED0               	movlw	208
 14123  005062  0100               	movlb	0	; () banked
 14124  005064  6F6F               	movwf	??_isdigit& (0+255),b
 14125  005066  0EFF               	movlw	255
 14126  005068  6F70               	movwf	(??_isdigit+1)& (0+255),b
 14127  00506A  C06D  F071         	movff	isdigit@c,??_isdigit+2
 14128  00506E  C06E  F072         	movff	isdigit@c+1,??_isdigit+3
 14129  005072  516F               	movf	??_isdigit& (0+255),w,b
 14130  005074  2771               	addwf	(??_isdigit+2)& (0+255),f,b
 14131  005076  5170               	movf	(??_isdigit+1)& (0+255),w,b
 14132  005078  2372               	addwfc	(??_isdigit+3)& (0+255),f,b
 14133  00507A  5172               	movf	(??_isdigit+3)& (0+255),w,b
 14134  00507C  E10A               	bnz	u7420
 14135  00507E  0E0A               	movlw	10
 14136  005080  5D71               	subwf	(??_isdigit+2)& (0+255),w,b
 14137  005082  A0D8               	btfss	status,0,c
 14138  005084  EF46  F028         	goto	u7421
 14139  005088  EF49  F028         	goto	u7420
 14140  00508C                     u7421:
 14141  00508C  0E01               	movlw	1
 14142  00508E  EF4A  F028         	goto	u7430
 14143  005092                     u7420:
 14144  005092  0E00               	movlw	0
 14145  005094                     u7430:
 14146  005094  6F6D               	movwf	?_isdigit& (0+255),b
 14147  005096  6B6E               	clrf	(?_isdigit+1)& (0+255),b
 14148  005098                     
 14149                           ; BSR set to: 0
 14150  005098  0012               	return		;funcret
 14151  00509A                     __end_of_isdigit:
 14152                           	opt callstack 0
 14153                           
 14154 ;; *************** function ___wmul *****************
 14155 ;; Defined at:
 14156 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14157 ;; Parameters:    Size  Location     Type
 14158 ;;  multiplier      2   13[BANK0 ] unsigned int 
 14159 ;;  multiplicand    2   15[BANK0 ] unsigned int 
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  product         2   17[BANK0 ] unsigned int 
 14162 ;; Return value:  Size  Location     Type
 14163 ;;                  2   13[BANK0 ] unsigned int 
 14164 ;; Registers used:
 14165 ;;		wreg, status,2, status,0, prodl, prodh
 14166 ;; Tracked objects:
 14167 ;;		On entry : 0/0
 14168 ;;		On exit  : 0/0
 14169 ;;		Unchanged: 0/0
 14170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14171 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14172 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14174 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14175 ;;Total ram usage:        6 bytes
 14176 ;; Hardware stack levels used:    1
 14177 ;; Hardware stack levels required when called:    7
 14178 ;; This function calls:
 14179 ;;		Nothing
 14180 ;; This function is called by:
 14181 ;;		_atoi
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           	psect	text61
 14186  00524C                     __ptext61:
 14187                           	opt callstack 0
 14188  00524C                     ___wmul:
 14189                           	opt callstack 18
 14190  00524C  0100               	movlb	0	; () banked
 14191  00524E  516D               	movf	___wmul@multiplier& (0+255),w,b
 14192  005250  036F               	mulwf	___wmul@multiplicand& (0+255),b
 14193  005252  CFF3 F071          	movff	prodl,___wmul@product
 14194  005256  CFF4 F072          	movff	prodh,___wmul@product+1
 14195  00525A  516D               	movf	___wmul@multiplier& (0+255),w,b
 14196  00525C  0370               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14197  00525E  50F3               	movf	243,w,c
 14198  005260  2772               	addwf	(___wmul@product+1)& (0+255),f,b
 14199  005262  516E               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14200  005264  036F               	mulwf	___wmul@multiplicand& (0+255),b
 14201  005266  50F3               	movf	243,w,c
 14202  005268  2772               	addwf	(___wmul@product+1)& (0+255),f,b
 14203  00526A                     
 14204                           ; BSR set to: 0
 14205  00526A  C071  F06D         	movff	___wmul@product,?___wmul
 14206  00526E  C072  F06E         	movff	___wmul@product+1,?___wmul+1
 14207  005272                     
 14208                           ; BSR set to: 0
 14209  005272  0012               	return		;funcret
 14210  005274                     __end_of___wmul:
 14211                           	opt callstack 0
 14212                           
 14213 ;; *************** function ___xxtofl *****************
 14214 ;; Defined at:
 14215 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 14216 ;; Parameters:    Size  Location     Type
 14217 ;;  sign            1    wreg     unsigned char 
 14218 ;;  val             4   35[BANK0 ] long 
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;  sign            1   43[BANK0 ] unsigned char 
 14221 ;;  arg             4   45[BANK0 ] unsigned long 
 14222 ;;  exp             1   44[BANK0 ] unsigned char 
 14223 ;; Return value:  Size  Location     Type
 14224 ;;                  4   35[BANK0 ] unsigned char 
 14225 ;; Registers used:
 14226 ;;		wreg, status,2, status,0
 14227 ;; Tracked objects:
 14228 ;;		On entry : 0/0
 14229 ;;		On exit  : 0/0
 14230 ;;		Unchanged: 0/0
 14231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14233 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14235 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14236 ;;Total ram usage:       14 bytes
 14237 ;; Hardware stack levels used:    1
 14238 ;; Hardware stack levels required when called:    7
 14239 ;; This function calls:
 14240 ;;		Nothing
 14241 ;; This function is called by:
 14242 ;;		_Out_USART
 14243 ;; This function uses a non-reentrant model
 14244 ;;
 14245                           
 14246                           	psect	text62
 14247  003420                     __ptext62:
 14248                           	opt callstack 0
 14249  003420                     ___xxtofl:
 14250                           	opt callstack 22
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;incstack = 0
 14254                           ;___xxtofl@sign stored from wreg
 14255  003420  0100               	movlb	0	; () banked
 14256  003422  6F8B               	movwf	___xxtofl@sign& (0+255),b
 14257  003424  0100               	movlb	0	; () banked
 14258  003426  518B               	movf	___xxtofl@sign& (0+255),w,b
 14259  003428  B4D8               	btfsc	status,2,c
 14260  00342A  EF19  F01A         	goto	u9061
 14261  00342E  EF1B  F01A         	goto	u9060
 14262  003432                     u9061:
 14263  003432  EF3D  F01A         	goto	l1571
 14264  003436                     u9060:
 14265  003436                     
 14266                           ; BSR set to: 0
 14267  003436  BF86               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 14268  003438  EF22  F01A         	goto	u9070
 14269  00343C  EF20  F01A         	goto	u9071
 14270  003440                     u9071:
 14271  003440  EF3D  F01A         	goto	l1571
 14272  003444                     u9070:
 14273  003444                     
 14274                           ; BSR set to: 0
 14275  003444  C083  F087         	movff	___xxtofl@val,??___xxtofl
 14276  003448  C084  F088         	movff	___xxtofl@val+1,??___xxtofl+1
 14277  00344C  C085  F089         	movff	___xxtofl@val+2,??___xxtofl+2
 14278  003450  C086  F08A         	movff	___xxtofl@val+3,??___xxtofl+3
 14279  003454  1F87               	comf	??___xxtofl& (0+255),f,b
 14280  003456  1F88               	comf	(??___xxtofl+1)& (0+255),f,b
 14281  003458  1F89               	comf	(??___xxtofl+2)& (0+255),f,b
 14282  00345A  1F8A               	comf	(??___xxtofl+3)& (0+255),f,b
 14283  00345C  2B87               	incf	??___xxtofl& (0+255),f,b
 14284  00345E  0E00               	movlw	0
 14285  003460  2388               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14286  003462  2389               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14287  003464  238A               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14288  003466  C087  F08D         	movff	??___xxtofl,___xxtofl@arg
 14289  00346A  C088  F08E         	movff	??___xxtofl+1,___xxtofl@arg+1
 14290  00346E  C089  F08F         	movff	??___xxtofl+2,___xxtofl@arg+2
 14291  003472  C08A  F090         	movff	??___xxtofl+3,___xxtofl@arg+3
 14292  003476  EF45  F01A         	goto	l7822
 14293  00347A                     l1571:
 14294                           
 14295                           ; BSR set to: 0
 14296  00347A  C083  F08D         	movff	___xxtofl@val,___xxtofl@arg
 14297  00347E  C084  F08E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14298  003482  C085  F08F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14299  003486  C086  F090         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14300  00348A                     l7822:
 14301                           
 14302                           ; BSR set to: 0
 14303  00348A  5183               	movf	___xxtofl@val& (0+255),w,b
 14304  00348C  1184               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14305  00348E  1185               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14306  003490  1186               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14307  003492  A4D8               	btfss	status,2,c
 14308  003494  EF4E  F01A         	goto	u9081
 14309  003498  EF50  F01A         	goto	u9080
 14310  00349C                     u9081:
 14311  00349C  EF5A  F01A         	goto	l7828
 14312  0034A0                     u9080:
 14313  0034A0                     
 14314                           ; BSR set to: 0
 14315  0034A0  0E00               	movlw	0
 14316  0034A2  6F83               	movwf	?___xxtofl& (0+255),b
 14317  0034A4  0E00               	movlw	0
 14318  0034A6  6F84               	movwf	(?___xxtofl+1)& (0+255),b
 14319  0034A8  0E00               	movlw	0
 14320  0034AA  6F85               	movwf	(?___xxtofl+2)& (0+255),b
 14321  0034AC  0E00               	movlw	0
 14322  0034AE  6F86               	movwf	(?___xxtofl+3)& (0+255),b
 14323  0034B0  EFEB  F01A         	goto	l1574
 14324  0034B4                     l7828:
 14325                           
 14326                           ; BSR set to: 0
 14327  0034B4  0E96               	movlw	150
 14328  0034B6  6F8C               	movwf	___xxtofl@exp& (0+255),b
 14329  0034B8  EF64  F01A         	goto	l7832
 14330  0034BC                     l7830:
 14331                           
 14332                           ; BSR set to: 0
 14333  0034BC  2B8C               	incf	___xxtofl@exp& (0+255),f,b
 14334  0034BE  90D8               	bcf	status,0,c
 14335  0034C0  3390               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14336  0034C2  338F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14337  0034C4  338E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14338  0034C6  338D               	rrcf	___xxtofl@arg& (0+255),f,b
 14339  0034C8                     l7832:
 14340                           
 14341                           ; BSR set to: 0
 14342  0034C8  0E00               	movlw	0
 14343  0034CA  158D               	andwf	___xxtofl@arg& (0+255),w,b
 14344  0034CC  6F87               	movwf	??___xxtofl& (0+255),b
 14345  0034CE  0E00               	movlw	0
 14346  0034D0  158E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14347  0034D2  6F88               	movwf	(??___xxtofl+1)& (0+255),b
 14348  0034D4  0E00               	movlw	0
 14349  0034D6  158F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14350  0034D8  6F89               	movwf	(??___xxtofl+2)& (0+255),b
 14351  0034DA  0EFE               	movlw	254
 14352  0034DC  1590               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14353  0034DE  6F8A               	movwf	(??___xxtofl+3)& (0+255),b
 14354  0034E0  5187               	movf	??___xxtofl& (0+255),w,b
 14355  0034E2  1188               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14356  0034E4  1189               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14357  0034E6  118A               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14358  0034E8  A4D8               	btfss	status,2,c
 14359  0034EA  EF79  F01A         	goto	u9091
 14360  0034EE  EF7B  F01A         	goto	u9090
 14361  0034F2                     u9091:
 14362  0034F2  EF5E  F01A         	goto	l7830
 14363  0034F6                     u9090:
 14364  0034F6  EF89  F01A         	goto	l1578
 14365  0034FA                     l7834:
 14366                           
 14367                           ; BSR set to: 0
 14368  0034FA  2B8C               	incf	___xxtofl@exp& (0+255),f,b
 14369  0034FC                     
 14370                           ; BSR set to: 0
 14371  0034FC  0E01               	movlw	1
 14372  0034FE  278D               	addwf	___xxtofl@arg& (0+255),f,b
 14373  003500  0E00               	movlw	0
 14374  003502  238E               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14375  003504  238F               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14376  003506  2390               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14377  003508                     
 14378                           ; BSR set to: 0
 14379  003508  90D8               	bcf	status,0,c
 14380  00350A  3390               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14381  00350C  338F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14382  00350E  338E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14383  003510  338D               	rrcf	___xxtofl@arg& (0+255),f,b
 14384  003512                     l1578:
 14385                           
 14386                           ; BSR set to: 0
 14387  003512  0E00               	movlw	0
 14388  003514  158D               	andwf	___xxtofl@arg& (0+255),w,b
 14389  003516  6F87               	movwf	??___xxtofl& (0+255),b
 14390  003518  0E00               	movlw	0
 14391  00351A  158E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14392  00351C  6F88               	movwf	(??___xxtofl+1)& (0+255),b
 14393  00351E  0E00               	movlw	0
 14394  003520  158F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14395  003522  6F89               	movwf	(??___xxtofl+2)& (0+255),b
 14396  003524  0EFF               	movlw	255
 14397  003526  1590               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14398  003528  6F8A               	movwf	(??___xxtofl+3)& (0+255),b
 14399  00352A  5187               	movf	??___xxtofl& (0+255),w,b
 14400  00352C  1188               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14401  00352E  1189               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14402  003530  118A               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14403  003532  A4D8               	btfss	status,2,c
 14404  003534  EF9E  F01A         	goto	u9101
 14405  003538  EFA0  F01A         	goto	u9100
 14406  00353C                     u9101:
 14407  00353C  EF7D  F01A         	goto	l7834
 14408  003540                     u9100:
 14409  003540  EFA8  F01A         	goto	l7842
 14410  003544                     l7840:
 14411                           
 14412                           ; BSR set to: 0
 14413  003544  078C               	decf	___xxtofl@exp& (0+255),f,b
 14414  003546  90D8               	bcf	status,0,c
 14415  003548  378D               	rlcf	___xxtofl@arg& (0+255),f,b
 14416  00354A  378E               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14417  00354C  378F               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14418  00354E  3790               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14419  003550                     l7842:
 14420                           
 14421                           ; BSR set to: 0
 14422  003550  BF8F               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14423  003552  EFAD  F01A         	goto	u9111
 14424  003556  EFAF  F01A         	goto	u9110
 14425  00355A                     u9111:
 14426  00355A  EFB7  F01A         	goto	l1585
 14427  00355E                     u9110:
 14428  00355E                     
 14429                           ; BSR set to: 0
 14430  00355E  0E02               	movlw	2
 14431  003560  618C               	cpfslt	___xxtofl@exp& (0+255),b
 14432  003562  EFB5  F01A         	goto	u9121
 14433  003566  EFB7  F01A         	goto	u9120
 14434  00356A                     u9121:
 14435  00356A  EFA2  F01A         	goto	l7840
 14436  00356E                     u9120:
 14437  00356E                     l1585:
 14438                           
 14439                           ; BSR set to: 0
 14440  00356E  B18C               	btfsc	___xxtofl@exp& (0+255),0,b
 14441  003570  EFBC  F01A         	goto	u9131
 14442  003574  EFBE  F01A         	goto	u9130
 14443  003578                     u9131:
 14444  003578  EFBF  F01A         	goto	l7848
 14445  00357C                     u9130:
 14446  00357C                     
 14447                           ; BSR set to: 0
 14448  00357C  9F8F               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 14449  00357E                     l7848:
 14450                           
 14451                           ; BSR set to: 0
 14452  00357E  90D8               	bcf	status,0,c
 14453  003580  338C               	rrcf	___xxtofl@exp& (0+255),f,b
 14454  003582                     
 14455                           ; BSR set to: 0
 14456  003582  C08C  F087         	movff	___xxtofl@exp,??___xxtofl
 14457  003586  6B88               	clrf	(??___xxtofl+1)& (0+255),b
 14458  003588  6B89               	clrf	(??___xxtofl+2)& (0+255),b
 14459  00358A  6B8A               	clrf	(??___xxtofl+3)& (0+255),b
 14460  00358C  C087  F08A         	movff	??___xxtofl,??___xxtofl+3
 14461  003590  6B89               	clrf	(??___xxtofl+2)& (0+255),b
 14462  003592  6B88               	clrf	(??___xxtofl+1)& (0+255),b
 14463  003594  6B87               	clrf	??___xxtofl& (0+255),b
 14464  003596  5187               	movf	??___xxtofl& (0+255),w,b
 14465  003598  138D               	iorwf	___xxtofl@arg& (0+255),f,b
 14466  00359A  5188               	movf	(??___xxtofl+1)& (0+255),w,b
 14467  00359C  138E               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14468  00359E  5189               	movf	(??___xxtofl+2)& (0+255),w,b
 14469  0035A0  138F               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14470  0035A2  518A               	movf	(??___xxtofl+3)& (0+255),w,b
 14471  0035A4  1390               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14472  0035A6                     
 14473                           ; BSR set to: 0
 14474  0035A6  518B               	movf	___xxtofl@sign& (0+255),w,b
 14475  0035A8  B4D8               	btfsc	status,2,c
 14476  0035AA  EFD9  F01A         	goto	u9141
 14477  0035AE  EFDB  F01A         	goto	u9140
 14478  0035B2                     u9141:
 14479  0035B2  EFE3  F01A         	goto	l7858
 14480  0035B6                     u9140:
 14481  0035B6                     
 14482                           ; BSR set to: 0
 14483  0035B6  BF86               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 14484  0035B8  EFE2  F01A         	goto	u9150
 14485  0035BC  EFE0  F01A         	goto	u9151
 14486  0035C0                     u9151:
 14487  0035C0  EFE3  F01A         	goto	l7858
 14488  0035C4                     u9150:
 14489  0035C4                     
 14490                           ; BSR set to: 0
 14491  0035C4  8F90               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14492  0035C6                     l7858:
 14493                           
 14494                           ; BSR set to: 0
 14495  0035C6  C08D  F083         	movff	___xxtofl@arg,?___xxtofl
 14496  0035CA  C08E  F084         	movff	___xxtofl@arg+1,?___xxtofl+1
 14497  0035CE  C08F  F085         	movff	___xxtofl@arg+2,?___xxtofl+2
 14498  0035D2  C090  F086         	movff	___xxtofl@arg+3,?___xxtofl+3
 14499  0035D6                     l1574:
 14500                           
 14501                           ; BSR set to: 0
 14502  0035D6  0012               	return		;funcret
 14503  0035D8                     __end_of___xxtofl:
 14504                           	opt callstack 0
 14505                           
 14506 ;; *************** function _EUSART1_is_rx_ready *****************
 14507 ;; Defined at:
 14508 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 14509 ;; Parameters:    Size  Location     Type
 14510 ;;		None
 14511 ;; Auto vars:     Size  Location     Type
 14512 ;;		None
 14513 ;; Return value:  Size  Location     Type
 14514 ;;                  1    wreg      _Bool 
 14515 ;; Registers used:
 14516 ;;		wreg
 14517 ;; Tracked objects:
 14518 ;;		On entry : 0/0
 14519 ;;		On exit  : 0/0
 14520 ;;		Unchanged: 0/0
 14521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14526 ;;Total ram usage:        0 bytes
 14527 ;; Hardware stack levels used:    1
 14528 ;; Hardware stack levels required when called:    7
 14529 ;; This function calls:
 14530 ;;		Nothing
 14531 ;; This function is called by:
 14532 ;;		_Out_USART
 14533 ;;		_main
 14534 ;; This function uses a non-reentrant model
 14535 ;;
 14536                           
 14537                           	psect	text63
 14538  005394                     __ptext63:
 14539                           	opt callstack 0
 14540  005394                     _EUSART1_is_rx_ready:
 14541                           	opt callstack 22
 14542  005394                     
 14543                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 14544  005394  BA9E               	btfsc	158,5,c	;volatile
 14545  005396  EFCF  F029         	goto	u8931
 14546  00539A  EFD2  F029         	goto	u8930
 14547  00539E                     u8931:
 14548  00539E  0E01               	movlw	1
 14549  0053A0  EFD3  F029         	goto	u8936
 14550  0053A4                     u8930:
 14551  0053A4  0E00               	movlw	0
 14552  0053A6                     u8936:
 14553  0053A6  0012               	return		;funcret
 14554  0053A8                     __end_of_EUSART1_is_rx_ready:
 14555                           	opt callstack 0
 14556                           
 14557 ;; *************** function _EUSART1_Read *****************
 14558 ;; Defined at:
 14559 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 14560 ;; Parameters:    Size  Location     Type
 14561 ;;		None
 14562 ;; Auto vars:     Size  Location     Type
 14563 ;;		None
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      unsigned char 
 14566 ;; Registers used:
 14567 ;;		wreg, status,2
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14577 ;;Total ram usage:        0 bytes
 14578 ;; Hardware stack levels used:    1
 14579 ;; Hardware stack levels required when called:    7
 14580 ;; This function calls:
 14581 ;;		Nothing
 14582 ;; This function is called by:
 14583 ;;		_Out_USART
 14584 ;;		_getch
 14585 ;; This function uses a non-reentrant model
 14586 ;;
 14587                           
 14588                           	psect	text64
 14589  005274                     __ptext64:
 14590                           	opt callstack 0
 14591  005274                     _EUSART1_Read:
 14592                           	opt callstack 22
 14593  005274                     l292:
 14594                           
 14595                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 14596  005274  AA9E               	btfss	158,5,c	;volatile
 14597  005276  EF3F  F029         	goto	u8941
 14598  00527A  EF41  F029         	goto	u8940
 14599  00527E                     u8941:
 14600  00527E  EF3A  F029         	goto	l292
 14601  005282                     u8940:
 14602  005282                     
 14603                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 14604  005282  0E00               	movlw	0
 14605  005284  6E5E               	movwf	_eusart1RxLastError^0,c	;volatile
 14606  005286                     
 14607                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 14608  005286  A2AB               	btfss	171,1,c	;volatile
 14609  005288  EF48  F029         	goto	u8951
 14610  00528C  EF4A  F029         	goto	u8950
 14611  005290                     u8951:
 14612  005290  EF4C  F029         	goto	l7746
 14613  005294                     u8950:
 14614  005294                     
 14615                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 14616  005294  98AB               	bcf	171,4,c	;volatile
 14617                           
 14618                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 14619  005296  88AB               	bsf	171,4,c	;volatile
 14620  005298                     l7746:
 14621                           
 14622                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 14623  005298  50AE               	movf	174,w,c	;volatile
 14624  00529A  0012               	return		;funcret
 14625  00529C                     __end_of_EUSART1_Read:
 14626                           	opt callstack 0
 14627                           
 14628 ;; *************** function _INTERRUPT_InterruptManager *****************
 14629 ;; Defined at:
 14630 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;		None
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;		None
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  1    wreg      void 
 14637 ;; Registers used:
 14638 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;Total ram usage:        4 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:    6
 14651 ;; This function calls:
 14652 ;;		_PIN_MANAGER_IOC
 14653 ;;		_TMR2_ISR
 14654 ;; This function is called by:
 14655 ;;		Interrupt level 2
 14656 ;; This function uses a non-reentrant model
 14657 ;;
 14658                           
 14659                           	psect	intcode
 14660  000008                     __pintcode:
 14661                           	opt callstack 0
 14662  000008                     _INTERRUPT_InterruptManager:
 14663                           	opt callstack 14
 14664                           
 14665                           ;incstack = 0
 14666  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14667  00000A  CFFA F054          	movff	pclath,??_INTERRUPT_InterruptManager
 14668  00000E  CFFB F055          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14669  000012  CFF3 F056          	movff	prodl,??_INTERRUPT_InterruptManager+2
 14670  000016  CFF4 F057          	movff	prodh,??_INTERRUPT_InterruptManager+3
 14671  00001A                     
 14672                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 14673  00001A  A6F2               	btfss	242,3,c	;volatile
 14674  00001C  EF12  F000         	goto	i2u704_41
 14675  000020  EF14  F000         	goto	i2u704_40
 14676  000024                     i2u704_41:
 14677  000024  EF1F  F000         	goto	i2l346
 14678  000028                     i2u704_40:
 14679  000028  A0F2               	btfss	242,0,c	;volatile
 14680  00002A  EF19  F000         	goto	i2u705_41
 14681  00002E  EF1B  F000         	goto	i2u705_40
 14682  000032                     i2u705_41:
 14683  000032  EF1F  F000         	goto	i2l346
 14684  000036                     i2u705_40:
 14685  000036                     
 14686                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 14687  000036  ECB3  F029         	call	_PIN_MANAGER_IOC	;wreg free
 14688                           
 14689                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 14690  00003A  EF38  F000         	goto	i2l352
 14691  00003E                     i2l346:
 14692  00003E  ACF2               	btfss	242,6,c	;volatile
 14693  000040  EF24  F000         	goto	i2u706_41
 14694  000044  EF26  F000         	goto	i2u706_40
 14695  000048                     i2u706_41:
 14696  000048  EF38  F000         	goto	i2l352
 14697  00004C                     i2u706_40:
 14698  00004C                     
 14699                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 14700  00004C  A29D               	btfss	157,1,c	;volatile
 14701  00004E  EF2B  F000         	goto	i2u707_41
 14702  000052  EF2D  F000         	goto	i2u707_40
 14703  000056                     i2u707_41:
 14704  000056  EF38  F000         	goto	i2l351
 14705  00005A                     i2u707_40:
 14706  00005A  A29E               	btfss	158,1,c	;volatile
 14707  00005C  EF32  F000         	goto	i2u708_41
 14708  000060  EF34  F000         	goto	i2u708_40
 14709  000064                     i2u708_41:
 14710  000064  EF38  F000         	goto	i2l351
 14711  000068                     i2u708_40:
 14712  000068                     
 14713                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR2_ISR();
 14714  000068  ECFD  F028         	call	_TMR2_ISR	;wreg free
 14715                           
 14716                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 14717  00006C  EF38  F000         	goto	i2l352
 14718  000070                     i2l351:
 14719  000070                     i2l352:
 14720  000070  C057  FFF4         	movff	??_INTERRUPT_InterruptManager+3,prodh
 14721  000074  C056  FFF3         	movff	??_INTERRUPT_InterruptManager+2,prodl
 14722  000078  C055  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14723  00007C  C054  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14724  000080  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14725  000082  0011               	retfie		f
 14726  000084                     __end_of_INTERRUPT_InterruptManager:
 14727                           	opt callstack 0
 14728                           
 14729 ;; *************** function _TMR2_ISR *****************
 14730 ;; Defined at:
 14731 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 14732 ;; Parameters:    Size  Location     Type
 14733 ;;		None
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;		None
 14736 ;; Return value:  Size  Location     Type
 14737 ;;                  1    wreg      void 
 14738 ;; Registers used:
 14739 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/0
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14749 ;;Total ram usage:        0 bytes
 14750 ;; Hardware stack levels used:    1
 14751 ;; Hardware stack levels required when called:    5
 14752 ;; This function calls:
 14753 ;;		_TMR2_CallBack
 14754 ;; This function is called by:
 14755 ;;		_INTERRUPT_InterruptManager
 14756 ;; This function uses a non-reentrant model
 14757 ;;
 14758                           
 14759                           	psect	text66
 14760  0051FA                     __ptext66:
 14761                           	opt callstack 0
 14762  0051FA                     _TMR2_ISR:
 14763                           	opt callstack 14
 14764  0051FA                     
 14765                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 14766  0051FA  929E               	bcf	158,1,c	;volatile
 14767  0051FC                     
 14768                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
 14769  0051FC  4A5C               	infsnz	TMR2_ISR@CountCallBack^0,f,c	;volatile
 14770  0051FE  2A5D               	incf	(TMR2_ISR@CountCallBack+1)^0,f,c	;volatile
 14771  005200  505D               	movf	(TMR2_ISR@CountCallBack+1)^0,w,c	;volatile
 14772  005202  E109               	bnz	i2u688_40
 14773  005204  0E0A               	movlw	10
 14774  005206  5C5C               	subwf	TMR2_ISR@CountCallBack^0,w,c	;volatile
 14775  005208  A0D8               	btfss	status,0,c
 14776  00520A  EF09  F029         	goto	i2u688_41
 14777  00520E  EF0B  F029         	goto	i2u688_40
 14778  005212                     i2u688_41:
 14779  005212  EF11  F029         	goto	i2l396
 14780  005216                     i2u688_40:
 14781  005216                     
 14782                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 14783  005216  ECCF  F028         	call	_TMR2_CallBack	;wreg free
 14784  00521A                     
 14785                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 14786  00521A  0E00               	movlw	0
 14787  00521C  6E5D               	movwf	(TMR2_ISR@CountCallBack+1)^0,c	;volatile
 14788  00521E  0E00               	movlw	0
 14789  005220  6E5C               	movwf	TMR2_ISR@CountCallBack^0,c	;volatile
 14790  005222                     i2l396:
 14791  005222  0012               	return		;funcret
 14792  005224                     __end_of_TMR2_ISR:
 14793                           	opt callstack 0
 14794                           
 14795 ;; *************** function _TMR2_CallBack *****************
 14796 ;; Defined at:
 14797 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 14798 ;; Parameters:    Size  Location     Type
 14799 ;;		None
 14800 ;; Auto vars:     Size  Location     Type
 14801 ;;		None
 14802 ;; Return value:  Size  Location     Type
 14803 ;;                  1    wreg      void 
 14804 ;; Registers used:
 14805 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14806 ;; Tracked objects:
 14807 ;;		On entry : 0/0
 14808 ;;		On exit  : 0/0
 14809 ;;		Unchanged: 0/0
 14810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14815 ;;Total ram usage:        0 bytes
 14816 ;; Hardware stack levels used:    1
 14817 ;; Hardware stack levels required when called:    4
 14818 ;; This function calls:
 14819 ;;		Absolute function
 14820 ;;		_TIMER2_CALLBACK
 14821 ;;		_TMR2_DefaultInterruptHandler
 14822 ;; This function is called by:
 14823 ;;		_TMR2_ISR
 14824 ;; This function uses a non-reentrant model
 14825 ;;
 14826                           
 14827                           	psect	text67
 14828  00519E                     __ptext67:
 14829                           	opt callstack 0
 14830  00519E                     _TMR2_CallBack:
 14831                           	opt callstack 14
 14832  00519E                     
 14833                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 14834  00519E  0101               	movlb	1	; () banked
 14835  0051A0  517D               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14836  0051A2  117E               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14837  0051A4  B4D8               	btfsc	status,2,c
 14838  0051A6  EFD7  F028         	goto	i2u658_41
 14839  0051AA  EFD9  F028         	goto	i2u658_40
 14840  0051AE                     i2u658_41:
 14841  0051AE  EFE5  F028         	goto	i2l400
 14842  0051B2                     i2u658_40:
 14843  0051B2                     
 14844                           ; BSR set to: 1
 14845                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 14846  0051B2  D802               	call	i2u659_48
 14847  0051B4  EFE5  F028         	goto	i2u659_49
 14848  0051B8                     i2u659_48:
 14849  0051B8  0005               	push	
 14850  0051BA  6EFA               	movwf	pclath,c
 14851  0051BC  517D               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14852  0051BE  6EFD               	movwf	tosl,c
 14853  0051C0  517E               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14854  0051C2  6EFE               	movwf	tosh,c
 14855  0051C4  6AFF               	clrf	tosu,c
 14856  0051C6  50FA               	movf	pclath,w,c
 14857  0051C8  0012               	return		;indir
 14858  0051CA                     i2u659_49:
 14859  0051CA                     i2l400:
 14860  0051CA  0012               	return		;funcret
 14861  0051CC                     __end_of_TMR2_CallBack:
 14862                           	opt callstack 0
 14863                           
 14864 ;; *************** function _TIMER2_CALLBACK *****************
 14865 ;; Defined at:
 14866 ;;		line 89 in file "main.c"
 14867 ;; Parameters:    Size  Location     Type
 14868 ;;		None
 14869 ;; Auto vars:     Size  Location     Type
 14870 ;;		None
 14871 ;; Return value:  Size  Location     Type
 14872 ;;                  1    wreg      void 
 14873 ;; Registers used:
 14874 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14875 ;; Tracked objects:
 14876 ;;		On entry : 0/0
 14877 ;;		On exit  : 0/0
 14878 ;;		Unchanged: 0/0
 14879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14884 ;;Total ram usage:        0 bytes
 14885 ;; Hardware stack levels used:    1
 14886 ;; Hardware stack levels required when called:    3
 14887 ;; This function calls:
 14888 ;;		_Get_values
 14889 ;;		_PI_Controller
 14890 ;; This function is called by:
 14891 ;;		_main
 14892 ;;		_TMR2_CallBack
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text68
 14897  005418                     __ptext68:
 14898                           	opt callstack 0
 14899  005418                     _TIMER2_CALLBACK:
 14900                           	opt callstack 14
 14901  005418                     
 14902                           ;main.c: 90:     Get_values();
 14903  005418  EC13  F023         	call	_Get_values	;wreg free
 14904  00541C                     
 14905                           ;main.c: 91:     PI_Controller();
 14906  00541C  EC1F  F018         	call	_PI_Controller	;wreg free
 14907  005420  0012               	return		;funcret
 14908  005422                     __end_of_TIMER2_CALLBACK:
 14909                           	opt callstack 0
 14910                           
 14911 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 14912 ;; Defined at:
 14913 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		None
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used:    1
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		_TMR2_Initialize
 14937 ;;		_TMR2_CallBack
 14938 ;; This function uses a non-reentrant model
 14939 ;;
 14940                           
 14941                           	psect	text69
 14942  005436                     __ptext69:
 14943                           	opt callstack 0
 14944  005436                     _TMR2_DefaultInterruptHandler:
 14945                           	opt callstack 17
 14946  005436  0012               	return		;funcret
 14947  005438                     __end_of_TMR2_DefaultInterruptHandler:
 14948                           	opt callstack 0
 14949                           
 14950 ;; *************** function _PI_Controller *****************
 14951 ;; Defined at:
 14952 ;;		line 57 in file "main.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;		None
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1    wreg      void 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14970 ;;Total ram usage:        1 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:    2
 14973 ;; This function calls:
 14974 ;;		_EPWM1_LoadDutyValue
 14975 ;;		___fldiv
 14976 ;;		___flge
 14977 ;;		___flmul
 14978 ;;		___flsub
 14979 ;;		___fltol
 14980 ;;		i2___xxtofl
 14981 ;;		i2_abs
 14982 ;; This function is called by:
 14983 ;;		_TIMER2_CALLBACK
 14984 ;; This function uses a non-reentrant model
 14985 ;;
 14986                           
 14987                           	psect	text70
 14988  00303E                     __ptext70:
 14989                           	opt callstack 0
 14990  00303E                     _PI_Controller:
 14991                           	opt callstack 14
 14992  00303E                     
 14993                           ;main.c: 58:     error = setpoint - sensor;
 14994  00303E  C100  F011         	movff	_setpoint,___flsub@b
 14995  003042  C101  F012         	movff	_setpoint+1,___flsub@b+1
 14996  003046  C102  F013         	movff	_setpoint+2,___flsub@b+2
 14997  00304A  C103  F014         	movff	_setpoint+3,___flsub@b+3
 14998  00304E  C104  F015         	movff	_sensor,___flsub@a
 14999  003052  C105  F016         	movff	_sensor+1,___flsub@a+1
 15000  003056  C106  F017         	movff	_sensor+2,___flsub@a+2
 15001  00305A  C107  F018         	movff	_sensor+3,___flsub@a+3
 15002  00305E  EC13  F027         	call	___flsub	;wreg free
 15003  003062  C011  F0E2         	movff	?___flsub,_error
 15004  003066  C012  F0E3         	movff	?___flsub+1,_error+1
 15005  00306A  C013  F0E4         	movff	?___flsub+2,_error+2
 15006  00306E  C014  F0E5         	movff	?___flsub+3,_error+3
 15007  003072                     
 15008                           ;main.c: 60:     dc_value = (error * KP / 10.0);
 15009  003072  C190  F032         	movff	_KP,___flmul@a
 15010  003076  C191  F033         	movff	_KP+1,___flmul@a+1
 15011  00307A  C192  F034         	movff	_KP+2,___flmul@a+2
 15012  00307E  C193  F035         	movff	_KP+3,___flmul@a+3
 15013  003082  C0E2  F02E         	movff	_error,___flmul@b
 15014  003086  C0E3  F02F         	movff	_error+1,___flmul@b+1
 15015  00308A  C0E4  F030         	movff	_error+2,___flmul@b+2
 15016  00308E  C0E5  F031         	movff	_error+3,___flmul@b+3
 15017  003092  EC01  F00E         	call	___flmul	;wreg free
 15018  003096  C02E  F047         	movff	?___flmul,___fldiv@b
 15019  00309A  C02F  F048         	movff	?___flmul+1,___fldiv@b+1
 15020  00309E  C030  F049         	movff	?___flmul+2,___fldiv@b+2
 15021  0030A2  C031  F04A         	movff	?___flmul+3,___fldiv@b+3
 15022  0030A6  0E00               	movlw	0
 15023  0030A8  6E4B               	movwf	___fldiv@a^0,c
 15024  0030AA  0E00               	movlw	0
 15025  0030AC  6E4C               	movwf	(___fldiv@a+1)^0,c
 15026  0030AE  0E20               	movlw	32
 15027  0030B0  6E4D               	movwf	(___fldiv@a+2)^0,c
 15028  0030B2  0E41               	movlw	65
 15029  0030B4  6E4E               	movwf	(___fldiv@a+3)^0,c
 15030  0030B6  EC16  F010         	call	___fldiv	;wreg free
 15031  0030BA  C047  F058         	movff	?___fldiv,_dc_value
 15032  0030BE  C048  F059         	movff	?___fldiv+1,_dc_value+1
 15033  0030C2  C049  F05A         	movff	?___fldiv+2,_dc_value+2
 15034  0030C6  C04A  F05B         	movff	?___fldiv+3,_dc_value+3
 15035  0030CA                     
 15036                           ;main.c: 62:     if (dc_value > 100)
 15037  0030CA  0E00               	movlw	0
 15038  0030CC  6E01               	movwf	___flge@ff1^0,c
 15039  0030CE  0E00               	movlw	0
 15040  0030D0  6E02               	movwf	(___flge@ff1+1)^0,c
 15041  0030D2  0EC8               	movlw	200
 15042  0030D4  6E03               	movwf	(___flge@ff1+2)^0,c
 15043  0030D6  0E42               	movlw	66
 15044  0030D8  6E04               	movwf	(___flge@ff1+3)^0,c
 15045  0030DA  C058  F005         	movff	_dc_value,___flge@ff2
 15046  0030DE  C059  F006         	movff	_dc_value+1,___flge@ff2+1
 15047  0030E2  C05A  F007         	movff	_dc_value+2,___flge@ff2+2
 15048  0030E6  C05B  F008         	movff	_dc_value+3,___flge@ff2+3
 15049  0030EA  ECA2  F021         	call	___flge	;wreg free
 15050  0030EE  B0D8               	btfsc	status,0,c
 15051  0030F0  EF7C  F018         	goto	i2u599_41
 15052  0030F4  EF7E  F018         	goto	i2u599_40
 15053  0030F8                     i2u599_41:
 15054  0030F8  EF88  F018         	goto	i2l5504
 15055  0030FC                     i2u599_40:
 15056  0030FC                     
 15057                           ;main.c: 63:         dc_value = 100;
 15058  0030FC  0E00               	movlw	0
 15059  0030FE  6E58               	movwf	_dc_value^0,c
 15060  003100  0E00               	movlw	0
 15061  003102  6E59               	movwf	(_dc_value+1)^0,c
 15062  003104  0EC8               	movlw	200
 15063  003106  6E5A               	movwf	(_dc_value+2)^0,c
 15064  003108  0E42               	movlw	66
 15065  00310A  6E5B               	movwf	(_dc_value+3)^0,c
 15066  00310C  EF97  F018         	goto	i2l5508
 15067  003110                     i2l5504:
 15068  003110  BE5B               	btfsc	(_dc_value+3)^0,7,c
 15069  003112  EF8F  F018         	goto	i2u600_40
 15070  003116  EF8D  F018         	goto	i2u600_41
 15071  00311A                     i2u600_41:
 15072  00311A  EF97  F018         	goto	i2l5508
 15073  00311E                     i2u600_40:
 15074  00311E                     
 15075                           ;main.c: 65:         dc_value = 0;
 15076  00311E  0E00               	movlw	0
 15077  003120  6E58               	movwf	_dc_value^0,c
 15078  003122  0E00               	movlw	0
 15079  003124  6E59               	movwf	(_dc_value+1)^0,c
 15080  003126  0E00               	movlw	0
 15081  003128  6E5A               	movwf	(_dc_value+2)^0,c
 15082  00312A  0E00               	movlw	0
 15083  00312C  6E5B               	movwf	(_dc_value+3)^0,c
 15084  00312E                     i2l5508:
 15085                           
 15086                           ;main.c: 67:     dc_value = (long int) dc_value * 10.23;
 15087  00312E  C058  F001         	movff	_dc_value,___fltol@f1
 15088  003132  C059  F002         	movff	_dc_value+1,___fltol@f1+1
 15089  003136  C05A  F003         	movff	_dc_value+2,___fltol@f1+2
 15090  00313A  C05B  F004         	movff	_dc_value+3,___fltol@f1+3
 15091  00313E  EC1F  F021         	call	___fltol	;wreg free
 15092  003142  C001  F020         	movff	?___fltol,i2___xxtofl@val
 15093  003146  C002  F021         	movff	?___fltol+1,i2___xxtofl@val+1
 15094  00314A  C003  F022         	movff	?___fltol+2,i2___xxtofl@val+2
 15095  00314E  C004  F023         	movff	?___fltol+3,i2___xxtofl@val+3
 15096  003152  0E01               	movlw	1
 15097  003154  ECEC  F01A         	call	i2___xxtofl
 15098  003158  C020  F02E         	movff	?i2___xxtofl,___flmul@b
 15099  00315C  C021  F02F         	movff	?i2___xxtofl+1,___flmul@b+1
 15100  003160  C022  F030         	movff	?i2___xxtofl+2,___flmul@b+2
 15101  003164  C023  F031         	movff	?i2___xxtofl+3,___flmul@b+3
 15102  003168  0E14               	movlw	20
 15103  00316A  6E32               	movwf	___flmul@a^0,c
 15104  00316C  0EAE               	movlw	174
 15105  00316E  6E33               	movwf	(___flmul@a+1)^0,c
 15106  003170  0E23               	movlw	35
 15107  003172  6E34               	movwf	(___flmul@a+2)^0,c
 15108  003174  0E41               	movlw	65
 15109  003176  6E35               	movwf	(___flmul@a+3)^0,c
 15110  003178  EC01  F00E         	call	___flmul	;wreg free
 15111  00317C  C02E  F058         	movff	?___flmul,_dc_value
 15112  003180  C02F  F059         	movff	?___flmul+1,_dc_value+1
 15113  003184  C030  F05A         	movff	?___flmul+2,_dc_value+2
 15114  003188  C031  F05B         	movff	?___flmul+3,_dc_value+3
 15115  00318C                     
 15116                           ;main.c: 69:     EPWM1_LoadDutyValue(dc_value);
 15117  00318C  C058  F001         	movff	_dc_value,___fltol@f1
 15118  003190  C059  F002         	movff	_dc_value+1,___fltol@f1+1
 15119  003194  C05A  F003         	movff	_dc_value+2,___fltol@f1+2
 15120  003198  C05B  F004         	movff	_dc_value+3,___fltol@f1+3
 15121  00319C  EC1F  F021         	call	___fltol	;wreg free
 15122  0031A0  C001  F00B         	movff	?___fltol,EPWM1_LoadDutyValue@dutyValue
 15123  0031A4  C002  F00C         	movff	?___fltol+1,EPWM1_LoadDutyValue@dutyValue+1
 15124  0031A8  ECB7  F028         	call	_EPWM1_LoadDutyValue	;wreg free
 15125  0031AC                     
 15126                           ;main.c: 72:     if (abs(error) >= turn_on_value) {
 15127  0031AC  C0E2  F001         	movff	_error,___fltol@f1
 15128  0031B0  C0E3  F002         	movff	_error+1,___fltol@f1+1
 15129  0031B4  C0E4  F003         	movff	_error+2,___fltol@f1+2
 15130  0031B8  C0E5  F004         	movff	_error+3,___fltol@f1+3
 15131  0031BC  EC1F  F021         	call	___fltol	;wreg free
 15132  0031C0  C001  F00B         	movff	?___fltol,i2abs@a
 15133  0031C4  C002  F00C         	movff	?___fltol+1,i2abs@a+1
 15134  0031C8  EC9A  F027         	call	i2_abs	;wreg free
 15135  0031CC  0100               	movlb	0	; () banked
 15136  0031CE  51F0               	movf	_turn_on_value& (0+255),w,b
 15137  0031D0  5C0B               	subwf	?i2_abs^0,w,c
 15138  0031D2  500C               	movf	(?i2_abs+1)^0,w,c
 15139  0031D4  0A80               	xorlw	128
 15140  0031D6  6E53               	movwf	??_PI_Controller^0,c
 15141  0031D8  51F1               	movf	(_turn_on_value+1)& (0+255),w,b
 15142  0031DA  0A80               	xorlw	128
 15143  0031DC  5853               	subwfb	??_PI_Controller^0,w,c
 15144  0031DE  A0D8               	btfss	status,0,c
 15145  0031E0  EFF4  F018         	goto	i2u601_41
 15146  0031E4  EFF6  F018         	goto	i2u601_40
 15147  0031E8                     i2u601_41:
 15148  0031E8  EFF7  F018         	goto	i2l5514
 15149  0031EC                     i2u601_40:
 15150  0031EC                     
 15151                           ; BSR set to: 0
 15152  0031EC  8A89               	bsf	137,5,c	;volatile
 15153  0031EE                     i2l5514:
 15154                           
 15155                           ; BSR set to: 0
 15156                           ;main.c: 75:     if (abs(error) <= turn_off_value) {
 15157  0031EE  C0E2  F001         	movff	_error,___fltol@f1
 15158  0031F2  C0E3  F002         	movff	_error+1,___fltol@f1+1
 15159  0031F6  C0E4  F003         	movff	_error+2,___fltol@f1+2
 15160  0031FA  C0E5  F004         	movff	_error+3,___fltol@f1+3
 15161  0031FE  EC1F  F021         	call	___fltol	;wreg free
 15162  003202  C001  F00B         	movff	?___fltol,i2abs@a
 15163  003206  C002  F00C         	movff	?___fltol+1,i2abs@a+1
 15164  00320A  EC9A  F027         	call	i2_abs	;wreg free
 15165  00320E  500B               	movf	?i2_abs^0,w,c
 15166  003210  0100               	movlb	0	; () banked
 15167  003212  5DEE               	subwf	_turn_off_value& (0+255),w,b
 15168  003214  51EF               	movf	(_turn_off_value+1)& (0+255),w,b
 15169  003216  0A80               	xorlw	128
 15170  003218  6E53               	movwf	??_PI_Controller^0,c
 15171  00321A  500C               	movf	(?i2_abs+1)^0,w,c
 15172  00321C  0A80               	xorlw	128
 15173  00321E  5853               	subwfb	??_PI_Controller^0,w,c
 15174  003220  A0D8               	btfss	status,0,c
 15175  003222  EF15  F019         	goto	i2u602_41
 15176  003226  EF17  F019         	goto	i2u602_40
 15177  00322A                     i2u602_41:
 15178  00322A  EF18  F019         	goto	i2l511
 15179  00322E                     i2u602_40:
 15180  00322E                     
 15181                           ; BSR set to: 0
 15182  00322E  9A89               	bcf	137,5,c	;volatile
 15183  003230                     i2l511:
 15184                           
 15185                           ; BSR set to: 0
 15186  003230  0012               	return		;funcret
 15187  003232                     __end_of_PI_Controller:
 15188                           	opt callstack 0
 15189                           
 15190 ;; *************** function i2_abs *****************
 15191 ;; Defined at:
 15192 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;  a               2   10[COMRAM] int 
 15195 ;; Auto vars:     Size  Location     Type
 15196 ;;		None
 15197 ;; Return value:  Size  Location     Type
 15198 ;;                  2   10[COMRAM] int 
 15199 ;; Registers used:
 15200 ;;		wreg, status,2, status,0
 15201 ;; Tracked objects:
 15202 ;;		On entry : 0/0
 15203 ;;		On exit  : 0/0
 15204 ;;		Unchanged: 0/0
 15205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15210 ;;Total ram usage:        4 bytes
 15211 ;; Hardware stack levels used:    1
 15212 ;; This function calls:
 15213 ;;		Nothing
 15214 ;; This function is called by:
 15215 ;;		_PI_Controller
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           	psect	text71
 15220  004F34                     __ptext71:
 15221                           	opt callstack 0
 15222  004F34                     i2_abs:
 15223                           	opt callstack 15
 15224  004F34  BE0C               	btfsc	(i2abs@a+1)^0,7,c
 15225  004F36  EFA7  F027         	goto	i2u598_40
 15226  004F3A  500C               	movf	(i2abs@a+1)^0,w,c
 15227  004F3C  E106               	bnz	i2u598_41
 15228  004F3E  040B               	decf	i2abs@a^0,w,c
 15229  004F40  B0D8               	btfsc	status,0,c
 15230  004F42  EFA5  F027         	goto	i2u598_41
 15231  004F46  EFA7  F027         	goto	i2u598_40
 15232  004F4A                     i2u598_41:
 15233  004F4A  EFB5  F027         	goto	i2l1591
 15234  004F4E                     i2u598_40:
 15235  004F4E  C00B  F00D         	movff	i2abs@a,??i2_abs
 15236  004F52  C00C  F00E         	movff	i2abs@a+1,??i2_abs+1
 15237  004F56  1E0D               	comf	??i2_abs^0,f,c
 15238  004F58  1E0E               	comf	(??i2_abs+1)^0,f,c
 15239  004F5A  4A0D               	infsnz	??i2_abs^0,f,c
 15240  004F5C  2A0E               	incf	(??i2_abs+1)^0,f,c
 15241  004F5E  C00D  F00B         	movff	??i2_abs,?i2_abs
 15242  004F62  C00E  F00C         	movff	??i2_abs+1,?i2_abs+1
 15243  004F66  EFB9  F027         	goto	i2l1594
 15244  004F6A                     i2l1591:
 15245  004F6A  C00B  F00B         	movff	i2abs@a,?i2_abs
 15246  004F6E  C00C  F00C         	movff	i2abs@a+1,?i2_abs+1
 15247  004F72                     i2l1594:
 15248  004F72  0012               	return		;funcret
 15249  004F74                     __end_ofi2_abs:
 15250                           	opt callstack 0
 15251                           
 15252 ;; *************** function ___fltol *****************
 15253 ;; Defined at:
 15254 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 15255 ;; Parameters:    Size  Location     Type
 15256 ;;  f1              4    0[COMRAM] int 
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;  exp1            1    9[COMRAM] unsigned char 
 15259 ;;  sign1           1    8[COMRAM] unsigned char 
 15260 ;; Return value:  Size  Location     Type
 15261 ;;                  4    0[COMRAM] long 
 15262 ;; Registers used:
 15263 ;;		wreg, status,2, status,0
 15264 ;; Tracked objects:
 15265 ;;		On entry : 0/0
 15266 ;;		On exit  : 0/0
 15267 ;;		Unchanged: 0/0
 15268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15272 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15273 ;;Total ram usage:       10 bytes
 15274 ;; Hardware stack levels used:    1
 15275 ;; This function calls:
 15276 ;;		Nothing
 15277 ;; This function is called by:
 15278 ;;		_PI_Controller
 15279 ;; This function uses a non-reentrant model
 15280 ;;
 15281                           
 15282                           	psect	text72
 15283  00423E                     __ptext72:
 15284                           	opt callstack 0
 15285  00423E                     ___fltol:
 15286                           	opt callstack 15
 15287  00423E  3403               	rlcf	(___fltol@f1+2)^0,w,c
 15288  004240  3404               	rlcf	(___fltol@f1+3)^0,w,c
 15289  004242  6E0A               	movwf	___fltol@exp1^0,c
 15290  004244  500A               	movf	___fltol@exp1^0,w,c
 15291  004246  A4D8               	btfss	status,2,c
 15292  004248  EF28  F021         	goto	i2u581_41
 15293  00424C  EF2A  F021         	goto	i2u581_40
 15294  004250                     i2u581_41:
 15295  004250  EF34  F021         	goto	i2l5406
 15296  004254                     i2u581_40:
 15297  004254                     i2l5402:
 15298  004254  0E00               	movlw	0
 15299  004256  6E01               	movwf	?___fltol^0,c
 15300  004258  0E00               	movlw	0
 15301  00425A  6E02               	movwf	(?___fltol+1)^0,c
 15302  00425C  0E00               	movlw	0
 15303  00425E  6E03               	movwf	(?___fltol+2)^0,c
 15304  004260  0E00               	movlw	0
 15305  004262  6E04               	movwf	(?___fltol+3)^0,c
 15306  004264  EFA1  F021         	goto	i2l1213
 15307  004268                     i2l5406:
 15308  004268  C001  F005         	movff	___fltol@f1,??___fltol
 15309  00426C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
 15310  004270  C003  F007         	movff	___fltol@f1+2,??___fltol+2
 15311  004274  C004  F008         	movff	___fltol@f1+3,??___fltol+3
 15312  004278  0E20               	movlw	32
 15313  00427A  EF44  F021         	goto	i2u582_40
 15314  00427E                     i2u582_45:
 15315  00427E  90D8               	bcf	status,0,c
 15316  004280  3208               	rrcf	(??___fltol+3)^0,f,c
 15317  004282  3207               	rrcf	(??___fltol+2)^0,f,c
 15318  004284  3206               	rrcf	(??___fltol+1)^0,f,c
 15319  004286  3205               	rrcf	??___fltol^0,f,c
 15320  004288                     i2u582_40:
 15321  004288  2EE8               	decfsz	wreg,f,c
 15322  00428A  EF3F  F021         	goto	i2u582_45
 15323  00428E  5005               	movf	??___fltol^0,w,c
 15324  004290  6E09               	movwf	___fltol@sign1^0,c
 15325  004292  8E03               	bsf	(___fltol@f1+2)^0,7,c
 15326  004294  0EFF               	movlw	255
 15327  004296  1601               	andwf	___fltol@f1^0,f,c
 15328  004298  0EFF               	movlw	255
 15329  00429A  1602               	andwf	(___fltol@f1+1)^0,f,c
 15330  00429C  0EFF               	movlw	255
 15331  00429E  1603               	andwf	(___fltol@f1+2)^0,f,c
 15332  0042A0  0E00               	movlw	0
 15333  0042A2  1604               	andwf	(___fltol@f1+3)^0,f,c
 15334  0042A4  0E96               	movlw	150
 15335  0042A6  5E0A               	subwf	___fltol@exp1^0,f,c
 15336  0042A8  BE0A               	btfsc	___fltol@exp1^0,7,c
 15337  0042AA  EF5B  F021         	goto	i2u583_40
 15338  0042AE  EF59  F021         	goto	i2u583_41
 15339  0042B2                     i2u583_41:
 15340  0042B2  EF71  F021         	goto	i2l5426
 15341  0042B6                     i2u583_40:
 15342  0042B6  500A               	movf	___fltol@exp1^0,w,c
 15343  0042B8  0A80               	xorlw	128
 15344  0042BA  0F97               	addlw	151
 15345  0042BC  B0D8               	btfsc	status,0,c
 15346  0042BE  EF63  F021         	goto	i2u584_41
 15347  0042C2  EF65  F021         	goto	i2u584_40
 15348  0042C6                     i2u584_41:
 15349  0042C6  EF67  F021         	goto	i2l5422
 15350  0042CA                     i2u584_40:
 15351  0042CA  EF2A  F021         	goto	i2l5402
 15352  0042CE                     i2l5422:
 15353  0042CE  90D8               	bcf	status,0,c
 15354  0042D0  3204               	rrcf	(___fltol@f1+3)^0,f,c
 15355  0042D2  3203               	rrcf	(___fltol@f1+2)^0,f,c
 15356  0042D4  3202               	rrcf	(___fltol@f1+1)^0,f,c
 15357  0042D6  3201               	rrcf	___fltol@f1^0,f,c
 15358  0042D8  3E0A               	incfsz	___fltol@exp1^0,f,c
 15359  0042DA  EF67  F021         	goto	i2l5422
 15360  0042DE  EF89  F021         	goto	i2l5436
 15361  0042E2                     i2l5426:
 15362  0042E2  0E1F               	movlw	31
 15363  0042E4  640A               	cpfsgt	___fltol@exp1^0,c
 15364  0042E6  EF77  F021         	goto	i2u585_41
 15365  0042EA  EF79  F021         	goto	i2u585_40
 15366  0042EE                     i2u585_41:
 15367  0042EE  EF81  F021         	goto	i2l5434
 15368  0042F2                     i2u585_40:
 15369  0042F2  EF2A  F021         	goto	i2l5402
 15370  0042F6                     i2l5432:
 15371  0042F6  90D8               	bcf	status,0,c
 15372  0042F8  3601               	rlcf	___fltol@f1^0,f,c
 15373  0042FA  3602               	rlcf	(___fltol@f1+1)^0,f,c
 15374  0042FC  3603               	rlcf	(___fltol@f1+2)^0,f,c
 15375  0042FE  3604               	rlcf	(___fltol@f1+3)^0,f,c
 15376  004300  060A               	decf	___fltol@exp1^0,f,c
 15377  004302                     i2l5434:
 15378  004302  500A               	movf	___fltol@exp1^0,w,c
 15379  004304  A4D8               	btfss	status,2,c
 15380  004306  EF87  F021         	goto	i2u586_41
 15381  00430A  EF89  F021         	goto	i2u586_40
 15382  00430E                     i2u586_41:
 15383  00430E  EF7B  F021         	goto	i2l5432
 15384  004312                     i2u586_40:
 15385  004312                     i2l5436:
 15386  004312  5009               	movf	___fltol@sign1^0,w,c
 15387  004314  B4D8               	btfsc	status,2,c
 15388  004316  EF8F  F021         	goto	i2u587_41
 15389  00431A  EF91  F021         	goto	i2u587_40
 15390  00431E                     i2u587_41:
 15391  00431E  EF99  F021         	goto	i2l5440
 15392  004322                     i2u587_40:
 15393  004322  1E04               	comf	(___fltol@f1+3)^0,f,c
 15394  004324  1E03               	comf	(___fltol@f1+2)^0,f,c
 15395  004326  1E02               	comf	(___fltol@f1+1)^0,f,c
 15396  004328  6C01               	negf	___fltol@f1^0,c
 15397  00432A  0E00               	movlw	0
 15398  00432C  2202               	addwfc	(___fltol@f1+1)^0,f,c
 15399  00432E  2203               	addwfc	(___fltol@f1+2)^0,f,c
 15400  004330  2204               	addwfc	(___fltol@f1+3)^0,f,c
 15401  004332                     i2l5440:
 15402  004332  C001  F001         	movff	___fltol@f1,?___fltol
 15403  004336  C002  F002         	movff	___fltol@f1+1,?___fltol+1
 15404  00433A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
 15405  00433E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
 15406  004342                     i2l1213:
 15407  004342  0012               	return		;funcret
 15408  004344                     __end_of___fltol:
 15409                           	opt callstack 0
 15410                           
 15411 ;; *************** function ___flsub *****************
 15412 ;; Defined at:
 15413 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15414 ;; Parameters:    Size  Location     Type
 15415 ;;  b               4   16[COMRAM] long 
 15416 ;;  a               4   20[COMRAM] long 
 15417 ;; Auto vars:     Size  Location     Type
 15418 ;;		None
 15419 ;; Return value:  Size  Location     Type
 15420 ;;                  4   16[COMRAM] long 
 15421 ;; Registers used:
 15422 ;;		wreg, status,2, status,0, cstack
 15423 ;; Tracked objects:
 15424 ;;		On entry : 0/0
 15425 ;;		On exit  : 0/0
 15426 ;;		Unchanged: 0/0
 15427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15428 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15431 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15432 ;;Total ram usage:        8 bytes
 15433 ;; Hardware stack levels used:    1
 15434 ;; Hardware stack levels required when called:    1
 15435 ;; This function calls:
 15436 ;;		___fladd
 15437 ;; This function is called by:
 15438 ;;		_PI_Controller
 15439 ;; This function uses a non-reentrant model
 15440 ;;
 15441                           
 15442                           	psect	text73
 15443  004E26                     __ptext73:
 15444                           	opt callstack 0
 15445  004E26                     ___flsub:
 15446                           	opt callstack 14
 15447  004E26  0E00               	movlw	0
 15448  004E28  1A15               	xorwf	___flsub@a^0,f,c
 15449  004E2A  0E00               	movlw	0
 15450  004E2C  1A16               	xorwf	(___flsub@a+1)^0,f,c
 15451  004E2E  0E00               	movlw	0
 15452  004E30  1A17               	xorwf	(___flsub@a+2)^0,f,c
 15453  004E32  0E80               	movlw	128
 15454  004E34  1A18               	xorwf	(___flsub@a+3)^0,f,c
 15455  004E36  C011  F001         	movff	___flsub@b,___fladd@b
 15456  004E3A  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 15457  004E3E  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 15458  004E42  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 15459  004E46  C015  F005         	movff	___flsub@a,___fladd@a
 15460  004E4A  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 15461  004E4E  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 15462  004E52  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 15463  004E56  EC86  F009         	call	___fladd	;wreg free
 15464  004E5A  C001  F011         	movff	?___fladd,?___flsub
 15465  004E5E  C002  F012         	movff	?___fladd+1,?___flsub+1
 15466  004E62  C003  F013         	movff	?___fladd+2,?___flsub+2
 15467  004E66  C004  F014         	movff	?___fladd+3,?___flsub+3
 15468  004E6A  0012               	return		;funcret
 15469  004E6C                     __end_of___flsub:
 15470                           	opt callstack 0
 15471                           
 15472 ;; *************** function ___fladd *****************
 15473 ;; Defined at:
 15474 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15475 ;; Parameters:    Size  Location     Type
 15476 ;;  b               4    0[COMRAM] long 
 15477 ;;  a               4    4[COMRAM] long 
 15478 ;; Auto vars:     Size  Location     Type
 15479 ;;  grs             1   15[COMRAM] unsigned char 
 15480 ;;  bexp            1   14[COMRAM] unsigned char 
 15481 ;;  aexp            1   13[COMRAM] unsigned char 
 15482 ;;  signs           1   12[COMRAM] unsigned char 
 15483 ;; Return value:  Size  Location     Type
 15484 ;;                  4    0[COMRAM] unsigned char 
 15485 ;; Registers used:
 15486 ;;		wreg, status,2, status,0
 15487 ;; Tracked objects:
 15488 ;;		On entry : 0/0
 15489 ;;		On exit  : 0/0
 15490 ;;		Unchanged: 0/0
 15491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15492 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15493 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15494 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15495 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15496 ;;Total ram usage:       16 bytes
 15497 ;; Hardware stack levels used:    1
 15498 ;; This function calls:
 15499 ;;		Nothing
 15500 ;; This function is called by:
 15501 ;;		___flsub
 15502 ;; This function uses a non-reentrant model
 15503 ;;
 15504                           
 15505                           	psect	text74
 15506  00130C                     __ptext74:
 15507                           	opt callstack 0
 15508  00130C                     ___fladd:
 15509                           	opt callstack 14
 15510  00130C  5004               	movf	(___fladd@b+3)^0,w,c
 15511  00130E  0B80               	andlw	128
 15512  001310  6E0D               	movwf	___fladd@signs^0,c
 15513  001312  5004               	movf	(___fladd@b+3)^0,w,c
 15514  001314  2404               	addwf	(___fladd@b+3)^0,w,c
 15515  001316  6E0F               	movwf	___fladd@bexp^0,c
 15516  001318  AE03               	btfss	(___fladd@b+2)^0,7,c
 15517  00131A  EF91  F009         	goto	i2u400_41
 15518  00131E  EF93  F009         	goto	i2u400_40
 15519  001322                     i2u400_41:
 15520  001322  EF94  F009         	goto	i2l4454
 15521  001326                     i2u400_40:
 15522  001326  800F               	bsf	___fladd@bexp^0,0,c
 15523  001328                     i2l4454:
 15524  001328  500F               	movf	___fladd@bexp^0,w,c
 15525  00132A  B4D8               	btfsc	status,2,c
 15526  00132C  EF9A  F009         	goto	i2u401_41
 15527  001330  EF9C  F009         	goto	i2u401_40
 15528  001334                     i2u401_41:
 15529  001334  EFB1  F009         	goto	i2l4464
 15530  001338                     i2u401_40:
 15531  001338  280F               	incf	___fladd@bexp^0,w,c
 15532  00133A  A4D8               	btfss	status,2,c
 15533  00133C  EFA2  F009         	goto	i2u402_41
 15534  001340  EFA4  F009         	goto	i2u402_40
 15535  001344                     i2u402_41:
 15536  001344  EFAC  F009         	goto	i2l4460
 15537  001348                     i2u402_40:
 15538  001348  0E00               	movlw	0
 15539  00134A  6E01               	movwf	___fladd@b^0,c
 15540  00134C  0E00               	movlw	0
 15541  00134E  6E02               	movwf	(___fladd@b+1)^0,c
 15542  001350  0E00               	movlw	0
 15543  001352  6E03               	movwf	(___fladd@b+2)^0,c
 15544  001354  0E00               	movlw	0
 15545  001356  6E04               	movwf	(___fladd@b+3)^0,c
 15546  001358                     i2l4460:
 15547  001358  8E03               	bsf	(___fladd@b+2)^0,7,c
 15548  00135A  0E00               	movlw	0
 15549  00135C  6E04               	movwf	(___fladd@b+3)^0,c
 15550  00135E  EFB9  F009         	goto	i2l4466
 15551  001362                     i2l4464:
 15552  001362  0E00               	movlw	0
 15553  001364  6E01               	movwf	___fladd@b^0,c
 15554  001366  0E00               	movlw	0
 15555  001368  6E02               	movwf	(___fladd@b+1)^0,c
 15556  00136A  0E00               	movlw	0
 15557  00136C  6E03               	movwf	(___fladd@b+2)^0,c
 15558  00136E  0E00               	movlw	0
 15559  001370  6E04               	movwf	(___fladd@b+3)^0,c
 15560  001372                     i2l4466:
 15561  001372  5008               	movf	(___fladd@a+3)^0,w,c
 15562  001374  0B80               	andlw	128
 15563  001376  6E0E               	movwf	___fladd@aexp^0,c
 15564  001378  500D               	movf	___fladd@signs^0,w,c
 15565  00137A  180E               	xorwf	___fladd@aexp^0,w,c
 15566  00137C  B4D8               	btfsc	status,2,c
 15567  00137E  EFC3  F009         	goto	i2u403_41
 15568  001382  EFC5  F009         	goto	i2u403_40
 15569  001386                     i2u403_41:
 15570  001386  EFC6  F009         	goto	i2l4472
 15571  00138A                     i2u403_40:
 15572  00138A  8C0D               	bsf	___fladd@signs^0,6,c
 15573  00138C                     i2l4472:
 15574  00138C  5008               	movf	(___fladd@a+3)^0,w,c
 15575  00138E  2408               	addwf	(___fladd@a+3)^0,w,c
 15576  001390  6E0E               	movwf	___fladd@aexp^0,c
 15577  001392  AE07               	btfss	(___fladd@a+2)^0,7,c
 15578  001394  EFCE  F009         	goto	i2u404_41
 15579  001398  EFD0  F009         	goto	i2u404_40
 15580  00139C                     i2u404_41:
 15581  00139C  EFD1  F009         	goto	i2l4478
 15582  0013A0                     i2u404_40:
 15583  0013A0  800E               	bsf	___fladd@aexp^0,0,c
 15584  0013A2                     i2l4478:
 15585  0013A2  500E               	movf	___fladd@aexp^0,w,c
 15586  0013A4  B4D8               	btfsc	status,2,c
 15587  0013A6  EFD7  F009         	goto	i2u405_41
 15588  0013AA  EFD9  F009         	goto	i2u405_40
 15589  0013AE                     i2u405_41:
 15590  0013AE  EFEE  F009         	goto	i2l4488
 15591  0013B2                     i2u405_40:
 15592  0013B2  280E               	incf	___fladd@aexp^0,w,c
 15593  0013B4  A4D8               	btfss	status,2,c
 15594  0013B6  EFDF  F009         	goto	i2u406_41
 15595  0013BA  EFE1  F009         	goto	i2u406_40
 15596  0013BE                     i2u406_41:
 15597  0013BE  EFE9  F009         	goto	i2l4484
 15598  0013C2                     i2u406_40:
 15599  0013C2  0E00               	movlw	0
 15600  0013C4  6E05               	movwf	___fladd@a^0,c
 15601  0013C6  0E00               	movlw	0
 15602  0013C8  6E06               	movwf	(___fladd@a+1)^0,c
 15603  0013CA  0E00               	movlw	0
 15604  0013CC  6E07               	movwf	(___fladd@a+2)^0,c
 15605  0013CE  0E00               	movlw	0
 15606  0013D0  6E08               	movwf	(___fladd@a+3)^0,c
 15607  0013D2                     i2l4484:
 15608  0013D2  8E07               	bsf	(___fladd@a+2)^0,7,c
 15609  0013D4  0E00               	movlw	0
 15610  0013D6  6E08               	movwf	(___fladd@a+3)^0,c
 15611  0013D8  EFF6  F009         	goto	i2l4490
 15612  0013DC                     i2l4488:
 15613  0013DC  0E00               	movlw	0
 15614  0013DE  6E05               	movwf	___fladd@a^0,c
 15615  0013E0  0E00               	movlw	0
 15616  0013E2  6E06               	movwf	(___fladd@a+1)^0,c
 15617  0013E4  0E00               	movlw	0
 15618  0013E6  6E07               	movwf	(___fladd@a+2)^0,c
 15619  0013E8  0E00               	movlw	0
 15620  0013EA  6E08               	movwf	(___fladd@a+3)^0,c
 15621  0013EC                     i2l4490:
 15622  0013EC  500F               	movf	___fladd@bexp^0,w,c
 15623  0013EE  5C0E               	subwf	___fladd@aexp^0,w,c
 15624  0013F0  B0D8               	btfsc	status,0,c
 15625  0013F2  EFFD  F009         	goto	i2u407_41
 15626  0013F6  EFFF  F009         	goto	i2u407_40
 15627  0013FA                     i2u407_41:
 15628  0013FA  EF26  F00A         	goto	i2l4526
 15629  0013FE                     i2u407_40:
 15630  0013FE  AC0D               	btfss	___fladd@signs^0,6,c
 15631  001400  EF04  F00A         	goto	i2u408_41
 15632  001404  EF06  F00A         	goto	i2u408_40
 15633  001408                     i2u408_41:
 15634  001408  EF08  F00A         	goto	i2l4496
 15635  00140C                     i2u408_40:
 15636  00140C  0E80               	movlw	128
 15637  00140E  1A0D               	xorwf	___fladd@signs^0,f,c
 15638  001410                     i2l4496:
 15639  001410  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 15640  001414  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 15641  001418  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 15642  00141C  C001  F010         	movff	___fladd@b,___fladd@grs
 15643  001420  C005  F001         	movff	___fladd@a,___fladd@b
 15644  001424  C010  F005         	movff	___fladd@grs,___fladd@a
 15645  001428  C002  F010         	movff	___fladd@b+1,___fladd@grs
 15646  00142C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 15647  001430  C010  F006         	movff	___fladd@grs,___fladd@a+1
 15648  001434  C003  F010         	movff	___fladd@b+2,___fladd@grs
 15649  001438  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 15650  00143C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 15651  001440  C004  F010         	movff	___fladd@b+3,___fladd@grs
 15652  001444  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 15653  001448  C010  F008         	movff	___fladd@grs,___fladd@a+3
 15654  00144C                     i2l4526:
 15655  00144C  0E00               	movlw	0
 15656  00144E  6E10               	movwf	___fladd@grs^0,c
 15657  001450  500F               	movf	___fladd@bexp^0,w,c
 15658  001452  C00E  F009         	movff	___fladd@aexp,??___fladd
 15659  001456  6A0A               	clrf	(??___fladd+1)^0,c
 15660  001458  5E09               	subwf	??___fladd^0,f,c
 15661  00145A  0E00               	movlw	0
 15662  00145C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 15663  00145E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 15664  001460  EF3B  F00A         	goto	i2u409_41
 15665  001464  500A               	movf	(??___fladd+1)^0,w,c
 15666  001466  E109               	bnz	i2u409_40
 15667  001468  0E1A               	movlw	26
 15668  00146A  5C09               	subwf	??___fladd^0,w,c
 15669  00146C  A0D8               	btfss	status,0,c
 15670  00146E  EF3B  F00A         	goto	i2u409_41
 15671  001472  EF3D  F00A         	goto	i2u409_40
 15672  001476                     i2u409_41:
 15673  001476  EF74  F00A         	goto	i2l1445
 15674  00147A                     i2u409_40:
 15675  00147A  5001               	movf	___fladd@b^0,w,c
 15676  00147C  1002               	iorwf	(___fladd@b+1)^0,w,c
 15677  00147E  1003               	iorwf	(___fladd@b+2)^0,w,c
 15678  001480  1004               	iorwf	(___fladd@b+3)^0,w,c
 15679  001482  A4D8               	btfss	status,2,c
 15680  001484  EF46  F00A         	goto	i2u410_41
 15681  001488  EF49  F00A         	goto	i2u410_40
 15682  00148C                     i2u410_41:
 15683  00148C  0E01               	movlw	1
 15684  00148E  EF4A  F00A         	goto	i2u411_40
 15685  001492                     i2u410_40:
 15686  001492  0E00               	movlw	0
 15687  001494                     i2u411_40:
 15688  001494  6E10               	movwf	___fladd@grs^0,c
 15689  001496  0E00               	movlw	0
 15690  001498  6E01               	movwf	___fladd@b^0,c
 15691  00149A  0E00               	movlw	0
 15692  00149C  6E02               	movwf	(___fladd@b+1)^0,c
 15693  00149E  0E00               	movlw	0
 15694  0014A0  6E03               	movwf	(___fladd@b+2)^0,c
 15695  0014A2  0E00               	movlw	0
 15696  0014A4  6E04               	movwf	(___fladd@b+3)^0,c
 15697  0014A6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 15698  0014AA  EF7D  F00A         	goto	i2l1444
 15699  0014AE                     i2l1446:
 15700  0014AE  A010               	btfss	___fladd@grs^0,0,c
 15701  0014B0  EF5C  F00A         	goto	i2u412_41
 15702  0014B4  EF5E  F00A         	goto	i2u412_40
 15703  0014B8                     i2u412_41:
 15704  0014B8  EF64  F00A         	goto	i2l4538
 15705  0014BC                     i2u412_40:
 15706  0014BC  90D8               	bcf	status,0,c
 15707  0014BE  3010               	rrcf	___fladd@grs^0,w,c
 15708  0014C0  0901               	iorlw	1
 15709  0014C2  6E10               	movwf	___fladd@grs^0,c
 15710  0014C4  EF66  F00A         	goto	i2l4540
 15711  0014C8                     i2l4538:
 15712  0014C8  90D8               	bcf	status,0,c
 15713  0014CA  3210               	rrcf	___fladd@grs^0,f,c
 15714  0014CC                     i2l4540:
 15715  0014CC  A001               	btfss	___fladd@b^0,0,c
 15716  0014CE  EF6B  F00A         	goto	i2u413_41
 15717  0014D2  EF6D  F00A         	goto	i2u413_40
 15718  0014D6                     i2u413_41:
 15719  0014D6  EF6E  F00A         	goto	i2l4544
 15720  0014DA                     i2u413_40:
 15721  0014DA  8E10               	bsf	___fladd@grs^0,7,c
 15722  0014DC                     i2l4544:
 15723  0014DC  3404               	rlcf	(___fladd@b+3)^0,w,c
 15724  0014DE  3204               	rrcf	(___fladd@b+3)^0,f,c
 15725  0014E0  3203               	rrcf	(___fladd@b+2)^0,f,c
 15726  0014E2  3202               	rrcf	(___fladd@b+1)^0,f,c
 15727  0014E4  3201               	rrcf	___fladd@b^0,f,c
 15728  0014E6  2A0F               	incf	___fladd@bexp^0,f,c
 15729  0014E8                     i2l1445:
 15730  0014E8  500E               	movf	___fladd@aexp^0,w,c
 15731  0014EA  5C0F               	subwf	___fladd@bexp^0,w,c
 15732  0014EC  A0D8               	btfss	status,0,c
 15733  0014EE  EF7B  F00A         	goto	i2u414_41
 15734  0014F2  EF7D  F00A         	goto	i2u414_40
 15735  0014F6                     i2u414_41:
 15736  0014F6  EF57  F00A         	goto	i2l1446
 15737  0014FA                     i2u414_40:
 15738  0014FA                     i2l1444:
 15739  0014FA  BC0D               	btfsc	___fladd@signs^0,6,c
 15740  0014FC  EF82  F00A         	goto	i2u415_41
 15741  001500  EF84  F00A         	goto	i2u415_40
 15742  001504                     i2u415_41:
 15743  001504  EFC4  F00A         	goto	i2l4572
 15744  001508                     i2u415_40:
 15745  001508  500F               	movf	___fladd@bexp^0,w,c
 15746  00150A  A4D8               	btfss	status,2,c
 15747  00150C  EF8A  F00A         	goto	i2u416_41
 15748  001510  EF8C  F00A         	goto	i2u416_40
 15749  001514                     i2u416_41:
 15750  001514  EF96  F00A         	goto	i2l4554
 15751  001518                     i2u416_40:
 15752  001518  0E00               	movlw	0
 15753  00151A  6E01               	movwf	?___fladd^0,c
 15754  00151C  0E00               	movlw	0
 15755  00151E  6E02               	movwf	(?___fladd+1)^0,c
 15756  001520  0E00               	movlw	0
 15757  001522  6E03               	movwf	(?___fladd+2)^0,c
 15758  001524  0E00               	movlw	0
 15759  001526  6E04               	movwf	(?___fladd+3)^0,c
 15760  001528  EFE5  F00B         	goto	i2l1453
 15761  00152C                     i2l4554:
 15762  00152C  5005               	movf	___fladd@a^0,w,c
 15763  00152E  2601               	addwf	___fladd@b^0,f,c
 15764  001530  5006               	movf	(___fladd@a+1)^0,w,c
 15765  001532  2202               	addwfc	(___fladd@b+1)^0,f,c
 15766  001534  5007               	movf	(___fladd@a+2)^0,w,c
 15767  001536  2203               	addwfc	(___fladd@b+2)^0,f,c
 15768  001538  5008               	movf	(___fladd@a+3)^0,w,c
 15769  00153A  2204               	addwfc	(___fladd@b+3)^0,f,c
 15770  00153C  A004               	btfss	(___fladd@b+3)^0,0,c
 15771  00153E  EFA3  F00A         	goto	i2u417_41
 15772  001542  EFA5  F00A         	goto	i2u417_40
 15773  001546                     i2u417_41:
 15774  001546  EF51  F00B         	goto	i2l4608
 15775  00154A                     i2u417_40:
 15776  00154A  A010               	btfss	___fladd@grs^0,0,c
 15777  00154C  EFAA  F00A         	goto	i2u418_41
 15778  001550  EFAC  F00A         	goto	i2u418_40
 15779  001554                     i2u418_41:
 15780  001554  EFB2  F00A         	goto	i2l4562
 15781  001558                     i2u418_40:
 15782  001558  90D8               	bcf	status,0,c
 15783  00155A  3010               	rrcf	___fladd@grs^0,w,c
 15784  00155C  0901               	iorlw	1
 15785  00155E  6E10               	movwf	___fladd@grs^0,c
 15786  001560  EFB4  F00A         	goto	i2l4564
 15787  001564                     i2l4562:
 15788  001564  90D8               	bcf	status,0,c
 15789  001566  3210               	rrcf	___fladd@grs^0,f,c
 15790  001568                     i2l4564:
 15791  001568  A001               	btfss	___fladd@b^0,0,c
 15792  00156A  EFB9  F00A         	goto	i2u419_41
 15793  00156E  EFBB  F00A         	goto	i2u419_40
 15794  001572                     i2u419_41:
 15795  001572  EFBC  F00A         	goto	i2l4568
 15796  001576                     i2u419_40:
 15797  001576  8E10               	bsf	___fladd@grs^0,7,c
 15798  001578                     i2l4568:
 15799  001578  3404               	rlcf	(___fladd@b+3)^0,w,c
 15800  00157A  3204               	rrcf	(___fladd@b+3)^0,f,c
 15801  00157C  3203               	rrcf	(___fladd@b+2)^0,f,c
 15802  00157E  3202               	rrcf	(___fladd@b+1)^0,f,c
 15803  001580  3201               	rrcf	___fladd@b^0,f,c
 15804  001582  2A0F               	incf	___fladd@bexp^0,f,c
 15805  001584  EF51  F00B         	goto	i2l4608
 15806  001588                     i2l4572:
 15807  001588  5005               	movf	___fladd@a^0,w,c
 15808  00158A  5C01               	subwf	___fladd@b^0,w,c
 15809  00158C  5006               	movf	(___fladd@a+1)^0,w,c
 15810  00158E  5802               	subwfb	(___fladd@b+1)^0,w,c
 15811  001590  5007               	movf	(___fladd@a+2)^0,w,c
 15812  001592  5803               	subwfb	(___fladd@b+2)^0,w,c
 15813  001594  5004               	movf	(___fladd@b+3)^0,w,c
 15814  001596  0A80               	xorlw	128
 15815  001598  6E09               	movwf	??___fladd^0,c
 15816  00159A  5008               	movf	(___fladd@a+3)^0,w,c
 15817  00159C  0A80               	xorlw	128
 15818  00159E  5809               	subwfb	??___fladd^0,w,c
 15819  0015A0  B0D8               	btfsc	status,0,c
 15820  0015A2  EFD5  F00A         	goto	i2u420_41
 15821  0015A6  EFD7  F00A         	goto	i2u420_40
 15822  0015AA                     i2u420_41:
 15823  0015AA  EF02  F00B         	goto	i2l4582
 15824  0015AE                     i2u420_40:
 15825  0015AE  5001               	movf	___fladd@b^0,w,c
 15826  0015B0  5C05               	subwf	___fladd@a^0,w,c
 15827  0015B2  6E09               	movwf	??___fladd^0,c
 15828  0015B4  5002               	movf	(___fladd@b+1)^0,w,c
 15829  0015B6  5806               	subwfb	(___fladd@a+1)^0,w,c
 15830  0015B8  6E0A               	movwf	(??___fladd+1)^0,c
 15831  0015BA  5003               	movf	(___fladd@b+2)^0,w,c
 15832  0015BC  5807               	subwfb	(___fladd@a+2)^0,w,c
 15833  0015BE  6E0B               	movwf	(??___fladd+2)^0,c
 15834  0015C0  5004               	movf	(___fladd@b+3)^0,w,c
 15835  0015C2  5808               	subwfb	(___fladd@a+3)^0,w,c
 15836  0015C4  6E0C               	movwf	(??___fladd+3)^0,c
 15837  0015C6  0EFF               	movlw	255
 15838  0015C8  2409               	addwf	??___fladd^0,w,c
 15839  0015CA  6E01               	movwf	___fladd@b^0,c
 15840  0015CC  0EFF               	movlw	255
 15841  0015CE  200A               	addwfc	(??___fladd+1)^0,w,c
 15842  0015D0  6E02               	movwf	(___fladd@b+1)^0,c
 15843  0015D2  0EFF               	movlw	255
 15844  0015D4  200B               	addwfc	(??___fladd+2)^0,w,c
 15845  0015D6  6E03               	movwf	(___fladd@b+2)^0,c
 15846  0015D8  0EFF               	movlw	255
 15847  0015DA  200C               	addwfc	(??___fladd+3)^0,w,c
 15848  0015DC  6E04               	movwf	(___fladd@b+3)^0,c
 15849  0015DE  0E80               	movlw	128
 15850  0015E0  1A0D               	xorwf	___fladd@signs^0,f,c
 15851  0015E2  6C10               	negf	___fladd@grs^0,c
 15852  0015E4  5010               	movf	___fladd@grs^0,w,c
 15853  0015E6  A4D8               	btfss	status,2,c
 15854  0015E8  EFF8  F00A         	goto	i2u421_41
 15855  0015EC  EFFA  F00A         	goto	i2u421_40
 15856  0015F0                     i2u421_41:
 15857  0015F0  EF0A  F00B         	goto	i2l1461
 15858  0015F4                     i2u421_40:
 15859  0015F4  0E01               	movlw	1
 15860  0015F6  2601               	addwf	___fladd@b^0,f,c
 15861  0015F8  0E00               	movlw	0
 15862  0015FA  2202               	addwfc	(___fladd@b+1)^0,f,c
 15863  0015FC  2203               	addwfc	(___fladd@b+2)^0,f,c
 15864  0015FE  2204               	addwfc	(___fladd@b+3)^0,f,c
 15865  001600  EF0A  F00B         	goto	i2l1461
 15866  001604                     i2l4582:
 15867  001604  5005               	movf	___fladd@a^0,w,c
 15868  001606  5E01               	subwf	___fladd@b^0,f,c
 15869  001608  5006               	movf	(___fladd@a+1)^0,w,c
 15870  00160A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 15871  00160C  5007               	movf	(___fladd@a+2)^0,w,c
 15872  00160E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 15873  001610  5008               	movf	(___fladd@a+3)^0,w,c
 15874  001612  5A04               	subwfb	(___fladd@b+3)^0,f,c
 15875  001614                     i2l1461:
 15876  001614  5001               	movf	___fladd@b^0,w,c
 15877  001616  1002               	iorwf	(___fladd@b+1)^0,w,c
 15878  001618  1003               	iorwf	(___fladd@b+2)^0,w,c
 15879  00161A  1004               	iorwf	(___fladd@b+3)^0,w,c
 15880  00161C  A4D8               	btfss	status,2,c
 15881  00161E  EF13  F00B         	goto	i2u422_41
 15882  001622  EF15  F00B         	goto	i2u422_40
 15883  001626                     i2u422_41:
 15884  001626  EF4A  F00B         	goto	i2l4606
 15885  00162A                     i2u422_40:
 15886  00162A  5010               	movf	___fladd@grs^0,w,c
 15887  00162C  A4D8               	btfss	status,2,c
 15888  00162E  EF1B  F00B         	goto	i2u423_41
 15889  001632  EF1D  F00B         	goto	i2u423_40
 15890  001636                     i2u423_41:
 15891  001636  EF4A  F00B         	goto	i2l4606
 15892  00163A                     i2u423_40:
 15893  00163A  0E00               	movlw	0
 15894  00163C  6E01               	movwf	?___fladd^0,c
 15895  00163E  0E00               	movlw	0
 15896  001640  6E02               	movwf	(?___fladd+1)^0,c
 15897  001642  0E00               	movlw	0
 15898  001644  6E03               	movwf	(?___fladd+2)^0,c
 15899  001646  0E00               	movlw	0
 15900  001648  6E04               	movwf	(?___fladd+3)^0,c
 15901  00164A  EFE5  F00B         	goto	i2l1453
 15902  00164E                     i2l4590:
 15903  00164E  90D8               	bcf	status,0,c
 15904  001650  3601               	rlcf	___fladd@b^0,f,c
 15905  001652  3602               	rlcf	(___fladd@b+1)^0,f,c
 15906  001654  3603               	rlcf	(___fladd@b+2)^0,f,c
 15907  001656  3604               	rlcf	(___fladd@b+3)^0,f,c
 15908  001658  AE10               	btfss	___fladd@grs^0,7,c
 15909  00165A  EF31  F00B         	goto	i2u424_41
 15910  00165E  EF33  F00B         	goto	i2u424_40
 15911  001662                     i2u424_41:
 15912  001662  EF34  F00B         	goto	i2l4596
 15913  001666                     i2u424_40:
 15914  001666  8001               	bsf	___fladd@b^0,0,c
 15915  001668                     i2l4596:
 15916  001668  A010               	btfss	___fladd@grs^0,0,c
 15917  00166A  EF39  F00B         	goto	i2u425_41
 15918  00166E  EF3B  F00B         	goto	i2u425_40
 15919  001672                     i2u425_41:
 15920  001672  EF3F  F00B         	goto	i2l4600
 15921  001676                     i2u425_40:
 15922  001676  80D8               	bsf	status,0,c
 15923  001678  3610               	rlcf	___fladd@grs^0,f,c
 15924  00167A  EF41  F00B         	goto	i2l4602
 15925  00167E                     i2l4600:
 15926  00167E  90D8               	bcf	status,0,c
 15927  001680  3610               	rlcf	___fladd@grs^0,f,c
 15928  001682                     i2l4602:
 15929  001682  500F               	movf	___fladd@bexp^0,w,c
 15930  001684  B4D8               	btfsc	status,2,c
 15931  001686  EF47  F00B         	goto	i2u426_41
 15932  00168A  EF49  F00B         	goto	i2u426_40
 15933  00168E                     i2u426_41:
 15934  00168E  EF4A  F00B         	goto	i2l4606
 15935  001692                     i2u426_40:
 15936  001692  060F               	decf	___fladd@bexp^0,f,c
 15937  001694                     i2l4606:
 15938  001694  AE03               	btfss	(___fladd@b+2)^0,7,c
 15939  001696  EF4F  F00B         	goto	i2u427_41
 15940  00169A  EF51  F00B         	goto	i2u427_40
 15941  00169E                     i2u427_41:
 15942  00169E  EF27  F00B         	goto	i2l4590
 15943  0016A2                     i2u427_40:
 15944  0016A2                     i2l4608:
 15945  0016A2  0E00               	movlw	0
 15946  0016A4  6E0E               	movwf	___fladd@aexp^0,c
 15947  0016A6  AE10               	btfss	___fladd@grs^0,7,c
 15948  0016A8  EF58  F00B         	goto	i2u428_41
 15949  0016AC  EF5A  F00B         	goto	i2u428_40
 15950  0016B0                     i2u428_41:
 15951  0016B0  EF72  F00B         	goto	i2l1470
 15952  0016B4                     i2u428_40:
 15953  0016B4  C010  F009         	movff	___fladd@grs,??___fladd
 15954  0016B8  0E7F               	movlw	127
 15955  0016BA  1609               	andwf	??___fladd^0,f,c
 15956  0016BC  B4D8               	btfsc	status,2,c
 15957  0016BE  EF63  F00B         	goto	i2u429_41
 15958  0016C2  EF65  F00B         	goto	i2u429_40
 15959  0016C6                     i2u429_41:
 15960  0016C6  EF69  F00B         	goto	i2l1471
 15961  0016CA                     i2u429_40:
 15962  0016CA                     i2l4614:
 15963  0016CA  0E01               	movlw	1
 15964  0016CC  6E0E               	movwf	___fladd@aexp^0,c
 15965  0016CE  EF72  F00B         	goto	i2l1470
 15966  0016D2                     i2l1471:
 15967  0016D2  A001               	btfss	___fladd@b^0,0,c
 15968  0016D4  EF6E  F00B         	goto	i2u430_41
 15969  0016D8  EF70  F00B         	goto	i2u430_40
 15970  0016DC                     i2u430_41:
 15971  0016DC  EF72  F00B         	goto	i2l1470
 15972  0016E0                     i2u430_40:
 15973  0016E0  EF65  F00B         	goto	i2l4614
 15974  0016E4                     i2l1470:
 15975  0016E4  500E               	movf	___fladd@aexp^0,w,c
 15976  0016E6  B4D8               	btfsc	status,2,c
 15977  0016E8  EF78  F00B         	goto	i2u431_41
 15978  0016EC  EF7A  F00B         	goto	i2u431_40
 15979  0016F0                     i2u431_41:
 15980  0016F0  EFA5  F00B         	goto	i2l4626
 15981  0016F4                     i2u431_40:
 15982  0016F4  0E01               	movlw	1
 15983  0016F6  2601               	addwf	___fladd@b^0,f,c
 15984  0016F8  0E00               	movlw	0
 15985  0016FA  2202               	addwfc	(___fladd@b+1)^0,f,c
 15986  0016FC  2203               	addwfc	(___fladd@b+2)^0,f,c
 15987  0016FE  2204               	addwfc	(___fladd@b+3)^0,f,c
 15988  001700  A004               	btfss	(___fladd@b+3)^0,0,c
 15989  001702  EF85  F00B         	goto	i2u432_41
 15990  001706  EF87  F00B         	goto	i2u432_40
 15991  00170A                     i2u432_41:
 15992  00170A  EFA5  F00B         	goto	i2l4626
 15993  00170E                     i2u432_40:
 15994  00170E  C001  F009         	movff	___fladd@b,??___fladd
 15995  001712  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 15996  001716  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 15997  00171A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 15998  00171E  340C               	rlcf	(??___fladd+3)^0,w,c
 15999  001720  320C               	rrcf	(??___fladd+3)^0,f,c
 16000  001722  320B               	rrcf	(??___fladd+2)^0,f,c
 16001  001724  320A               	rrcf	(??___fladd+1)^0,f,c
 16002  001726  3209               	rrcf	??___fladd^0,f,c
 16003  001728  C009  F001         	movff	??___fladd,___fladd@b
 16004  00172C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 16005  001730  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 16006  001734  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 16007  001738  280F               	incf	___fladd@bexp^0,w,c
 16008  00173A  B4D8               	btfsc	status,2,c
 16009  00173C  EFA2  F00B         	goto	i2u433_41
 16010  001740  EFA4  F00B         	goto	i2u433_40
 16011  001744                     i2u433_41:
 16012  001744  EFA5  F00B         	goto	i2l4626
 16013  001748                     i2u433_40:
 16014  001748  2A0F               	incf	___fladd@bexp^0,f,c
 16015  00174A                     i2l4626:
 16016  00174A  280F               	incf	___fladd@bexp^0,w,c
 16017  00174C  B4D8               	btfsc	status,2,c
 16018  00174E  EFAB  F00B         	goto	i2u434_41
 16019  001752  EFAD  F00B         	goto	i2u434_40
 16020  001756                     i2u434_41:
 16021  001756  EFB5  F00B         	goto	i2l4630
 16022  00175A                     i2u434_40:
 16023  00175A  500F               	movf	___fladd@bexp^0,w,c
 16024  00175C  A4D8               	btfss	status,2,c
 16025  00175E  EFB3  F00B         	goto	i2u435_41
 16026  001762  EFB5  F00B         	goto	i2u435_40
 16027  001766                     i2u435_41:
 16028  001766  EFC7  F00B         	goto	i2l4634
 16029  00176A                     i2u435_40:
 16030  00176A                     i2l4630:
 16031  00176A  0E00               	movlw	0
 16032  00176C  6E01               	movwf	___fladd@b^0,c
 16033  00176E  0E00               	movlw	0
 16034  001770  6E02               	movwf	(___fladd@b+1)^0,c
 16035  001772  0E00               	movlw	0
 16036  001774  6E03               	movwf	(___fladd@b+2)^0,c
 16037  001776  0E00               	movlw	0
 16038  001778  6E04               	movwf	(___fladd@b+3)^0,c
 16039  00177A  500F               	movf	___fladd@bexp^0,w,c
 16040  00177C  A4D8               	btfss	status,2,c
 16041  00177E  EFC3  F00B         	goto	i2u436_41
 16042  001782  EFC5  F00B         	goto	i2u436_40
 16043  001786                     i2u436_41:
 16044  001786  EFC7  F00B         	goto	i2l4634
 16045  00178A                     i2u436_40:
 16046  00178A  0E00               	movlw	0
 16047  00178C  6E0D               	movwf	___fladd@signs^0,c
 16048  00178E                     i2l4634:
 16049  00178E  A00F               	btfss	___fladd@bexp^0,0,c
 16050  001790  EFCC  F00B         	goto	i2u437_41
 16051  001794  EFCE  F00B         	goto	i2u437_40
 16052  001798                     i2u437_41:
 16053  001798  EFD1  F00B         	goto	i2l4638
 16054  00179C                     i2u437_40:
 16055  00179C  8E03               	bsf	(___fladd@b+2)^0,7,c
 16056  00179E  EFD2  F00B         	goto	i2l4640
 16057  0017A2                     i2l4638:
 16058  0017A2  9E03               	bcf	(___fladd@b+2)^0,7,c
 16059  0017A4                     i2l4640:
 16060  0017A4  90D8               	bcf	status,0,c
 16061  0017A6  300F               	rrcf	___fladd@bexp^0,w,c
 16062  0017A8  6E04               	movwf	(___fladd@b+3)^0,c
 16063  0017AA  AE0D               	btfss	___fladd@signs^0,7,c
 16064  0017AC  EFDA  F00B         	goto	i2u438_41
 16065  0017B0  EFDC  F00B         	goto	i2u438_40
 16066  0017B4                     i2u438_41:
 16067  0017B4  EFDD  F00B         	goto	i2l4646
 16068  0017B8                     i2u438_40:
 16069  0017B8  8E04               	bsf	(___fladd@b+3)^0,7,c
 16070  0017BA                     i2l4646:
 16071  0017BA  C001  F001         	movff	___fladd@b,?___fladd
 16072  0017BE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 16073  0017C2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 16074  0017C6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 16075  0017CA                     i2l1453:
 16076  0017CA  0012               	return		;funcret
 16077  0017CC                     __end_of___fladd:
 16078                           	opt callstack 0
 16079                           
 16080 ;; *************** function ___flmul *****************
 16081 ;; Defined at:
 16082 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;  b               4   45[COMRAM] unsigned char 
 16085 ;;  a               4   49[COMRAM] unsigned char 
 16086 ;; Auto vars:     Size  Location     Type
 16087 ;;  prod            4   64[COMRAM] struct .
 16088 ;;  grs             4   58[COMRAM] unsigned long 
 16089 ;;  temp            2   68[COMRAM] struct .
 16090 ;;  bexp            1   63[COMRAM] unsigned char 
 16091 ;;  aexp            1   62[COMRAM] unsigned char 
 16092 ;;  sign            1   57[COMRAM] unsigned char 
 16093 ;; Return value:  Size  Location     Type
 16094 ;;                  4   45[COMRAM] unsigned char 
 16095 ;; Registers used:
 16096 ;;		wreg, status,2, status,0, prodl, prodh
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16103 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16104 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16105 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16106 ;;Total ram usage:       25 bytes
 16107 ;; Hardware stack levels used:    1
 16108 ;; This function calls:
 16109 ;;		Nothing
 16110 ;; This function is called by:
 16111 ;;		_PI_Controller
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115                           	psect	text75
 16116  001C02                     __ptext75:
 16117                           	opt callstack 0
 16118  001C02                     ___flmul:
 16119                           	opt callstack 15
 16120  001C02  5031               	movf	(___flmul@b+3)^0,w,c
 16121  001C04  0B80               	andlw	128
 16122  001C06  6E3A               	movwf	___flmul@sign^0,c
 16123  001C08  5031               	movf	(___flmul@b+3)^0,w,c
 16124  001C0A  2431               	addwf	(___flmul@b+3)^0,w,c
 16125  001C0C  6E40               	movwf	___flmul@bexp^0,c
 16126  001C0E  AE30               	btfss	(___flmul@b+2)^0,7,c
 16127  001C10  EF0C  F00E         	goto	i2u557_41
 16128  001C14  EF0E  F00E         	goto	i2u557_40
 16129  001C18                     i2u557_41:
 16130  001C18  EF0F  F00E         	goto	i2l5248
 16131  001C1C                     i2u557_40:
 16132  001C1C  8040               	bsf	___flmul@bexp^0,0,c
 16133  001C1E                     i2l5248:
 16134  001C1E  5040               	movf	___flmul@bexp^0,w,c
 16135  001C20  B4D8               	btfsc	status,2,c
 16136  001C22  EF15  F00E         	goto	i2u558_41
 16137  001C26  EF17  F00E         	goto	i2u558_40
 16138  001C2A                     i2u558_41:
 16139  001C2A  EF2A  F00E         	goto	i2l5256
 16140  001C2E                     i2u558_40:
 16141  001C2E  2840               	incf	___flmul@bexp^0,w,c
 16142  001C30  A4D8               	btfss	status,2,c
 16143  001C32  EF1D  F00E         	goto	i2u559_41
 16144  001C36  EF1F  F00E         	goto	i2u559_40
 16145  001C3A                     i2u559_41:
 16146  001C3A  EF27  F00E         	goto	i2l5254
 16147  001C3E                     i2u559_40:
 16148  001C3E  0E00               	movlw	0
 16149  001C40  6E2E               	movwf	___flmul@b^0,c
 16150  001C42  0E00               	movlw	0
 16151  001C44  6E2F               	movwf	(___flmul@b+1)^0,c
 16152  001C46  0E00               	movlw	0
 16153  001C48  6E30               	movwf	(___flmul@b+2)^0,c
 16154  001C4A  0E00               	movlw	0
 16155  001C4C  6E31               	movwf	(___flmul@b+3)^0,c
 16156  001C4E                     i2l5254:
 16157  001C4E  8E30               	bsf	(___flmul@b+2)^0,7,c
 16158  001C50  EF32  F00E         	goto	i2l5258
 16159  001C54                     i2l5256:
 16160  001C54  0E00               	movlw	0
 16161  001C56  6E2E               	movwf	___flmul@b^0,c
 16162  001C58  0E00               	movlw	0
 16163  001C5A  6E2F               	movwf	(___flmul@b+1)^0,c
 16164  001C5C  0E00               	movlw	0
 16165  001C5E  6E30               	movwf	(___flmul@b+2)^0,c
 16166  001C60  0E00               	movlw	0
 16167  001C62  6E31               	movwf	(___flmul@b+3)^0,c
 16168  001C64                     i2l5258:
 16169  001C64  5035               	movf	(___flmul@a+3)^0,w,c
 16170  001C66  0B80               	andlw	128
 16171  001C68  1A3A               	xorwf	___flmul@sign^0,f,c
 16172  001C6A  5035               	movf	(___flmul@a+3)^0,w,c
 16173  001C6C  2435               	addwf	(___flmul@a+3)^0,w,c
 16174  001C6E  6E3F               	movwf	___flmul@aexp^0,c
 16175  001C70  AE34               	btfss	(___flmul@a+2)^0,7,c
 16176  001C72  EF3D  F00E         	goto	i2u560_41
 16177  001C76  EF3F  F00E         	goto	i2u560_40
 16178  001C7A                     i2u560_41:
 16179  001C7A  EF40  F00E         	goto	i2l5266
 16180  001C7E                     i2u560_40:
 16181  001C7E  803F               	bsf	___flmul@aexp^0,0,c
 16182  001C80                     i2l5266:
 16183  001C80  503F               	movf	___flmul@aexp^0,w,c
 16184  001C82  B4D8               	btfsc	status,2,c
 16185  001C84  EF46  F00E         	goto	i2u561_41
 16186  001C88  EF48  F00E         	goto	i2u561_40
 16187  001C8C                     i2u561_41:
 16188  001C8C  EF5B  F00E         	goto	i2l5274
 16189  001C90                     i2u561_40:
 16190  001C90  283F               	incf	___flmul@aexp^0,w,c
 16191  001C92  A4D8               	btfss	status,2,c
 16192  001C94  EF4E  F00E         	goto	i2u562_41
 16193  001C98  EF50  F00E         	goto	i2u562_40
 16194  001C9C                     i2u562_41:
 16195  001C9C  EF58  F00E         	goto	i2l5272
 16196  001CA0                     i2u562_40:
 16197  001CA0  0E00               	movlw	0
 16198  001CA2  6E32               	movwf	___flmul@a^0,c
 16199  001CA4  0E00               	movlw	0
 16200  001CA6  6E33               	movwf	(___flmul@a+1)^0,c
 16201  001CA8  0E00               	movlw	0
 16202  001CAA  6E34               	movwf	(___flmul@a+2)^0,c
 16203  001CAC  0E00               	movlw	0
 16204  001CAE  6E35               	movwf	(___flmul@a+3)^0,c
 16205  001CB0                     i2l5272:
 16206  001CB0  8E34               	bsf	(___flmul@a+2)^0,7,c
 16207  001CB2  EF63  F00E         	goto	i2l1530
 16208  001CB6                     i2l5274:
 16209  001CB6  0E00               	movlw	0
 16210  001CB8  6E32               	movwf	___flmul@a^0,c
 16211  001CBA  0E00               	movlw	0
 16212  001CBC  6E33               	movwf	(___flmul@a+1)^0,c
 16213  001CBE  0E00               	movlw	0
 16214  001CC0  6E34               	movwf	(___flmul@a+2)^0,c
 16215  001CC2  0E00               	movlw	0
 16216  001CC4  6E35               	movwf	(___flmul@a+3)^0,c
 16217  001CC6                     i2l1530:
 16218  001CC6  503F               	movf	___flmul@aexp^0,w,c
 16219  001CC8  B4D8               	btfsc	status,2,c
 16220  001CCA  EF69  F00E         	goto	i2u563_41
 16221  001CCE  EF6B  F00E         	goto	i2u563_40
 16222  001CD2                     i2u563_41:
 16223  001CD2  EF73  F00E         	goto	i2l5278
 16224  001CD6                     i2u563_40:
 16225  001CD6  5040               	movf	___flmul@bexp^0,w,c
 16226  001CD8  A4D8               	btfss	status,2,c
 16227  001CDA  EF71  F00E         	goto	i2u564_41
 16228  001CDE  EF73  F00E         	goto	i2u564_40
 16229  001CE2                     i2u564_41:
 16230  001CE2  EF7D  F00E         	goto	i2l5282
 16231  001CE6                     i2u564_40:
 16232  001CE6                     i2l5278:
 16233  001CE6  0E00               	movlw	0
 16234  001CE8  6E2E               	movwf	?___flmul^0,c
 16235  001CEA  0E00               	movlw	0
 16236  001CEC  6E2F               	movwf	(?___flmul+1)^0,c
 16237  001CEE  0E00               	movlw	0
 16238  001CF0  6E30               	movwf	(?___flmul+2)^0,c
 16239  001CF2  0E00               	movlw	0
 16240  001CF4  6E31               	movwf	(?___flmul+3)^0,c
 16241  001CF6  EF15  F010         	goto	i2l1534
 16242  001CFA                     i2l5282:
 16243  001CFA  5034               	movf	(___flmul@a+2)^0,w,c
 16244  001CFC  022E               	mulwf	___flmul@b^0,c
 16245  001CFE  CFF3 F045          	movff	prodl,___flmul@temp
 16246  001D02  CFF4 F046          	movff	prodh,___flmul@temp+1
 16247  001D06  5045               	movf	___flmul@temp^0,w,c
 16248  001D08  6E3B               	movwf	___flmul@grs^0,c
 16249  001D0A  6A3C               	clrf	(___flmul@grs+1)^0,c
 16250  001D0C  6A3D               	clrf	(___flmul@grs+2)^0,c
 16251  001D0E  6A3E               	clrf	(___flmul@grs+3)^0,c
 16252  001D10  5046               	movf	(___flmul@temp+1)^0,w,c
 16253  001D12  6E41               	movwf	___flmul@prod^0,c
 16254  001D14  6A42               	clrf	(___flmul@prod+1)^0,c
 16255  001D16  6A43               	clrf	(___flmul@prod+2)^0,c
 16256  001D18  6A44               	clrf	(___flmul@prod+3)^0,c
 16257  001D1A  5033               	movf	(___flmul@a+1)^0,w,c
 16258  001D1C  022F               	mulwf	(___flmul@b+1)^0,c
 16259  001D1E  CFF3 F045          	movff	prodl,___flmul@temp
 16260  001D22  CFF4 F046          	movff	prodh,___flmul@temp+1
 16261  001D26  5045               	movf	___flmul@temp^0,w,c
 16262  001D28  263B               	addwf	___flmul@grs^0,f,c
 16263  001D2A  0E00               	movlw	0
 16264  001D2C  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16265  001D2E  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16266  001D30  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16267  001D32  5046               	movf	(___flmul@temp+1)^0,w,c
 16268  001D34  2641               	addwf	___flmul@prod^0,f,c
 16269  001D36  0E00               	movlw	0
 16270  001D38  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16271  001D3A  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16272  001D3C  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16273  001D3E  5032               	movf	___flmul@a^0,w,c
 16274  001D40  0230               	mulwf	(___flmul@b+2)^0,c
 16275  001D42  CFF3 F045          	movff	prodl,___flmul@temp
 16276  001D46  CFF4 F046          	movff	prodh,___flmul@temp+1
 16277  001D4A  5045               	movf	___flmul@temp^0,w,c
 16278  001D4C  263B               	addwf	___flmul@grs^0,f,c
 16279  001D4E  0E00               	movlw	0
 16280  001D50  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16281  001D52  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16282  001D54  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16283  001D56  5046               	movf	(___flmul@temp+1)^0,w,c
 16284  001D58  2641               	addwf	___flmul@prod^0,f,c
 16285  001D5A  0E00               	movlw	0
 16286  001D5C  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16287  001D5E  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16288  001D60  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16289  001D62  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 16290  001D66  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 16291  001D6A  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 16292  001D6E  6A3B               	clrf	___flmul@grs^0,c
 16293  001D70  5032               	movf	___flmul@a^0,w,c
 16294  001D72  022F               	mulwf	(___flmul@b+1)^0,c
 16295  001D74  CFF3 F045          	movff	prodl,___flmul@temp
 16296  001D78  CFF4 F046          	movff	prodh,___flmul@temp+1
 16297  001D7C  5045               	movf	___flmul@temp^0,w,c
 16298  001D7E  263B               	addwf	___flmul@grs^0,f,c
 16299  001D80  5046               	movf	(___flmul@temp+1)^0,w,c
 16300  001D82  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16301  001D84  0E00               	movlw	0
 16302  001D86  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16303  001D88  0E00               	movlw	0
 16304  001D8A  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16305  001D8C  5033               	movf	(___flmul@a+1)^0,w,c
 16306  001D8E  022E               	mulwf	___flmul@b^0,c
 16307  001D90  CFF3 F045          	movff	prodl,___flmul@temp
 16308  001D94  CFF4 F046          	movff	prodh,___flmul@temp+1
 16309  001D98  5045               	movf	___flmul@temp^0,w,c
 16310  001D9A  263B               	addwf	___flmul@grs^0,f,c
 16311  001D9C  5046               	movf	(___flmul@temp+1)^0,w,c
 16312  001D9E  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16313  001DA0  0E00               	movlw	0
 16314  001DA2  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16315  001DA4  0E00               	movlw	0
 16316  001DA6  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16317  001DA8  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 16318  001DAC  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 16319  001DB0  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 16320  001DB4  6A3B               	clrf	___flmul@grs^0,c
 16321  001DB6  5032               	movf	___flmul@a^0,w,c
 16322  001DB8  022E               	mulwf	___flmul@b^0,c
 16323  001DBA  CFF3 F045          	movff	prodl,___flmul@temp
 16324  001DBE  CFF4 F046          	movff	prodh,___flmul@temp+1
 16325  001DC2  5045               	movf	___flmul@temp^0,w,c
 16326  001DC4  263B               	addwf	___flmul@grs^0,f,c
 16327  001DC6  5046               	movf	(___flmul@temp+1)^0,w,c
 16328  001DC8  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16329  001DCA  0E00               	movlw	0
 16330  001DCC  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16331  001DCE  0E00               	movlw	0
 16332  001DD0  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16333  001DD2  5034               	movf	(___flmul@a+2)^0,w,c
 16334  001DD4  022F               	mulwf	(___flmul@b+1)^0,c
 16335  001DD6  CFF3 F045          	movff	prodl,___flmul@temp
 16336  001DDA  CFF4 F046          	movff	prodh,___flmul@temp+1
 16337  001DDE  5045               	movf	___flmul@temp^0,w,c
 16338  001DE0  2641               	addwf	___flmul@prod^0,f,c
 16339  001DE2  5046               	movf	(___flmul@temp+1)^0,w,c
 16340  001DE4  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16341  001DE6  0E00               	movlw	0
 16342  001DE8  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16343  001DEA  0E00               	movlw	0
 16344  001DEC  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16345  001DEE  5033               	movf	(___flmul@a+1)^0,w,c
 16346  001DF0  0230               	mulwf	(___flmul@b+2)^0,c
 16347  001DF2  CFF3 F045          	movff	prodl,___flmul@temp
 16348  001DF6  CFF4 F046          	movff	prodh,___flmul@temp+1
 16349  001DFA  5045               	movf	___flmul@temp^0,w,c
 16350  001DFC  2641               	addwf	___flmul@prod^0,f,c
 16351  001DFE  5046               	movf	(___flmul@temp+1)^0,w,c
 16352  001E00  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16353  001E02  0E00               	movlw	0
 16354  001E04  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16355  001E06  0E00               	movlw	0
 16356  001E08  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16357  001E0A  5034               	movf	(___flmul@a+2)^0,w,c
 16358  001E0C  0230               	mulwf	(___flmul@b+2)^0,c
 16359  001E0E  CFF3 F045          	movff	prodl,___flmul@temp
 16360  001E12  CFF4 F046          	movff	prodh,___flmul@temp+1
 16361  001E16  5045               	movf	___flmul@temp^0,w,c
 16362  001E18  6E36               	movwf	??___flmul^0,c
 16363  001E1A  5046               	movf	(___flmul@temp+1)^0,w,c
 16364  001E1C  6E37               	movwf	(??___flmul+1)^0,c
 16365  001E1E  6A38               	clrf	(??___flmul+2)^0,c
 16366  001E20  6A39               	clrf	(??___flmul+3)^0,c
 16367  001E22  C038  F039         	movff	??___flmul+2,??___flmul+3
 16368  001E26  C037  F038         	movff	??___flmul+1,??___flmul+2
 16369  001E2A  C036  F037         	movff	??___flmul,??___flmul+1
 16370  001E2E  6A36               	clrf	??___flmul^0,c
 16371  001E30  5036               	movf	??___flmul^0,w,c
 16372  001E32  2641               	addwf	___flmul@prod^0,f,c
 16373  001E34  5037               	movf	(??___flmul+1)^0,w,c
 16374  001E36  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16375  001E38  5038               	movf	(??___flmul+2)^0,w,c
 16376  001E3A  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16377  001E3C  5039               	movf	(??___flmul+3)^0,w,c
 16378  001E3E  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16379  001E40  C03B  F036         	movff	___flmul@grs,??___flmul
 16380  001E44  C03C  F037         	movff	___flmul@grs+1,??___flmul+1
 16381  001E48  C03D  F038         	movff	___flmul@grs+2,??___flmul+2
 16382  001E4C  C03E  F039         	movff	___flmul@grs+3,??___flmul+3
 16383  001E50  0E19               	movlw	25
 16384  001E52  EF30  F00F         	goto	i2u565_40
 16385  001E56                     i2u565_45:
 16386  001E56  90D8               	bcf	status,0,c
 16387  001E58  3239               	rrcf	(??___flmul+3)^0,f,c
 16388  001E5A  3238               	rrcf	(??___flmul+2)^0,f,c
 16389  001E5C  3237               	rrcf	(??___flmul+1)^0,f,c
 16390  001E5E  3236               	rrcf	??___flmul^0,f,c
 16391  001E60                     i2u565_40:
 16392  001E60  2EE8               	decfsz	wreg,f,c
 16393  001E62  EF2B  F00F         	goto	i2u565_45
 16394  001E66  5036               	movf	??___flmul^0,w,c
 16395  001E68  2641               	addwf	___flmul@prod^0,f,c
 16396  001E6A  5037               	movf	(??___flmul+1)^0,w,c
 16397  001E6C  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16398  001E6E  5038               	movf	(??___flmul+2)^0,w,c
 16399  001E70  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16400  001E72  5039               	movf	(??___flmul+3)^0,w,c
 16401  001E74  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16402  001E76  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 16403  001E7A  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 16404  001E7E  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 16405  001E82  6A3B               	clrf	___flmul@grs^0,c
 16406  001E84  503F               	movf	___flmul@aexp^0,w,c
 16407  001E86  C040  F036         	movff	___flmul@bexp,??___flmul
 16408  001E8A  6A37               	clrf	(??___flmul+1)^0,c
 16409  001E8C  2636               	addwf	??___flmul^0,f,c
 16410  001E8E  0E00               	movlw	0
 16411  001E90  2237               	addwfc	(??___flmul+1)^0,f,c
 16412  001E92  0E82               	movlw	130
 16413  001E94  2436               	addwf	??___flmul^0,w,c
 16414  001E96  6E45               	movwf	___flmul@temp^0,c
 16415  001E98  0EFF               	movlw	255
 16416  001E9A  2037               	addwfc	(??___flmul+1)^0,w,c
 16417  001E9C  6E46               	movwf	(___flmul@temp+1)^0,c
 16418  001E9E  EF66  F00F         	goto	i2l5330
 16419  001EA2                     i2l5324:
 16420  001EA2  90D8               	bcf	status,0,c
 16421  001EA4  3641               	rlcf	___flmul@prod^0,f,c
 16422  001EA6  3642               	rlcf	(___flmul@prod+1)^0,f,c
 16423  001EA8  3643               	rlcf	(___flmul@prod+2)^0,f,c
 16424  001EAA  3644               	rlcf	(___flmul@prod+3)^0,f,c
 16425  001EAC  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 16426  001EAE  EF5B  F00F         	goto	i2u566_41
 16427  001EB2  EF5D  F00F         	goto	i2u566_40
 16428  001EB6                     i2u566_41:
 16429  001EB6  EF5E  F00F         	goto	i2l1537
 16430  001EBA                     i2u566_40:
 16431  001EBA  8041               	bsf	___flmul@prod^0,0,c
 16432  001EBC                     i2l1537:
 16433  001EBC  90D8               	bcf	status,0,c
 16434  001EBE  363B               	rlcf	___flmul@grs^0,f,c
 16435  001EC0  363C               	rlcf	(___flmul@grs+1)^0,f,c
 16436  001EC2  363D               	rlcf	(___flmul@grs+2)^0,f,c
 16437  001EC4  363E               	rlcf	(___flmul@grs+3)^0,f,c
 16438  001EC6  0645               	decf	___flmul@temp^0,f,c
 16439  001EC8  A0D8               	btfss	status,0,c
 16440  001ECA  0646               	decf	(___flmul@temp+1)^0,f,c
 16441  001ECC                     i2l5330:
 16442  001ECC  AE43               	btfss	(___flmul@prod+2)^0,7,c
 16443  001ECE  EF6B  F00F         	goto	i2u567_41
 16444  001ED2  EF6D  F00F         	goto	i2u567_40
 16445  001ED6                     i2u567_41:
 16446  001ED6  EF51  F00F         	goto	i2l5324
 16447  001EDA                     i2u567_40:
 16448  001EDA  0E00               	movlw	0
 16449  001EDC  6E3F               	movwf	___flmul@aexp^0,c
 16450  001EDE  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 16451  001EE0  EF74  F00F         	goto	i2u568_41
 16452  001EE4  EF76  F00F         	goto	i2u568_40
 16453  001EE8                     i2u568_41:
 16454  001EE8  EF9A  F00F         	goto	i2l1539
 16455  001EEC                     i2u568_40:
 16456  001EEC  0EFF               	movlw	255
 16457  001EEE  143B               	andwf	___flmul@grs^0,w,c
 16458  001EF0  6E36               	movwf	??___flmul^0,c
 16459  001EF2  0EFF               	movlw	255
 16460  001EF4  143C               	andwf	(___flmul@grs+1)^0,w,c
 16461  001EF6  6E37               	movwf	(??___flmul+1)^0,c
 16462  001EF8  0EFF               	movlw	255
 16463  001EFA  143D               	andwf	(___flmul@grs+2)^0,w,c
 16464  001EFC  6E38               	movwf	(??___flmul+2)^0,c
 16465  001EFE  0E7F               	movlw	127
 16466  001F00  143E               	andwf	(___flmul@grs+3)^0,w,c
 16467  001F02  6E39               	movwf	(??___flmul+3)^0,c
 16468  001F04  5036               	movf	??___flmul^0,w,c
 16469  001F06  1037               	iorwf	(??___flmul+1)^0,w,c
 16470  001F08  1038               	iorwf	(??___flmul+2)^0,w,c
 16471  001F0A  1039               	iorwf	(??___flmul+3)^0,w,c
 16472  001F0C  B4D8               	btfsc	status,2,c
 16473  001F0E  EF8B  F00F         	goto	i2u569_41
 16474  001F12  EF8D  F00F         	goto	i2u569_40
 16475  001F16                     i2u569_41:
 16476  001F16  EF91  F00F         	goto	i2l1540
 16477  001F1A                     i2u569_40:
 16478  001F1A                     i2l5338:
 16479  001F1A  0E01               	movlw	1
 16480  001F1C  6E3F               	movwf	___flmul@aexp^0,c
 16481  001F1E  EF9A  F00F         	goto	i2l1539
 16482  001F22                     i2l1540:
 16483  001F22  A041               	btfss	___flmul@prod^0,0,c
 16484  001F24  EF96  F00F         	goto	i2u570_41
 16485  001F28  EF98  F00F         	goto	i2u570_40
 16486  001F2C                     i2u570_41:
 16487  001F2C  EF9A  F00F         	goto	i2l1539
 16488  001F30                     i2u570_40:
 16489  001F30  EF8D  F00F         	goto	i2l5338
 16490  001F34                     i2l1539:
 16491  001F34  503F               	movf	___flmul@aexp^0,w,c
 16492  001F36  B4D8               	btfsc	status,2,c
 16493  001F38  EFA0  F00F         	goto	i2u571_41
 16494  001F3C  EFA2  F00F         	goto	i2u571_40
 16495  001F40                     i2u571_41:
 16496  001F40  EFC6  F00F         	goto	i2l5350
 16497  001F44                     i2u571_40:
 16498  001F44  0E01               	movlw	1
 16499  001F46  2641               	addwf	___flmul@prod^0,f,c
 16500  001F48  0E00               	movlw	0
 16501  001F4A  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16502  001F4C  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16503  001F4E  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16504  001F50  A044               	btfss	(___flmul@prod+3)^0,0,c
 16505  001F52  EFAD  F00F         	goto	i2u572_41
 16506  001F56  EFAF  F00F         	goto	i2u572_40
 16507  001F5A                     i2u572_41:
 16508  001F5A  EFC6  F00F         	goto	i2l5350
 16509  001F5E                     i2u572_40:
 16510  001F5E  C041  F036         	movff	___flmul@prod,??___flmul
 16511  001F62  C042  F037         	movff	___flmul@prod+1,??___flmul+1
 16512  001F66  C043  F038         	movff	___flmul@prod+2,??___flmul+2
 16513  001F6A  C044  F039         	movff	___flmul@prod+3,??___flmul+3
 16514  001F6E  3439               	rlcf	(??___flmul+3)^0,w,c
 16515  001F70  3239               	rrcf	(??___flmul+3)^0,f,c
 16516  001F72  3238               	rrcf	(??___flmul+2)^0,f,c
 16517  001F74  3237               	rrcf	(??___flmul+1)^0,f,c
 16518  001F76  3236               	rrcf	??___flmul^0,f,c
 16519  001F78  C036  F041         	movff	??___flmul,___flmul@prod
 16520  001F7C  C037  F042         	movff	??___flmul+1,___flmul@prod+1
 16521  001F80  C038  F043         	movff	??___flmul+2,___flmul@prod+2
 16522  001F84  C039  F044         	movff	??___flmul+3,___flmul@prod+3
 16523  001F88  4A45               	infsnz	___flmul@temp^0,f,c
 16524  001F8A  2A46               	incf	(___flmul@temp+1)^0,f,c
 16525  001F8C                     i2l5350:
 16526  001F8C  BE46               	btfsc	(___flmul@temp+1)^0,7,c
 16527  001F8E  EFD1  F00F         	goto	i2u573_41
 16528  001F92  5046               	movf	(___flmul@temp+1)^0,w,c
 16529  001F94  E108               	bnz	i2u573_40
 16530  001F96  2845               	incf	___flmul@temp^0,w,c
 16531  001F98  A0D8               	btfss	status,0,c
 16532  001F9A  EFD1  F00F         	goto	i2u573_41
 16533  001F9E  EFD3  F00F         	goto	i2u573_40
 16534  001FA2                     i2u573_41:
 16535  001FA2  EFDD  F00F         	goto	i2l5354
 16536  001FA6                     i2u573_40:
 16537  001FA6  0E00               	movlw	0
 16538  001FA8  6E41               	movwf	___flmul@prod^0,c
 16539  001FAA  0E00               	movlw	0
 16540  001FAC  6E42               	movwf	(___flmul@prod+1)^0,c
 16541  001FAE  0E80               	movlw	128
 16542  001FB0  6E43               	movwf	(___flmul@prod+2)^0,c
 16543  001FB2  0E7F               	movlw	127
 16544  001FB4  6E44               	movwf	(___flmul@prod+3)^0,c
 16545  001FB6  EF0B  F010         	goto	i2l5366
 16546  001FBA                     i2l5354:
 16547  001FBA  BE46               	btfsc	(___flmul@temp+1)^0,7,c
 16548  001FBC  EFEA  F00F         	goto	i2u574_40
 16549  001FC0  5046               	movf	(___flmul@temp+1)^0,w,c
 16550  001FC2  E106               	bnz	i2u574_41
 16551  001FC4  0445               	decf	___flmul@temp^0,w,c
 16552  001FC6  B0D8               	btfsc	status,0,c
 16553  001FC8  EFE8  F00F         	goto	i2u574_41
 16554  001FCC  EFEA  F00F         	goto	i2u574_40
 16555  001FD0                     i2u574_41:
 16556  001FD0  EFF6  F00F         	goto	i2l1547
 16557  001FD4                     i2u574_40:
 16558  001FD4  0E00               	movlw	0
 16559  001FD6  6E41               	movwf	___flmul@prod^0,c
 16560  001FD8  0E00               	movlw	0
 16561  001FDA  6E42               	movwf	(___flmul@prod+1)^0,c
 16562  001FDC  0E00               	movlw	0
 16563  001FDE  6E43               	movwf	(___flmul@prod+2)^0,c
 16564  001FE0  0E00               	movlw	0
 16565  001FE2  6E44               	movwf	(___flmul@prod+3)^0,c
 16566  001FE4  0E00               	movlw	0
 16567  001FE6  6E3A               	movwf	___flmul@sign^0,c
 16568  001FE8  EF0B  F010         	goto	i2l5366
 16569  001FEC                     i2l1547:
 16570  001FEC  C045  F040         	movff	___flmul@temp,___flmul@bexp
 16571  001FF0  0EFF               	movlw	255
 16572  001FF2  1641               	andwf	___flmul@prod^0,f,c
 16573  001FF4  0EFF               	movlw	255
 16574  001FF6  1642               	andwf	(___flmul@prod+1)^0,f,c
 16575  001FF8  0E7F               	movlw	127
 16576  001FFA  1643               	andwf	(___flmul@prod+2)^0,f,c
 16577  001FFC  0E00               	movlw	0
 16578  001FFE  1644               	andwf	(___flmul@prod+3)^0,f,c
 16579  002000  A040               	btfss	___flmul@bexp^0,0,c
 16580  002002  EF05  F010         	goto	i2u575_41
 16581  002006  EF07  F010         	goto	i2u575_40
 16582  00200A                     i2u575_41:
 16583  00200A  EF08  F010         	goto	i2l5364
 16584  00200E                     i2u575_40:
 16585  00200E  8E43               	bsf	(___flmul@prod+2)^0,7,c
 16586  002010                     i2l5364:
 16587  002010  90D8               	bcf	status,0,c
 16588  002012  3040               	rrcf	___flmul@bexp^0,w,c
 16589  002014  6E44               	movwf	(___flmul@prod+3)^0,c
 16590  002016                     i2l5366:
 16591  002016  503A               	movf	___flmul@sign^0,w,c
 16592  002018  1244               	iorwf	(___flmul@prod+3)^0,f,c
 16593  00201A  C041  F02E         	movff	___flmul@prod,?___flmul
 16594  00201E  C042  F02F         	movff	___flmul@prod+1,?___flmul+1
 16595  002022  C043  F030         	movff	___flmul@prod+2,?___flmul+2
 16596  002026  C044  F031         	movff	___flmul@prod+3,?___flmul+3
 16597  00202A                     i2l1534:
 16598  00202A  0012               	return		;funcret
 16599  00202C                     __end_of___flmul:
 16600                           	opt callstack 0
 16601                           
 16602 ;; *************** function ___flge *****************
 16603 ;; Defined at:
 16604 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16605 ;; Parameters:    Size  Location     Type
 16606 ;;  ff1             4    0[COMRAM] unsigned char 
 16607 ;;  ff2             4    4[COMRAM] unsigned char 
 16608 ;; Auto vars:     Size  Location     Type
 16609 ;;		None
 16610 ;; Return value:  Size  Location     Type
 16611 ;;		None               void
 16612 ;; Registers used:
 16613 ;;		wreg, status,2, status,0
 16614 ;; Tracked objects:
 16615 ;;		On entry : 0/0
 16616 ;;		On exit  : 0/0
 16617 ;;		Unchanged: 0/0
 16618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16622 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16623 ;;Total ram usage:       12 bytes
 16624 ;; Hardware stack levels used:    1
 16625 ;; This function calls:
 16626 ;;		Nothing
 16627 ;; This function is called by:
 16628 ;;		_PI_Controller
 16629 ;; This function uses a non-reentrant model
 16630 ;;
 16631                           
 16632                           	psect	text76
 16633  004344                     __ptext76:
 16634                           	opt callstack 0
 16635  004344                     ___flge:
 16636                           	opt callstack 15
 16637  004344  0E00               	movlw	0
 16638  004346  1401               	andwf	___flge@ff1^0,w,c
 16639  004348  6E09               	movwf	??___flge^0,c
 16640  00434A  0E00               	movlw	0
 16641  00434C  1402               	andwf	(___flge@ff1+1)^0,w,c
 16642  00434E  6E0A               	movwf	(??___flge+1)^0,c
 16643  004350  0E80               	movlw	128
 16644  004352  1403               	andwf	(___flge@ff1+2)^0,w,c
 16645  004354  6E0B               	movwf	(??___flge+2)^0,c
 16646  004356  0E7F               	movlw	127
 16647  004358  1404               	andwf	(___flge@ff1+3)^0,w,c
 16648  00435A  6E0C               	movwf	(??___flge+3)^0,c
 16649  00435C  5009               	movf	??___flge^0,w,c
 16650  00435E  100A               	iorwf	(??___flge+1)^0,w,c
 16651  004360  100B               	iorwf	(??___flge+2)^0,w,c
 16652  004362  100C               	iorwf	(??___flge+3)^0,w,c
 16653  004364  A4D8               	btfss	status,2,c
 16654  004366  EFB7  F021         	goto	i2u576_41
 16655  00436A  EFB9  F021         	goto	i2u576_40
 16656  00436E                     i2u576_41:
 16657  00436E  EFC1  F021         	goto	i2l5382
 16658  004372                     i2u576_40:
 16659  004372  0E00               	movlw	0
 16660  004374  6E01               	movwf	___flge@ff1^0,c
 16661  004376  0E00               	movlw	0
 16662  004378  6E02               	movwf	(___flge@ff1+1)^0,c
 16663  00437A  0E00               	movlw	0
 16664  00437C  6E03               	movwf	(___flge@ff1+2)^0,c
 16665  00437E  0E00               	movlw	0
 16666  004380  6E04               	movwf	(___flge@ff1+3)^0,c
 16667  004382                     i2l5382:
 16668  004382  0E00               	movlw	0
 16669  004384  1405               	andwf	___flge@ff2^0,w,c
 16670  004386  6E09               	movwf	??___flge^0,c
 16671  004388  0E00               	movlw	0
 16672  00438A  1406               	andwf	(___flge@ff2+1)^0,w,c
 16673  00438C  6E0A               	movwf	(??___flge+1)^0,c
 16674  00438E  0E80               	movlw	128
 16675  004390  1407               	andwf	(___flge@ff2+2)^0,w,c
 16676  004392  6E0B               	movwf	(??___flge+2)^0,c
 16677  004394  0E7F               	movlw	127
 16678  004396  1408               	andwf	(___flge@ff2+3)^0,w,c
 16679  004398  6E0C               	movwf	(??___flge+3)^0,c
 16680  00439A  5009               	movf	??___flge^0,w,c
 16681  00439C  100A               	iorwf	(??___flge+1)^0,w,c
 16682  00439E  100B               	iorwf	(??___flge+2)^0,w,c
 16683  0043A0  100C               	iorwf	(??___flge+3)^0,w,c
 16684  0043A2  A4D8               	btfss	status,2,c
 16685  0043A4  EFD6  F021         	goto	i2u577_41
 16686  0043A8  EFD8  F021         	goto	i2u577_40
 16687  0043AC                     i2u577_41:
 16688  0043AC  EFE0  F021         	goto	i2l5386
 16689  0043B0                     i2u577_40:
 16690  0043B0  0E00               	movlw	0
 16691  0043B2  6E05               	movwf	___flge@ff2^0,c
 16692  0043B4  0E00               	movlw	0
 16693  0043B6  6E06               	movwf	(___flge@ff2+1)^0,c
 16694  0043B8  0E00               	movlw	0
 16695  0043BA  6E07               	movwf	(___flge@ff2+2)^0,c
 16696  0043BC  0E00               	movlw	0
 16697  0043BE  6E08               	movwf	(___flge@ff2+3)^0,c
 16698  0043C0                     i2l5386:
 16699  0043C0  AE04               	btfss	(___flge@ff1+3)^0,7,c
 16700  0043C2  EFE5  F021         	goto	i2u578_41
 16701  0043C6  EFE7  F021         	goto	i2u578_40
 16702  0043CA                     i2u578_41:
 16703  0043CA  EFF0  F021         	goto	i2l5390
 16704  0043CE                     i2u578_40:
 16705  0043CE  6C01               	negf	___flge@ff1^0,c
 16706  0043D0  1E02               	comf	(___flge@ff1+1)^0,f,c
 16707  0043D2  B0D8               	btfsc	status,0,c
 16708  0043D4  2A02               	incf	(___flge@ff1+1)^0,f,c
 16709  0043D6  1E03               	comf	(___flge@ff1+2)^0,f,c
 16710  0043D8  B0D8               	btfsc	status,0,c
 16711  0043DA  2A03               	incf	(___flge@ff1+2)^0,f,c
 16712  0043DC  0E80               	movlw	128
 16713  0043DE  5604               	subfwb	(___flge@ff1+3)^0,f,c
 16714  0043E0                     i2l5390:
 16715  0043E0  AE08               	btfss	(___flge@ff2+3)^0,7,c
 16716  0043E2  EFF5  F021         	goto	i2u579_41
 16717  0043E6  EFF7  F021         	goto	i2u579_40
 16718  0043EA                     i2u579_41:
 16719  0043EA  EF00  F022         	goto	i2l1181
 16720  0043EE                     i2u579_40:
 16721  0043EE  6C05               	negf	___flge@ff2^0,c
 16722  0043F0  1E06               	comf	(___flge@ff2+1)^0,f,c
 16723  0043F2  B0D8               	btfsc	status,0,c
 16724  0043F4  2A06               	incf	(___flge@ff2+1)^0,f,c
 16725  0043F6  1E07               	comf	(___flge@ff2+2)^0,f,c
 16726  0043F8  B0D8               	btfsc	status,0,c
 16727  0043FA  2A07               	incf	(___flge@ff2+2)^0,f,c
 16728  0043FC  0E80               	movlw	128
 16729  0043FE  5608               	subfwb	(___flge@ff2+3)^0,f,c
 16730  004400                     i2l1181:
 16731  004400  0E00               	movlw	0
 16732  004402  1A01               	xorwf	___flge@ff1^0,f,c
 16733  004404  0E00               	movlw	0
 16734  004406  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 16735  004408  0E00               	movlw	0
 16736  00440A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 16737  00440C  0E80               	movlw	128
 16738  00440E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 16739  004410  0E00               	movlw	0
 16740  004412  1A05               	xorwf	___flge@ff2^0,f,c
 16741  004414  0E00               	movlw	0
 16742  004416  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 16743  004418  0E00               	movlw	0
 16744  00441A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 16745  00441C  0E80               	movlw	128
 16746  00441E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 16747  004420  5005               	movf	___flge@ff2^0,w,c
 16748  004422  5C01               	subwf	___flge@ff1^0,w,c
 16749  004424  5006               	movf	(___flge@ff2+1)^0,w,c
 16750  004426  5802               	subwfb	(___flge@ff1+1)^0,w,c
 16751  004428  5007               	movf	(___flge@ff2+2)^0,w,c
 16752  00442A  5803               	subwfb	(___flge@ff1+2)^0,w,c
 16753  00442C  5008               	movf	(___flge@ff2+3)^0,w,c
 16754  00442E  5804               	subwfb	(___flge@ff1+3)^0,w,c
 16755  004430  B0D8               	btfsc	status,0,c
 16756  004432  EF1D  F022         	goto	i2u580_41
 16757  004436  EF1F  F022         	goto	i2u580_40
 16758  00443A                     i2u580_41:
 16759  00443A  EF22  F022         	goto	i2l5396
 16760  00443E                     i2u580_40:
 16761  00443E  90D8               	bcf	status,0,c
 16762  004440  EF23  F022         	goto	i2l1186
 16763  004444                     i2l5396:
 16764  004444  80D8               	bsf	status,0,c
 16765  004446                     i2l1186:
 16766  004446  0012               	return		;funcret
 16767  004448                     __end_of___flge:
 16768                           	opt callstack 0
 16769                           
 16770 ;; *************** function ___fldiv *****************
 16771 ;; Defined at:
 16772 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 16773 ;; Parameters:    Size  Location     Type
 16774 ;;  b               4   70[COMRAM] unsigned char 
 16775 ;;  a               4   74[COMRAM] unsigned char 
 16776 ;; Auto vars:     Size  Location     Type
 16777 ;;  grs             4    7[BANK0 ] unsigned long 
 16778 ;;  rem             4    0[BANK0 ] unsigned long 
 16779 ;;  new_exp         2    5[BANK0 ] short 
 16780 ;;  aexp            1   12[BANK0 ] unsigned char 
 16781 ;;  bexp            1   11[BANK0 ] unsigned char 
 16782 ;;  sign            1    4[BANK0 ] unsigned char 
 16783 ;; Return value:  Size  Location     Type
 16784 ;;                  4   70[COMRAM] unsigned char 
 16785 ;; Registers used:
 16786 ;;		wreg, status,2, status,0
 16787 ;; Tracked objects:
 16788 ;;		On entry : 0/0
 16789 ;;		On exit  : 0/0
 16790 ;;		Unchanged: 0/0
 16791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16792 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16793 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16794 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16795 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16796 ;;Total ram usage:       25 bytes
 16797 ;; Hardware stack levels used:    1
 16798 ;; This function calls:
 16799 ;;		Nothing
 16800 ;; This function is called by:
 16801 ;;		_PI_Controller
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           	psect	text77
 16806  00202C                     __ptext77:
 16807                           	opt callstack 0
 16808  00202C                     ___fldiv:
 16809                           	opt callstack 15
 16810  00202C  504A               	movf	(___fldiv@b+3)^0,w,c
 16811  00202E  0B80               	andlw	128
 16812  002030  0100               	movlb	0	; () banked
 16813  002032  6F64               	movwf	___fldiv@sign& (0+255),b
 16814  002034  504A               	movf	(___fldiv@b+3)^0,w,c
 16815  002036  244A               	addwf	(___fldiv@b+3)^0,w,c
 16816  002038  6F6B               	movwf	___fldiv@bexp& (0+255),b
 16817  00203A                     
 16818                           ; BSR set to: 0
 16819  00203A  AE49               	btfss	(___fldiv@b+2)^0,7,c
 16820  00203C  EF22  F010         	goto	i2u534_41
 16821  002040  EF24  F010         	goto	i2u534_40
 16822  002044                     i2u534_41:
 16823  002044  EF25  F010         	goto	i2l5110
 16824  002048                     i2u534_40:
 16825  002048                     
 16826                           ; BSR set to: 0
 16827  002048  816B               	bsf	___fldiv@bexp& (0+255),0,b
 16828  00204A                     i2l5110:
 16829                           
 16830                           ; BSR set to: 0
 16831  00204A  516B               	movf	___fldiv@bexp& (0+255),w,b
 16832  00204C  B4D8               	btfsc	status,2,c
 16833  00204E  EF2B  F010         	goto	i2u535_41
 16834  002052  EF2D  F010         	goto	i2u535_40
 16835  002056                     i2u535_41:
 16836  002056  EF42  F010         	goto	i2l5120
 16837  00205A                     i2u535_40:
 16838  00205A                     
 16839                           ; BSR set to: 0
 16840  00205A  296B               	incf	___fldiv@bexp& (0+255),w,b
 16841  00205C  A4D8               	btfss	status,2,c
 16842  00205E  EF33  F010         	goto	i2u536_41
 16843  002062  EF35  F010         	goto	i2u536_40
 16844  002066                     i2u536_41:
 16845  002066  EF3D  F010         	goto	i2l5116
 16846  00206A                     i2u536_40:
 16847  00206A                     
 16848                           ; BSR set to: 0
 16849  00206A  0E00               	movlw	0
 16850  00206C  6E47               	movwf	___fldiv@b^0,c
 16851  00206E  0E00               	movlw	0
 16852  002070  6E48               	movwf	(___fldiv@b+1)^0,c
 16853  002072  0E00               	movlw	0
 16854  002074  6E49               	movwf	(___fldiv@b+2)^0,c
 16855  002076  0E00               	movlw	0
 16856  002078  6E4A               	movwf	(___fldiv@b+3)^0,c
 16857  00207A                     i2l5116:
 16858                           
 16859                           ; BSR set to: 0
 16860  00207A  8E49               	bsf	(___fldiv@b+2)^0,7,c
 16861  00207C                     
 16862                           ; BSR set to: 0
 16863  00207C  0E00               	movlw	0
 16864  00207E  6E4A               	movwf	(___fldiv@b+3)^0,c
 16865  002080  EF4A  F010         	goto	i2l5122
 16866  002084                     i2l5120:
 16867                           
 16868                           ; BSR set to: 0
 16869  002084  0E00               	movlw	0
 16870  002086  6E47               	movwf	___fldiv@b^0,c
 16871  002088  0E00               	movlw	0
 16872  00208A  6E48               	movwf	(___fldiv@b+1)^0,c
 16873  00208C  0E00               	movlw	0
 16874  00208E  6E49               	movwf	(___fldiv@b+2)^0,c
 16875  002090  0E00               	movlw	0
 16876  002092  6E4A               	movwf	(___fldiv@b+3)^0,c
 16877  002094                     i2l5122:
 16878                           
 16879                           ; BSR set to: 0
 16880  002094  504E               	movf	(___fldiv@a+3)^0,w,c
 16881  002096  0B80               	andlw	128
 16882  002098  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 16883  00209A                     
 16884                           ; BSR set to: 0
 16885  00209A  504E               	movf	(___fldiv@a+3)^0,w,c
 16886  00209C  244E               	addwf	(___fldiv@a+3)^0,w,c
 16887  00209E  6F6C               	movwf	___fldiv@aexp& (0+255),b
 16888  0020A0                     
 16889                           ; BSR set to: 0
 16890  0020A0  AE4D               	btfss	(___fldiv@a+2)^0,7,c
 16891  0020A2  EF55  F010         	goto	i2u537_41
 16892  0020A6  EF57  F010         	goto	i2u537_40
 16893  0020AA                     i2u537_41:
 16894  0020AA  EF58  F010         	goto	i2l5130
 16895  0020AE                     i2u537_40:
 16896  0020AE                     
 16897                           ; BSR set to: 0
 16898  0020AE  816C               	bsf	___fldiv@aexp& (0+255),0,b
 16899  0020B0                     i2l5130:
 16900                           
 16901                           ; BSR set to: 0
 16902  0020B0  516C               	movf	___fldiv@aexp& (0+255),w,b
 16903  0020B2  B4D8               	btfsc	status,2,c
 16904  0020B4  EF5E  F010         	goto	i2u538_41
 16905  0020B8  EF60  F010         	goto	i2u538_40
 16906  0020BC                     i2u538_41:
 16907  0020BC  EF75  F010         	goto	i2l5140
 16908  0020C0                     i2u538_40:
 16909  0020C0                     
 16910                           ; BSR set to: 0
 16911  0020C0  296C               	incf	___fldiv@aexp& (0+255),w,b
 16912  0020C2  A4D8               	btfss	status,2,c
 16913  0020C4  EF66  F010         	goto	i2u539_41
 16914  0020C8  EF68  F010         	goto	i2u539_40
 16915  0020CC                     i2u539_41:
 16916  0020CC  EF70  F010         	goto	i2l5136
 16917  0020D0                     i2u539_40:
 16918  0020D0                     
 16919                           ; BSR set to: 0
 16920  0020D0  0E00               	movlw	0
 16921  0020D2  6E4B               	movwf	___fldiv@a^0,c
 16922  0020D4  0E00               	movlw	0
 16923  0020D6  6E4C               	movwf	(___fldiv@a+1)^0,c
 16924  0020D8  0E00               	movlw	0
 16925  0020DA  6E4D               	movwf	(___fldiv@a+2)^0,c
 16926  0020DC  0E00               	movlw	0
 16927  0020DE  6E4E               	movwf	(___fldiv@a+3)^0,c
 16928  0020E0                     i2l5136:
 16929                           
 16930                           ; BSR set to: 0
 16931  0020E0  8E4D               	bsf	(___fldiv@a+2)^0,7,c
 16932  0020E2                     
 16933                           ; BSR set to: 0
 16934  0020E2  0E00               	movlw	0
 16935  0020E4  6E4E               	movwf	(___fldiv@a+3)^0,c
 16936  0020E6  EF7D  F010         	goto	i2l5142
 16937  0020EA                     i2l5140:
 16938                           
 16939                           ; BSR set to: 0
 16940  0020EA  0E00               	movlw	0
 16941  0020EC  6E4B               	movwf	___fldiv@a^0,c
 16942  0020EE  0E00               	movlw	0
 16943  0020F0  6E4C               	movwf	(___fldiv@a+1)^0,c
 16944  0020F2  0E00               	movlw	0
 16945  0020F4  6E4D               	movwf	(___fldiv@a+2)^0,c
 16946  0020F6  0E00               	movlw	0
 16947  0020F8  6E4E               	movwf	(___fldiv@a+3)^0,c
 16948  0020FA                     i2l5142:
 16949                           
 16950                           ; BSR set to: 0
 16951  0020FA  504B               	movf	___fldiv@a^0,w,c
 16952  0020FC  104C               	iorwf	(___fldiv@a+1)^0,w,c
 16953  0020FE  104D               	iorwf	(___fldiv@a+2)^0,w,c
 16954  002100  104E               	iorwf	(___fldiv@a+3)^0,w,c
 16955  002102  A4D8               	btfss	status,2,c
 16956  002104  EF86  F010         	goto	i2u540_41
 16957  002108  EF88  F010         	goto	i2u540_40
 16958  00210C                     i2u540_41:
 16959  00210C  EFA0  F010         	goto	i2l5154
 16960  002110                     i2u540_40:
 16961  002110                     
 16962                           ; BSR set to: 0
 16963  002110  0E00               	movlw	0
 16964  002112  6E47               	movwf	___fldiv@b^0,c
 16965  002114  0E00               	movlw	0
 16966  002116  6E48               	movwf	(___fldiv@b+1)^0,c
 16967  002118  0E00               	movlw	0
 16968  00211A  6E49               	movwf	(___fldiv@b+2)^0,c
 16969  00211C  0E00               	movlw	0
 16970  00211E  6E4A               	movwf	(___fldiv@b+3)^0,c
 16971  002120                     
 16972                           ; BSR set to: 0
 16973  002120  0E80               	movlw	128
 16974  002122  1249               	iorwf	(___fldiv@b+2)^0,f,c
 16975  002124  0E7F               	movlw	127
 16976  002126  124A               	iorwf	(___fldiv@b+3)^0,f,c
 16977  002128                     i2l5148:
 16978                           
 16979                           ; BSR set to: 0
 16980  002128  5164               	movf	___fldiv@sign& (0+255),w,b
 16981  00212A  124A               	iorwf	(___fldiv@b+3)^0,f,c
 16982  00212C                     
 16983                           ; BSR set to: 0
 16984  00212C  C047  F047         	movff	___fldiv@b,?___fldiv
 16985  002130  C048  F048         	movff	___fldiv@b+1,?___fldiv+1
 16986  002134  C049  F049         	movff	___fldiv@b+2,?___fldiv+2
 16987  002138  C04A  F04A         	movff	___fldiv@b+3,?___fldiv+3
 16988  00213C  EFE3  F011         	goto	i2l1498
 16989  002140                     i2l5154:
 16990                           
 16991                           ; BSR set to: 0
 16992  002140  516B               	movf	___fldiv@bexp& (0+255),w,b
 16993  002142  A4D8               	btfss	status,2,c
 16994  002144  EFA6  F010         	goto	i2u541_41
 16995  002148  EFA8  F010         	goto	i2u541_40
 16996  00214C                     i2u541_41:
 16997  00214C  EFB2  F010         	goto	i2l5162
 16998  002150                     i2u541_40:
 16999  002150                     
 17000                           ; BSR set to: 0
 17001  002150  0E00               	movlw	0
 17002  002152  6E47               	movwf	?___fldiv^0,c
 17003  002154  0E00               	movlw	0
 17004  002156  6E48               	movwf	(?___fldiv+1)^0,c
 17005  002158  0E00               	movlw	0
 17006  00215A  6E49               	movwf	(?___fldiv+2)^0,c
 17007  00215C  0E00               	movlw	0
 17008  00215E  6E4A               	movwf	(?___fldiv+3)^0,c
 17009  002160  EFE3  F011         	goto	i2l1498
 17010  002164                     i2l5162:
 17011                           
 17012                           ; BSR set to: 0
 17013  002164  516C               	movf	___fldiv@aexp& (0+255),w,b
 17014  002166  C06B  F04F         	movff	___fldiv@bexp,??___fldiv
 17015  00216A  6A50               	clrf	(??___fldiv+1)^0,c
 17016  00216C  5E4F               	subwf	??___fldiv^0,f,c
 17017  00216E  0E00               	movlw	0
 17018  002170  5A50               	subwfb	(??___fldiv+1)^0,f,c
 17019  002172  0E7F               	movlw	127
 17020  002174  244F               	addwf	??___fldiv^0,w,c
 17021  002176  6F65               	movwf	___fldiv@new_exp& (0+255),b
 17022  002178  0E00               	movlw	0
 17023  00217A  2050               	addwfc	(??___fldiv+1)^0,w,c
 17024  00217C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17025  00217E                     
 17026                           ; BSR set to: 0
 17027  00217E  C047  F060         	movff	___fldiv@b,___fldiv@rem
 17028  002182  C048  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 17029  002186  C049  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 17030  00218A  C04A  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 17031  00218E                     
 17032                           ; BSR set to: 0
 17033  00218E  0E00               	movlw	0
 17034  002190  6E47               	movwf	___fldiv@b^0,c
 17035  002192  0E00               	movlw	0
 17036  002194  6E48               	movwf	(___fldiv@b+1)^0,c
 17037  002196  0E00               	movlw	0
 17038  002198  6E49               	movwf	(___fldiv@b+2)^0,c
 17039  00219A  0E00               	movlw	0
 17040  00219C  6E4A               	movwf	(___fldiv@b+3)^0,c
 17041  00219E                     
 17042                           ; BSR set to: 0
 17043  00219E  0E00               	movlw	0
 17044  0021A0  6F67               	movwf	___fldiv@grs& (0+255),b
 17045  0021A2  0E00               	movlw	0
 17046  0021A4  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 17047  0021A6  0E00               	movlw	0
 17048  0021A8  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 17049  0021AA  0E00               	movlw	0
 17050  0021AC  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 17051  0021AE                     
 17052                           ; BSR set to: 0
 17053  0021AE  0E00               	movlw	0
 17054  0021B0  6F6C               	movwf	___fldiv@aexp& (0+255),b
 17055  0021B2  EF13  F011         	goto	i2l1500
 17056  0021B6                     i2l5172:
 17057                           
 17058                           ; BSR set to: 0
 17059  0021B6  516C               	movf	___fldiv@aexp& (0+255),w,b
 17060  0021B8  B4D8               	btfsc	status,2,c
 17061  0021BA  EFE1  F010         	goto	i2u542_41
 17062  0021BE  EFE3  F010         	goto	i2u542_40
 17063  0021C2                     i2u542_41:
 17064  0021C2  EFFA  F010         	goto	i2l5180
 17065  0021C6                     i2u542_40:
 17066  0021C6                     
 17067                           ; BSR set to: 0
 17068  0021C6  90D8               	bcf	status,0,c
 17069  0021C8  3760               	rlcf	___fldiv@rem& (0+255),f,b
 17070  0021CA  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 17071  0021CC  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 17072  0021CE  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 17073  0021D0  90D8               	bcf	status,0,c
 17074  0021D2  3647               	rlcf	___fldiv@b^0,f,c
 17075  0021D4  3648               	rlcf	(___fldiv@b+1)^0,f,c
 17076  0021D6  3649               	rlcf	(___fldiv@b+2)^0,f,c
 17077  0021D8  364A               	rlcf	(___fldiv@b+3)^0,f,c
 17078  0021DA                     
 17079                           ; BSR set to: 0
 17080  0021DA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17081  0021DC  EFF2  F010         	goto	i2u543_41
 17082  0021E0  EFF4  F010         	goto	i2u543_40
 17083  0021E4                     i2u543_41:
 17084  0021E4  EFF5  F010         	goto	i2l1503
 17085  0021E8                     i2u543_40:
 17086  0021E8                     
 17087                           ; BSR set to: 0
 17088  0021E8  8047               	bsf	___fldiv@b^0,0,c
 17089  0021EA                     i2l1503:
 17090                           
 17091                           ; BSR set to: 0
 17092  0021EA  90D8               	bcf	status,0,c
 17093  0021EC  3767               	rlcf	___fldiv@grs& (0+255),f,b
 17094  0021EE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17095  0021F0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17096  0021F2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17097  0021F4                     i2l5180:
 17098                           
 17099                           ; BSR set to: 0
 17100  0021F4  504B               	movf	___fldiv@a^0,w,c
 17101  0021F6  5D60               	subwf	___fldiv@rem& (0+255),w,b
 17102  0021F8  504C               	movf	(___fldiv@a+1)^0,w,c
 17103  0021FA  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 17104  0021FC  504D               	movf	(___fldiv@a+2)^0,w,c
 17105  0021FE  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 17106  002200  504E               	movf	(___fldiv@a+3)^0,w,c
 17107  002202  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 17108  002204  A0D8               	btfss	status,0,c
 17109  002206  EF07  F011         	goto	i2u544_41
 17110  00220A  EF09  F011         	goto	i2u544_40
 17111  00220E                     i2u544_41:
 17112  00220E  EF12  F011         	goto	i2l5186
 17113  002212                     i2u544_40:
 17114  002212                     
 17115                           ; BSR set to: 0
 17116  002212  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 17117  002214                     
 17118                           ; BSR set to: 0
 17119  002214  504B               	movf	___fldiv@a^0,w,c
 17120  002216  5F60               	subwf	___fldiv@rem& (0+255),f,b
 17121  002218  504C               	movf	(___fldiv@a+1)^0,w,c
 17122  00221A  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 17123  00221C  504D               	movf	(___fldiv@a+2)^0,w,c
 17124  00221E  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 17125  002220  504E               	movf	(___fldiv@a+3)^0,w,c
 17126  002222  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 17127  002224                     i2l5186:
 17128                           
 17129                           ; BSR set to: 0
 17130  002224  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 17131  002226                     i2l1500:
 17132                           
 17133                           ; BSR set to: 0
 17134  002226  0E19               	movlw	25
 17135  002228  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 17136  00222A  EF19  F011         	goto	i2u545_41
 17137  00222E  EF1B  F011         	goto	i2u545_40
 17138  002232                     i2u545_41:
 17139  002232  EFDB  F010         	goto	i2l5172
 17140  002236                     i2u545_40:
 17141  002236                     
 17142                           ; BSR set to: 0
 17143  002236  5160               	movf	___fldiv@rem& (0+255),w,b
 17144  002238  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 17145  00223A  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 17146  00223C  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 17147  00223E  B4D8               	btfsc	status,2,c
 17148  002240  EF24  F011         	goto	i2u546_41
 17149  002244  EF26  F011         	goto	i2u546_40
 17150  002248                     i2u546_41:
 17151  002248  EF3E  F011         	goto	i2l5198
 17152  00224C                     i2u546_40:
 17153  00224C                     
 17154                           ; BSR set to: 0
 17155  00224C  8167               	bsf	___fldiv@grs& (0+255),0,b
 17156  00224E  EF3E  F011         	goto	i2l5198
 17157  002252                     i2l5192:
 17158                           
 17159                           ; BSR set to: 0
 17160  002252  90D8               	bcf	status,0,c
 17161  002254  3647               	rlcf	___fldiv@b^0,f,c
 17162  002256  3648               	rlcf	(___fldiv@b+1)^0,f,c
 17163  002258  3649               	rlcf	(___fldiv@b+2)^0,f,c
 17164  00225A  364A               	rlcf	(___fldiv@b+3)^0,f,c
 17165  00225C                     
 17166                           ; BSR set to: 0
 17167  00225C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17168  00225E  EF33  F011         	goto	i2u547_41
 17169  002262  EF35  F011         	goto	i2u547_40
 17170  002266                     i2u547_41:
 17171  002266  EF36  F011         	goto	i2l1509
 17172  00226A                     i2u547_40:
 17173  00226A                     
 17174                           ; BSR set to: 0
 17175  00226A  8047               	bsf	___fldiv@b^0,0,c
 17176  00226C                     i2l1509:
 17177                           
 17178                           ; BSR set to: 0
 17179  00226C  90D8               	bcf	status,0,c
 17180  00226E  3767               	rlcf	___fldiv@grs& (0+255),f,b
 17181  002270  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17182  002272  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17183  002274  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17184  002276  0765               	decf	___fldiv@new_exp& (0+255),f,b
 17185  002278  A0D8               	btfss	status,0,c
 17186  00227A  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17187  00227C                     i2l5198:
 17188                           
 17189                           ; BSR set to: 0
 17190  00227C  AE49               	btfss	(___fldiv@b+2)^0,7,c
 17191  00227E  EF43  F011         	goto	i2u548_41
 17192  002282  EF45  F011         	goto	i2u548_40
 17193  002286                     i2u548_41:
 17194  002286  EF29  F011         	goto	i2l5192
 17195  00228A                     i2u548_40:
 17196  00228A                     
 17197                           ; BSR set to: 0
 17198  00228A  0E00               	movlw	0
 17199  00228C  6F6C               	movwf	___fldiv@aexp& (0+255),b
 17200  00228E                     
 17201                           ; BSR set to: 0
 17202  00228E  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17203  002290  EF4C  F011         	goto	i2u549_41
 17204  002294  EF4E  F011         	goto	i2u549_40
 17205  002298                     i2u549_41:
 17206  002298  EF72  F011         	goto	i2l1511
 17207  00229C                     i2u549_40:
 17208  00229C                     
 17209                           ; BSR set to: 0
 17210  00229C  0EFF               	movlw	255
 17211  00229E  1567               	andwf	___fldiv@grs& (0+255),w,b
 17212  0022A0  6E4F               	movwf	??___fldiv^0,c
 17213  0022A2  0EFF               	movlw	255
 17214  0022A4  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17215  0022A6  6E50               	movwf	(??___fldiv+1)^0,c
 17216  0022A8  0EFF               	movlw	255
 17217  0022AA  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17218  0022AC  6E51               	movwf	(??___fldiv+2)^0,c
 17219  0022AE  0E7F               	movlw	127
 17220  0022B0  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17221  0022B2  6E52               	movwf	(??___fldiv+3)^0,c
 17222  0022B4  504F               	movf	??___fldiv^0,w,c
 17223  0022B6  1050               	iorwf	(??___fldiv+1)^0,w,c
 17224  0022B8  1051               	iorwf	(??___fldiv+2)^0,w,c
 17225  0022BA  1052               	iorwf	(??___fldiv+3)^0,w,c
 17226  0022BC  B4D8               	btfsc	status,2,c
 17227  0022BE  EF63  F011         	goto	i2u550_41
 17228  0022C2  EF65  F011         	goto	i2u550_40
 17229  0022C6                     i2u550_41:
 17230  0022C6  EF69  F011         	goto	i2l1512
 17231  0022CA                     i2u550_40:
 17232  0022CA                     i2l5206:
 17233                           
 17234                           ; BSR set to: 0
 17235  0022CA  0E01               	movlw	1
 17236  0022CC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 17237  0022CE  EF72  F011         	goto	i2l1511
 17238  0022D2                     i2l1512:
 17239                           
 17240                           ; BSR set to: 0
 17241  0022D2  A047               	btfss	___fldiv@b^0,0,c
 17242  0022D4  EF6E  F011         	goto	i2u551_41
 17243  0022D8  EF70  F011         	goto	i2u551_40
 17244  0022DC                     i2u551_41:
 17245  0022DC  EF72  F011         	goto	i2l1511
 17246  0022E0                     i2u551_40:
 17247  0022E0  EF65  F011         	goto	i2l5206
 17248  0022E4                     i2l1511:
 17249                           
 17250                           ; BSR set to: 0
 17251  0022E4  516C               	movf	___fldiv@aexp& (0+255),w,b
 17252  0022E6  B4D8               	btfsc	status,2,c
 17253  0022E8  EF78  F011         	goto	i2u552_41
 17254  0022EC  EF7A  F011         	goto	i2u552_40
 17255  0022F0                     i2u552_41:
 17256  0022F0  EF9E  F011         	goto	i2l5218
 17257  0022F4                     i2u552_40:
 17258  0022F4                     
 17259                           ; BSR set to: 0
 17260  0022F4  0E01               	movlw	1
 17261  0022F6  2647               	addwf	___fldiv@b^0,f,c
 17262  0022F8  0E00               	movlw	0
 17263  0022FA  2248               	addwfc	(___fldiv@b+1)^0,f,c
 17264  0022FC  2249               	addwfc	(___fldiv@b+2)^0,f,c
 17265  0022FE  224A               	addwfc	(___fldiv@b+3)^0,f,c
 17266  002300                     
 17267                           ; BSR set to: 0
 17268  002300  A04A               	btfss	(___fldiv@b+3)^0,0,c
 17269  002302  EF85  F011         	goto	i2u553_41
 17270  002306  EF87  F011         	goto	i2u553_40
 17271  00230A                     i2u553_41:
 17272  00230A  EF9E  F011         	goto	i2l5218
 17273  00230E                     i2u553_40:
 17274  00230E                     
 17275                           ; BSR set to: 0
 17276  00230E  C047  F04F         	movff	___fldiv@b,??___fldiv
 17277  002312  C048  F050         	movff	___fldiv@b+1,??___fldiv+1
 17278  002316  C049  F051         	movff	___fldiv@b+2,??___fldiv+2
 17279  00231A  C04A  F052         	movff	___fldiv@b+3,??___fldiv+3
 17280  00231E  3452               	rlcf	(??___fldiv+3)^0,w,c
 17281  002320  3252               	rrcf	(??___fldiv+3)^0,f,c
 17282  002322  3251               	rrcf	(??___fldiv+2)^0,f,c
 17283  002324  3250               	rrcf	(??___fldiv+1)^0,f,c
 17284  002326  324F               	rrcf	??___fldiv^0,f,c
 17285  002328  C04F  F047         	movff	??___fldiv,___fldiv@b
 17286  00232C  C050  F048         	movff	??___fldiv+1,___fldiv@b+1
 17287  002330  C051  F049         	movff	??___fldiv+2,___fldiv@b+2
 17288  002334  C052  F04A         	movff	??___fldiv+3,___fldiv@b+3
 17289  002338                     
 17290                           ; BSR set to: 0
 17291  002338  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 17292  00233A  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17293  00233C                     i2l5218:
 17294                           
 17295                           ; BSR set to: 0
 17296  00233C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17297  00233E  EFA9  F011         	goto	i2u554_41
 17298  002342  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17299  002344  E108               	bnz	i2u554_40
 17300  002346  2965               	incf	___fldiv@new_exp& (0+255),w,b
 17301  002348  A0D8               	btfss	status,0,c
 17302  00234A  EFA9  F011         	goto	i2u554_41
 17303  00234E  EFAB  F011         	goto	i2u554_40
 17304  002352                     i2u554_41:
 17305  002352  EFB6  F011         	goto	i2l5222
 17306  002356                     i2u554_40:
 17307  002356                     
 17308                           ; BSR set to: 0
 17309  002356  0E00               	movlw	0
 17310  002358  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17311  00235A  6965               	setf	___fldiv@new_exp& (0+255),b
 17312  00235C  0E00               	movlw	0
 17313  00235E  6E47               	movwf	___fldiv@b^0,c
 17314  002360  0E00               	movlw	0
 17315  002362  6E48               	movwf	(___fldiv@b+1)^0,c
 17316  002364  0E00               	movlw	0
 17317  002366  6E49               	movwf	(___fldiv@b+2)^0,c
 17318  002368  0E00               	movlw	0
 17319  00236A  6E4A               	movwf	(___fldiv@b+3)^0,c
 17320  00236C                     i2l5222:
 17321                           
 17322                           ; BSR set to: 0
 17323  00236C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17324  00236E  EFC3  F011         	goto	i2u555_40
 17325  002372  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17326  002374  E106               	bnz	i2u555_41
 17327  002376  0565               	decf	___fldiv@new_exp& (0+255),w,b
 17328  002378  B0D8               	btfsc	status,0,c
 17329  00237A  EFC1  F011         	goto	i2u555_41
 17330  00237E  EFC3  F011         	goto	i2u555_40
 17331  002382                     i2u555_41:
 17332  002382  EFD1  F011         	goto	i2l5226
 17333  002386                     i2u555_40:
 17334  002386                     
 17335                           ; BSR set to: 0
 17336  002386  0E00               	movlw	0
 17337  002388  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17338  00238A  0E00               	movlw	0
 17339  00238C  6F65               	movwf	___fldiv@new_exp& (0+255),b
 17340  00238E  0E00               	movlw	0
 17341  002390  6E47               	movwf	___fldiv@b^0,c
 17342  002392  0E00               	movlw	0
 17343  002394  6E48               	movwf	(___fldiv@b+1)^0,c
 17344  002396  0E00               	movlw	0
 17345  002398  6E49               	movwf	(___fldiv@b+2)^0,c
 17346  00239A  0E00               	movlw	0
 17347  00239C  6E4A               	movwf	(___fldiv@b+3)^0,c
 17348  00239E  0E00               	movlw	0
 17349  0023A0  6F64               	movwf	___fldiv@sign& (0+255),b
 17350  0023A2                     i2l5226:
 17351                           
 17352                           ; BSR set to: 0
 17353  0023A2  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 17354  0023A6                     
 17355                           ; BSR set to: 0
 17356  0023A6  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 17357  0023A8  EFD8  F011         	goto	i2u556_41
 17358  0023AC  EFDA  F011         	goto	i2u556_40
 17359  0023B0                     i2u556_41:
 17360  0023B0  EFDD  F011         	goto	i2l5232
 17361  0023B4                     i2u556_40:
 17362  0023B4                     
 17363                           ; BSR set to: 0
 17364  0023B4  8E49               	bsf	(___fldiv@b+2)^0,7,c
 17365  0023B6  EFDE  F011         	goto	i2l5234
 17366  0023BA                     i2l5232:
 17367                           
 17368                           ; BSR set to: 0
 17369  0023BA  9E49               	bcf	(___fldiv@b+2)^0,7,c
 17370  0023BC                     i2l5234:
 17371                           
 17372                           ; BSR set to: 0
 17373  0023BC  90D8               	bcf	status,0,c
 17374  0023BE  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 17375  0023C0  6E4A               	movwf	(___fldiv@b+3)^0,c
 17376  0023C2  EF94  F010         	goto	i2l5148
 17377  0023C6                     i2l1498:
 17378                           
 17379                           ; BSR set to: 0
 17380  0023C6  0012               	return		;funcret
 17381  0023C8                     __end_of___fldiv:
 17382                           	opt callstack 0
 17383                           
 17384 ;; *************** function _EPWM1_LoadDutyValue *****************
 17385 ;; Defined at:
 17386 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 17387 ;; Parameters:    Size  Location     Type
 17388 ;;  dutyValue       2   10[COMRAM] unsigned short 
 17389 ;; Auto vars:     Size  Location     Type
 17390 ;;		None
 17391 ;; Return value:  Size  Location     Type
 17392 ;;                  1    wreg      void 
 17393 ;; Registers used:
 17394 ;;		wreg, status,2, status,0
 17395 ;; Tracked objects:
 17396 ;;		On entry : 0/0
 17397 ;;		On exit  : 0/0
 17398 ;;		Unchanged: 0/0
 17399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17404 ;;Total ram usage:        4 bytes
 17405 ;; Hardware stack levels used:    1
 17406 ;; This function calls:
 17407 ;;		Nothing
 17408 ;; This function is called by:
 17409 ;;		_PI_Controller
 17410 ;; This function uses a non-reentrant model
 17411 ;;
 17412                           
 17413                           	psect	text78
 17414  00516E                     __ptext78:
 17415                           	opt callstack 0
 17416  00516E                     _EPWM1_LoadDutyValue:
 17417                           	opt callstack 15
 17418  00516E                     
 17419                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 17420  00516E  C00B  F00D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 17421  005172  C00C  F00E         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 17422  005176  90D8               	bcf	status,0,c
 17423  005178  320E               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 17424  00517A  320D               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 17425  00517C  90D8               	bcf	status,0,c
 17426  00517E  320E               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 17427  005180  320D               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 17428  005182  500D               	movf	??_EPWM1_LoadDutyValue^0,w,c
 17429  005184  6EBC               	movwf	188,c	;volatile
 17430                           
 17431                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 17432  005186  C00B  F00D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 17433  00518A  0E03               	movlw	3
 17434  00518C  160D               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 17435  00518E  3A0D               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 17436  005190  0EF0               	movlw	240
 17437  005192  160D               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 17438  005194  50BB               	movf	187,w,c	;volatile
 17439  005196  0BCF               	andlw	207
 17440  005198  100D               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 17441  00519A  6EBB               	movwf	187,c	;volatile
 17442  00519C  0012               	return		;funcret
 17443  00519E                     __end_of_EPWM1_LoadDutyValue:
 17444                           	opt callstack 0
 17445                           
 17446 ;; *************** function _Get_values *****************
 17447 ;; Defined at:
 17448 ;;		line 49 in file "main.c"
 17449 ;; Parameters:    Size  Location     Type
 17450 ;;		None
 17451 ;; Auto vars:     Size  Location     Type
 17452 ;;		None
 17453 ;; Return value:  Size  Location     Type
 17454 ;;                  1    wreg      void 
 17455 ;; Registers used:
 17456 ;;		wreg, status,2, status,0, cstack
 17457 ;; Tracked objects:
 17458 ;;		On entry : 0/0
 17459 ;;		On exit  : 0/0
 17460 ;;		Unchanged: 0/0
 17461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17466 ;;Total ram usage:        0 bytes
 17467 ;; Hardware stack levels used:    1
 17468 ;; Hardware stack levels required when called:    1
 17469 ;; This function calls:
 17470 ;;		_ADC_GetConversion
 17471 ;;		___aldiv
 17472 ;;		___lmul
 17473 ;;		i2___xxtofl
 17474 ;; This function is called by:
 17475 ;;		_TIMER2_CALLBACK
 17476 ;; This function uses a non-reentrant model
 17477 ;;
 17478                           
 17479                           	psect	text79
 17480  004626                     __ptext79:
 17481                           	opt callstack 0
 17482  004626                     _Get_values:
 17483                           	opt callstack 15
 17484  004626                     
 17485                           ;main.c: 50:     setpoint = (long int) (ADC_GetConversion(POT_PIN)) * 100 / 4095;
 17486  004626  0EFF               	movlw	255
 17487  004628  6E16               	movwf	___aldiv@divisor^0,c
 17488  00462A  0E0F               	movlw	15
 17489  00462C  6E17               	movwf	(___aldiv@divisor+1)^0,c
 17490  00462E  0E00               	movlw	0
 17491  004630  6E18               	movwf	(___aldiv@divisor+2)^0,c
 17492  004632  0E00               	movlw	0
 17493  004634  6E19               	movwf	(___aldiv@divisor+3)^0,c
 17494  004636  0E00               	movlw	0
 17495  004638  EC4D  F028         	call	_ADC_GetConversion
 17496  00463C  C001  F006         	movff	?_ADC_GetConversion,___lmul@multiplier
 17497  004640  C002  F007         	movff	?_ADC_GetConversion+1,___lmul@multiplier+1
 17498  004644  6A08               	clrf	(___lmul@multiplier+2)^0,c
 17499  004646  6A09               	clrf	(___lmul@multiplier+3)^0,c
 17500  004648  0E64               	movlw	100
 17501  00464A  6E0A               	movwf	___lmul@multiplicand^0,c
 17502  00464C  0E00               	movlw	0
 17503  00464E  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 17504  004650  0E00               	movlw	0
 17505  004652  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 17506  004654  0E00               	movlw	0
 17507  004656  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 17508  004658  EC8D  F025         	call	___lmul	;wreg free
 17509  00465C  C006  F012         	movff	?___lmul,___aldiv@dividend
 17510  004660  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 17511  004664  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 17512  004668  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 17513  00466C  EC99  F020         	call	___aldiv	;wreg free
 17514  004670  C012  F020         	movff	?___aldiv,i2___xxtofl@val
 17515  004674  C013  F021         	movff	?___aldiv+1,i2___xxtofl@val+1
 17516  004678  C014  F022         	movff	?___aldiv+2,i2___xxtofl@val+2
 17517  00467C  C015  F023         	movff	?___aldiv+3,i2___xxtofl@val+3
 17518  004680  0E01               	movlw	1
 17519  004682  ECEC  F01A         	call	i2___xxtofl
 17520  004686  C020  F100         	movff	?i2___xxtofl,_setpoint
 17521  00468A  C021  F101         	movff	?i2___xxtofl+1,_setpoint+1
 17522  00468E  C022  F102         	movff	?i2___xxtofl+2,_setpoint+2
 17523  004692  C023  F103         	movff	?i2___xxtofl+3,_setpoint+3
 17524                           
 17525                           ;main.c: 51:     sensor = (long int) (ADC_GetConversion(SENSOR)) * 100 / 4095;
 17526  004696  0EFF               	movlw	255
 17527  004698  6E16               	movwf	___aldiv@divisor^0,c
 17528  00469A  0E0F               	movlw	15
 17529  00469C  6E17               	movwf	(___aldiv@divisor+1)^0,c
 17530  00469E  0E00               	movlw	0
 17531  0046A0  6E18               	movwf	(___aldiv@divisor+2)^0,c
 17532  0046A2  0E00               	movlw	0
 17533  0046A4  6E19               	movwf	(___aldiv@divisor+3)^0,c
 17534  0046A6  0E01               	movlw	1
 17535  0046A8  EC4D  F028         	call	_ADC_GetConversion
 17536  0046AC  C001  F006         	movff	?_ADC_GetConversion,___lmul@multiplier
 17537  0046B0  C002  F007         	movff	?_ADC_GetConversion+1,___lmul@multiplier+1
 17538  0046B4  6A08               	clrf	(___lmul@multiplier+2)^0,c
 17539  0046B6  6A09               	clrf	(___lmul@multiplier+3)^0,c
 17540  0046B8  0E64               	movlw	100
 17541  0046BA  6E0A               	movwf	___lmul@multiplicand^0,c
 17542  0046BC  0E00               	movlw	0
 17543  0046BE  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 17544  0046C0  0E00               	movlw	0
 17545  0046C2  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 17546  0046C4  0E00               	movlw	0
 17547  0046C6  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 17548  0046C8  EC8D  F025         	call	___lmul	;wreg free
 17549  0046CC  C006  F012         	movff	?___lmul,___aldiv@dividend
 17550  0046D0  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 17551  0046D4  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 17552  0046D8  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 17553  0046DC  EC99  F020         	call	___aldiv	;wreg free
 17554  0046E0  C012  F020         	movff	?___aldiv,i2___xxtofl@val
 17555  0046E4  C013  F021         	movff	?___aldiv+1,i2___xxtofl@val+1
 17556  0046E8  C014  F022         	movff	?___aldiv+2,i2___xxtofl@val+2
 17557  0046EC  C015  F023         	movff	?___aldiv+3,i2___xxtofl@val+3
 17558  0046F0  0E01               	movlw	1
 17559  0046F2  ECEC  F01A         	call	i2___xxtofl
 17560  0046F6  C020  F104         	movff	?i2___xxtofl,_sensor
 17561  0046FA  C021  F105         	movff	?i2___xxtofl+1,_sensor+1
 17562  0046FE  C022  F106         	movff	?i2___xxtofl+2,_sensor+2
 17563  004702  C023  F107         	movff	?i2___xxtofl+3,_sensor+3
 17564  004706  0012               	return		;funcret
 17565  004708                     __end_of_Get_values:
 17566                           	opt callstack 0
 17567                           
 17568 ;; *************** function i2___xxtofl *****************
 17569 ;; Defined at:
 17570 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17571 ;; Parameters:    Size  Location     Type
 17572 ;;  sign            1    wreg     unsigned char 
 17573 ;;  val             4   31[COMRAM] long 
 17574 ;; Auto vars:     Size  Location     Type
 17575 ;;  sign            1   39[COMRAM] unsigned char 
 17576 ;;  __xxtofl        4   41[COMRAM] unsigned long 
 17577 ;;  __xxtofl        1   40[COMRAM] unsigned char 
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  4   31[COMRAM] unsigned char 
 17580 ;; Registers used:
 17581 ;;		wreg, status,2, status,0
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17588 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17590 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17591 ;;Total ram usage:       14 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; This function calls:
 17594 ;;		Nothing
 17595 ;; This function is called by:
 17596 ;;		_Get_values
 17597 ;;		_PI_Controller
 17598 ;; This function uses a non-reentrant model
 17599 ;;
 17600                           
 17601                           	psect	text80
 17602  0035D8                     __ptext80:
 17603                           	opt callstack 0
 17604  0035D8                     i2___xxtofl:
 17605                           	opt callstack 15
 17606                           
 17607                           ;incstack = 0
 17608                           ;i2___xxtofl@sign stored from wreg
 17609  0035D8  6E28               	movwf	i2___xxtofl@sign^0,c
 17610  0035DA  5028               	movf	i2___xxtofl@sign^0,w,c
 17611  0035DC  B4D8               	btfsc	status,2,c
 17612  0035DE  EFF3  F01A         	goto	i2u588_41
 17613  0035E2  EFF5  F01A         	goto	i2u588_40
 17614  0035E6                     i2u588_41:
 17615  0035E6  EF17  F01B         	goto	i2l1571
 17616  0035EA                     i2u588_40:
 17617  0035EA  BE23               	btfsc	(i2___xxtofl@val+3)^0,7,c
 17618  0035EC  EFFC  F01A         	goto	i2u589_40
 17619  0035F0  EFFA  F01A         	goto	i2u589_41
 17620  0035F4                     i2u589_41:
 17621  0035F4  EF17  F01B         	goto	i2l1571
 17622  0035F8                     i2u589_40:
 17623  0035F8  C020  F024         	movff	i2___xxtofl@val,??i2___xxtofl
 17624  0035FC  C021  F025         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 17625  003600  C022  F026         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 17626  003604  C023  F027         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 17627  003608  1E24               	comf	??i2___xxtofl^0,f,c
 17628  00360A  1E25               	comf	(??i2___xxtofl+1)^0,f,c
 17629  00360C  1E26               	comf	(??i2___xxtofl+2)^0,f,c
 17630  00360E  1E27               	comf	(??i2___xxtofl+3)^0,f,c
 17631  003610  2A24               	incf	??i2___xxtofl^0,f,c
 17632  003612  0E00               	movlw	0
 17633  003614  2225               	addwfc	(??i2___xxtofl+1)^0,f,c
 17634  003616  2226               	addwfc	(??i2___xxtofl+2)^0,f,c
 17635  003618  2227               	addwfc	(??i2___xxtofl+3)^0,f,c
 17636  00361A  C024  F02A         	movff	??i2___xxtofl,i2___xxtofl@arg
 17637  00361E  C025  F02B         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 17638  003622  C026  F02C         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 17639  003626  C027  F02D         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 17640  00362A  EF1F  F01B         	goto	i2l5450
 17641  00362E                     i2l1571:
 17642  00362E  C020  F02A         	movff	i2___xxtofl@val,i2___xxtofl@arg
 17643  003632  C021  F02B         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 17644  003636  C022  F02C         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 17645  00363A  C023  F02D         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 17646  00363E                     i2l5450:
 17647  00363E  5020               	movf	i2___xxtofl@val^0,w,c
 17648  003640  1021               	iorwf	(i2___xxtofl@val+1)^0,w,c
 17649  003642  1022               	iorwf	(i2___xxtofl@val+2)^0,w,c
 17650  003644  1023               	iorwf	(i2___xxtofl@val+3)^0,w,c
 17651  003646  A4D8               	btfss	status,2,c
 17652  003648  EF28  F01B         	goto	i2u590_41
 17653  00364C  EF2A  F01B         	goto	i2u590_40
 17654  003650                     i2u590_41:
 17655  003650  EF34  F01B         	goto	i2l5456
 17656  003654                     i2u590_40:
 17657  003654  0E00               	movlw	0
 17658  003656  6E20               	movwf	?i2___xxtofl^0,c
 17659  003658  0E00               	movlw	0
 17660  00365A  6E21               	movwf	(?i2___xxtofl+1)^0,c
 17661  00365C  0E00               	movlw	0
 17662  00365E  6E22               	movwf	(?i2___xxtofl+2)^0,c
 17663  003660  0E00               	movlw	0
 17664  003662  6E23               	movwf	(?i2___xxtofl+3)^0,c
 17665  003664  EFC5  F01B         	goto	i2l1574
 17666  003668                     i2l5456:
 17667  003668  0E96               	movlw	150
 17668  00366A  6E29               	movwf	i2___xxtofl@exp^0,c
 17669  00366C  EF3E  F01B         	goto	i2l5460
 17670  003670                     i2l5458:
 17671  003670  2A29               	incf	i2___xxtofl@exp^0,f,c
 17672  003672  90D8               	bcf	status,0,c
 17673  003674  322D               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 17674  003676  322C               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 17675  003678  322B               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 17676  00367A  322A               	rrcf	i2___xxtofl@arg^0,f,c
 17677  00367C                     i2l5460:
 17678  00367C  0E00               	movlw	0
 17679  00367E  142A               	andwf	i2___xxtofl@arg^0,w,c
 17680  003680  6E24               	movwf	??i2___xxtofl^0,c
 17681  003682  0E00               	movlw	0
 17682  003684  142B               	andwf	(i2___xxtofl@arg+1)^0,w,c
 17683  003686  6E25               	movwf	(??i2___xxtofl+1)^0,c
 17684  003688  0E00               	movlw	0
 17685  00368A  142C               	andwf	(i2___xxtofl@arg+2)^0,w,c
 17686  00368C  6E26               	movwf	(??i2___xxtofl+2)^0,c
 17687  00368E  0EFE               	movlw	254
 17688  003690  142D               	andwf	(i2___xxtofl@arg+3)^0,w,c
 17689  003692  6E27               	movwf	(??i2___xxtofl+3)^0,c
 17690  003694  5024               	movf	??i2___xxtofl^0,w,c
 17691  003696  1025               	iorwf	(??i2___xxtofl+1)^0,w,c
 17692  003698  1026               	iorwf	(??i2___xxtofl+2)^0,w,c
 17693  00369A  1027               	iorwf	(??i2___xxtofl+3)^0,w,c
 17694  00369C  A4D8               	btfss	status,2,c
 17695  00369E  EF53  F01B         	goto	i2u591_41
 17696  0036A2  EF55  F01B         	goto	i2u591_40
 17697  0036A6                     i2u591_41:
 17698  0036A6  EF38  F01B         	goto	i2l5458
 17699  0036AA                     i2u591_40:
 17700  0036AA  EF63  F01B         	goto	i2l1578
 17701  0036AE                     i2l5462:
 17702  0036AE  2A29               	incf	i2___xxtofl@exp^0,f,c
 17703  0036B0  0E01               	movlw	1
 17704  0036B2  262A               	addwf	i2___xxtofl@arg^0,f,c
 17705  0036B4  0E00               	movlw	0
 17706  0036B6  222B               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 17707  0036B8  222C               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 17708  0036BA  222D               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 17709  0036BC  90D8               	bcf	status,0,c
 17710  0036BE  322D               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 17711  0036C0  322C               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 17712  0036C2  322B               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 17713  0036C4  322A               	rrcf	i2___xxtofl@arg^0,f,c
 17714  0036C6                     i2l1578:
 17715  0036C6  0E00               	movlw	0
 17716  0036C8  142A               	andwf	i2___xxtofl@arg^0,w,c
 17717  0036CA  6E24               	movwf	??i2___xxtofl^0,c
 17718  0036CC  0E00               	movlw	0
 17719  0036CE  142B               	andwf	(i2___xxtofl@arg+1)^0,w,c
 17720  0036D0  6E25               	movwf	(??i2___xxtofl+1)^0,c
 17721  0036D2  0E00               	movlw	0
 17722  0036D4  142C               	andwf	(i2___xxtofl@arg+2)^0,w,c
 17723  0036D6  6E26               	movwf	(??i2___xxtofl+2)^0,c
 17724  0036D8  0EFF               	movlw	255
 17725  0036DA  142D               	andwf	(i2___xxtofl@arg+3)^0,w,c
 17726  0036DC  6E27               	movwf	(??i2___xxtofl+3)^0,c
 17727  0036DE  5024               	movf	??i2___xxtofl^0,w,c
 17728  0036E0  1025               	iorwf	(??i2___xxtofl+1)^0,w,c
 17729  0036E2  1026               	iorwf	(??i2___xxtofl+2)^0,w,c
 17730  0036E4  1027               	iorwf	(??i2___xxtofl+3)^0,w,c
 17731  0036E6  A4D8               	btfss	status,2,c
 17732  0036E8  EF78  F01B         	goto	i2u592_41
 17733  0036EC  EF7A  F01B         	goto	i2u592_40
 17734  0036F0                     i2u592_41:
 17735  0036F0  EF57  F01B         	goto	i2l5462
 17736  0036F4                     i2u592_40:
 17737  0036F4  EF82  F01B         	goto	i2l5470
 17738  0036F8                     i2l5468:
 17739  0036F8  0629               	decf	i2___xxtofl@exp^0,f,c
 17740  0036FA  90D8               	bcf	status,0,c
 17741  0036FC  362A               	rlcf	i2___xxtofl@arg^0,f,c
 17742  0036FE  362B               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 17743  003700  362C               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 17744  003702  362D               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 17745  003704                     i2l5470:
 17746  003704  BE2C               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 17747  003706  EF87  F01B         	goto	i2u593_41
 17748  00370A  EF89  F01B         	goto	i2u593_40
 17749  00370E                     i2u593_41:
 17750  00370E  EF91  F01B         	goto	i2l1585
 17751  003712                     i2u593_40:
 17752  003712  0E02               	movlw	2
 17753  003714  6029               	cpfslt	i2___xxtofl@exp^0,c
 17754  003716  EF8F  F01B         	goto	i2u594_41
 17755  00371A  EF91  F01B         	goto	i2u594_40
 17756  00371E                     i2u594_41:
 17757  00371E  EF7C  F01B         	goto	i2l5468
 17758  003722                     i2u594_40:
 17759  003722                     i2l1585:
 17760  003722  B029               	btfsc	i2___xxtofl@exp^0,0,c
 17761  003724  EF96  F01B         	goto	i2u595_41
 17762  003728  EF98  F01B         	goto	i2u595_40
 17763  00372C                     i2u595_41:
 17764  00372C  EF99  F01B         	goto	i2l5476
 17765  003730                     i2u595_40:
 17766  003730  9E2C               	bcf	(i2___xxtofl@arg+2)^0,7,c
 17767  003732                     i2l5476:
 17768  003732  90D8               	bcf	status,0,c
 17769  003734  3229               	rrcf	i2___xxtofl@exp^0,f,c
 17770  003736  C029  F024         	movff	i2___xxtofl@exp,??i2___xxtofl
 17771  00373A  6A25               	clrf	(??i2___xxtofl+1)^0,c
 17772  00373C  6A26               	clrf	(??i2___xxtofl+2)^0,c
 17773  00373E  6A27               	clrf	(??i2___xxtofl+3)^0,c
 17774  003740  C024  F027         	movff	??i2___xxtofl,??i2___xxtofl+3
 17775  003744  6A26               	clrf	(??i2___xxtofl+2)^0,c
 17776  003746  6A25               	clrf	(??i2___xxtofl+1)^0,c
 17777  003748  6A24               	clrf	??i2___xxtofl^0,c
 17778  00374A  5024               	movf	??i2___xxtofl^0,w,c
 17779  00374C  122A               	iorwf	i2___xxtofl@arg^0,f,c
 17780  00374E  5025               	movf	(??i2___xxtofl+1)^0,w,c
 17781  003750  122B               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 17782  003752  5026               	movf	(??i2___xxtofl+2)^0,w,c
 17783  003754  122C               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 17784  003756  5027               	movf	(??i2___xxtofl+3)^0,w,c
 17785  003758  122D               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 17786  00375A  5028               	movf	i2___xxtofl@sign^0,w,c
 17787  00375C  B4D8               	btfsc	status,2,c
 17788  00375E  EFB3  F01B         	goto	i2u596_41
 17789  003762  EFB5  F01B         	goto	i2u596_40
 17790  003766                     i2u596_41:
 17791  003766  EFBD  F01B         	goto	i2l5486
 17792  00376A                     i2u596_40:
 17793  00376A  BE23               	btfsc	(i2___xxtofl@val+3)^0,7,c
 17794  00376C  EFBC  F01B         	goto	i2u597_40
 17795  003770  EFBA  F01B         	goto	i2u597_41
 17796  003774                     i2u597_41:
 17797  003774  EFBD  F01B         	goto	i2l5486
 17798  003778                     i2u597_40:
 17799  003778  8E2D               	bsf	(i2___xxtofl@arg+3)^0,7,c
 17800  00377A                     i2l5486:
 17801  00377A  C02A  F020         	movff	i2___xxtofl@arg,?i2___xxtofl
 17802  00377E  C02B  F021         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 17803  003782  C02C  F022         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 17804  003786  C02D  F023         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 17805  00378A                     i2l1574:
 17806  00378A  0012               	return		;funcret
 17807  00378C                     __end_ofi2___xxtofl:
 17808                           	opt callstack 0
 17809                           
 17810 ;; *************** function ___lmul *****************
 17811 ;; Defined at:
 17812 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 17813 ;; Parameters:    Size  Location     Type
 17814 ;;  multiplier      4    5[COMRAM] unsigned long 
 17815 ;;  multiplicand    4    9[COMRAM] unsigned long 
 17816 ;; Auto vars:     Size  Location     Type
 17817 ;;  product         4   13[COMRAM] unsigned long 
 17818 ;; Return value:  Size  Location     Type
 17819 ;;                  4    5[COMRAM] unsigned long 
 17820 ;; Registers used:
 17821 ;;		wreg, status,2, status,0
 17822 ;; Tracked objects:
 17823 ;;		On entry : 0/0
 17824 ;;		On exit  : 0/0
 17825 ;;		Unchanged: 0/0
 17826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17827 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17828 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17830 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17831 ;;Total ram usage:       12 bytes
 17832 ;; Hardware stack levels used:    1
 17833 ;; This function calls:
 17834 ;;		Nothing
 17835 ;; This function is called by:
 17836 ;;		_Get_values
 17837 ;; This function uses a non-reentrant model
 17838 ;;
 17839                           
 17840                           	psect	text81
 17841  004B1A                     __ptext81:
 17842                           	opt callstack 0
 17843  004B1A                     ___lmul:
 17844                           	opt callstack 15
 17845  004B1A  0E00               	movlw	0
 17846  004B1C  6E0E               	movwf	___lmul@product^0,c
 17847  004B1E  0E00               	movlw	0
 17848  004B20  6E0F               	movwf	(___lmul@product+1)^0,c
 17849  004B22  0E00               	movlw	0
 17850  004B24  6E10               	movwf	(___lmul@product+2)^0,c
 17851  004B26  0E00               	movlw	0
 17852  004B28  6E11               	movwf	(___lmul@product+3)^0,c
 17853  004B2A                     i2l5052:
 17854  004B2A  A006               	btfss	___lmul@multiplier^0,0,c
 17855  004B2C  EF9A  F025         	goto	i2u526_41
 17856  004B30  EF9C  F025         	goto	i2u526_40
 17857  004B34                     i2u526_41:
 17858  004B34  EFA4  F025         	goto	i2l5056
 17859  004B38                     i2u526_40:
 17860  004B38  500A               	movf	___lmul@multiplicand^0,w,c
 17861  004B3A  260E               	addwf	___lmul@product^0,f,c
 17862  004B3C  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 17863  004B3E  220F               	addwfc	(___lmul@product+1)^0,f,c
 17864  004B40  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 17865  004B42  2210               	addwfc	(___lmul@product+2)^0,f,c
 17866  004B44  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 17867  004B46  2211               	addwfc	(___lmul@product+3)^0,f,c
 17868  004B48                     i2l5056:
 17869  004B48  90D8               	bcf	status,0,c
 17870  004B4A  360A               	rlcf	___lmul@multiplicand^0,f,c
 17871  004B4C  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 17872  004B4E  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 17873  004B50  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 17874  004B52  90D8               	bcf	status,0,c
 17875  004B54  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 17876  004B56  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 17877  004B58  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 17878  004B5A  3206               	rrcf	___lmul@multiplier^0,f,c
 17879  004B5C  5006               	movf	___lmul@multiplier^0,w,c
 17880  004B5E  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 17881  004B60  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 17882  004B62  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 17883  004B64  A4D8               	btfss	status,2,c
 17884  004B66  EFB7  F025         	goto	i2u527_41
 17885  004B6A  EFB9  F025         	goto	i2u527_40
 17886  004B6E                     i2u527_41:
 17887  004B6E  EF95  F025         	goto	i2l5052
 17888  004B72                     i2u527_40:
 17889  004B72  C00E  F006         	movff	___lmul@product,?___lmul
 17890  004B76  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 17891  004B7A  C010  F008         	movff	___lmul@product+2,?___lmul+2
 17892  004B7E  C011  F009         	movff	___lmul@product+3,?___lmul+3
 17893  004B82  0012               	return		;funcret
 17894  004B84                     __end_of___lmul:
 17895                           	opt callstack 0
 17896                           
 17897 ;; *************** function ___aldiv *****************
 17898 ;; Defined at:
 17899 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 17900 ;; Parameters:    Size  Location     Type
 17901 ;;  dividend        4   17[COMRAM] long 
 17902 ;;  divisor         4   21[COMRAM] long 
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;  quotient        4   27[COMRAM] long 
 17905 ;;  sign            1   26[COMRAM] unsigned char 
 17906 ;;  counter         1   25[COMRAM] unsigned char 
 17907 ;; Return value:  Size  Location     Type
 17908 ;;                  4   17[COMRAM] long 
 17909 ;; Registers used:
 17910 ;;		wreg, status,2, status,0
 17911 ;; Tracked objects:
 17912 ;;		On entry : 0/0
 17913 ;;		On exit  : 0/0
 17914 ;;		Unchanged: 0/0
 17915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17916 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17917 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17919 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17920 ;;Total ram usage:       14 bytes
 17921 ;; Hardware stack levels used:    1
 17922 ;; This function calls:
 17923 ;;		Nothing
 17924 ;; This function is called by:
 17925 ;;		_Get_values
 17926 ;; This function uses a non-reentrant model
 17927 ;;
 17928                           
 17929                           	psect	text82
 17930  004132                     __ptext82:
 17931                           	opt callstack 0
 17932  004132                     ___aldiv:
 17933                           	opt callstack 15
 17934  004132  0E00               	movlw	0
 17935  004134  6E1B               	movwf	___aldiv@sign^0,c
 17936  004136  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 17937  004138  EFA2  F020         	goto	i2u528_40
 17938  00413C  EFA0  F020         	goto	i2u528_41
 17939  004140                     i2u528_41:
 17940  004140  EFAC  F020         	goto	i2l5068
 17941  004144                     i2u528_40:
 17942  004144  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 17943  004146  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 17944  004148  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 17945  00414A  6C16               	negf	___aldiv@divisor^0,c
 17946  00414C  0E00               	movlw	0
 17947  00414E  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 17948  004150  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 17949  004152  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 17950  004154  0E01               	movlw	1
 17951  004156  6E1B               	movwf	___aldiv@sign^0,c
 17952  004158                     i2l5068:
 17953  004158  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 17954  00415A  EFB3  F020         	goto	i2u529_40
 17955  00415E  EFB1  F020         	goto	i2u529_41
 17956  004162                     i2u529_41:
 17957  004162  EFBD  F020         	goto	i2l5074
 17958  004166                     i2u529_40:
 17959  004166  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 17960  004168  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 17961  00416A  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 17962  00416C  6C12               	negf	___aldiv@dividend^0,c
 17963  00416E  0E00               	movlw	0
 17964  004170  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 17965  004172  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 17966  004174  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 17967  004176  0E01               	movlw	1
 17968  004178  1A1B               	xorwf	___aldiv@sign^0,f,c
 17969  00417A                     i2l5074:
 17970  00417A  0E00               	movlw	0
 17971  00417C  6E1C               	movwf	___aldiv@quotient^0,c
 17972  00417E  0E00               	movlw	0
 17973  004180  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 17974  004182  0E00               	movlw	0
 17975  004184  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 17976  004186  0E00               	movlw	0
 17977  004188  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 17978  00418A  5016               	movf	___aldiv@divisor^0,w,c
 17979  00418C  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 17980  00418E  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 17981  004190  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 17982  004192  B4D8               	btfsc	status,2,c
 17983  004194  EFCE  F020         	goto	i2u530_41
 17984  004198  EFD0  F020         	goto	i2u530_40
 17985  00419C                     i2u530_41:
 17986  00419C  EF06  F021         	goto	i2l5096
 17987  0041A0                     i2u530_40:
 17988  0041A0  0E01               	movlw	1
 17989  0041A2  6E1A               	movwf	___aldiv@counter^0,c
 17990  0041A4  EFDA  F020         	goto	i2l5082
 17991  0041A8                     i2l5080:
 17992  0041A8  90D8               	bcf	status,0,c
 17993  0041AA  3616               	rlcf	___aldiv@divisor^0,f,c
 17994  0041AC  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 17995  0041AE  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 17996  0041B0  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 17997  0041B2  2A1A               	incf	___aldiv@counter^0,f,c
 17998  0041B4                     i2l5082:
 17999  0041B4  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 18000  0041B6  EFDF  F020         	goto	i2u531_41
 18001  0041BA  EFE1  F020         	goto	i2u531_40
 18002  0041BE                     i2u531_41:
 18003  0041BE  EFD4  F020         	goto	i2l5080
 18004  0041C2                     i2u531_40:
 18005  0041C2                     i2l5084:
 18006  0041C2  90D8               	bcf	status,0,c
 18007  0041C4  361C               	rlcf	___aldiv@quotient^0,f,c
 18008  0041C6  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 18009  0041C8  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 18010  0041CA  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 18011  0041CC  5016               	movf	___aldiv@divisor^0,w,c
 18012  0041CE  5C12               	subwf	___aldiv@dividend^0,w,c
 18013  0041D0  5017               	movf	(___aldiv@divisor+1)^0,w,c
 18014  0041D2  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 18015  0041D4  5018               	movf	(___aldiv@divisor+2)^0,w,c
 18016  0041D6  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 18017  0041D8  5019               	movf	(___aldiv@divisor+3)^0,w,c
 18018  0041DA  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 18019  0041DC  A0D8               	btfss	status,0,c
 18020  0041DE  EFF3  F020         	goto	i2u532_41
 18021  0041E2  EFF5  F020         	goto	i2u532_40
 18022  0041E6                     i2u532_41:
 18023  0041E6  EFFE  F020         	goto	i2l5092
 18024  0041EA                     i2u532_40:
 18025  0041EA  5016               	movf	___aldiv@divisor^0,w,c
 18026  0041EC  5E12               	subwf	___aldiv@dividend^0,f,c
 18027  0041EE  5017               	movf	(___aldiv@divisor+1)^0,w,c
 18028  0041F0  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 18029  0041F2  5018               	movf	(___aldiv@divisor+2)^0,w,c
 18030  0041F4  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 18031  0041F6  5019               	movf	(___aldiv@divisor+3)^0,w,c
 18032  0041F8  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 18033  0041FA  801C               	bsf	___aldiv@quotient^0,0,c
 18034  0041FC                     i2l5092:
 18035  0041FC  90D8               	bcf	status,0,c
 18036  0041FE  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 18037  004200  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 18038  004202  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 18039  004204  3216               	rrcf	___aldiv@divisor^0,f,c
 18040  004206  2E1A               	decfsz	___aldiv@counter^0,f,c
 18041  004208  EFE1  F020         	goto	i2l5084
 18042  00420C                     i2l5096:
 18043  00420C  501B               	movf	___aldiv@sign^0,w,c
 18044  00420E  B4D8               	btfsc	status,2,c
 18045  004210  EF0C  F021         	goto	i2u533_41
 18046  004214  EF0E  F021         	goto	i2u533_40
 18047  004218                     i2u533_41:
 18048  004218  EF16  F021         	goto	i2l5100
 18049  00421C                     i2u533_40:
 18050  00421C  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 18051  00421E  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 18052  004220  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 18053  004222  6C1C               	negf	___aldiv@quotient^0,c
 18054  004224  0E00               	movlw	0
 18055  004226  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 18056  004228  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 18057  00422A  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 18058  00422C                     i2l5100:
 18059  00422C  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 18060  004230  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 18061  004234  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 18062  004238  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 18063  00423C  0012               	return		;funcret
 18064  00423E                     __end_of___aldiv:
 18065                           	opt callstack 0
 18066                           
 18067 ;; *************** function _ADC_GetConversion *****************
 18068 ;; Defined at:
 18069 ;;		line 108 in file "mcc_generated_files/adc.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;  channel         1    wreg     enum E12385
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;  channel         1    4[COMRAM] enum E12385
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  2    0[COMRAM] unsigned short 
 18076 ;; Registers used:
 18077 ;;		wreg, status,2, status,0
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18086 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18087 ;;Total ram usage:        5 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; This function calls:
 18090 ;;		Nothing
 18091 ;; This function is called by:
 18092 ;;		_Get_values
 18093 ;; This function uses a non-reentrant model
 18094 ;;
 18095                           
 18096                           	psect	text83
 18097  00509A                     __ptext83:
 18098                           	opt callstack 0
 18099  00509A                     _ADC_GetConversion:
 18100                           	opt callstack 15
 18101                           
 18102                           ;incstack = 0
 18103                           ;ADC_GetConversion@channel stored from wreg
 18104  00509A  6E05               	movwf	ADC_GetConversion@channel^0,c
 18105  00509C                     
 18106                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 18107  00509C  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 18108  0050A0  4603               	rlncf	??_ADC_GetConversion^0,f,c
 18109  0050A2  4603               	rlncf	??_ADC_GetConversion^0,f,c
 18110  0050A4  50C2               	movf	194,w,c	;volatile
 18111  0050A6  1803               	xorwf	??_ADC_GetConversion^0,w,c
 18112  0050A8  0B83               	andlw	-125
 18113  0050AA  1803               	xorwf	??_ADC_GetConversion^0,w,c
 18114  0050AC  6EC2               	movwf	194,c	;volatile
 18115  0050AE                     
 18116                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 18117  0050AE  80C2               	bsf	194,0,c	;volatile
 18118  0050B0                     
 18119                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 18120  0050B0  82C2               	bsf	194,1,c	;volatile
 18121  0050B2                     i2l181:
 18122                           
 18123                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 18124  0050B2  B2C2               	btfsc	194,1,c	;volatile
 18125  0050B4  EF5E  F028         	goto	i2u448_41
 18126  0050B8  EF60  F028         	goto	i2u448_40
 18127  0050BC                     i2u448_41:
 18128  0050BC  EF59  F028         	goto	i2l181
 18129  0050C0                     i2u448_40:
 18130  0050C0                     
 18131                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18132  0050C0  50C4               	movf	196,w,c	;volatile
 18133  0050C2  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
 18134  0050C4  6A03               	clrf	??_ADC_GetConversion^0,c
 18135  0050C6  50C3               	movf	195,w,c	;volatile
 18136  0050C8  2403               	addwf	??_ADC_GetConversion^0,w,c
 18137  0050CA  6E01               	movwf	?_ADC_GetConversion^0,c
 18138  0050CC  0E00               	movlw	0
 18139  0050CE  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 18140  0050D0  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
 18141  0050D2  0012               	return		;funcret
 18142  0050D4                     __end_of_ADC_GetConversion:
 18143                           	opt callstack 0
 18144                           
 18145 ;; *************** function _PIN_MANAGER_IOC *****************
 18146 ;; Defined at:
 18147 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18148 ;; Parameters:    Size  Location     Type
 18149 ;;		None
 18150 ;; Auto vars:     Size  Location     Type
 18151 ;;		None
 18152 ;; Return value:  Size  Location     Type
 18153 ;;                  1    wreg      void 
 18154 ;; Registers used:
 18155 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18156 ;; Tracked objects:
 18157 ;;		On entry : 0/0
 18158 ;;		On exit  : 0/0
 18159 ;;		Unchanged: 0/0
 18160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18165 ;;Total ram usage:        0 bytes
 18166 ;; Hardware stack levels used:    1
 18167 ;; Hardware stack levels required when called:    2
 18168 ;; This function calls:
 18169 ;;		_IOCB4_ISR
 18170 ;; This function is called by:
 18171 ;;		_INTERRUPT_InterruptManager
 18172 ;; This function uses a non-reentrant model
 18173 ;;
 18174                           
 18175                           	psect	text84
 18176  005366                     __ptext84:
 18177                           	opt callstack 0
 18178  005366                     _PIN_MANAGER_IOC:
 18179                           	opt callstack 17
 18180  005366                     
 18181                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18182  005366  010F               	movlb	15	; () banked
 18183  005368  A95A               	btfss	90,4,b	;volatile
 18184  00536A  EFB9  F029         	goto	i2u686_41
 18185  00536E  EFBB  F029         	goto	i2u686_40
 18186  005372                     i2u686_41:
 18187  005372  EFBD  F029         	goto	i2l6176
 18188  005376                     i2u686_40:
 18189  005376                     
 18190                           ; BSR set to: 15
 18191                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18192  005376  ECE6  F028         	call	_IOCB4_ISR	;wreg free
 18193  00537A                     i2l6176:
 18194                           
 18195                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18196  00537A  90F2               	bcf	242,0,c	;volatile
 18197  00537C  0012               	return		;funcret
 18198  00537E                     __end_of_PIN_MANAGER_IOC:
 18199                           	opt callstack 0
 18200                           
 18201 ;; *************** function _IOCB4_ISR *****************
 18202 ;; Defined at:
 18203 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;		None
 18206 ;; Auto vars:     Size  Location     Type
 18207 ;;		None
 18208 ;; Return value:  Size  Location     Type
 18209 ;;                  1    wreg      void 
 18210 ;; Registers used:
 18211 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18212 ;; Tracked objects:
 18213 ;;		On entry : 0/0
 18214 ;;		On exit  : 0/0
 18215 ;;		Unchanged: 0/0
 18216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18221 ;;Total ram usage:        0 bytes
 18222 ;; Hardware stack levels used:    1
 18223 ;; Hardware stack levels required when called:    1
 18224 ;; This function calls:
 18225 ;;		Absolute function
 18226 ;;		_INTERRUPT_S1_CALLBACK
 18227 ;;		_IOCB4_DefaultInterruptHandler
 18228 ;; This function is called by:
 18229 ;;		_PIN_MANAGER_IOC
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text85
 18234  0051CC                     __ptext85:
 18235                           	opt callstack 0
 18236  0051CC                     _IOCB4_ISR:
 18237                           	opt callstack 17
 18238  0051CC                     
 18239                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18240  0051CC  0101               	movlb	1	; () banked
 18241  0051CE  5187               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18242  0051D0  1188               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18243  0051D2  B4D8               	btfsc	status,2,c
 18244  0051D4  EFEE  F028         	goto	i2u653_41
 18245  0051D8  EFF0  F028         	goto	i2u653_40
 18246  0051DC                     i2u653_41:
 18247  0051DC  EFFC  F028         	goto	i2l144
 18248  0051E0                     i2u653_40:
 18249  0051E0                     
 18250                           ; BSR set to: 1
 18251                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18252  0051E0  D802               	call	i2u654_48
 18253  0051E2  EFFC  F028         	goto	i2u654_49
 18254  0051E6                     i2u654_48:
 18255  0051E6  0005               	push	
 18256  0051E8  6EFA               	movwf	pclath,c
 18257  0051EA  5187               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18258  0051EC  6EFD               	movwf	tosl,c
 18259  0051EE  5188               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18260  0051F0  6EFE               	movwf	tosh,c
 18261  0051F2  6AFF               	clrf	tosu,c
 18262  0051F4  50FA               	movf	pclath,w,c
 18263  0051F6  0012               	return		;indir
 18264  0051F8                     i2u654_49:
 18265  0051F8                     i2l144:
 18266  0051F8  0012               	return		;funcret
 18267  0051FA                     __end_of_IOCB4_ISR:
 18268                           	opt callstack 0
 18269                           
 18270 ;; *************** function _INTERRUPT_S1_CALLBACK *****************
 18271 ;; Defined at:
 18272 ;;		line 83 in file "main.c"
 18273 ;; Parameters:    Size  Location     Type
 18274 ;;		None
 18275 ;; Auto vars:     Size  Location     Type
 18276 ;;		None
 18277 ;; Return value:  Size  Location     Type
 18278 ;;                  1    wreg      void 
 18279 ;; Registers used:
 18280 ;;		wreg
 18281 ;; Tracked objects:
 18282 ;;		On entry : 0/0
 18283 ;;		On exit  : 0/0
 18284 ;;		Unchanged: 0/0
 18285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18290 ;;Total ram usage:        0 bytes
 18291 ;; Hardware stack levels used:    1
 18292 ;; This function calls:
 18293 ;;		Nothing
 18294 ;; This function is called by:
 18295 ;;		_main
 18296 ;;		_IOCB4_ISR
 18297 ;; This function uses a non-reentrant model
 18298 ;;
 18299                           
 18300                           	psect	text86
 18301  005432                     __ptext86:
 18302                           	opt callstack 0
 18303  005432                     _INTERRUPT_S1_CALLBACK:
 18304                           	opt callstack 17
 18305  005432                     
 18306                           ;main.c: 84:     if (PORTBbits.RB4 == 0) {
 18307  005432  5081               	movf	129,w,c	;volatile
 18308  005434  0012               	return		;funcret
 18309  005436                     __end_of_INTERRUPT_S1_CALLBACK:
 18310                           	opt callstack 0
 18311                           
 18312 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18313 ;; Defined at:
 18314 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 18315 ;; Parameters:    Size  Location     Type
 18316 ;;		None
 18317 ;; Auto vars:     Size  Location     Type
 18318 ;;		None
 18319 ;; Return value:  Size  Location     Type
 18320 ;;                  1    wreg      void 
 18321 ;; Registers used:
 18322 ;;		None
 18323 ;; Tracked objects:
 18324 ;;		On entry : 0/0
 18325 ;;		On exit  : 0/0
 18326 ;;		Unchanged: 0/0
 18327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18332 ;;Total ram usage:        0 bytes
 18333 ;; Hardware stack levels used:    1
 18334 ;; This function calls:
 18335 ;;		Nothing
 18336 ;; This function is called by:
 18337 ;;		_PIN_MANAGER_Initialize
 18338 ;;		_IOCB4_ISR
 18339 ;; This function uses a non-reentrant model
 18340 ;;
 18341                           
 18342                           	psect	text87
 18343  005438                     __ptext87:
 18344                           	opt callstack 0
 18345  005438                     _IOCB4_DefaultInterruptHandler:
 18346                           	opt callstack 17
 18347  005438  0012               	return		;funcret
 18348  00543A                     __end_of_IOCB4_DefaultInterruptHandler:
 18349                           	opt callstack 0
 18350                           
 18351                           	psect	text88
 18352  000000                     __ptext88:
 18353                           	opt callstack 0
 18354  000000                     
 18355                           	psect	rparam
 18356  0000                     
 18357                           	psect	temp
 18358  00005F                     btemp:
 18359                           	opt callstack 0
 18360  00005F                     	ds	1
 18361  0000                     int$flags	set	btemp
 18362  0000                     wtemp8	set	btemp+1
 18363  0000                     ttemp5	set	btemp+1
 18364  0000                     ttemp6	set	btemp+4
 18365  0000                     ttemp7	set	btemp+8
 18366                           tosu	equ	0xFFF
 18367                           tosh	equ	0xFFE
 18368                           tosl	equ	0xFFD
 18369                           stkptr	equ	0xFFC
 18370                           pclatu	equ	0xFFB
 18371                           pclath	equ	0xFFA
 18372                           pcl	equ	0xFF9
 18373                           tblptru	equ	0xFF8
 18374                           tblptrh	equ	0xFF7
 18375                           tblptrl	equ	0xFF6
 18376                           tablat	equ	0xFF5
 18377                           prodh	equ	0xFF4
 18378                           prodl	equ	0xFF3
 18379                           indf0	equ	0xFEF
 18380                           postinc0	equ	0xFEE
 18381                           postdec0	equ	0xFED
 18382                           preinc0	equ	0xFEC
 18383                           plusw0	equ	0xFEB
 18384                           fsr0h	equ	0xFEA
 18385                           fsr0l	equ	0xFE9
 18386                           wreg	equ	0xFE8
 18387                           indf1	equ	0xFE7
 18388                           postinc1	equ	0xFE6
 18389                           postdec1	equ	0xFE5
 18390                           preinc1	equ	0xFE4
 18391                           plusw1	equ	0xFE3
 18392                           fsr1h	equ	0xFE2
 18393                           fsr1l	equ	0xFE1
 18394                           bsr	equ	0xFE0
 18395                           indf2	equ	0xFDF
 18396                           postinc2	equ	0xFDE
 18397                           postdec2	equ	0xFDD
 18398                           preinc2	equ	0xFDC
 18399                           plusw2	equ	0xFDB
 18400                           fsr2h	equ	0xFDA
 18401                           fsr2l	equ	0xFD9
 18402                           status	equ	0xFD8


Data Sizes:
    Strings     378
    Constant    3548
    Data        15
    BSS         100
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      94
    BANK0           160    130     146
    BANK1           256     46     150
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_111(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_98(CODE[3]), 
		 -> STR_93(CODE[4]), STR_89(CODE[4]), STR_84(CODE[3]), STR_79(CODE[3]), 
		 -> STR_74(CODE[4]), STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[4]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_44(CODE[4]), STR_39(CODE[3]), 
		 -> STR_35(CODE[3]), STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[4]), 
		 -> STR_17(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_111(CODE[3]), STR_107(CODE[3]), STR_102(CODE[3]), STR_98(CODE[3]), 
		 -> STR_93(CODE[4]), STR_89(CODE[4]), STR_84(CODE[3]), STR_79(CODE[3]), 
		 -> STR_74(CODE[4]), STR_69(CODE[3]), STR_64(CODE[3]), STR_59(CODE[4]), 
		 -> STR_54(CODE[3]), STR_49(CODE[3]), STR_44(CODE[4]), STR_39(CODE[3]), 
		 -> STR_35(CODE[3]), STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[4]), 
		 -> STR_17(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), STR_7(CODE[12]), STR_6(CODE[44]), 
		 -> STR_5(CODE[28]), STR_4(CODE[12]), STR_3(CODE[45]), STR_2(CODE[12]), 
		 -> STR_1(CODE[71]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), STR_7(CODE[12]), STR_6(CODE[44]), 
		 -> STR_5(CODE[28]), STR_4(CODE[12]), STR_3(CODE[45]), STR_2(CODE[12]), 
		 -> STR_1(CODE[71]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_7(CODE[12]), STR_6(CODE[44]), STR_5(CODE[28]), STR_4(CODE[12]), 
		 -> STR_3(CODE[45]), STR_2(CODE[12]), STR_1(CODE[71]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2437_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), STR_7(CODE[12]), STR_6(CODE[44]), 
		 -> STR_5(CODE[28]), STR_4(CODE[12]), STR_3(CODE[45]), STR_2(CODE[12]), 
		 -> STR_1(CODE[71]), Out_USART@value_2(BANK1[2]), Out_USART@value_1(BANK1[2]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), STR_7(CODE[12]), STR_6(CODE[44]), 
		 -> STR_5(CODE[28]), STR_4(CODE[12]), STR_3(CODE[45]), STR_2(CODE[12]), 
		 -> STR_1(CODE[71]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_14(CODE[27]), STR_13(CODE[21]), STR_12(CODE[14]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[14]), STR_7(CODE[12]), STR_6(CODE[44]), 
		 -> STR_5(CODE[28]), STR_4(CODE[12]), STR_3(CODE[45]), STR_2(CODE[12]), 
		 -> STR_1(CODE[71]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 33
		 -> string(BANK1[30]), STR_8(CODE[33]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TIMER2_CALLBACK(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TIMER2_CALLBACK(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TIMER2_CALLBACK->_PI_Controller
    _PI_Controller->___fldiv
    i2_abs->___fltol
    ___flsub->___fladd
    ___flmul->i2___xxtofl
    ___fldiv->___flmul
    _EPWM1_LoadDutyValue->___fltol
    _Get_values->i2___xxtofl
    i2___xxtofl->___aldiv
    ___lmul->_ADC_GetConversion
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _Out_USART->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    ___xxtofl->_atoi

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _PI_Controller->___fldiv

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _Out_USART->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  194655
                                             44 BANK1      2     2      0
                _EUSART1_is_rx_ready
          _IOCB4_SetInterruptHandler
                          _Out_USART
                           _SPI_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            26     4     22   61068
                                             18 BANK1     26     4     22
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   59161
                                            126 BANK0      4     4      0
                                              0 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37212
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      68
                                             13 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             22 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   32602
                                             44 BANK0     18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             22 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             18 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             16 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             16 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             16 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             14 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     785
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                             13 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     211
                                             13 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             13 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             13 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             13 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0     124
                                             13 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Out_USART                                            5     5      0   62439
                                              6 BANK1      5     5      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                           ___xxtofl
                               _atoi
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   58979
                                            126 BANK0      4     4      0
                                              0 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   58124
                                            118 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   57060
                                             81 BANK0     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8901
                                             42 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             19 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             13 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             13 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             13 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7743
                                             42 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             13 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             13 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5995
                                             13 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2794
                                             24 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7015
                                             42 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8707
                                             42 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     293
                                             31 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             13 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             13 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6070
                                             42 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5791
                                             31 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             13 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2139
                                             24 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1639
                                             15 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             14 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2465
                                             20 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             13 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             13 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             13 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     731
                                             35 BANK0     14    10      4
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0    8933
                                             83 COMRAM     4     4      0
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0    8933
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR2_CallBack                                       0     0      0    8933
                   Absolute function *
                    _TIMER2_CALLBACK *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TIMER2_CALLBACK                                     0     0      0    8933
                         _Get_values
                      _PI_Controller
 ---------------------------------------------------------------------------------
 (15) _PI_Controller                                       1     1      0    7385
                                             82 COMRAM     1     1      0
                _EPWM1_LoadDutyValue
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                         i2___xxtofl
                              i2_abs
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2     118
                                             10 COMRAM     4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (16) ___fltol                                            10     6      4     533
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (16) ___flsub                                             8     0      8    2585
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (16) ___flmul                                            25    17      8    1896
                                             45 COMRAM    25    17      8
                            ___fltol (ARG)
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) ___flge                                             12     4      8     334
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (16) ___fldiv                                            25    17      8    1399
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (16) _EPWM1_LoadDutyValue                                 4     2      2     120
                                             10 COMRAM     4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (15) _Get_values                                          0     0      0    1548
                  _ADC_GetConversion
                            ___aldiv
                             ___lmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (16) i2___xxtofl                                         14    10      4     400
                                             31 COMRAM    14    10      4
                  _ADC_GetConversion (ARG)
                            ___aldiv (ARG)
                            ___fltol (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lmul                                             12     4      8     522
                                              5 COMRAM    12     4      8
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (16) ___aldiv                                            14     6      8     604
                                             17 COMRAM    14     6      8
                  _ADC_GetConversion (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (16) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
              _INTERRUPT_S1_CALLBACK *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_S1_CALLBACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _IOCB4_SetInterruptHandler
   _Out_USART
     _EUSART1_Read
     _EUSART1_is_rx_ready
     ___xxtofl
       _atoi (ARG)
         ___wmul
         _isdigit
         _isspace
     _atoi
       ___wmul
       _isdigit
       _isspace
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
   _TMR2_StopTimer
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _INTERRUPT_S1_CALLBACK *
       _IOCB4_DefaultInterruptHandler *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TIMER2_CALLBACK *
         _Get_values
           _ADC_GetConversion
           ___aldiv
             _ADC_GetConversion (ARG)
             ___lmul (ARG)
               _ADC_GetConversion (ARG)
           ___lmul
             _ADC_GetConversion (ARG)
           i2___xxtofl
             _ADC_GetConversion (ARG)
             ___aldiv (ARG)
               _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
             ___fltol (ARG)
             ___lmul (ARG)
               _ADC_GetConversion (ARG)
         _PI_Controller
           _EPWM1_LoadDutyValue
             ___fltol (ARG)
           ___fldiv
             ___flmul (ARG)
               ___fltol (ARG)
               i2___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___fltol (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
           ___flge
           ___flmul
             ___fltol (ARG)
             i2___xxtofl (ARG)
               _ADC_GetConversion (ARG)
               ___aldiv (ARG)
                 _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
               ___fltol (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
           ___flsub
             ___fladd
           ___fltol
           i2___xxtofl
             _ADC_GetConversion (ARG)
             ___aldiv (ARG)
               _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
             ___fltol (ARG)
             ___lmul (ARG)
               _ADC_GetConversion (ARG)
           i2_abs
             ___fltol (ARG)
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     2E      96       8       58.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     82      92       5       91.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     186       6        0.0%
DATA                 0      0     186       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 15 23:45:35 2020

                                _SPI_Initialize 53A8                __end_of_TMR2_SetInterruptHandler 53F0  
                                  ___fldiv@aexp 006C                                    ___fldiv@bexp 006B  
                                  ___fldiv@sign 0064                                     _SSPSTATbits 000FC7  
                                            l32 53CA                                              l53 53B8  
                                            l29 52C0                                              l63 5306  
                                            l57 4A22                                              l65 5314  
                                            l66 5318                                              _KP 0190  
                           ___wmul@multiplicand 006F              __size_of_IOCB4_SetInterruptHandler 000A  
                                   __CFG_BORV$3 000000                      ?_IOCB4_SetInterruptHandler 006D  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                           l302 5364                                             l206 513C  
                                           l320 540C                                             l136 4DDC  
                                           l323 5402                                             l147 53F8  
                                           l403 53EE                                             l308 53D8  
                                           l341 5430                                             l326 5416  
                                           l423 5334                                             l169 5392  
                                           l283 53A6                                             l275 4EAE  
                                           l292 5274                                             l381 5428  
                                           l375 52FC                                             l296 529A  
                                           l712 4932                                             l721 4CA4  
                                           l801 303C                                             l714 496E  
                                           l378 542C                                             l299 5352  
                                           l571 52DE                                             l709 48EE  
                                           l493 3DA4                                             l581 4D94  
                                           l661 3C22                                             l806 26E4  
                                           l670 4016                                             l727 2468  
                                           l831 2984                                             l815 2782  
                                           l559 510A                                             l752 326A  
                                           l808 26EC                                             l912 4BDE  
                                           l496 3EDE                                             l592 4AAA  
                                           l568 1C00                                             l729 2470  
                                           l761 33BA                                             l913 4BE6  
                                           l585 4D46                                             l577 4EF0  
                                           l754 3272                                             l770 3810  
                                           l747 26AA                                             l763 341E  
                                           l916 5272                                             l772 3818  
                                           l588 534C                                             l781 38C4  
                                           l829 2922                                             l845 017E  
                                           l782 390E                                             l791 2E70  
                                           l793 2E78                                             l786 3916  
                                           l868 130A                                    __CFG_CPB$OFF 000000  
                                           _PR2 000FCB                                    __CFG_CPD$OFF 000000  
                               _timer1ReloadVal 0185                                             _abs 4EF2  
                                           _pad 48A6                                      i2___xxtofl 35D8  
                               _TMR2_Initialize 52E0                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 003F                                    ___flmul@bexp 0040  
                                  ___flmul@sign 003A                                    ___flmul@temp 0045  
                                  ___flmul@prod 0041                                 ?_lcd_set_cursor 0072  
                                  ___fltol@exp1 000A                              __size_of_IOCB4_ISR 002E  
                                          l1030 3AA0                                            l1043 3D88  
                                          ?_abs 007F                                            l1361 4538  
                                          l1354 4518                                            l1371 47D8  
                                          l1364 47B8                                            l1622 2E2E  
                                          l1710 4C46                                            l1625 2E36  
                                          l1705 4C3E                                            l1634 5098  
                                          l1642 4CF8                                            l1571 347A  
                                          l1628 4FB0                                            l1716 4FEA  
                                          l1732 4110                                            l1574 35D6  
                                          l1663 48A4                                            l1671 4E24  
                                          l1591 4F2A                                            l1727 4130  
                                          l1648 5024                                            l1585 356E  
                                          l1578 3512                                            l1594 4F32  
                                          l1691 505E                                            l1685 516C  
                                          l1678 524A                                            l1695 4624  
                                          l7000 4C68                                            l7002 4C74  
                                          l7010 23C8                                            l7004 4C78  
                                          l7020 2442                                            l7012 23E8  
                                          l7100 335A                                            l7006 4C7E  
                                          l7030 249E                                            l7022 245C  
                                          l7014 2412                                            l7110 33DA  
                                          l7102 3378                                            ?_pad 007F  
                                          l7040 2540                                            l7032 24A6  
                                          l7024 2478                                            l7016 2432  
                                          l7112 33E0                                            l7104 3392  
                                          l7120 378C                                            l7200 26BC  
                                          l8000 18B6                                            l7050 25FE  
                                          l7042 2546                                            l7034 24B0  
                                          l7026 248A                                            l7018 2440  
                                          l7114 33F0                                            l7106 33AC  
                                          l7130 37D6                                            l7122 379E  
                                          l7210 272A                                            l7202 26BE  
                                          l8010 18F2                                            l8002 18C2  
                                          l7060 264C                                            l7052 2618  
                                          l7036 24B6                                            l7044 25AA  
                                          l7028 2498                                            l7108 33C8  
                                          l7116 33F6                                            l7140 384E  
                                          l7132 37DE                                            l7124 37A6  
                                          l7220 2766                                            l7212 2732  
                                          l7204 26D8                                            l8100 1B0E  
                                          l8020 192E                                            l8012 18FE  
                                          l8004 18CE                                            l7062 265E  
                                          l7046 25C6                                            l7054 2626  
                                          l7038 253A                                            l7150 38A2  
                                          l7142 3854                                            l7134 37EE  
                                          l7126 37BA                                            l7222 2776  
                                          l7214 273C                                            l7206 2702  
                                          l7310 00AE                                            l7302 4D18  
                                          l8110 1B4A                                            l8102 1B1A  
                                          l8030 196A                                            l8022 193A  
                                          l8014 190A                                            l8006 18DA  
                                          l7064 266A                                            l7056 2638  
                                          l7048 25E4                                            l7080 329A  
                                          l7072 3232                                            l7160 38F0  
                                          l7152 38A6                                            l7144 3872  
                                          l7128 37C2                                            l7240 2840  
                                          l7232 2802                                            l7216 2742  
                                          l7208 270A                                            l7400 04E2  
                                          l7320 00E0                                            l7312 00BC  
                                          l7304 4D44                                            l8120 1B86  
                                          l8112 1B56                                            l8104 1B26  
                                          l8040 19A6                                            l8032 1976  
                                          l8024 1946                                            l8016 1916  
                                          l8008 18E6                                            l7066 2672  
                                          l7058 2646                                            l7090 32C4  
                                          l7082 32A2                                            l7074 3242  
                                          l7146 387E                                            l7138 383A  
                                          l7170 2EA0                                            l7162 2E38  
                                          l7250 28FA                                            l7242 2846  
                                          l7234 2814                                            l7226 27B6  
                                          l7218 274A                                            l7330 00FE  
                                          l7322 00F2                                            l7314 00CE  
                                          l8130 1BC2                                            l8122 1B92  
                                          l8114 1B62                                            l8106 1B32  
                                          l8050 19E2                                            l8042 19B2  
                                          l8034 1982                                            l8026 1952  
                                          l8018 1922                                            l7068 2682  
                                          l7092 32D6                                            l7084 32A8  
                                          l7076 3244                                            l7156 38D6  
                                          l7148 389C                                            l7180 2F36  
                                          l7172 2EA8                                            l7164 2E48  
                                          l7260 295C                                            l7252 2914  
                                          l7228 27C8                                            l7236 2828  
                                          l7244 28A4                                            l7500 0B56  
                                          l7404 051A                                            l7316 00D2  
                                          l7308 0088                                            l8140 3EE0  
                                          l8132 1BCE                                            l8124 1B9E  
                                          l8116 1B6E                                            l8108 1B3E  
                                          l8060 1A1E                                            l8052 19EE  
                                          l8044 19BE                                            l8036 198E  
                                          l8028 195E                                            l7094 32DC  
                                          l7086 32B6                                            l7078 325E  
                                          l7158 38EA                                            l7270 4572  
                                          l7190 2FEC                                            l7182 2F3C  
                                          l7174 2EB2                                            l7166 2E4A  
                                          l7254 2930                                            l7246 28C2  
                                          l7238 283A                                            l7510 0BDA  
                                          l7414 05D8                                            l7406 0552  
                                          l7350 01B4                                            l7342 0116  
                                          l7334 0104                                            l7326 00F8  
                                          l7318 00DE                                            l8150 3F86  
                                          l8142 3EE4                                            l8134 1BE0  
                                          l8126 1BAA                                            l8118 1B7A  
                                          l8070 1A5A                                            l8062 1A2A  
                                          l8054 19FA                                            l8046 19CA  
                                          l8038 199A                                            l8230 2998  
                                          l8222 2986                                            l6720 5360  
                                          l7096 32E2                                            l7088 32BC  
                                          l7280 45FC                                            l7272 4580  
                                          l7264 453A                                            l7192 3006  
                                          l7176 2EB8                                            l7184 2FA0  
                                          l7168 2E64                                            l6800 4C20  
                                          l7256 2936                                            l7248 28E0  
                                          l7600 11F0                                            l7424 0670  
                                          l7416 05FE                                            l7408 058A  
                                          l7360 0234                                            l7352 01EA  
                                          l7344 016C                                            l8152 3FB2  
                                          l8144 3EFA                                            l8136 1BEC  
                                          l8128 1BB6                                            l8080 1A96  
                                          l8072 1A66                                            l8064 1A36  
                                          l8056 1A06                                            l8048 19D6  
                                          l8160 5148                                            l8240 29BA  
                                          l8232 299A                                            l8224 298A  
                                          l6810 524C                                            l6722 53D0  
                                          l6730 480A                                            l7098 3340  
                                          l7274 459E                                            l7266 4566  
                                          l7186 2FB4                                            l7194 3014  
                                          l7178 2F30                                            l6802 4C32  
                                          l7258 2946                                            l7602 1218  
                                          l7610 1268                                            l7530 0D48  
                                          l7522 0C92                                            l7514 0C16  
                                          l7506 0B6A                                            l7450 086E  
                                          l7442 07E6                                            l7434 0730  
                                          l7426 06A8                                            l7418 0624  
                                          l7370 02BE                                            l7354 01F8  
                                          l7346 018C                                            l7338 010A  
                                          l7290 4D66                                            l8154 3FE0  
                                          l8146 3F34                                            l8138 1BF2  
                                          l8090 1AD2                                            l8082 1AA2  
                                          l8074 1A72                                            l8066 1A42  
                                          l8058 1A12                                            l8250 2A50  
                                          l8242 29BC                                            l8234 299C  
                                          l8226 298E                                            l6812 526A  
                                          l6732 4828                                            l6724 47DA  
                                          l6740 4DEC                                            l6820 392C  
                                          l7276 45BC                                            l6900 4474  
                                          l7188 2FD2                                            l7612 128E  
                                          l7620 12BE                                            l7604 1228  
                                          l7540 0DF6                                            l7532 0D80  
                                          l7524 0CCA                                            l7516 0C3C  
                                          l7508 0B90                                            l7460 091A  
                                          l7452 0894                                            l7444 081E  
                                          l7436 0768                                            l7428 06E0  
                                          l7380 035A                                            l7372 02CC  
                                          l7364 027E                                            l7356 0206  
                                          l7348 018E                                            l7700 531A  
                                          l7292 4D92                                            l7284 4D48  
                                          l8148 3F38                                            l8156 3FE4  
                                          l8092 1ADE                                            l8084 1AAE  
                                          l8076 1A7E                                            l8068 1A4E  
                                          l8260 2B10                                            l8252 2A7C  
                                          l8244 29E8                                            l8236 29AA  
                                          l8228 2994                                            l6806 5060  
                                          l6718 5352                                            l6734 485E  
                                          l6726 47EE                                            l6742 4DFE  
                                          l6750 5038                                            l6830 3982  
                                          l6822 394C                                            l7278 45CE  
                                          l6910 44DE                                            l6902 447C  
                                          l7198 26AC                                            l7614 129C  
                                          l7526 0D10                                            l7518 0C72  
                                          l7470 09DA                                            l7438 07AE  
                                          l7390 040E                                            l7374 02F2  
                                          l7358 0226                                            l7366 0290  
                                          l8430 013E                                            l7702 5332  
                                          l7710 52E8                                            l7286 4D60  
                                          l8094 1AEA                                            l8086 1ABA  
                                          l8078 1A8A                                            l8158 513E  
                                          l8262 2B4E                                            l8254 2A9A  
                                          l8246 2A06                                            l8238 29B8  
                                          l8432 2D30                                            l6728 4800  
                                          l6744 4E04                                            l6752 5050  
                                          l6840 39D6                                            l6832 398E  
                                          l6824 3950                                            l6816 3918  
                                          l6912 44FE                                            l6904 4490  
                                          l6920 4728                                            l7616 12B0  
                                          l7560 0F64                                            l7480 0A62  
                                          l7472 09E6                                            l7384 03A4  
                                          l7376 032C                                            l7368 02B6  
                                          l7640 53F0                                            l7720 511A  
                                          l7712 52EA                                            l7704 52E0  
                                          l6760 5302                                            l7296 4CFA  
                                          l7800 3BA6                                            l8096 1AF6  
                                          l8088 1AC6                                            l8272 2B96  
                                          l8264 2B7A                                            l8256 2AC6  
                                          l8248 2A32                                            l6738 4DDE  
                                          l6746 5026                                            l6770 48CA  
                                          l6850 3A4A                                            l6842 39E8  
                                          l6834 39AC                                            l6826 395E  
                                          l6818 391E                                            l6762 4EF2  
                                          l6914 4500                                            l6906 449E  
                                          l6930 47A0                                            l6922 4730  
                                          l7570 101E                                            l7562 0F74  
                                          l7554 0ECC                                            l7546 0E44  
                                          l7538 0DD0                                            l7490 0AD2  
                                          l7466 096A                                            l7458 08E2  
                                          l7394 042A                                            l7378 034C  
                                          l7386 03B6                                            l7626 12D0  
                                          l7642 5404                                            l7730 4E9C  
                                          l7722 5138                                            l7714 52F8  
                                          l7706 52E2                                            l7298 4D12  
                                          l7650 4EB0                                            l7810 3BD8  
                                          l7802 3BB6                                            l8098 1B02  
                                          l8274 2BF4                                            l8266 2B7E  
                                          l8258 2AE4                                            l7740 5282  
                                          l7820 3444                                            l6940 4CEE  
                                          l6748 5032                                            l6780 4914  
                                          l6772 48DA                                            l6844 3A16  
                                          l6836 39B4                                            l6852 3A50  
                                          l6828 397E                                            l6860 3C24  
                                          l6764 4F0E                                            l6916 4512  
                                          l6908 44B0                                            l6932 47B2  
                                          l6924 4744                                            l6756 4FB2  
                                          l7628 12F8                                            l7572 1056  
                                          l7564 0FAA                                            l7556 0F04  
                                          l7548 0E7C                                            l7468 09A2  
                                          l7476 09F2                                            l7396 0462  
                                          l7388 03DC                                            l7644 53FA  
                                          l7732 4EAA                                            l7724 4E6C  
                                          l7716 510C                                            l7708 52E6  
                                          l7900 52A8                                            l7652 4ECC  
                                          l7812 3BE8                                            l7804 3BC2  
                                          l8268 2B92                                            l7742 5286  
                                          l7734 5394                                            l7830 34BC  
                                          l7822 348A                                            l6942 4CF2  
                                          l6934 4CA6                                            l6950 2C42  
                                          l6782 4940                                            l6774 48E6  
                                          l6766 48A6                                            l6854 3A60  
                                          l6846 3A36                                            l6838 39C8  
                                          l6870 3C6A                                            l6862 3C2A  
                                          l6926 4752                                            l6918 4708  
                                          l7590 1140                                            l7574 107E  
                                          l7582 10CE                                            l7558 0F3C  
                                          l7478 0A2A                                            l7486 0A76  
                                          l7398 049A                                            l7670 4B9A  
                                          l7750 5224                                            l7646 540E  
                                          l7726 4E80                                            l7718 5118  
                                          l7910 52BC                                            l7902 52AC  
                                          l7662 5336                                            l7654 4EE8  
                                          l7806 3BC6                                            l7814 3BEA  
                                          l7744 5294                                            l7840 3544  
                                          l7832 34C8                                            l7824 34A0  
                                          l7816 3424                                            l6936 4CAC  
                                          l6952 2C46                                            l6784 4954  
                                          l6776 48FA                                            l6768 48B6  
                                          l6856 3A80                                            l6848 3A38  
                                          l6880 3CD2                                            l6872 3C8A  
                                          l6864 3C38                                            l6928 4780  
                                          l6792 4F74                                            l7584 10F4  
                                          l7576 108E                                            l7568 0FE6  
                                          l7488 0A9C                                            l7496 0AE6  
                                          l7672 4BC0                                            l7752 522E  
                                          l7920 49EC                                            l7912 4974  
                                          l7728 4E8E                                            l7680 53B6  
                                          l7648 53E6                                            l7904 52B0  
                                          l7808 3BD6                                            l7760 50F4  
                                          l7746 5298                                            l7738 5274  
                                          l7850 3582                                            l7842 3550  
                                          l7834 34FA                                            l7818 3436  
                                          l6938 4CC0                                            l6970 2D46  
                                          l6962 2CD4                                            l6954 2C78  
                                          l6946 2C28                                            l6778 490E  
                                          l6890 3D48                                            l6882 3D00  
                                          l6874 3CA8                                            l6866 3C58  
                                          l7586 111A                                            l7498 0B1E  
                                          l7666 4B84                                            l7930 3D8A  
                                          l7922 4A20                                            l7914 4982  
                                          l7674 542E                                            l7690 4DCA  
                                          l7682 4D96                                            l7906 52B4  
                                          l7658 4EEE                                            l7770 4A5E  
                                          l7762 50F8                                            l7852 35A6  
                                          l7844 355E                                            l7836 34FC  
                                          l7828 34B4                                            l6980 2E00  
                                          l6964 2CEA                                            l6956 2CC8  
                                          l6948 2C3E                                            l6892 3D68  
                                          l6884 3D20                                            l6876 3CB0  
                                          l6868 3C5C                                            l6788 4FEC  
                                          l6796 4BE8                                            l7588 1132  
                                          l7596 1180                                            l7668 4B8C  
                                          l7940 3DD6                                            l7932 3DA0  
                                          l7916 49C4                                            l7692 4DCC  
                                          l7684 4DB2                                            l7676 53A8  
                                          l7908 52B8                                            l7772 4A6A  
                                          l7764 4A24                                            l7756 50D8  
                                          l7854 35B6                                            l7846 357C  
                                          l7838 3508                                            l6982 2E12  
                                          l6974 2D98                                            l6966 2CF2  
                                          l6958 2CCC                                            l6886 3D32  
                                          l6878 3CC4                                            l7598 11B8  
                                          l7950 3E20                                            l7942 3DEC  
                                          l7934 3DB8                                            l7918 49C8  
                                          l7694 4DDA                                            l7686 4DBC  
                                          l7678 53B4                                            l7926 542A  
                                          l6990 52D2                                            l7782 3AA2  
                                          l7774 4A86                                            l7766 4A36  
                                          l7758 50E2                                            l7870 403C  
                                          l7862 4018                                            l7856 35C4  
                                          l7848 357E                                            l6968 2CFA  
                                          l6888 3D38                                            l6896 4448  
                                          l7952 3E78                                            l7944 3E02  
                                          l7936 3DC6                                            l7696 53BA  
                                          l7688 4DC8                                            l7928 5426  
                                          l6992 52D4                                            l7792 3AF6  
                                          l7784 3AAC                                            l7776 4A8E  
                                          l7960 17CC                                            l7880 40A8  
                                          l7872 405A                                            l7864 402C  
                                          l7858 35C6                                            l6978 2DEE  
                                          l6898 4454                                            l7954 3E80  
                                          l7946 3E10                                            l7938 3DCE  
                                          l7698 537E                                            l6994 52DC  
                                          l7786 3AF0                                            l7970 1802  
                                          l7962 17D8                                            l7882 40BC  
                                          l7890 4128                                            l7874 4066  
                                          l7866 4034                                            l6996 4C48  
                                          l7956 3E88                                            l7948 3E18  
                                          l6988 52C6                                            l7980 183E  
                                          l7972 180E                                            l7964 17DE  
                                          l7884 40CA                                            l7876 4072  
                                          l6998 4C5C                                            l7958 3EC0  
                                          l7894 529C                                            l7798 3AFA  
                                          l7990 187A                                            l7982 184A  
                                          l7974 181A                                            l7966 17EA  
                                          l7886 4100                                            l7878 4082  
                                          l7896 52A0                                            l7992 1886  
                                          l7984 1856                                            l7976 1826  
                                          l7968 17F6                                            l7888 4118  
                                          l7898 52A4                                            l7994 1892  
                                          l7986 1862                                            l7978 1832  
                                          l7996 189E                                            l7988 186E  
                                          l7998 18AA                                            STR_1 FE85  
                                          STR_2 FFAE                                            STR_3 FECC  
                                          STR_4 FFAE                                            STR_5 FF46  
                                          STR_6 FEF9                                            STR_7 FFAE  
                                          STR_8 FF25                                            STR_9 FFA0  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            _LATD 000F8C  
                                          _LATE 000F8D                                            u7200 5360  
                                          u8000 3392                                            u7201 535C  
                                          u8001 338E                                            u7210 47EE  
                                          u8010 33AC                                            u7211 47EA  
                                          u8011 33A8                                            u7220 4800  
                                          u7300 4F0E                                            u8020 33BA  
                                          u8100 3872                                            u7221 47FC  
                                          u7301 4F0A                                            u8021 33B6  
                                          u8101 386E                                            u7230 4828  
                                          u7310 48B6                                            u8030 33C8  
                                          u8110 38C4                                            u7231 4824  
                                          u7311 48B2                                            u8031 33C4  
                                          u8111 38C0                                            u7240 485E  
                                          u7320 48DA                                            u8040 33DA  
                                          u8120 38D2                                            u8200 3014  
                                          u7400 4C1C                                            u7241 485A  
                                          u7321 48D6                                            u8041 33D6  
                                          u8121 38CE                                            u8201 3010  
                                          u7250 4E24                                            u7330 4932  
                                          u8130 390E                                            u7410 4C32  
                                          u8210 26BC                                            u7251 4E20  
                                          u7331 492E                                            u8131 390A  
                                          u8051 3796                                            u7411 4C2E  
                                          u8211 26B8                                            u9100 3540  
                                          u7420 5092                                            u7260 5050  
                                          u7340 4940                                            u7500 3A60  
                                          u8060 37BA                                            u8140 2E48  
                                          u8300 2814                                            u8220 26D8  
                                          u9020 3BA6                                            u9101 353C  
                                          u7421 508C                                            u7261 504C  
                                          u7341 493C                                            u7501 3A5C  
                                          u8061 37B6                                            u8141 2E44  
                                          u8301 2810                                            u8221 26D4  
                                          u9021 3BA2                                            u9110 355E  
                                          u7430 5094                                            u7510 3C38  
                                          u8070 37EE                                            u8150 2E64  
                                          u7350 501E                                            u7270 4FE4  
                                          u8310 287E                                            u8230 2702  
                                          u9030 3BD6                                            u9014 3B84  
                                          u9111 355A                                            u7511 3C34  
                                          u8071 37EA                                            u8151 2E60  
                                          u7351 5018                                            u7271 4FDE  
                                          u8231 26FE                                            u9031 3BD2  
                                          u9015 3B7E                                            u9120 356E  
                                          u7440 392C                                            u7520 3C6A  
                                          u8080 380C                                            u8400 45BC  
                                          u7600 44DE                                            u8160 2FB4  
                                          u7360 5020                                            u7280 4FE6  
                                          u8320 28C2                                            u8240 2766  
                                          u9040 3BE8                                            u9200 4100  
                                          u9121 356A                                            u7441 3928  
                                          u7521 3C66                                            u8081 3808  
                                          u8401 45B8                                            u7601 44DA  
                                          u8161 2FB0                                            u8321 28BE  
                                          u8241 2762                                            u9041 3BE4  
                                          u9201 40FC                                            u9130 357C  
                                          u7450 395E                                            u7530 3CA8  
                                          u8090 3836                                            u8410 45CE  
                                          u7610 4728                                            u8170 2FD2  
                                          u7370 4FAA                                            u8330 28E0  
                                          u8250 27B0                                            u9210 4982  
                                          u7290 5314                                            u9050 3C22  
                                          u9131 3578                                            u7451 395A  
                                          u7531 3CA4                                            u8091 3832  
                                          u8411 45CA                                            u7611 4724  
                                          u8171 2FCE                                            u7371 4FA4  
                                          u8331 28DC                                            u8315 286C  
                                          u8251 27AA                                            u9211 497E  
                                          u7291 5310                                            u9051 3C1E  
                                          u9140 35B6                                            u9060 3436  
                                          u7700 2CE6                                            u7540 3CD2  
                                          u8420 45FC                                            u7620 4752  
                                          u8180 2FEC                                            u7380 4FAC  
                                          u8340 28FA                                            u8260 27B2  
                                          u8500 0278                                            u9220 3DB8  
                                          u9141 35B2                                            u9061 3432  
                                          u7701 2CE2                                            u7461 3988  
                                          u7541 3CCE                                            u8421 45F8  
                                          u7621 474E                                            u8181 2FE8  
                                          u8341 28F6                                            u8501 0272  
                                          u9221 3DB4                                            u9150 35C4  
                                          u9070 3444                                            u7710 2D1C  
                                          u7470 39AC                                            u7550 3D00  
                                          u7630 4780                                            u8190 3006  
                                          u7390 4C1A                                            u8350 2914  
                                          u8270 27C8                                            u8510 027A  
                                          u8430 4D60                                            u9230 3F62  
                                          u9151 35C0                                            u9071 3440  
                                          u7471 39A8                                            u7551 3CFC  
                                          u7631 477C                                            u8191 3002  
                                          u7391 4C14                                            u8351 2910  
                                          u8271 27C4                                            u8431 4D5C  
                                          u9080 34A0                                            u7640 4CC0  
                                          u7720 2D7C                                            u7480 39D6  
                                          u7560 3D48                                            u7800 23FA  
                                          u8360 2922                                            u8280 27FC  
                                          u8600 049A                                            u8520 0290  
                                          u8440 4D12                                            u9240 3F86  
                                          u9160 402C                                            u9081 349C  
                                          u7641 4CBC                                            u7481 39D2  
                                          u7561 3D44                                            u7801 23F4  
                                          u8361 291E                                            u8281 27F6  
                                          u8601 0496                                            u8521 028C  
                                          u8441 4D0E                                            u9241 3F82  
                                          u9161 4028                                            u9090 34F6  
                                          u7650 4CEE                                            u7730 2DC2  
                                          u7490 3A16                                            u7810 23FC  
                                          u8370 2930                                            u8290 27FE  
                                          u8610 0552                                            u8530 02B6  
                                          u8450 00AE                                            u9250 4006  
                                          u9170 405A                                            u9091 34F2  
                                          u7651 4CEA                                            u7491 3A12  
                                          u7571 444E                                            u8371 292C  
                                          u8611 054E                                            u8531 02B2  
                                          u8451 00AA                                            u9171 4056  
                                          u7740 2DE8                                            u7660 2C68  
                                          u7900 2618                                            u7820 2412  
                                          u8380 4566                                            u7580 4474  
                                          u8700 091A                                            u8620 058A  
                                          u8540 02F2                                            u8460 017E  
                                          u9260 4016                                            u9180 40BC  
                                          u7741 2DE2                                            u7717 2D12  
                                          u7901 2614                                            u7821 240E  
                                          u8381 4562                                            u7581 4470  
                                          u8701 0916                                            u8621 0586  
                                          u8541 02EE                                            u8461 017A  
                                          u9261 4012                                            u9237 3F58  
                                          u9181 40B8                                            u7750 2DEA  
                                          u7670 2C78                                            u7910 2626  
                                          u7830 2440                                            u8390 459E  
                                          u7590 449E                                            u8710 09A2  
                                          u8630 05FE                                            u8550 039E  
                                          u8470 018C                                            u9190 40CA  
                                          u7727 2D72                                            u7671 2C74  
                                          u7911 2622                                            u7831 243C  
                                          u8391 459A                                            u7591 449A  
                                          u8711 099E                                            u8631 05FA  
                                          u8551 0398                                            u8471 0188  
                                          u9191 40C6                                            u7760 2E00  
                                          u7680 2CA4                                            u7920 2638  
                                          u7840 245C                                            u8800 0E7C  
                                          u8720 0A2A                                            u8640 0624  
                                          u8560 03A0                                            u8480 01B4  
                                          u7761 2DFC                                            u7737 2DB8  
                                          u7921 2634                                            u7841 2458  
                                          u8801 0E78                                            u8721 0A26  
                                          u8641 0620                                            u8481 01B0  
                                          u9257 3FFC                                            u7770 2E12  
                                          u7690 2CC8                                            u7930 2646  
                                          u7850 248A                                            u8810 0F04  
                                          u8730 0A9C                                            u8650 06A8  
                                          u8570 03B6                                            u8490 01F8  
                                          u9370 2B92                                            u7771 2E0E  
                                          u7691 2CC4                                            u7667 2C5E  
                                          u7931 2642                                            u7851 2486  
                                          u8811 0F00                                            u8731 0A98  
                                          u8651 06A4                                            u8571 03B2  
                                          u8491 01F4                                            u9371 2B8E  
                                          u7940 265E                                            u7860 2498  
                                          u8820 0F3C                                            u8740 0B1E  
                                          u8660 06E0                                            u8580 03DC  
                                          u8900 4ECC                                            u7941 265A  
                                          u7861 2494                                            u8821 0F38  
                                          u8741 0B1A                                            u8661 06DC  
                                          u8581 03D8                                            u8901 4EC8  
                                          u7790 4C5C                                            u7870 25C6  
                                          u7950 3242                                            u8830 101E  
                                          u8750 0B90                                            u8670 0768  
                                          u8590 0462                                            u8910 4EE8  
                                          u7687 2C9A                                            u7791 4C58  
                                          u7871 25C2                                            u7951 323E  
                                          u8831 101A                                            u8751 0B8C  
                                          u8671 0764                                            u8591 045E  
                                          u8911 4EE4                                            u7880 25E4  
                                          u7960 325E                                            u8840 1056  
                                          u8760 0C3C                                            u8680 081E  
                                          u8920 4BDE                                            u7881 25E0  
                                          u7961 325A                                            u8841 1052  
                                          u8761 0C38                                            u8681 081A  
                                          u8921 4BDA                                            u7785 52D0  
                                          u8930 53A4                                            u7890 25FE  
                                          u7970 331A                                            u8850 10F4  
                                          u8770 0CCA                                            u8690 0894  
                                          u7786 52D2                                            u8931 539E  
                                          u7891 25FA                                            u8851 10F0  
                                          u8771 0CC6                                            u8691 0890  
                                          u8940 5282                                            u7980 335A  
                                          u8860 111A                                            u8780 0D80  
                                          u8941 527E                                            u7981 3356  
                                          u8861 1116                                            u8781 0D7C  
                                          u8950 5294                                            u7990 3378  
                                          u8870 11B8                                            u8790 0DF6  
                                          u8951 5290                                            u7991 3374  
                                          u7975 3308                                            u8871 11B4  
                                          u8791 0DF2                                            u9487 50EA  
                                          u8936 53A6                                            u8880 11F0  
                                          u8960 510A                                            u8881 11EC  
                                          u8961 5106                                            u8890 128E  
                                          u8970 4A5A                                            u8891 128A  
                                          u8971 4A56                                            u8980 4A86  
                                          u8981 4A82                                            u8990 4AAA  
                                          u8991 4AA6                                            _TMR2 000FCC  
                                          _WPUB 000F5B                                   _EUSART1_Write 534E  
                                          abs@a 007F                                            _dbuf 0113  
                                          _atoi 2C28                                            _ctoa 4C48  
                                          _main 2986                                            _dtoa 23C8  
                                          _font F0A9                                   ?_EUSART1_Read 0001  
                                          _prec 00EA                                            _otoa 3232  
                                          _nout 00E6                                            pad@i 0086  
                                          pad@p 0083                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0088                                            fsr2l 000FD9  
                                          _stoa 378C                                            btemp 005F  
                                          _utoa 2E38                                            _xtoa 26AC  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0084                                 ??_PI_Controller 0053  
                                 __CFG_IESO$OFF 000000                                 ___fldiv@new_exp 0065  
                        __end_of_SPI_Initialize 53BA                           ??_EPWM1_LoadDutyValue 000D  
                                 lcd_fill@width 007A                                   __CFG_MCLRE$ON 000000  
                                  ___param_bank 000000                                           ??_abs 0081  
                                         ??_pad 0085                  __size_of_OSCILLATOR_Initialize 0012  
                 __end_of_OSCILLATOR_Initialize 53CC                                   ___fltol@sign1 0009  
                               __end_of___aldiv 423E                                 __end_of___aodiv 3AA2  
                                         ?_atoi 0074                                           ?_ctoa 008A  
                               __end_of___fladd 17CC                                           ?_main 0001  
                                         ?_dtoa 008A                                 __end_of___aomod 3D8A  
                               __end_of___fldiv 23C8                                           STR_10 FFC4  
                                         STR_11 FFBA                                           STR_12 FF92  
                                         STR_21 FFD6                                           STR_13 FF7D  
                                         STR_30 FFD7                                           STR_14 FF62  
                                         STR_15 FFD2                                           STR_17 FFD2  
                                         STR_33 FFED                                           STR_26 FFD3  
                                         STR_42 FFDE                                           STR_35 FFED  
                                         STR_19 FFD6                                           STR_44 FFDE  
                                         STR_52 FFF6                                           STR_37 FFF0  
                                         STR_54 FFF6                                           STR_39 FFF0  
                                         STR_64 FFDB                                           STR_72 FFE2  
                                         STR_49 FFDF                                           STR_57 FFDA  
                                         STR_74 FFE2                                           STR_82 FFF9  
                                         STR_59 FFDA                                           STR_67 FFF3  
                                         STR_91 FFCE                                           STR_84 FFF9  
                                         STR_93 FFCE                                           STR_69 FFF3  
                                         STR_79 FFE3                                           STR_87 FFE6  
                               __end_of___flmul 202C                                           STR_89 FFE6  
                                         STR_98 FFE7                                           ?_otoa 008A  
                               __end_of___flsub 4E6C                                 __end_of___fltol 4344  
             __end_of_IOCB4_SetInterruptHandler 53FA                                           ?_stoa 0078  
                                         ?_utoa 008A                                 __end_of___lodiv 453A  
                                         ?_xtoa 008A                                           _T1CON 000FCD  
                                         _T2CON 000FCA                                 __end_of___lomod 47DA  
                                         i2l140 537C                                           i2l150 5438  
                                         i2l144 51F8                                           i2l400 51CA  
                                         i2l181 50B2                                           i2l406 5436  
                                         i2l511 3230                                           i2l351 0070  
                                         i2l184 50D2                                           i2l352 0070  
                                         i2l426 519C                                           i2l506 31EC  
                                         i2l346 003E                                           i2l515 5434  
                                         i2l509 322E                                           i2l518 5420  
                                         i2l396 5222                                           i2l499 4706  
                                         i2l927 4B72                                           i2l928 4B82  
                                         i2l995 423C                                    vfpfcnvrt@fmt 00B3  
                                  vfpfcnvrt@llu 00CE                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _PORTB 000F81  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                           i2_abs 4F34  
                                    _Draw_Graph 0112                                   __CFG_WRT0$OFF 000000  
                               ??_lcd_draw_char 0080                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                             ___lmul@multiplicand 000A  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                    _Get_values 4626                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                __end_of_TMR2_ISR 5224  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                 __end_of_msDelay 510C  
                                __CFG_EBTRB$OFF 000000                         __end_of_PIN_MANAGER_IOC 537E  
                                         _flags 00EC                                           _errno 0108  
                                         _error 00E2                                           _fputc 47DA  
                               __end_of_isalpha 4FB2                                           _fputs 4DDE  
                               __end_of_isdigit 509A                                           atoi@n 0081  
                                         pad@fp 007F                                           atoi@s 0074  
                                         _width 00E8                                           ctoa@c 008C  
                                         _putch 53CC                                           ctoa@w 008D  
                                         dtoa@d 008C                                           dtoa@i 00AC  
                                         dtoa@n 00A4                                           dtoa@p 009E  
                                         dtoa@s 00A2                                           dtoa@w 00A0  
                              __end_of_SPI_Open 4A24                                 __end_of_islower 4FEC  
                               __end_of_isspace 4CFA                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 513E                                 Out_USART@F12894 010E  
                               Out_USART@F12896 010C                                 __end_of_isupper 5026  
                                         pclath 000FFA                                           tablat 000FF5  
                                         otoa@d 008C                                           otoa@i 00AA  
                                         otoa@n 00A2                                           otoa@p 009C  
                                         otoa@t 009E                                           otoa@w 00A0  
                                ??_EUSART1_Read 006D                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 0084  
                                         stoa@l 008C                                           stoa@p 008A  
                                         stoa@s 007A                                           stoa@w 0086  
                                         ttemp5 0060                                           ttemp6 0063  
                                         ttemp7 0067                                           utoa@d 008C  
                                         utoa@i 00A8                                           utoa@n 00A0  
                                         utoa@p 009C                                           utoa@w 009E  
                                         status 000FD8                                           wtemp8 0060  
                                         xtoa@c 00AF                                           xtoa@d 008C  
                                         xtoa@i 00AD                                           xtoa@n 00A5  
                                         xtoa@p 00A1                                           xtoa@w 00A3  
                                         xtoa@x 0094                                 _TMR2_StartTimer 542A  
                               __end_of_strncmp 4626                                 __end_of_toupper 4C48  
                                lcd_fill@height 0078                                ___lodiv@dividend 006D  
            _EUSART1_DefaultFramingErrorHandler 000000                                 ?_SPI_Initialize 0001  
               ??_IOCB4_DefaultInterruptHandler 0001                                    _toupper$2511 0079  
                               __initialization 4AAC                                    __end_of_atoi 2E38  
                                  __end_of_ctoa 4CA6                      __end_of_EUSART1_Initialize 4EB0  
                                  __end_of_main 2C28                                    __end_of_dtoa 26AC  
                                  __end_of_font FE81                                    __end_of_otoa 3420  
                                  __end_of_stoa 3918                                    __end_of_utoa 303E  
                                  __end_of_xtoa 2986                               __end_of_IOCB4_ISR 51FA  
                       __end_of_TMR2_Initialize 52FE                     ?_INTERRUPT_InterruptManager 0001  
                               _TIMER2_CALLBACK 5418                                          ??_atoi 0076  
                                        ??_ctoa 008D                        _TMR2_SetInterruptHandler 53E6  
                                        ??_main 00E2                                          ??_dtoa 0094  
                             ?_lcd_set_cursor_x 0070                               ?_lcd_set_cursor_y 0070  
                                 lcd_send@value 006E                                          ??_otoa 0094  
                                        ??_stoa 007C                                          ??_utoa 0094  
                                        ??_xtoa 0095                                   __activetblptr 000003  
                            ??_lcd_set_cursor_x 0072                              ??_lcd_set_cursor_y 0072  
                                        ?i2_abs 000B                                  __CFG_RETEN$OFF 000000  
                                   ?i2___xxtofl 0020                                ___lodiv@quotient 007D  
                                lcd_draw_char@i 008B                                  lcd_draw_char@j 0089  
                                lcd_draw_char@k 008A                        __end_of_SPI_ExchangeByte 531A  
                                lcd_draw_char@x 0076                                  lcd_draw_char@y 0078  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 006F  
                                        STR_102 FFCF                                          ?_fputs 0078  
                                        STR_111 FFEA                                          STR_105 FFFC  
                                        _ADRESH 000FC4                                          STR_107 FFFC  
                                        STR_109 FFEA                                          _ADRESL 000FC3  
                                        _CCPR1H 000FBD                                          _CCPR1L 000FBC  
                                        _ANCON0 000F5D                                          _ANCON1 000F5C  
                                        ?_putch 0001                                          _T1GCON 000FAA  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l1213 4342  
                               __CFG_BBSIZ$BB2K 000000                                          i2l1500 2226  
                                        i2l1181 4400                                          i2l1511 22E4  
                                        i2l1503 21EA                                          i2l1512 22D2  
                                        i2l1186 4446                                          i2l1530 1CC6  
                                        i2l1540 1F22                                          i2l1444 14FA  
                                        i2l1509 226C                                          i2l1461 1614  
                                        i2l1453 17CA                                          i2l1445 14E8  
                                        i2l1534 202A                                          i2l1470 16E4  
                                        i2l1446 14AE                                          i2l1471 16D2  
                                        i2l1537 1EBC                                          i2l1571 362E  
                                        i2l1547 1FEC                                          i2l1539 1F34  
                                        i2l5100 422C                                          i2l1574 378A  
                                        i2l5110 204A                                          i2l1486 4E6A  
                                __CFG_WDTEN$OFF 000000                                          i2l1591 4F6A  
                                        i2l5200 228A                                          i2l5112 205A  
                                        i2l5120 2084                                          i2l5104 202C  
                                        i2l1585 3722                                          i2l5050 4B1A  
                                        i2l1578 36C6                                          i2l5210 22F4  
                                        i2l5202 228E                                          i2l1498 23C6  
                                        i2l5130 20B0                                          i2l5122 2094  
                                        i2l5114 206A                                          i2l5106 203A  
                                        i2l1594 4F72                                          i2l5060 4132  
                                        i2l5052 4B2A                                          i2l5220 2356  
                                        i2l5212 2300                                          i2l5204 229C  
                                        i2l5132 20C0                                          i2l5140 20EA  
                                        i2l5124 209A                                          i2l5116 207A  
                                        i2l5108 2048                                          i2l5300 1D7C  
                                        i2l4500 1418                                          i2l5070 4166  
                                        i2l5062 4136                                          i2l5054 4B38  
                                        i2l5230 23B4                                          i2l5222 236C  
                                        i2l5214 230E                                          i2l5206 22CA  
                                        i2l5150 212C                                          i2l5142 20FA  
                                        i2l5134 20D0                                          i2l5126 20A0  
                                        i2l5118 207C                                          i2l5310 1DD2  
                                        i2l5302 1D8C                                          i2l4510 142C  
                                        i2l4502 141C                                          i2l5080 41A8  
                                        i2l5072 4176                                          i2l5064 4144  
                                        i2l5056 4B48                                          i2l5232 23BA  
                                        i2l5224 2386                                          i2l5216 2338  
                                        i2l5144 2110                                          i2l5136 20E0  
                                        i2l5128 20AE                                          i2l5320 1E76  
                                        i2l5312 1DEE                                          i2l5304 1D98  
                                        i2l4600 167E                                          i2l4520 1440  
                                        i2l4512 1430                                          i2l4504 1420  
                                        i2l5400 423E                                          i2l5090 41FA  
                                        i2l5082 41B4                                          i2l5074 417A  
                                        i2l5066 4154                                          i2l5058 4B52  
                                        i2l5234 23BC                                          i2l5226 23A2  
                                        i2l5218 233C                                          i2l5170 21AE  
                                        i2l5162 2164                                          i2l5146 2120  
                                        i2l5154 2140                                          i2l5138 20E2  
                                        i2l5330 1ECC                                          i2l5322 1E84  
                                        i2l5314 1DFA                                          i2l5306 1DA8  
                                        i2l5250 1C2E                                          i2l5242 1C02  
                                        i2l4610 16A6                                          i2l4602 1682  
                                        i2l4530 147A                                          i2l4522 1444  
                                        i2l4514 1434                                          i2l4506 1424  
                                        i2l4450 1318                                          i2l5410 4294  
                                        i2l5402 4254                                          i2l4700 509C  
                                        i2l5092 41FC                                          i2l5084 41C2  
                                        i2l5076 418A                                          i2l5068 4158  
                                        i2l5228 23A6                                          i2l5180 21F4  
                                        i2l5172 21B6                                          i2l5164 217E  
                                        i2l5156 2150                                          i2l5148 2128  
                                        i2l5332 1EDA                                          i2l5324 1EA2  
                                        i2l5316 1E16                                          i2l5308 1DC2  
                                        i2l5260 1C6A                                          i2l5252 1C3E  
                                        i2l5244 1C0E                                          i2l4620 1700  
                                        i2l4612 16B4                                          i2l4604 1692  
                                        i2l4540 14CC                                          i2l4532 1496  
                                        i2l4524 1448                                          i2l4516 1438  
                                        i2l4508 1428                                          i2l4460 1358  
                                        i2l4452 1326                                          i2l5412 42A4  
                                        i2l5500 30CA                                          i2l4702 50AE  
                                        i2l5094 4206                                          i2l5086 41CC  
                                        i2l5078 41A0                                          i2l4710 516E  
                                        i2l5190 224C                                          i2l5182 2212  
                                        i2l5174 21C6                                          i2l5166 218E  
                                        i2l5158 2150                                          i2l5342 1F44  
                                        i2l5350 1F8C                                          i2l5334 1EDE  
                                        i2l5326 1EAC                                          i2l5318 1E40  
                                        i2l5270 1CA0                                          i2l5262 1C70  
                                        i2l5254 1C4E                                          i2l5246 1C1C  
                                        i2l4630 176A                                          i2l4622 170E  
                                        i2l4614 16CA                                          i2l4606 1694  
                                        i2l4550 1518                                          i2l4542 14DA  
                                        i2l4534 14A6                                          i2l4518 143C  
                                        i2l4526 144C                                          i2l4470 138A  
                                        i2l4462 135A                                          i2l4454 1328  
                                        i2l5422 42CE                                          i2l5414 42A8  
                                        i2l5406 4268                                          i2l5510 318C  
                                        i2l5502 30FC                                          i2l4704 50B0  
                                        i2l5088 41EA                                          i2l5096 420C  
                                        i2l5192 2252                                          i2l5184 2214  
                                        i2l5176 21DA                                          i2l5168 219E  
                                        i2l5360 2000                                          i2l5352 1FA6  
                                        i2l5344 1F50                                          i2l5336 1EEC  
                                        i2l5328 1EBA                                          i2l5272 1CB0  
                                        i2l5264 1C7E                                          i2l5256 1C54  
                                        i2l5248 1C1E                                          i2l4640 17A4  
                                        i2l4632 178A                                          i2l4624 1748  
                                        i2l4560 1558                                          i2l4608 16A2  
                                        i2l4544 14DC                                          i2l4536 14BC  
                                        i2l4528 1450                                          i2l4480 13B2  
                                        i2l4472 138C                                          i2l4456 1338  
                                        i2l4464 1362                                          i2l4448 130C  
                                        i2l5440 4332                                          i2l5432 42F6  
                                        i2l5424 42D8                                          i2l5416 42B6  
                                        i2l5408 4292                                          i2l5512 31AC  
                                        i2l5504 3110                                          i2l4706 50C0  
                                        i2l5098 421C                                          i2l5450 363E  
                                        i2l5194 225C                                          i2l5186 2224  
                                        i2l5178 21E8                                          i2l5362 200E  
                                        i2l5354 1FBA                                          i2l5346 1F5E  
                                        i2l5338 1F1A                                          i2l5290 1D32  
                                        i2l5282 1CFA                                          i2l5274 1CB6  
                                        i2l5266 1C80                                          i2l5258 1C64  
                                        i2l4642 17AA                                          i2l4634 178E  
                                        i2l4618 16F4                                          i2l4626 174A  
                                        i2l4570 1582                                          i2l4562 1564  
                                        i2l4554 152C                                          i2l4546 14E6  
                                        i2l4538 14C8                                          i2l4490 13EC  
                                        i2l4482 13C2                                          i2l4474 1392  
                                        i2l4466 1372                                          i2l4458 1348  
                                        i2l5434 4302                                          i2l5426 42E2  
                                        i2l5514 31EE                                          i2l5506 311E  
                                        i2l6172 5366                                          i2l5460 367C  
                                        i2l5452 3654                                          i2l5444 35DA  
                                        i2l5196 226A                                          i2l5188 2236  
                                        i2l5380 4372                                          i2l5364 2010  
                                        i2l5356 1FD4                                          i2l5348 1F88  
                                        i2l5292 1D4A                                          i2l5284 1D06  
                                        i2l5276 1CD6                                          i2l5268 1C90  
                                        i2l4644 17B8                                          i2l4636 179C  
                                        i2l4628 175A                                          i2l4580 15F4  
                                        i2l4564 1568                                          i2l4556 153C  
                                        i2l4548 1508                                          i2l4572 1588  
                                        i2l4492 13FE                                          i2l4484 13D2  
                                        i2l4476 13A0                                          i2l4468 1378  
                                        i2l5372 4E26                                          i2l5436 4312  
                                        i2l5508 312E                                          i2l6500 0028  
                                        i2l6174 5376                                          i2l5470 3704  
                                        i2l5462 36AE                                          i2l5446 35EA  
                                        i2l5198 227C                                          i2l5390 43E0  
                                        i2l5382 4382                                          i2l5358 1FF0  
                                        i2l5366 2016                                          i2l5294 1D56  
                                        i2l5286 1D10                                          i2l5278 1CE6  
                                        i2l4646 17BA                                          i2l4638 17A2  
                                        i2l4590 164E                                          i2l4574 15AE  
                                        i2l4582 1604                                          i2l4566 1576  
                                        i2l4558 154A                                          i2l4494 140C  
                                        i2l4486 13D4                                          i2l4478 13A2  
                                        i2l5374 4E36                                          i2l5438 4322  
                                        i2l6502 0036                                          i2l6176 537A  
                                        i2l5480 375A                                          i2l5472 3712  
                                        i2l5464 36B0                                          i2l5456 3668  
                                        i2l5448 35F8                                          i2l5392 43EE  
                                        i2l5384 43B0                                          i2l5368 201A  
                                        i2l5296 1D62                                          i2l5288 1D26  
                                        i2l4592 1658                                          i2l4584 162A  
                                        i2l4576 15E2                                          i2l4568 1578  
                                        i2l4496 1410                                          i2l4488 13DC  
                                        i2l6192 51FA                                          i2l6504 004C  
                                        i2l5482 376A                                          i2l5474 3730  
                                        i2l5466 36BC                                          i2l5458 3670  
                                        i2l5394 443E                                          i2l5386 43C0  
                                        i2l5378 4344                                          i2l5298 1D70  
                                        i2l4594 1666                                          i2l4586 163A  
                                        i2l4578 15E4                                          i2l4498 1414  
                                        i2l5490 4F34                                          i2l6194 51FC  
                                        i2l6506 005A                                          i2l5484 3778  
                                        i2l5476 3732                                          i2l5468 36F8  
                                        i2l5396 4444                                          i2l5388 43CE  
                                        i2l4596 1668                                          i2l5492 4F4E  
                                        i2l6196 5216                                          i2l6508 0068  
                                        i2l5486 377A                                          i2l5478 3736  
                                        i2l5494 4626                                          i2l4598 1676  
                                        i2l6198 521A                                          i2l5496 303E  
                                        i2l5498 3072                                          i2l5882 5432  
                                        i2l6498 001A                                          i2l5972 51CC  
                                        i2l5884 5418                                          i2l5974 51E0  
                                        i2l5886 541C                                          i2l5992 519E  
                                        i2l5994 51B2                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 00BD                                          _SPBRG1 000FAF  
                                        _SSPADD 000FC8                                          _SSPBUF 000FC9  
                                        _TXREG1 000FAD                                __end_of___xxtofl 35D8  
                                        i2abs@a 000B                                          _TXSTA1 000FAC  
                               _global_bg_color 010A                                  __CFG_XINST$OFF 000000  
                              ??_lcd_draw_pixel 0072                                __end_of_lcd_fill 4AAC  
                                  vfprintf@cfmt 00DC                                __end_of_lcd_init 1C02  
                              __end_of_lcd_send 52E0                                          ___flge 4344  
                                        ___lmul 4B1A                                       ??___aldiv 001A  
                                     ??___aodiv 007D                                       ??___fladd 0009  
                                     ??___aomod 007D                                          ___wmul 524C  
                                     ??___fldiv 004F                                  __CFG_STVREN$ON 000000  
                                     ??___flmul 0036                                       ??___flsub 0019  
                                     ??___fltol 0005                                       ??___lodiv 007D  
                                     ??___lomod 007D                        ?_EUSART1_SetErrorHandler 006D  
                                        clear_0 4AF2                                          clear_1 4AFE  
                                        clear_2 4B0A                                          _sensor 0104  
                                        _printf 5224                                          pad@buf 0081  
              ??_EUSART1_SetOverrunErrorHandler 006F                 ?_EUSART1_SetOverrunErrorHandler 006D  
                                        ctoa@fp 008A                                          dtoa@fp 008A  
                                        _string 0133                                          _strlen 5026  
                            __size_of_Out_USART 0156                                       ??_msDelay 006D  
                                        fputc@c 006F                                          fputs@c 007C  
                                        fputs@i 007D                                          fputs@s 0078  
                                     ??_isalpha 006F                                       ??_isdigit 006F  
                                     ??_islower 006F                                    __mediumconst F0A8  
                                     ??_isspace 006F                                          otoa@fp 008A  
                                   ?_Get_values 0001                                          tblptrh 000FF7  
                                     ??_isupper 006F                                          tblptrl 000FF6  
                                        tblptru 000FF8                        ADC_GetConversion@channel 0005  
                                        stoa@cp 0088                                          stoa@fp 0078  
                              __end_of_vfprintf 4BE8                                 ??_EUSART1_Write 006D  
                                        utoa@fp 008A                         __end_of_TMR2_StartTimer 542E  
      TMR2_SetInterruptHandler@InterruptHandler 006D       IOCB4_SetInterruptHandler@InterruptHandler 006D  
                              ?_PIN_MANAGER_IOC 0001                                __end_of_snprintf 516E  
                                        xtoa@fp 008A                         ??_INTERRUPT_S1_CALLBACK 0001  
                                     ??_strncmp 0073                                       ??_toupper 0075  
                 __size_of_INTERRUPT_Initialize 0004                                      ___flge@ff1 0001  
                                    ___flge@ff2 0005                                ?_TMR1_Initialize 0001  
                                  ___xxtofl@arg 008D                                    ___xxtofl@exp 008C  
                             _SYSTEM_Initialize 529C                                    ___xxtofl@val 0083  
                                    __accesstop 0060                        __size_of_lcd_draw_string 0138  
                       __end_of__initialization 4B10                           __end_of_TMR2_CallBack 51CC  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                    ___fltol@f1 0001                                   __end_ofi2_abs 4F74  
                       __end_of_TIMER2_CALLBACK 5422                             __size_ofi2___xxtofl 01B4  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 5422                                    __pidataBANK1 53DA  
                           ??_SYSTEM_Initialize 006F                                       ?_TMR2_ISR 0001  
                            ??_EPWM1_Initialize 006D                                   __end_of_fputc 48A6  
                                 __end_of_fputs 4E26           __end_of_IOCB4_DefaultInterruptHandler 543A  
        __size_of_IOCB4_DefaultInterruptHandler 0002                   _IOCB4_DefaultInterruptHandler 5438  
                                 __end_of_putch 53DA                                ?_TMR2_Initialize 0001  
                                     ?_SPI_Open 0001                     ??_IOCB4_SetInterruptHandler 006F  
                          __end_of_EUSART1_Read 529C                                ??_lcd_set_cursor 0076  
                                       ??i2_abs 000D                                         ??_fputc 0073  
                     __end_of_SYSTEM_Initialize 52C2                                         ??_fputs 007C  
                                       ??_putch 006E                                      __pbssBANK0 00E2  
                                    __pbssBANK1 0100                                 __CFG_PLLCFG$OFF 000000  
                             __end_of_Out_USART 3EE0                                Out_USART@value_1 0158  
                              Out_USART@value_2 015A                 __end_of_EUSART1_SetErrorHandler 5418  
                                       ?___flge 0001                             __size_of_Get_values 00E2  
                                       ?___lmul 0006                                         ?___wmul 006D  
                                    ??_TMR2_ISR 0054                                         _CCP1CON 000FBB  
                                       _ECCP1AS 000FBF                                  ___lmul@product 000E  
                                    ??_SPI_Open 006D                                         ?_printf 0151  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 006D  
        __end_of_EUSART1_SetFramingErrorHandler 540E         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 5404                                __CFG_CANMX$PORTB 000000  
                                     ?___xxtofl 0083                                         _REFOCON 000F9A  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 1284  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000F7D  
                       __size_of_TMR2_StopTimer 0004                                         _SSPCON1 000FC6  
                                       _SSPCON2 000FC5                                ?_TMR2_StartTimer 0001  
                                     ?_lcd_fill 0076                                       ?_lcd_init 0001  
                                     ?_lcd_send 006E                                         _SSPSTAT 000FC7  
                              ___lomod@dividend 006D                     __end_of_EPWM1_LoadDutyValue 519E  
                              ??_SPI_Initialize 006D                       _IOCB4_SetInterruptHandler 53F0  
                               __CFG_PWRTEN$OFF 000000                            _ADC_InterruptHandler 0110  
                                       __Hparam 0000                                         __Lparam 0000  
                    ??_TMR2_SetInterruptHandler 006F                              __size_of_vsnprintf 011A  
                              ?_TIMER2_CALLBACK 0001                           __end_of_PI_Controller 3232  
                             ??_lcd_draw_string 0096                                   _turn_on_value 00F0  
                                       ___aldiv 4132                                 __size_of___flge 0104  
                                       ___aodiv 3918                                         ___fladd 130C  
                                       ___aomod 3C24                                         ___fldiv 202C  
                               __size_of___lmul 006A                                         ___flmul 1C02  
                                       ___flsub 4E26                                         ___fltol 423E  
                               __size_of___wmul 0028                                         ___lodiv 4448  
                                       ___lomod 4708                                       ?_vfprintf 00D6  
                                     ?_snprintf 0163                             _EUSART1_is_rx_ready 5394  
                                       __pcinit 4AAC                                         __ramtop 0F00  
                                       __ptext0 2986                                         __ptext1 513E  
                                       __ptext2 4018                                         __ptext3 17CC  
                                       __ptext4 50D4                                         __ptext5 4A24  
                                       __ptext6 3EE0                                         __ptext7 3AA2  
                                       __ptext8 4EB0                                         __ptext9 4CFA  
                               __size_of_printf 0028                                         _msDelay 50D4  
                                     _IOCB4_ISR 51CC                                 __size_of_strlen 003A  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 53BA  
                                     _T2CONbits 000FCA                                    __size_of_abs 0042  
                                  __size_of_pad 00CA                                         _isalpha 4F74  
                                       _isdigit 5060                                    ??i2___xxtofl 0024  
                                    ??___xxtofl 0087                                ___aldiv@dividend 0012  
                            _EUSART1_Initialize 4E6C                                         _islower 4FB2  
                      ??_PIN_MANAGER_Initialize 006F                                         _isspace 4CA6  
                             __CFG_MSSPMSK$MSK7 000000                                         _isupper 4FEC  
                                       atoi@neg 007A                           __end_of_lcd_draw_char 3C24  
                    __size_of_SYSTEM_Initialize 0026                                      ??_lcd_fill 0078  
                             ?_SPI_ExchangeByte 0001                                      ??_lcd_init 007C  
                                    ??_lcd_send 006F                                         _strncmp 453A  
                                       _toupper 4BE8                            end_of_initialization 4B10  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                            ??_SPI_ExchangeByte 006D                       __size_of_lcd_set_cursor_x 004E  
                     __size_of_lcd_set_cursor_y 004E                                         fputc@fp 0071  
                   _EUSART1_OverrunErrorHandler 0181                                         fputs@fp 007A  
                                i2___xxtofl@arg 002A                                  i2___xxtofl@exp 0029  
                                i2___xxtofl@val 0020                             lcd_draw_char@fIndex 007A  
                             __end_of_vfpfcnvrt 130C                              __end_ofi2___xxtofl 378C  
                              ___aldiv@quotient 001C                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                lcd_fill@bg_color 0076  
                                    ??_vfprintf 00DC                            ??_EUSART1_Initialize 006F  
                                    ??_snprintf 00E2                                         strlen@a 006F  
                                       strlen@s 006D                               lcd_draw_string@pS 0090  
                                     _PORTBbits 000F81                               _spi_configuration FE81  
                                    ?_IOCB4_ISR 0001                                     ___fladd@grs 0010  
                              __CFG_FOSC$INTIO2 000000                                   ___xxtofl@sign 008B  
                                  ??_Get_values 002E                                       _TRISCbits 000F94  
                             __end_of_vsnprintf 4132                                     ___fldiv@grs 0067  
                                   ___fldiv@rem 0060                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 006D                           ??_EUSART1_is_rx_ready 006D  
                __size_of_INTERRUPT_S1_CALLBACK 0004                   __end_of_INTERRUPT_S1_CALLBACK 5436  
                                   ___flmul@grs 003B                                      lcd_send@dc 006F  
                                  _EUSART1_Read 5274                              __end_of_Get_values 4708  
                  __end_of_INTERRUPT_Initialize 5432                            SPI_ExchangeByte@data 006D  
          __end_of_TMR2_DefaultInterruptHandler 5438           __size_of_TMR2_DefaultInterruptHandler 0002  
                  _TMR2_DefaultInterruptHandler 5436                                  __end_of___flge 4448  
                     __end_of_spi_configuration FE85                                  __end_of___lmul 4B84  
                                   vfpfcnvrt@ap 00B5                                     vfpfcnvrt@cp 00BB  
                                   vfpfcnvrt@fp 00B1                                     vfpfcnvrt@ll 00C3  
                                __end_of___wmul 5274                                     vfpfcnvrt@vp 00CB  
                             __size_of_TMR2_ISR 002A                                  _ADC_Initialize 537E  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 524C  
                             __size_of_SPI_Open 00B4                                  __end_of_strlen 5060  
                           start_initialization 4AAC                                 ___lodiv@divisor 0075  
                     __size_of_EPWM1_Initialize 001C                                 ___lodiv@counter 0085  
               __size_of_PIN_MANAGER_Initialize 0048                                     __end_of_abs 4F34  
                                   __end_of_pad 4970                                  _TMR2_StopTimer 5426  
                                   putch@txData 006E                    EPWM1_LoadDutyValue@dutyValue 000B  
                         __end_of_EUSART1_Write 5366                        __size_of_PIN_MANAGER_IOC 0018  
                SPI_Open@spiUniqueConfiguration 006E                        __size_of_TMR1_Initialize 0032  
                                   vfprintf@fmt 00D8                                       _Out_USART 3D8A  
                                      ??___flge 0009                                        ??___lmul 000E  
                                      ??___wmul 0071                                     _CCPTMRSbits 000F99  
                        __end_of_ADC_Initialize 5394                                     __pdataBANK0 00EE  
                                   __pdataBANK1 0189                 fp__TMR2_DefaultInterruptHandler 0000  
                 ?_TMR2_DefaultInterruptHandler 0001                                        ??_printf 00DE  
                                      ??_strlen 006F                                     ??_IOCB4_ISR 0001  
                                     ___fladd@a 0005                                       ___fladd@b 0001  
                       __size_of_lcd_draw_pixel 0018                                    vsnprintf@cnt 015B  
                                  vsnprintf@fmt 0155                                       ___fldiv@a 004B  
                                     ___fldiv@b 0047                          __size_of_TMR2_CallBack 002E  
                        __end_of_TMR2_StopTimer 542A                                       ___flmul@a 0032  
                                     ___flmul@b 002E                                     __pbssCOMRAM 0058  
                                     ___flsub@a 0015                                       ___flsub@b 0011  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0151  
                              ___aodiv@dividend 006D                        __size_of_TMR2_Initialize 001E  
                                   snprintf@fmt 0167                               __size_of___xxtofl 01B8  
                               _lcd_draw_string 3EE0                                _lcd_set_cursor_x 4D48  
                              _lcd_set_cursor_y 4CFA                ??_EUSART1_SetFramingErrorHandler 006F  
               ?_EUSART1_SetFramingErrorHandler 006D                               __size_of_lcd_fill 0088  
                             __size_of_lcd_init 0436                               __size_of_lcd_send 001E  
                                     _atoi$2397 007C                                       _atoi$2398 0080  
                                     _atoi$2399 007E                                       __pnvBANK1 017D  
                        _PIN_MANAGER_Initialize 4D96                                       _dtoa$1784 009C  
                      fp__INTERRUPT_S1_CALLBACK 0000                                      ?_Out_USART 0001  
                                     __pintcode 0008                                   __pmediumconst F0A8  
                                      ?___aldiv 0012                                        ?___aodiv 006D  
                                      ?___fladd 0001                                        ?___aomod 006D  
                                      ?___fldiv 0047                                ___aodiv@quotient 007F  
                                      ?___flmul 002E                                        ?___flsub 0011  
                                      ?___fltol 0001                                        ?___lodiv 006D  
                                      ?___lomod 006D                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0054                               __size_of_vfprintf 0064  
                             __size_of_snprintf 0030                                        ?_msDelay 0001  
                               ___lomod@divisor 0075                                        _ECCP1DEL 000FBE  
                               ___lomod@counter 007D                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 006D  
                                      ?_isdigit 006D                                 ?_TMR2_StopTimer 0001  
                                __size_ofi2_abs 0040                            _EUSART1_ErrorHandler 017F  
                                      ?_islower 006D                                        ?_isspace 006D  
                                      ?_isupper 006D                         _EUSART1_SetErrorHandler 540E  
                                __size_of_fputc 00CC                                  __size_of_fputs 0048  
                                      ?_strncmp 006D                                        ?_toupper 0073  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 542E  
                       __size_of_lcd_set_cursor 0042                                 ___aldiv@divisor 0016  
                               ___aldiv@counter 001A                                  ___wmul@product 0071  
                                      _IOCBbits 000F5A                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 006D                                        _LATEbits 000F8D  
                                 _TMR2_CallBack 519E                                        _PIE1bits 000F9D  
                      __size_of_TMR2_StartTimer 0004                                 lcd_set_cursor@x 0072  
                               lcd_set_cursor@y 0074             __size_of_INTERRUPT_InterruptManager 007C  
                                      i2u400_40 1326                                        i2u400_41 1322  
                                      i2u401_40 1338                                        i2u401_41 1334  
                                      i2u410_40 1492                                        i2u402_40 1348  
                                      i2u410_41 148C                                        i2u402_41 1344  
                                      i2u411_40 1494                                        i2u403_40 138A  
                                      i2u403_41 1386                                        i2u420_40 15AE  
                                      i2u412_40 14BC                                        i2u404_40 13A0  
                                      i2u420_41 15AA                                        i2u412_41 14B8  
                                      i2u404_41 139C                                        i2u421_40 15F4  
                                      i2u413_40 14DA                                        i2u405_40 13B2  
                                      i2u421_41 15F0                                        i2u413_41 14D6  
                                      i2u405_41 13AE                                        i2u430_40 16E0  
                                      i2u422_40 162A                                        i2u414_40 14FA  
                                      i2u406_40 13C2                                        i2u430_41 16DC  
                                      i2u422_41 1626                                        i2u414_41 14F6  
                                      i2u406_41 13BE                                        i2u431_40 16F4  
                                      i2u423_40 163A                                        i2u415_40 1508  
                                      i2u407_40 13FE                                        i2u431_41 16F0  
                                      i2u423_41 1636                                        i2u415_41 1504  
                                      i2u407_41 13FA                                        i2u432_40 170E  
                                      i2u424_40 1666                                        i2u416_40 1518  
                                      i2u408_40 140C                                        i2u600_40 311E  
                                      i2u432_41 170A                                        i2u424_41 1662  
                                      i2u416_41 1514                                        i2u408_41 1408  
                                      i2u600_41 311A                                        i2u433_40 1748  
                                      i2u425_40 1676                                        i2u417_40 154A  
                                      i2u409_40 147A                                        i2u601_40 31EC  
                                      i2u433_41 1744                                        i2u425_41 1672  
                                      i2u417_41 1546                                        i2u409_41 1476  
                                      i2u601_41 31E8                                        _PIR1bits 000F9E  
                                      i2u530_40 41A0                                        i2u434_40 175A  
                                      i2u426_40 1692                                        i2u418_40 1558  
                                      i2u602_40 322E                                        i2u530_41 419C  
                                      i2u434_41 1756                                        i2u426_41 168E  
                                      i2u418_41 1554                                        i2u602_41 322A  
                                      i2u531_40 41C2                                        i2u435_40 176A  
                                      i2u427_40 16A2                                        i2u419_40 1576  
                                      i2u531_41 41BE                                        i2u435_41 1766  
                                      i2u427_41 169E                                        i2u419_41 1572  
                                      i2u532_40 41EA                                        i2u540_40 2110  
                                      i2u436_40 178A                                        i2u428_40 16B4  
                                      i2u532_41 41E6                                        i2u540_41 210C  
                                      i2u436_41 1786                                        i2u428_41 16B0  
                                      i2u533_40 421C                                        i2u541_40 2150  
                                      i2u437_40 179C                                        i2u429_40 16CA  
                                      i2u533_41 4218                                        i2u541_41 214C  
                                      i2u437_41 1798                                        i2u429_41 16C6  
                                      i2u526_40 4B38                                        i2u550_40 22CA  
                                      i2u542_40 21C6                                        i2u534_40 2048  
                                      i2u438_40 17B8                                        i2u526_41 4B34  
                                      i2u550_41 22C6                                        i2u542_41 21C2  
                                      i2u534_41 2044                                        i2u438_41 17B4  
                                      i2u527_40 4B72                                        i2u551_40 22E0  
                                      i2u543_40 21E8                                        i2u535_40 205A  
                                      i2u527_41 4B6E                                        i2u551_41 22DC  
                                      i2u543_41 21E4                                        i2u535_41 2056  
                                      i2u448_40 50C0                                        i2u528_40 4144  
                                      i2u552_40 22F4                                        i2u544_40 2212  
                                      i2u536_40 206A                                        i2u560_40 1C7E  
                                      i2u704_40 0028                                        i2u448_41 50BC  
                                      i2u528_41 4140                                        i2u552_41 22F0  
                                      i2u544_41 220E                                        i2u536_41 2066  
                                      i2u560_41 1C7A                                        i2u704_41 0024  
                                      i2u529_40 4166                                        i2u553_40 230E  
                                      i2u545_40 2236                                        i2u537_40 20AE  
                                      i2u561_40 1C90                                        i2u705_40 0036  
                                      i2u529_41 4162                                        i2u553_41 230A  
                                      i2u545_41 2232                                        i2u537_41 20AA  
                                      i2u561_41 1C8C                                        i2u705_41 0032  
                                      i2u554_40 2356                                        i2u546_40 224C  
                                      i2u538_40 20C0                                        i2u570_40 1F30  
                                      i2u562_40 1CA0                                        i2u706_40 004C  
                                      i2u554_41 2352                                        i2u546_41 2248  
                                      i2u538_41 20BC                                        i2u570_41 1F2C  
                                      i2u562_41 1C9C                                        i2u706_41 0048  
                         lcd_draw_string@lIndex 009C                                        i2u555_40 2386  
                                      i2u547_40 226A                                        i2u539_40 20D0  
                                      i2u571_40 1F44                                        i2u563_40 1CD6  
                                      i2u707_40 005A                                        i2u555_41 2382  
                                      i2u547_41 2266                                        i2u539_41 20CC  
                                      i2u571_41 1F40                                        i2u563_41 1CD2  
                                      i2u707_41 0056                                        i2u556_40 23B4  
                                      i2u548_40 228A                                        i2u580_40 443E  
                                      i2u572_40 1F5E                                        i2u564_40 1CE6  
                                      i2u708_40 0068                                        i2u556_41 23B0  
                                      i2u548_41 2286                                        i2u580_41 443A  
                                      i2u572_41 1F5A                                        i2u564_41 1CE2  
                                      i2u708_41 0064                                        i2u653_40 51E0  
                                      i2u549_40 229C                                        i2u573_40 1FA6  
                                      i2u565_40 1E60                                        i2u557_40 1C1C  
                                      i2u581_40 4254                                        i2u653_41 51DC  
                                      i2u549_41 2298                                        i2u573_41 1FA2  
                                      i2u557_41 1C18                                        i2u581_41 4250  
                  __size_of_EPWM1_LoadDutyValue 0030                                        i2u565_45 1E56  
                                      i2u590_40 3654                                        i2u574_40 1FD4  
                                      i2u566_40 1EBA                                        i2u558_40 1C2E  
                                      i2u582_40 4288                                        i2u590_41 3650  
                                      i2u574_41 1FD0                                        i2u566_41 1EB6  
                                      i2u558_41 1C2A                                        i2u582_45 427E  
                                      i2u654_48 51E6                                        i2u591_40 36AA  
                                      i2u575_40 200E                                        i2u567_40 1EDA  
                                      i2u559_40 1C3E                                        i2u583_40 42B6  
                                      i2u654_49 51F8                                        i2u591_41 36A6  
                                      i2u575_41 200A                                        i2u567_41 1ED6  
                                      i2u559_41 1C3A                                        i2u583_41 42B2  
                                      i2u592_40 36F4                                        i2u576_40 4372  
                                      i2u568_40 1EEC                                        i2u584_40 42CA  
                                      i2u592_41 36F0                                        i2u576_41 436E  
                                      i2u568_41 1EE8                                        i2u584_41 42C6  
                                      i2u593_40 3712                                        i2u577_40 43B0  
                                      i2u569_40 1F1A                                        i2u585_40 42F2  
                                      i2u593_41 370E                                        i2u577_41 43AC  
                                      i2u569_41 1F16                                        i2u585_41 42EE  
                                      i2u594_40 3722                                        i2u578_40 43CE  
                                      i2u586_40 4312                                        i2u658_40 51B2  
                                      i2u594_41 371E                                        i2u578_41 43CA  
                                      i2u586_41 430E                                        i2u658_41 51AE  
                                      i2u595_40 3730                                        i2u579_40 43EE  
                                      i2u587_40 4322                                        i2u595_41 372C  
                                      i2u579_41 43EA                                        i2u587_41 431E  
                                      i2u596_40 376A                                        i2u588_40 35EA  
                                      i2u659_48 51B8                                        i2u596_41 3766  
                                      i2u588_41 35E6                                        i2u659_49 51CA  
                                      i2u597_40 3778                                        i2u589_40 35F8  
                                      i2u597_41 3774                                        i2u589_41 35F4  
                                      i2u686_40 5376                                        i2u598_40 4F4E  
                                      i2u686_41 5372                                        i2u598_41 4F4A  
                                      i2u599_40 30FC                                        i2u599_41 30F8  
                                      i2u688_40 5216                                        i2u688_41 5212  
                                      _RCONbits 000FD0                       __size_of_SPI_ExchangeByte 001C  
                                      _TMR2_ISR 51FA                                        _PSTR1CON 000F9C  
                              lcd_draw_string@k 009A                                lcd_draw_string@x 008C  
                              lcd_draw_string@y 008E                               ??_PIN_MANAGER_IOC 0001  
                                     _vfpfcnvrt 0088                                       _xtoa$1820 009D  
                                     _xtoa$1821 009F                                        _SPI_Open 4970  
                             ??_TMR1_Initialize 006D                                      _ADCON0bits 000FC2  
                      __size_of_TIMER2_CALLBACK 000A                               ___wmul@multiplier 006D  
                            fp__TIMER2_CALLBACK 0000                                __CFG_SOSCSEL$DIG 000000  
                       __end_of_lcd_draw_string 4018                  ??_TMR2_DefaultInterruptHandler 0001  
                              _EPWM1_Initialize 531A               __size_of_TMR2_SetInterruptHandler 000A  
                     ?_TMR2_SetInterruptHandler 006D                                    _isspace$2424 0073  
                                     msDelay@ms 006E                                      vfpfcnvrt@c 00CD  
                        __size_of_PI_Controller 01F4                               ___lmul@multiplier 0006  
                                   _INTCON2bits 000FF1                                       copy_data0 4AC0  
                                     copy_data1 4AE0                           ?_INTERRUPT_Initialize 0001  
                                     _vsnprintf 4018                               ??_TMR2_Initialize 006F  
                                ?_TMR2_CallBack 0001                                  _turn_off_value 00EE  
                           lcd_draw_pixel@color 0070                                        __Hrparam 0000  
                                    vfprintf@ap 00DA                                        __Lrparam 0000  
                                    vfprintf@fp 00D6                               _ADC_GetConversion 509A  
                                   ??_Out_USART 00E2                              __CFG_BOREN$SBORDIS 000000  
                       __size_of_SPI_Initialize 0012                         ??_OSCILLATOR_Initialize 006D  
                        __size_of_lcd_draw_char 0182                              ?_ADC_GetConversion 0001  
                              __size_of___aldiv 010C                                __size_of___aodiv 018A  
                              __size_of___fladd 04C0                                __size_of___aomod 0166  
                              __size_of___fldiv 039C                                     vsnprintf@ap 0157  
                              __size_of___flmul 042A                                __size_of___flsub 0046  
                              __size_of___fltol 0106                                __size_of___lodiv 00F2  
                              __size_of___lomod 00D2                     __size_of_EUSART1_Initialize 0044  
                                    ?_vfpfcnvrt 00B1                                      snprintf@ap 017B  
                               ___aodiv@divisor 0075                                 ___aodiv@counter 007D  
                        _IOCB4_InterruptHandler 0187                                  _lcd_draw_pixel 5336  
                     ??_EUSART1_SetErrorHandler 006F                     _EUSART1_DefaultErrorHandler 000000  
                           ??_ADC_GetConversion 0003                                        _dc_value 0058  
                              __size_of_msDelay 0038                     __end_of_EUSART1_is_rx_ready 53A8  
                                      ___xxtofl 3420                                __size_of_isalpha 003E  
                              __size_of_isdigit 003A                fp__IOCB4_DefaultInterruptHandler 0000  
                ?_IOCB4_DefaultInterruptHandler 0001                                __size_of_islower 003A  
                              __size_of_isspace 0054                                        __ptext10 4D48  
                                      __ptext11 5336                                        __ptext20 53A8  
                                      __ptext12 52C2                                        __ptext21 4D96  
                                      __ptext13 52FE                                      _T1GCONbits 000FAA  
                                      __ptext30 537E                                        __ptext22 53F0  
                                      __ptext14 5426                                        __ptext31 4970  
                                      __ptext23 53BA                                        __ptext15 542A  
                                      __ptext40 4F74                                        __ptext32 3D8A  
                                      __ptext24 542E                                        __ptext16 529C  
                                      __ptext41 2E38                                        __ptext33 5224  
                                      __ptext25 4E6C                                        __ptext17 52E0  
                                      __ptext50 3918                                        __ptext42 4708  
                                      __ptext34 4B84                                        __ptext26 53FA  
                                      __ptext18 53E6                                        __ptext51 4C48  
                                      __ptext43 4448                                        __ptext35 0088  
                                      __ptext27 5404                                        __ptext19 510C  
                                      __ptext60 5060                                        __ptext52 48A6  
                                      __ptext44 453A                                        __ptext36 26AC  
                                      __ptext28 540E                                        __ptext61 524C  
                                      __ptext53 5026                                        __ptext45 378C  
                                      __ptext37 4BE8                                        __ptext29 531A  
                                      __ptext70 303E                                        __ptext62 3420  
                                      __ptext54 4DDE                                        __ptext46 3232  
                                      __ptext38 4FB2                                        __ptext71 4F34  
                                      __ptext63 5394                                        __ptext55 47DA  
                                      __ptext47 23C8                                        __ptext39 4FEC  
                                      __ptext80 35D8                                        __ptext72 423E  
                                      __ptext64 5274                                        __ptext56 53CC  
                                      __ptext48 4EF2                                        __ptext81 4B1A  
                                      __ptext73 4E26                                        __ptext57 534E  
                                      __ptext49 3C24                                        __ptext82 4132  
                                      __ptext74 130C                                        __ptext66 51FA  
                                      __ptext58 2C28                                        __ptext83 509A  
                                      __ptext75 1C02                                        __ptext67 519E  
                                      __ptext59 4CA6                                        __ptext84 5366  
                                      __ptext76 4344                                        __ptext68 5418  
                                      __ptext85 51CC                                        __ptext77 202C  
                                      __ptext69 5436                                        __ptext86 5432  
                                      __ptext78 516E                                        __ptext87 5438  
                                      __ptext79 4626                                        __ptext88 0000  
                              __size_of_isupper 003A                                        _lcd_fill 4A24  
                                      _lcd_init 17CC                                        _lcd_send 52C2  
                              __size_of_strncmp 00EC                                __size_of_toupper 0060  
                                    ?_vsnprintf 0151                                   __size_of_atoi 0210  
                                 __size_of_ctoa 005E                                   __size_of_main 02A2  
                                 __size_of_dtoa 02E4                                   __size_of_otoa 01EE  
                                 __size_of_stoa 018C                                   __size_of_utoa 0206  
                                 __size_of_xtoa 02DA                           _INTERRUPT_S1_CALLBACK 5432  
                     __end_of_ADC_GetConversion 50D4                                       stoa@F1152 0189  
EUSART1_SetOverrunErrorHandler@interruptHandler 006D                           lcd_draw_char@bg_color 007E  
                                 _PI_Controller 303E                                        _setpoint 0100  
                                      int$flags 005F                                        _vfprintf 4B84  
                         lcd_draw_char@fg_color 007C                               ??_TMR2_StartTimer 006D  
            __end_of_INTERRUPT_InterruptManager 0084                      _INTERRUPT_InterruptManager 0008  
                        __end_of_lcd_draw_pixel 534E                                        _snprintf 513E  
                                     printf@fmt 0151                        __end_of_lcd_set_cursor_x 4D96  
                      __end_of_lcd_set_cursor_y 4D48                     _EUSART1_FramingErrorHandler 0183  
                           __CFG_INTOSCSEL$HIGH 000000                                        msDelay@k 006F  
                              ___aomod@dividend 006D                                  _vfpfcnvrt$1835 00BF  
                                _vfpfcnvrt$1836 00C1                                      _INTCONbits 000FF2  
                              ?_lcd_draw_string 008C                                        isalpha@c 006D  
                                      isdigit@c 006D                          ??_INTERRUPT_Initialize 006D  
                             ??_TIMER2_CALLBACK 0054                                      vsnprintf@f 015D  
                                    vsnprintf@n 0153                                      vsnprintf@s 0151  
                                 _lcd_draw_char 3AA2                                       snprintf@n 0165  
                                     snprintf@s 0163                                        intlevel2 0000  
                                _lcd_set_cursor 4EB0                                 ??_TMR2_CallBack 0054  
                               i2___xxtofl@sign 0028                               lcd_set_cursor_x@x 0070  
                             lcd_set_cursor_y@y 0070                                        islower@c 006D  
                                      isspace@c 006D                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 5404         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 53FA                                      _RCSTA1bits 000FAB  
                                      isupper@c 006D                                       strncmp@_l 006D  
                                     strncmp@_r 006F                                ??_ADC_Initialize 006D  
                                ?_PI_Controller 0001                                _SPI_ExchangeByte 52FE  
                       lcd_draw_string@bg_color 0094                                        printf@ap 00E0  
                            __CFG_WDTPS$1048576 000000  EUSART1_SetFramingErrorHandler@interruptHandler 006D  
                               ___aomod@divisor 0075                         lcd_draw_string@fg_color 0092  
                               ?_lcd_draw_pixel 0070                                     ??_vfpfcnvrt 00B7  
                              ??_TMR2_StopTimer 006D                                        stoa@nuls 007D  
                               ___aomod@counter 007D                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 005E                                  _vsnprintf$2542 0159  
                         TMR2_ISR@CountCallBack 005C                                        strncmp@l 0074  
                                      strncmp@n 0071                                        strncmp@r 0076  
                                      toupper@c 0073                                    ___aldiv@sign 001B  
                           _EPWM1_LoadDutyValue 516E                                     _SSPCON1bits 000FC6  
                        __end_of_lcd_set_cursor 4EF2                                  ?_lcd_draw_char 0076  
                                 ___fladd@signs 000D                                    ___aodiv@sign 007E  
                __end_of_PIN_MANAGER_Initialize 4DDE                                     ??_vsnprintf 00DE  
                                  ___fladd@aexp 000E                                    ___fladd@bexp 000F  
                           __CFG_BORPWR$ZPBORMV 000000                          ?_INTERRUPT_S1_CALLBACK 0001  
                               _PIN_MANAGER_IOC 5366                           _TMR2_InterruptHandler 017D  
                    __size_of_ADC_GetConversion 003A                                    ___aomod@sign 007E  
                               _TMR1_Initialize 510C                        __end_of_EPWM1_Initialize 5336  
                          ?_EPWM1_LoadDutyValue 000B  
