

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 16 13:36:42 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109  0000                     
   110                           ; Version 2.10
   111                           ; Generated 31/07/2019 GMT
   112                           ; 
   113                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F46K80 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     
   145 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   146  0000                     
   147 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   148  0000                     
   149 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   150  0000                     
   151                           	psect	idataBANK0
   152  00546C                     __pidataBANK0:
   153                           	opt callstack 0
   154                           
   155                           ;initializer for _turn_off_value
   156  00546C  000A               	dw	10
   157                           
   158                           ;initializer for _turn_on_value
   159  00546E  0014               	dw	20
   160                           
   161                           	psect	idataBANK1
   162  005424                     __pidataBANK1:
   163                           	opt callstack 0
   164                           
   165                           ;initializer for stoa@F1152
   166  005424  28                 	db	40
   167  005425  6E                 	db	110
   168  005426  75                 	db	117
   169  005427  6C                 	db	108
   170  005428  6C                 	db	108
   171  005429  29                 	db	41
   172  00542A  00                 	db	0
   173                           
   174                           ;initializer for _Ki
   175  00542B  0002               	dw	2
   176                           
   177                           ;initializer for _KP
   178  00542D  0032               	dw	50
   179                           
   180                           	psect	mediumconst
   181  00F10C                     __pmediumconst:
   182                           	opt callstack 0
   183  00F10C  00                 	db	0
   184  00F10D                     _font:
   185                           	opt callstack 0
   186  00F10D  0004               	dw	4
   187  00F10F  0000               	dw	0
   188  00F111  0000               	dw	0
   189  00F113  0000               	dw	0
   190  00F115  0000               	dw	0
   191  00F117  0000               	dw	0
   192  00F119  0000               	dw	0
   193  00F11B  0000               	dw	0
   194  00F11D  0000               	dw	0
   195  00F11F  0003               	dw	3
   196  00F121  0000               	dw	0
   197  00F123  0000               	dw	0
   198  00F125  00FE               	dw	254
   199  00F127  001B               	dw	27
   200  00F129  0000               	dw	0
   201  00F12B  0000               	dw	0
   202  00F12D  0005               	dw	5
   203  00F12F  001E               	dw	30
   204  00F131  0000               	dw	0
   205  00F133  0000               	dw	0
   206  00F135  0000               	dw	0
   207  00F137  0000               	dw	0
   208  00F139  0000               	dw	0
   209  00F13B  001E               	dw	30
   210  00F13D  0000               	dw	0
   211  00F13F  0000               	dw	0
   212  00F141  0000               	dw	0
   213  00F143  000B               	dw	11
   214  00F145  0000               	dw	0
   215  00F147  0000               	dw	0
   216  00F149  0010               	dw	16
   217  00F14B  0001               	dw	1
   218  00F14D  0010               	dw	16
   219  00F14F  001D               	dw	29
   220  00F151  00F0               	dw	240
   221  00F153  0003               	dw	3
   222  00F155  001E               	dw	30
   223  00F157  0001               	dw	1
   224  00F159  0010               	dw	16
   225  00F15B  0001               	dw	1
   226  00F15D  0010               	dw	16
   227  00F15F  001D               	dw	29
   228  00F161  00F0               	dw	240
   229  00F163  0003               	dw	3
   230  00F165  001E               	dw	30
   231  00F167  0001               	dw	1
   232  00F169  0010               	dw	16
   233  00F16B  0001               	dw	1
   234  00F16D  0000               	dw	0
   235  00F16F  0000               	dw	0
   236  00F171  0009               	dw	9
   237  00F173  0000               	dw	0
   238  00F175  0004               	dw	4
   239  00F177  001C               	dw	28
   240  00F179  0008               	dw	8
   241  00F17B  0022               	dw	34
   242  00F17D  0010               	dw	16
   243  00F17F  0042               	dw	66
   244  00F181  0010               	dw	16
   245  00F183  00FF               	dw	255
   246  00F185  007F               	dw	127
   247  00F187  0042               	dw	66
   248  00F189  0010               	dw	16
   249  00F18B  0084               	dw	132
   250  00F18D  0010               	dw	16
   251  00F18F  0000               	dw	0
   252  00F191  000F               	dw	15
   253  00F193  0000               	dw	0
   254  00F195  0000               	dw	0
   255  00F197  000C               	dw	12
   256  00F199  001C               	dw	28
   257  00F19B  0000               	dw	0
   258  00F19D  0022               	dw	34
   259  00F19F  0010               	dw	16
   260  00F1A1  0022               	dw	34
   261  00F1A3  0008               	dw	8
   262  00F1A5  0022               	dw	34
   263  00F1A7  0006               	dw	6
   264  00F1A9  001C               	dw	28
   265  00F1AB  0001               	dw	1
   266  00F1AD  00C0               	dw	192
   267  00F1AF  0000               	dw	0
   268  00F1B1  0020               	dw	32
   269  00F1B3  000E               	dw	14
   270  00F1B5  0018               	dw	24
   271  00F1B7  0011               	dw	17
   272  00F1B9  0004               	dw	4
   273  00F1BB  0011               	dw	17
   274  00F1BD  0002               	dw	2
   275  00F1BF  0011               	dw	17
   276  00F1C1  0000               	dw	0
   277  00F1C3  000E               	dw	14
   278  00F1C5  0000               	dw	0
   279  00F1C7  0000               	dw	0
   280  00F1C9  000B               	dw	11
   281  00F1CB  0000               	dw	0
   282  00F1CD  0000               	dw	0
   283  00F1CF  0000               	dw	0
   284  00F1D1  000E               	dw	14
   285  00F1D3  001C               	dw	28
   286  00F1D5  0011               	dw	17
   287  00F1D7  00A2               	dw	162
   288  00F1D9  0010               	dw	16
   289  00F1DB  00C2               	dw	194
   290  00F1DD  0010               	dw	16
   291  00F1DF  0022               	dw	34
   292  00F1E1  0011               	dw	17
   293  00F1E3  001C               	dw	28
   294  00F1E5  000A               	dw	10
   295  00F1E7  0000               	dw	0
   296  00F1E9  000C               	dw	12
   297  00F1EB  0000               	dw	0
   298  00F1ED  000C               	dw	12
   299  00F1EF  0000               	dw	0
   300  00F1F1  0012               	dw	18
   301  00F1F3  0000               	dw	0
   302  00F1F5  0000               	dw	0
   303  00F1F7  0003               	dw	3
   304  00F1F9  0000               	dw	0
   305  00F1FB  0000               	dw	0
   306  00F1FD  001E               	dw	30
   307  00F1FF  0000               	dw	0
   308  00F201  0000               	dw	0
   309  00F203  0000               	dw	0
   310  00F205  0006               	dw	6
   311  00F207  0000               	dw	0
   312  00F209  0000               	dw	0
   313  00F20B  0000               	dw	0
   314  00F20D  0000               	dw	0
   315  00F20F  00E0               	dw	224
   316  00F211  001F               	dw	31
   317  00F213  001C               	dw	28
   318  00F215  0060               	dw	96
   319  00F217  0002               	dw	2
   320  00F219  0080               	dw	128
   321  00F21B  0000               	dw	0
   322  00F21D  0000               	dw	0
   323  00F21F  0004               	dw	4
   324  00F221  0000               	dw	0
   325  00F223  0000               	dw	0
   326  00F225  0006               	dw	6
   327  00F227  00C0               	dw	192
   328  00F229  00F8               	dw	248
   329  00F22B  003F               	dw	63
   330  00F22D  0000               	dw	0
   331  00F22F  0000               	dw	0
   332  00F231  0006               	dw	6
   333  00F233  0024               	dw	36
   334  00F235  0000               	dw	0
   335  00F237  0018               	dw	24
   336  00F239  0000               	dw	0
   337  00F23B  007E               	dw	126
   338  00F23D  0000               	dw	0
   339  00F23F  0018               	dw	24
   340  00F241  0000               	dw	0
   341  00F243  0024               	dw	36
   342  00F245  0000               	dw	0
   343  00F247  0000               	dw	0
   344  00F249  0000               	dw	0
   345  00F24B  0009               	dw	9
   346  00F24D  0000               	dw	0
   347  00F24F  0000               	dw	0
   348  00F251  0080               	dw	128
   349  00F253  0000               	dw	0
   350  00F255  0080               	dw	128
   351  00F257  0000               	dw	0
   352  00F259  0080               	dw	128
   353  00F25B  0000               	dw	0
   354  00F25D  00F0               	dw	240
   355  00F25F  0007               	dw	7
   356  00F261  0080               	dw	128
   357  00F263  0000               	dw	0
   358  00F265  0080               	dw	128
   359  00F267  0000               	dw	0
   360  00F269  0080               	dw	128
   361  00F26B  0000               	dw	0
   362  00F26D  0000               	dw	0
   363  00F26F  0000               	dw	0
   364  00F271  0004               	dw	4
   365  00F273  0000               	dw	0
   366  00F275  0000               	dw	0
   367  00F277  0000               	dw	0
   368  00F279  0060               	dw	96
   369  00F27B  0000               	dw	0
   370  00F27D  0018               	dw	24
   371  00F27F  0000               	dw	0
   372  00F281  0000               	dw	0
   373  00F283  0005               	dw	5
   374  00F285  0000               	dw	0
   375  00F287  0001               	dw	1
   376  00F289  0000               	dw	0
   377  00F28B  0001               	dw	1
   378  00F28D  0000               	dw	0
   379  00F28F  0001               	dw	1
   380  00F291  0000               	dw	0
   381  00F293  0001               	dw	1
   382  00F295  0000               	dw	0
   383  00F297  0000               	dw	0
   384  00F299  0004               	dw	4
   385  00F29B  0000               	dw	0
   386  00F29D  0000               	dw	0
   387  00F29F  0000               	dw	0
   388  00F2A1  0018               	dw	24
   389  00F2A3  0000               	dw	0
   390  00F2A5  0018               	dw	24
   391  00F2A7  0000               	dw	0
   392  00F2A9  0000               	dw	0
   393  00F2AB  0008               	dw	8
   394  00F2AD  0000               	dw	0
   395  00F2AF  0000               	dw	0
   396  00F2B1  0000               	dw	0
   397  00F2B3  0040               	dw	64
   398  00F2B5  0000               	dw	0
   399  00F2B7  0038               	dw	56
   400  00F2B9  0000               	dw	0
   401  00F2BB  0007               	dw	7
   402  00F2BD  00E0               	dw	224
   403  00F2BF  0000               	dw	0
   404  00F2C1  001C               	dw	28
   405  00F2C3  0000               	dw	0
   406  00F2C5  0002               	dw	2
   407  00F2C7  0000               	dw	0
   408  00F2C9  0000               	dw	0
   409  00F2CB  0000               	dw	0
   410  00F2CD  0009               	dw	9
   411  00F2CF  00F8               	dw	248
   412  00F2D1  0007               	dw	7
   413  00F2D3  0004               	dw	4
   414  00F2D5  0008               	dw	8
   415  00F2D7  0002               	dw	2
   416  00F2D9  0010               	dw	16
   417  00F2DB  0002               	dw	2
   418  00F2DD  0010               	dw	16
   419  00F2DF  0002               	dw	2
   420  00F2E1  0010               	dw	16
   421  00F2E3  0002               	dw	2
   422  00F2E5  0010               	dw	16
   423  00F2E7  0004               	dw	4
   424  00F2E9  0008               	dw	8
   425  00F2EB  00F8               	dw	248
   426  00F2ED  0007               	dw	7
   427  00F2EF  0000               	dw	0
   428  00F2F1  0000               	dw	0
   429  00F2F3  0009               	dw	9
   430  00F2F5  0000               	dw	0
   431  00F2F7  0000               	dw	0
   432  00F2F9  0000               	dw	0
   433  00F2FB  0000               	dw	0
   434  00F2FD  0000               	dw	0
   435  00F2FF  0000               	dw	0
   436  00F301  0000               	dw	0
   437  00F303  0000               	dw	0
   438  00F305  0000               	dw	0
   439  00F307  0000               	dw	0
   440  00F309  0002               	dw	2
   441  00F30B  0000               	dw	0
   442  00F30D  0002               	dw	2
   443  00F30F  0000               	dw	0
   444  00F311  00FE               	dw	254
   445  00F313  001F               	dw	31
   446  00F315  0000               	dw	0
   447  00F317  0000               	dw	0
   448  00F319  0009               	dw	9
   449  00F31B  0018               	dw	24
   450  00F31D  0010               	dw	16
   451  00F31F  0004               	dw	4
   452  00F321  0018               	dw	24
   453  00F323  0002               	dw	2
   454  00F325  0014               	dw	20
   455  00F327  0002               	dw	2
   456  00F329  0012               	dw	18
   457  00F32B  0002               	dw	2
   458  00F32D  0011               	dw	17
   459  00F32F  0082               	dw	130
   460  00F331  0010               	dw	16
   461  00F333  0044               	dw	68
   462  00F335  0010               	dw	16
   463  00F337  0038               	dw	56
   464  00F339  0010               	dw	16
   465  00F33B  0000               	dw	0
   466  00F33D  0000               	dw	0
   467  00F33F  0009               	dw	9
   468  00F341  0008               	dw	8
   469  00F343  000C               	dw	12
   470  00F345  0004               	dw	4
   471  00F347  0010               	dw	16
   472  00F349  0002               	dw	2
   473  00F34B  0010               	dw	16
   474  00F34D  0042               	dw	66
   475  00F34F  0010               	dw	16
   476  00F351  0042               	dw	66
   477  00F353  0010               	dw	16
   478  00F355  0044               	dw	68
   479  00F357  0010               	dw	16
   480  00F359  00B8               	dw	184
   481  00F35B  0008               	dw	8
   482  00F35D  0000               	dw	0
   483  00F35F  0007               	dw	7
   484  00F361  0000               	dw	0
   485  00F363  0000               	dw	0
   486  00F365  0009               	dw	9
   487  00F367  0000               	dw	0
   488  00F369  0002               	dw	2
   489  00F36B  0000               	dw	0
   490  00F36D  0003               	dw	3
   491  00F36F  0080               	dw	128
   492  00F371  0002               	dw	2
   493  00F373  0060               	dw	96
   494  00F375  0002               	dw	2
   495  00F377  0010               	dw	16
   496  00F379  0002               	dw	2
   497  00F37B  0008               	dw	8
   498  00F37D  0002               	dw	2
   499  00F37F  00FE               	dw	254
   500  00F381  001F               	dw	31
   501  00F383  0000               	dw	0
   502  00F385  0002               	dw	2
   503  00F387  0000               	dw	0
   504  00F389  0000               	dw	0
   505  00F38B  0009               	dw	9
   506  00F38D  0000               	dw	0
   507  00F38F  0004               	dw	4
   508  00F391  0070               	dw	112
   509  00F393  0008               	dw	8
   510  00F395  002E               	dw	46
   511  00F397  0010               	dw	16
   512  00F399  0022               	dw	34
   513  00F39B  0010               	dw	16
   514  00F39D  0022               	dw	34
   515  00F39F  0010               	dw	16
   516  00F3A1  0022               	dw	34
   517  00F3A3  0010               	dw	16
   518  00F3A5  0042               	dw	66
   519  00F3A7  0008               	dw	8
   520  00F3A9  0082               	dw	130
   521  00F3AB  0007               	dw	7
   522  00F3AD  0000               	dw	0
   523  00F3AF  0000               	dw	0
   524  00F3B1  0009               	dw	9
   525  00F3B3  0000               	dw	0
   526  00F3B5  0000               	dw	0
   527  00F3B7  0000               	dw	0
   528  00F3B9  0007               	dw	7
   529  00F3BB  00C0               	dw	192
   530  00F3BD  0008               	dw	8
   531  00F3BF  0060               	dw	96
   532  00F3C1  0010               	dw	16
   533  00F3C3  0058               	dw	88
   534  00F3C5  0010               	dw	16
   535  00F3C7  0044               	dw	68
   536  00F3C9  0010               	dw	16
   537  00F3CB  0082               	dw	130
   538  00F3CD  0008               	dw	8
   539  00F3CF  0000               	dw	0
   540  00F3D1  0007               	dw	7
   541  00F3D3  0000               	dw	0
   542  00F3D5  0000               	dw	0
   543  00F3D7  0009               	dw	9
   544  00F3D9  0000               	dw	0
   545  00F3DB  0000               	dw	0
   546  00F3DD  0002               	dw	2
   547  00F3DF  0010               	dw	16
   548  00F3E1  0002               	dw	2
   549  00F3E3  000C               	dw	12
   550  00F3E5  0002               	dw	2
   551  00F3E7  0003               	dw	3
   552  00F3E9  00C2               	dw	194
   553  00F3EB  0000               	dw	0
   554  00F3ED  0032               	dw	50
   555  00F3EF  0000               	dw	0
   556  00F3F1  000E               	dw	14
   557  00F3F3  0000               	dw	0
   558  00F3F5  0002               	dw	2
   559  00F3F7  0000               	dw	0
   560  00F3F9  0000               	dw	0
   561  00F3FB  0000               	dw	0
   562  00F3FD  0009               	dw	9
   563  00F3FF  0000               	dw	0
   564  00F401  0007               	dw	7
   565  00F403  0098               	dw	152
   566  00F405  0008               	dw	8
   567  00F407  0064               	dw	100
   568  00F409  0010               	dw	16
   569  00F40B  0042               	dw	66
   570  00F40D  0010               	dw	16
   571  00F40F  0042               	dw	66
   572  00F411  0010               	dw	16
   573  00F413  0064               	dw	100
   574  00F415  0010               	dw	16
   575  00F417  0098               	dw	152
   576  00F419  0008               	dw	8
   577  00F41B  0000               	dw	0
   578  00F41D  0007               	dw	7
   579  00F41F  0000               	dw	0
   580  00F421  0000               	dw	0
   581  00F423  0009               	dw	9
   582  00F425  0000               	dw	0
   583  00F427  0000               	dw	0
   584  00F429  0038               	dw	56
   585  00F42B  0000               	dw	0
   586  00F42D  0044               	dw	68
   587  00F42F  0010               	dw	16
   588  00F431  0082               	dw	130
   589  00F433  0008               	dw	8
   590  00F435  0082               	dw	130
   591  00F437  0004               	dw	4
   592  00F439  0082               	dw	130
   593  00F43B  0003               	dw	3
   594  00F43D  0084               	dw	132
   595  00F43F  0000               	dw	0
   596  00F441  0078               	dw	120
   597  00F443  0000               	dw	0
   598  00F445  0000               	dw	0
   599  00F447  0000               	dw	0
   600  00F449  0004               	dw	4
   601  00F44B  0000               	dw	0
   602  00F44D  0000               	dw	0
   603  00F44F  0030               	dw	48
   604  00F451  0018               	dw	24
   605  00F453  0030               	dw	48
   606  00F455  0018               	dw	24
   607  00F457  0000               	dw	0
   608  00F459  0000               	dw	0
   609  00F45B  0004               	dw	4
   610  00F45D  0000               	dw	0
   611  00F45F  0000               	dw	0
   612  00F461  0030               	dw	48
   613  00F463  0060               	dw	96
   614  00F465  0030               	dw	48
   615  00F467  0018               	dw	24
   616  00F469  0000               	dw	0
   617  00F46B  0000               	dw	0
   618  00F46D  000A               	dw	10
   619  00F46F  0000               	dw	0
   620  00F471  0000               	dw	0
   621  00F473  0080               	dw	128
   622  00F475  0000               	dw	0
   623  00F477  0080               	dw	128
   624  00F479  0000               	dw	0
   625  00F47B  0040               	dw	64
   626  00F47D  0001               	dw	1
   627  00F47F  0020               	dw	32
   628  00F481  0002               	dw	2
   629  00F483  0020               	dw	32
   630  00F485  0002               	dw	2
   631  00F487  0010               	dw	16
   632  00F489  0004               	dw	4
   633  00F48B  0010               	dw	16
   634  00F48D  0004               	dw	4
   635  00F48F  0008               	dw	8
   636  00F491  0008               	dw	8
   637  00F493  0000               	dw	0
   638  00F495  0000               	dw	0
   639  00F497  000A               	dw	10
   640  00F499  0000               	dw	0
   641  00F49B  0000               	dw	0
   642  00F49D  0020               	dw	32
   643  00F49F  0001               	dw	1
   644  00F4A1  0020               	dw	32
   645  00F4A3  0001               	dw	1
   646  00F4A5  0020               	dw	32
   647  00F4A7  0001               	dw	1
   648  00F4A9  0020               	dw	32
   649  00F4AB  0001               	dw	1
   650  00F4AD  0020               	dw	32
   651  00F4AF  0001               	dw	1
   652  00F4B1  0020               	dw	32
   653  00F4B3  0001               	dw	1
   654  00F4B5  0020               	dw	32
   655  00F4B7  0001               	dw	1
   656  00F4B9  0020               	dw	32
   657  00F4BB  0001               	dw	1
   658  00F4BD  0000               	dw	0
   659  00F4BF  0000               	dw	0
   660  00F4C1  000A               	dw	10
   661  00F4C3  0000               	dw	0
   662  00F4C5  0000               	dw	0
   663  00F4C7  0008               	dw	8
   664  00F4C9  0008               	dw	8
   665  00F4CB  0010               	dw	16
   666  00F4CD  0004               	dw	4
   667  00F4CF  0010               	dw	16
   668  00F4D1  0004               	dw	4
   669  00F4D3  0020               	dw	32
   670  00F4D5  0002               	dw	2
   671  00F4D7  0020               	dw	32
   672  00F4D9  0002               	dw	2
   673  00F4DB  0040               	dw	64
   674  00F4DD  0001               	dw	1
   675  00F4DF  0080               	dw	128
   676  00F4E1  0000               	dw	0
   677  00F4E3  0080               	dw	128
   678  00F4E5  0000               	dw	0
   679  00F4E7  0000               	dw	0
   680  00F4E9  0000               	dw	0
   681  00F4EB  0008               	dw	8
   682  00F4ED  0000               	dw	0
   683  00F4EF  0000               	dw	0
   684  00F4F1  000C               	dw	12
   685  00F4F3  0000               	dw	0
   686  00F4F5  0082               	dw	130
   687  00F4F7  0001               	dw	1
   688  00F4F9  0042               	dw	66
   689  00F4FB  0002               	dw	2
   690  00F4FD  0022               	dw	34
   691  00F4FF  001A               	dw	26
   692  00F501  0022               	dw	34
   693  00F503  001A               	dw	26
   694  00F505  009C               	dw	156
   695  00F507  0001               	dw	1
   696  00F509  0000               	dw	0
   697  00F50B  0000               	dw	0
   698  00F50D  000E               	dw	14
   699  00F50F  0000               	dw	0
   700  00F511  0000               	dw	0
   701  00F513  00F0               	dw	240
   702  00F515  0003               	dw	3
   703  00F517  0008               	dw	8
   704  00F519  0004               	dw	4
   705  00F51B  0004               	dw	4
   706  00F51D  0008               	dw	8
   707  00F51F  00C2               	dw	194
   708  00F521  0011               	dw	17
   709  00F523  0022               	dw	34
   710  00F525  0012               	dw	18
   711  00F527  0012               	dw	18
   712  00F529  0012               	dw	18
   713  00F52B  0012               	dw	18
   714  00F52D  0012               	dw	18
   715  00F52F  00E2               	dw	226
   716  00F531  0011               	dw	17
   717  00F533  0012               	dw	18
   718  00F535  0012               	dw	18
   719  00F537  0004               	dw	4
   720  00F539  0012               	dw	18
   721  00F53B  0008               	dw	8
   722  00F53D  0009               	dw	9
   723  00F53F  00F0               	dw	240
   724  00F541  0004               	dw	4
   725  00F543  0000               	dw	0
   726  00F545  0000               	dw	0
   727  00F547  000D               	dw	13
   728  00F549  0000               	dw	0
   729  00F54B  0000               	dw	0
   730  00F54D  0000               	dw	0
   731  00F54F  0010               	dw	16
   732  00F551  0000               	dw	0
   733  00F553  000E               	dw	14
   734  00F555  0080               	dw	128
   735  00F557  0001               	dw	1
   736  00F559  0060               	dw	96
   737  00F55B  0001               	dw	1
   738  00F55D  001C               	dw	28
   739  00F55F  0001               	dw	1
   740  00F561  0002               	dw	2
   741  00F563  0001               	dw	1
   742  00F565  001C               	dw	28
   743  00F567  0001               	dw	1
   744  00F569  0060               	dw	96
   745  00F56B  0001               	dw	1
   746  00F56D  0080               	dw	128
   747  00F56F  0001               	dw	1
   748  00F571  0000               	dw	0
   749  00F573  000E               	dw	14
   750  00F575  0000               	dw	0
   751  00F577  0010               	dw	16
   752  00F579  0000               	dw	0
   753  00F57B  0000               	dw	0
   754  00F57D  0009               	dw	9
   755  00F57F  0000               	dw	0
   756  00F581  0000               	dw	0
   757  00F583  0000               	dw	0
   758  00F585  0000               	dw	0
   759  00F587  00FE               	dw	254
   760  00F589  001F               	dw	31
   761  00F58B  0042               	dw	66
   762  00F58D  0010               	dw	16
   763  00F58F  0042               	dw	66
   764  00F591  0010               	dw	16
   765  00F593  0064               	dw	100
   766  00F595  0010               	dw	16
   767  00F597  0098               	dw	152
   768  00F599  0008               	dw	8
   769  00F59B  0000               	dw	0
   770  00F59D  0007               	dw	7
   771  00F59F  0000               	dw	0
   772  00F5A1  0000               	dw	0
   773  00F5A3  000D               	dw	13
   774  00F5A5  0000               	dw	0
   775  00F5A7  0000               	dw	0
   776  00F5A9  00F0               	dw	240
   777  00F5AB  0003               	dw	3
   778  00F5AD  0008               	dw	8
   779  00F5AF  0004               	dw	4
   780  00F5B1  0004               	dw	4
   781  00F5B3  0008               	dw	8
   782  00F5B5  0002               	dw	2
   783  00F5B7  0010               	dw	16
   784  00F5B9  0002               	dw	2
   785  00F5BB  0010               	dw	16
   786  00F5BD  0002               	dw	2
   787  00F5BF  0010               	dw	16
   788  00F5C1  0002               	dw	2
   789  00F5C3  0010               	dw	16
   790  00F5C5  0002               	dw	2
   791  00F5C7  0010               	dw	16
   792  00F5C9  0004               	dw	4
   793  00F5CB  0008               	dw	8
   794  00F5CD  0004               	dw	4
   795  00F5CF  0008               	dw	8
   796  00F5D1  0008               	dw	8
   797  00F5D3  0004               	dw	4
   798  00F5D5  0000               	dw	0
   799  00F5D7  0000               	dw	0
   800  00F5D9  000C               	dw	12
   801  00F5DB  0000               	dw	0
   802  00F5DD  0000               	dw	0
   803  00F5DF  0000               	dw	0
   804  00F5E1  0000               	dw	0
   805  00F5E3  00FE               	dw	254
   806  00F5E5  001F               	dw	31
   807  00F5E7  0002               	dw	2
   808  00F5E9  0010               	dw	16
   809  00F5EB  0002               	dw	2
   810  00F5ED  0010               	dw	16
   811  00F5EF  0002               	dw	2
   812  00F5F1  0010               	dw	16
   813  00F5F3  0002               	dw	2
   814  00F5F5  0010               	dw	16
   815  00F5F7  0002               	dw	2
   816  00F5F9  0010               	dw	16
   817  00F5FB  0004               	dw	4
   818  00F5FD  0008               	dw	8
   819  00F5FF  0008               	dw	8
   820  00F601  0004               	dw	4
   821  00F603  00F0               	dw	240
   822  00F605  0003               	dw	3
   823  00F607  0000               	dw	0
   824  00F609  0000               	dw	0
   825  00F60B  0009               	dw	9
   826  00F60D  0000               	dw	0
   827  00F60F  0000               	dw	0
   828  00F611  0000               	dw	0
   829  00F613  0000               	dw	0
   830  00F615  00FE               	dw	254
   831  00F617  001F               	dw	31
   832  00F619  0042               	dw	66
   833  00F61B  0010               	dw	16
   834  00F61D  0042               	dw	66
   835  00F61F  0010               	dw	16
   836  00F621  0042               	dw	66
   837  00F623  0010               	dw	16
   838  00F625  0042               	dw	66
   839  00F627  0010               	dw	16
   840  00F629  0042               	dw	66
   841  00F62B  0010               	dw	16
   842  00F62D  0000               	dw	0
   843  00F62F  0000               	dw	0
   844  00F631  0008               	dw	8
   845  00F633  0000               	dw	0
   846  00F635  0000               	dw	0
   847  00F637  0000               	dw	0
   848  00F639  0000               	dw	0
   849  00F63B  00FE               	dw	254
   850  00F63D  001F               	dw	31
   851  00F63F  0042               	dw	66
   852  00F641  0000               	dw	0
   853  00F643  0042               	dw	66
   854  00F645  0000               	dw	0
   855  00F647  0042               	dw	66
   856  00F649  0000               	dw	0
   857  00F64B  0042               	dw	66
   858  00F64D  0000               	dw	0
   859  00F64F  0000               	dw	0
   860  00F651  0000               	dw	0
   861  00F653  000E               	dw	14
   862  00F655  0000               	dw	0
   863  00F657  0000               	dw	0
   864  00F659  00F0               	dw	240
   865  00F65B  0003               	dw	3
   866  00F65D  0008               	dw	8
   867  00F65F  0004               	dw	4
   868  00F661  0004               	dw	4
   869  00F663  0008               	dw	8
   870  00F665  0002               	dw	2
   871  00F667  0010               	dw	16
   872  00F669  0002               	dw	2
   873  00F66B  0010               	dw	16
   874  00F66D  0002               	dw	2
   875  00F66F  0010               	dw	16
   876  00F671  0002               	dw	2
   877  00F673  0010               	dw	16
   878  00F675  0082               	dw	130
   879  00F677  0010               	dw	16
   880  00F679  0084               	dw	132
   881  00F67B  0010               	dw	16
   882  00F67D  0084               	dw	132
   883  00F67F  0008               	dw	8
   884  00F681  0088               	dw	136
   885  00F683  0004               	dw	4
   886  00F685  0080               	dw	128
   887  00F687  0003               	dw	3
   888  00F689  0000               	dw	0
   889  00F68B  0000               	dw	0
   890  00F68D  000A               	dw	10
   891  00F68F  0000               	dw	0
   892  00F691  0000               	dw	0
   893  00F693  0000               	dw	0
   894  00F695  0000               	dw	0
   895  00F697  00FE               	dw	254
   896  00F699  001F               	dw	31
   897  00F69B  0040               	dw	64
   898  00F69D  0000               	dw	0
   899  00F69F  0040               	dw	64
   900  00F6A1  0000               	dw	0
   901  00F6A3  0040               	dw	64
   902  00F6A5  0000               	dw	0
   903  00F6A7  0040               	dw	64
   904  00F6A9  0000               	dw	0
   905  00F6AB  0040               	dw	64
   906  00F6AD  0000               	dw	0
   907  00F6AF  00FE               	dw	254
   908  00F6B1  001F               	dw	31
   909  00F6B3  0000               	dw	0
   910  00F6B5  0000               	dw	0
   911  00F6B7  0004               	dw	4
   912  00F6B9  0000               	dw	0
   913  00F6BB  0000               	dw	0
   914  00F6BD  0000               	dw	0
   915  00F6BF  0000               	dw	0
   916  00F6C1  00FE               	dw	254
   917  00F6C3  001F               	dw	31
   918  00F6C5  0000               	dw	0
   919  00F6C7  0000               	dw	0
   920  00F6C9  0007               	dw	7
   921  00F6CB  0000               	dw	0
   922  00F6CD  0000               	dw	0
   923  00F6CF  0000               	dw	0
   924  00F6D1  0008               	dw	8
   925  00F6D3  0000               	dw	0
   926  00F6D5  0010               	dw	16
   927  00F6D7  0000               	dw	0
   928  00F6D9  0010               	dw	16
   929  00F6DB  0000               	dw	0
   930  00F6DD  0008               	dw	8
   931  00F6DF  00FE               	dw	254
   932  00F6E1  0007               	dw	7
   933  00F6E3  0000               	dw	0
   934  00F6E5  0000               	dw	0
   935  00F6E7  0009               	dw	9
   936  00F6E9  0000               	dw	0
   937  00F6EB  0000               	dw	0
   938  00F6ED  0000               	dw	0
   939  00F6EF  0000               	dw	0
   940  00F6F1  00FE               	dw	254
   941  00F6F3  001F               	dw	31
   942  00F6F5  0060               	dw	96
   943  00F6F7  0000               	dw	0
   944  00F6F9  0090               	dw	144
   945  00F6FB  0001               	dw	1
   946  00F6FD  0008               	dw	8
   947  00F6FF  0002               	dw	2
   948  00F701  0004               	dw	4
   949  00F703  000C               	dw	12
   950  00F705  0002               	dw	2
   951  00F707  0010               	dw	16
   952  00F709  0000               	dw	0
   953  00F70B  0000               	dw	0
   954  00F70D  0008               	dw	8
   955  00F70F  0000               	dw	0
   956  00F711  0000               	dw	0
   957  00F713  0000               	dw	0
   958  00F715  0000               	dw	0
   959  00F717  00FE               	dw	254
   960  00F719  001F               	dw	31
   961  00F71B  0000               	dw	0
   962  00F71D  0010               	dw	16
   963  00F71F  0000               	dw	0
   964  00F721  0010               	dw	16
   965  00F723  0000               	dw	0
   966  00F725  0010               	dw	16
   967  00F727  0000               	dw	0
   968  00F729  0010               	dw	16
   969  00F72B  0000               	dw	0
   970  00F72D  0000               	dw	0
   971  00F72F  000F               	dw	15
   972  00F731  0000               	dw	0
   973  00F733  0000               	dw	0
   974  00F735  0000               	dw	0
   975  00F737  001C               	dw	28
   976  00F739  00F8               	dw	248
   977  00F73B  0003               	dw	3
   978  00F73D  0006               	dw	6
   979  00F73F  0000               	dw	0
   980  00F741  0038               	dw	56
   981  00F743  0000               	dw	0
   982  00F745  00C0               	dw	192
   983  00F747  0001               	dw	1
   984  00F749  0000               	dw	0
   985  00F74B  000E               	dw	14
   986  00F74D  0000               	dw	0
   987  00F74F  0010               	dw	16
   988  00F751  0000               	dw	0
   989  00F753  000E               	dw	14
   990  00F755  00C0               	dw	192
   991  00F757  0001               	dw	1
   992  00F759  0038               	dw	56
   993  00F75B  0000               	dw	0
   994  00F75D  0006               	dw	6
   995  00F75F  0000               	dw	0
   996  00F761  00F8               	dw	248
   997  00F763  0003               	dw	3
   998  00F765  0000               	dw	0
   999  00F767  001C               	dw	28
  1000  00F769  0000               	dw	0
  1001  00F76B  0000               	dw	0
  1002  00F76D  000B               	dw	11
  1003  00F76F  0000               	dw	0
  1004  00F771  0000               	dw	0
  1005  00F773  0000               	dw	0
  1006  00F775  0000               	dw	0
  1007  00F777  00FE               	dw	254
  1008  00F779  001F               	dw	31
  1009  00F77B  0008               	dw	8
  1010  00F77D  0000               	dw	0
  1011  00F77F  0030               	dw	48
  1012  00F781  0000               	dw	0
  1013  00F783  0040               	dw	64
  1014  00F785  0000               	dw	0
  1015  00F787  0080               	dw	128
  1016  00F789  0000               	dw	0
  1017  00F78B  0000               	dw	0
  1018  00F78D  0003               	dw	3
  1019  00F78F  0000               	dw	0
  1020  00F791  0004               	dw	4
  1021  00F793  00FE               	dw	254
  1022  00F795  001F               	dw	31
  1023  00F797  0000               	dw	0
  1024  00F799  0000               	dw	0
  1025  00F79B  000E               	dw	14
  1026  00F79D  0000               	dw	0
  1027  00F79F  0000               	dw	0
  1028  00F7A1  00F0               	dw	240
  1029  00F7A3  0003               	dw	3
  1030  00F7A5  0008               	dw	8
  1031  00F7A7  0004               	dw	4
  1032  00F7A9  0004               	dw	4
  1033  00F7AB  0008               	dw	8
  1034  00F7AD  0002               	dw	2
  1035  00F7AF  0010               	dw	16
  1036  00F7B1  0002               	dw	2
  1037  00F7B3  0010               	dw	16
  1038  00F7B5  0002               	dw	2
  1039  00F7B7  0010               	dw	16
  1040  00F7B9  0002               	dw	2
  1041  00F7BB  0010               	dw	16
  1042  00F7BD  0002               	dw	2
  1043  00F7BF  0010               	dw	16
  1044  00F7C1  0002               	dw	2
  1045  00F7C3  0010               	dw	16
  1046  00F7C5  0004               	dw	4
  1047  00F7C7  0008               	dw	8
  1048  00F7C9  0008               	dw	8
  1049  00F7CB  0004               	dw	4
  1050  00F7CD  00F0               	dw	240
  1051  00F7CF  0003               	dw	3
  1052  00F7D1  0000               	dw	0
  1053  00F7D3  0000               	dw	0
  1054  00F7D5  0009               	dw	9
  1055  00F7D7  0000               	dw	0
  1056  00F7D9  0000               	dw	0
  1057  00F7DB  0000               	dw	0
  1058  00F7DD  0000               	dw	0
  1059  00F7DF  00FE               	dw	254
  1060  00F7E1  001F               	dw	31
  1061  00F7E3  0042               	dw	66
  1062  00F7E5  0000               	dw	0
  1063  00F7E7  0042               	dw	66
  1064  00F7E9  0000               	dw	0
  1065  00F7EB  0042               	dw	66
  1066  00F7ED  0000               	dw	0
  1067  00F7EF  0024               	dw	36
  1068  00F7F1  0000               	dw	0
  1069  00F7F3  0018               	dw	24
  1070  00F7F5  0000               	dw	0
  1071  00F7F7  0000               	dw	0
  1072  00F7F9  0000               	dw	0
  1073  00F7FB  000E               	dw	14
  1074  00F7FD  0000               	dw	0
  1075  00F7FF  0000               	dw	0
  1076  00F801  00F0               	dw	240
  1077  00F803  0003               	dw	3
  1078  00F805  0008               	dw	8
  1079  00F807  0004               	dw	4
  1080  00F809  0004               	dw	4
  1081  00F80B  0008               	dw	8
  1082  00F80D  0002               	dw	2
  1083  00F80F  0010               	dw	16
  1084  00F811  0002               	dw	2
  1085  00F813  0010               	dw	16
  1086  00F815  0002               	dw	2
  1087  00F817  0010               	dw	16
  1088  00F819  0002               	dw	2
  1089  00F81B  0011               	dw	17
  1090  00F81D  0002               	dw	2
  1091  00F81F  0012               	dw	18
  1092  00F821  0002               	dw	2
  1093  00F823  000C               	dw	12
  1094  00F825  0004               	dw	4
  1095  00F827  0008               	dw	8
  1096  00F829  0008               	dw	8
  1097  00F82B  0016               	dw	22
  1098  00F82D  00F0               	dw	240
  1099  00F82F  0021               	dw	33
  1100  00F831  0000               	dw	0
  1101  00F833  0000               	dw	0
  1102  00F835  000A               	dw	10
  1103  00F837  0000               	dw	0
  1104  00F839  0000               	dw	0
  1105  00F83B  0000               	dw	0
  1106  00F83D  0000               	dw	0
  1107  00F83F  00FE               	dw	254
  1108  00F841  001F               	dw	31
  1109  00F843  0042               	dw	66
  1110  00F845  0000               	dw	0
  1111  00F847  00C2               	dw	194
  1112  00F849  0000               	dw	0
  1113  00F84B  0042               	dw	66
  1114  00F84D  0001               	dw	1
  1115  00F84F  0042               	dw	66
  1116  00F851  0006               	dw	6
  1117  00F853  0024               	dw	36
  1118  00F855  0008               	dw	8
  1119  00F857  0018               	dw	24
  1120  00F859  0010               	dw	16
  1121  00F85B  0000               	dw	0
  1122  00F85D  0000               	dw	0
  1123  00F85F  0008               	dw	8
  1124  00F861  0000               	dw	0
  1125  00F863  0004               	dw	4
  1126  00F865  0018               	dw	24
  1127  00F867  0008               	dw	8
  1128  00F869  0024               	dw	36
  1129  00F86B  0010               	dw	16
  1130  00F86D  0042               	dw	66
  1131  00F86F  0010               	dw	16
  1132  00F871  0042               	dw	66
  1133  00F873  0010               	dw	16
  1134  00F875  0084               	dw	132
  1135  00F877  0008               	dw	8
  1136  00F879  0008               	dw	8
  1137  00F87B  0007               	dw	7
  1138  00F87D  0000               	dw	0
  1139  00F87F  0000               	dw	0
  1140  00F881  0008               	dw	8
  1141  00F883  0002               	dw	2
  1142  00F885  0000               	dw	0
  1143  00F887  0002               	dw	2
  1144  00F889  0000               	dw	0
  1145  00F88B  0002               	dw	2
  1146  00F88D  0000               	dw	0
  1147  00F88F  00FE               	dw	254
  1148  00F891  001F               	dw	31
  1149  00F893  0002               	dw	2
  1150  00F895  0000               	dw	0
  1151  00F897  0002               	dw	2
  1152  00F899  0000               	dw	0
  1153  00F89B  0002               	dw	2
  1154  00F89D  0000               	dw	0
  1155  00F89F  0000               	dw	0
  1156  00F8A1  0000               	dw	0
  1157  00F8A3  000A               	dw	10
  1158  00F8A5  0000               	dw	0
  1159  00F8A7  0000               	dw	0
  1160  00F8A9  0000               	dw	0
  1161  00F8AB  0000               	dw	0
  1162  00F8AD  00FE               	dw	254
  1163  00F8AF  0007               	dw	7
  1164  00F8B1  0000               	dw	0
  1165  00F8B3  0008               	dw	8
  1166  00F8B5  0000               	dw	0
  1167  00F8B7  0010               	dw	16
  1168  00F8B9  0000               	dw	0
  1169  00F8BB  0010               	dw	16
  1170  00F8BD  0000               	dw	0
  1171  00F8BF  0010               	dw	16
  1172  00F8C1  0000               	dw	0
  1173  00F8C3  0008               	dw	8
  1174  00F8C5  00FE               	dw	254
  1175  00F8C7  0007               	dw	7
  1176  00F8C9  0000               	dw	0
  1177  00F8CB  0000               	dw	0
  1178  00F8CD  000C               	dw	12
  1179  00F8CF  0002               	dw	2
  1180  00F8D1  0000               	dw	0
  1181  00F8D3  001C               	dw	28
  1182  00F8D5  0000               	dw	0
  1183  00F8D7  0060               	dw	96
  1184  00F8D9  0000               	dw	0
  1185  00F8DB  0080               	dw	128
  1186  00F8DD  0001               	dw	1
  1187  00F8DF  0000               	dw	0
  1188  00F8E1  000E               	dw	14
  1189  00F8E3  0000               	dw	0
  1190  00F8E5  0010               	dw	16
  1191  00F8E7  0000               	dw	0
  1192  00F8E9  000E               	dw	14
  1193  00F8EB  0080               	dw	128
  1194  00F8ED  0001               	dw	1
  1195  00F8EF  0060               	dw	96
  1196  00F8F1  0000               	dw	0
  1197  00F8F3  001C               	dw	28
  1198  00F8F5  0000               	dw	0
  1199  00F8F7  0002               	dw	2
  1200  00F8F9  0000               	dw	0
  1201  00F8FB  0000               	dw	0
  1202  00F8FD  0000               	dw	0
  1203  00F8FF  000F               	dw	15
  1204  00F901  0000               	dw	0
  1205  00F903  0000               	dw	0
  1206  00F905  0006               	dw	6
  1207  00F907  0000               	dw	0
  1208  00F909  0078               	dw	120
  1209  00F90B  0000               	dw	0
  1210  00F90D  0080               	dw	128
  1211  00F90F  0007               	dw	7
  1212  00F911  0000               	dw	0
  1213  00F913  0018               	dw	24
  1214  00F915  0080               	dw	128
  1215  00F917  0007               	dw	7
  1216  00F919  0078               	dw	120
  1217  00F91B  0000               	dw	0
  1218  00F91D  0006               	dw	6
  1219  00F91F  0000               	dw	0
  1220  00F921  0078               	dw	120
  1221  00F923  0000               	dw	0
  1222  00F925  0080               	dw	128
  1223  00F927  0007               	dw	7
  1224  00F929  0000               	dw	0
  1225  00F92B  0018               	dw	24
  1226  00F92D  0080               	dw	128
  1227  00F92F  0007               	dw	7
  1228  00F931  0078               	dw	120
  1229  00F933  0000               	dw	0
  1230  00F935  0006               	dw	6
  1231  00F937  0000               	dw	0
  1232  00F939  0000               	dw	0
  1233  00F93B  0000               	dw	0
  1234  00F93D  0009               	dw	9
  1235  00F93F  0000               	dw	0
  1236  00F941  0000               	dw	0
  1237  00F943  0006               	dw	6
  1238  00F945  0018               	dw	24
  1239  00F947  0008               	dw	8
  1240  00F949  0004               	dw	4
  1241  00F94B  0030               	dw	48
  1242  00F94D  0003               	dw	3
  1243  00F94F  00C0               	dw	192
  1244  00F951  0000               	dw	0
  1245  00F953  0030               	dw	48
  1246  00F955  0003               	dw	3
  1247  00F957  0008               	dw	8
  1248  00F959  0004               	dw	4
  1249  00F95B  0006               	dw	6
  1250  00F95D  0018               	dw	24
  1251  00F95F  0000               	dw	0
  1252  00F961  0000               	dw	0
  1253  00F963  000B               	dw	11
  1254  00F965  0000               	dw	0
  1255  00F967  0000               	dw	0
  1256  00F969  0002               	dw	2
  1257  00F96B  0000               	dw	0
  1258  00F96D  0004               	dw	4
  1259  00F96F  0000               	dw	0
  1260  00F971  0018               	dw	24
  1261  00F973  0000               	dw	0
  1262  00F975  0060               	dw	96
  1263  00F977  0000               	dw	0
  1264  00F979  0080               	dw	128
  1265  00F97B  001F               	dw	31
  1266  00F97D  0060               	dw	96
  1267  00F97F  0000               	dw	0
  1268  00F981  0018               	dw	24
  1269  00F983  0000               	dw	0
  1270  00F985  0004               	dw	4
  1271  00F987  0000               	dw	0
  1272  00F989  0002               	dw	2
  1273  00F98B  0000               	dw	0
  1274  00F98D  0000               	dw	0
  1275  00F98F  0000               	dw	0
  1276  00F991  0008               	dw	8
  1277  00F993  0002               	dw	2
  1278  00F995  0010               	dw	16
  1279  00F997  0002               	dw	2
  1280  00F999  001C               	dw	28
  1281  00F99B  0002               	dw	2
  1282  00F99D  0013               	dw	19
  1283  00F99F  00C2               	dw	194
  1284  00F9A1  0010               	dw	16
  1285  00F9A3  0032               	dw	50
  1286  00F9A5  0010               	dw	16
  1287  00F9A7  000E               	dw	14
  1288  00F9A9  0010               	dw	16
  1289  00F9AB  0002               	dw	2
  1290  00F9AD  0010               	dw	16
  1291  00F9AF  0000               	dw	0
  1292  00F9B1  0000               	dw	0
  1293  00F9B3  0006               	dw	6
  1294  00F9B5  0000               	dw	0
  1295  00F9B7  0000               	dw	0
  1296  00F9B9  0000               	dw	0
  1297  00F9BB  0000               	dw	0
  1298  00F9BD  00FE               	dw	254
  1299  00F9BF  00FF               	dw	255
  1300  00F9C1  0002               	dw	2
  1301  00F9C3  0080               	dw	128
  1302  00F9C5  0002               	dw	2
  1303  00F9C7  0080               	dw	128
  1304  00F9C9  0000               	dw	0
  1305  00F9CB  0000               	dw	0
  1306  00F9CD  000A               	dw	10
  1307  00F9CF  0002               	dw	2
  1308  00F9D1  0000               	dw	0
  1309  00F9D3  000C               	dw	12
  1310  00F9D5  0000               	dw	0
  1311  00F9D7  0010               	dw	16
  1312  00F9D9  0000               	dw	0
  1313  00F9DB  0060               	dw	96
  1314  00F9DD  0000               	dw	0
  1315  00F9DF  0080               	dw	128
  1316  00F9E1  0001               	dw	1
  1317  00F9E3  0000               	dw	0
  1318  00F9E5  0006               	dw	6
  1319  00F9E7  0000               	dw	0
  1320  00F9E9  0008               	dw	8
  1321  00F9EB  0000               	dw	0
  1322  00F9ED  0030               	dw	48
  1323  00F9EF  0000               	dw	0
  1324  00F9F1  0040               	dw	64
  1325  00F9F3  0000               	dw	0
  1326  00F9F5  0000               	dw	0
  1327  00F9F7  0005               	dw	5
  1328  00F9F9  0000               	dw	0
  1329  00F9FB  0000               	dw	0
  1330  00F9FD  0002               	dw	2
  1331  00F9FF  0080               	dw	128
  1332  00FA01  0002               	dw	2
  1333  00FA03  0080               	dw	128
  1334  00FA05  00FE               	dw	254
  1335  00FA07  00FF               	dw	255
  1336  00FA09  0000               	dw	0
  1337  00FA0B  0000               	dw	0
  1338  00FA0D  000B               	dw	11
  1339  00FA0F  0000               	dw	0
  1340  00FA11  0000               	dw	0
  1341  00FA13  0000               	dw	0
  1342  00FA15  0002               	dw	2
  1343  00FA17  0080               	dw	128
  1344  00FA19  0001               	dw	1
  1345  00FA1B  0070               	dw	112
  1346  00FA1D  0000               	dw	0
  1347  00FA1F  000C               	dw	12
  1348  00FA21  0000               	dw	0
  1349  00FA23  0002               	dw	2
  1350  00FA25  0000               	dw	0
  1351  00FA27  000C               	dw	12
  1352  00FA29  0000               	dw	0
  1353  00FA2B  0070               	dw	112
  1354  00FA2D  0000               	dw	0
  1355  00FA2F  0080               	dw	128
  1356  00FA31  0001               	dw	1
  1357  00FA33  0000               	dw	0
  1358  00FA35  0002               	dw	2
  1359  00FA37  0000               	dw	0
  1360  00FA39  0000               	dw	0
  1361  00FA3B  0009               	dw	9
  1362  00FA3D  0000               	dw	0
  1363  00FA3F  0040               	dw	64
  1364  00FA41  0000               	dw	0
  1365  00FA43  0040               	dw	64
  1366  00FA45  0000               	dw	0
  1367  00FA47  0040               	dw	64
  1368  00FA49  0000               	dw	0
  1369  00FA4B  0040               	dw	64
  1370  00FA4D  0000               	dw	0
  1371  00FA4F  0040               	dw	64
  1372  00FA51  0000               	dw	0
  1373  00FA53  0040               	dw	64
  1374  00FA55  0000               	dw	0
  1375  00FA57  0040               	dw	64
  1376  00FA59  0000               	dw	0
  1377  00FA5B  0040               	dw	64
  1378  00FA5D  0000               	dw	0
  1379  00FA5F  0000               	dw	0
  1380  00FA61  0005               	dw	5
  1381  00FA63  0000               	dw	0
  1382  00FA65  0000               	dw	0
  1383  00FA67  0000               	dw	0
  1384  00FA69  0000               	dw	0
  1385  00FA6B  0002               	dw	2
  1386  00FA6D  0000               	dw	0
  1387  00FA6F  0004               	dw	4
  1388  00FA71  0000               	dw	0
  1389  00FA73  0000               	dw	0
  1390  00FA75  0000               	dw	0
  1391  00FA77  000B               	dw	11
  1392  00FA79  0000               	dw	0
  1393  00FA7B  0000               	dw	0
  1394  00FA7D  00C0               	dw	192
  1395  00FA7F  0007               	dw	7
  1396  00FA81  0020               	dw	32
  1397  00FA83  0008               	dw	8
  1398  00FA85  0010               	dw	16
  1399  00FA87  0010               	dw	16
  1400  00FA89  0010               	dw	16
  1401  00FA8B  0010               	dw	16
  1402  00FA8D  0010               	dw	16
  1403  00FA8F  0010               	dw	16
  1404  00FA91  0010               	dw	16
  1405  00FA93  0010               	dw	16
  1406  00FA95  0010               	dw	16
  1407  00FA97  0010               	dw	16
  1408  00FA99  0020               	dw	32
  1409  00FA9B  0008               	dw	8
  1410  00FA9D  00F0               	dw	240
  1411  00FA9F  001F               	dw	31
  1412  00FAA1  0000               	dw	0
  1413  00FAA3  0000               	dw	0
  1414  00FAA5  000B               	dw	11
  1415  00FAA7  0000               	dw	0
  1416  00FAA9  0000               	dw	0
  1417  00FAAB  00FE               	dw	254
  1418  00FAAD  001F               	dw	31
  1419  00FAAF  0020               	dw	32
  1420  00FAB1  0008               	dw	8
  1421  00FAB3  0010               	dw	16
  1422  00FAB5  0010               	dw	16
  1423  00FAB7  0010               	dw	16
  1424  00FAB9  0010               	dw	16
  1425  00FABB  0010               	dw	16
  1426  00FABD  0010               	dw	16
  1427  00FABF  0010               	dw	16
  1428  00FAC1  0010               	dw	16
  1429  00FAC3  0010               	dw	16
  1430  00FAC5  0010               	dw	16
  1431  00FAC7  0020               	dw	32
  1432  00FAC9  0008               	dw	8
  1433  00FACB  00C0               	dw	192
  1434  00FACD  0007               	dw	7
  1435  00FACF  0000               	dw	0
  1436  00FAD1  0000               	dw	0
  1437  00FAD3  000A               	dw	10
  1438  00FAD5  0000               	dw	0
  1439  00FAD7  0000               	dw	0
  1440  00FAD9  00C0               	dw	192
  1441  00FADB  0007               	dw	7
  1442  00FADD  0020               	dw	32
  1443  00FADF  0008               	dw	8
  1444  00FAE1  0010               	dw	16
  1445  00FAE3  0010               	dw	16
  1446  00FAE5  0010               	dw	16
  1447  00FAE7  0010               	dw	16
  1448  00FAE9  0010               	dw	16
  1449  00FAEB  0010               	dw	16
  1450  00FAED  0010               	dw	16
  1451  00FAEF  0010               	dw	16
  1452  00FAF1  0020               	dw	32
  1453  00FAF3  0008               	dw	8
  1454  00FAF5  0040               	dw	64
  1455  00FAF7  0004               	dw	4
  1456  00FAF9  0000               	dw	0
  1457  00FAFB  0000               	dw	0
  1458  00FAFD  000B               	dw	11
  1459  00FAFF  0000               	dw	0
  1460  00FB01  0000               	dw	0
  1461  00FB03  00C0               	dw	192
  1462  00FB05  0007               	dw	7
  1463  00FB07  0020               	dw	32
  1464  00FB09  0008               	dw	8
  1465  00FB0B  0010               	dw	16
  1466  00FB0D  0010               	dw	16
  1467  00FB0F  0010               	dw	16
  1468  00FB11  0010               	dw	16
  1469  00FB13  0010               	dw	16
  1470  00FB15  0010               	dw	16
  1471  00FB17  0010               	dw	16
  1472  00FB19  0010               	dw	16
  1473  00FB1B  0010               	dw	16
  1474  00FB1D  0010               	dw	16
  1475  00FB1F  0020               	dw	32
  1476  00FB21  0008               	dw	8
  1477  00FB23  00FE               	dw	254
  1478  00FB25  001F               	dw	31
  1479  00FB27  0000               	dw	0
  1480  00FB29  0000               	dw	0
  1481  00FB2B  000A               	dw	10
  1482  00FB2D  0000               	dw	0
  1483  00FB2F  0000               	dw	0
  1484  00FB31  00C0               	dw	192
  1485  00FB33  0007               	dw	7
  1486  00FB35  0020               	dw	32
  1487  00FB37  0009               	dw	9
  1488  00FB39  0010               	dw	16
  1489  00FB3B  0011               	dw	17
  1490  00FB3D  0010               	dw	16
  1491  00FB3F  0011               	dw	17
  1492  00FB41  0010               	dw	16
  1493  00FB43  0011               	dw	17
  1494  00FB45  0010               	dw	16
  1495  00FB47  0011               	dw	17
  1496  00FB49  0020               	dw	32
  1497  00FB4B  0009               	dw	9
  1498  00FB4D  00C0               	dw	192
  1499  00FB4F  0005               	dw	5
  1500  00FB51  0000               	dw	0
  1501  00FB53  0000               	dw	0
  1502  00FB55  0006               	dw	6
  1503  00FB57  0000               	dw	0
  1504  00FB59  0000               	dw	0
  1505  00FB5B  0010               	dw	16
  1506  00FB5D  0000               	dw	0
  1507  00FB5F  00FC               	dw	252
  1508  00FB61  001F               	dw	31
  1509  00FB63  0012               	dw	18
  1510  00FB65  0000               	dw	0
  1511  00FB67  0012               	dw	18
  1512  00FB69  0000               	dw	0
  1513  00FB6B  0000               	dw	0
  1514  00FB6D  0000               	dw	0
  1515  00FB6F  000B               	dw	11
  1516  00FB71  0000               	dw	0
  1517  00FB73  0000               	dw	0
  1518  00FB75  00C0               	dw	192
  1519  00FB77  0027               	dw	39
  1520  00FB79  0020               	dw	32
  1521  00FB7B  0048               	dw	72
  1522  00FB7D  0010               	dw	16
  1523  00FB7F  0090               	dw	144
  1524  00FB81  0010               	dw	16
  1525  00FB83  0090               	dw	144
  1526  00FB85  0010               	dw	16
  1527  00FB87  0090               	dw	144
  1528  00FB89  0010               	dw	16
  1529  00FB8B  0090               	dw	144
  1530  00FB8D  0010               	dw	16
  1531  00FB8F  0090               	dw	144
  1532  00FB91  0020               	dw	32
  1533  00FB93  0048               	dw	72
  1534  00FB95  00F0               	dw	240
  1535  00FB97  003F               	dw	63
  1536  00FB99  0000               	dw	0
  1537  00FB9B  0000               	dw	0
  1538  00FB9D  000A               	dw	10
  1539  00FB9F  0000               	dw	0
  1540  00FBA1  0000               	dw	0
  1541  00FBA3  00FE               	dw	254
  1542  00FBA5  001F               	dw	31
  1543  00FBA7  0020               	dw	32
  1544  00FBA9  0000               	dw	0
  1545  00FBAB  0010               	dw	16
  1546  00FBAD  0000               	dw	0
  1547  00FBAF  0010               	dw	16
  1548  00FBB1  0000               	dw	0
  1549  00FBB3  0010               	dw	16
  1550  00FBB5  0000               	dw	0
  1551  00FBB7  0010               	dw	16
  1552  00FBB9  0000               	dw	0
  1553  00FBBB  0020               	dw	32
  1554  00FBBD  0000               	dw	0
  1555  00FBBF  00C0               	dw	192
  1556  00FBC1  001F               	dw	31
  1557  00FBC3  0000               	dw	0
  1558  00FBC5  0000               	dw	0
  1559  00FBC7  0003               	dw	3
  1560  00FBC9  0000               	dw	0
  1561  00FBCB  0000               	dw	0
  1562  00FBCD  00F6               	dw	246
  1563  00FBCF  001F               	dw	31
  1564  00FBD1  0000               	dw	0
  1565  00FBD3  0000               	dw	0
  1566  00FBD5  0003               	dw	3
  1567  00FBD7  0000               	dw	0
  1568  00FBD9  0080               	dw	128
  1569  00FBDB  00F6               	dw	246
  1570  00FBDD  007F               	dw	127
  1571  00FBDF  0000               	dw	0
  1572  00FBE1  0000               	dw	0
  1573  00FBE3  0008               	dw	8
  1574  00FBE5  0000               	dw	0
  1575  00FBE7  0000               	dw	0
  1576  00FBE9  00FE               	dw	254
  1577  00FBEB  001F               	dw	31
  1578  00FBED  0000               	dw	0
  1579  00FBEF  0001               	dw	1
  1580  00FBF1  0080               	dw	128
  1581  00FBF3  0002               	dw	2
  1582  00FBF5  0040               	dw	64
  1583  00FBF7  0004               	dw	4
  1584  00FBF9  0020               	dw	32
  1585  00FBFB  0008               	dw	8
  1586  00FBFD  0010               	dw	16
  1587  00FBFF  0010               	dw	16
  1588  00FC01  0000               	dw	0
  1589  00FC03  0000               	dw	0
  1590  00FC05  0003               	dw	3
  1591  00FC07  0000               	dw	0
  1592  00FC09  0000               	dw	0
  1593  00FC0B  00FE               	dw	254
  1594  00FC0D  001F               	dw	31
  1595  00FC0F  0000               	dw	0
  1596  00FC11  0000               	dw	0
  1597  00FC13  000F               	dw	15
  1598  00FC15  0000               	dw	0
  1599  00FC17  0000               	dw	0
  1600  00FC19  00F0               	dw	240
  1601  00FC1B  001F               	dw	31
  1602  00FC1D  0020               	dw	32
  1603  00FC1F  0000               	dw	0
  1604  00FC21  0010               	dw	16
  1605  00FC23  0000               	dw	0
  1606  00FC25  0010               	dw	16
  1607  00FC27  0000               	dw	0
  1608  00FC29  0010               	dw	16
  1609  00FC2B  0000               	dw	0
  1610  00FC2D  0020               	dw	32
  1611  00FC2F  0000               	dw	0
  1612  00FC31  00C0               	dw	192
  1613  00FC33  001F               	dw	31
  1614  00FC35  0020               	dw	32
  1615  00FC37  0000               	dw	0
  1616  00FC39  0010               	dw	16
  1617  00FC3B  0000               	dw	0
  1618  00FC3D  0010               	dw	16
  1619  00FC3F  0000               	dw	0
  1620  00FC41  0010               	dw	16
  1621  00FC43  0000               	dw	0
  1622  00FC45  0020               	dw	32
  1623  00FC47  0000               	dw	0
  1624  00FC49  00C0               	dw	192
  1625  00FC4B  001F               	dw	31
  1626  00FC4D  0000               	dw	0
  1627  00FC4F  0000               	dw	0
  1628  00FC51  000A               	dw	10
  1629  00FC53  0000               	dw	0
  1630  00FC55  0000               	dw	0
  1631  00FC57  00F0               	dw	240
  1632  00FC59  001F               	dw	31
  1633  00FC5B  0020               	dw	32
  1634  00FC5D  0000               	dw	0
  1635  00FC5F  0010               	dw	16
  1636  00FC61  0000               	dw	0
  1637  00FC63  0010               	dw	16
  1638  00FC65  0000               	dw	0
  1639  00FC67  0010               	dw	16
  1640  00FC69  0000               	dw	0
  1641  00FC6B  0010               	dw	16
  1642  00FC6D  0000               	dw	0
  1643  00FC6F  0020               	dw	32
  1644  00FC71  0000               	dw	0
  1645  00FC73  00C0               	dw	192
  1646  00FC75  001F               	dw	31
  1647  00FC77  0000               	dw	0
  1648  00FC79  0000               	dw	0
  1649  00FC7B  000A               	dw	10
  1650  00FC7D  0000               	dw	0
  1651  00FC7F  0000               	dw	0
  1652  00FC81  00C0               	dw	192
  1653  00FC83  0007               	dw	7
  1654  00FC85  0020               	dw	32
  1655  00FC87  0008               	dw	8
  1656  00FC89  0010               	dw	16
  1657  00FC8B  0010               	dw	16
  1658  00FC8D  0010               	dw	16
  1659  00FC8F  0010               	dw	16
  1660  00FC91  0010               	dw	16
  1661  00FC93  0010               	dw	16
  1662  00FC95  0010               	dw	16
  1663  00FC97  0010               	dw	16
  1664  00FC99  0020               	dw	32
  1665  00FC9B  0008               	dw	8
  1666  00FC9D  00C0               	dw	192
  1667  00FC9F  0007               	dw	7
  1668  00FCA1  0000               	dw	0
  1669  00FCA3  0000               	dw	0
  1670  00FCA5  000B               	dw	11
  1671  00FCA7  0000               	dw	0
  1672  00FCA9  0000               	dw	0
  1673  00FCAB  00F0               	dw	240
  1674  00FCAD  00FF               	dw	255
  1675  00FCAF  0020               	dw	32
  1676  00FCB1  0008               	dw	8
  1677  00FCB3  0010               	dw	16
  1678  00FCB5  0010               	dw	16
  1679  00FCB7  0010               	dw	16
  1680  00FCB9  0010               	dw	16
  1681  00FCBB  0010               	dw	16
  1682  00FCBD  0010               	dw	16
  1683  00FCBF  0010               	dw	16
  1684  00FCC1  0010               	dw	16
  1685  00FCC3  0010               	dw	16
  1686  00FCC5  0010               	dw	16
  1687  00FCC7  0020               	dw	32
  1688  00FCC9  0008               	dw	8
  1689  00FCCB  00C0               	dw	192
  1690  00FCCD  0007               	dw	7
  1691  00FCCF  0000               	dw	0
  1692  00FCD1  0000               	dw	0
  1693  00FCD3  000B               	dw	11
  1694  00FCD5  0000               	dw	0
  1695  00FCD7  0000               	dw	0
  1696  00FCD9  00C0               	dw	192
  1697  00FCDB  0007               	dw	7
  1698  00FCDD  0020               	dw	32
  1699  00FCDF  0008               	dw	8
  1700  00FCE1  0010               	dw	16
  1701  00FCE3  0010               	dw	16
  1702  00FCE5  0010               	dw	16
  1703  00FCE7  0010               	dw	16
  1704  00FCE9  0010               	dw	16
  1705  00FCEB  0010               	dw	16
  1706  00FCED  0010               	dw	16
  1707  00FCEF  0010               	dw	16
  1708  00FCF1  0010               	dw	16
  1709  00FCF3  0010               	dw	16
  1710  00FCF5  0020               	dw	32
  1711  00FCF7  0008               	dw	8
  1712  00FCF9  00F0               	dw	240
  1713  00FCFB  00FF               	dw	255
  1714  00FCFD  0000               	dw	0
  1715  00FCFF  0000               	dw	0
  1716  00FD01  0006               	dw	6
  1717  00FD03  0000               	dw	0
  1718  00FD05  0000               	dw	0
  1719  00FD07  00F0               	dw	240
  1720  00FD09  001F               	dw	31
  1721  00FD0B  0020               	dw	32
  1722  00FD0D  0000               	dw	0
  1723  00FD0F  0010               	dw	16
  1724  00FD11  0000               	dw	0
  1725  00FD13  0010               	dw	16
  1726  00FD15  0000               	dw	0
  1727  00FD17  0000               	dw	0
  1728  00FD19  0000               	dw	0
  1729  00FD1B  0006               	dw	6
  1730  00FD1D  0060               	dw	96
  1731  00FD1F  0008               	dw	8
  1732  00FD21  0090               	dw	144
  1733  00FD23  0010               	dw	16
  1734  00FD25  0010               	dw	16
  1735  00FD27  0011               	dw	17
  1736  00FD29  0010               	dw	16
  1737  00FD2B  0011               	dw	17
  1738  00FD2D  0020               	dw	32
  1739  00FD2F  000E               	dw	14
  1740  00FD31  0000               	dw	0
  1741  00FD33  0000               	dw	0
  1742  00FD35  0007               	dw	7
  1743  00FD37  0000               	dw	0
  1744  00FD39  0000               	dw	0
  1745  00FD3B  0010               	dw	16
  1746  00FD3D  0000               	dw	0
  1747  00FD3F  0010               	dw	16
  1748  00FD41  0000               	dw	0
  1749  00FD43  00FE               	dw	254
  1750  00FD45  001F               	dw	31
  1751  00FD47  0010               	dw	16
  1752  00FD49  0000               	dw	0
  1753  00FD4B  0010               	dw	16
  1754  00FD4D  0000               	dw	0
  1755  00FD4F  0000               	dw	0
  1756  00FD51  0000               	dw	0
  1757  00FD53  000A               	dw	10
  1758  00FD55  0000               	dw	0
  1759  00FD57  0000               	dw	0
  1760  00FD59  00F0               	dw	240
  1761  00FD5B  0007               	dw	7
  1762  00FD5D  0000               	dw	0
  1763  00FD5F  0008               	dw	8
  1764  00FD61  0000               	dw	0
  1765  00FD63  0010               	dw	16
  1766  00FD65  0000               	dw	0
  1767  00FD67  0010               	dw	16
  1768  00FD69  0000               	dw	0
  1769  00FD6B  0010               	dw	16
  1770  00FD6D  0000               	dw	0
  1771  00FD6F  0010               	dw	16
  1772  00FD71  0000               	dw	0
  1773  00FD73  0008               	dw	8
  1774  00FD75  00F0               	dw	240
  1775  00FD77  0007               	dw	7
  1776  00FD79  0000               	dw	0
  1777  00FD7B  0000               	dw	0
  1778  00FD7D  000A               	dw	10
  1779  00FD7F  0010               	dw	16
  1780  00FD81  0000               	dw	0
  1781  00FD83  0060               	dw	96
  1782  00FD85  0000               	dw	0
  1783  00FD87  0080               	dw	128
  1784  00FD89  0003               	dw	3
  1785  00FD8B  0000               	dw	0
  1786  00FD8D  000C               	dw	12
  1787  00FD8F  0000               	dw	0
  1788  00FD91  0010               	dw	16
  1789  00FD93  0000               	dw	0
  1790  00FD95  000C               	dw	12
  1791  00FD97  0080               	dw	128
  1792  00FD99  0003               	dw	3
  1793  00FD9B  0060               	dw	96
  1794  00FD9D  0000               	dw	0
  1795  00FD9F  0010               	dw	16
  1796  00FDA1  0000               	dw	0
  1797  00FDA3  0000               	dw	0
  1798  00FDA5  0000               	dw	0
  1799  00FDA7  000E               	dw	14
  1800  00FDA9  0010               	dw	16
  1801  00FDAB  0000               	dw	0
  1802  00FDAD  00E0               	dw	224
  1803  00FDAF  0000               	dw	0
  1804  00FDB1  0000               	dw	0
  1805  00FDB3  0007               	dw	7
  1806  00FDB5  0000               	dw	0
  1807  00FDB7  0018               	dw	24
  1808  00FDB9  0000               	dw	0
  1809  00FDBB  0007               	dw	7
  1810  00FDBD  00E0               	dw	224
  1811  00FDBF  0000               	dw	0
  1812  00FDC1  0010               	dw	16
  1813  00FDC3  0000               	dw	0
  1814  00FDC5  00E0               	dw	224
  1815  00FDC7  0000               	dw	0
  1816  00FDC9  0000               	dw	0
  1817  00FDCB  0007               	dw	7
  1818  00FDCD  0000               	dw	0
  1819  00FDCF  0018               	dw	24
  1820  00FDD1  0000               	dw	0
  1821  00FDD3  0007               	dw	7
  1822  00FDD5  00E0               	dw	224
  1823  00FDD7  0000               	dw	0
  1824  00FDD9  0010               	dw	16
  1825  00FDDB  0000               	dw	0
  1826  00FDDD  0000               	dw	0
  1827  00FDDF  0000               	dw	0
  1828  00FDE1  0009               	dw	9
  1829  00FDE3  0010               	dw	16
  1830  00FDE5  0010               	dw	16
  1831  00FDE7  0020               	dw	32
  1832  00FDE9  0008               	dw	8
  1833  00FDEB  0040               	dw	64
  1834  00FDED  0004               	dw	4
  1835  00FDEF  0080               	dw	128
  1836  00FDF1  0003               	dw	3
  1837  00FDF3  0080               	dw	128
  1838  00FDF5  0003               	dw	3
  1839  00FDF7  0040               	dw	64
  1840  00FDF9  0004               	dw	4
  1841  00FDFB  0020               	dw	32
  1842  00FDFD  0008               	dw	8
  1843  00FDFF  0010               	dw	16
  1844  00FE01  0010               	dw	16
  1845  00FE03  0000               	dw	0
  1846  00FE05  0000               	dw	0
  1847  00FE07  0009               	dw	9
  1848  00FE09  0010               	dw	16
  1849  00FE0B  0000               	dw	0
  1850  00FE0D  00E0               	dw	224
  1851  00FE0F  0000               	dw	0
  1852  00FE11  0000               	dw	0
  1853  00FE13  0083               	dw	131
  1854  00FE15  0000               	dw	0
  1855  00FE17  007C               	dw	124
  1856  00FE19  0000               	dw	0
  1857  00FE1B  000C               	dw	12
  1858  00FE1D  0000               	dw	0
  1859  00FE1F  0003               	dw	3
  1860  00FE21  00E0               	dw	224
  1861  00FE23  0000               	dw	0
  1862  00FE25  0010               	dw	16
  1863  00FE27  0000               	dw	0
  1864  00FE29  0000               	dw	0
  1865  00FE2B  0000               	dw	0
  1866  00FE2D  0008               	dw	8
  1867  00FE2F  0010               	dw	16
  1868  00FE31  0010               	dw	16
  1869  00FE33  0010               	dw	16
  1870  00FE35  0018               	dw	24
  1871  00FE37  0010               	dw	16
  1872  00FE39  0016               	dw	22
  1873  00FE3B  0010               	dw	16
  1874  00FE3D  0011               	dw	17
  1875  00FE3F  00D0               	dw	208
  1876  00FE41  0010               	dw	16
  1877  00FE43  0030               	dw	48
  1878  00FE45  0010               	dw	16
  1879  00FE47  0010               	dw	16
  1880  00FE49  0010               	dw	16
  1881  00FE4B  0000               	dw	0
  1882  00FE4D  0000               	dw	0
  1883  00FE4F  0007               	dw	7
  1884  00FE51  0000               	dw	0
  1885  00FE53  0000               	dw	0
  1886  00FE55  0000               	dw	0
  1887  00FE57  0001               	dw	1
  1888  00FE59  0080               	dw	128
  1889  00FE5B  0002               	dw	2
  1890  00FE5D  00FC               	dw	252
  1891  00FE5F  007E               	dw	126
  1892  00FE61  0002               	dw	2
  1893  00FE63  0080               	dw	128
  1894  00FE65  0002               	dw	2
  1895  00FE67  0080               	dw	128
  1896  00FE69  0000               	dw	0
  1897  00FE6B  0000               	dw	0
  1898  00FE6D  0007               	dw	7
  1899  00FE6F  0000               	dw	0
  1900  00FE71  0000               	dw	0
  1901  00FE73  0000               	dw	0
  1902  00FE75  0000               	dw	0
  1903  00FE77  0000               	dw	0
  1904  00FE79  0000               	dw	0
  1905  00FE7B  0000               	dw	0
  1906  00FE7D  0000               	dw	0
  1907  00FE7F  0000               	dw	0
  1908  00FE81  0000               	dw	0
  1909  00FE83  00FE               	dw	254
  1910  00FE85  00FF               	dw	255
  1911  00FE87  0000               	dw	0
  1912  00FE89  0000               	dw	0
  1913  00FE8B  0006               	dw	6
  1914  00FE8D  0002               	dw	2
  1915  00FE8F  0080               	dw	128
  1916  00FE91  0002               	dw	2
  1917  00FE93  0080               	dw	128
  1918  00FE95  00FC               	dw	252
  1919  00FE97  007E               	dw	126
  1920  00FE99  0080               	dw	128
  1921  00FE9B  0002               	dw	2
  1922  00FE9D  0000               	dw	0
  1923  00FE9F  0001               	dw	1
  1924  00FEA1  0000               	dw	0
  1925  00FEA3  0000               	dw	0
  1926  00FEA5  000A               	dw	10
  1927  00FEA7  0000               	dw	0
  1928  00FEA9  0000               	dw	0
  1929  00FEAB  0080               	dw	128
  1930  00FEAD  0000               	dw	0
  1931  00FEAF  0040               	dw	64
  1932  00FEB1  0000               	dw	0
  1933  00FEB3  0040               	dw	64
  1934  00FEB5  0000               	dw	0
  1935  00FEB7  0040               	dw	64
  1936  00FEB9  0000               	dw	0
  1937  00FEBB  0080               	dw	128
  1938  00FEBD  0000               	dw	0
  1939  00FEBF  0080               	dw	128
  1940  00FEC1  0000               	dw	0
  1941  00FEC3  0080               	dw	128
  1942  00FEC5  0000               	dw	0
  1943  00FEC7  0040               	dw	64
  1944  00FEC9  0000               	dw	0
  1945  00FECB  0000               	dw	0
  1946  00FECD  0000               	dw	0
  1947  00FECF  0005               	dw	5
  1948  00FED1  00FF               	dw	255
  1949  00FED3  000F               	dw	15
  1950  00FED5  0001               	dw	1
  1951  00FED7  0008               	dw	8
  1952  00FED9  0001               	dw	1
  1953  00FEDB  0008               	dw	8
  1954  00FEDD  00FF               	dw	255
  1955  00FEDF  000F               	dw	15
  1956  00FEE1  0000               	dw	0
  1957  00FEE3  0000               	dw	0
  1958  00FEE5                     __end_of_font:
  1959                           	opt callstack 0
  1960  00FEE5                     _spi_configuration:
  1961                           	opt callstack 0
  1962  00FEE5  00                 	db	0
  1963  00FEE6  40                 	db	64
  1964  00FEE7  01                 	db	1
  1965  00FEE8  00                 	db	0
  1966  00FEE9                     __end_of_spi_configuration:
  1967                           	opt callstack 0
  1968  00FEE9                     STR_1:
  1969  00FEE9  0A                 	db	10
  1970  00FEEA  0D                 	db	13
  1971  00FEEB  49                 	db	73	;'I'
  1972  00FEEC  6E                 	db	110	;'n'
  1973  00FEED  73                 	db	115	;'s'
  1974  00FEEE  65                 	db	101	;'e'
  1975  00FEEF  72                 	db	114	;'r'
  1976  00FEF0  74                 	db	116	;'t'
  1977  00FEF1  20                 	db	32
  1978  00FEF2  61                 	db	97	;'a'
  1979  00FEF3  20                 	db	32
  1980  00FEF4  6E                 	db	110	;'n'
  1981  00FEF5  65                 	db	101	;'e'
  1982  00FEF6  77                 	db	119	;'w'
  1983  00FEF7  20                 	db	32
  1984  00FEF8  74                 	db	116	;'t'
  1985  00FEF9  75                 	db	117	;'u'
  1986  00FEFA  72                 	db	114	;'r'
  1987  00FEFB  6E                 	db	110	;'n'
  1988  00FEFC  20                 	db	32
  1989  00FEFD  4B                 	db	75	;'K'
  1990  00FEFE  50                 	db	80	;'P'
  1991  00FEFF  20                 	db	32
  1992  00FF00  76                 	db	118	;'v'
  1993  00FF01  61                 	db	97	;'a'
  1994  00FF02  6C                 	db	108	;'l'
  1995  00FF03  75                 	db	117	;'u'
  1996  00FF04  65                 	db	101	;'e'
  1997  00FF05  20                 	db	32
  1998  00FF06  62                 	db	98	;'b'
  1999  00FF07  65                 	db	101	;'e'
  2000  00FF08  74                 	db	116	;'t'
  2001  00FF09  77                 	db	119	;'w'
  2002  00FF0A  65                 	db	101	;'e'
  2003  00FF0B  65                 	db	101	;'e'
  2004  00FF0C  6E                 	db	110	;'n'
  2005  00FF0D  20                 	db	32
  2006  00FF0E  30                 	db	48	;'0'
  2007  00FF0F  30                 	db	48	;'0'
  2008  00FF10  2D                 	db	45
  2009  00FF11  39                 	db	57	;'9'
  2010  00FF12  39                 	db	57	;'9'
  2011  00FF13  3A                 	db	58	;':'
  2012  00FF14  00                 	db	0
  2013  00FF15                     STR_3:
  2014  00FF15  0A                 	db	10
  2015  00FF16  0D                 	db	13
  2016  00FF17  49                 	db	73	;'I'
  2017  00FF18  6E                 	db	110	;'n'
  2018  00FF19  73                 	db	115	;'s'
  2019  00FF1A  65                 	db	101	;'e'
  2020  00FF1B  72                 	db	114	;'r'
  2021  00FF1C  74                 	db	116	;'t'
  2022  00FF1D  20                 	db	32
  2023  00FF1E  61                 	db	97	;'a'
  2024  00FF1F  20                 	db	32
  2025  00FF20  6E                 	db	110	;'n'
  2026  00FF21  65                 	db	101	;'e'
  2027  00FF22  77                 	db	119	;'w'
  2028  00FF23  20                 	db	32
  2029  00FF24  74                 	db	116	;'t'
  2030  00FF25  75                 	db	117	;'u'
  2031  00FF26  72                 	db	114	;'r'
  2032  00FF27  6E                 	db	110	;'n'
  2033  00FF28  20                 	db	32
  2034  00FF29  4B                 	db	75	;'K'
  2035  00FF2A  69                 	db	105	;'i'
  2036  00FF2B  20                 	db	32
  2037  00FF2C  76                 	db	118	;'v'
  2038  00FF2D  61                 	db	97	;'a'
  2039  00FF2E  6C                 	db	108	;'l'
  2040  00FF2F  75                 	db	117	;'u'
  2041  00FF30  65                 	db	101	;'e'
  2042  00FF31  20                 	db	32
  2043  00FF32  62                 	db	98	;'b'
  2044  00FF33  65                 	db	101	;'e'
  2045  00FF34  74                 	db	116	;'t'
  2046  00FF35  77                 	db	119	;'w'
  2047  00FF36  65                 	db	101	;'e'
  2048  00FF37  65                 	db	101	;'e'
  2049  00FF38  6E                 	db	110	;'n'
  2050  00FF39  20                 	db	32
  2051  00FF3A  30                 	db	48	;'0'
  2052  00FF3B  30                 	db	48	;'0'
  2053  00FF3C  2D                 	db	45
  2054  00FF3D  39                 	db	57	;'9'
  2055  00FF3E  39                 	db	57	;'9'
  2056  00FF3F  3A                 	db	58	;':'
  2057  00FF40  00                 	db	0
  2058  00FF41                     STR_5:
  2059  00FF41  45                 	db	69	;'E'
  2060  00FF42  41                 	db	65	;'A'
  2061  00FF43  55                 	db	85	;'U'
  2062  00FF44  20                 	db	32
  2063  00FF45  20                 	db	32
  2064  00FF46  20                 	db	32
  2065  00FF47  20                 	db	32
  2066  00FF48  20                 	db	32
  2067  00FF49  20                 	db	32
  2068  00FF4A  20                 	db	32
  2069  00FF4B  20                 	db	32
  2070  00FF4C  20                 	db	32
  2071  00FF4D  20                 	db	32
  2072  00FF4E  53                 	db	83	;'S'
  2073  00FF4F  45                 	db	69	;'E'
  2074  00FF50  45                 	db	69	;'E'
  2075  00FF51  56                 	db	86	;'V'
  2076  00FF52  20                 	db	32
  2077  00FF53  20                 	db	32
  2078  00FF54  20                 	db	32
  2079  00FF55  20                 	db	32
  2080  00FF56  20                 	db	32
  2081  00FF57  20                 	db	32
  2082  00FF58  20                 	db	32
  2083  00FF59  20                 	db	32
  2084  00FF5A  20                 	db	32
  2085  00FF5B  41                 	db	65	;'A'
  2086  00FF5C  55                 	db	85	;'U'
  2087  00FF5D  4C                 	db	76	;'L'
  2088  00FF5E  41                 	db	65	;'A'
  2089  00FF5F  5F                 	db	95	;'_'
  2090  00FF60  36                 	db	54	;'6'
  2091  00FF61  00                 	db	0
  2092  00FF62                     STR_11:
  2093  00FF62  25                 	db	37
  2094  00FF63  30                 	db	48	;'0'
  2095  00FF64  33                 	db	51	;'3'
  2096  00FF65  64                 	db	100	;'d'
  2097  00FF66  25                 	db	37
  2098  00FF67  25                 	db	37
  2099  00FF68  20                 	db	32
  2100  00FF69  25                 	db	37
  2101  00FF6A  30                 	db	48	;'0'
  2102  00FF6B  33                 	db	51	;'3'
  2103  00FF6C  64                 	db	100	;'d'
  2104  00FF6D  25                 	db	37
  2105  00FF6E  25                 	db	37
  2106  00FF6F  20                 	db	32
  2107  00FF70  25                 	db	37
  2108  00FF71  30                 	db	48	;'0'
  2109  00FF72  33                 	db	51	;'3'
  2110  00FF73  64                 	db	100	;'d'
  2111  00FF74  25                 	db	37
  2112  00FF75  25                 	db	37
  2113  00FF76  20                 	db	32
  2114  00FF77  25                 	db	37
  2115  00FF78  30                 	db	48	;'0'
  2116  00FF79  34                 	db	52	;'4'
  2117  00FF7A  64                 	db	100	;'d'
  2118  00FF7B  20                 	db	32
  2119  00FF7C  00                 	db	0
  2120  00FF7D                     STR_10:
  2121  00FF7D  53                 	db	83	;'S'
  2122  00FF7E  50                 	db	80	;'P'
  2123  00FF7F  54                 	db	84	;'T'
  2124  00FF80  20                 	db	32
  2125  00FF81  20                 	db	32
  2126  00FF82  20                 	db	32
  2127  00FF83  4D                 	db	77	;'M'
  2128  00FF84  54                 	db	84	;'T'
  2129  00FF85  52                 	db	82	;'R'
  2130  00FF86  20                 	db	32
  2131  00FF87  20                 	db	32
  2132  00FF88  20                 	db	32
  2133  00FF89  45                 	db	69	;'E'
  2134  00FF8A  52                 	db	82	;'R'
  2135  00FF8B  52                 	db	82	;'R'
  2136  00FF8C  20                 	db	32
  2137  00FF8D  20                 	db	32
  2138  00FF8E  20                 	db	32
  2139  00FF8F  44                 	db	68	;'D'
  2140  00FF90  43                 	db	67	;'C'
  2141  00FF91  00                 	db	0
  2142  00FF92                     STR_9:
  2143  00FF92  44                 	db	68	;'D'
  2144  00FF93  55                 	db	85	;'U'
  2145  00FF94  54                 	db	84	;'T'
  2146  00FF95  59                 	db	89	;'Y'
  2147  00FF96  43                 	db	67	;'C'
  2148  00FF97  59                 	db	89	;'Y'
  2149  00FF98  43                 	db	67	;'C'
  2150  00FF99  4C                 	db	76	;'L'
  2151  00FF9A  45                 	db	69	;'E'
  2152  00FF9B  3A                 	db	58	;':'
  2153  00FF9C  20                 	db	32
  2154  00FF9D  44                 	db	68	;'D'
  2155  00FF9E  43                 	db	67	;'C'
  2156  00FF9F  00                 	db	0
  2157  00FFA0                     STR_6:
  2158  00FFA0  53                 	db	83	;'S'
  2159  00FFA1  45                 	db	69	;'E'
  2160  00FFA2  54                 	db	84	;'T'
  2161  00FFA3  50                 	db	80	;'P'
  2162  00FFA4  4F                 	db	79	;'O'
  2163  00FFA5  49                 	db	73	;'I'
  2164  00FFA6  4E                 	db	78	;'N'
  2165  00FFA7  54                 	db	84	;'T'
  2166  00FFA8  3A                 	db	58	;':'
  2167  00FFA9  20                 	db	32
  2168  00FFAA  53                 	db	83	;'S'
  2169  00FFAB  50                 	db	80	;'P'
  2170  00FFAC  54                 	db	84	;'T'
  2171  00FFAD  00                 	db	0
  2172  00FFAE                     STR_2:
  2173  00FFAE  0A                 	db	10
  2174  00FFAF  0D                 	db	13
  2175  00FFB0  56                 	db	86	;'V'
  2176  00FFB1  61                 	db	97	;'a'
  2177  00FFB2  6C                 	db	108	;'l'
  2178  00FFB3  75                 	db	117	;'u'
  2179  00FFB4  65                 	db	101	;'e'
  2180  00FFB5  3A                 	db	58	;':'
  2181  00FFB6  20                 	db	32
  2182  00FFB7  25                 	db	37
  2183  00FFB8  64                 	db	100	;'d'
  2184  00FFB9  00                 	db	0
  2185  00FFBA                     STR_8:
  2186  00FFBA  45                 	db	69	;'E'
  2187  00FFBB  52                 	db	82	;'R'
  2188  00FFBC  52                 	db	82	;'R'
  2189  00FFBD  4F                 	db	79	;'O'
  2190  00FFBE  52                 	db	82	;'R'
  2191  00FFBF  3A                 	db	58	;':'
  2192  00FFC0  45                 	db	69	;'E'
  2193  00FFC1  52                 	db	82	;'R'
  2194  00FFC2  52                 	db	82	;'R'
  2195  00FFC3  00                 	db	0
  2196  00FFC4                     STR_7:
  2197  00FFC4  4D                 	db	77	;'M'
  2198  00FFC5  4F                 	db	79	;'O'
  2199  00FFC6  54                 	db	84	;'T'
  2200  00FFC7  4F                 	db	79	;'O'
  2201  00FFC8  52                 	db	82	;'R'
  2202  00FFC9  3A                 	db	58	;':'
  2203  00FFCA  4D                 	db	77	;'M'
  2204  00FFCB  54                 	db	84	;'T'
  2205  00FFCC  52                 	db	82	;'R'
  2206  00FFCD  00                 	db	0
  2207  00FFCE                     STR_88:
  2208  00FFCE  68                 	db	104	;'h'
  2209  00FFCF  68                 	db	104	;'h'
  2210  00FFD0  58                 	db	88	;'X'
  2211  00FFD1  00                 	db	0
  2212  00FFD2                     STR_12:
  2213  00FFD2  68                 	db	104	;'h'
  2214  00FFD3  68                 	db	104	;'h'
  2215  00FFD4  64                 	db	100	;'d'
  2216  00FFD5  00                 	db	0
  2217  00FFD6                     STR_16:
  2218  00FFD6  68                 	db	104	;'h'
  2219  00FFD7  68                 	db	104	;'h'
  2220  00FFD8  69                 	db	105	;'i'
  2221  00FFD9  00                 	db	0
  2222  00FFDA                     STR_54:
  2223  00FFDA  68                 	db	104	;'h'
  2224  00FFDB  68                 	db	104	;'h'
  2225  00FFDC  6E                 	db	110	;'n'
  2226  00FFDD  00                 	db	0
  2227  00FFDE                     STR_39:
  2228  00FFDE  68                 	db	104	;'h'
  2229  00FFDF  68                 	db	104	;'h'
  2230  00FFE0  6F                 	db	111	;'o'
  2231  00FFE1  00                 	db	0
  2232  00FFE2                     STR_69:
  2233  00FFE2  68                 	db	104	;'h'
  2234  00FFE3  68                 	db	104	;'h'
  2235  00FFE4  75                 	db	117	;'u'
  2236  00FFE5  00                 	db	0
  2237  00FFE6                     STR_84:
  2238  00FFE6  68                 	db	104	;'h'
  2239  00FFE7  68                 	db	104	;'h'
  2240  00FFE8  78                 	db	120	;'x'
  2241  00FFE9  00                 	db	0
  2242  00FFEA                     STR_106:
  2243  00FFEA  7A                 	db	122	;'z'
  2244  00FFEB  58                 	db	88	;'X'
  2245  00FFEC  00                 	db	0
  2246  00FFED                     STR_30:
  2247  00FFED  7A                 	db	122	;'z'
  2248  00FFEE  64                 	db	100	;'d'
  2249  00FFEF  00                 	db	0
  2250  00FFF0                     STR_34:
  2251  00FFF0  7A                 	db	122	;'z'
  2252  00FFF1  69                 	db	105	;'i'
  2253  00FFF2  00                 	db	0
  2254  00FFF3                     STR_64:
  2255  00FFF3  7A                 	db	122	;'z'
  2256  00FFF4  6E                 	db	110	;'n'
  2257  00FFF5  00                 	db	0
  2258  00FFF6                     STR_49:
  2259  00FFF6  7A                 	db	122	;'z'
  2260  00FFF7  6F                 	db	111	;'o'
  2261  00FFF8  00                 	db	0
  2262  00FFF9                     STR_79:
  2263  00FFF9  7A                 	db	122	;'z'
  2264  00FFFA  75                 	db	117	;'u'
  2265  00FFFB  00                 	db	0
  2266  00FFFC                     STR_102:
  2267  00FFFC  7A                 	db	122	;'z'
  2268  00FFFD  78                 	db	120	;'x'
  2269  00FFFE  00                 	db	0
  2270  0000                     
  2271                           ; #config settings
  2272  00FFFF  00                 	db	0	; dummy byte at the end
  2273  0000                     
  2274                           	psect	nvBANK1
  2275  0001C3                     __pnvBANK1:
  2276                           	opt callstack 0
  2277  0001C3                     _TMR2_InterruptHandler:
  2278                           	opt callstack 0
  2279  0001C3                     	ds	2
  2280  0001C5                     _EUSART1_ErrorHandler:
  2281                           	opt callstack 0
  2282  0001C5                     	ds	2
  2283  0001C7                     _EUSART1_OverrunErrorHandler:
  2284                           	opt callstack 0
  2285  0001C7                     	ds	2
  2286  0001C9                     _EUSART1_FramingErrorHandler:
  2287                           	opt callstack 0
  2288  0001C9                     	ds	2
  2289  0001CB                     _timer1ReloadVal:
  2290                           	opt callstack 0
  2291  0001CB                     	ds	2
  2292  0001CD                     _IOCB4_InterruptHandler:
  2293                           	opt callstack 0
  2294  0001CD                     	ds	2
  2295  0000                     _IOCBbits	set	3930
  2296  0000                     _WPUB	set	3931
  2297  0000                     _ANCON1	set	3932
  2298  0000                     _ANCON0	set	3933
  2299  0000                     _LATEbits	set	3981
  2300  0000                     _SSPSTATbits	set	4039
  2301  0000                     _PORTB	set	3969
  2302  0000                     _PORTBbits	set	3969
  2303  0000                     _LATAbits	set	3977
  2304  0000                     _CCPTMRSbits	set	3993
  2305  0000                     _CCPR1L	set	4028
  2306  0000                     _CCPR1H	set	4029
  2307  0000                     _ECCP1DEL	set	4030
  2308  0000                     _PSTR1CON	set	3996
  2309  0000                     _ECCP1AS	set	4031
  2310  0000                     _CCP1CON	set	4027
  2311  0000                     _T2CONbits	set	4042
  2312  0000                     _T2CON	set	4042
  2313  0000                     _TMR2	set	4044
  2314  0000                     _PR2	set	4043
  2315  0000                     _PIE1bits	set	3997
  2316  0000                     _RCONbits	set	4048
  2317  0000                     _TXREG1	set	4013
  2318  0000                     _RCREG1	set	4014
  2319  0000                     _RCSTA1bits	set	4011
  2320  0000                     _TXSTA1bits	set	4012
  2321  0000                     _SPBRGH1	set	3965
  2322  0000                     _SPBRG1	set	4015
  2323  0000                     _TXSTA1	set	4012
  2324  0000                     _RCSTA1	set	4011
  2325  0000                     _BAUDCON1	set	4007
  2326  0000                     _T1GCONbits	set	4010
  2327  0000                     _T1CONbits	set	4045
  2328  0000                     _T1CON	set	4045
  2329  0000                     _TMR1L	set	4046
  2330  0000                     _TMR1H	set	4047
  2331  0000                     _T1GCON	set	4010
  2332  0000                     _ADCON0bits	set	4034
  2333  0000                     _ADRESL	set	4035
  2334  0000                     _ADRESH	set	4036
  2335  0000                     _ADCON2	set	4032
  2336  0000                     _ADCON1	set	4033
  2337  0000                     _ADCON0	set	4034
  2338  0000                     _INTCONbits	set	4082
  2339  0000                     _INTCON2bits	set	4081
  2340  0000                     _TRISD	set	3989
  2341  0000                     _TRISC	set	3988
  2342  0000                     _TRISB	set	3987
  2343  0000                     _TRISA	set	3986
  2344  0000                     _TRISE	set	3990
  2345  0000                     _LATC	set	3979
  2346  0000                     _LATB	set	3978
  2347  0000                     _LATA	set	3977
  2348  0000                     _LATD	set	3980
  2349  0000                     _LATE	set	3981
  2350  0000                     _PIR1bits	set	3998
  2351  0000                     _SSPBUF	set	4041
  2352  0000                     _SSPCON2	set	4037
  2353  0000                     _SSPCON1bits	set	4038
  2354  0000                     _TRISCbits	set	3988
  2355  0000                     _SSPADD	set	4040
  2356  0000                     _SSPCON1	set	4038
  2357  0000                     _SSPSTAT	set	4039
  2358  0000                     _REFOCON	set	3994
  2359  0000                     _OSCTUNE	set	3995
  2360  0000                     _OSCCON2	set	4050
  2361  0000                     _OSCCON	set	4051
  2362                           
  2363                           	psect	cinit
  2364  004B9C                     __pcinit:
  2365                           	opt callstack 0
  2366  004B9C                     start_initialization:
  2367                           	opt callstack 0
  2368  004B9C                     __initialization:
  2369                           	opt callstack 0
  2370                           
  2371                           ; Initialize objects allocated to BANK1 (11 bytes)
  2372                           ; load TBLPTR registers with __pidataBANK1
  2373  004B9C  0E24               	movlw	low __pidataBANK1
  2374  004B9E  6EF6               	movwf	tblptrl,c
  2375  004BA0  0E54               	movlw	high __pidataBANK1
  2376  004BA2  6EF7               	movwf	tblptrh,c
  2377  004BA4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2378  004BA6  6EF8               	movwf	tblptru,c
  2379  004BA8  EE01  F0CF         	lfsr	0,__pdataBANK1
  2380  004BAC  EE10 F00B          	lfsr	1,11
  2381  004BB0                     copy_data0:
  2382  004BB0  0009               	tblrd		*+
  2383  004BB2  CFF5 FFEE          	movff	tablat,postinc0
  2384  004BB6  50E5               	movf	postdec1,w,c
  2385  004BB8  50E1               	movf	fsr1l,w,c
  2386  004BBA  E1FA               	bnz	copy_data0
  2387                           
  2388                           ; Initialize objects allocated to BANK0 (4 bytes)
  2389                           ; load TBLPTR registers with __pidataBANK0
  2390  004BBC  0E6C               	movlw	low __pidataBANK0
  2391  004BBE  6EF6               	movwf	tblptrl,c
  2392  004BC0  0E54               	movlw	high __pidataBANK0
  2393  004BC2  6EF7               	movwf	tblptrh,c
  2394  004BC4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2395  004BC6  6EF8               	movwf	tblptru,c
  2396  004BC8  EE00  F0D6         	lfsr	0,__pdataBANK0
  2397  004BCC  EE10 F004          	lfsr	1,4
  2398  004BD0                     copy_data1:
  2399  004BD0  0009               	tblrd		*+
  2400  004BD2  CFF5 FFEE          	movff	tablat,postinc0
  2401  004BD6  50E5               	movf	postdec1,w,c
  2402  004BD8  50E1               	movf	fsr1l,w,c
  2403  004BDA  E1FA               	bnz	copy_data1
  2404                           
  2405                           ; Clear objects allocated to BANK1 (74 bytes)
  2406  004BDC  EE01  F079         	lfsr	0,__pbssBANK1
  2407  004BE0  0E4A               	movlw	74
  2408  004BE2                     clear_0:
  2409  004BE2  6AEE               	clrf	postinc0,c
  2410  004BE4  06E8               	decf	wreg,f,c
  2411  004BE6  E1FD               	bnz	clear_0
  2412                           
  2413                           ; Clear objects allocated to BANK0 (33 bytes)
  2414  004BE8  EE00  F0B5         	lfsr	0,__pbssBANK0
  2415  004BEC  0E21               	movlw	33
  2416  004BEE                     clear_1:
  2417  004BEE  6AEE               	clrf	postinc0,c
  2418  004BF0  06E8               	decf	wreg,f,c
  2419  004BF2  E1FD               	bnz	clear_1
  2420  004BF4                     end_of_initialization:
  2421                           	opt callstack 0
  2422  004BF4                     __end_of__initialization:
  2423                           	opt callstack 0
  2424  004BF4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2425  004BF6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2426  004BF8  0100               	movlb	0
  2427  004BFA  EFC0  F016         	goto	_main	;jump to C main() function
  2428                           
  2429                           	psect	bssBANK0
  2430  0000B5                     __pbssBANK0:
  2431                           	opt callstack 0
  2432  0000B5                     _dc_value:
  2433                           	opt callstack 0
  2434  0000B5                     	ds	4
  2435  0000B9                     _error:
  2436                           	opt callstack 0
  2437  0000B9                     	ds	4
  2438  0000BD                     _setpoint:
  2439                           	opt callstack 0
  2440  0000BD                     	ds	4
  2441  0000C1                     _sensor:
  2442                           	opt callstack 0
  2443  0000C1                     	ds	4
  2444  0000C5                     _nout:
  2445                           	opt callstack 0
  2446  0000C5                     	ds	2
  2447  0000C7                     _width:
  2448                           	opt callstack 0
  2449  0000C7                     	ds	2
  2450  0000C9                     _prec:
  2451                           	opt callstack 0
  2452  0000C9                     	ds	2
  2453  0000CB                     _flags:
  2454                           	opt callstack 0
  2455  0000CB                     	ds	2
  2456  0000CD                     _global_bg_color:
  2457                           	opt callstack 0
  2458  0000CD                     	ds	2
  2459  0000CF                     _sum_error:
  2460                           	opt callstack 0
  2461  0000CF                     	ds	2
  2462  0000D1                     TMR2_ISR@CountCallBack:
  2463                           	opt callstack 0
  2464  0000D1                     	ds	2
  2465  0000D3                     _ADC_InterruptHandler:
  2466                           	opt callstack 0
  2467  0000D3                     	ds	2
  2468  0000D5                     _eusart1RxLastError:
  2469                           	opt callstack 0
  2470  0000D5                     	ds	1
  2471                           
  2472                           	psect	dataBANK0
  2473  0000D6                     __pdataBANK0:
  2474                           	opt callstack 0
  2475  0000D6                     _turn_off_value:
  2476                           	opt callstack 0
  2477  0000D6                     	ds	2
  2478  0000D8                     _turn_on_value:
  2479                           	opt callstack 0
  2480  0000D8                     	ds	2
  2481                           
  2482                           	psect	bssBANK1
  2483  000179                     __pbssBANK1:
  2484                           	opt callstack 0
  2485  000179                     	ds	4
  2486  00017D                     	ds	3
  2487  000180                     _errno:
  2488                           	opt callstack 0
  2489  000180                     	ds	2
  2490  000182                     	ds	2
  2491  000184                     _Draw_Graph:
  2492                           	opt callstack 0
  2493  000184                     	ds	1
  2494  000185                     _dbuf:
  2495                           	opt callstack 0
  2496  000185                     	ds	32
  2497  0001A5                     _string:
  2498                           	opt callstack 0
  2499  0001A5                     	ds	30
  2500                           
  2501                           	psect	dataBANK1
  2502  0001CF                     __pdataBANK1:
  2503                           	opt callstack 0
  2504  0001CF                     stoa@F1152:
  2505                           	opt callstack 0
  2506  0001CF                     	ds	7
  2507  0001D6                     _Ki:
  2508                           	opt callstack 0
  2509  0001D6                     	ds	2
  2510  0001D8                     _KP:
  2511                           	opt callstack 0
  2512  0001D8                     	ds	2
  2513                           
  2514                           	psect	cstackBANK1
  2515  000100                     __pcstackBANK1:
  2516                           	opt callstack 0
  2517  000100                     ??_xtoa:
  2518  000100                     lcd_draw_string@k:
  2519                           	opt callstack 0
  2520  000100                     _dtoa$1786:
  2521                           	opt callstack 0
  2522  000100                     otoa@p:
  2523                           	opt callstack 0
  2524  000100                     utoa@p:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x0
  2528  000100                     	ds	2
  2529  000102                     lcd_draw_string@lIndex:
  2530                           	opt callstack 0
  2531  000102                     dtoa@p:
  2532                           	opt callstack 0
  2533  000102                     otoa@t:
  2534                           	opt callstack 0
  2535  000102                     utoa@w:
  2536                           	opt callstack 0
  2537                           
  2538                           ; 2 bytes @ 0x2
  2539  000102                     	ds	2
  2540  000104                     dtoa@w:
  2541                           	opt callstack 0
  2542  000104                     otoa@w:
  2543                           	opt callstack 0
  2544  000104                     utoa@n:
  2545                           	opt callstack 0
  2546                           
  2547                           ; 8 bytes @ 0x4
  2548  000104                     	ds	2
  2549  000106                     dtoa@s:
  2550                           	opt callstack 0
  2551  000106                     otoa@n:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 8 bytes @ 0x6
  2555  000106                     	ds	2
  2556  000108                     _xtoa$1822:
  2557                           	opt callstack 0
  2558  000108                     dtoa@n:
  2559                           	opt callstack 0
  2560                           
  2561                           ; 8 bytes @ 0x8
  2562  000108                     	ds	2
  2563  00010A                     _xtoa$1823:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0xA
  2567  00010A                     	ds	2
  2568  00010C                     utoa@i:
  2569                           	opt callstack 0
  2570  00010C                     xtoa@p:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 2 bytes @ 0xC
  2574  00010C                     	ds	2
  2575  00010E                     otoa@i:
  2576                           	opt callstack 0
  2577  00010E                     xtoa@w:
  2578                           	opt callstack 0
  2579                           
  2580                           ; 2 bytes @ 0xE
  2581  00010E                     	ds	2
  2582  000110                     dtoa@i:
  2583                           	opt callstack 0
  2584  000110                     xtoa@n:
  2585                           	opt callstack 0
  2586                           
  2587                           ; 8 bytes @ 0x10
  2588  000110                     	ds	8
  2589  000118                     xtoa@i:
  2590                           	opt callstack 0
  2591                           
  2592                           ; 2 bytes @ 0x18
  2593  000118                     	ds	2
  2594  00011A                     xtoa@c:
  2595                           	opt callstack 0
  2596                           
  2597                           ; 2 bytes @ 0x1A
  2598  00011A                     	ds	2
  2599  00011C                     ?_vfpfcnvrt:
  2600                           	opt callstack 0
  2601  00011C                     vfpfcnvrt@fp:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 2 bytes @ 0x1C
  2605  00011C                     	ds	2
  2606  00011E                     vfpfcnvrt@fmt:
  2607                           	opt callstack 0
  2608                           
  2609                           ; 2 bytes @ 0x1E
  2610  00011E                     	ds	2
  2611  000120                     vfpfcnvrt@ap:
  2612                           	opt callstack 0
  2613                           
  2614                           ; 2 bytes @ 0x20
  2615  000120                     	ds	2
  2616  000122                     ??_vfpfcnvrt:
  2617                           
  2618                           ; 1 bytes @ 0x22
  2619  000122                     	ds	4
  2620  000126                     vfpfcnvrt@cp:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x26
  2624  000126                     	ds	2
  2625  000128                     vfpfcnvrt@done:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x28
  2629  000128                     	ds	2
  2630  00012A                     _vfpfcnvrt$1837:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x2A
  2634  00012A                     	ds	2
  2635  00012C                     _vfpfcnvrt$1838:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 2 bytes @ 0x2C
  2639  00012C                     	ds	2
  2640  00012E                     vfpfcnvrt@ll:
  2641                           	opt callstack 0
  2642                           
  2643                           ; 8 bytes @ 0x2E
  2644  00012E                     	ds	8
  2645  000136                     vfpfcnvrt@vp:
  2646                           	opt callstack 0
  2647                           
  2648                           ; 2 bytes @ 0x36
  2649  000136                     	ds	2
  2650  000138                     vfpfcnvrt@c:
  2651                           	opt callstack 0
  2652                           
  2653                           ; 1 bytes @ 0x38
  2654  000138                     	ds	1
  2655  000139                     vfpfcnvrt@llu:
  2656                           	opt callstack 0
  2657                           
  2658                           ; 8 bytes @ 0x39
  2659  000139                     	ds	8
  2660  000141                     ?_vfprintf:
  2661                           	opt callstack 0
  2662  000141                     vfprintf@fp:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0x41
  2666  000141                     	ds	2
  2667  000143                     vfprintf@fmt:
  2668                           	opt callstack 0
  2669                           
  2670                           ; 2 bytes @ 0x43
  2671  000143                     	ds	2
  2672  000145                     vfprintf@ap:
  2673                           	opt callstack 0
  2674                           
  2675                           ; 2 bytes @ 0x45
  2676  000145                     	ds	2
  2677  000147                     vfprintf@cfmt:
  2678                           	opt callstack 0
  2679                           
  2680                           ; 2 bytes @ 0x47
  2681  000147                     	ds	2
  2682  000149                     ?_printf:
  2683                           	opt callstack 0
  2684  000149                     ?_vsnprintf:
  2685                           	opt callstack 0
  2686  000149                     printf@fmt:
  2687                           	opt callstack 0
  2688  000149                     vsnprintf@s:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 2 bytes @ 0x49
  2692  000149                     	ds	2
  2693  00014B                     vsnprintf@n:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 2 bytes @ 0x4B
  2697  00014B                     	ds	2
  2698  00014D                     vsnprintf@fmt:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 2 bytes @ 0x4D
  2702  00014D                     	ds	2
  2703  00014F                     printf@ap:
  2704                           	opt callstack 0
  2705  00014F                     vsnprintf@ap:
  2706                           	opt callstack 0
  2707                           
  2708                           ; 2 bytes @ 0x4F
  2709  00014F                     	ds	2
  2710  000151                     ??_vsnprintf:
  2711  000151                     Out_USART@value_2:
  2712                           	opt callstack 0
  2713                           
  2714                           ; 2 bytes @ 0x51
  2715  000151                     	ds	3
  2716  000154                     Out_USART@value_3:
  2717                           	opt callstack 0
  2718                           
  2719                           ; 4 bytes @ 0x54
  2720  000154                     	ds	1
  2721  000155                     _vsnprintf$2544:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x55
  2725  000155                     	ds	2
  2726  000157                     vsnprintf@cnt:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x57
  2730  000157                     	ds	1
  2731  000158                     Out_USART@value_1:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 3 bytes @ 0x58
  2735  000158                     	ds	1
  2736  000159                     vsnprintf@f:
  2737                           	opt callstack 0
  2738                           
  2739                           ; 6 bytes @ 0x59
  2740  000159                     	ds	6
  2741  00015F                     ?_snprintf:
  2742                           	opt callstack 0
  2743  00015F                     snprintf@s:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 2 bytes @ 0x5F
  2747  00015F                     	ds	2
  2748  000161                     snprintf@n:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 2 bytes @ 0x61
  2752  000161                     	ds	2
  2753  000163                     snprintf@fmt:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 2 bytes @ 0x63
  2757  000163                     	ds	20
  2758  000177                     snprintf@ap:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x77
  2762  000177                     	ds	2
  2763                           
  2764                           	psect	cstackBANK0
  2765  000060                     __pcstackBANK0:
  2766                           	opt callstack 0
  2767  000060                     ___fldiv@rem:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 4 bytes @ 0x0
  2771  000060                     	ds	4
  2772  000064                     ___fldiv@sign:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 1 bytes @ 0x4
  2776  000064                     	ds	1
  2777  000065                     ___fldiv@new_exp:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 2 bytes @ 0x5
  2781  000065                     	ds	2
  2782  000067                     ___fldiv@grs:
  2783                           	opt callstack 0
  2784                           
  2785                           ; 4 bytes @ 0x7
  2786  000067                     	ds	4
  2787  00006B                     ___fldiv@bexp:
  2788                           	opt callstack 0
  2789                           
  2790                           ; 1 bytes @ 0xB
  2791  00006B                     	ds	1
  2792  00006C                     ___fldiv@aexp:
  2793                           	opt callstack 0
  2794                           
  2795                           ; 1 bytes @ 0xC
  2796  00006C                     	ds	1
  2797  00006D                     ___fladd@signs:
  2798                           	opt callstack 0
  2799                           
  2800                           ; 1 bytes @ 0xD
  2801  00006D                     	ds	1
  2802  00006E                     ___fladd@aexp:
  2803                           	opt callstack 0
  2804                           
  2805                           ; 1 bytes @ 0xE
  2806  00006E                     	ds	1
  2807  00006F                     ___fladd@bexp:
  2808                           	opt callstack 0
  2809                           
  2810                           ; 1 bytes @ 0xF
  2811  00006F                     	ds	1
  2812  000070                     ___fladd@grs:
  2813                           	opt callstack 0
  2814                           
  2815                           ; 1 bytes @ 0x10
  2816  000070                     	ds	1
  2817  000071                     ?___flsub:
  2818                           	opt callstack 0
  2819  000071                     ?___fltol:
  2820                           	opt callstack 0
  2821  000071                     ___fltol@f1:
  2822                           	opt callstack 0
  2823  000071                     ___flsub@b:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 4 bytes @ 0x11
  2827  000071                     	ds	4
  2828  000075                     ??___fltol:
  2829  000075                     ___flsub@a:
  2830                           	opt callstack 0
  2831                           
  2832                           ; 4 bytes @ 0x15
  2833  000075                     	ds	4
  2834  000079                     ___fltol@sign1:
  2835                           	opt callstack 0
  2836                           
  2837                           ; 1 bytes @ 0x19
  2838  000079                     	ds	1
  2839  00007A                     ___fltol@exp1:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 1 bytes @ 0x1A
  2843  00007A                     	ds	1
  2844  00007B                     ?i2_abs:
  2845                           	opt callstack 0
  2846  00007B                     EPWM1_LoadDutyValue@dutyValue:
  2847                           	opt callstack 0
  2848  00007B                     i2abs@a:
  2849                           	opt callstack 0
  2850                           
  2851                           ; 2 bytes @ 0x1B
  2852  00007B                     	ds	2
  2853  00007D                     ??_EPWM1_LoadDutyValue:
  2854  00007D                     ??i2_abs:
  2855                           
  2856                           ; 1 bytes @ 0x1D
  2857  00007D                     	ds	2
  2858  00007F                     ??_PI_Controller:
  2859                           
  2860                           ; 1 bytes @ 0x1F
  2861  00007F                     	ds	1
  2862  000080                     _PI_Controller$1387:
  2863                           	opt callstack 0
  2864                           
  2865                           ; 2 bytes @ 0x20
  2866  000080                     	ds	2
  2867  000082                     ??_INTERRUPT_InterruptManager:
  2868                           
  2869                           ; 1 bytes @ 0x22
  2870  000082                     	ds	4
  2871  000086                     ??_TMR1_Initialize:
  2872  000086                     ??_SPI_Open:
  2873  000086                     ??_msDelay:
  2874  000086                     ?_strlen:
  2875                           	opt callstack 0
  2876  000086                     ?_isupper:
  2877                           	opt callstack 0
  2878  000086                     ?_isalpha:
  2879                           	opt callstack 0
  2880  000086                     ?_isdigit:
  2881                           	opt callstack 0
  2882  000086                     ?_strncmp:
  2883                           	opt callstack 0
  2884  000086                     ?_isspace:
  2885                           	opt callstack 0
  2886  000086                     ?_islower:
  2887                           	opt callstack 0
  2888  000086                     ?___wmul:
  2889                           	opt callstack 0
  2890  000086                     ?___aodiv:
  2891                           	opt callstack 0
  2892  000086                     ?___aomod:
  2893                           	opt callstack 0
  2894  000086                     ?___lodiv:
  2895                           	opt callstack 0
  2896  000086                     ?___lomod:
  2897                           	opt callstack 0
  2898  000086                     SPI_ExchangeByte@data:
  2899                           	opt callstack 0
  2900  000086                     EUSART1_Write@txData:
  2901                           	opt callstack 0
  2902  000086                     IOCB4_SetInterruptHandler@InterruptHandler:
  2903                           	opt callstack 0
  2904  000086                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2905                           	opt callstack 0
  2906  000086                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2907                           	opt callstack 0
  2908  000086                     EUSART1_SetErrorHandler@interruptHandler:
  2909                           	opt callstack 0
  2910  000086                     TMR2_SetInterruptHandler@InterruptHandler:
  2911                           	opt callstack 0
  2912  000086                     ___wmul@multiplier:
  2913                           	opt callstack 0
  2914  000086                     isalpha@c:
  2915                           	opt callstack 0
  2916  000086                     isdigit@c:
  2917                           	opt callstack 0
  2918  000086                     isspace@c:
  2919                           	opt callstack 0
  2920  000086                     isupper@c:
  2921                           	opt callstack 0
  2922  000086                     strlen@s:
  2923                           	opt callstack 0
  2924  000086                     strncmp@_l:
  2925                           	opt callstack 0
  2926  000086                     islower@c:
  2927                           	opt callstack 0
  2928  000086                     ___aodiv@dividend:
  2929                           	opt callstack 0
  2930  000086                     ___aomod@dividend:
  2931                           	opt callstack 0
  2932  000086                     ___lodiv@dividend:
  2933                           	opt callstack 0
  2934  000086                     ___lomod@dividend:
  2935                           	opt callstack 0
  2936                           
  2937                           ; 8 bytes @ 0x26
  2938  000086                     	ds	1
  2939  000087                     SPI_Open@spiUniqueConfiguration:
  2940                           	opt callstack 0
  2941  000087                     putch@txData:
  2942                           	opt callstack 0
  2943  000087                     msDelay@ms:
  2944                           	opt callstack 0
  2945  000087                     lcd_send@value:
  2946                           	opt callstack 0
  2947                           
  2948                           ; 1 bytes @ 0x27
  2949  000087                     	ds	1
  2950  000088                     ??_isupper:
  2951  000088                     ??_isalpha:
  2952  000088                     ??_isdigit:
  2953  000088                     ??_isspace:
  2954  000088                     ??_islower:
  2955  000088                     msDelay@k:
  2956                           	opt callstack 0
  2957  000088                     lcd_send@dc:
  2958                           	opt callstack 0
  2959  000088                     ___wmul@multiplicand:
  2960                           	opt callstack 0
  2961  000088                     fputc@c:
  2962                           	opt callstack 0
  2963  000088                     strlen@a:
  2964                           	opt callstack 0
  2965  000088                     strncmp@_r:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 2 bytes @ 0x28
  2969  000088                     	ds	1
  2970  000089                     lcd_set_cursor_x@x:
  2971                           	opt callstack 0
  2972  000089                     lcd_set_cursor_y@y:
  2973                           	opt callstack 0
  2974  000089                     lcd_draw_pixel@color:
  2975                           	opt callstack 0
  2976                           
  2977                           ; 2 bytes @ 0x29
  2978  000089                     	ds	1
  2979  00008A                     ___wmul@product:
  2980                           	opt callstack 0
  2981  00008A                     fputc@fp:
  2982                           	opt callstack 0
  2983  00008A                     strncmp@n:
  2984                           	opt callstack 0
  2985                           
  2986                           ; 2 bytes @ 0x2A
  2987  00008A                     	ds	1
  2988  00008B                     lcd_set_cursor@x:
  2989                           	opt callstack 0
  2990                           
  2991                           ; 2 bytes @ 0x2B
  2992  00008B                     	ds	1
  2993  00008C                     ??_fputc:
  2994  00008C                     ??_strncmp:
  2995  00008C                     ?_toupper:
  2996                           	opt callstack 0
  2997  00008C                     _isspace$2426:
  2998                           	opt callstack 0
  2999  00008C                     toupper@c:
  3000                           	opt callstack 0
  3001                           
  3002                           ; 2 bytes @ 0x2C
  3003  00008C                     	ds	1
  3004  00008D                     ?_atoi:
  3005                           	opt callstack 0
  3006  00008D                     lcd_set_cursor@y:
  3007                           	opt callstack 0
  3008  00008D                     atoi@s:
  3009                           	opt callstack 0
  3010  00008D                     strncmp@l:
  3011                           	opt callstack 0
  3012                           
  3013                           ; 2 bytes @ 0x2D
  3014  00008D                     	ds	1
  3015  00008E                     ??_toupper:
  3016  00008E                     ___aodiv@divisor:
  3017                           	opt callstack 0
  3018  00008E                     ___aomod@divisor:
  3019                           	opt callstack 0
  3020  00008E                     ___lodiv@divisor:
  3021                           	opt callstack 0
  3022  00008E                     ___lomod@divisor:
  3023                           	opt callstack 0
  3024                           
  3025                           ; 8 bytes @ 0x2E
  3026  00008E                     	ds	1
  3027  00008F                     ??_atoi:
  3028  00008F                     lcd_fill@bg_color:
  3029                           	opt callstack 0
  3030  00008F                     lcd_draw_char@x:
  3031                           	opt callstack 0
  3032  00008F                     strncmp@r:
  3033                           	opt callstack 0
  3034                           
  3035                           ; 2 bytes @ 0x2F
  3036  00008F                     	ds	2
  3037  000091                     ?_stoa:
  3038                           	opt callstack 0
  3039  000091                     lcd_fill@height:
  3040                           	opt callstack 0
  3041  000091                     lcd_draw_char@y:
  3042                           	opt callstack 0
  3043  000091                     stoa@fp:
  3044                           	opt callstack 0
  3045  000091                     fputs@s:
  3046                           	opt callstack 0
  3047                           
  3048                           ; 2 bytes @ 0x31
  3049  000091                     	ds	1
  3050  000092                     _toupper$2513:
  3051                           	opt callstack 0
  3052                           
  3053                           ; 2 bytes @ 0x32
  3054  000092                     	ds	1
  3055  000093                     lcd_fill@width:
  3056                           	opt callstack 0
  3057  000093                     lcd_draw_char@fIndex:
  3058                           	opt callstack 0
  3059  000093                     stoa@s:
  3060                           	opt callstack 0
  3061  000093                     atoi@neg:
  3062                           	opt callstack 0
  3063  000093                     fputs@fp:
  3064                           	opt callstack 0
  3065                           
  3066                           ; 2 bytes @ 0x33
  3067  000093                     	ds	2
  3068  000095                     ??_stoa:
  3069  000095                     fputs@c:
  3070                           	opt callstack 0
  3071  000095                     lcd_draw_char@fg_color:
  3072                           	opt callstack 0
  3073  000095                     _atoi$2399:
  3074                           	opt callstack 0
  3075                           
  3076                           ; 2 bytes @ 0x35
  3077  000095                     	ds	1
  3078  000096                     ___aodiv@counter:
  3079                           	opt callstack 0
  3080  000096                     ___aomod@counter:
  3081                           	opt callstack 0
  3082  000096                     ___lomod@counter:
  3083                           	opt callstack 0
  3084  000096                     fputs@i:
  3085                           	opt callstack 0
  3086  000096                     stoa@nuls:
  3087                           	opt callstack 0
  3088  000096                     ___lodiv@quotient:
  3089                           	opt callstack 0
  3090                           
  3091                           ; 8 bytes @ 0x36
  3092  000096                     	ds	1
  3093  000097                     ___aodiv@sign:
  3094                           	opt callstack 0
  3095  000097                     ___aomod@sign:
  3096                           	opt callstack 0
  3097  000097                     lcd_draw_char@bg_color:
  3098                           	opt callstack 0
  3099  000097                     _atoi$2401:
  3100                           	opt callstack 0
  3101                           
  3102                           ; 2 bytes @ 0x37
  3103  000097                     	ds	1
  3104  000098                     ?_abs:
  3105                           	opt callstack 0
  3106  000098                     ?_pad:
  3107                           	opt callstack 0
  3108  000098                     pad@fp:
  3109                           	opt callstack 0
  3110  000098                     abs@a:
  3111                           	opt callstack 0
  3112  000098                     ___aodiv@quotient:
  3113                           	opt callstack 0
  3114                           
  3115                           ; 8 bytes @ 0x38
  3116  000098                     	ds	1
  3117  000099                     ??_lcd_draw_char:
  3118  000099                     _atoi$2400:
  3119                           	opt callstack 0
  3120                           
  3121                           ; 1 bytes @ 0x39
  3122  000099                     	ds	1
  3123  00009A                     ??_abs:
  3124  00009A                     pad@buf:
  3125                           	opt callstack 0
  3126  00009A                     atoi@n:
  3127                           	opt callstack 0
  3128                           
  3129                           ; 2 bytes @ 0x3A
  3130  00009A                     	ds	2
  3131  00009C                     pad@p:
  3132                           	opt callstack 0
  3133                           
  3134                           ; 2 bytes @ 0x3C
  3135  00009C                     	ds	1
  3136  00009D                     stoa@i:
  3137                           	opt callstack 0
  3138                           
  3139                           ; 2 bytes @ 0x3D
  3140  00009D                     	ds	1
  3141  00009E                     ??_pad:
  3142  00009E                     ___lodiv@counter:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 1 bytes @ 0x3E
  3146  00009E                     	ds	1
  3147  00009F                     pad@i:
  3148                           	opt callstack 0
  3149  00009F                     stoa@w:
  3150                           	opt callstack 0
  3151                           
  3152                           ; 2 bytes @ 0x3F
  3153  00009F                     	ds	2
  3154  0000A1                     pad@w:
  3155                           	opt callstack 0
  3156  0000A1                     stoa@cp:
  3157                           	opt callstack 0
  3158                           
  3159                           ; 2 bytes @ 0x41
  3160  0000A1                     	ds	1
  3161  0000A2                     lcd_draw_char@j:
  3162                           	opt callstack 0
  3163                           
  3164                           ; 1 bytes @ 0x42
  3165  0000A2                     	ds	1
  3166  0000A3                     ?_ctoa:
  3167                           	opt callstack 0
  3168  0000A3                     ?_dtoa:
  3169                           	opt callstack 0
  3170  0000A3                     ?_otoa:
  3171                           	opt callstack 0
  3172  0000A3                     ?_utoa:
  3173                           	opt callstack 0
  3174  0000A3                     ?_xtoa:
  3175                           	opt callstack 0
  3176  0000A3                     lcd_draw_char@k:
  3177                           	opt callstack 0
  3178  0000A3                     ctoa@fp:
  3179                           	opt callstack 0
  3180  0000A3                     dtoa@fp:
  3181                           	opt callstack 0
  3182  0000A3                     otoa@fp:
  3183                           	opt callstack 0
  3184  0000A3                     stoa@p:
  3185                           	opt callstack 0
  3186  0000A3                     utoa@fp:
  3187                           	opt callstack 0
  3188  0000A3                     xtoa@fp:
  3189                           	opt callstack 0
  3190                           
  3191                           ; 2 bytes @ 0x43
  3192  0000A3                     	ds	1
  3193  0000A4                     lcd_draw_char@i:
  3194                           	opt callstack 0
  3195                           
  3196                           ; 1 bytes @ 0x44
  3197  0000A4                     	ds	1
  3198  0000A5                     ctoa@c:
  3199                           	opt callstack 0
  3200  0000A5                     lcd_draw_string@x:
  3201                           	opt callstack 0
  3202  0000A5                     stoa@l:
  3203                           	opt callstack 0
  3204  0000A5                     dtoa@d:
  3205                           	opt callstack 0
  3206  0000A5                     otoa@d:
  3207                           	opt callstack 0
  3208  0000A5                     utoa@d:
  3209                           	opt callstack 0
  3210  0000A5                     xtoa@d:
  3211                           	opt callstack 0
  3212                           
  3213                           ; 8 bytes @ 0x45
  3214  0000A5                     	ds	1
  3215  0000A6                     ctoa@w:
  3216                           	opt callstack 0
  3217                           
  3218                           ; 2 bytes @ 0x46
  3219  0000A6                     	ds	1
  3220  0000A7                     lcd_draw_string@y:
  3221                           	opt callstack 0
  3222                           
  3223                           ; 2 bytes @ 0x47
  3224  0000A7                     	ds	2
  3225  0000A9                     lcd_draw_string@pS:
  3226                           	opt callstack 0
  3227                           
  3228                           ; 2 bytes @ 0x49
  3229  0000A9                     	ds	2
  3230  0000AB                     lcd_draw_string@fg_color:
  3231                           	opt callstack 0
  3232                           
  3233                           ; 2 bytes @ 0x4B
  3234  0000AB                     	ds	2
  3235  0000AD                     ??_dtoa:
  3236  0000AD                     ??_otoa:
  3237  0000AD                     ??_utoa:
  3238  0000AD                     xtoa@x:
  3239                           	opt callstack 0
  3240  0000AD                     lcd_draw_string@bg_color:
  3241                           	opt callstack 0
  3242                           
  3243                           ; 2 bytes @ 0x4D
  3244  0000AD                     	ds	2
  3245  0000AF                     ??_lcd_draw_string:
  3246                           
  3247                           ; 1 bytes @ 0x4F
  3248  0000AF                     	ds	6
  3249  0000B5                     
  3250                           ; 1 bytes @ 0x55
  3251                           
  3252                           	psect	cstackCOMRAM
  3253  000001                     __pcstackCOMRAM:
  3254                           	opt callstack 0
  3255  000001                     ?_ADC_GetConversion:
  3256                           	opt callstack 0
  3257  000001                     ?i2___wmul:
  3258                           	opt callstack 0
  3259  000001                     i2___wmul@multiplier:
  3260                           	opt callstack 0
  3261  000001                     ___flge@ff1:
  3262                           	opt callstack 0
  3263                           
  3264                           ; 4 bytes @ 0x0
  3265  000001                     	ds	2
  3266  000003                     ??_ADC_GetConversion:
  3267  000003                     i2___wmul@multiplicand:
  3268                           	opt callstack 0
  3269                           
  3270                           ; 2 bytes @ 0x2
  3271  000003                     	ds	2
  3272  000005                     ADC_GetConversion@channel:
  3273                           	opt callstack 0
  3274  000005                     i2___wmul@product:
  3275                           	opt callstack 0
  3276  000005                     ___flge@ff2:
  3277                           	opt callstack 0
  3278                           
  3279                           ; 4 bytes @ 0x4
  3280  000005                     	ds	1
  3281  000006                     ?___lmul:
  3282                           	opt callstack 0
  3283  000006                     ___lmul@multiplier:
  3284                           	opt callstack 0
  3285                           
  3286                           ; 4 bytes @ 0x5
  3287  000006                     	ds	3
  3288  000009                     ??___flge:
  3289                           
  3290                           ; 1 bytes @ 0x8
  3291  000009                     	ds	1
  3292  00000A                     ___lmul@multiplicand:
  3293                           	opt callstack 0
  3294                           
  3295                           ; 4 bytes @ 0x9
  3296  00000A                     	ds	4
  3297  00000E                     ___lmul@product:
  3298                           	opt callstack 0
  3299                           
  3300                           ; 4 bytes @ 0xD
  3301  00000E                     	ds	4
  3302  000012                     ?___aldiv:
  3303                           	opt callstack 0
  3304  000012                     ___aldiv@dividend:
  3305                           	opt callstack 0
  3306                           
  3307                           ; 4 bytes @ 0x11
  3308  000012                     	ds	4
  3309  000016                     ___aldiv@divisor:
  3310                           	opt callstack 0
  3311                           
  3312                           ; 4 bytes @ 0x15
  3313  000016                     	ds	4
  3314  00001A                     ___aldiv@counter:
  3315                           	opt callstack 0
  3316                           
  3317                           ; 1 bytes @ 0x19
  3318  00001A                     	ds	1
  3319  00001B                     ___aldiv@sign:
  3320                           	opt callstack 0
  3321                           
  3322                           ; 1 bytes @ 0x1A
  3323  00001B                     	ds	1
  3324  00001C                     ___aldiv@quotient:
  3325                           	opt callstack 0
  3326                           
  3327                           ; 4 bytes @ 0x1B
  3328  00001C                     	ds	4
  3329  000020                     ?___xxtofl:
  3330                           	opt callstack 0
  3331  000020                     ___xxtofl@val:
  3332                           	opt callstack 0
  3333                           
  3334                           ; 4 bytes @ 0x1F
  3335  000020                     	ds	4
  3336  000024                     ??___xxtofl:
  3337                           
  3338                           ; 1 bytes @ 0x23
  3339  000024                     	ds	4
  3340  000028                     ___xxtofl@sign:
  3341                           	opt callstack 0
  3342                           
  3343                           ; 1 bytes @ 0x27
  3344  000028                     	ds	1
  3345  000029                     ___xxtofl@exp:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 1 bytes @ 0x28
  3349  000029                     	ds	1
  3350  00002A                     ___xxtofl@arg:
  3351                           	opt callstack 0
  3352                           
  3353                           ; 4 bytes @ 0x29
  3354  00002A                     	ds	4
  3355  00002E                     ?___flmul:
  3356                           	opt callstack 0
  3357  00002E                     ___flmul@b:
  3358                           	opt callstack 0
  3359                           
  3360                           ; 4 bytes @ 0x2D
  3361  00002E                     	ds	4
  3362  000032                     ___flmul@a:
  3363                           	opt callstack 0
  3364                           
  3365                           ; 4 bytes @ 0x31
  3366  000032                     	ds	4
  3367  000036                     ??___flmul:
  3368                           
  3369                           ; 1 bytes @ 0x35
  3370  000036                     	ds	4
  3371  00003A                     ___flmul@sign:
  3372                           	opt callstack 0
  3373                           
  3374                           ; 1 bytes @ 0x39
  3375  00003A                     	ds	1
  3376  00003B                     ___flmul@grs:
  3377                           	opt callstack 0
  3378                           
  3379                           ; 4 bytes @ 0x3A
  3380  00003B                     	ds	4
  3381  00003F                     ___flmul@aexp:
  3382                           	opt callstack 0
  3383                           
  3384                           ; 1 bytes @ 0x3E
  3385  00003F                     	ds	1
  3386  000040                     ___flmul@bexp:
  3387                           	opt callstack 0
  3388                           
  3389                           ; 1 bytes @ 0x3F
  3390  000040                     	ds	1
  3391  000041                     ___flmul@prod:
  3392                           	opt callstack 0
  3393                           
  3394                           ; 4 bytes @ 0x40
  3395  000041                     	ds	4
  3396  000045                     ___flmul@temp:
  3397                           	opt callstack 0
  3398                           
  3399                           ; 2 bytes @ 0x44
  3400  000045                     	ds	2
  3401  000047                     ?___fldiv:
  3402                           	opt callstack 0
  3403  000047                     ___fldiv@b:
  3404                           	opt callstack 0
  3405                           
  3406                           ; 4 bytes @ 0x46
  3407  000047                     	ds	4
  3408  00004B                     ___fldiv@a:
  3409                           	opt callstack 0
  3410                           
  3411                           ; 4 bytes @ 0x4A
  3412  00004B                     	ds	4
  3413  00004F                     ??___fldiv:
  3414                           
  3415                           ; 1 bytes @ 0x4E
  3416  00004F                     	ds	4
  3417  000053                     ?___fladd:
  3418                           	opt callstack 0
  3419  000053                     ___fladd@b:
  3420                           	opt callstack 0
  3421                           
  3422                           ; 4 bytes @ 0x52
  3423  000053                     	ds	4
  3424  000057                     ___fladd@a:
  3425                           	opt callstack 0
  3426                           
  3427                           ; 4 bytes @ 0x56
  3428  000057                     	ds	4
  3429  00005B                     ??___fladd:
  3430                           
  3431                           ; 1 bytes @ 0x5A
  3432  00005B                     	ds	4
  3433  00005F                     
  3434                           ; 1 bytes @ 0x5E
  3435 ;;
  3436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3437 ;;
  3438 ;; *************** function _main *****************
  3439 ;; Defined at:
  3440 ;;		line 112 in file "main.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  dummy           2    0        int 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;Total ram usage:        2 bytes
  3459 ;; Hardware stack levels required when called:   17
  3460 ;; This function calls:
  3461 ;;		_EUSART1_is_rx_ready
  3462 ;;		_IOCB4_SetInterruptHandler
  3463 ;;		_Out_USART
  3464 ;;		_SPI_Open
  3465 ;;		_SYSTEM_Initialize
  3466 ;;		_TMR2_SetInterruptHandler
  3467 ;;		_TMR2_StartTimer
  3468 ;;		_TMR2_StopTimer
  3469 ;;		_lcd_draw_string
  3470 ;;		_lcd_init
  3471 ;;		_snprintf
  3472 ;; This function is called by:
  3473 ;;		Startup code after reset
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text0
  3478  002D80                     __ptext0:
  3479                           	opt callstack 0
  3480  002D80                     _main:
  3481                           	opt callstack 14
  3482  002D80                     
  3483                           ;main.c: 113:     int dummy;;main.c: 116:     SYSTEM_Initialize();
  3484  002D80  EC60  F029         	call	_SYSTEM_Initialize	;wreg free
  3485  002D84                     
  3486                           ;main.c: 117:     TMR2_StopTimer();
  3487  002D84  EC38  F02A         	call	_TMR2_StopTimer	;wreg free
  3488  002D88                     
  3489                           ;main.c: 119:     SPI_Open(SPI_DEFAULT);
  3490  002D88  0E00               	movlw	0
  3491  002D8A  ECC5  F024         	call	_SPI_Open
  3492  002D8E                     
  3493                           ;main.c: 120:     lcd_init();
  3494  002D8E  EC05  F00C         	call	_lcd_init	;wreg free
  3495  002D92  5081               	movf	129,w,c	;volatile
  3496  002D94                     
  3497                           ;main.c: 125:     INTCONbits.RBIF = 0;
  3498  002D94  90F2               	bcf	242,0,c	;volatile
  3499  002D96                     
  3500                           ;main.c: 128:     IOCB4_SetInterruptHandler(INTERRUPT_S1_CALLBACK);
  3501  002D96  0E7C               	movlw	low _INTERRUPT_S1_CALLBACK
  3502  002D98  0100               	movlb	0	; () banked
  3503  002D9A  6F86               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3504  002D9C  0E54               	movlw	high _INTERRUPT_S1_CALLBACK
  3505  002D9E  6F87               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3506  002DA0  EC1D  F02A         	call	_IOCB4_SetInterruptHandler	;wreg free
  3507  002DA4                     
  3508                           ;main.c: 129:     TMR2_SetInterruptHandler(TIMER2_CALLBACK);
  3509  002DA4  0E62               	movlw	low _TIMER2_CALLBACK
  3510  002DA6  0100               	movlb	0	; () banked
  3511  002DA8  6F86               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  3512  002DAA  0E54               	movlw	high _TIMER2_CALLBACK
  3513  002DAC  6F87               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3514  002DAE  EC18  F02A         	call	_TMR2_SetInterruptHandler	;wreg free
  3515  002DB2                     
  3516                           ;main.c: 135:     (INTCONbits.GIE = 1);
  3517  002DB2  8EF2               	bsf	242,7,c	;volatile
  3518  002DB4                     
  3519                           ;main.c: 141:     (INTCONbits.PEIE = 1);
  3520  002DB4  8CF2               	bsf	242,6,c	;volatile
  3521  002DB6                     
  3522                           ;main.c: 145:     lcd_draw_string(60, 220, "EAU          SEEV         AULA_6", 0xFFFF, 0
      +                          x0000);
  3523  002DB6  0E00               	movlw	0
  3524  002DB8  0100               	movlb	0	; () banked
  3525  002DBA  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3526  002DBC  0E3C               	movlw	60
  3527  002DBE  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3528  002DC0  0E00               	movlw	0
  3529  002DC2  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3530  002DC4  0EDC               	movlw	220
  3531  002DC6  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3532  002DC8  0E41               	movlw	low STR_5
  3533  002DCA  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3534  002DCC  0EFF               	movlw	high STR_5
  3535  002DCE  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3536  002DD0  0EFF               	movlw	255
  3537  002DD2  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3538  002DD4  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3539  002DD6  0E00               	movlw	0
  3540  002DD8  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3541  002DDA  0E00               	movlw	0
  3542  002DDC  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3543  002DDE  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3544  002DE2                     
  3545                           ;main.c: 146:     snprintf(string, sizeof (string), "SETPOINT: SPT");
  3546  002DE2  0EA5               	movlw	low _string
  3547  002DE4  0101               	movlb	1	; () banked
  3548  002DE6  6F5F               	movwf	snprintf@s& (0+255),b
  3549  002DE8  0E01               	movlw	high _string
  3550  002DEA  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3551  002DEC  0E00               	movlw	0
  3552  002DEE  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3553  002DF0  0E1E               	movlw	30
  3554  002DF2  6F61               	movwf	snprintf@n& (0+255),b
  3555  002DF4  0EA0               	movlw	low STR_6
  3556  002DF6  6F63               	movwf	snprintf@fmt& (0+255),b
  3557  002DF8  0EFF               	movlw	high STR_6
  3558  002DFA  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3559  002DFC  ECC6  F028         	call	_snprintf	;wreg free
  3560  002E00                     
  3561                           ;main.c: 147:     lcd_draw_string(100, 180, string, 0xFFFF, 0x0000);
  3562  002E00  0E00               	movlw	0
  3563  002E02  0100               	movlb	0	; () banked
  3564  002E04  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3565  002E06  0E64               	movlw	100
  3566  002E08  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3567  002E0A  0E00               	movlw	0
  3568  002E0C  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3569  002E0E  0EB4               	movlw	180
  3570  002E10  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3571  002E12  0EA5               	movlw	low _string
  3572  002E14  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3573  002E16  0E01               	movlw	high _string
  3574  002E18  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3575  002E1A  0EFF               	movlw	255
  3576  002E1C  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3577  002E1E  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3578  002E20  0E00               	movlw	0
  3579  002E22  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3580  002E24  0E00               	movlw	0
  3581  002E26  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3582  002E28  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3583  002E2C                     
  3584                           ;main.c: 148:     snprintf(string, sizeof (string), "MOTOR:MTR");
  3585  002E2C  0EA5               	movlw	low _string
  3586  002E2E  0101               	movlb	1	; () banked
  3587  002E30  6F5F               	movwf	snprintf@s& (0+255),b
  3588  002E32  0E01               	movlw	high _string
  3589  002E34  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3590  002E36  0E00               	movlw	0
  3591  002E38  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3592  002E3A  0E1E               	movlw	30
  3593  002E3C  6F61               	movwf	snprintf@n& (0+255),b
  3594  002E3E  0EC4               	movlw	low STR_7
  3595  002E40  6F63               	movwf	snprintf@fmt& (0+255),b
  3596  002E42  0EFF               	movlw	high STR_7
  3597  002E44  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3598  002E46  ECC6  F028         	call	_snprintf	;wreg free
  3599  002E4A                     
  3600                           ;main.c: 149:     lcd_draw_string(100, 160, string, 0xFFFF, 0x0000);
  3601  002E4A  0E00               	movlw	0
  3602  002E4C  0100               	movlb	0	; () banked
  3603  002E4E  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3604  002E50  0E64               	movlw	100
  3605  002E52  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3606  002E54  0E00               	movlw	0
  3607  002E56  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3608  002E58  0EA0               	movlw	160
  3609  002E5A  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3610  002E5C  0EA5               	movlw	low _string
  3611  002E5E  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3612  002E60  0E01               	movlw	high _string
  3613  002E62  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3614  002E64  0EFF               	movlw	255
  3615  002E66  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3616  002E68  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3617  002E6A  0E00               	movlw	0
  3618  002E6C  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3619  002E6E  0E00               	movlw	0
  3620  002E70  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3621  002E72  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3622  002E76                     
  3623                           ;main.c: 150:     snprintf(string, sizeof (string), "ERROR:ERR");
  3624  002E76  0EA5               	movlw	low _string
  3625  002E78  0101               	movlb	1	; () banked
  3626  002E7A  6F5F               	movwf	snprintf@s& (0+255),b
  3627  002E7C  0E01               	movlw	high _string
  3628  002E7E  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3629  002E80  0E00               	movlw	0
  3630  002E82  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3631  002E84  0E1E               	movlw	30
  3632  002E86  6F61               	movwf	snprintf@n& (0+255),b
  3633  002E88  0EBA               	movlw	low STR_8
  3634  002E8A  6F63               	movwf	snprintf@fmt& (0+255),b
  3635  002E8C  0EFF               	movlw	high STR_8
  3636  002E8E  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3637  002E90  ECC6  F028         	call	_snprintf	;wreg free
  3638  002E94                     
  3639                           ;main.c: 151:     lcd_draw_string(100, 140, string, 0xFFFF, 0x0000);
  3640  002E94  0E00               	movlw	0
  3641  002E96  0100               	movlb	0	; () banked
  3642  002E98  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3643  002E9A  0E64               	movlw	100
  3644  002E9C  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3645  002E9E  0E00               	movlw	0
  3646  002EA0  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3647  002EA2  0E8C               	movlw	140
  3648  002EA4  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3649  002EA6  0EA5               	movlw	low _string
  3650  002EA8  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3651  002EAA  0E01               	movlw	high _string
  3652  002EAC  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3653  002EAE  0EFF               	movlw	255
  3654  002EB0  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3655  002EB2  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3656  002EB4  0E00               	movlw	0
  3657  002EB6  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3658  002EB8  0E00               	movlw	0
  3659  002EBA  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3660  002EBC  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3661  002EC0                     
  3662                           ;main.c: 152:     snprintf(string, sizeof (string), "DUTYCYCLE: DC");
  3663  002EC0  0EA5               	movlw	low _string
  3664  002EC2  0101               	movlb	1	; () banked
  3665  002EC4  6F5F               	movwf	snprintf@s& (0+255),b
  3666  002EC6  0E01               	movlw	high _string
  3667  002EC8  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3668  002ECA  0E00               	movlw	0
  3669  002ECC  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3670  002ECE  0E1E               	movlw	30
  3671  002ED0  6F61               	movwf	snprintf@n& (0+255),b
  3672  002ED2  0E92               	movlw	low STR_9
  3673  002ED4  6F63               	movwf	snprintf@fmt& (0+255),b
  3674  002ED6  0EFF               	movlw	high STR_9
  3675  002ED8  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3676  002EDA  ECC6  F028         	call	_snprintf	;wreg free
  3677  002EDE                     
  3678                           ;main.c: 153:     lcd_draw_string(100, 120, string, 0xFFFF, 0x0000);
  3679  002EDE  0E00               	movlw	0
  3680  002EE0  0100               	movlb	0	; () banked
  3681  002EE2  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3682  002EE4  0E64               	movlw	100
  3683  002EE6  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3684  002EE8  0E00               	movlw	0
  3685  002EEA  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3686  002EEC  0E78               	movlw	120
  3687  002EEE  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3688  002EF0  0EA5               	movlw	low _string
  3689  002EF2  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3690  002EF4  0E01               	movlw	high _string
  3691  002EF6  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3692  002EF8  0EFF               	movlw	255
  3693  002EFA  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3694  002EFC  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3695  002EFE  0E00               	movlw	0
  3696  002F00  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3697  002F02  0E00               	movlw	0
  3698  002F04  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3699  002F06  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3700  002F0A                     
  3701                           ;main.c: 154:     snprintf(string, sizeof (string), "SPT   MTR   ERR   DC", setpoint, se
      +                          nsor);
  3702  002F0A  0EA5               	movlw	low _string
  3703  002F0C  0101               	movlb	1	; () banked
  3704  002F0E  6F5F               	movwf	snprintf@s& (0+255),b
  3705  002F10  0E01               	movlw	high _string
  3706  002F12  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3707  002F14  0E00               	movlw	0
  3708  002F16  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3709  002F18  0E1E               	movlw	30
  3710  002F1A  6F61               	movwf	snprintf@n& (0+255),b
  3711  002F1C  0E7D               	movlw	low STR_10
  3712  002F1E  6F63               	movwf	snprintf@fmt& (0+255),b
  3713  002F20  0EFF               	movlw	high STR_10
  3714  002F22  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3715  002F24  C0BD  F165         	movff	_setpoint,?_snprintf+6
  3716  002F28  C0BE  F166         	movff	_setpoint+1,?_snprintf+7
  3717  002F2C  C0BF  F167         	movff	_setpoint+2,?_snprintf+8
  3718  002F30  C0C0  F168         	movff	_setpoint+3,?_snprintf+9
  3719  002F34  C0C1  F169         	movff	_sensor,?_snprintf+10
  3720  002F38  C0C2  F16A         	movff	_sensor+1,?_snprintf+11
  3721  002F3C  C0C3  F16B         	movff	_sensor+2,?_snprintf+12
  3722  002F40  C0C4  F16C         	movff	_sensor+3,?_snprintf+13
  3723  002F44  ECC6  F028         	call	_snprintf	;wreg free
  3724  002F48                     
  3725                           ;main.c: 155:     lcd_draw_string(100, 50, string, 0xFFFF, 0x0000);
  3726  002F48  0E00               	movlw	0
  3727  002F4A  0100               	movlb	0	; () banked
  3728  002F4C  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3729  002F4E  0E64               	movlw	100
  3730  002F50  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3731  002F52  0E00               	movlw	0
  3732  002F54  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3733  002F56  0E32               	movlw	50
  3734  002F58  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3735  002F5A  0EA5               	movlw	low _string
  3736  002F5C  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3737  002F5E  0E01               	movlw	high _string
  3738  002F60  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3739  002F62  0EFF               	movlw	255
  3740  002F64  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3741  002F66  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3742  002F68  0E00               	movlw	0
  3743  002F6A  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3744  002F6C  0E00               	movlw	0
  3745  002F6E  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3746  002F70  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3747  002F74                     
  3748                           ;main.c: 157:     TMR2_StartTimer();
  3749  002F74  EC3A  F02A         	call	_TMR2_StartTimer	;wreg free
  3750  002F78                     l7941:
  3751                           
  3752                           ;main.c: 161:         if (EUSART1_is_rx_ready()) {
  3753  002F78  ECEF  F029         	call	_EUSART1_is_rx_ready	;wreg free
  3754  002F7C  0900               	iorlw	0
  3755  002F7E  B4D8               	btfsc	status,2,c
  3756  002F80  EFC4  F017         	goto	u8891
  3757  002F84  EFC6  F017         	goto	u8890
  3758  002F88                     u8891:
  3759  002F88  EFC8  F017         	goto	l7947
  3760  002F8C                     u8890:
  3761  002F8C                     
  3762                           ;main.c: 162:             Out_USART();
  3763  002F8C  EC32  F022         	call	_Out_USART	;wreg free
  3764  002F90                     l7947:
  3765                           
  3766                           ;main.c: 167:             snprintf(string, sizeof (string), "%03d%% %03d%% %03d%% %04d "
      +                          , setpoint, sensor, error, dc_value);
  3767  002F90  0EA5               	movlw	low _string
  3768  002F92  0101               	movlb	1	; () banked
  3769  002F94  6F5F               	movwf	snprintf@s& (0+255),b
  3770  002F96  0E01               	movlw	high _string
  3771  002F98  6F60               	movwf	(snprintf@s+1)& (0+255),b
  3772  002F9A  0E00               	movlw	0
  3773  002F9C  6F62               	movwf	(snprintf@n+1)& (0+255),b
  3774  002F9E  0E1E               	movlw	30
  3775  002FA0  6F61               	movwf	snprintf@n& (0+255),b
  3776  002FA2  0E62               	movlw	low STR_11
  3777  002FA4  6F63               	movwf	snprintf@fmt& (0+255),b
  3778  002FA6  0EFF               	movlw	high STR_11
  3779  002FA8  6F64               	movwf	(snprintf@fmt+1)& (0+255),b
  3780  002FAA  C0BD  F165         	movff	_setpoint,?_snprintf+6
  3781  002FAE  C0BE  F166         	movff	_setpoint+1,?_snprintf+7
  3782  002FB2  C0BF  F167         	movff	_setpoint+2,?_snprintf+8
  3783  002FB6  C0C0  F168         	movff	_setpoint+3,?_snprintf+9
  3784  002FBA  C0C1  F169         	movff	_sensor,?_snprintf+10
  3785  002FBE  C0C2  F16A         	movff	_sensor+1,?_snprintf+11
  3786  002FC2  C0C3  F16B         	movff	_sensor+2,?_snprintf+12
  3787  002FC6  C0C4  F16C         	movff	_sensor+3,?_snprintf+13
  3788  002FCA  C0B9  F16D         	movff	_error,?_snprintf+14
  3789  002FCE  C0BA  F16E         	movff	_error+1,?_snprintf+15
  3790  002FD2  C0BB  F16F         	movff	_error+2,?_snprintf+16
  3791  002FD6  C0BC  F170         	movff	_error+3,?_snprintf+17
  3792  002FDA  C0B5  F171         	movff	_dc_value,?_snprintf+18
  3793  002FDE  C0B6  F172         	movff	_dc_value+1,?_snprintf+19
  3794  002FE2  C0B7  F173         	movff	_dc_value+2,?_snprintf+20
  3795  002FE6  C0B8  F174         	movff	_dc_value+3,?_snprintf+21
  3796  002FEA  ECC6  F028         	call	_snprintf	;wreg free
  3797  002FEE                     
  3798                           ;main.c: 168:             lcd_draw_string(100, 25, string, 0xFFFF, 0x0000);
  3799  002FEE  0E00               	movlw	0
  3800  002FF0  0100               	movlb	0	; () banked
  3801  002FF2  6FA6               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3802  002FF4  0E64               	movlw	100
  3803  002FF6  6FA5               	movwf	lcd_draw_string@x& (0+255),b
  3804  002FF8  0E00               	movlw	0
  3805  002FFA  6FA8               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3806  002FFC  0E19               	movlw	25
  3807  002FFE  6FA7               	movwf	lcd_draw_string@y& (0+255),b
  3808  003000  0EA5               	movlw	low _string
  3809  003002  6FA9               	movwf	lcd_draw_string@pS& (0+255),b
  3810  003004  0E01               	movlw	high _string
  3811  003006  6FAA               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3812  003008  0EFF               	movlw	255
  3813  00300A  6FAC               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3814  00300C  69AB               	setf	lcd_draw_string@fg_color& (0+255),b
  3815  00300E  0E00               	movlw	0
  3816  003010  6FAE               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3817  003012  0E00               	movlw	0
  3818  003014  6FAD               	movwf	lcd_draw_string@bg_color& (0+255),b
  3819  003016  EC00  F01F         	call	_lcd_draw_string	;wreg free
  3820  00301A  EFBC  F017         	goto	l7941
  3821  00301E  EF42  F000         	goto	start
  3822  003022                     __end_of_main:
  3823                           	opt callstack 0
  3824                           
  3825 ;; *************** function _snprintf *****************
  3826 ;; Defined at:
  3827 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  s               2   95[BANK1 ] PTR unsigned char 
  3830 ;;		 -> string(30), 
  3831 ;;  n               2   97[BANK1 ] unsigned int 
  3832 ;;  fmt             2   99[BANK1 ] PTR const unsigned char 
  3833 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
  3834 ;;		 -> STR_7(10), STR_6(14), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  ap              2  119[BANK1 ] PTR void [1]
  3837 ;;		 -> ?_snprintf(2), ?_printf(2), 
  3838 ;;  ret             2    0        int 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2   95[BANK1 ] int 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3848 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;Total ram usage:       26 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:   16
  3855 ;; This function calls:
  3856 ;;		_vsnprintf
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text1
  3863  00518C                     __ptext1:
  3864                           	opt callstack 0
  3865  00518C                     _snprintf:
  3866                           	opt callstack 14
  3867  00518C  0E65               	movlw	low (?_snprintf+6)
  3868  00518E  0101               	movlb	1	; () banked
  3869  005190  6F77               	movwf	snprintf@ap& (0+255),b
  3870  005192  0E01               	movlw	high (?_snprintf+6)
  3871  005194  6F78               	movwf	(snprintf@ap+1)& (0+255),b
  3872  005196                     
  3873                           ; BSR set to: 1
  3874  005196  C15F  F149         	movff	snprintf@s,vsnprintf@s
  3875  00519A  C160  F14A         	movff	snprintf@s+1,vsnprintf@s+1
  3876  00519E  C161  F14B         	movff	snprintf@n,vsnprintf@n
  3877  0051A2  C162  F14C         	movff	snprintf@n+1,vsnprintf@n+1
  3878  0051A6  C163  F14D         	movff	snprintf@fmt,vsnprintf@fmt
  3879  0051AA  C164  F14E         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3880  0051AE  0E77               	movlw	low snprintf@ap
  3881  0051B0  6F4F               	movwf	vsnprintf@ap& (0+255),b
  3882  0051B2  0E01               	movlw	high snprintf@ap
  3883  0051B4  6F50               	movwf	(vsnprintf@ap+1)& (0+255),b
  3884  0051B6  ECA5  F01F         	call	_vsnprintf	;wreg free
  3885  0051BA  0012               	return		;funcret
  3886  0051BC                     __end_of_snprintf:
  3887                           	opt callstack 0
  3888                           
  3889 ;; *************** function _vsnprintf *****************
  3890 ;; Defined at:
  3891 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  s               2   73[BANK1 ] PTR unsigned char 
  3894 ;;		 -> string(30), 
  3895 ;;  n               2   75[BANK1 ] unsigned int 
  3896 ;;  fmt             2   77[BANK1 ] PTR const unsigned char 
  3897 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
  3898 ;;		 -> STR_7(10), STR_6(14), 
  3899 ;;  ap              2   79[BANK1 ] PTR PTR void 
  3900 ;;		 -> snprintf@ap(2), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  f               6   89[BANK1 ] struct _IO_FILE
  3903 ;;  cnt             2   87[BANK1 ] int 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2   73[BANK1 ] int 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3913 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;Total ram usage:       22 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:   15
  3920 ;; This function calls:
  3921 ;;		_vfprintf
  3922 ;; This function is called by:
  3923 ;;		_snprintf
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text2
  3928  003F4A                     __ptext2:
  3929                           	opt callstack 0
  3930  003F4A                     _vsnprintf:
  3931                           	opt callstack 14
  3932  003F4A  0E80               	movlw	128
  3933  003F4C  0101               	movlb	1	; () banked
  3934  003F4E  5D4C               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3935  003F50  A0D8               	btfss	status,0,c
  3936  003F52  EFAD  F01F         	goto	u8691
  3937  003F56  EFAF  F01F         	goto	u8690
  3938  003F5A                     u8691:
  3939  003F5A  EFB7  F01F         	goto	l7585
  3940  003F5E                     u8690:
  3941  003F5E                     
  3942                           ; BSR set to: 1
  3943  003F5E  0E00               	movlw	0
  3944  003F60  6F81               	movwf	(_errno+1)& (0+255),b
  3945  003F62  0E4B               	movlw	75
  3946  003F64  6F80               	movwf	_errno& (0+255),b
  3947  003F66                     
  3948                           ; BSR set to: 1
  3949  003F66  6949               	setf	?_vsnprintf& (0+255),b
  3950  003F68  694A               	setf	(?_vsnprintf+1)& (0+255),b
  3951  003F6A  EF2C  F020         	goto	l1738
  3952  003F6E                     l7585:
  3953                           
  3954                           ; BSR set to: 1
  3955  003F6E  C149  F159         	movff	vsnprintf@s,vsnprintf@f
  3956  003F72  C14A  F15A         	movff	vsnprintf@s+1,vsnprintf@f+1
  3957  003F76  514C               	movf	(vsnprintf@n+1)& (0+255),w,b
  3958  003F78  E109               	bnz	u8700
  3959  003F7A  0E02               	movlw	2
  3960  003F7C  5D4B               	subwf	vsnprintf@n& (0+255),w,b
  3961  003F7E  A0D8               	btfss	status,0,c
  3962  003F80  EFC4  F01F         	goto	u8701
  3963  003F84  EFC6  F01F         	goto	u8700
  3964  003F88                     u8701:
  3965  003F88  EFD2  F01F         	goto	l7591
  3966  003F8C                     u8700:
  3967  003F8C                     
  3968                           ; BSR set to: 1
  3969  003F8C  0EFF               	movlw	255
  3970  003F8E  254B               	addwf	vsnprintf@n& (0+255),w,b
  3971  003F90  6F5D               	movwf	(vsnprintf@f+4)& (0+255),b
  3972  003F92  0EFF               	movlw	255
  3973  003F94  214C               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3974  003F96  6F5E               	movwf	(vsnprintf@f+5)& (0+255),b
  3975  003F98                     
  3976                           ; BSR set to: 1
  3977  003F98  0E00               	movlw	0
  3978  003F9A  6F5C               	movwf	(vsnprintf@f+3)& (0+255),b
  3979  003F9C  0E00               	movlw	0
  3980  003F9E  6F5B               	movwf	(vsnprintf@f+2)& (0+255),b
  3981  003FA0  EFDA  F01F         	goto	l7593
  3982  003FA4                     l7591:
  3983                           
  3984                           ; BSR set to: 1
  3985  003FA4  0E00               	movlw	0
  3986  003FA6  6F5E               	movwf	(vsnprintf@f+5)& (0+255),b
  3987  003FA8  0E01               	movlw	1
  3988  003FAA  6F5D               	movwf	(vsnprintf@f+4)& (0+255),b
  3989  003FAC  0E00               	movlw	0
  3990  003FAE  6F5C               	movwf	(vsnprintf@f+3)& (0+255),b
  3991  003FB0  0E01               	movlw	1
  3992  003FB2  6F5B               	movwf	(vsnprintf@f+2)& (0+255),b
  3993  003FB4                     l7593:
  3994                           
  3995                           ; BSR set to: 1
  3996  003FB4  0E59               	movlw	low vsnprintf@f
  3997  003FB6  6F41               	movwf	vfprintf@fp& (0+255),b
  3998  003FB8  0E01               	movlw	high vsnprintf@f
  3999  003FBA  6F42               	movwf	(vfprintf@fp+1)& (0+255),b
  4000  003FBC  C14D  F143         	movff	vsnprintf@fmt,vfprintf@fmt
  4001  003FC0  C14E  F144         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  4002  003FC4  C14F  F145         	movff	vsnprintf@ap,vfprintf@ap
  4003  003FC8  C150  F146         	movff	vsnprintf@ap+1,vfprintf@ap+1
  4004  003FCC  EC63  F025         	call	_vfprintf	;wreg free
  4005  003FD0  C141  F157         	movff	?_vfprintf,vsnprintf@cnt
  4006  003FD4  C142  F158         	movff	?_vfprintf+1,vsnprintf@cnt+1
  4007  003FD8  0101               	movlb	1	; () banked
  4008  003FDA  514B               	movf	vsnprintf@n& (0+255),w,b
  4009  003FDC  114C               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  4010  003FDE  B4D8               	btfsc	status,2,c
  4011  003FE0  EFF4  F01F         	goto	u8711
  4012  003FE4  EFF6  F01F         	goto	u8710
  4013  003FE8                     u8711:
  4014  003FE8  EF28  F020         	goto	l7605
  4015  003FEC                     u8710:
  4016  003FEC                     
  4017                           ; BSR set to: 1
  4018  003FEC  BF58               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4019  003FEE  EFFB  F01F         	goto	u8721
  4020  003FF2  EFFD  F01F         	goto	u8720
  4021  003FF6                     u8721:
  4022  003FF6  EF28  F020         	goto	l7605
  4023  003FFA                     u8720:
  4024  003FFA                     
  4025                           ; BSR set to: 1
  4026  003FFA  0EFF               	movlw	255
  4027  003FFC  6F51               	movwf	??_vsnprintf& (0+255),b
  4028  003FFE  0EFF               	movlw	255
  4029  004000  6F52               	movwf	(??_vsnprintf+1)& (0+255),b
  4030  004002  C14B  F153         	movff	vsnprintf@n,??_vsnprintf+2
  4031  004006  C14C  F154         	movff	vsnprintf@n+1,??_vsnprintf+3
  4032  00400A  5151               	movf	??_vsnprintf& (0+255),w,b
  4033  00400C  2753               	addwf	(??_vsnprintf+2)& (0+255),f,b
  4034  00400E  5152               	movf	(??_vsnprintf+1)& (0+255),w,b
  4035  004010  2354               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  4036  004012  5153               	movf	(??_vsnprintf+2)& (0+255),w,b
  4037  004014  5D57               	subwf	vsnprintf@cnt& (0+255),w,b
  4038  004016  5154               	movf	(??_vsnprintf+3)& (0+255),w,b
  4039  004018  5958               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4040  00401A  A0D8               	btfss	status,0,c
  4041  00401C  EF12  F020         	goto	u8731
  4042  004020  EF14  F020         	goto	u8730
  4043  004024                     u8731:
  4044  004024  EF1C  F020         	goto	l1743
  4045  004028                     u8730:
  4046  004028                     
  4047                           ; BSR set to: 1
  4048  004028  0EFF               	movlw	255
  4049  00402A  254B               	addwf	vsnprintf@n& (0+255),w,b
  4050  00402C  6F55               	movwf	_vsnprintf$2544& (0+255),b
  4051  00402E  0EFF               	movlw	255
  4052  004030  214C               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  4053  004032  6F56               	movwf	(_vsnprintf$2544+1)& (0+255),b
  4054  004034  EF20  F020         	goto	l7603
  4055  004038                     l1743:
  4056                           
  4057                           ; BSR set to: 1
  4058  004038  C157  F155         	movff	vsnprintf@cnt,_vsnprintf$2544
  4059  00403C  C158  F156         	movff	vsnprintf@cnt+1,_vsnprintf$2544+1
  4060  004040                     l7603:
  4061                           
  4062                           ; BSR set to: 1
  4063  004040  5155               	movf	_vsnprintf$2544& (0+255),w,b
  4064  004042  2549               	addwf	vsnprintf@s& (0+255),w,b
  4065  004044  6ED9               	movwf	fsr2l,c
  4066  004046  5156               	movf	(_vsnprintf$2544+1)& (0+255),w,b
  4067  004048  214A               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  4068  00404A  6EDA               	movwf	fsr2h,c
  4069  00404C  0E00               	movlw	0
  4070  00404E  6EDF               	movwf	indf2,c
  4071  004050                     l7605:
  4072                           
  4073                           ; BSR set to: 1
  4074  004050  C157  F149         	movff	vsnprintf@cnt,?_vsnprintf
  4075  004054  C158  F14A         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4076  004058                     l1738:
  4077                           
  4078                           ; BSR set to: 1
  4079  004058  0012               	return		;funcret
  4080  00405A                     __end_of_vsnprintf:
  4081                           	opt callstack 0
  4082                           
  4083 ;; *************** function _lcd_init *****************
  4084 ;; Defined at:
  4085 ;;		line 34 in file "lib_ili9341.c"
  4086 ;; Parameters:    Size  Location     Type
  4087 ;;		None
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;		None
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      void 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4103 ;;Total ram usage:        0 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:   12
  4106 ;; This function calls:
  4107 ;;		_lcd_fill
  4108 ;;		_lcd_send
  4109 ;;		_msDelay
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text3
  4116  00180A                     __ptext3:
  4117                           	opt callstack 0
  4118  00180A                     _lcd_init:
  4119                           	opt callstack 18
  4120  00180A                     
  4121                           ;lib_ili9341.c: 37:     lcd_send(0, 0x01);
  4122  00180A  0E01               	movlw	1
  4123  00180C  0100               	movlb	0	; () banked
  4124  00180E  6F87               	movwf	lcd_send@value& (0+255),b
  4125  001810  0E00               	movlw	0
  4126  001812  EC86  F029         	call	_lcd_send
  4127  001816                     
  4128                           ;lib_ili9341.c: 38:     msDelay(150);
  4129  001816  0E96               	movlw	150
  4130  001818  EC78  F028         	call	_msDelay
  4131  00181C                     
  4132                           ;lib_ili9341.c: 40:     lcd_send(0,0xEF);
  4133  00181C  0EEF               	movlw	239
  4134  00181E  0100               	movlb	0	; () banked
  4135  001820  6F87               	movwf	lcd_send@value& (0+255),b
  4136  001822  0E00               	movlw	0
  4137  001824  EC86  F029         	call	_lcd_send
  4138  001828                     
  4139                           ;lib_ili9341.c: 41:     lcd_send(1,0x03);
  4140  001828  0E03               	movlw	3
  4141  00182A  0100               	movlb	0	; () banked
  4142  00182C  6F87               	movwf	lcd_send@value& (0+255),b
  4143  00182E  0E01               	movlw	1
  4144  001830  EC86  F029         	call	_lcd_send
  4145  001834                     
  4146                           ;lib_ili9341.c: 42:     lcd_send(1,0x80);
  4147  001834  0E80               	movlw	128
  4148  001836  0100               	movlb	0	; () banked
  4149  001838  6F87               	movwf	lcd_send@value& (0+255),b
  4150  00183A  0E01               	movlw	1
  4151  00183C  EC86  F029         	call	_lcd_send
  4152  001840                     
  4153                           ;lib_ili9341.c: 43:     lcd_send(1,0x02);
  4154  001840  0E02               	movlw	2
  4155  001842  0100               	movlb	0	; () banked
  4156  001844  6F87               	movwf	lcd_send@value& (0+255),b
  4157  001846  0E01               	movlw	1
  4158  001848  EC86  F029         	call	_lcd_send
  4159  00184C                     
  4160                           ;lib_ili9341.c: 44:     lcd_send(0,0xCF);
  4161  00184C  0ECF               	movlw	207
  4162  00184E  0100               	movlb	0	; () banked
  4163  001850  6F87               	movwf	lcd_send@value& (0+255),b
  4164  001852  0E00               	movlw	0
  4165  001854  EC86  F029         	call	_lcd_send
  4166  001858                     
  4167                           ;lib_ili9341.c: 45:     lcd_send(1,0x00);
  4168  001858  0E00               	movlw	0
  4169  00185A  0100               	movlb	0	; () banked
  4170  00185C  6F87               	movwf	lcd_send@value& (0+255),b
  4171  00185E  0E01               	movlw	1
  4172  001860  EC86  F029         	call	_lcd_send
  4173  001864                     
  4174                           ;lib_ili9341.c: 46:     lcd_send(1,0XC1);
  4175  001864  0EC1               	movlw	193
  4176  001866  0100               	movlb	0	; () banked
  4177  001868  6F87               	movwf	lcd_send@value& (0+255),b
  4178  00186A  0E01               	movlw	1
  4179  00186C  EC86  F029         	call	_lcd_send
  4180  001870                     
  4181                           ;lib_ili9341.c: 47:     lcd_send(1,0X30);
  4182  001870  0E30               	movlw	48
  4183  001872  0100               	movlb	0	; () banked
  4184  001874  6F87               	movwf	lcd_send@value& (0+255),b
  4185  001876  0E01               	movlw	1
  4186  001878  EC86  F029         	call	_lcd_send
  4187  00187C                     
  4188                           ;lib_ili9341.c: 48:     lcd_send(0,0xED);
  4189  00187C  0EED               	movlw	237
  4190  00187E  0100               	movlb	0	; () banked
  4191  001880  6F87               	movwf	lcd_send@value& (0+255),b
  4192  001882  0E00               	movlw	0
  4193  001884  EC86  F029         	call	_lcd_send
  4194  001888                     
  4195                           ;lib_ili9341.c: 49:     lcd_send(1,0x64);
  4196  001888  0E64               	movlw	100
  4197  00188A  0100               	movlb	0	; () banked
  4198  00188C  6F87               	movwf	lcd_send@value& (0+255),b
  4199  00188E  0E01               	movlw	1
  4200  001890  EC86  F029         	call	_lcd_send
  4201  001894                     
  4202                           ;lib_ili9341.c: 50:     lcd_send(1,0x03);
  4203  001894  0E03               	movlw	3
  4204  001896  0100               	movlb	0	; () banked
  4205  001898  6F87               	movwf	lcd_send@value& (0+255),b
  4206  00189A  0E01               	movlw	1
  4207  00189C  EC86  F029         	call	_lcd_send
  4208  0018A0                     
  4209                           ;lib_ili9341.c: 51:     lcd_send(1,0X12);
  4210  0018A0  0E12               	movlw	18
  4211  0018A2  0100               	movlb	0	; () banked
  4212  0018A4  6F87               	movwf	lcd_send@value& (0+255),b
  4213  0018A6  0E01               	movlw	1
  4214  0018A8  EC86  F029         	call	_lcd_send
  4215  0018AC                     
  4216                           ;lib_ili9341.c: 52:     lcd_send(1,0X81);
  4217  0018AC  0E81               	movlw	129
  4218  0018AE  0100               	movlb	0	; () banked
  4219  0018B0  6F87               	movwf	lcd_send@value& (0+255),b
  4220  0018B2  0E01               	movlw	1
  4221  0018B4  EC86  F029         	call	_lcd_send
  4222  0018B8                     
  4223                           ;lib_ili9341.c: 53:     lcd_send(0,0xE8);
  4224  0018B8  0EE8               	movlw	232
  4225  0018BA  0100               	movlb	0	; () banked
  4226  0018BC  6F87               	movwf	lcd_send@value& (0+255),b
  4227  0018BE  0E00               	movlw	0
  4228  0018C0  EC86  F029         	call	_lcd_send
  4229  0018C4                     
  4230                           ;lib_ili9341.c: 54:     lcd_send(1,0x85);
  4231  0018C4  0E85               	movlw	133
  4232  0018C6  0100               	movlb	0	; () banked
  4233  0018C8  6F87               	movwf	lcd_send@value& (0+255),b
  4234  0018CA  0E01               	movlw	1
  4235  0018CC  EC86  F029         	call	_lcd_send
  4236  0018D0                     
  4237                           ;lib_ili9341.c: 55:     lcd_send(1,0x00);
  4238  0018D0  0E00               	movlw	0
  4239  0018D2  0100               	movlb	0	; () banked
  4240  0018D4  6F87               	movwf	lcd_send@value& (0+255),b
  4241  0018D6  0E01               	movlw	1
  4242  0018D8  EC86  F029         	call	_lcd_send
  4243  0018DC                     
  4244                           ;lib_ili9341.c: 56:     lcd_send(1,0x78);
  4245  0018DC  0E78               	movlw	120
  4246  0018DE  0100               	movlb	0	; () banked
  4247  0018E0  6F87               	movwf	lcd_send@value& (0+255),b
  4248  0018E2  0E01               	movlw	1
  4249  0018E4  EC86  F029         	call	_lcd_send
  4250  0018E8                     
  4251                           ;lib_ili9341.c: 57:     lcd_send(0,0xCB);
  4252  0018E8  0ECB               	movlw	203
  4253  0018EA  0100               	movlb	0	; () banked
  4254  0018EC  6F87               	movwf	lcd_send@value& (0+255),b
  4255  0018EE  0E00               	movlw	0
  4256  0018F0  EC86  F029         	call	_lcd_send
  4257  0018F4                     
  4258                           ;lib_ili9341.c: 58:     lcd_send(1,0x39);
  4259  0018F4  0E39               	movlw	57
  4260  0018F6  0100               	movlb	0	; () banked
  4261  0018F8  6F87               	movwf	lcd_send@value& (0+255),b
  4262  0018FA  0E01               	movlw	1
  4263  0018FC  EC86  F029         	call	_lcd_send
  4264  001900                     
  4265                           ;lib_ili9341.c: 59:     lcd_send(1,0x2C);
  4266  001900  0E2C               	movlw	44
  4267  001902  0100               	movlb	0	; () banked
  4268  001904  6F87               	movwf	lcd_send@value& (0+255),b
  4269  001906  0E01               	movlw	1
  4270  001908  EC86  F029         	call	_lcd_send
  4271  00190C                     
  4272                           ;lib_ili9341.c: 60:     lcd_send(1,0x00);
  4273  00190C  0E00               	movlw	0
  4274  00190E  0100               	movlb	0	; () banked
  4275  001910  6F87               	movwf	lcd_send@value& (0+255),b
  4276  001912  0E01               	movlw	1
  4277  001914  EC86  F029         	call	_lcd_send
  4278  001918                     
  4279                           ;lib_ili9341.c: 61:     lcd_send(1,0x34);
  4280  001918  0E34               	movlw	52
  4281  00191A  0100               	movlb	0	; () banked
  4282  00191C  6F87               	movwf	lcd_send@value& (0+255),b
  4283  00191E  0E01               	movlw	1
  4284  001920  EC86  F029         	call	_lcd_send
  4285  001924                     
  4286                           ;lib_ili9341.c: 62:     lcd_send(1,0x02);
  4287  001924  0E02               	movlw	2
  4288  001926  0100               	movlb	0	; () banked
  4289  001928  6F87               	movwf	lcd_send@value& (0+255),b
  4290  00192A  0E01               	movlw	1
  4291  00192C  EC86  F029         	call	_lcd_send
  4292  001930                     
  4293                           ;lib_ili9341.c: 63:     lcd_send(0,0xF7);
  4294  001930  0EF7               	movlw	247
  4295  001932  0100               	movlb	0	; () banked
  4296  001934  6F87               	movwf	lcd_send@value& (0+255),b
  4297  001936  0E00               	movlw	0
  4298  001938  EC86  F029         	call	_lcd_send
  4299  00193C                     
  4300                           ;lib_ili9341.c: 64:     lcd_send(1,0x20);
  4301  00193C  0E20               	movlw	32
  4302  00193E  0100               	movlb	0	; () banked
  4303  001940  6F87               	movwf	lcd_send@value& (0+255),b
  4304  001942  0E01               	movlw	1
  4305  001944  EC86  F029         	call	_lcd_send
  4306  001948                     
  4307                           ;lib_ili9341.c: 65:     lcd_send(0,0xEA);
  4308  001948  0EEA               	movlw	234
  4309  00194A  0100               	movlb	0	; () banked
  4310  00194C  6F87               	movwf	lcd_send@value& (0+255),b
  4311  00194E  0E00               	movlw	0
  4312  001950  EC86  F029         	call	_lcd_send
  4313  001954                     
  4314                           ;lib_ili9341.c: 66:     lcd_send(1,0x00);
  4315  001954  0E00               	movlw	0
  4316  001956  0100               	movlb	0	; () banked
  4317  001958  6F87               	movwf	lcd_send@value& (0+255),b
  4318  00195A  0E01               	movlw	1
  4319  00195C  EC86  F029         	call	_lcd_send
  4320  001960                     
  4321                           ;lib_ili9341.c: 67:     lcd_send(1,0x00);
  4322  001960  0E00               	movlw	0
  4323  001962  0100               	movlb	0	; () banked
  4324  001964  6F87               	movwf	lcd_send@value& (0+255),b
  4325  001966  0E01               	movlw	1
  4326  001968  EC86  F029         	call	_lcd_send
  4327  00196C                     
  4328                           ;lib_ili9341.c: 68:     lcd_send(0,0xC0);
  4329  00196C  0EC0               	movlw	192
  4330  00196E  0100               	movlb	0	; () banked
  4331  001970  6F87               	movwf	lcd_send@value& (0+255),b
  4332  001972  0E00               	movlw	0
  4333  001974  EC86  F029         	call	_lcd_send
  4334  001978                     
  4335                           ;lib_ili9341.c: 69:     lcd_send(1,0x23);
  4336  001978  0E23               	movlw	35
  4337  00197A  0100               	movlb	0	; () banked
  4338  00197C  6F87               	movwf	lcd_send@value& (0+255),b
  4339  00197E  0E01               	movlw	1
  4340  001980  EC86  F029         	call	_lcd_send
  4341  001984                     
  4342                           ;lib_ili9341.c: 70:     lcd_send(0,0xC1);
  4343  001984  0EC1               	movlw	193
  4344  001986  0100               	movlb	0	; () banked
  4345  001988  6F87               	movwf	lcd_send@value& (0+255),b
  4346  00198A  0E00               	movlw	0
  4347  00198C  EC86  F029         	call	_lcd_send
  4348  001990                     
  4349                           ;lib_ili9341.c: 71:     lcd_send(1,0x10);
  4350  001990  0E10               	movlw	16
  4351  001992  0100               	movlb	0	; () banked
  4352  001994  6F87               	movwf	lcd_send@value& (0+255),b
  4353  001996  0E01               	movlw	1
  4354  001998  EC86  F029         	call	_lcd_send
  4355  00199C                     
  4356                           ;lib_ili9341.c: 72:     lcd_send(0,0xC5);
  4357  00199C  0EC5               	movlw	197
  4358  00199E  0100               	movlb	0	; () banked
  4359  0019A0  6F87               	movwf	lcd_send@value& (0+255),b
  4360  0019A2  0E00               	movlw	0
  4361  0019A4  EC86  F029         	call	_lcd_send
  4362  0019A8                     
  4363                           ;lib_ili9341.c: 73:     lcd_send(1,0x3e);
  4364  0019A8  0E3E               	movlw	62
  4365  0019AA  0100               	movlb	0	; () banked
  4366  0019AC  6F87               	movwf	lcd_send@value& (0+255),b
  4367  0019AE  0E01               	movlw	1
  4368  0019B0  EC86  F029         	call	_lcd_send
  4369  0019B4                     
  4370                           ;lib_ili9341.c: 74:     lcd_send(1,0x28);
  4371  0019B4  0E28               	movlw	40
  4372  0019B6  0100               	movlb	0	; () banked
  4373  0019B8  6F87               	movwf	lcd_send@value& (0+255),b
  4374  0019BA  0E01               	movlw	1
  4375  0019BC  EC86  F029         	call	_lcd_send
  4376  0019C0                     
  4377                           ;lib_ili9341.c: 75:     lcd_send(0,0xC7);
  4378  0019C0  0EC7               	movlw	199
  4379  0019C2  0100               	movlb	0	; () banked
  4380  0019C4  6F87               	movwf	lcd_send@value& (0+255),b
  4381  0019C6  0E00               	movlw	0
  4382  0019C8  EC86  F029         	call	_lcd_send
  4383  0019CC                     
  4384                           ;lib_ili9341.c: 76:     lcd_send(1,0x86);
  4385  0019CC  0E86               	movlw	134
  4386  0019CE  0100               	movlb	0	; () banked
  4387  0019D0  6F87               	movwf	lcd_send@value& (0+255),b
  4388  0019D2  0E01               	movlw	1
  4389  0019D4  EC86  F029         	call	_lcd_send
  4390  0019D8                     
  4391                           ;lib_ili9341.c: 77:     lcd_send(0,0x36);
  4392  0019D8  0E36               	movlw	54
  4393  0019DA  0100               	movlb	0	; () banked
  4394  0019DC  6F87               	movwf	lcd_send@value& (0+255),b
  4395  0019DE  0E00               	movlw	0
  4396  0019E0  EC86  F029         	call	_lcd_send
  4397  0019E4                     
  4398                           ;lib_ili9341.c: 78:     lcd_send(1,0x48);
  4399  0019E4  0E48               	movlw	72
  4400  0019E6  0100               	movlb	0	; () banked
  4401  0019E8  6F87               	movwf	lcd_send@value& (0+255),b
  4402  0019EA  0E01               	movlw	1
  4403  0019EC  EC86  F029         	call	_lcd_send
  4404  0019F0                     
  4405                           ;lib_ili9341.c: 79:     lcd_send(0,0x3A);
  4406  0019F0  0E3A               	movlw	58
  4407  0019F2  0100               	movlb	0	; () banked
  4408  0019F4  6F87               	movwf	lcd_send@value& (0+255),b
  4409  0019F6  0E00               	movlw	0
  4410  0019F8  EC86  F029         	call	_lcd_send
  4411  0019FC                     
  4412                           ;lib_ili9341.c: 80:     lcd_send(1,0x55);
  4413  0019FC  0E55               	movlw	85
  4414  0019FE  0100               	movlb	0	; () banked
  4415  001A00  6F87               	movwf	lcd_send@value& (0+255),b
  4416  001A02  0E01               	movlw	1
  4417  001A04  EC86  F029         	call	_lcd_send
  4418  001A08                     
  4419                           ;lib_ili9341.c: 81:     lcd_send(0,0xB1);
  4420  001A08  0EB1               	movlw	177
  4421  001A0A  0100               	movlb	0	; () banked
  4422  001A0C  6F87               	movwf	lcd_send@value& (0+255),b
  4423  001A0E  0E00               	movlw	0
  4424  001A10  EC86  F029         	call	_lcd_send
  4425  001A14                     
  4426                           ;lib_ili9341.c: 82:     lcd_send(1,0x00);
  4427  001A14  0E00               	movlw	0
  4428  001A16  0100               	movlb	0	; () banked
  4429  001A18  6F87               	movwf	lcd_send@value& (0+255),b
  4430  001A1A  0E01               	movlw	1
  4431  001A1C  EC86  F029         	call	_lcd_send
  4432  001A20                     
  4433                           ;lib_ili9341.c: 83:     lcd_send(1,0x18);
  4434  001A20  0E18               	movlw	24
  4435  001A22  0100               	movlb	0	; () banked
  4436  001A24  6F87               	movwf	lcd_send@value& (0+255),b
  4437  001A26  0E01               	movlw	1
  4438  001A28  EC86  F029         	call	_lcd_send
  4439  001A2C                     
  4440                           ;lib_ili9341.c: 84:     lcd_send(0,0xB6);
  4441  001A2C  0EB6               	movlw	182
  4442  001A2E  0100               	movlb	0	; () banked
  4443  001A30  6F87               	movwf	lcd_send@value& (0+255),b
  4444  001A32  0E00               	movlw	0
  4445  001A34  EC86  F029         	call	_lcd_send
  4446  001A38                     
  4447                           ;lib_ili9341.c: 85:     lcd_send(1,0x08);
  4448  001A38  0E08               	movlw	8
  4449  001A3A  0100               	movlb	0	; () banked
  4450  001A3C  6F87               	movwf	lcd_send@value& (0+255),b
  4451  001A3E  0E01               	movlw	1
  4452  001A40  EC86  F029         	call	_lcd_send
  4453  001A44                     
  4454                           ;lib_ili9341.c: 86:     lcd_send(1,0x82);
  4455  001A44  0E82               	movlw	130
  4456  001A46  0100               	movlb	0	; () banked
  4457  001A48  6F87               	movwf	lcd_send@value& (0+255),b
  4458  001A4A  0E01               	movlw	1
  4459  001A4C  EC86  F029         	call	_lcd_send
  4460  001A50                     
  4461                           ;lib_ili9341.c: 87:     lcd_send(1,0x27);
  4462  001A50  0E27               	movlw	39
  4463  001A52  0100               	movlb	0	; () banked
  4464  001A54  6F87               	movwf	lcd_send@value& (0+255),b
  4465  001A56  0E01               	movlw	1
  4466  001A58  EC86  F029         	call	_lcd_send
  4467  001A5C                     
  4468                           ;lib_ili9341.c: 88:     lcd_send(0,0xF2);
  4469  001A5C  0EF2               	movlw	242
  4470  001A5E  0100               	movlb	0	; () banked
  4471  001A60  6F87               	movwf	lcd_send@value& (0+255),b
  4472  001A62  0E00               	movlw	0
  4473  001A64  EC86  F029         	call	_lcd_send
  4474  001A68                     
  4475                           ;lib_ili9341.c: 89:     lcd_send(1,0x00);
  4476  001A68  0E00               	movlw	0
  4477  001A6A  0100               	movlb	0	; () banked
  4478  001A6C  6F87               	movwf	lcd_send@value& (0+255),b
  4479  001A6E  0E01               	movlw	1
  4480  001A70  EC86  F029         	call	_lcd_send
  4481  001A74                     
  4482                           ;lib_ili9341.c: 90:     lcd_send(0,0x26);
  4483  001A74  0E26               	movlw	38
  4484  001A76  0100               	movlb	0	; () banked
  4485  001A78  6F87               	movwf	lcd_send@value& (0+255),b
  4486  001A7A  0E00               	movlw	0
  4487  001A7C  EC86  F029         	call	_lcd_send
  4488  001A80                     
  4489                           ;lib_ili9341.c: 91:     lcd_send(1,0x01);
  4490  001A80  0E01               	movlw	1
  4491  001A82  0100               	movlb	0	; () banked
  4492  001A84  6F87               	movwf	lcd_send@value& (0+255),b
  4493  001A86  0E01               	movlw	1
  4494  001A88  EC86  F029         	call	_lcd_send
  4495  001A8C                     
  4496                           ;lib_ili9341.c: 92:     lcd_send(0,0xE0);
  4497  001A8C  0EE0               	movlw	224
  4498  001A8E  0100               	movlb	0	; () banked
  4499  001A90  6F87               	movwf	lcd_send@value& (0+255),b
  4500  001A92  0E00               	movlw	0
  4501  001A94  EC86  F029         	call	_lcd_send
  4502  001A98                     
  4503                           ;lib_ili9341.c: 93:     lcd_send(1,0x0F);
  4504  001A98  0E0F               	movlw	15
  4505  001A9A  0100               	movlb	0	; () banked
  4506  001A9C  6F87               	movwf	lcd_send@value& (0+255),b
  4507  001A9E  0E01               	movlw	1
  4508  001AA0  EC86  F029         	call	_lcd_send
  4509  001AA4                     
  4510                           ;lib_ili9341.c: 94:     lcd_send(1,0x31);
  4511  001AA4  0E31               	movlw	49
  4512  001AA6  0100               	movlb	0	; () banked
  4513  001AA8  6F87               	movwf	lcd_send@value& (0+255),b
  4514  001AAA  0E01               	movlw	1
  4515  001AAC  EC86  F029         	call	_lcd_send
  4516  001AB0                     
  4517                           ;lib_ili9341.c: 95:     lcd_send(1,0x2B);
  4518  001AB0  0E2B               	movlw	43
  4519  001AB2  0100               	movlb	0	; () banked
  4520  001AB4  6F87               	movwf	lcd_send@value& (0+255),b
  4521  001AB6  0E01               	movlw	1
  4522  001AB8  EC86  F029         	call	_lcd_send
  4523  001ABC                     
  4524                           ;lib_ili9341.c: 96:     lcd_send(1,0x0C);
  4525  001ABC  0E0C               	movlw	12
  4526  001ABE  0100               	movlb	0	; () banked
  4527  001AC0  6F87               	movwf	lcd_send@value& (0+255),b
  4528  001AC2  0E01               	movlw	1
  4529  001AC4  EC86  F029         	call	_lcd_send
  4530  001AC8                     
  4531                           ;lib_ili9341.c: 97:     lcd_send(1,0x0E);
  4532  001AC8  0E0E               	movlw	14
  4533  001ACA  0100               	movlb	0	; () banked
  4534  001ACC  6F87               	movwf	lcd_send@value& (0+255),b
  4535  001ACE  0E01               	movlw	1
  4536  001AD0  EC86  F029         	call	_lcd_send
  4537  001AD4                     
  4538                           ;lib_ili9341.c: 98:     lcd_send(1,0x08);
  4539  001AD4  0E08               	movlw	8
  4540  001AD6  0100               	movlb	0	; () banked
  4541  001AD8  6F87               	movwf	lcd_send@value& (0+255),b
  4542  001ADA  0E01               	movlw	1
  4543  001ADC  EC86  F029         	call	_lcd_send
  4544  001AE0                     
  4545                           ;lib_ili9341.c: 99:     lcd_send(1,0x4E);
  4546  001AE0  0E4E               	movlw	78
  4547  001AE2  0100               	movlb	0	; () banked
  4548  001AE4  6F87               	movwf	lcd_send@value& (0+255),b
  4549  001AE6  0E01               	movlw	1
  4550  001AE8  EC86  F029         	call	_lcd_send
  4551  001AEC                     
  4552                           ;lib_ili9341.c: 100:     lcd_send(1,0xF1);
  4553  001AEC  0EF1               	movlw	241
  4554  001AEE  0100               	movlb	0	; () banked
  4555  001AF0  6F87               	movwf	lcd_send@value& (0+255),b
  4556  001AF2  0E01               	movlw	1
  4557  001AF4  EC86  F029         	call	_lcd_send
  4558  001AF8                     
  4559                           ;lib_ili9341.c: 101:     lcd_send(1,0x37);
  4560  001AF8  0E37               	movlw	55
  4561  001AFA  0100               	movlb	0	; () banked
  4562  001AFC  6F87               	movwf	lcd_send@value& (0+255),b
  4563  001AFE  0E01               	movlw	1
  4564  001B00  EC86  F029         	call	_lcd_send
  4565  001B04                     
  4566                           ;lib_ili9341.c: 102:     lcd_send(1,0x07);
  4567  001B04  0E07               	movlw	7
  4568  001B06  0100               	movlb	0	; () banked
  4569  001B08  6F87               	movwf	lcd_send@value& (0+255),b
  4570  001B0A  0E01               	movlw	1
  4571  001B0C  EC86  F029         	call	_lcd_send
  4572  001B10                     
  4573                           ;lib_ili9341.c: 103:     lcd_send(1,0x10);
  4574  001B10  0E10               	movlw	16
  4575  001B12  0100               	movlb	0	; () banked
  4576  001B14  6F87               	movwf	lcd_send@value& (0+255),b
  4577  001B16  0E01               	movlw	1
  4578  001B18  EC86  F029         	call	_lcd_send
  4579  001B1C                     
  4580                           ;lib_ili9341.c: 104:     lcd_send(1,0x03);
  4581  001B1C  0E03               	movlw	3
  4582  001B1E  0100               	movlb	0	; () banked
  4583  001B20  6F87               	movwf	lcd_send@value& (0+255),b
  4584  001B22  0E01               	movlw	1
  4585  001B24  EC86  F029         	call	_lcd_send
  4586  001B28                     
  4587                           ;lib_ili9341.c: 105:     lcd_send(1,0x0E);
  4588  001B28  0E0E               	movlw	14
  4589  001B2A  0100               	movlb	0	; () banked
  4590  001B2C  6F87               	movwf	lcd_send@value& (0+255),b
  4591  001B2E  0E01               	movlw	1
  4592  001B30  EC86  F029         	call	_lcd_send
  4593  001B34                     
  4594                           ;lib_ili9341.c: 106:     lcd_send(1,0x09);
  4595  001B34  0E09               	movlw	9
  4596  001B36  0100               	movlb	0	; () banked
  4597  001B38  6F87               	movwf	lcd_send@value& (0+255),b
  4598  001B3A  0E01               	movlw	1
  4599  001B3C  EC86  F029         	call	_lcd_send
  4600  001B40                     
  4601                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
  4602  001B40  0E00               	movlw	0
  4603  001B42  0100               	movlb	0	; () banked
  4604  001B44  6F87               	movwf	lcd_send@value& (0+255),b
  4605  001B46  0E01               	movlw	1
  4606  001B48  EC86  F029         	call	_lcd_send
  4607  001B4C                     
  4608                           ;lib_ili9341.c: 108:     lcd_send(0,0xE1);
  4609  001B4C  0EE1               	movlw	225
  4610  001B4E  0100               	movlb	0	; () banked
  4611  001B50  6F87               	movwf	lcd_send@value& (0+255),b
  4612  001B52  0E00               	movlw	0
  4613  001B54  EC86  F029         	call	_lcd_send
  4614  001B58                     
  4615                           ;lib_ili9341.c: 109:     lcd_send(1,0x00);
  4616  001B58  0E00               	movlw	0
  4617  001B5A  0100               	movlb	0	; () banked
  4618  001B5C  6F87               	movwf	lcd_send@value& (0+255),b
  4619  001B5E  0E01               	movlw	1
  4620  001B60  EC86  F029         	call	_lcd_send
  4621  001B64                     
  4622                           ;lib_ili9341.c: 110:     lcd_send(1,0x0E);
  4623  001B64  0E0E               	movlw	14
  4624  001B66  0100               	movlb	0	; () banked
  4625  001B68  6F87               	movwf	lcd_send@value& (0+255),b
  4626  001B6A  0E01               	movlw	1
  4627  001B6C  EC86  F029         	call	_lcd_send
  4628  001B70                     
  4629                           ;lib_ili9341.c: 111:     lcd_send(1,0x14);
  4630  001B70  0E14               	movlw	20
  4631  001B72  0100               	movlb	0	; () banked
  4632  001B74  6F87               	movwf	lcd_send@value& (0+255),b
  4633  001B76  0E01               	movlw	1
  4634  001B78  EC86  F029         	call	_lcd_send
  4635  001B7C                     
  4636                           ;lib_ili9341.c: 112:     lcd_send(1,0x03);
  4637  001B7C  0E03               	movlw	3
  4638  001B7E  0100               	movlb	0	; () banked
  4639  001B80  6F87               	movwf	lcd_send@value& (0+255),b
  4640  001B82  0E01               	movlw	1
  4641  001B84  EC86  F029         	call	_lcd_send
  4642  001B88                     
  4643                           ;lib_ili9341.c: 113:     lcd_send(1,0x11);
  4644  001B88  0E11               	movlw	17
  4645  001B8A  0100               	movlb	0	; () banked
  4646  001B8C  6F87               	movwf	lcd_send@value& (0+255),b
  4647  001B8E  0E01               	movlw	1
  4648  001B90  EC86  F029         	call	_lcd_send
  4649  001B94                     
  4650                           ;lib_ili9341.c: 114:     lcd_send(1,0x07);
  4651  001B94  0E07               	movlw	7
  4652  001B96  0100               	movlb	0	; () banked
  4653  001B98  6F87               	movwf	lcd_send@value& (0+255),b
  4654  001B9A  0E01               	movlw	1
  4655  001B9C  EC86  F029         	call	_lcd_send
  4656  001BA0                     
  4657                           ;lib_ili9341.c: 115:     lcd_send(1,0x31);
  4658  001BA0  0E31               	movlw	49
  4659  001BA2  0100               	movlb	0	; () banked
  4660  001BA4  6F87               	movwf	lcd_send@value& (0+255),b
  4661  001BA6  0E01               	movlw	1
  4662  001BA8  EC86  F029         	call	_lcd_send
  4663  001BAC                     
  4664                           ;lib_ili9341.c: 116:     lcd_send(1,0xC1);
  4665  001BAC  0EC1               	movlw	193
  4666  001BAE  0100               	movlb	0	; () banked
  4667  001BB0  6F87               	movwf	lcd_send@value& (0+255),b
  4668  001BB2  0E01               	movlw	1
  4669  001BB4  EC86  F029         	call	_lcd_send
  4670  001BB8                     
  4671                           ;lib_ili9341.c: 117:     lcd_send(1,0x48);
  4672  001BB8  0E48               	movlw	72
  4673  001BBA  0100               	movlb	0	; () banked
  4674  001BBC  6F87               	movwf	lcd_send@value& (0+255),b
  4675  001BBE  0E01               	movlw	1
  4676  001BC0  EC86  F029         	call	_lcd_send
  4677  001BC4                     
  4678                           ;lib_ili9341.c: 118:     lcd_send(1,0x08);
  4679  001BC4  0E08               	movlw	8
  4680  001BC6  0100               	movlb	0	; () banked
  4681  001BC8  6F87               	movwf	lcd_send@value& (0+255),b
  4682  001BCA  0E01               	movlw	1
  4683  001BCC  EC86  F029         	call	_lcd_send
  4684  001BD0                     
  4685                           ;lib_ili9341.c: 119:     lcd_send(1,0x0F);
  4686  001BD0  0E0F               	movlw	15
  4687  001BD2  0100               	movlb	0	; () banked
  4688  001BD4  6F87               	movwf	lcd_send@value& (0+255),b
  4689  001BD6  0E01               	movlw	1
  4690  001BD8  EC86  F029         	call	_lcd_send
  4691  001BDC                     
  4692                           ;lib_ili9341.c: 120:     lcd_send(1,0x0C);
  4693  001BDC  0E0C               	movlw	12
  4694  001BDE  0100               	movlb	0	; () banked
  4695  001BE0  6F87               	movwf	lcd_send@value& (0+255),b
  4696  001BE2  0E01               	movlw	1
  4697  001BE4  EC86  F029         	call	_lcd_send
  4698  001BE8                     
  4699                           ;lib_ili9341.c: 121:     lcd_send(1,0x31);
  4700  001BE8  0E31               	movlw	49
  4701  001BEA  0100               	movlb	0	; () banked
  4702  001BEC  6F87               	movwf	lcd_send@value& (0+255),b
  4703  001BEE  0E01               	movlw	1
  4704  001BF0  EC86  F029         	call	_lcd_send
  4705  001BF4                     
  4706                           ;lib_ili9341.c: 122:     lcd_send(1,0x36);
  4707  001BF4  0E36               	movlw	54
  4708  001BF6  0100               	movlb	0	; () banked
  4709  001BF8  6F87               	movwf	lcd_send@value& (0+255),b
  4710  001BFA  0E01               	movlw	1
  4711  001BFC  EC86  F029         	call	_lcd_send
  4712  001C00                     
  4713                           ;lib_ili9341.c: 123:     lcd_send(1,0x0F);
  4714  001C00  0E0F               	movlw	15
  4715  001C02  0100               	movlb	0	; () banked
  4716  001C04  6F87               	movwf	lcd_send@value& (0+255),b
  4717  001C06  0E01               	movlw	1
  4718  001C08  EC86  F029         	call	_lcd_send
  4719  001C0C                     
  4720                           ;lib_ili9341.c: 124:     lcd_send(0,0x11);
  4721  001C0C  0E11               	movlw	17
  4722  001C0E  0100               	movlb	0	; () banked
  4723  001C10  6F87               	movwf	lcd_send@value& (0+255),b
  4724  001C12  0E00               	movlw	0
  4725  001C14  EC86  F029         	call	_lcd_send
  4726                           
  4727                           ;lib_ili9341.c: 125:     msDelay(120);
  4728  001C18  0E78               	movlw	120
  4729  001C1A  EC78  F028         	call	_msDelay
  4730  001C1E                     
  4731                           ;lib_ili9341.c: 126:     lcd_send(0,0x29);
  4732  001C1E  0E29               	movlw	41
  4733  001C20  0100               	movlb	0	; () banked
  4734  001C22  6F87               	movwf	lcd_send@value& (0+255),b
  4735  001C24  0E00               	movlw	0
  4736  001C26  EC86  F029         	call	_lcd_send
  4737  001C2A                     
  4738                           ;lib_ili9341.c: 127:     msDelay(120);
  4739  001C2A  0E78               	movlw	120
  4740  001C2C  EC78  F028         	call	_msDelay
  4741  001C30                     
  4742                           ;lib_ili9341.c: 130:     lcd_fill(global_bg_color);
  4743  001C30  0E00               	movlw	0
  4744  001C32  0100               	movlb	0	; () banked
  4745  001C34  6F90               	movwf	(lcd_fill@bg_color+1)& (0+255),b
  4746  001C36  0E00               	movlw	0
  4747  001C38  6F8F               	movwf	lcd_fill@bg_color& (0+255),b
  4748  001C3A  EC1F  F025         	call	_lcd_fill	;wreg free
  4749  001C3E  0012               	return		;funcret
  4750  001C40                     __end_of_lcd_init:
  4751                           	opt callstack 0
  4752                           
  4753 ;; *************** function _msDelay *****************
  4754 ;; Defined at:
  4755 ;;		line 16 in file "lib_ili9341.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  ms              1    wreg     unsigned char 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  ms              1   39[BANK0 ] unsigned char 
  4760 ;;  k               1   40[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;Total ram usage:        3 bytes
  4775 ;; Hardware stack levels used:    1
  4776 ;; Hardware stack levels required when called:    7
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_lcd_init
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text4
  4785  0050F0                     __ptext4:
  4786                           	opt callstack 0
  4787  0050F0                     _msDelay:
  4788                           	opt callstack 22
  4789                           
  4790                           ;incstack = 0
  4791                           ;msDelay@ms stored from wreg
  4792  0050F0  0100               	movlb	0	; () banked
  4793  0050F2  6F87               	movwf	msDelay@ms& (0+255),b
  4794  0050F4                     
  4795                           ;lib_ili9341.c: 16: void msDelay (uint8_t ms);lib_ili9341.c: 17: {;lib_ili9341.c: 18:   
      +                            uint8_t k;;lib_ili9341.c: 20:     for(k=0; k<ms; k++)
  4796  0050F4  0E00               	movlw	0
  4797  0050F6  0100               	movlb	0	; () banked
  4798  0050F8  6F88               	movwf	msDelay@k& (0+255),b
  4799  0050FA  EF8A  F028         	goto	l5993
  4800  0050FE                     l5989:
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;lib_ili9341.c: 21:     {;lib_ili9341.c: 22:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
  4804  0050FE  0E03               	movlw	3
  4805  005100  0100               	movlb	0	; () banked
  4806  005102  6F86               	movwf	??_msDelay& (0+255),b
  4807  005104  0E97               	movlw	151
  4808  005106                     u9007:
  4809  005106  2EE8               	decfsz	wreg,f,c
  4810  005108  D7FE               	bra	u9007
  4811  00510A  2F86               	decfsz	??_msDelay& (0+255),f,b
  4812  00510C  D7FC               	bra	u9007
  4813  00510E  D000               	nop2	
  4814  005110                     
  4815                           ;lib_ili9341.c: 23:     }
  4816  005110  0100               	movlb	0	; () banked
  4817  005112  2B88               	incf	msDelay@k& (0+255),f,b
  4818  005114                     l5993:
  4819                           
  4820                           ; BSR set to: 0
  4821  005114  5187               	movf	msDelay@ms& (0+255),w,b
  4822  005116  5D88               	subwf	msDelay@k& (0+255),w,b
  4823  005118  A0D8               	btfss	status,0,c
  4824  00511A  EF91  F028         	goto	u6581
  4825  00511E  EF93  F028         	goto	u6580
  4826  005122                     u6581:
  4827  005122  EF7F  F028         	goto	l5989
  4828  005126                     u6580:
  4829  005126                     
  4830                           ; BSR set to: 0
  4831  005126  0012               	return		;funcret
  4832  005128                     __end_of_msDelay:
  4833                           	opt callstack 0
  4834                           
  4835 ;; *************** function _lcd_fill *****************
  4836 ;; Defined at:
  4837 ;;		line 193 in file "lib_ili9341.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  bg_color        2   47[BANK0 ] unsigned short 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  width           2   51[BANK0 ] unsigned short 
  4842 ;;  height          2   49[BANK0 ] unsigned short 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      void 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4853 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4855 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4856 ;;Total ram usage:        6 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:   11
  4859 ;; This function calls:
  4860 ;;		_lcd_draw_pixel
  4861 ;;		_lcd_set_cursor
  4862 ;; This function is called by:
  4863 ;;		_lcd_init
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text5
  4868  004A3E                     __ptext5:
  4869                           	opt callstack 0
  4870  004A3E                     _lcd_fill:
  4871                           	opt callstack 18
  4872  004A3E                     
  4873                           ;lib_ili9341.c: 193: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 194: {;lib_ili9341.
      +                          c: 195:     uint16_t width = 320, height = 240;
  4874  004A3E  0E01               	movlw	1
  4875  004A40  0100               	movlb	0	; () banked
  4876  004A42  6F94               	movwf	(lcd_fill@width+1)& (0+255),b
  4877  004A44  0E40               	movlw	64
  4878  004A46  6F93               	movwf	lcd_fill@width& (0+255),b
  4879  004A48  0E00               	movlw	0
  4880  004A4A  6F92               	movwf	(lcd_fill@height+1)& (0+255),b
  4881  004A4C  0EF0               	movlw	240
  4882  004A4E  6F91               	movwf	lcd_fill@height& (0+255),b
  4883  004A50                     
  4884                           ; BSR set to: 0
  4885                           ;lib_ili9341.c: 197:     if( lcd_set_cursor(0,0) )
  4886  004A50  0E00               	movlw	0
  4887  004A52  6F8C               	movwf	(lcd_set_cursor@x+1)& (0+255),b
  4888  004A54  0E00               	movlw	0
  4889  004A56  6F8B               	movwf	lcd_set_cursor@x& (0+255),b
  4890  004A58  0E00               	movlw	0
  4891  004A5A  6F8E               	movwf	(lcd_set_cursor@y+1)& (0+255),b
  4892  004A5C  0E00               	movlw	0
  4893  004A5E  6F8D               	movwf	lcd_set_cursor@y& (0+255),b
  4894  004A60  EC65  F027         	call	_lcd_set_cursor	;wreg free
  4895  004A64  0900               	iorlw	0
  4896  004A66  B4D8               	btfsc	status,2,c
  4897  004A68  EF38  F025         	goto	u8601
  4898  004A6C  EF3A  F025         	goto	u8600
  4899  004A70                     u8601:
  4900  004A70  EF54  F025         	goto	l7537
  4901  004A74                     u8600:
  4902  004A74  EF62  F025         	goto	l603
  4903  004A78                     l7531:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;lib_ili9341.c: 205:         {;lib_ili9341.c: 206:             lcd_draw_pixel(bg_color);
  4907  004A78  C08F  F089         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
  4908  004A7C  C090  F08A         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
  4909  004A80  ECC0  F029         	call	_lcd_draw_pixel	;wreg free
  4910  004A84                     l7533:
  4911                           
  4912                           ;lib_ili9341.c: 204:         while(width--)
  4913  004A84  0100               	movlb	0	; () banked
  4914  004A86  0793               	decf	lcd_fill@width& (0+255),f,b
  4915  004A88  A0D8               	btfss	status,0,c
  4916  004A8A  0794               	decf	(lcd_fill@width+1)& (0+255),f,b
  4917  004A8C  2993               	incf	lcd_fill@width& (0+255),w,b
  4918  004A8E  E106               	bnz	u8611
  4919  004A90  2994               	incf	(lcd_fill@width+1)& (0+255),w,b
  4920  004A92  A4D8               	btfss	status,2,c
  4921  004A94  EF4E  F025         	goto	u8611
  4922  004A98  EF50  F025         	goto	u8610
  4923  004A9C                     u8611:
  4924  004A9C  EF3C  F025         	goto	l7531
  4925  004AA0                     u8610:
  4926  004AA0                     
  4927                           ; BSR set to: 0
  4928                           ;lib_ili9341.c: 208:         width = 320;
  4929  004AA0  0E01               	movlw	1
  4930  004AA2  6F94               	movwf	(lcd_fill@width+1)& (0+255),b
  4931  004AA4  0E40               	movlw	64
  4932  004AA6  6F93               	movwf	lcd_fill@width& (0+255),b
  4933  004AA8                     l7537:
  4934                           
  4935                           ;lib_ili9341.c: 202:     while(height--)
  4936  004AA8  0100               	movlb	0	; () banked
  4937  004AAA  0791               	decf	lcd_fill@height& (0+255),f,b
  4938  004AAC  A0D8               	btfss	status,0,c
  4939  004AAE  0792               	decf	(lcd_fill@height+1)& (0+255),f,b
  4940  004AB0  2991               	incf	lcd_fill@height& (0+255),w,b
  4941  004AB2  E106               	bnz	u8621
  4942  004AB4  2992               	incf	(lcd_fill@height+1)& (0+255),w,b
  4943  004AB6  A4D8               	btfss	status,2,c
  4944  004AB8  EF60  F025         	goto	u8621
  4945  004ABC  EF62  F025         	goto	u8620
  4946  004AC0                     u8621:
  4947  004AC0  EF42  F025         	goto	l7533
  4948  004AC4                     u8620:
  4949  004AC4                     l603:
  4950  004AC4  0012               	return		;funcret
  4951  004AC6                     __end_of_lcd_fill:
  4952                           	opt callstack 0
  4953                           
  4954 ;; *************** function _lcd_draw_string *****************
  4955 ;; Defined at:
  4956 ;;		line 380 in file "lib_ili9341.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  x               2   69[BANK0 ] unsigned short 
  4959 ;;  y               2   71[BANK0 ] unsigned short 
  4960 ;;  pS              2   73[BANK0 ] PTR const unsigned char 
  4961 ;;		 -> string(30), STR_5(33), 
  4962 ;;  fg_color        2   75[BANK0 ] unsigned short 
  4963 ;;  bg_color        2   77[BANK0 ] unsigned short 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  lIndex          2    2[BANK1 ] unsigned short 
  4966 ;;  k               2    0[BANK1 ] unsigned short 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4976 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4978 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;      Totals:         0      14       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4980 ;;Total ram usage:       18 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; Hardware stack levels required when called:   12
  4983 ;; This function calls:
  4984 ;;		_lcd_draw_char
  4985 ;; This function is called by:
  4986 ;;		_main
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text6
  4991  003E00                     __ptext6:
  4992                           	opt callstack 0
  4993  003E00                     _lcd_draw_string:
  4994                           	opt callstack 18
  4995  003E00                     
  4996                           ;lib_ili9341.c: 380: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 381: {;lib_ili9341.c: 382:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 384:     while(*pS)
  4997  003E00  EF8B  F01F         	goto	l7835
  4998  003E04                     l7821:
  4999                           
  5000                           ;lib_ili9341.c: 385:     {;lib_ili9341.c: 386:         lIndex = 0;
  5001  003E04  0E00               	movlw	0
  5002  003E06  0101               	movlb	1	; () banked
  5003  003E08  6F03               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
  5004  003E0A  0E00               	movlw	0
  5005  003E0C  6F02               	movwf	lcd_draw_string@lIndex& (0+255),b
  5006                           
  5007                           ;lib_ili9341.c: 387:         for(k=0; k<(*pS - ' '); k++)
  5008  003E0E  0E00               	movlw	0
  5009  003E10  6F01               	movwf	(lcd_draw_string@k+1)& (0+255),b
  5010  003E12  0E00               	movlw	0
  5011  003E14  6F00               	movwf	lcd_draw_string@k& (0+255),b
  5012  003E16  EF30  F01F         	goto	l7827
  5013  003E1A                     l7823:
  5014                           
  5015                           ; BSR set to: 1
  5016                           ;lib_ili9341.c: 388:         {;lib_ili9341.c: 389:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
  5017  003E1A  90D8               	bcf	status,0,c
  5018  003E1C  3502               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
  5019  003E1E  6EF6               	movwf	tblptrl,c
  5020  003E20  3503               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
  5021  003E22  6EF7               	movwf	tblptrh,c
  5022  003E24  0E0D               	movlw	low _font
  5023  003E26  26F6               	addwf	tblptrl,f,c
  5024  003E28  0EF1               	movlw	high _font
  5025  003E2A  22F7               	addwfc	tblptrh,f,c
  5026  003E2C                     	if	1	;There are 3 active tblptr bytes
  5027  003E2C  6AF8               	clrf	tblptru,c
  5028  003E2E  0E00               	movlw	low (__mediumconst shr (0+16))
  5029  003E30  22F8               	addwfc	tblptru,f,c
  5030  003E32                     	endif
  5031  003E32  0009               	tblrd		*+
  5032  003E34  CFF5 F0AF          	movff	tablat,??_lcd_draw_string
  5033  003E38  0009               	tblrd		*+
  5034  003E3A  CFF5 F0B0          	movff	tablat,??_lcd_draw_string+1
  5035  003E3E  90D8               	bcf	status,0,c
  5036  003E40  0100               	movlb	0	; () banked
  5037  003E42  37AF               	rlcf	??_lcd_draw_string& (0+255),f,b
  5038  003E44  37B0               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
  5039  003E46  0E01               	movlw	1
  5040  003E48  27AF               	addwf	??_lcd_draw_string& (0+255),f,b
  5041  003E4A  0E00               	movlw	0
  5042  003E4C  23B0               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
  5043  003E4E  51AF               	movf	??_lcd_draw_string& (0+255),w,b
  5044  003E50  0101               	movlb	1	; () banked
  5045  003E52  2702               	addwf	lcd_draw_string@lIndex& (0+255),f,b
  5046  003E54  0100               	movlb	0	; () banked
  5047  003E56  51B0               	movf	(??_lcd_draw_string+1)& (0+255),w,b
  5048  003E58  0101               	movlb	1	; () banked
  5049  003E5A  2303               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
  5050  003E5C                     
  5051                           ; BSR set to: 1
  5052                           ;lib_ili9341.c: 390:         }
  5053  003E5C  4B00               	infsnz	lcd_draw_string@k& (0+255),f,b
  5054  003E5E  2B01               	incf	(lcd_draw_string@k+1)& (0+255),f,b
  5055  003E60                     l7827:
  5056                           
  5057                           ; BSR set to: 1
  5058  003E60  0EE0               	movlw	224
  5059  003E62  0100               	movlb	0	; () banked
  5060  003E64  6FAF               	movwf	??_lcd_draw_string& (0+255),b
  5061  003E66  0EFF               	movlw	255
  5062  003E68  6FB0               	movwf	(??_lcd_draw_string+1)& (0+255),b
  5063  003E6A  C0A9  FFF6         	movff	lcd_draw_string@pS,tblptrl
  5064  003E6E  C0AA  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
  5065  003E72  0E00               	movlw	low (__mediumconst shr (0+16))
  5066  003E74  6EF8               	movwf	tblptru,c
  5067  003E76  0E0E               	movlw	(high __ramtop+-1)
  5068  003E78  64F7               	cpfsgt	tblptrh,c
  5069  003E7A  D003               	bra	u8757
  5070  003E7C  0008               	tblrd		*
  5071  003E7E  50F5               	movf	tablat,w,c
  5072  003E80  D005               	bra	u8750
  5073  003E82                     u8757:
  5074  003E82  CFF6 FFE1          	movff	tblptrl,fsr1l
  5075  003E86  CFF7 FFE2          	movff	tblptrh,fsr1h
  5076  003E8A  50E7               	movf	indf1,w,c
  5077  003E8C                     u8750:
  5078  003E8C  0100               	movlb	0	; () banked
  5079  003E8E  6FB1               	movwf	(??_lcd_draw_string+2)& (0+255),b
  5080  003E90  6BB2               	clrf	(??_lcd_draw_string+3)& (0+255),b
  5081  003E92  51AF               	movf	??_lcd_draw_string& (0+255),w,b
  5082  003E94  27B1               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
  5083  003E96  51B0               	movf	(??_lcd_draw_string+1)& (0+255),w,b
  5084  003E98  23B2               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
  5085  003E9A  51B1               	movf	(??_lcd_draw_string+2)& (0+255),w,b
  5086  003E9C  0101               	movlb	1	; () banked
  5087  003E9E  5D00               	subwf	lcd_draw_string@k& (0+255),w,b
  5088  003EA0  0100               	movlb	0	; () banked
  5089  003EA2  51B2               	movf	(??_lcd_draw_string+3)& (0+255),w,b
  5090  003EA4  0101               	movlb	1	; () banked
  5091  003EA6  5901               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
  5092  003EA8  A0D8               	btfss	status,0,c
  5093  003EAA  EF59  F01F         	goto	u8761
  5094  003EAE  EF5B  F01F         	goto	u8760
  5095  003EB2                     u8761:
  5096  003EB2  EF0D  F01F         	goto	l7823
  5097  003EB6                     u8760:
  5098  003EB6                     
  5099                           ; BSR set to: 1
  5100                           ;lib_ili9341.c: 392:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
  5101  003EB6  C0A5  F08F         	movff	lcd_draw_string@x,lcd_draw_char@x
  5102  003EBA  C0A6  F090         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
  5103  003EBE  C0A7  F091         	movff	lcd_draw_string@y,lcd_draw_char@y
  5104  003EC2  C0A8  F092         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
  5105  003EC6  C102  F093         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
  5106  003ECA  C103  F094         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
  5107  003ECE  C0AB  F095         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
  5108  003ED2  C0AC  F096         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
  5109  003ED6  C0AD  F097         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
  5110  003EDA  C0AE  F098         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
  5111  003EDE  EC8C  F01D         	call	_lcd_draw_char	;wreg free
  5112  003EE2                     
  5113                           ;lib_ili9341.c: 394:         x += font[lIndex];
  5114  003EE2  90D8               	bcf	status,0,c
  5115  003EE4  0101               	movlb	1	; () banked
  5116  003EE6  3502               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
  5117  003EE8  6EF6               	movwf	tblptrl,c
  5118  003EEA  3503               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
  5119  003EEC  6EF7               	movwf	tblptrh,c
  5120  003EEE  0E0D               	movlw	low _font
  5121  003EF0  26F6               	addwf	tblptrl,f,c
  5122  003EF2  0EF1               	movlw	high _font
  5123  003EF4  22F7               	addwfc	tblptrh,f,c
  5124  003EF6                     	if	1	;There are 3 active tblptr bytes
  5125  003EF6  6AF8               	clrf	tblptru,c
  5126  003EF8  0E00               	movlw	low (__mediumconst shr (0+16))
  5127  003EFA  22F8               	addwfc	tblptru,f,c
  5128  003EFC                     	endif
  5129  003EFC  0009               	tblrd		*+
  5130  003EFE  CFF5 F0AF          	movff	tablat,??_lcd_draw_string
  5131  003F02  0009               	tblrd		*+
  5132  003F04  CFF5 F0B0          	movff	tablat,??_lcd_draw_string+1
  5133  003F08  0100               	movlb	0	; () banked
  5134  003F0A  51AF               	movf	??_lcd_draw_string& (0+255),w,b
  5135  003F0C  27A5               	addwf	lcd_draw_string@x& (0+255),f,b
  5136  003F0E  51B0               	movf	(??_lcd_draw_string+1)& (0+255),w,b
  5137  003F10  23A6               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
  5138  003F12                     
  5139                           ; BSR set to: 0
  5140                           ;lib_ili9341.c: 396:         pS++;
  5141  003F12  4BA9               	infsnz	lcd_draw_string@pS& (0+255),f,b
  5142  003F14  2BAA               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
  5143  003F16                     l7835:
  5144                           
  5145                           ;lib_ili9341.c: 384:     while(*pS)
  5146  003F16  C0A9  FFF6         	movff	lcd_draw_string@pS,tblptrl
  5147  003F1A  C0AA  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
  5148  003F1E  0E00               	movlw	low (__mediumconst shr (0+16))
  5149  003F20  6EF8               	movwf	tblptru,c
  5150  003F22  0E0E               	movlw	(high __ramtop+-1)
  5151  003F24  64F7               	cpfsgt	tblptrh,c
  5152  003F26  D003               	bra	u8777
  5153  003F28  0008               	tblrd		*
  5154  003F2A  50F5               	movf	tablat,w,c
  5155  003F2C  D005               	bra	u8770
  5156  003F2E                     u8777:
  5157  003F2E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5158  003F32  CFF7 FFE2          	movff	tblptrh,fsr1h
  5159  003F36  50E7               	movf	indf1,w,c
  5160  003F38                     u8770:
  5161  003F38  0900               	iorlw	0
  5162  003F3A  A4D8               	btfss	status,2,c
  5163  003F3C  EFA2  F01F         	goto	u8781
  5164  003F40  EFA4  F01F         	goto	u8780
  5165  003F44                     u8781:
  5166  003F44  EF02  F01F         	goto	l7821
  5167  003F48                     u8780:
  5168  003F48  0012               	return		;funcret
  5169  003F4A                     __end_of_lcd_draw_string:
  5170                           	opt callstack 0
  5171                           
  5172 ;; *************** function _lcd_draw_char *****************
  5173 ;; Defined at:
  5174 ;;		line 355 in file "lib_ili9341.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  x               2   47[BANK0 ] unsigned short 
  5177 ;;  y               2   49[BANK0 ] unsigned short 
  5178 ;;  fIndex          2   51[BANK0 ] unsigned short 
  5179 ;;  fg_color        2   53[BANK0 ] unsigned short 
  5180 ;;  bg_color        2   55[BANK0 ] unsigned short 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  i               1   68[BANK0 ] unsigned char 
  5183 ;;  k               1   67[BANK0 ] unsigned char 
  5184 ;;  j               1   66[BANK0 ] unsigned char 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5194 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;Total ram usage:       22 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:   11
  5201 ;; This function calls:
  5202 ;;		_lcd_draw_pixel
  5203 ;;		_lcd_set_cursor
  5204 ;; This function is called by:
  5205 ;;		_lcd_draw_string
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text7
  5210  003B18                     __ptext7:
  5211                           	opt callstack 0
  5212  003B18                     _lcd_draw_char:
  5213                           	opt callstack 18
  5214  003B18                     
  5215                           ;lib_ili9341.c: 355: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 356: {;lib_ili9341.c: 357:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 359:     for(j=0; j < font[fIndex]; j++)
  5216  003B18  0E00               	movlw	0
  5217  003B1A  0100               	movlb	0	; () banked
  5218  003B1C  6FA2               	movwf	lcd_draw_char@j& (0+255),b
  5219  003B1E  EF30  F01E         	goto	l7575
  5220  003B22                     l7545:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;lib_ili9341.c: 360:     {;lib_ili9341.c: 361:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
  5224  003B22  90D8               	bcf	status,0,c
  5225  003B24  3593               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
  5226  003B26  6EF6               	movwf	tblptrl,c
  5227  003B28  3594               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5228  003B2A  6EF7               	movwf	tblptrh,c
  5229  003B2C  0E0D               	movlw	low _font
  5230  003B2E  26F6               	addwf	tblptrl,f,c
  5231  003B30  0EF1               	movlw	high _font
  5232  003B32  22F7               	addwfc	tblptrh,f,c
  5233  003B34                     	if	1	;There are 3 active tblptr bytes
  5234  003B34  6AF8               	clrf	tblptru,c
  5235  003B36  0E00               	movlw	low (__mediumconst shr (0+16))
  5236  003B38  22F8               	addwfc	tblptru,f,c
  5237  003B3A                     	endif
  5238  003B3A  0009               	tblrd		*+
  5239  003B3C  CFF5 F099          	movff	tablat,??_lcd_draw_char
  5240  003B40  0009               	tblrd		*+
  5241  003B42  CFF5 F09A          	movff	tablat,??_lcd_draw_char+1
  5242  003B46  51A2               	movf	lcd_draw_char@j& (0+255),w,b
  5243  003B48  5F99               	subwf	??_lcd_draw_char& (0+255),f,b
  5244  003B4A  0E00               	movlw	0
  5245  003B4C  5B9A               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
  5246  003B4E  518F               	movf	lcd_draw_char@x& (0+255),w,b
  5247  003B50  2599               	addwf	??_lcd_draw_char& (0+255),w,b
  5248  003B52  6F8B               	movwf	lcd_set_cursor@x& (0+255),b
  5249  003B54  5190               	movf	(lcd_draw_char@x+1)& (0+255),w,b
  5250  003B56  219A               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
  5251  003B58  6F8C               	movwf	(lcd_set_cursor@x+1)& (0+255),b
  5252  003B5A  C091  F08D         	movff	lcd_draw_char@y,lcd_set_cursor@y
  5253  003B5E  C092  F08E         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
  5254  003B62  EC65  F027         	call	_lcd_set_cursor	;wreg free
  5255  003B66                     
  5256                           ;lib_ili9341.c: 363:         for(k=0; k<2; k++)
  5257  003B66  0E00               	movlw	0
  5258  003B68  0100               	movlb	0	; () banked
  5259  003B6A  6FA3               	movwf	lcd_draw_char@k& (0+255),b
  5260  003B6C                     l7553:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;lib_ili9341.c: 364:         {;lib_ili9341.c: 365:             for(i=0; i<8; i++)
  5264  003B6C  0E00               	movlw	0
  5265  003B6E  6FA4               	movwf	lcd_draw_char@i& (0+255),b
  5266  003B70                     l7559:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;lib_ili9341.c: 366:             {;lib_ili9341.c: 367:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
  5270  003B70  51A2               	movf	lcd_draw_char@j& (0+255),w,b
  5271  003B72  6F99               	movwf	??_lcd_draw_char& (0+255),b
  5272  003B74  6B9A               	clrf	(??_lcd_draw_char+1)& (0+255),b
  5273  003B76  90D8               	bcf	status,0,c
  5274  003B78  3799               	rlcf	??_lcd_draw_char& (0+255),f,b
  5275  003B7A  379A               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
  5276  003B7C  90D8               	bcf	status,0,c
  5277  003B7E  3593               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
  5278  003B80  6EF6               	movwf	tblptrl,c
  5279  003B82  3594               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5280  003B84  6EF7               	movwf	tblptrh,c
  5281  003B86  0E0D               	movlw	low _font
  5282  003B88  26F6               	addwf	tblptrl,f,c
  5283  003B8A  0EF1               	movlw	high _font
  5284  003B8C  22F7               	addwfc	tblptrh,f,c
  5285  003B8E                     	if	1	;There are 3 active tblptr bytes
  5286  003B8E  6AF8               	clrf	tblptru,c
  5287  003B90  0E00               	movlw	low (__mediumconst shr (0+16))
  5288  003B92  22F8               	addwfc	tblptru,f,c
  5289  003B94                     	endif
  5290  003B94  0009               	tblrd		*+
  5291  003B96  CFF5 F09B          	movff	tablat,??_lcd_draw_char+2
  5292  003B9A  0009               	tblrd		*+
  5293  003B9C  CFF5 F09C          	movff	tablat,??_lcd_draw_char+3
  5294  003BA0  90D8               	bcf	status,0,c
  5295  003BA2  379B               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
  5296  003BA4  379C               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
  5297  003BA6  5199               	movf	??_lcd_draw_char& (0+255),w,b
  5298  003BA8  5F9B               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
  5299  003BAA  519A               	movf	(??_lcd_draw_char+1)& (0+255),w,b
  5300  003BAC  5B9C               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
  5301  003BAE  51A3               	movf	lcd_draw_char@k& (0+255),w,b
  5302  003BB0  5F9B               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
  5303  003BB2  0E00               	movlw	0
  5304  003BB4  5B9C               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
  5305  003BB6  5193               	movf	lcd_draw_char@fIndex& (0+255),w,b
  5306  003BB8  279B               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
  5307  003BBA  5194               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5308  003BBC  239C               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
  5309  003BBE  90D8               	bcf	status,0,c
  5310  003BC0  379B               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
  5311  003BC2  379C               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
  5312  003BC4  0E0D               	movlw	low _font
  5313  003BC6  259B               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
  5314  003BC8  6EF6               	movwf	tblptrl,c
  5315  003BCA  0EF1               	movlw	high _font
  5316  003BCC  219C               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
  5317  003BCE  6EF7               	movwf	tblptrh,c
  5318  003BD0                     	if	1	;There are 3 active tblptr bytes
  5319  003BD0  6AF8               	clrf	tblptru,c
  5320  003BD2  0E00               	movlw	low (__mediumconst shr (0+16))
  5321  003BD4  22F8               	addwfc	tblptru,f,c
  5322  003BD6                     	endif
  5323  003BD6  0009               	tblrd		*+
  5324  003BD8  CFF5 F09D          	movff	tablat,??_lcd_draw_char+4
  5325  003BDC  0009               	tblrd		*+
  5326  003BDE  CFF5 F09E          	movff	tablat,??_lcd_draw_char+5
  5327  003BE2  C0A4  F09F         	movff	lcd_draw_char@i,??_lcd_draw_char+6
  5328  003BE6  0E80               	movlw	128
  5329  003BE8  6FA0               	movwf	(??_lcd_draw_char+7)& (0+255),b
  5330  003BEA  0E00               	movlw	0
  5331  003BEC  6FA1               	movwf	(??_lcd_draw_char+8)& (0+255),b
  5332  003BEE  2B9F               	incf	(??_lcd_draw_char+6)& (0+255),f,b
  5333  003BF0  EFFD  F01D         	goto	u8644
  5334  003BF4                     u8645:
  5335  003BF4  35A1               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
  5336  003BF6  33A1               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
  5337  003BF8  33A0               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
  5338  003BFA                     u8644:
  5339  003BFA  2F9F               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
  5340  003BFC  EFFA  F01D         	goto	u8645
  5341  003C00  0100               	movlb	0	; () banked
  5342  003C02  519D               	movf	(??_lcd_draw_char+4)& (0+255),w,b
  5343  003C04  17A0               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
  5344  003C06  519E               	movf	(??_lcd_draw_char+5)& (0+255),w,b
  5345  003C08  17A1               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
  5346  003C0A  51A0               	movf	(??_lcd_draw_char+7)& (0+255),w,b
  5347  003C0C  11A1               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
  5348  003C0E  B4D8               	btfsc	status,2,c
  5349  003C10  EF0C  F01E         	goto	u8651
  5350  003C14  EF0E  F01E         	goto	u8650
  5351  003C18                     u8651:
  5352  003C18  EF16  F01E         	goto	l7563
  5353  003C1C                     u8650:
  5354  003C1C                     
  5355                           ; BSR set to: 0
  5356                           ;lib_ili9341.c: 368:                 {;lib_ili9341.c: 369:                     lcd_draw_
      +                          pixel(fg_color);
  5357  003C1C  C095  F089         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
  5358  003C20  C096  F08A         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
  5359  003C24  ECC0  F029         	call	_lcd_draw_pixel	;wreg free
  5360                           
  5361                           ;lib_ili9341.c: 370:                 }
  5362  003C28  EF1C  F01E         	goto	l7565
  5363  003C2C                     l7563:
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;lib_ili9341.c: 372:                 {;lib_ili9341.c: 373:                     lcd_draw_
      +                          pixel(bg_color);
  5367  003C2C  C097  F089         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
  5368  003C30  C098  F08A         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
  5369  003C34  ECC0  F029         	call	_lcd_draw_pixel	;wreg free
  5370  003C38                     l7565:
  5371                           
  5372                           ;lib_ili9341.c: 375:             }
  5373  003C38  0100               	movlb	0	; () banked
  5374  003C3A  2BA4               	incf	lcd_draw_char@i& (0+255),f,b
  5375  003C3C                     
  5376                           ; BSR set to: 0
  5377  003C3C  0E07               	movlw	7
  5378  003C3E  65A4               	cpfsgt	lcd_draw_char@i& (0+255),b
  5379  003C40  EF24  F01E         	goto	u8661
  5380  003C44  EF26  F01E         	goto	u8660
  5381  003C48                     u8661:
  5382  003C48  EFB8  F01D         	goto	l7559
  5383  003C4C                     u8660:
  5384  003C4C                     
  5385                           ; BSR set to: 0
  5386                           ;lib_ili9341.c: 376:         }
  5387  003C4C  2BA3               	incf	lcd_draw_char@k& (0+255),f,b
  5388  003C4E                     
  5389                           ; BSR set to: 0
  5390  003C4E  0E01               	movlw	1
  5391  003C50  65A3               	cpfsgt	lcd_draw_char@k& (0+255),b
  5392  003C52  EF2D  F01E         	goto	u8671
  5393  003C56  EF2F  F01E         	goto	u8670
  5394  003C5A                     u8671:
  5395  003C5A  EFB6  F01D         	goto	l7553
  5396  003C5E                     u8670:
  5397  003C5E                     
  5398                           ; BSR set to: 0
  5399                           ;lib_ili9341.c: 377:     }
  5400  003C5E  2BA2               	incf	lcd_draw_char@j& (0+255),f,b
  5401  003C60                     l7575:
  5402                           
  5403                           ; BSR set to: 0
  5404  003C60  90D8               	bcf	status,0,c
  5405  003C62  3593               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
  5406  003C64  6EF6               	movwf	tblptrl,c
  5407  003C66  3594               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
  5408  003C68  6EF7               	movwf	tblptrh,c
  5409  003C6A  0E0D               	movlw	low _font
  5410  003C6C  26F6               	addwf	tblptrl,f,c
  5411  003C6E  0EF1               	movlw	high _font
  5412  003C70  22F7               	addwfc	tblptrh,f,c
  5413  003C72                     	if	1	;There are 3 active tblptr bytes
  5414  003C72  6AF8               	clrf	tblptru,c
  5415  003C74  0E00               	movlw	low (__mediumconst shr (0+16))
  5416  003C76  22F8               	addwfc	tblptru,f,c
  5417  003C78                     	endif
  5418  003C78  51A2               	movf	lcd_draw_char@j& (0+255),w,b
  5419  003C7A  6F99               	movwf	??_lcd_draw_char& (0+255),b
  5420  003C7C  6B9A               	clrf	(??_lcd_draw_char+1)& (0+255),b
  5421  003C7E  0009               	tblrd		*+
  5422  003C80  50F5               	movf	tablat,w,c
  5423  003C82  5D99               	subwf	??_lcd_draw_char& (0+255),w,b
  5424  003C84  0009               	tblrd		*+
  5425  003C86  50F5               	movf	tablat,w,c
  5426  003C88  599A               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
  5427  003C8A  A0D8               	btfss	status,0,c
  5428  003C8C  EF4A  F01E         	goto	u8681
  5429  003C90  EF4C  F01E         	goto	u8680
  5430  003C94                     u8681:
  5431  003C94  EF91  F01D         	goto	l7545
  5432  003C98                     u8680:
  5433  003C98                     
  5434                           ; BSR set to: 0
  5435  003C98  0012               	return		;funcret
  5436  003C9A                     __end_of_lcd_draw_char:
  5437                           	opt callstack 0
  5438                           
  5439 ;; *************** function _lcd_set_cursor *****************
  5440 ;; Defined at:
  5441 ;;		line 144 in file "lib_ili9341.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  x               2   43[BANK0 ] unsigned short 
  5444 ;;  y               2   45[BANK0 ] unsigned short 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;		None
  5447 ;; Return value:  Size  Location     Type
  5448 ;;                  1    wreg      unsigned char 
  5449 ;; Registers used:
  5450 ;;		wreg, status,2, status,0, cstack
  5451 ;; Tracked objects:
  5452 ;;		On entry : 0/0
  5453 ;;		On exit  : 0/0
  5454 ;;		Unchanged: 0/0
  5455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5456 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;Total ram usage:        4 bytes
  5461 ;; Hardware stack levels used:    1
  5462 ;; Hardware stack levels required when called:   10
  5463 ;; This function calls:
  5464 ;;		_lcd_set_cursor_x
  5465 ;;		_lcd_set_cursor_y
  5466 ;; This function is called by:
  5467 ;;		_lcd_fill
  5468 ;;		_lcd_draw_char
  5469 ;;		_lcd_draw_pixel_at
  5470 ;;		_lcd_fill_rect
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text8
  5475  004ECA                     __ptext8:
  5476                           	opt callstack 0
  5477  004ECA                     _lcd_set_cursor:
  5478                           	opt callstack 18
  5479  004ECA                     
  5480                           ;lib_ili9341.c: 144: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 145: 
      +                          {;lib_ili9341.c: 146:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
  5481  004ECA  C08B  F089         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
  5482  004ECE  C08C  F08A         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
  5483  004ED2  ECAF  F026         	call	_lcd_set_cursor_x	;wreg free
  5484  004ED6  0900               	iorlw	0
  5485  004ED8  A4D8               	btfss	status,2,c
  5486  004EDA  EF71  F027         	goto	u8571
  5487  004EDE  EF73  F027         	goto	u8570
  5488  004EE2                     u8571:
  5489  004EE2  EF81  F027         	goto	l7499
  5490  004EE6                     u8570:
  5491  004EE6  C08D  F089         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
  5492  004EEA  C08E  F08A         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
  5493  004EEE  EC88  F026         	call	_lcd_set_cursor_y	;wreg free
  5494  004EF2  0900               	iorlw	0
  5495  004EF4  B4D8               	btfsc	status,2,c
  5496  004EF6  EF7F  F027         	goto	u8581
  5497  004EFA  EF81  F027         	goto	u8580
  5498  004EFE                     u8581:
  5499  004EFE  EF84  F027         	goto	l7503
  5500  004F02                     u8580:
  5501  004F02                     l7499:
  5502                           
  5503                           ;lib_ili9341.c: 147:     {;lib_ili9341.c: 148:         return 1;
  5504  004F02  0E01               	movlw	1
  5505  004F04  EF85  F027         	goto	l588
  5506  004F08                     l7503:
  5507                           
  5508                           ;lib_ili9341.c: 151:     return 0;
  5509  004F08  0E00               	movlw	0
  5510  004F0A                     l588:
  5511  004F0A  0012               	return		;funcret
  5512  004F0C                     __end_of_lcd_set_cursor:
  5513                           	opt callstack 0
  5514                           
  5515 ;; *************** function _lcd_set_cursor_y *****************
  5516 ;; Defined at:
  5517 ;;		line 170 in file "lib_ili9341.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  y               2   41[BANK0 ] unsigned short 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;		None
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      unsigned char 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5534 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5535 ;;Total ram usage:        2 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    9
  5538 ;; This function calls:
  5539 ;;		_lcd_send
  5540 ;; This function is called by:
  5541 ;;		_lcd_set_cursor
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text9
  5546  004D10                     __ptext9:
  5547                           	opt callstack 0
  5548  004D10                     _lcd_set_cursor_y:
  5549                           	opt callstack 18
  5550  004D10                     
  5551                           ;lib_ili9341.c: 170: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 171: {;lib_ili9
      +                          341.c: 172:     if( y >= 240 )
  5552  004D10  0100               	movlb	0	; () banked
  5553  004D12  518A               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
  5554  004D14  E109               	bnz	u8110
  5555  004D16  0EF0               	movlw	240
  5556  004D18  5D89               	subwf	lcd_set_cursor_y@y& (0+255),w,b
  5557  004D1A  A0D8               	btfss	status,0,c
  5558  004D1C  EF92  F026         	goto	u8111
  5559  004D20  EF94  F026         	goto	u8110
  5560  004D24                     u8111:
  5561  004D24  EF97  F026         	goto	l7157
  5562  004D28                     u8110:
  5563  004D28                     
  5564                           ; BSR set to: 0
  5565                           ;lib_ili9341.c: 173:     {;lib_ili9341.c: 174:         return 1;
  5566  004D28  0E01               	movlw	1
  5567  004D2A  EFAE  F026         	goto	l596
  5568  004D2E                     l7157:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;lib_ili9341.c: 177:     lcd_send(0, 0x2A);
  5572  004D2E  0E2A               	movlw	42
  5573  004D30  6F87               	movwf	lcd_send@value& (0+255),b
  5574  004D32  0E00               	movlw	0
  5575  004D34  EC86  F029         	call	_lcd_send
  5576                           
  5577                           ;lib_ili9341.c: 178:     lcd_send(1, y >> 8);
  5578  004D38  0100               	movlb	0	; () banked
  5579  004D3A  518A               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
  5580  004D3C  6F87               	movwf	lcd_send@value& (0+255),b
  5581  004D3E  0E01               	movlw	1
  5582  004D40  EC86  F029         	call	_lcd_send
  5583                           
  5584                           ;lib_ili9341.c: 179:     lcd_send(1, y & 0xFF);
  5585  004D44  C089  F087         	movff	lcd_set_cursor_y@y,lcd_send@value
  5586  004D48  0E01               	movlw	1
  5587  004D4A  EC86  F029         	call	_lcd_send
  5588                           
  5589                           ;lib_ili9341.c: 180:     lcd_send(0, 0x2c);
  5590  004D4E  0E2C               	movlw	44
  5591  004D50  0100               	movlb	0	; () banked
  5592  004D52  6F87               	movwf	lcd_send@value& (0+255),b
  5593  004D54  0E00               	movlw	0
  5594  004D56  EC86  F029         	call	_lcd_send
  5595  004D5A                     
  5596                           ;lib_ili9341.c: 182:     return 0;
  5597  004D5A  0E00               	movlw	0
  5598  004D5C                     l596:
  5599  004D5C  0012               	return		;funcret
  5600  004D5E                     __end_of_lcd_set_cursor_y:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _lcd_set_cursor_x *****************
  5604 ;; Defined at:
  5605 ;;		line 155 in file "lib_ili9341.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  x               2   41[BANK0 ] unsigned short 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      unsigned char 
  5612 ;; Registers used:
  5613 ;;		wreg, status,2, status,0, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5623 ;;Total ram usage:        2 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    9
  5626 ;; This function calls:
  5627 ;;		_lcd_send
  5628 ;; This function is called by:
  5629 ;;		_lcd_set_cursor
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text10
  5634  004D5E                     __ptext10:
  5635                           	opt callstack 0
  5636  004D5E                     _lcd_set_cursor_x:
  5637                           	opt callstack 18
  5638  004D5E                     
  5639                           ;lib_ili9341.c: 155: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 156: {;lib_ili9
      +                          341.c: 157:     if( x >= 320 )
  5640  004D5E  0E40               	movlw	64
  5641  004D60  0100               	movlb	0	; () banked
  5642  004D62  5D89               	subwf	lcd_set_cursor_x@x& (0+255),w,b
  5643  004D64  0E01               	movlw	1
  5644  004D66  598A               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
  5645  004D68  A0D8               	btfss	status,0,c
  5646  004D6A  EFB9  F026         	goto	u8101
  5647  004D6E  EFBB  F026         	goto	u8100
  5648  004D72                     u8101:
  5649  004D72  EFBE  F026         	goto	l7145
  5650  004D76                     u8100:
  5651  004D76                     
  5652                           ; BSR set to: 0
  5653                           ;lib_ili9341.c: 158:     {;lib_ili9341.c: 159:         return 1;
  5654  004D76  0E01               	movlw	1
  5655  004D78  EFD5  F026         	goto	l592
  5656  004D7C                     l7145:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;lib_ili9341.c: 162:     lcd_send(0, 0x2B);
  5660  004D7C  0E2B               	movlw	43
  5661  004D7E  6F87               	movwf	lcd_send@value& (0+255),b
  5662  004D80  0E00               	movlw	0
  5663  004D82  EC86  F029         	call	_lcd_send
  5664                           
  5665                           ;lib_ili9341.c: 163:     lcd_send(1, x >> 8);
  5666  004D86  0100               	movlb	0	; () banked
  5667  004D88  518A               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
  5668  004D8A  6F87               	movwf	lcd_send@value& (0+255),b
  5669  004D8C  0E01               	movlw	1
  5670  004D8E  EC86  F029         	call	_lcd_send
  5671                           
  5672                           ;lib_ili9341.c: 164:     lcd_send(1, x & 0xFF);
  5673  004D92  C089  F087         	movff	lcd_set_cursor_x@x,lcd_send@value
  5674  004D96  0E01               	movlw	1
  5675  004D98  EC86  F029         	call	_lcd_send
  5676                           
  5677                           ;lib_ili9341.c: 165:     lcd_send(0, 0x2c);
  5678  004D9C  0E2C               	movlw	44
  5679  004D9E  0100               	movlb	0	; () banked
  5680  004DA0  6F87               	movwf	lcd_send@value& (0+255),b
  5681  004DA2  0E00               	movlw	0
  5682  004DA4  EC86  F029         	call	_lcd_send
  5683  004DA8                     
  5684                           ;lib_ili9341.c: 167:     return 0;
  5685  004DA8  0E00               	movlw	0
  5686  004DAA                     l592:
  5687  004DAA  0012               	return		;funcret
  5688  004DAC                     __end_of_lcd_set_cursor_x:
  5689                           	opt callstack 0
  5690                           
  5691 ;; *************** function _lcd_draw_pixel *****************
  5692 ;; Defined at:
  5693 ;;		line 185 in file "lib_ili9341.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  color           2   41[BANK0 ] unsigned short 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;		None
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      unsigned char 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;Total ram usage:        2 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    9
  5714 ;; This function calls:
  5715 ;;		_lcd_send
  5716 ;; This function is called by:
  5717 ;;		_lcd_fill
  5718 ;;		_lcd_draw_char
  5719 ;;		_lcd_draw_pixel_at
  5720 ;;		_lcd_fill_rect
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text11
  5725  005380                     __ptext11:
  5726                           	opt callstack 0
  5727  005380                     _lcd_draw_pixel:
  5728                           	opt callstack 19
  5729  005380                     
  5730                           ;lib_ili9341.c: 185: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 186: {;lib_il
      +                          i9341.c: 187:     lcd_send(1, color >> 8);
  5731  005380  0100               	movlb	0	; () banked
  5732  005382  518A               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
  5733  005384  6F87               	movwf	lcd_send@value& (0+255),b
  5734  005386  0E01               	movlw	1
  5735  005388  EC86  F029         	call	_lcd_send
  5736                           
  5737                           ;lib_ili9341.c: 188:     lcd_send(1, color & 0xFF);
  5738  00538C  C089  F087         	movff	lcd_draw_pixel@color,lcd_send@value
  5739  005390  0E01               	movlw	1
  5740  005392  EC86  F029         	call	_lcd_send
  5741  005396  0012               	return		;funcret
  5742  005398                     __end_of_lcd_draw_pixel:
  5743                           	opt callstack 0
  5744                           
  5745 ;; *************** function _lcd_send *****************
  5746 ;; Defined at:
  5747 ;;		line 134 in file "lib_ili9341.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  dc              1    wreg     _Bool 
  5750 ;;  value           1   39[BANK0 ] unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  dc              1   40[BANK0 ] _Bool 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5762 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;Total ram usage:        2 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    8
  5769 ;; This function calls:
  5770 ;;		_SPI_ExchangeByte
  5771 ;; This function is called by:
  5772 ;;		_lcd_init
  5773 ;;		_lcd_set_cursor_x
  5774 ;;		_lcd_set_cursor_y
  5775 ;;		_lcd_draw_pixel
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text12
  5780  00530C                     __ptext12:
  5781                           	opt callstack 0
  5782  00530C                     _lcd_send:
  5783                           	opt callstack 21
  5784                           
  5785                           ;incstack = 0
  5786                           ;lcd_send@dc stored from wreg
  5787  00530C  0100               	movlb	0	; () banked
  5788  00530E  6F88               	movwf	lcd_send@dc& (0+255),b
  5789  005310                     
  5790                           ;lib_ili9341.c: 134: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 135: {;lib_il
      +                          i9341.c: 136:     LATEbits.LE0 = dc;
  5791  005310  0100               	movlb	0	; () banked
  5792  005312  B188               	btfsc	lcd_send@dc& (0+255),0,b
  5793  005314  D002               	bra	u7505
  5794  005316  908D               	bcf	141,0,c	;volatile
  5795  005318  D001               	bra	u7506
  5796  00531A                     u7505:
  5797  00531A  808D               	bsf	141,0,c	;volatile
  5798  00531C                     u7506:
  5799  00531C                     
  5800                           ;lib_ili9341.c: 138:     LATEbits.LE1 = 0;
  5801  00531C  928D               	bcf	141,1,c	;volatile
  5802  00531E                     
  5803                           ;lib_ili9341.c: 140:     SPI_ExchangeByte(value);
  5804  00531E  0100               	movlb	0	; () banked
  5805  005320  5187               	movf	lcd_send@value& (0+255),w,b
  5806  005322  ECA4  F029         	call	_SPI_ExchangeByte
  5807  005326                     
  5808                           ;lib_ili9341.c: 141:     LATEbits.LE1 = 1;
  5809  005326  828D               	bsf	141,1,c	;volatile
  5810  005328  0012               	return		;funcret
  5811  00532A                     __end_of_lcd_send:
  5812                           	opt callstack 0
  5813                           
  5814 ;; *************** function _SPI_ExchangeByte *****************
  5815 ;; Defined at:
  5816 ;;		line 92 in file "mcc_generated_files/spi.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  data            1    wreg     unsigned char 
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  data            1   38[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      unsigned char 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5834 ;;Total ram usage:        1 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    7
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_lcd_send
  5841 ;;		_SPI_WriteBlock
  5842 ;;		_SPI_ReadBlock
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text13
  5847  005348                     __ptext13:
  5848                           	opt callstack 0
  5849  005348                     _SPI_ExchangeByte:
  5850                           	opt callstack 21
  5851                           
  5852                           ;incstack = 0
  5853                           ;SPI_ExchangeByte@data stored from wreg
  5854  005348  0100               	movlb	0	; () banked
  5855  00534A  6F86               	movwf	SPI_ExchangeByte@data& (0+255),b
  5856  00534C                     
  5857                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
  5858  00534C  C086  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
  5859  005350                     l63:
  5860  005350  A69E               	btfss	158,3,c	;volatile
  5861  005352  EFAD  F029         	goto	u7171
  5862  005356  EFAF  F029         	goto	u7170
  5863  00535A                     u7171:
  5864  00535A  EFA8  F029         	goto	l63
  5865  00535E                     u7170:
  5866  00535E                     
  5867                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
  5868  00535E  969E               	bcf	158,3,c	;volatile
  5869                           
  5870                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
  5871  005360  50C9               	movf	201,w,c	;volatile
  5872  005362  0012               	return		;funcret
  5873  005364                     __end_of_SPI_ExchangeByte:
  5874                           	opt callstack 0
  5875                           
  5876 ;; *************** function _TMR2_StopTimer *****************
  5877 ;; Defined at:
  5878 ;;		line 93 in file "mcc_generated_files/tmr2.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;		None
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;		None
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		None
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;Total ram usage:        0 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    7
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_main
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text14
  5907  005470                     __ptext14:
  5908                           	opt callstack 0
  5909  005470                     _TMR2_StopTimer:
  5910                           	opt callstack 23
  5911  005470                     
  5912                           ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
  5913  005470  94CA               	bcf	202,2,c	;volatile
  5914  005472  0012               	return		;funcret
  5915  005474                     __end_of_TMR2_StopTimer:
  5916                           	opt callstack 0
  5917                           
  5918 ;; *************** function _TMR2_StartTimer *****************
  5919 ;; Defined at:
  5920 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		None
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    7
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_main
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text15
  5949  005474                     __ptext15:
  5950                           	opt callstack 0
  5951  005474                     _TMR2_StartTimer:
  5952                           	opt callstack 23
  5953  005474                     
  5954                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  5955  005474  84CA               	bsf	202,2,c	;volatile
  5956  005476  0012               	return		;funcret
  5957  005478                     __end_of_TMR2_StartTimer:
  5958                           	opt callstack 0
  5959                           
  5960 ;; *************** function _SYSTEM_Initialize *****************
  5961 ;; Defined at:
  5962 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;		None
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;Total ram usage:        0 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    9
  5983 ;; This function calls:
  5984 ;;		_ADC_Initialize
  5985 ;;		_EPWM1_Initialize
  5986 ;;		_EUSART1_Initialize
  5987 ;;		_INTERRUPT_Initialize
  5988 ;;		_OSCILLATOR_Initialize
  5989 ;;		_PIN_MANAGER_Initialize
  5990 ;;		_SPI_Initialize
  5991 ;;		_TMR1_Initialize
  5992 ;;		_TMR2_Initialize
  5993 ;; This function is called by:
  5994 ;;		_main
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text16
  5999  0052C0                     __ptext16:
  6000                           	opt callstack 0
  6001  0052C0                     _SYSTEM_Initialize:
  6002                           	opt callstack 21
  6003  0052C0                     
  6004                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6005  0052C0  EC3C  F02A         	call	_INTERRUPT_Initialize	;wreg free
  6006  0052C4                     
  6007                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
  6008  0052C4  ECF9  F029         	call	_SPI_Initialize	;wreg free
  6009  0052C8                     
  6010                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6011  0052C8  ECD6  F026         	call	_PIN_MANAGER_Initialize	;wreg free
  6012  0052CC                     
  6013                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6014  0052CC  EC02  F02A         	call	_OSCILLATOR_Initialize	;wreg free
  6015  0052D0                     
  6016                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  6017  0052D0  ECE4  F029         	call	_ADC_Initialize	;wreg free
  6018  0052D4                     
  6019                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  6020  0052D4  ECB2  F029         	call	_EPWM1_Initialize	;wreg free
  6021  0052D8                     
  6022                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6023  0052D8  EC95  F029         	call	_TMR2_Initialize	;wreg free
  6024  0052DC                     
  6025                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  6026  0052DC  EC94  F028         	call	_TMR1_Initialize	;wreg free
  6027  0052E0                     
  6028                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  6029  0052E0  EC42  F027         	call	_EUSART1_Initialize	;wreg free
  6030  0052E4  0012               	return		;funcret
  6031  0052E6                     __end_of_SYSTEM_Initialize:
  6032                           	opt callstack 0
  6033                           
  6034 ;; *************** function _TMR2_Initialize *****************
  6035 ;; Defined at:
  6036 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    8
  6057 ;; This function calls:
  6058 ;;		_TMR2_SetInterruptHandler
  6059 ;; This function is called by:
  6060 ;;		_SYSTEM_Initialize
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text17
  6065  00532A                     __ptext17:
  6066                           	opt callstack 0
  6067  00532A                     _TMR2_Initialize:
  6068                           	opt callstack 21
  6069  00532A                     
  6070                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
  6071  00532A  68CB               	setf	203,c	;volatile
  6072  00532C                     
  6073                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  6074  00532C  0E00               	movlw	0
  6075  00532E  6ECC               	movwf	204,c	;volatile
  6076  005330                     
  6077                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  6078  005330  929E               	bcf	158,1,c	;volatile
  6079  005332                     
  6080                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  6081  005332  829D               	bsf	157,1,c	;volatile
  6082  005334                     
  6083                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  6084  005334  0E80               	movlw	low _TMR2_DefaultInterruptHandler
  6085  005336  0100               	movlb	0	; () banked
  6086  005338  6F86               	movwf	TMR2_SetInterruptHandler@InterruptHandler& (0+255),b
  6087  00533A  0E54               	movlw	high _TMR2_DefaultInterruptHandler
  6088  00533C  6F87               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6089  00533E  EC18  F02A         	call	_TMR2_SetInterruptHandler	;wreg free
  6090  005342                     
  6091                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x06;
  6092  005342  0E06               	movlw	6
  6093  005344  6ECA               	movwf	202,c	;volatile
  6094  005346  0012               	return		;funcret
  6095  005348                     __end_of_TMR2_Initialize:
  6096                           	opt callstack 0
  6097                           
  6098 ;; *************** function _TMR2_SetInterruptHandler *****************
  6099 ;; Defined at:
  6100 ;;		line 147 in file "mcc_generated_files/tmr2.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  InterruptHan    2   38[BANK0 ] PTR FTN()void 
  6103 ;;		 -> TIMER2_CALLBACK(1), TMR2_DefaultInterruptHandler(1), 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;		None
  6106 ;; Return value:  Size  Location     Type
  6107 ;;                  1    wreg      void 
  6108 ;; Registers used:
  6109 ;;		wreg, status,2, status,0
  6110 ;; Tracked objects:
  6111 ;;		On entry : 0/0
  6112 ;;		On exit  : 0/0
  6113 ;;		Unchanged: 0/0
  6114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6119 ;;Total ram usage:        2 bytes
  6120 ;; Hardware stack levels used:    1
  6121 ;; Hardware stack levels required when called:    7
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_TMR2_Initialize
  6126 ;;		_main
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text18
  6131  005430                     __ptext18:
  6132                           	opt callstack 0
  6133  005430                     _TMR2_SetInterruptHandler:
  6134                           	opt callstack 23
  6135  005430                     
  6136                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
  6137  005430  C086  F1C3         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
  6138  005434  C087  F1C4         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
  6139  005438  0012               	return		;funcret
  6140  00543A                     __end_of_TMR2_SetInterruptHandler:
  6141                           	opt callstack 0
  6142                           
  6143 ;; *************** function _TMR1_Initialize *****************
  6144 ;; Defined at:
  6145 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;Total ram usage:        2 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    7
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_SYSTEM_Initialize
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text19
  6174  005128                     __ptext19:
  6175                           	opt callstack 0
  6176  005128                     _TMR1_Initialize:
  6177                           	opt callstack 22
  6178  005128                     
  6179                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  6180  005128  0E00               	movlw	0
  6181  00512A  6EAA               	movwf	170,c	;volatile
  6182                           
  6183                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x0B;
  6184  00512C  0E0B               	movlw	11
  6185  00512E  6ECF               	movwf	207,c	;volatile
  6186                           
  6187                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0xDC;
  6188  005130  0EDC               	movlw	220
  6189  005132  6ECE               	movwf	206,c	;volatile
  6190  005134                     
  6191                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
  6192  005134  909E               	bcf	158,0,c	;volatile
  6193  005136                     
  6194                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6195  005136  50CE               	movf	206,w,c	;volatile
  6196  005138  CFCF F086          	movff	4047,??_TMR1_Initialize	;volatile
  6197  00513C  0100               	movlb	0	; () banked
  6198  00513E  6B87               	clrf	(??_TMR1_Initialize+1)& (0+255),b
  6199  005140  C086  F087         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  6200  005144  6B86               	clrf	??_TMR1_Initialize& (0+255),b
  6201  005146  1186               	iorwf	??_TMR1_Initialize& (0+255),w,b
  6202  005148  0101               	movlb	1	; () banked
  6203  00514A  6FCB               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  6204  00514C  0100               	movlb	0	; () banked
  6205  00514E  5187               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
  6206  005150  0101               	movlb	1	; () banked
  6207  005152  6FCC               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  6208  005154                     
  6209                           ; BSR set to: 1
  6210                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  6211  005154  0E31               	movlw	49
  6212  005156  6ECD               	movwf	205,c	;volatile
  6213  005158                     
  6214                           ; BSR set to: 1
  6215  005158  0012               	return		;funcret
  6216  00515A                     __end_of_TMR1_Initialize:
  6217                           	opt callstack 0
  6218                           
  6219 ;; *************** function _SPI_Initialize *****************
  6220 ;; Defined at:
  6221 ;;		line 62 in file "mcc_generated_files/spi.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;		None
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;		None
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6239 ;;Total ram usage:        0 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    7
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_SYSTEM_Initialize
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text20
  6250  0053F2                     __ptext20:
  6251                           	opt callstack 0
  6252  0053F2                     _SPI_Initialize:
  6253                           	opt callstack 22
  6254  0053F2                     
  6255                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
  6256  0053F2  0E40               	movlw	64
  6257  0053F4  6EC7               	movwf	199,c	;volatile
  6258                           
  6259                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
  6260  0053F6  0E00               	movlw	0
  6261  0053F8  6EC6               	movwf	198,c	;volatile
  6262                           
  6263                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
  6264  0053FA  0E01               	movlw	1
  6265  0053FC  6EC8               	movwf	200,c	;volatile
  6266  0053FE                     
  6267                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
  6268  0053FE  9694               	bcf	148,3,c	;volatile
  6269  005400                     
  6270                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
  6271  005400  9AC6               	bcf	198,5,c	;volatile
  6272  005402  0012               	return		;funcret
  6273  005404                     __end_of_SPI_Initialize:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function _PIN_MANAGER_Initialize *****************
  6277 ;; Defined at:
  6278 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;		None
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  1    wreg      void 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6296 ;;Total ram usage:        0 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    8
  6299 ;; This function calls:
  6300 ;;		_IOCB4_SetInterruptHandler
  6301 ;; This function is called by:
  6302 ;;		_SYSTEM_Initialize
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text21
  6307  004DAC                     __ptext21:
  6308                           	opt callstack 0
  6309  004DAC                     _PIN_MANAGER_Initialize:
  6310                           	opt callstack 21
  6311  004DAC                     
  6312                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
  6313  004DAC  0E00               	movlw	0
  6314  004DAE  6E8D               	movwf	141,c	;volatile
  6315                           
  6316                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
  6317  004DB0  0E00               	movlw	0
  6318  004DB2  6E8C               	movwf	140,c	;volatile
  6319                           
  6320                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  6321  004DB4  0E00               	movlw	0
  6322  004DB6  6E89               	movwf	137,c	;volatile
  6323                           
  6324                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
  6325  004DB8  0E00               	movlw	0
  6326  004DBA  6E8A               	movwf	138,c	;volatile
  6327                           
  6328                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  6329  004DBC  0E00               	movlw	0
  6330  004DBE  6E8B               	movwf	139,c	;volatile
  6331                           
  6332                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
  6333  004DC0  0E04               	movlw	4
  6334  004DC2  6E96               	movwf	150,c	;volatile
  6335                           
  6336                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x0F;
  6337  004DC4  0E0F               	movlw	15
  6338  004DC6  6E92               	movwf	146,c	;volatile
  6339  004DC8                     
  6340                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
  6341  004DC8  6893               	setf	147,c	;volatile
  6342                           
  6343                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0x97;
  6344  004DCA  0E97               	movlw	151
  6345  004DCC  6E94               	movwf	148,c	;volatile
  6346                           
  6347                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xEF;
  6348  004DCE  0EEF               	movlw	239
  6349  004DD0  6E95               	movwf	149,c	;volatile
  6350  004DD2                     
  6351                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0xFF;
  6352  004DD2  010F               	movlb	15	; () banked
  6353  004DD4  695D               	setf	93,b	;volatile
  6354                           
  6355                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
  6356  004DD6  0E7D               	movlw	125
  6357  004DD8  6F5C               	movwf	92,b	;volatile
  6358                           
  6359                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
  6360  004DDA  0E00               	movlw	0
  6361  004DDC  6F5B               	movwf	91,b	;volatile
  6362  004DDE                     
  6363                           ; BSR set to: 15
  6364                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
  6365  004DDE  8EF1               	bsf	241,7,c	;volatile
  6366  004DE0                     
  6367                           ; BSR set to: 15
  6368                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
  6369  004DE0  895A               	bsf	90,4,b	;volatile
  6370  004DE2                     
  6371                           ; BSR set to: 15
  6372                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
  6373  004DE2  0E82               	movlw	low _IOCB4_DefaultInterruptHandler
  6374  004DE4  0100               	movlb	0	; () banked
  6375  004DE6  6F86               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  6376  004DE8  0E54               	movlw	high _IOCB4_DefaultInterruptHandler
  6377  004DEA  6F87               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  6378  004DEC  EC1D  F02A         	call	_IOCB4_SetInterruptHandler	;wreg free
  6379  004DF0                     
  6380                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
  6381  004DF0  86F2               	bsf	242,3,c	;volatile
  6382  004DF2  0012               	return		;funcret
  6383  004DF4                     __end_of_PIN_MANAGER_Initialize:
  6384                           	opt callstack 0
  6385                           
  6386 ;; *************** function _IOCB4_SetInterruptHandler *****************
  6387 ;; Defined at:
  6388 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  InterruptHan    2   38[BANK0 ] PTR FTN()void 
  6391 ;;		 -> INTERRUPT_S1_CALLBACK(1), IOCB4_DefaultInterruptHandler(1), 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6403 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6407 ;;Total ram usage:        2 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    7
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_PIN_MANAGER_Initialize
  6414 ;;		_main
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text22
  6419  00543A                     __ptext22:
  6420                           	opt callstack 0
  6421  00543A                     _IOCB4_SetInterruptHandler:
  6422                           	opt callstack 21
  6423  00543A                     
  6424                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
  6425  00543A  C086  F1CD         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  6426  00543E  C087  F1CE         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  6427  005442  0012               	return		;funcret
  6428  005444                     __end_of_IOCB4_SetInterruptHandler:
  6429                           	opt callstack 0
  6430                           
  6431 ;; *************** function _OSCILLATOR_Initialize *****************
  6432 ;; Defined at:
  6433 ;;		line 64 in file "mcc_generated_files/mcc.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;		None
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6451 ;;Total ram usage:        0 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    7
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_SYSTEM_Initialize
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text23
  6462  005404                     __ptext23:
  6463                           	opt callstack 0
  6464  005404                     _OSCILLATOR_Initialize:
  6465                           	opt callstack 22
  6466  005404                     
  6467                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x60;
  6468  005404  0E60               	movlw	96
  6469  005406  6ED3               	movwf	211,c	;volatile
  6470                           
  6471                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
  6472  005408  0E00               	movlw	0
  6473  00540A  6ED2               	movwf	210,c	;volatile
  6474                           
  6475                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  6476  00540C  0E00               	movlw	0
  6477  00540E  6E9B               	movwf	155,c	;volatile
  6478                           
  6479                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
  6480  005410  0E00               	movlw	0
  6481  005412  6E9A               	movwf	154,c	;volatile
  6482  005414  0012               	return		;funcret
  6483  005416                     __end_of_OSCILLATOR_Initialize:
  6484                           	opt callstack 0
  6485                           
  6486 ;; *************** function _INTERRUPT_Initialize *****************
  6487 ;; Defined at:
  6488 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;		None
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;		None
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		None
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;Total ram usage:        0 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    7
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_SYSTEM_Initialize
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text24
  6517  005478                     __ptext24:
  6518                           	opt callstack 0
  6519  005478                     _INTERRUPT_Initialize:
  6520                           	opt callstack 22
  6521  005478                     
  6522                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6523  005478  9ED0               	bcf	208,7,c	;volatile
  6524  00547A  0012               	return		;funcret
  6525  00547C                     __end_of_INTERRUPT_Initialize:
  6526                           	opt callstack 0
  6527                           
  6528 ;; *************** function _EUSART1_Initialize *****************
  6529 ;; Defined at:
  6530 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6548 ;;Total ram usage:        0 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    8
  6551 ;; This function calls:
  6552 ;;		_EUSART1_SetErrorHandler
  6553 ;;		_EUSART1_SetFramingErrorHandler
  6554 ;;		_EUSART1_SetOverrunErrorHandler
  6555 ;; This function is called by:
  6556 ;;		_SYSTEM_Initialize
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           	psect	text25
  6561  004E84                     __ptext25:
  6562                           	opt callstack 0
  6563  004E84                     _EUSART1_Initialize:
  6564                           	opt callstack 21
  6565  004E84                     
  6566                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6567  004E84  0E08               	movlw	8
  6568  004E86  6EA7               	movwf	167,c	;volatile
  6569                           
  6570                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6571  004E88  0E90               	movlw	144
  6572  004E8A  6EAB               	movwf	171,c	;volatile
  6573                           
  6574                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6575  004E8C  0E24               	movlw	36
  6576  004E8E  6EAC               	movwf	172,c	;volatile
  6577                           
  6578                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0xCF;
  6579  004E90  0ECF               	movlw	207
  6580  004E92  6EAF               	movwf	175,c	;volatile
  6581                           
  6582                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  6583  004E94  0E00               	movlw	0
  6584  004E96  6E7D               	movwf	125,c	;volatile
  6585  004E98                     
  6586                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6587  004E98  0E00               	movlw	0
  6588  004E9A  0100               	movlb	0	; () banked
  6589  004E9C  6F86               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  6590  004E9E  0E00               	movlw	0
  6591  004EA0  6F87               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  6592  004EA2  EC27  F02A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6593  004EA6                     
  6594                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6595  004EA6  0E00               	movlw	0
  6596  004EA8  0100               	movlb	0	; () banked
  6597  004EAA  6F86               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  6598  004EAC  0E00               	movlw	0
  6599  004EAE  6F87               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  6600  004EB0  EC22  F02A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6601  004EB4                     
  6602                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6603  004EB4  0E00               	movlw	0
  6604  004EB6  0100               	movlb	0	; () banked
  6605  004EB8  6F86               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  6606  004EBA  0E00               	movlw	0
  6607  004EBC  6F87               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  6608  004EBE  EC2C  F02A         	call	_EUSART1_SetErrorHandler	;wreg free
  6609  004EC2                     
  6610                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6611  004EC2  0E00               	movlw	0
  6612  004EC4  0100               	movlb	0	; () banked
  6613  004EC6  6FD5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6614  004EC8                     
  6615                           ; BSR set to: 0
  6616  004EC8  0012               	return		;funcret
  6617  004ECA                     __end_of_EUSART1_Initialize:
  6618                           	opt callstack 0
  6619                           
  6620 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6621 ;; Defined at:
  6622 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  interruptHan    2   38[BANK0 ] PTR FTN()void 
  6625 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      void 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6637 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;Total ram usage:        2 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    7
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_EUSART1_Initialize
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text26
  6652  005444                     __ptext26:
  6653                           	opt callstack 0
  6654  005444                     _EUSART1_SetOverrunErrorHandler:
  6655                           	opt callstack 21
  6656  005444                     
  6657                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6658  005444  C086  F1C7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6659  005448  C087  F1C8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6660  00544C  0012               	return		;funcret
  6661  00544E                     __end_of_EUSART1_SetOverrunErrorHandler:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6665 ;; Defined at:
  6666 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  interruptHan    2   38[BANK0 ] PTR FTN()void 
  6669 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1    wreg      void 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6684 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6685 ;;Total ram usage:        2 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:    7
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_EUSART1_Initialize
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text27
  6696  00544E                     __ptext27:
  6697                           	opt callstack 0
  6698  00544E                     _EUSART1_SetFramingErrorHandler:
  6699                           	opt callstack 21
  6700  00544E                     
  6701                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6702  00544E  C086  F1C9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6703  005452  C087  F1CA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6704  005456  0012               	return		;funcret
  6705  005458                     __end_of_EUSART1_SetFramingErrorHandler:
  6706                           	opt callstack 0
  6707                           
  6708 ;; *************** function _EUSART1_SetErrorHandler *****************
  6709 ;; Defined at:
  6710 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  interruptHan    2   38[BANK0 ] PTR FTN()void 
  6713 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6729 ;;Total ram usage:        2 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    7
  6732 ;; This function calls:
  6733 ;;		Nothing
  6734 ;; This function is called by:
  6735 ;;		_EUSART1_Initialize
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text28
  6740  005458                     __ptext28:
  6741                           	opt callstack 0
  6742  005458                     _EUSART1_SetErrorHandler:
  6743                           	opt callstack 21
  6744  005458                     
  6745                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  6746  005458  C086  F1C5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6747  00545C  C087  F1C6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6748  005460  0012               	return		;funcret
  6749  005462                     __end_of_EUSART1_SetErrorHandler:
  6750                           	opt callstack 0
  6751                           
  6752 ;; *************** function _EPWM1_Initialize *****************
  6753 ;; Defined at:
  6754 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    7
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_SYSTEM_Initialize
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text29
  6783  005364                     __ptext29:
  6784                           	opt callstack 0
  6785  005364                     _EPWM1_Initialize:
  6786                           	opt callstack 22
  6787  005364                     
  6788                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x0C;
  6789  005364  0E0C               	movlw	12
  6790  005366  6EBB               	movwf	187,c	;volatile
  6791                           
  6792                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  6793  005368  0E00               	movlw	0
  6794  00536A  6EBF               	movwf	191,c	;volatile
  6795                           
  6796                           ;mcc_generated_files/epwm1.c: 75:  PSTR1CON = 0x01;
  6797  00536C  0E01               	movlw	1
  6798  00536E  6E9C               	movwf	156,c	;volatile
  6799                           
  6800                           ;mcc_generated_files/epwm1.c: 78:  ECCP1DEL = 0x80;
  6801  005370  0E80               	movlw	128
  6802  005372  6EBE               	movwf	190,c	;volatile
  6803                           
  6804                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  6805  005374  0E00               	movlw	0
  6806  005376  6EBD               	movwf	189,c	;volatile
  6807                           
  6808                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x00;
  6809  005378  0E00               	movlw	0
  6810  00537A  6EBC               	movwf	188,c	;volatile
  6811  00537C                     
  6812                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRSbits.C1TSEL = 0x0;
  6813  00537C  9099               	bcf	153,0,c	;volatile
  6814  00537E  0012               	return		;funcret
  6815  005380                     __end_of_EPWM1_Initialize:
  6816                           	opt callstack 0
  6817                           
  6818 ;; *************** function _ADC_Initialize *****************
  6819 ;; Defined at:
  6820 ;;		line 62 in file "mcc_generated_files/adc.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6838 ;;Total ram usage:        0 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    7
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_SYSTEM_Initialize
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text30
  6849  0053C8                     __ptext30:
  6850                           	opt callstack 0
  6851  0053C8                     _ADC_Initialize:
  6852                           	opt callstack 22
  6853  0053C8                     
  6854                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  6855  0053C8  0E01               	movlw	1
  6856  0053CA  6EC2               	movwf	194,c	;volatile
  6857                           
  6858                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
  6859  0053CC  0E80               	movlw	128
  6860  0053CE  6EC1               	movwf	193,c	;volatile
  6861                           
  6862                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xB5;
  6863  0053D0  0EB5               	movlw	181
  6864  0053D2  6EC0               	movwf	192,c	;volatile
  6865                           
  6866                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  6867  0053D4  0E00               	movlw	0
  6868  0053D6  6EC4               	movwf	196,c	;volatile
  6869                           
  6870                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
  6871  0053D8  0E00               	movlw	0
  6872  0053DA  6EC3               	movwf	195,c	;volatile
  6873  0053DC  0012               	return		;funcret
  6874  0053DE                     __end_of_ADC_Initialize:
  6875                           	opt callstack 0
  6876                           
  6877 ;; *************** function _SPI_Open *****************
  6878 ;; Defined at:
  6879 ;;		line 72 in file "mcc_generated_files/spi.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  spiUniqueCon    1    wreg     enum E353
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  spiUniqueCon    1   39[BANK0 ] enum E353
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      _Bool 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;Total ram usage:        2 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:    7
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text31
  6908  00498A                     __ptext31:
  6909                           	opt callstack 0
  6910  00498A                     _SPI_Open:
  6911                           	opt callstack 23
  6912                           
  6913                           ;incstack = 0
  6914                           ;SPI_Open@spiUniqueConfiguration stored from wreg
  6915  00498A  0100               	movlb	0	; () banked
  6916  00498C  6F87               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
  6917  00498E                     
  6918                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
  6919  00498E  BAC6               	btfsc	198,5,c	;volatile
  6920  004990  EFCC  F024         	goto	u6731
  6921  004994  EFCE  F024         	goto	u6730
  6922  004998                     u6731:
  6923  004998  EF1E  F025         	goto	l57
  6924  00499C                     u6730:
  6925  00499C                     
  6926                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
  6927  00499C  0100               	movlb	0	; () banked
  6928  00499E  5187               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  6929  0049A0  0D04               	mullw	4
  6930  0049A2  0E01               	movlw	1
  6931  0049A4  26F3               	addwf	243,f,c
  6932  0049A6  0E00               	movlw	0
  6933  0049A8  22F4               	addwfc	244,f,c
  6934  0049AA  0EE5               	movlw	low _spi_configuration
  6935  0049AC  24F3               	addwf	243,w,c
  6936  0049AE  6EF6               	movwf	tblptrl,c
  6937  0049B0  0EFE               	movlw	high _spi_configuration
  6938  0049B2  20F4               	addwfc	244,w,c
  6939  0049B4  6EF7               	movwf	tblptrh,c
  6940  0049B6                     	if	1	;There are 3 active tblptr bytes
  6941  0049B6  6AF8               	clrf	tblptru,c
  6942  0049B8  0E00               	movlw	low (__mediumconst shr (0+16))
  6943  0049BA  22F8               	addwfc	tblptru,f,c
  6944  0049BC                     	endif
  6945  0049BC  0008               	tblrd		*
  6946  0049BE  CFF5 FFC7          	movff	tablat,4039	;volatile
  6947                           
  6948                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
  6949  0049C2  5187               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  6950  0049C4  0D04               	mullw	4
  6951  0049C6  0EE5               	movlw	low _spi_configuration
  6952  0049C8  24F3               	addwf	243,w,c
  6953  0049CA  6EF6               	movwf	tblptrl,c
  6954  0049CC  0EFE               	movlw	high _spi_configuration
  6955  0049CE  20F4               	addwfc	244,w,c
  6956  0049D0  6EF7               	movwf	tblptrh,c
  6957  0049D2                     	if	1	;There are 3 active tblptr bytes
  6958  0049D2  6AF8               	clrf	tblptru,c
  6959  0049D4  0E00               	movlw	low (__mediumconst shr (0+16))
  6960  0049D6  22F8               	addwfc	tblptru,f,c
  6961  0049D8                     	endif
  6962  0049D8  0008               	tblrd		*
  6963  0049DA  CFF5 FFC6          	movff	tablat,4038	;volatile
  6964  0049DE                     
  6965                           ; BSR set to: 0
  6966                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
  6967  0049DE  0E00               	movlw	0
  6968  0049E0  6EC5               	movwf	197,c	;volatile
  6969  0049E2                     
  6970                           ; BSR set to: 0
  6971                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
  6972  0049E2  5187               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  6973  0049E4  0D04               	mullw	4
  6974  0049E6  0E02               	movlw	2
  6975  0049E8  26F3               	addwf	243,f,c
  6976  0049EA  0E00               	movlw	0
  6977  0049EC  22F4               	addwfc	244,f,c
  6978  0049EE  0EE5               	movlw	low _spi_configuration
  6979  0049F0  24F3               	addwf	243,w,c
  6980  0049F2  6EF6               	movwf	tblptrl,c
  6981  0049F4  0EFE               	movlw	high _spi_configuration
  6982  0049F6  20F4               	addwfc	244,w,c
  6983  0049F8  6EF7               	movwf	tblptrh,c
  6984  0049FA                     	if	1	;There are 3 active tblptr bytes
  6985  0049FA  6AF8               	clrf	tblptru,c
  6986  0049FC  0E00               	movlw	low (__mediumconst shr (0+16))
  6987  0049FE  22F8               	addwfc	tblptru,f,c
  6988  004A00                     	endif
  6989  004A00  0008               	tblrd		*
  6990  004A02  CFF5 FFC8          	movff	tablat,4040	;volatile
  6991  004A06                     
  6992                           ; BSR set to: 0
  6993                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
  6994  004A06  5187               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
  6995  004A08  0D04               	mullw	4
  6996  004A0A  0E03               	movlw	3
  6997  004A0C  26F3               	addwf	243,f,c
  6998  004A0E  0E00               	movlw	0
  6999  004A10  22F4               	addwfc	244,f,c
  7000  004A12  0EE5               	movlw	low _spi_configuration
  7001  004A14  24F3               	addwf	243,w,c
  7002  004A16  6EF6               	movwf	tblptrl,c
  7003  004A18  0EFE               	movlw	high _spi_configuration
  7004  004A1A  20F4               	addwfc	244,w,c
  7005  004A1C  6EF7               	movwf	tblptrh,c
  7006  004A1E                     	if	1	;There are 3 active tblptr bytes
  7007  004A1E  6AF8               	clrf	tblptru,c
  7008  004A20  0E00               	movlw	low (__mediumconst shr (0+16))
  7009  004A22  22F8               	addwfc	tblptru,f,c
  7010  004A24                     	endif
  7011  004A24  0008               	tblrd		*
  7012  004A26  CFF5 F086          	movff	tablat,??_SPI_Open
  7013  004A2A  4786               	rlncf	??_SPI_Open& (0+255),f,b
  7014  004A2C  4786               	rlncf	??_SPI_Open& (0+255),f,b
  7015  004A2E  4786               	rlncf	??_SPI_Open& (0+255),f,b
  7016  004A30  5094               	movf	148,w,c	;volatile
  7017  004A32  1986               	xorwf	??_SPI_Open& (0+255),w,b
  7018  004A34  0BF7               	andlw	-9
  7019  004A36  1986               	xorwf	??_SPI_Open& (0+255),w,b
  7020  004A38  6E94               	movwf	148,c	;volatile
  7021  004A3A                     
  7022                           ; BSR set to: 0
  7023                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
  7024  004A3A  8AC6               	bsf	198,5,c	;volatile
  7025  004A3C                     l57:
  7026  004A3C  0012               	return		;funcret
  7027  004A3E                     __end_of_SPI_Open:
  7028                           	opt callstack 0
  7029                           
  7030 ;; *************** function _Out_USART *****************
  7031 ;; Defined at:
  7032 ;;		line 15 in file "main.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  value_3         4   84[BANK1 ] unsigned char [4]
  7037 ;;  value_1         3   88[BANK1 ] unsigned char [3]
  7038 ;;  value_2         2   81[BANK1 ] unsigned char [2]
  7039 ;;  lixo            1    0        unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7053 ;;Total ram usage:       10 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:   16
  7056 ;; This function calls:
  7057 ;;		_EUSART1_Read
  7058 ;;		_EUSART1_is_rx_ready
  7059 ;;		_atoi
  7060 ;;		_printf
  7061 ;; This function is called by:
  7062 ;;		_main
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text32
  7067  004464                     __ptext32:
  7068                           	opt callstack 0
  7069  004464                     _Out_USART:
  7070                           	opt callstack 14
  7071  004464                     
  7072                           ;main.c: 16:     char value_1[3] = "";
  7073  004464  0E00               	movlw	0
  7074  004466  0101               	movlb	1	; () banked
  7075  004468  6F58               	movwf	Out_USART@value_1& (0+255),b
  7076  00446A  0E00               	movlw	0
  7077  00446C  6F59               	movwf	(Out_USART@value_1+1)& (0+255),b
  7078  00446E  0E00               	movlw	0
  7079  004470  6F5A               	movwf	(Out_USART@value_1+2)& (0+255),b
  7080                           
  7081                           ;main.c: 17:     char value_2[2] = "";
  7082  004472  0E00               	movlw	0
  7083  004474  6F52               	movwf	(Out_USART@value_2+1)& (0+255),b
  7084  004476  0E00               	movlw	0
  7085  004478  6F51               	movwf	Out_USART@value_2& (0+255),b
  7086                           
  7087                           ;main.c: 18:     char value_3[4] = "";
  7088  00447A  0E00               	movlw	0
  7089  00447C  6F54               	movwf	Out_USART@value_3& (0+255),b
  7090  00447E  0E00               	movlw	0
  7091  004480  6F55               	movwf	(Out_USART@value_3+1)& (0+255),b
  7092  004482  0E00               	movlw	0
  7093  004484  6F56               	movwf	(Out_USART@value_3+2)& (0+255),b
  7094  004486  0E00               	movlw	0
  7095  004488  6F57               	movwf	(Out_USART@value_3+3)& (0+255),b
  7096                           
  7097                           ;main.c: 19:     char lixo;;main.c: 21:     while (EUSART1_is_rx_ready()) {
  7098  00448A  EF49  F022         	goto	l499
  7099  00448E                     l7611:
  7100  00448E  EC23  F029         	call	_EUSART1_Read	;wreg free
  7101  004492                     l499:
  7102                           
  7103                           ;main.c: 21:     while (EUSART1_is_rx_ready()) {
  7104  004492  ECEF  F029         	call	_EUSART1_is_rx_ready	;wreg free
  7105  004496  0900               	iorlw	0
  7106  004498  A4D8               	btfss	status,2,c
  7107  00449A  EF51  F022         	goto	u8741
  7108  00449E  EF53  F022         	goto	u8740
  7109  0044A2                     u8741:
  7110  0044A2  EF47  F022         	goto	l7611
  7111  0044A6                     u8740:
  7112  0044A6                     
  7113                           ;main.c: 39:     printf("\n\rInsert a new turn KP value between 00-99:");
  7114  0044A6  0EE9               	movlw	low STR_1
  7115  0044A8  0101               	movlb	1	; () banked
  7116  0044AA  6F49               	movwf	printf@fmt& (0+255),b
  7117  0044AC  0EFE               	movlw	high STR_1
  7118  0044AE  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  7119  0044B0  EC38  F029         	call	_printf	;wreg free
  7120  0044B4                     
  7121                           ;main.c: 40:     value_3[0] = EUSART1_Read();
  7122  0044B4  EC23  F029         	call	_EUSART1_Read	;wreg free
  7123  0044B8  0101               	movlb	1	; () banked
  7124  0044BA  6F54               	movwf	Out_USART@value_3& (0+255),b
  7125  0044BC                     
  7126                           ; BSR set to: 1
  7127                           ;main.c: 41:     value_3[1] = EUSART1_Read();
  7128  0044BC  EC23  F029         	call	_EUSART1_Read	;wreg free
  7129  0044C0  0101               	movlb	1	; () banked
  7130  0044C2  6F55               	movwf	(Out_USART@value_3+1)& (0+255),b
  7131  0044C4                     
  7132                           ; BSR set to: 1
  7133                           ;main.c: 42:     value_3[2] = EUSART1_Read();
  7134  0044C4  EC23  F029         	call	_EUSART1_Read	;wreg free
  7135  0044C8  0101               	movlb	1	; () banked
  7136  0044CA  6F56               	movwf	(Out_USART@value_3+2)& (0+255),b
  7137  0044CC                     
  7138                           ; BSR set to: 1
  7139                           ;main.c: 43:     value_3[3] = EUSART1_Read();
  7140  0044CC  EC23  F029         	call	_EUSART1_Read	;wreg free
  7141  0044D0  0101               	movlb	1	; () banked
  7142  0044D2  6F57               	movwf	(Out_USART@value_3+3)& (0+255),b
  7143  0044D4                     
  7144                           ; BSR set to: 1
  7145                           ;main.c: 44:     KP = atoi(value_3);
  7146  0044D4  0E54               	movlw	low Out_USART@value_3
  7147  0044D6  0100               	movlb	0	; () banked
  7148  0044D8  6F8D               	movwf	atoi@s& (0+255),b
  7149  0044DA  0E01               	movlw	high Out_USART@value_3
  7150  0044DC  6F8E               	movwf	(atoi@s+1)& (0+255),b
  7151  0044DE  EC1E  F019         	call	_atoi	;wreg free
  7152  0044E2  C08D  F1D8         	movff	?_atoi,_KP
  7153  0044E6  C08E  F1D9         	movff	?_atoi+1,_KP+1
  7154  0044EA                     
  7155                           ;main.c: 45:     printf("\n\rValue: %d", KP);
  7156  0044EA  0EAE               	movlw	low STR_2
  7157  0044EC  0101               	movlb	1	; () banked
  7158  0044EE  6F49               	movwf	printf@fmt& (0+255),b
  7159  0044F0  0EFF               	movlw	high STR_2
  7160  0044F2  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  7161  0044F4  C1D8  F14B         	movff	_KP,?_printf+2
  7162  0044F8  C1D9  F14C         	movff	_KP+1,?_printf+3
  7163  0044FC  EC38  F029         	call	_printf	;wreg free
  7164  004500                     
  7165                           ;main.c: 47:     printf("\n\rInsert a new turn Ki value between 00-99:");
  7166  004500  0E15               	movlw	low STR_3
  7167  004502  0101               	movlb	1	; () banked
  7168  004504  6F49               	movwf	printf@fmt& (0+255),b
  7169  004506  0EFF               	movlw	high STR_3
  7170  004508  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  7171  00450A  EC38  F029         	call	_printf	;wreg free
  7172  00450E                     
  7173                           ;main.c: 48:     value_1[0] = EUSART1_Read();
  7174  00450E  EC23  F029         	call	_EUSART1_Read	;wreg free
  7175  004512  0101               	movlb	1	; () banked
  7176  004514  6F58               	movwf	Out_USART@value_1& (0+255),b
  7177  004516                     
  7178                           ; BSR set to: 1
  7179                           ;main.c: 49:     value_1[1] = EUSART1_Read();
  7180  004516  EC23  F029         	call	_EUSART1_Read	;wreg free
  7181  00451A  0101               	movlb	1	; () banked
  7182  00451C  6F59               	movwf	(Out_USART@value_1+1)& (0+255),b
  7183  00451E                     
  7184                           ; BSR set to: 1
  7185                           ;main.c: 50:     value_1[2] = EUSART1_Read();
  7186  00451E  EC23  F029         	call	_EUSART1_Read	;wreg free
  7187  004522  0101               	movlb	1	; () banked
  7188  004524  6F5A               	movwf	(Out_USART@value_1+2)& (0+255),b
  7189  004526                     
  7190                           ; BSR set to: 1
  7191                           ;main.c: 52:     Ki = atoi(value_1);
  7192  004526  0E58               	movlw	low Out_USART@value_1
  7193  004528  0100               	movlb	0	; () banked
  7194  00452A  6F8D               	movwf	atoi@s& (0+255),b
  7195  00452C  0E01               	movlw	high Out_USART@value_1
  7196  00452E  6F8E               	movwf	(atoi@s+1)& (0+255),b
  7197  004530  EC1E  F019         	call	_atoi	;wreg free
  7198  004534  C08D  F1D6         	movff	?_atoi,_Ki
  7199  004538  C08E  F1D7         	movff	?_atoi+1,_Ki+1
  7200  00453C                     
  7201                           ;main.c: 53:     printf("\n\rValue: %d", Ki);
  7202  00453C  0EAE               	movlw	low STR_2
  7203  00453E  0101               	movlb	1	; () banked
  7204  004540  6F49               	movwf	printf@fmt& (0+255),b
  7205  004542  0EFF               	movlw	high STR_2
  7206  004544  6F4A               	movwf	(printf@fmt+1)& (0+255),b
  7207  004546  C1D6  F14B         	movff	_Ki,?_printf+2
  7208  00454A  C1D7  F14C         	movff	_Ki+1,?_printf+3
  7209  00454E  EC38  F029         	call	_printf	;wreg free
  7210  004552  0012               	return		;funcret
  7211  004554                     __end_of_Out_USART:
  7212                           	opt callstack 0
  7213                           
  7214 ;; *************** function _printf *****************
  7215 ;; Defined at:
  7216 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  7219 ;;		 -> STR_4(12), STR_3(44), STR_2(12), STR_1(44), 
  7220 ;; Auto vars:     Size  Location     Type
  7221 ;;  ap              2   79[BANK1 ] PTR void [1]
  7222 ;;		 -> ?_snprintf(2), ?_printf(2), 
  7223 ;;  ret             2    0        int 
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  2   73[BANK1 ] int 
  7226 ;; Registers used:
  7227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7233 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7234 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;Total ram usage:        8 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:   15
  7240 ;; This function calls:
  7241 ;;		_vfprintf
  7242 ;; This function is called by:
  7243 ;;		_Out_USART
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text33
  7248  005270                     __ptext33:
  7249                           	opt callstack 0
  7250  005270                     _printf:
  7251                           	opt callstack 14
  7252  005270  0E4B               	movlw	low (?_printf+2)
  7253  005272  0101               	movlb	1	; () banked
  7254  005274  6F4F               	movwf	printf@ap& (0+255),b
  7255  005276  0E01               	movlw	high (?_printf+2)
  7256  005278  6F50               	movwf	(printf@ap+1)& (0+255),b
  7257  00527A                     
  7258                           ; BSR set to: 1
  7259  00527A  0E00               	movlw	0
  7260  00527C  6F41               	movwf	vfprintf@fp& (0+255),b
  7261  00527E  0E00               	movlw	0
  7262  005280  6F42               	movwf	(vfprintf@fp+1)& (0+255),b
  7263  005282  C149  F143         	movff	printf@fmt,vfprintf@fmt
  7264  005286  C14A  F144         	movff	printf@fmt+1,vfprintf@fmt+1
  7265  00528A  0E4F               	movlw	low printf@ap
  7266  00528C  6F45               	movwf	vfprintf@ap& (0+255),b
  7267  00528E  0E01               	movlw	high printf@ap
  7268  005290  6F46               	movwf	(vfprintf@ap+1)& (0+255),b
  7269  005292  EC63  F025         	call	_vfprintf	;wreg free
  7270  005296  0012               	return		;funcret
  7271  005298                     __end_of_printf:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _vfprintf *****************
  7275 ;; Defined at:
  7276 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  fp              2   65[BANK1 ] PTR struct _IO_FILE
  7279 ;;		 -> vsnprintf@f(6), NULL(0), 
  7280 ;;  fmt             2   67[BANK1 ] PTR const unsigned char 
  7281 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
  7282 ;;		 -> STR_7(10), STR_6(14), STR_4(12), STR_3(44), 
  7283 ;;		 -> STR_2(12), STR_1(44), 
  7284 ;;  ap              2   69[BANK1 ] PTR PTR void 
  7285 ;;		 -> snprintf@ap(2), printf@ap(2), 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  cfmt            2   71[BANK1 ] PTR unsigned char 
  7288 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
  7289 ;;		 -> STR_7(10), STR_6(14), STR_4(12), STR_3(44), 
  7290 ;;		 -> STR_2(12), STR_1(44), 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2   65[BANK1 ] int 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7300 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;Total ram usage:        8 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:   14
  7307 ;; This function calls:
  7308 ;;		_vfpfcnvrt
  7309 ;; This function is called by:
  7310 ;;		_printf
  7311 ;;		_vsnprintf
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text34
  7316  004AC6                     __ptext34:
  7317                           	opt callstack 0
  7318  004AC6                     _vfprintf:
  7319                           	opt callstack 14
  7320  004AC6                     
  7321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7322  004AC6  C143  F147         	movff	vfprintf@fmt,vfprintf@cfmt
  7323  004ACA  C144  F148         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7324  004ACE                     
  7325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  7326  004ACE  0E00               	movlw	0
  7327  004AD0  0100               	movlb	0	; () banked
  7328  004AD2  6FC6               	movwf	(_nout+1)& (0+255),b
  7329  004AD4  0E00               	movlw	0
  7330  004AD6  6FC5               	movwf	_nout& (0+255),b
  7331                           
  7332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7333  004AD8  EF85  F025         	goto	l7517
  7334  004ADC                     l7515:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  7338  004ADC  C141  F11C         	movff	vfprintf@fp,vfpfcnvrt@fp
  7339  004AE0  C142  F11D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7340  004AE4  0E47               	movlw	low vfprintf@cfmt
  7341  004AE6  0101               	movlb	1	; () banked
  7342  004AE8  6F1E               	movwf	vfpfcnvrt@fmt& (0+255),b
  7343  004AEA  0E01               	movlw	high vfprintf@cfmt
  7344  004AEC  6F1F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7345  004AEE  C145  F120         	movff	vfprintf@ap,vfpfcnvrt@ap
  7346  004AF2  C146  F121         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7347  004AF6  EC44  F000         	call	_vfpfcnvrt	;wreg free
  7348  004AFA  0101               	movlb	1	; () banked
  7349  004AFC  511C               	movf	?_vfpfcnvrt& (0+255),w,b
  7350  004AFE  0100               	movlb	0	; () banked
  7351  004B00  27C5               	addwf	_nout& (0+255),f,b
  7352  004B02  0101               	movlb	1	; () banked
  7353  004B04  511D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7354  004B06  0100               	movlb	0	; () banked
  7355  004B08  23C6               	addwfc	(_nout+1)& (0+255),f,b
  7356  004B0A                     l7517:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  7360  004B0A  C147  FFF6         	movff	vfprintf@cfmt,tblptrl
  7361  004B0E  C148  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7362  004B12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7363  004B12  6AF8               	clrf	tblptru,c
  7364  004B14                     	endif
  7365  004B14                     	if	0	;tblptru may be non-zero
  7366  004B14                     	endif
  7367  004B14  0008               	tblrd		*
  7368  004B16  50F5               	movf	tablat,w,c
  7369  004B18  0900               	iorlw	0
  7370  004B1A  A4D8               	btfss	status,2,c
  7371  004B1C  EF92  F025         	goto	u8591
  7372  004B20  EF94  F025         	goto	u8590
  7373  004B24                     u8591:
  7374  004B24  EF6E  F025         	goto	l7515
  7375  004B28                     u8590:
  7376  004B28                     
  7377                           ; BSR set to: 0
  7378                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  7379  004B28  C0C5  F141         	movff	_nout,?_vfprintf
  7380  004B2C  C0C6  F142         	movff	_nout+1,?_vfprintf+1
  7381  004B30                     
  7382                           ; BSR set to: 0
  7383  004B30  0012               	return		;funcret
  7384  004B32                     __end_of_vfprintf:
  7385                           	opt callstack 0
  7386                           
  7387 ;; *************** function _vfpfcnvrt *****************
  7388 ;; Defined at:
  7389 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  fp              2   28[BANK1 ] PTR struct _IO_FILE
  7392 ;;		 -> vsnprintf@f(6), NULL(0), 
  7393 ;;  fmt             2   30[BANK1 ] PTR PTR unsigned char 
  7394 ;;		 -> vfprintf@cfmt(2), 
  7395 ;;  ap              2   32[BANK1 ] PTR PTR void 
  7396 ;;		 -> snprintf@ap(2), printf@ap(2), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  llu             8   57[BANK1 ] unsigned long long 
  7399 ;;  ll              8   46[BANK1 ] long long 
  7400 ;;  f               4    0        long long 
  7401 ;;  ct              3    0        unsigned char [3]
  7402 ;;  vp              2   54[BANK1 ] PTR void 
  7403 ;;		 -> ?_snprintf(2), ?_printf(2), 
  7404 ;;  done            2   40[BANK1 ] int 
  7405 ;;  cp              2   38[BANK1 ] PTR unsigned char 
  7406 ;;		 -> ?_snprintf(2), ?_printf(2), 
  7407 ;;  i               2    0        int 
  7408 ;;  c               1   56[BANK1 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  2   28[BANK1 ] int 
  7411 ;; Registers used:
  7412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7418 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7421 ;;      Totals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7422 ;;Total ram usage:       37 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:   13
  7425 ;; This function calls:
  7426 ;;		_atoi
  7427 ;;		_ctoa
  7428 ;;		_dtoa
  7429 ;;		_fputc
  7430 ;;		_isdigit
  7431 ;;		_otoa
  7432 ;;		_stoa
  7433 ;;		_strncmp
  7434 ;;		_utoa
  7435 ;;		_xtoa
  7436 ;; This function is called by:
  7437 ;;		_vfprintf
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text35
  7442  000088                     __ptext35:
  7443                           	opt callstack 0
  7444  000088                     _vfpfcnvrt:
  7445                           	opt callstack 14
  7446  000088                     
  7447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  7448  000088  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7449  00008C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7450  000090  CFDE FFF6          	movff	postinc2,tblptrl
  7451  000094  CFDD FFF7          	movff	postdec2,tblptrh
  7452  000098                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7453  000098  6AF8               	clrf	tblptru,c
  7454  00009A                     	endif
  7455  00009A                     	if	0	;tblptru may be non-zero
  7456  00009A                     	endif
  7457  00009A  0008               	tblrd		*
  7458  00009C  50F5               	movf	tablat,w,c
  7459  00009E  0A25               	xorlw	37
  7460  0000A0  A4D8               	btfss	status,2,c
  7461  0000A2  EF55  F000         	goto	u8121
  7462  0000A6  EF57  F000         	goto	u8120
  7463  0000AA                     u8121:
  7464  0000AA  EF86  F009         	goto	l7481
  7465  0000AE                     u8120:
  7466  0000AE                     
  7467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  7468  0000AE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7469  0000B2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7470  0000B6  2ADE               	incf	postinc2,f,c
  7471  0000B8  0E00               	movlw	0
  7472  0000BA  22DD               	addwfc	postdec2,f,c
  7473  0000BC                     
  7474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  7475  0000BC  0E00               	movlw	0
  7476  0000BE  0100               	movlb	0	; () banked
  7477  0000C0  6FC8               	movwf	(_width+1)& (0+255),b
  7478  0000C2  0E00               	movlw	0
  7479  0000C4  6FC7               	movwf	_width& (0+255),b
  7480  0000C6  C0C7  F0CB         	movff	_width,_flags
  7481  0000CA  C0C8  F0CC         	movff	_width+1,_flags+1
  7482  0000CE                     
  7483                           ; BSR set to: 0
  7484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  7485  0000CE  69C9               	setf	_prec& (0+255),b
  7486  0000D0  69CA               	setf	(_prec+1)& (0+255),b
  7487  0000D2                     
  7488                           ; BSR set to: 0
  7489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7490  0000D2  0E00               	movlw	0
  7491  0000D4  0101               	movlb	1	; () banked
  7492  0000D6  6F29               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7493  0000D8  0E00               	movlw	0
  7494  0000DA  6F28               	movwf	vfpfcnvrt@done& (0+255),b
  7495                           
  7496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7497  0000DC  EFBC  F000         	goto	l7199
  7498  0000E0                     l7173:
  7499                           
  7500                           ; BSR set to: 1
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7502  0000E0  0100               	movlb	0	; () banked
  7503  0000E2  81CB               	bsf	_flags& (0+255),0,b
  7504  0000E4                     l7175:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7508  0000E4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7509  0000E8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7510  0000EC  2ADE               	incf	postinc2,f,c
  7511  0000EE  0E00               	movlw	0
  7512  0000F0  22DD               	addwfc	postdec2,f,c
  7513                           
  7514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7515  0000F2  EFBC  F000         	goto	l7199
  7516  0000F6                     l7177:
  7517                           
  7518                           ; BSR set to: 1
  7519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7520  0000F6  0100               	movlb	0	; () banked
  7521  0000F8  83CB               	bsf	_flags& (0+255),1,b
  7522  0000FA  EF72  F000         	goto	l7175
  7523  0000FE                     l7181:
  7524                           
  7525                           ; BSR set to: 1
  7526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7527  0000FE  0100               	movlb	0	; () banked
  7528  000100  85CB               	bsf	_flags& (0+255),2,b
  7529  000102  EF72  F000         	goto	l7175
  7530  000106                     l7185:
  7531                           
  7532                           ; BSR set to: 1
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7534  000106  0100               	movlb	0	; () banked
  7535  000108  87CB               	bsf	_flags& (0+255),3,b
  7536  00010A  EF72  F000         	goto	l7175
  7537  00010E                     l7189:
  7538                           
  7539                           ; BSR set to: 1
  7540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7541  00010E  0100               	movlb	0	; () banked
  7542  000110  89CB               	bsf	_flags& (0+255),4,b
  7543  000112  EF72  F000         	goto	l7175
  7544  000116                     l7193:
  7545                           
  7546                           ; BSR set to: 1
  7547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7548  000116  0E00               	movlw	0
  7549  000118  6F29               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  7550  00011A  0E01               	movlw	1
  7551  00011C  6F28               	movwf	vfpfcnvrt@done& (0+255),b
  7552                           
  7553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7554  00011E  EFBC  F000         	goto	l7199
  7555  000122                     l7197:
  7556                           
  7557                           ; BSR set to: 1
  7558  000122  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7559  000126  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7560  00012A  CFDE FFF6          	movff	postinc2,tblptrl
  7561  00012E  CFDD FFF7          	movff	postdec2,tblptrh
  7562  000132                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7563  000132  6AF8               	clrf	tblptru,c
  7564  000134                     	endif
  7565  000134                     	if	0	;tblptru may be non-zero
  7566  000134                     	endif
  7567  000134  0008               	tblrd		*
  7568  000136  50F5               	movf	tablat,w,c
  7569  000138  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  7570  00013A  6B23               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7571                           
  7572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7573                           ; Switch size 1, requested type "simple"
  7574                           ; Number of cases is 1, Range of values is 0 to 0
  7575                           ; switch strategies available:
  7576                           ; Name         Instructions Cycles
  7577                           ; simple_byte            4     3 (average)
  7578                           ;	Chosen strategy is simple_byte
  7579  00013C  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7580  00013E  0A00               	xorlw	0	; case 0
  7581  000140  B4D8               	btfsc	status,2,c
  7582  000142  EFA5  F000         	goto	l8105
  7583  000146  EF8B  F000         	goto	l7193
  7584  00014A                     l8105:
  7585                           
  7586                           ; BSR set to: 1
  7587                           ; Switch size 1, requested type "simple"
  7588                           ; Number of cases is 5, Range of values is 32 to 48
  7589                           ; switch strategies available:
  7590                           ; Name         Instructions Cycles
  7591                           ; simple_byte           16     9 (average)
  7592                           ;	Chosen strategy is simple_byte
  7593  00014A  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  7594  00014C  0A20               	xorlw	32	; case 32
  7595  00014E  B4D8               	btfsc	status,2,c
  7596  000150  EF83  F000         	goto	l7185
  7597  000154  0A03               	xorlw	3	; case 35
  7598  000156  B4D8               	btfsc	status,2,c
  7599  000158  EF87  F000         	goto	l7189
  7600  00015C  0A08               	xorlw	8	; case 43
  7601  00015E  B4D8               	btfsc	status,2,c
  7602  000160  EF7F  F000         	goto	l7181
  7603  000164  0A06               	xorlw	6	; case 45
  7604  000166  B4D8               	btfsc	status,2,c
  7605  000168  EF70  F000         	goto	l7173
  7606  00016C  0A1D               	xorlw	29	; case 48
  7607  00016E  B4D8               	btfsc	status,2,c
  7608  000170  EF7B  F000         	goto	l7177
  7609  000174  EF8B  F000         	goto	l7193
  7610  000178                     l7199:
  7611                           
  7612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7613  000178  0101               	movlb	1	; () banked
  7614  00017A  5128               	movf	vfpfcnvrt@done& (0+255),w,b
  7615  00017C  1129               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  7616  00017E  B4D8               	btfsc	status,2,c
  7617  000180  EFC4  F000         	goto	u8131
  7618  000184  EFC6  F000         	goto	u8130
  7619  000188                     u8131:
  7620  000188  EF91  F000         	goto	l7197
  7621  00018C                     u8130:
  7622  00018C                     
  7623                           ; BSR set to: 1
  7624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7625  00018C  0100               	movlb	0	; () banked
  7626  00018E  A1CB               	btfss	_flags& (0+255),0,b
  7627  000190  EFCC  F000         	goto	u8141
  7628  000194  EFCE  F000         	goto	u8140
  7629  000198                     u8141:
  7630  000198  EFCF  F000         	goto	l7203
  7631  00019C                     u8140:
  7632  00019C                     
  7633                           ; BSR set to: 0
  7634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7635  00019C  93CB               	bcf	_flags& (0+255),1,b
  7636  00019E                     l7203:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7640  00019E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7641  0001A2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7642  0001A6  CFDE FFF6          	movff	postinc2,tblptrl
  7643  0001AA  CFDD FFF7          	movff	postdec2,tblptrh
  7644  0001AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7645  0001AE  6AF8               	clrf	tblptru,c
  7646  0001B0                     	endif
  7647  0001B0                     	if	0	;tblptru may be non-zero
  7648  0001B0                     	endif
  7649  0001B0  0008               	tblrd		*
  7650  0001B2  50F5               	movf	tablat,w,c
  7651  0001B4  0A2A               	xorlw	42
  7652  0001B6  A4D8               	btfss	status,2,c
  7653  0001B8  EFE0  F000         	goto	u8151
  7654  0001BC  EFE2  F000         	goto	u8150
  7655  0001C0                     u8151:
  7656  0001C0  EF0B  F001         	goto	l7211
  7657  0001C4                     u8150:
  7658  0001C4                     
  7659                           ; BSR set to: 0
  7660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7661  0001C4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7662  0001C8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7663  0001CC  2ADE               	incf	postinc2,f,c
  7664  0001CE  0E00               	movlw	0
  7665  0001D0  22DD               	addwfc	postdec2,f,c
  7666                           
  7667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7668  0001D2  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7669  0001D6  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7670  0001DA  CFDF F122          	movff	indf2,??_vfpfcnvrt
  7671  0001DE  0E02               	movlw	2
  7672  0001E0  26DE               	addwf	postinc2,f,c
  7673  0001E2  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  7674  0001E6  0E00               	movlw	0
  7675  0001E8  22DD               	addwfc	postdec2,f,c
  7676  0001EA  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7677  0001EE  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7678  0001F2  CFDE F0C7          	movff	postinc2,_width
  7679  0001F6  CFDD F0C8          	movff	postdec2,_width+1
  7680  0001FA                     
  7681                           ; BSR set to: 0
  7682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7683  0001FA  BFC8               	btfsc	(_width+1)& (0+255),7,b
  7684  0001FC  EF04  F001         	goto	u8160
  7685  000200  EF02  F001         	goto	u8161
  7686  000204                     u8161:
  7687  000204  EF50  F001         	goto	l7221
  7688  000208                     u8160:
  7689  000208                     
  7690                           ; BSR set to: 0
  7691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7692  000208  81CB               	bsf	_flags& (0+255),0,b
  7693                           
  7694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7695  00020A  6DC7               	negf	_width& (0+255),b
  7696  00020C  1FC8               	comf	(_width+1)& (0+255),f,b
  7697  00020E  B0D8               	btfsc	status,0,c
  7698  000210  2BC8               	incf	(_width+1)& (0+255),f,b
  7699  000212  EF50  F001         	goto	l7221
  7700  000216                     l7211:
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7704  000216  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7705  00021A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7706  00021E  CFDE F08D          	movff	postinc2,atoi@s
  7707  000222  CFDD F08E          	movff	postdec2,atoi@s+1
  7708  000226  EC1E  F019         	call	_atoi	;wreg free
  7709  00022A  C08D  F0C7         	movff	?_atoi,_width
  7710  00022E  C08E  F0C8         	movff	?_atoi+1,_width+1
  7711                           
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7713  000232  EF22  F001         	goto	l7215
  7714  000236                     l7213:
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7718  000236  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7719  00023A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7720  00023E  2ADE               	incf	postinc2,f,c
  7721  000240  0E00               	movlw	0
  7722  000242  22DD               	addwfc	postdec2,f,c
  7723  000244                     l7215:
  7724  000244  0ED0               	movlw	208
  7725  000246  0101               	movlb	1	; () banked
  7726  000248  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  7727  00024A  0EFF               	movlw	255
  7728  00024C  6F23               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7729  00024E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7730  000252  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7731  000256  CFDE FFF6          	movff	postinc2,tblptrl
  7732  00025A  CFDD FFF7          	movff	postdec2,tblptrh
  7733  00025E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7734  00025E  6AF8               	clrf	tblptru,c
  7735  000260                     	endif
  7736  000260                     	if	0	;tblptru may be non-zero
  7737  000260                     	endif
  7738  000260  0008               	tblrd		*
  7739  000262  50F5               	movf	tablat,w,c
  7740  000264  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7741  000266  6B25               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7742  000268  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  7743  00026A  2724               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7744  00026C  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7745  00026E  2325               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7746  000270  5125               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7747  000272  E10A               	bnz	u8170
  7748  000274  0E0A               	movlw	10
  7749  000276  5D24               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7750  000278  A0D8               	btfss	status,0,c
  7751  00027A  EF41  F001         	goto	u8171
  7752  00027E  EF44  F001         	goto	u8170
  7753  000282                     u8171:
  7754  000282  0E01               	movlw	1
  7755  000284  EF45  F001         	goto	u8180
  7756  000288                     u8170:
  7757  000288  0E00               	movlw	0
  7758  00028A                     u8180:
  7759  00028A  6F2A               	movwf	_vfpfcnvrt$1837& (0+255),b
  7760  00028C  6B2B               	clrf	(_vfpfcnvrt$1837+1)& (0+255),b
  7761  00028E                     
  7762                           ; BSR set to: 1
  7763  00028E  512A               	movf	_vfpfcnvrt$1837& (0+255),w,b
  7764  000290  112B               	iorwf	(_vfpfcnvrt$1837+1)& (0+255),w,b
  7765  000292  A4D8               	btfss	status,2,c
  7766  000294  EF4E  F001         	goto	u8191
  7767  000298  EF50  F001         	goto	u8190
  7768  00029C                     u8191:
  7769  00029C  EF1B  F001         	goto	l7213
  7770  0002A0                     u8190:
  7771  0002A0                     l7221:
  7772                           
  7773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7774  0002A0  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7775  0002A4  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7776  0002A8  CFDE FFF6          	movff	postinc2,tblptrl
  7777  0002AC  CFDD FFF7          	movff	postdec2,tblptrh
  7778  0002B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7779  0002B0  6AF8               	clrf	tblptru,c
  7780  0002B2                     	endif
  7781  0002B2                     	if	0	;tblptru may be non-zero
  7782  0002B2                     	endif
  7783  0002B2  0008               	tblrd		*
  7784  0002B4  50F5               	movf	tablat,w,c
  7785  0002B6  0A2E               	xorlw	46
  7786  0002B8  A4D8               	btfss	status,2,c
  7787  0002BA  EF61  F001         	goto	u8201
  7788  0002BE  EF63  F001         	goto	u8200
  7789  0002C2                     u8201:
  7790  0002C2  EFE4  F001         	goto	l7241
  7791  0002C6                     u8200:
  7792  0002C6                     
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7794  0002C6  0E00               	movlw	0
  7795  0002C8  0100               	movlb	0	; () banked
  7796  0002CA  6FCA               	movwf	(_prec+1)& (0+255),b
  7797  0002CC  0E00               	movlw	0
  7798  0002CE  6FC9               	movwf	_prec& (0+255),b
  7799  0002D0                     
  7800                           ; BSR set to: 0
  7801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7802  0002D0  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7803  0002D4  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7804  0002D8  2ADE               	incf	postinc2,f,c
  7805  0002DA  0E00               	movlw	0
  7806  0002DC  22DD               	addwfc	postdec2,f,c
  7807  0002DE                     
  7808                           ; BSR set to: 0
  7809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7810  0002DE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7811  0002E2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7812  0002E6  CFDE FFF6          	movff	postinc2,tblptrl
  7813  0002EA  CFDD FFF7          	movff	postdec2,tblptrh
  7814  0002EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7815  0002EE  6AF8               	clrf	tblptru,c
  7816  0002F0                     	endif
  7817  0002F0                     	if	0	;tblptru may be non-zero
  7818  0002F0                     	endif
  7819  0002F0  0008               	tblrd		*
  7820  0002F2  50F5               	movf	tablat,w,c
  7821  0002F4  0A2A               	xorlw	42
  7822  0002F6  A4D8               	btfss	status,2,c
  7823  0002F8  EF80  F001         	goto	u8211
  7824  0002FC  EF82  F001         	goto	u8210
  7825  000300                     u8211:
  7826  000300  EF9F  F001         	goto	l7231
  7827  000304                     u8210:
  7828  000304                     
  7829                           ; BSR set to: 0
  7830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7831  000304  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7832  000308  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7833  00030C  2ADE               	incf	postinc2,f,c
  7834  00030E  0E00               	movlw	0
  7835  000310  22DD               	addwfc	postdec2,f,c
  7836                           
  7837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7838  000312  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7839  000316  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7840  00031A  CFDF F122          	movff	indf2,??_vfpfcnvrt
  7841  00031E  0E02               	movlw	2
  7842  000320  26DE               	addwf	postinc2,f,c
  7843  000322  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  7844  000326  0E00               	movlw	0
  7845  000328  22DD               	addwfc	postdec2,f,c
  7846  00032A  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7847  00032E  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7848  000332  CFDE F0C9          	movff	postinc2,_prec
  7849  000336  CFDD F0CA          	movff	postdec2,_prec+1
  7850                           
  7851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7852  00033A  EFE4  F001         	goto	l7241
  7853  00033E                     l7231:
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7857  00033E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7858  000342  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7859  000346  CFDE F08D          	movff	postinc2,atoi@s
  7860  00034A  CFDD F08E          	movff	postdec2,atoi@s+1
  7861  00034E  EC1E  F019         	call	_atoi	;wreg free
  7862  000352  C08D  F0C9         	movff	?_atoi,_prec
  7863  000356  C08E  F0CA         	movff	?_atoi+1,_prec+1
  7864                           
  7865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7866  00035A  EFB6  F001         	goto	l7235
  7867  00035E                     l7233:
  7868                           
  7869                           ; BSR set to: 1
  7870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7871  00035E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7872  000362  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7873  000366  2ADE               	incf	postinc2,f,c
  7874  000368  0E00               	movlw	0
  7875  00036A  22DD               	addwfc	postdec2,f,c
  7876  00036C                     l7235:
  7877  00036C  0ED0               	movlw	208
  7878  00036E  0101               	movlb	1	; () banked
  7879  000370  6F22               	movwf	??_vfpfcnvrt& (0+255),b
  7880  000372  0EFF               	movlw	255
  7881  000374  6F23               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7882  000376  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7883  00037A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7884  00037E  CFDE FFF6          	movff	postinc2,tblptrl
  7885  000382  CFDD FFF7          	movff	postdec2,tblptrh
  7886  000386                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7887  000386  6AF8               	clrf	tblptru,c
  7888  000388                     	endif
  7889  000388                     	if	0	;tblptru may be non-zero
  7890  000388                     	endif
  7891  000388  0008               	tblrd		*
  7892  00038A  50F5               	movf	tablat,w,c
  7893  00038C  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7894  00038E  6B25               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7895  000390  5122               	movf	??_vfpfcnvrt& (0+255),w,b
  7896  000392  2724               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7897  000394  5123               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7898  000396  2325               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7899  000398  5125               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7900  00039A  E10A               	bnz	u8220
  7901  00039C  0E0A               	movlw	10
  7902  00039E  5D24               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7903  0003A0  A0D8               	btfss	status,0,c
  7904  0003A2  EFD5  F001         	goto	u8221
  7905  0003A6  EFD8  F001         	goto	u8220
  7906  0003AA                     u8221:
  7907  0003AA  0E01               	movlw	1
  7908  0003AC  EFD9  F001         	goto	u8230
  7909  0003B0                     u8220:
  7910  0003B0  0E00               	movlw	0
  7911  0003B2                     u8230:
  7912  0003B2  6F2C               	movwf	_vfpfcnvrt$1838& (0+255),b
  7913  0003B4  6B2D               	clrf	(_vfpfcnvrt$1838+1)& (0+255),b
  7914  0003B6                     
  7915                           ; BSR set to: 1
  7916  0003B6  512C               	movf	_vfpfcnvrt$1838& (0+255),w,b
  7917  0003B8  112D               	iorwf	(_vfpfcnvrt$1838+1)& (0+255),w,b
  7918  0003BA  A4D8               	btfss	status,2,c
  7919  0003BC  EFE2  F001         	goto	u8241
  7920  0003C0  EFE4  F001         	goto	u8240
  7921  0003C4                     u8241:
  7922  0003C4  EFAF  F001         	goto	l7233
  7923  0003C8                     u8240:
  7924  0003C8                     l7241:
  7925                           
  7926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7927  0003C8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7928  0003CC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7929  0003D0  CFDE FFF6          	movff	postinc2,tblptrl
  7930  0003D4  CFDD FFF7          	movff	postdec2,tblptrh
  7931  0003D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7932  0003D8  6AF8               	clrf	tblptru,c
  7933  0003DA                     	endif
  7934  0003DA                     	if	0	;tblptru may be non-zero
  7935  0003DA                     	endif
  7936  0003DA  0008               	tblrd		*
  7937  0003DC  50F5               	movf	tablat,w,c
  7938  0003DE  0A63               	xorlw	99
  7939  0003E0  A4D8               	btfss	status,2,c
  7940  0003E2  EFF5  F001         	goto	u8251
  7941  0003E6  EFF7  F001         	goto	u8250
  7942  0003EA                     u8251:
  7943  0003EA  EF1F  F002         	goto	l7249
  7944  0003EE                     u8250:
  7945  0003EE                     
  7946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7947  0003EE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7948  0003F2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7949  0003F6  2ADE               	incf	postinc2,f,c
  7950  0003F8  0E00               	movlw	0
  7951  0003FA  22DD               	addwfc	postdec2,f,c
  7952                           
  7953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7954  0003FC  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7955  000400  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7956  000404  CFDF F122          	movff	indf2,??_vfpfcnvrt
  7957  000408  0E02               	movlw	2
  7958  00040A  26DE               	addwf	postinc2,f,c
  7959  00040C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  7960  000410  0E00               	movlw	0
  7961  000412  22DD               	addwfc	postdec2,f,c
  7962  000414  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7963  000418  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7964  00041C  50DF               	movf	indf2,w,c
  7965  00041E  0101               	movlb	1	; () banked
  7966  000420  6F38               	movwf	vfpfcnvrt@c& (0+255),b
  7967  000422                     
  7968                           ; BSR set to: 1
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7970  000422  C11C  F0A3         	movff	vfpfcnvrt@fp,ctoa@fp
  7971  000426  C11D  F0A4         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7972  00042A  C138  F0A5         	movff	vfpfcnvrt@c,ctoa@c
  7973  00042E  EC2F  F026         	call	_ctoa	;wreg free
  7974  000432  C0A3  F11C         	movff	?_ctoa,?_vfpfcnvrt
  7975  000436  C0A4  F11D         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7976  00043A  EFA3  F009         	goto	l879
  7977  00043E                     l7249:
  7978                           
  7979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  7980  00043E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7981  000442  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7982  000446  CFDE F086          	movff	postinc2,strncmp@_l
  7983  00044A  CFDD F087          	movff	postdec2,strncmp@_l+1
  7984  00044E  0ED2               	movlw	low STR_12
  7985  000450  0100               	movlb	0	; () banked
  7986  000452  6F88               	movwf	strncmp@_r& (0+255),b
  7987  000454  0EFF               	movlw	high STR_12
  7988  000456  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  7989  000458  0E00               	movlw	0
  7990  00045A  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  7991  00045C  0E03               	movlw	3
  7992  00045E  6F8A               	movwf	strncmp@n& (0+255),b
  7993  000460  ECAA  F022         	call	_strncmp	;wreg free
  7994  000464  0100               	movlb	0	; () banked
  7995  000466  5186               	movf	?_strncmp& (0+255),w,b
  7996  000468  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  7997  00046A  B4D8               	btfsc	status,2,c
  7998  00046C  EF3A  F002         	goto	u8261
  7999  000470  EF3C  F002         	goto	u8260
  8000  000474                     u8261:
  8001  000474  EF58  F002         	goto	l7253
  8002  000478                     u8260:
  8003  000478                     
  8004                           ; BSR set to: 0
  8005  000478  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8006  00047C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8007  000480  CFDE F086          	movff	postinc2,strncmp@_l
  8008  000484  CFDD F087          	movff	postdec2,strncmp@_l+1
  8009  000488  0ED6               	movlw	low STR_16
  8010  00048A  6F88               	movwf	strncmp@_r& (0+255),b
  8011  00048C  0EFF               	movlw	high STR_16
  8012  00048E  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8013  000490  0E00               	movlw	0
  8014  000492  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8015  000494  0E03               	movlw	3
  8016  000496  6F8A               	movwf	strncmp@n& (0+255),b
  8017  000498  ECAA  F022         	call	_strncmp	;wreg free
  8018  00049C  0100               	movlb	0	; () banked
  8019  00049E  5186               	movf	?_strncmp& (0+255),w,b
  8020  0004A0  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8021  0004A2  A4D8               	btfss	status,2,c
  8022  0004A4  EF56  F002         	goto	u8271
  8023  0004A8  EF58  F002         	goto	u8270
  8024  0004AC                     u8271:
  8025  0004AC  EF99  F002         	goto	l7259
  8026  0004B0                     u8270:
  8027  0004B0                     l7253:
  8028                           
  8029                           ; BSR set to: 0
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  8031  0004B0  0E03               	movlw	3
  8032  0004B2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8033  0004B6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8034  0004BA  26DE               	addwf	postinc2,f,c
  8035  0004BC  0E00               	movlw	0
  8036  0004BE  22DD               	addwfc	postdec2,f,c
  8037                           
  8038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8039  0004C0  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8040  0004C4  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8041  0004C8  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8042  0004CC  0E02               	movlw	2
  8043  0004CE  26DE               	addwf	postinc2,f,c
  8044  0004D0  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8045  0004D4  0E00               	movlw	0
  8046  0004D6  22DD               	addwfc	postdec2,f,c
  8047  0004D8  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8048  0004DC  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8049  0004E0  50DF               	movf	indf2,w,c
  8050  0004E2  0101               	movlb	1	; () banked
  8051  0004E4  6F2E               	movwf	vfpfcnvrt@ll& (0+255),b
  8052  0004E6  0E00               	movlw	0
  8053  0004E8  BF2E               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  8054  0004EA  0EFF               	movlw	-1
  8055  0004EC  6F2F               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  8056  0004EE  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8057  0004F0  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8058  0004F2  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8059  0004F4  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8060  0004F6  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8061  0004F8  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8062  0004FA                     l7255:
  8063                           
  8064                           ; BSR set to: 1
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  8066  0004FA  C11C  F0A3         	movff	vfpfcnvrt@fp,dtoa@fp
  8067  0004FE  C11D  F0A4         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8068  000502  C12E  F0A5         	movff	vfpfcnvrt@ll,dtoa@d
  8069  000506  C12F  F0A6         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  8070  00050A  C130  F0A7         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  8071  00050E  C131  F0A8         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  8072  000512  C132  F0A9         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  8073  000516  C133  F0AA         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  8074  00051A  C134  F0AB         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  8075  00051E  C135  F0AC         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  8076  000522  ECC4  F013         	call	_dtoa	;wreg free
  8077  000526  C0A3  F11C         	movff	?_dtoa,?_vfpfcnvrt
  8078  00052A  C0A4  F11D         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8079  00052E  EFA3  F009         	goto	l879
  8080  000532                     l7259:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  8084  000532  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8085  000536  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8086  00053A  CFDE F086          	movff	postinc2,strncmp@_l
  8087  00053E  CFDD F087          	movff	postdec2,strncmp@_l+1
  8088  000542  0ED3               	movlw	low (STR_12+1)
  8089  000544  6F88               	movwf	strncmp@_r& (0+255),b
  8090  000546  0EFF               	movlw	high (STR_12+1)
  8091  000548  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8092  00054A  0E00               	movlw	0
  8093  00054C  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8094  00054E  0E02               	movlw	2
  8095  000550  6F8A               	movwf	strncmp@n& (0+255),b
  8096  000552  ECAA  F022         	call	_strncmp	;wreg free
  8097  000556  0100               	movlb	0	; () banked
  8098  000558  5186               	movf	?_strncmp& (0+255),w,b
  8099  00055A  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8100  00055C  B4D8               	btfsc	status,2,c
  8101  00055E  EFB3  F002         	goto	u8281
  8102  000562  EFB5  F002         	goto	u8280
  8103  000566                     u8281:
  8104  000566  EFD1  F002         	goto	l7263
  8105  00056A                     u8280:
  8106  00056A                     
  8107                           ; BSR set to: 0
  8108  00056A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8109  00056E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8110  000572  CFDE F086          	movff	postinc2,strncmp@_l
  8111  000576  CFDD F087          	movff	postdec2,strncmp@_l+1
  8112  00057A  0ED7               	movlw	low (STR_16+1)
  8113  00057C  6F88               	movwf	strncmp@_r& (0+255),b
  8114  00057E  0EFF               	movlw	high (STR_16+1)
  8115  000580  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8116  000582  0E00               	movlw	0
  8117  000584  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8118  000586  0E02               	movlw	2
  8119  000588  6F8A               	movwf	strncmp@n& (0+255),b
  8120  00058A  ECAA  F022         	call	_strncmp	;wreg free
  8121  00058E  0100               	movlb	0	; () banked
  8122  000590  5186               	movf	?_strncmp& (0+255),w,b
  8123  000592  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8124  000594  A4D8               	btfss	status,2,c
  8125  000596  EFCF  F002         	goto	u8291
  8126  00059A  EFD1  F002         	goto	u8290
  8127  00059E                     u8291:
  8128  00059E  EFF9  F002         	goto	l7269
  8129  0005A2                     u8290:
  8130  0005A2                     l7263:
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  8134  0005A2  0E02               	movlw	2
  8135  0005A4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8136  0005A8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8137  0005AC  26DE               	addwf	postinc2,f,c
  8138  0005AE  0E00               	movlw	0
  8139  0005B0  22DD               	addwfc	postdec2,f,c
  8140                           
  8141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8142  0005B2  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8143  0005B6  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8144  0005BA  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8145  0005BE  0E02               	movlw	2
  8146  0005C0  26DE               	addwf	postinc2,f,c
  8147  0005C2  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8148  0005C6  0E00               	movlw	0
  8149  0005C8  22DD               	addwfc	postdec2,f,c
  8150  0005CA  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8151  0005CE  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8152  0005D2  CFDE F12E          	movff	postinc2,vfpfcnvrt@ll
  8153  0005D6  CFDD F12F          	movff	postdec2,vfpfcnvrt@ll+1
  8154  0005DA  0101               	movlb	1	; () banked
  8155  0005DC  0E00               	movlw	0
  8156  0005DE  BF2F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8157  0005E0  0EFF               	movlw	-1
  8158  0005E2  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8159  0005E4  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8160  0005E6  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8161  0005E8  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8162  0005EA  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8163  0005EC  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8164  0005EE  EF7D  F002         	goto	l7255
  8165  0005F2                     l7269:
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8169  0005F2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8170  0005F6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8171  0005FA  CFDE FFF6          	movff	postinc2,tblptrl
  8172  0005FE  CFDD FFF7          	movff	postdec2,tblptrh
  8173  000602                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8174  000602  6AF8               	clrf	tblptru,c
  8175  000604                     	endif
  8176  000604                     	if	0	;tblptru may be non-zero
  8177  000604                     	endif
  8178  000604  0008               	tblrd		*
  8179  000606  50F5               	movf	tablat,w,c
  8180  000608  0A64               	xorlw	100
  8181  00060A  B4D8               	btfsc	status,2,c
  8182  00060C  EF0A  F003         	goto	u8301
  8183  000610  EF0C  F003         	goto	u8300
  8184  000614                     u8301:
  8185  000614  EF1F  F003         	goto	l7273
  8186  000618                     u8300:
  8187  000618                     
  8188                           ; BSR set to: 0
  8189  000618  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8190  00061C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8191  000620  CFDE FFF6          	movff	postinc2,tblptrl
  8192  000624  CFDD FFF7          	movff	postdec2,tblptrh
  8193  000628                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8194  000628  6AF8               	clrf	tblptru,c
  8195  00062A                     	endif
  8196  00062A                     	if	0	;tblptru may be non-zero
  8197  00062A                     	endif
  8198  00062A  0008               	tblrd		*
  8199  00062C  50F5               	movf	tablat,w,c
  8200  00062E  0A69               	xorlw	105
  8201  000630  A4D8               	btfss	status,2,c
  8202  000632  EF1D  F003         	goto	u8311
  8203  000636  EF1F  F003         	goto	u8310
  8204  00063A                     u8311:
  8205  00063A  EF46  F003         	goto	l7279
  8206  00063E                     u8310:
  8207  00063E                     l7273:
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8211  00063E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8212  000642  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8213  000646  2ADE               	incf	postinc2,f,c
  8214  000648  0E00               	movlw	0
  8215  00064A  22DD               	addwfc	postdec2,f,c
  8216                           
  8217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8218  00064C  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8219  000650  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8220  000654  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8221  000658  0E02               	movlw	2
  8222  00065A  26DE               	addwf	postinc2,f,c
  8223  00065C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8224  000660  0E00               	movlw	0
  8225  000662  22DD               	addwfc	postdec2,f,c
  8226  000664  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8227  000668  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8228  00066C  CFDE F12E          	movff	postinc2,vfpfcnvrt@ll
  8229  000670  CFDD F12F          	movff	postdec2,vfpfcnvrt@ll+1
  8230  000674  0101               	movlb	1	; () banked
  8231  000676  0E00               	movlw	0
  8232  000678  BF2F               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  8233  00067A  0EFF               	movlw	-1
  8234  00067C  6F30               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  8235  00067E  6F31               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  8236  000680  6F32               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  8237  000682  6F33               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  8238  000684  6F34               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  8239  000686  6F35               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  8240  000688  EF7D  F002         	goto	l7255
  8241  00068C                     l7279:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  8245  00068C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8246  000690  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8247  000694  CFDE F086          	movff	postinc2,strncmp@_l
  8248  000698  CFDD F087          	movff	postdec2,strncmp@_l+1
  8249  00069C  0EED               	movlw	low STR_30
  8250  00069E  6F88               	movwf	strncmp@_r& (0+255),b
  8251  0006A0  0EFF               	movlw	high STR_30
  8252  0006A2  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8253  0006A4  0E00               	movlw	0
  8254  0006A6  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8255  0006A8  0E02               	movlw	2
  8256  0006AA  6F8A               	movwf	strncmp@n& (0+255),b
  8257  0006AC  ECAA  F022         	call	_strncmp	;wreg free
  8258  0006B0  0100               	movlb	0	; () banked
  8259  0006B2  5186               	movf	?_strncmp& (0+255),w,b
  8260  0006B4  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8261  0006B6  B4D8               	btfsc	status,2,c
  8262  0006B8  EF60  F003         	goto	u8321
  8263  0006BC  EF62  F003         	goto	u8320
  8264  0006C0                     u8321:
  8265  0006C0  EF7E  F003         	goto	l7283
  8266  0006C4                     u8320:
  8267  0006C4                     
  8268                           ; BSR set to: 0
  8269  0006C4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8270  0006C8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8271  0006CC  CFDE F086          	movff	postinc2,strncmp@_l
  8272  0006D0  CFDD F087          	movff	postdec2,strncmp@_l+1
  8273  0006D4  0EF0               	movlw	low STR_34
  8274  0006D6  6F88               	movwf	strncmp@_r& (0+255),b
  8275  0006D8  0EFF               	movlw	high STR_34
  8276  0006DA  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8277  0006DC  0E00               	movlw	0
  8278  0006DE  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8279  0006E0  0E02               	movlw	2
  8280  0006E2  6F8A               	movwf	strncmp@n& (0+255),b
  8281  0006E4  ECAA  F022         	call	_strncmp	;wreg free
  8282  0006E8  0100               	movlb	0	; () banked
  8283  0006EA  5186               	movf	?_strncmp& (0+255),w,b
  8284  0006EC  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8285  0006EE  A4D8               	btfss	status,2,c
  8286  0006F0  EF7C  F003         	goto	u8331
  8287  0006F4  EF7E  F003         	goto	u8330
  8288  0006F8                     u8331:
  8289  0006F8  EFA7  F003         	goto	l7289
  8290  0006FC                     u8330:
  8291  0006FC                     l7283:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  8295  0006FC  0E02               	movlw	2
  8296  0006FE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8297  000702  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8298  000706  26DE               	addwf	postinc2,f,c
  8299  000708  0E00               	movlw	0
  8300  00070A  22DD               	addwfc	postdec2,f,c
  8301                           
  8302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  8303  00070C  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8304  000710  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8305  000714  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8306  000718  0E02               	movlw	2
  8307  00071A  26DE               	addwf	postinc2,f,c
  8308  00071C  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8309  000720  0E00               	movlw	0
  8310  000722  22DD               	addwfc	postdec2,f,c
  8311  000724  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8312  000728  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8313  00072C  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  8314  000730  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  8315  000734  C124  F12E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  8316  000738  C125  F12F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  8317  00073C  0101               	movlb	1	; () banked
  8318  00073E  6B30               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  8319  000740  6B31               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  8320  000742  6B32               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  8321  000744  6B33               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  8322  000746  6B34               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  8323  000748  6B35               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  8324  00074A  EF7D  F002         	goto	l7255
  8325  00074E                     l7289:
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  8329  00074E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8330  000752  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8331  000756  CFDE F086          	movff	postinc2,strncmp@_l
  8332  00075A  CFDD F087          	movff	postdec2,strncmp@_l+1
  8333  00075E  0EDE               	movlw	low STR_39
  8334  000760  6F88               	movwf	strncmp@_r& (0+255),b
  8335  000762  0EFF               	movlw	high STR_39
  8336  000764  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8337  000766  0E00               	movlw	0
  8338  000768  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8339  00076A  0E03               	movlw	3
  8340  00076C  6F8A               	movwf	strncmp@n& (0+255),b
  8341  00076E  ECAA  F022         	call	_strncmp	;wreg free
  8342  000772  0100               	movlb	0	; () banked
  8343  000774  5186               	movf	?_strncmp& (0+255),w,b
  8344  000776  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8345  000778  A4D8               	btfss	status,2,c
  8346  00077A  EFC1  F003         	goto	u8341
  8347  00077E  EFC3  F003         	goto	u8340
  8348  000782                     u8341:
  8349  000782  EF03  F004         	goto	l7297
  8350  000786                     u8340:
  8351  000786                     
  8352                           ; BSR set to: 0
  8353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  8354  000786  0E03               	movlw	3
  8355  000788  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8356  00078C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8357  000790  26DE               	addwf	postinc2,f,c
  8358  000792  0E00               	movlw	0
  8359  000794  22DD               	addwfc	postdec2,f,c
  8360                           
  8361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8362  000796  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8363  00079A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8364  00079E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8365  0007A2  0E02               	movlw	2
  8366  0007A4  26DE               	addwf	postinc2,f,c
  8367  0007A6  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8368  0007AA  0E00               	movlw	0
  8369  0007AC  22DD               	addwfc	postdec2,f,c
  8370  0007AE  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8371  0007B2  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8372  0007B6  50DF               	movf	indf2,w,c
  8373  0007B8  0101               	movlb	1	; () banked
  8374  0007BA  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8375  0007BC  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  8376  0007BE  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  8377  0007C0  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  8378  0007C2  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8379  0007C4  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8380  0007C6  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8381  0007C8  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8382  0007CA  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8383  0007CC  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8384  0007CE                     l7293:
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  8388  0007CE  C11C  F0A3         	movff	vfpfcnvrt@fp,otoa@fp
  8389  0007D2  C11D  F0A4         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  8390  0007D6  C139  F0A5         	movff	vfpfcnvrt@llu,otoa@d
  8391  0007DA  C13A  F0A6         	movff	vfpfcnvrt@llu+1,otoa@d+1
  8392  0007DE  C13B  F0A7         	movff	vfpfcnvrt@llu+2,otoa@d+2
  8393  0007E2  C13C  F0A8         	movff	vfpfcnvrt@llu+3,otoa@d+3
  8394  0007E6  C13D  F0A9         	movff	vfpfcnvrt@llu+4,otoa@d+4
  8395  0007EA  C13E  F0AA         	movff	vfpfcnvrt@llu+5,otoa@d+5
  8396  0007EE  C13F  F0AB         	movff	vfpfcnvrt@llu+6,otoa@d+6
  8397  0007F2  C140  F0AC         	movff	vfpfcnvrt@llu+7,otoa@d+7
  8398  0007F6  EC26  F01A         	call	_otoa	;wreg free
  8399  0007FA  C0A3  F11C         	movff	?_otoa,?_vfpfcnvrt
  8400  0007FE  C0A4  F11D         	movff	?_otoa+1,?_vfpfcnvrt+1
  8401  000802  EFA3  F009         	goto	l879
  8402  000806                     l7297:
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  8406  000806  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8407  00080A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8408  00080E  CFDE F086          	movff	postinc2,strncmp@_l
  8409  000812  CFDD F087          	movff	postdec2,strncmp@_l+1
  8410  000816  0EDF               	movlw	low (STR_39+1)
  8411  000818  6F88               	movwf	strncmp@_r& (0+255),b
  8412  00081A  0EFF               	movlw	high (STR_39+1)
  8413  00081C  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8414  00081E  0E00               	movlw	0
  8415  000820  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8416  000822  0E02               	movlw	2
  8417  000824  6F8A               	movwf	strncmp@n& (0+255),b
  8418  000826  ECAA  F022         	call	_strncmp	;wreg free
  8419  00082A  0100               	movlb	0	; () banked
  8420  00082C  5186               	movf	?_strncmp& (0+255),w,b
  8421  00082E  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8422  000830  A4D8               	btfss	status,2,c
  8423  000832  EF1D  F004         	goto	u8351
  8424  000836  EF1F  F004         	goto	u8350
  8425  00083A                     u8351:
  8426  00083A  EF48  F004         	goto	l7305
  8427  00083E                     u8350:
  8428  00083E                     
  8429                           ; BSR set to: 0
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  8431  00083E  0E02               	movlw	2
  8432  000840  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8433  000844  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8434  000848  26DE               	addwf	postinc2,f,c
  8435  00084A  0E00               	movlw	0
  8436  00084C  22DD               	addwfc	postdec2,f,c
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  8439  00084E  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8440  000852  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8441  000856  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8442  00085A  0E02               	movlw	2
  8443  00085C  26DE               	addwf	postinc2,f,c
  8444  00085E  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8445  000862  0E00               	movlw	0
  8446  000864  22DD               	addwfc	postdec2,f,c
  8447  000866  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8448  00086A  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8449  00086E  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  8450  000872  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  8451  000876  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8452  00087A  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8453  00087E  0101               	movlb	1	; () banked
  8454  000880  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8455  000882  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8456  000884  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8457  000886  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8458  000888  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8459  00088A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8460  00088C  EFE7  F003         	goto	l7293
  8461  000890                     l7305:
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  8465  000890  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8466  000894  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8467  000898  CFDE FFF6          	movff	postinc2,tblptrl
  8468  00089C  CFDD FFF7          	movff	postdec2,tblptrh
  8469  0008A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8470  0008A0  6AF8               	clrf	tblptru,c
  8471  0008A2                     	endif
  8472  0008A2                     	if	0	;tblptru may be non-zero
  8473  0008A2                     	endif
  8474  0008A2  0008               	tblrd		*
  8475  0008A4  50F5               	movf	tablat,w,c
  8476  0008A6  0A6F               	xorlw	111
  8477  0008A8  A4D8               	btfss	status,2,c
  8478  0008AA  EF59  F004         	goto	u8361
  8479  0008AE  EF5B  F004         	goto	u8360
  8480  0008B2                     u8361:
  8481  0008B2  EF83  F004         	goto	l7313
  8482  0008B6                     u8360:
  8483  0008B6                     
  8484                           ; BSR set to: 0
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  8486  0008B6  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8487  0008BA  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8488  0008BE  2ADE               	incf	postinc2,f,c
  8489  0008C0  0E00               	movlw	0
  8490  0008C2  22DD               	addwfc	postdec2,f,c
  8491                           
  8492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  8493  0008C4  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8494  0008C8  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8495  0008CC  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8496  0008D0  0E02               	movlw	2
  8497  0008D2  26DE               	addwf	postinc2,f,c
  8498  0008D4  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8499  0008D8  0E00               	movlw	0
  8500  0008DA  22DD               	addwfc	postdec2,f,c
  8501  0008DC  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8502  0008E0  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8503  0008E4  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  8504  0008E8  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  8505  0008EC  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8506  0008F0  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8507  0008F4  0101               	movlb	1	; () banked
  8508  0008F6  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8509  0008F8  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8510  0008FA  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8511  0008FC  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8512  0008FE  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8513  000900  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8514  000902  EFE7  F003         	goto	l7293
  8515  000906                     l7313:
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  8519  000906  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8520  00090A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8521  00090E  CFDE F086          	movff	postinc2,strncmp@_l
  8522  000912  CFDD F087          	movff	postdec2,strncmp@_l+1
  8523  000916  0EF6               	movlw	low STR_49
  8524  000918  6F88               	movwf	strncmp@_r& (0+255),b
  8525  00091A  0EFF               	movlw	high STR_49
  8526  00091C  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8527  00091E  0E00               	movlw	0
  8528  000920  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8529  000922  0E02               	movlw	2
  8530  000924  6F8A               	movwf	strncmp@n& (0+255),b
  8531  000926  ECAA  F022         	call	_strncmp	;wreg free
  8532  00092A  0100               	movlb	0	; () banked
  8533  00092C  5186               	movf	?_strncmp& (0+255),w,b
  8534  00092E  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8535  000930  A4D8               	btfss	status,2,c
  8536  000932  EF9D  F004         	goto	u8371
  8537  000936  EF9F  F004         	goto	u8370
  8538  00093A                     u8371:
  8539  00093A  EFC8  F004         	goto	l7321
  8540  00093E                     u8370:
  8541  00093E                     
  8542                           ; BSR set to: 0
  8543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  8544  00093E  0E02               	movlw	2
  8545  000940  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8546  000944  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8547  000948  26DE               	addwf	postinc2,f,c
  8548  00094A  0E00               	movlw	0
  8549  00094C  22DD               	addwfc	postdec2,f,c
  8550                           
  8551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  8552  00094E  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8553  000952  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8554  000956  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8555  00095A  0E02               	movlw	2
  8556  00095C  26DE               	addwf	postinc2,f,c
  8557  00095E  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8558  000962  0E00               	movlw	0
  8559  000964  22DD               	addwfc	postdec2,f,c
  8560  000966  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8561  00096A  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8562  00096E  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  8563  000972  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  8564  000976  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8565  00097A  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8566  00097E  0101               	movlb	1	; () banked
  8567  000980  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8568  000982  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8569  000984  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8570  000986  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8571  000988  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8572  00098A  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8573  00098C  EFE7  F003         	goto	l7293
  8574  000990                     l7321:
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  8578  000990  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8579  000994  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8580  000998  CFDE F086          	movff	postinc2,strncmp@_l
  8581  00099C  CFDD F087          	movff	postdec2,strncmp@_l+1
  8582  0009A0  0EDA               	movlw	low STR_54
  8583  0009A2  6F88               	movwf	strncmp@_r& (0+255),b
  8584  0009A4  0EFF               	movlw	high STR_54
  8585  0009A6  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8586  0009A8  0E00               	movlw	0
  8587  0009AA  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8588  0009AC  0E03               	movlw	3
  8589  0009AE  6F8A               	movwf	strncmp@n& (0+255),b
  8590  0009B0  ECAA  F022         	call	_strncmp	;wreg free
  8591  0009B4  0100               	movlb	0	; () banked
  8592  0009B6  5186               	movf	?_strncmp& (0+255),w,b
  8593  0009B8  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8594  0009BA  A4D8               	btfss	status,2,c
  8595  0009BC  EFE2  F004         	goto	u8381
  8596  0009C0  EFE4  F004         	goto	u8380
  8597  0009C4                     u8381:
  8598  0009C4  EF0D  F005         	goto	l7331
  8599  0009C8                     u8380:
  8600  0009C8                     
  8601                           ; BSR set to: 0
  8602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  8603  0009C8  0E03               	movlw	3
  8604  0009CA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8605  0009CE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8606  0009D2  26DE               	addwf	postinc2,f,c
  8607  0009D4  0E00               	movlw	0
  8608  0009D6  22DD               	addwfc	postdec2,f,c
  8609                           
  8610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8611  0009D8  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8612  0009DC  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8613  0009E0  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8614  0009E4  0E02               	movlw	2
  8615  0009E6  26DE               	addwf	postinc2,f,c
  8616  0009E8  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8617  0009EC  0E00               	movlw	0
  8618  0009EE  22DD               	addwfc	postdec2,f,c
  8619  0009F0  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8620  0009F4  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8621  0009F8  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  8622  0009FC  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  8623  000A00                     
  8624                           ; BSR set to: 0
  8625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  8626  000A00  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8627  000A04  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8628  000A08  C0C5  FFDF         	movff	_nout,indf2
  8629  000A0C                     l7327:
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  8633  000A0C  0E00               	movlw	0
  8634  000A0E  0101               	movlb	1	; () banked
  8635  000A10  6F1D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  8636  000A12  0E00               	movlw	0
  8637  000A14  6F1C               	movwf	?_vfpfcnvrt& (0+255),b
  8638  000A16  EFA3  F009         	goto	l879
  8639  000A1A                     l7331:
  8640                           
  8641                           ; BSR set to: 0
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  8643  000A1A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8644  000A1E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8645  000A22  CFDE F086          	movff	postinc2,strncmp@_l
  8646  000A26  CFDD F087          	movff	postdec2,strncmp@_l+1
  8647  000A2A  0EDB               	movlw	low (STR_54+1)
  8648  000A2C  6F88               	movwf	strncmp@_r& (0+255),b
  8649  000A2E  0EFF               	movlw	high (STR_54+1)
  8650  000A30  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8651  000A32  0E00               	movlw	0
  8652  000A34  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8653  000A36  0E02               	movlw	2
  8654  000A38  6F8A               	movwf	strncmp@n& (0+255),b
  8655  000A3A  ECAA  F022         	call	_strncmp	;wreg free
  8656  000A3E  0100               	movlb	0	; () banked
  8657  000A40  5186               	movf	?_strncmp& (0+255),w,b
  8658  000A42  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8659  000A44  A4D8               	btfss	status,2,c
  8660  000A46  EF27  F005         	goto	u8391
  8661  000A4A  EF29  F005         	goto	u8390
  8662  000A4E                     u8391:
  8663  000A4E  EF4F  F005         	goto	l7341
  8664  000A52                     u8390:
  8665  000A52                     
  8666                           ; BSR set to: 0
  8667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  8668  000A52  0E02               	movlw	2
  8669  000A54  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8670  000A58  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8671  000A5C  26DE               	addwf	postinc2,f,c
  8672  000A5E  0E00               	movlw	0
  8673  000A60  22DD               	addwfc	postdec2,f,c
  8674                           
  8675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  8676  000A62  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8677  000A66  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8678  000A6A  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8679  000A6E  0E02               	movlw	2
  8680  000A70  26DE               	addwf	postinc2,f,c
  8681  000A72  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8682  000A76  0E00               	movlw	0
  8683  000A78  22DD               	addwfc	postdec2,f,c
  8684  000A7A  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8685  000A7E  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8686  000A82  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  8687  000A86  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  8688  000A8A                     
  8689                           ; BSR set to: 0
  8690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  8691  000A8A  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8692  000A8E  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8693  000A92  C0C5  FFDE         	movff	_nout,postinc2
  8694  000A96  C0C6  FFDD         	movff	_nout+1,postdec2
  8695  000A9A  EF06  F005         	goto	l7327
  8696  000A9E                     l7341:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  8700  000A9E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8701  000AA2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8702  000AA6  CFDE FFF6          	movff	postinc2,tblptrl
  8703  000AAA  CFDD FFF7          	movff	postdec2,tblptrh
  8704  000AAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8705  000AAE  6AF8               	clrf	tblptru,c
  8706  000AB0                     	endif
  8707  000AB0                     	if	0	;tblptru may be non-zero
  8708  000AB0                     	endif
  8709  000AB0  0008               	tblrd		*
  8710  000AB2  50F5               	movf	tablat,w,c
  8711  000AB4  0A6E               	xorlw	110
  8712  000AB6  A4D8               	btfss	status,2,c
  8713  000AB8  EF60  F005         	goto	u8401
  8714  000ABC  EF62  F005         	goto	u8400
  8715  000AC0                     u8401:
  8716  000AC0  EF87  F005         	goto	l7351
  8717  000AC4                     u8400:
  8718  000AC4                     
  8719                           ; BSR set to: 0
  8720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  8721  000AC4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8722  000AC8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8723  000ACC  2ADE               	incf	postinc2,f,c
  8724  000ACE  0E00               	movlw	0
  8725  000AD0  22DD               	addwfc	postdec2,f,c
  8726                           
  8727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  8728  000AD2  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8729  000AD6  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8730  000ADA  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8731  000ADE  0E02               	movlw	2
  8732  000AE0  26DE               	addwf	postinc2,f,c
  8733  000AE2  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8734  000AE6  0E00               	movlw	0
  8735  000AE8  22DD               	addwfc	postdec2,f,c
  8736  000AEA  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8737  000AEE  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8738  000AF2  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  8739  000AF6  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  8740  000AFA                     
  8741                           ; BSR set to: 0
  8742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  8743  000AFA  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8744  000AFE  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8745  000B02  C0C5  FFDE         	movff	_nout,postinc2
  8746  000B06  C0C6  FFDD         	movff	_nout+1,postdec2
  8747  000B0A  EF06  F005         	goto	l7327
  8748  000B0E                     l7351:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  8752  000B0E  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8753  000B12  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8754  000B16  CFDE F086          	movff	postinc2,strncmp@_l
  8755  000B1A  CFDD F087          	movff	postdec2,strncmp@_l+1
  8756  000B1E  0EF3               	movlw	low STR_64
  8757  000B20  6F88               	movwf	strncmp@_r& (0+255),b
  8758  000B22  0EFF               	movlw	high STR_64
  8759  000B24  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8760  000B26  0E00               	movlw	0
  8761  000B28  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8762  000B2A  0E02               	movlw	2
  8763  000B2C  6F8A               	movwf	strncmp@n& (0+255),b
  8764  000B2E  ECAA  F022         	call	_strncmp	;wreg free
  8765  000B32  0100               	movlb	0	; () banked
  8766  000B34  5186               	movf	?_strncmp& (0+255),w,b
  8767  000B36  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8768  000B38  A4D8               	btfss	status,2,c
  8769  000B3A  EFA1  F005         	goto	u8411
  8770  000B3E  EFA3  F005         	goto	u8410
  8771  000B42                     u8411:
  8772  000B42  EFC9  F005         	goto	l7361
  8773  000B46                     u8410:
  8774  000B46                     
  8775                           ; BSR set to: 0
  8776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  8777  000B46  0E02               	movlw	2
  8778  000B48  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8779  000B4C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8780  000B50  26DE               	addwf	postinc2,f,c
  8781  000B52  0E00               	movlw	0
  8782  000B54  22DD               	addwfc	postdec2,f,c
  8783                           
  8784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  8785  000B56  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8786  000B5A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8787  000B5E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8788  000B62  0E02               	movlw	2
  8789  000B64  26DE               	addwf	postinc2,f,c
  8790  000B66  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8791  000B6A  0E00               	movlw	0
  8792  000B6C  22DD               	addwfc	postdec2,f,c
  8793  000B6E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8794  000B72  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8795  000B76  CFDE F136          	movff	postinc2,vfpfcnvrt@vp
  8796  000B7A  CFDD F137          	movff	postdec2,vfpfcnvrt@vp+1
  8797  000B7E                     
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  8800  000B7E  C136  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  8801  000B82  C137  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  8802  000B86  C0C5  FFDE         	movff	_nout,postinc2
  8803  000B8A  C0C6  FFDD         	movff	_nout+1,postdec2
  8804  000B8E  EF06  F005         	goto	l7327
  8805  000B92                     l7361:
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  8809  000B92  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8810  000B96  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8811  000B9A  CFDE FFF6          	movff	postinc2,tblptrl
  8812  000B9E  CFDD FFF7          	movff	postdec2,tblptrh
  8813  000BA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8814  000BA2  6AF8               	clrf	tblptru,c
  8815  000BA4                     	endif
  8816  000BA4                     	if	0	;tblptru may be non-zero
  8817  000BA4                     	endif
  8818  000BA4  0008               	tblrd		*
  8819  000BA6  50F5               	movf	tablat,w,c
  8820  000BA8  0A70               	xorlw	112
  8821  000BAA  A4D8               	btfss	status,2,c
  8822  000BAC  EFDA  F005         	goto	u8421
  8823  000BB0  EFDC  F005         	goto	u8420
  8824  000BB4                     u8421:
  8825  000BB4  EF21  F006         	goto	l7369
  8826  000BB8                     u8420:
  8827  000BB8                     
  8828                           ; BSR set to: 0
  8829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  8830  000BB8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8831  000BBC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8832  000BC0  2ADE               	incf	postinc2,f,c
  8833  000BC2  0E00               	movlw	0
  8834  000BC4  22DD               	addwfc	postdec2,f,c
  8835                           
  8836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  8837  000BC6  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8838  000BCA  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8839  000BCE  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8840  000BD2  0E02               	movlw	2
  8841  000BD4  26DE               	addwf	postinc2,f,c
  8842  000BD6  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8843  000BDA  0E00               	movlw	0
  8844  000BDC  22DD               	addwfc	postdec2,f,c
  8845  000BDE  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8846  000BE2  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8847  000BE6  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  8848  000BEA  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  8849  000BEE  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  8850  000BF2  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  8851  000BF6  0101               	movlb	1	; () banked
  8852  000BF8  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8853  000BFA  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8854  000BFC  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8855  000BFE  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8856  000C00  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8857  000C02  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8858  000C04                     
  8859                           ; BSR set to: 1
  8860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  8861  000C04  C11C  F0A3         	movff	vfpfcnvrt@fp,xtoa@fp
  8862  000C08  C11D  F0A4         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8863  000C0C  C139  F0A5         	movff	vfpfcnvrt@llu,xtoa@d
  8864  000C10  C13A  F0A6         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  8865  000C14  C13B  F0A7         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  8866  000C18  C13C  F0A8         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  8867  000C1C  C13D  F0A9         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  8868  000C20  C13E  F0AA         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  8869  000C24  C13F  F0AB         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  8870  000C28  C140  F0AC         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  8871  000C2C  0E78               	movlw	120
  8872  000C2E  0100               	movlb	0	; () banked
  8873  000C30  6FAD               	movwf	xtoa@x& (0+255),b
  8874  000C32  EC47  F015         	call	_xtoa	;wreg free
  8875  000C36  C0A3  F11C         	movff	?_xtoa,?_vfpfcnvrt
  8876  000C3A  C0A4  F11D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8877  000C3E  EFA3  F009         	goto	l879
  8878  000C42                     l7369:
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  8882  000C42  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8883  000C46  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8884  000C4A  CFDE FFF6          	movff	postinc2,tblptrl
  8885  000C4E  CFDD FFF7          	movff	postdec2,tblptrh
  8886  000C52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8887  000C52  6AF8               	clrf	tblptru,c
  8888  000C54                     	endif
  8889  000C54                     	if	0	;tblptru may be non-zero
  8890  000C54                     	endif
  8891  000C54  0008               	tblrd		*
  8892  000C56  50F5               	movf	tablat,w,c
  8893  000C58  0A73               	xorlw	115
  8894  000C5A  A4D8               	btfss	status,2,c
  8895  000C5C  EF32  F006         	goto	u8431
  8896  000C60  EF34  F006         	goto	u8430
  8897  000C64                     u8431:
  8898  000C64  EF5F  F006         	goto	l7377
  8899  000C68                     u8430:
  8900  000C68                     
  8901                           ; BSR set to: 0
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  8903  000C68  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8904  000C6C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8905  000C70  2ADE               	incf	postinc2,f,c
  8906  000C72  0E00               	movlw	0
  8907  000C74  22DD               	addwfc	postdec2,f,c
  8908                           
  8909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8910  000C76  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8911  000C7A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8912  000C7E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8913  000C82  0E02               	movlw	2
  8914  000C84  26DE               	addwf	postinc2,f,c
  8915  000C86  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8916  000C8A  0E00               	movlw	0
  8917  000C8C  22DD               	addwfc	postdec2,f,c
  8918  000C8E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8919  000C92  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8920  000C96  CFDE F126          	movff	postinc2,vfpfcnvrt@cp
  8921  000C9A  CFDD F127          	movff	postdec2,vfpfcnvrt@cp+1
  8922  000C9E                     
  8923                           ; BSR set to: 0
  8924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  8925  000C9E  C11C  F091         	movff	vfpfcnvrt@fp,stoa@fp
  8926  000CA2  C11D  F092         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  8927  000CA6  C126  F093         	movff	vfpfcnvrt@cp,stoa@s
  8928  000CAA  C127  F094         	movff	vfpfcnvrt@cp+1,stoa@s+1
  8929  000CAE  EC01  F01C         	call	_stoa	;wreg free
  8930  000CB2  C091  F11C         	movff	?_stoa,?_vfpfcnvrt
  8931  000CB6  C092  F11D         	movff	?_stoa+1,?_vfpfcnvrt+1
  8932  000CBA  EFA3  F009         	goto	l879
  8933  000CBE                     l7377:
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  8937  000CBE  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8938  000CC2  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8939  000CC6  CFDE F086          	movff	postinc2,strncmp@_l
  8940  000CCA  CFDD F087          	movff	postdec2,strncmp@_l+1
  8941  000CCE  0EE2               	movlw	low STR_69
  8942  000CD0  6F88               	movwf	strncmp@_r& (0+255),b
  8943  000CD2  0EFF               	movlw	high STR_69
  8944  000CD4  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  8945  000CD6  0E00               	movlw	0
  8946  000CD8  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  8947  000CDA  0E03               	movlw	3
  8948  000CDC  6F8A               	movwf	strncmp@n& (0+255),b
  8949  000CDE  ECAA  F022         	call	_strncmp	;wreg free
  8950  000CE2  0100               	movlb	0	; () banked
  8951  000CE4  5186               	movf	?_strncmp& (0+255),w,b
  8952  000CE6  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  8953  000CE8  A4D8               	btfss	status,2,c
  8954  000CEA  EF79  F006         	goto	u8441
  8955  000CEE  EF7B  F006         	goto	u8440
  8956  000CF2                     u8441:
  8957  000CF2  EFBB  F006         	goto	l7385
  8958  000CF6                     u8440:
  8959  000CF6                     
  8960                           ; BSR set to: 0
  8961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  8962  000CF6  0E03               	movlw	3
  8963  000CF8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8964  000CFC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8965  000D00  26DE               	addwf	postinc2,f,c
  8966  000D02  0E00               	movlw	0
  8967  000D04  22DD               	addwfc	postdec2,f,c
  8968                           
  8969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  8970  000D06  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  8971  000D0A  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  8972  000D0E  CFDF F122          	movff	indf2,??_vfpfcnvrt
  8973  000D12  0E02               	movlw	2
  8974  000D14  26DE               	addwf	postinc2,f,c
  8975  000D16  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  8976  000D1A  0E00               	movlw	0
  8977  000D1C  22DD               	addwfc	postdec2,f,c
  8978  000D1E  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8979  000D22  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8980  000D26  50DF               	movf	indf2,w,c
  8981  000D28  0101               	movlb	1	; () banked
  8982  000D2A  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8983  000D2C  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  8984  000D2E  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  8985  000D30  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  8986  000D32  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  8987  000D34  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  8988  000D36  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  8989  000D38  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  8990  000D3A  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  8991  000D3C  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  8992  000D3E                     l7381:
  8993                           
  8994                           ; BSR set to: 1
  8995                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  8996  000D3E  C11C  F0A3         	movff	vfpfcnvrt@fp,utoa@fp
  8997  000D42  C11D  F0A4         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8998  000D46  C139  F0A5         	movff	vfpfcnvrt@llu,utoa@d
  8999  000D4A  C13A  F0A6         	movff	vfpfcnvrt@llu+1,utoa@d+1
  9000  000D4E  C13B  F0A7         	movff	vfpfcnvrt@llu+2,utoa@d+2
  9001  000D52  C13C  F0A8         	movff	vfpfcnvrt@llu+3,utoa@d+3
  9002  000D56  C13D  F0A9         	movff	vfpfcnvrt@llu+4,utoa@d+4
  9003  000D5A  C13E  F0AA         	movff	vfpfcnvrt@llu+5,utoa@d+5
  9004  000D5E  C13F  F0AB         	movff	vfpfcnvrt@llu+6,utoa@d+6
  9005  000D62  C140  F0AC         	movff	vfpfcnvrt@llu+7,utoa@d+7
  9006  000D66  EC11  F018         	call	_utoa	;wreg free
  9007  000D6A  C0A3  F11C         	movff	?_utoa,?_vfpfcnvrt
  9008  000D6E  C0A4  F11D         	movff	?_utoa+1,?_vfpfcnvrt+1
  9009  000D72  EFA3  F009         	goto	l879
  9010  000D76                     l7385:
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  9014  000D76  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9015  000D7A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9016  000D7E  CFDE F086          	movff	postinc2,strncmp@_l
  9017  000D82  CFDD F087          	movff	postdec2,strncmp@_l+1
  9018  000D86  0EE3               	movlw	low (STR_69+1)
  9019  000D88  6F88               	movwf	strncmp@_r& (0+255),b
  9020  000D8A  0EFF               	movlw	high (STR_69+1)
  9021  000D8C  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9022  000D8E  0E00               	movlw	0
  9023  000D90  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9024  000D92  0E02               	movlw	2
  9025  000D94  6F8A               	movwf	strncmp@n& (0+255),b
  9026  000D96  ECAA  F022         	call	_strncmp	;wreg free
  9027  000D9A  0100               	movlb	0	; () banked
  9028  000D9C  5186               	movf	?_strncmp& (0+255),w,b
  9029  000D9E  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9030  000DA0  A4D8               	btfss	status,2,c
  9031  000DA2  EFD5  F006         	goto	u8451
  9032  000DA6  EFD7  F006         	goto	u8450
  9033  000DAA                     u8451:
  9034  000DAA  EF00  F007         	goto	l7393
  9035  000DAE                     u8450:
  9036  000DAE                     
  9037                           ; BSR set to: 0
  9038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  9039  000DAE  0E02               	movlw	2
  9040  000DB0  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9041  000DB4  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9042  000DB8  26DE               	addwf	postinc2,f,c
  9043  000DBA  0E00               	movlw	0
  9044  000DBC  22DD               	addwfc	postdec2,f,c
  9045                           
  9046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  9047  000DBE  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9048  000DC2  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9049  000DC6  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9050  000DCA  0E02               	movlw	2
  9051  000DCC  26DE               	addwf	postinc2,f,c
  9052  000DCE  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9053  000DD2  0E00               	movlw	0
  9054  000DD4  22DD               	addwfc	postdec2,f,c
  9055  000DD6  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9056  000DDA  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9057  000DDE  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  9058  000DE2  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  9059  000DE6  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9060  000DEA  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9061  000DEE  0101               	movlb	1	; () banked
  9062  000DF0  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9063  000DF2  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9064  000DF4  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9065  000DF6  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9066  000DF8  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9067  000DFA  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9068  000DFC  EF9F  F006         	goto	l7381
  9069  000E00                     l7393:
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  9073  000E00  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9074  000E04  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9075  000E08  CFDE FFF6          	movff	postinc2,tblptrl
  9076  000E0C  CFDD FFF7          	movff	postdec2,tblptrh
  9077  000E10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9078  000E10  6AF8               	clrf	tblptru,c
  9079  000E12                     	endif
  9080  000E12                     	if	0	;tblptru may be non-zero
  9081  000E12                     	endif
  9082  000E12  0008               	tblrd		*
  9083  000E14  50F5               	movf	tablat,w,c
  9084  000E16  0A75               	xorlw	117
  9085  000E18  A4D8               	btfss	status,2,c
  9086  000E1A  EF11  F007         	goto	u8461
  9087  000E1E  EF13  F007         	goto	u8460
  9088  000E22                     u8461:
  9089  000E22  EF3B  F007         	goto	l7401
  9090  000E26                     u8460:
  9091  000E26                     
  9092                           ; BSR set to: 0
  9093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  9094  000E26  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9095  000E2A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9096  000E2E  2ADE               	incf	postinc2,f,c
  9097  000E30  0E00               	movlw	0
  9098  000E32  22DD               	addwfc	postdec2,f,c
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9101  000E34  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9102  000E38  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9103  000E3C  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9104  000E40  0E02               	movlw	2
  9105  000E42  26DE               	addwf	postinc2,f,c
  9106  000E44  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9107  000E48  0E00               	movlw	0
  9108  000E4A  22DD               	addwfc	postdec2,f,c
  9109  000E4C  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9110  000E50  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9111  000E54  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  9112  000E58  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  9113  000E5C  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9114  000E60  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9115  000E64  0101               	movlb	1	; () banked
  9116  000E66  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9117  000E68  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9118  000E6A  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9119  000E6C  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9120  000E6E  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9121  000E70  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9122  000E72  EF9F  F006         	goto	l7381
  9123  000E76                     l7401:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  9127  000E76  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9128  000E7A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9129  000E7E  CFDE F086          	movff	postinc2,strncmp@_l
  9130  000E82  CFDD F087          	movff	postdec2,strncmp@_l+1
  9131  000E86  0EF9               	movlw	low STR_79
  9132  000E88  6F88               	movwf	strncmp@_r& (0+255),b
  9133  000E8A  0EFF               	movlw	high STR_79
  9134  000E8C  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9135  000E8E  0E00               	movlw	0
  9136  000E90  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9137  000E92  0E02               	movlw	2
  9138  000E94  6F8A               	movwf	strncmp@n& (0+255),b
  9139  000E96  ECAA  F022         	call	_strncmp	;wreg free
  9140  000E9A  0100               	movlb	0	; () banked
  9141  000E9C  5186               	movf	?_strncmp& (0+255),w,b
  9142  000E9E  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9143  000EA0  A4D8               	btfss	status,2,c
  9144  000EA2  EF55  F007         	goto	u8471
  9145  000EA6  EF57  F007         	goto	u8470
  9146  000EAA                     u8471:
  9147  000EAA  EF80  F007         	goto	l7409
  9148  000EAE                     u8470:
  9149  000EAE                     
  9150                           ; BSR set to: 0
  9151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  9152  000EAE  0E02               	movlw	2
  9153  000EB0  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9154  000EB4  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9155  000EB8  26DE               	addwf	postinc2,f,c
  9156  000EBA  0E00               	movlw	0
  9157  000EBC  22DD               	addwfc	postdec2,f,c
  9158                           
  9159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  9160  000EBE  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9161  000EC2  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9162  000EC6  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9163  000ECA  0E02               	movlw	2
  9164  000ECC  26DE               	addwf	postinc2,f,c
  9165  000ECE  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9166  000ED2  0E00               	movlw	0
  9167  000ED4  22DD               	addwfc	postdec2,f,c
  9168  000ED6  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9169  000EDA  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9170  000EDE  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  9171  000EE2  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  9172  000EE6  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9173  000EEA  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9174  000EEE  0101               	movlb	1	; () banked
  9175  000EF0  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9176  000EF2  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9177  000EF4  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9178  000EF6  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9179  000EF8  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9180  000EFA  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9181  000EFC  EF9F  F006         	goto	l7381
  9182  000F00                     l7409:
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  9186  000F00  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9187  000F04  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9188  000F08  CFDE F086          	movff	postinc2,strncmp@_l
  9189  000F0C  CFDD F087          	movff	postdec2,strncmp@_l+1
  9190  000F10  0EE6               	movlw	low STR_84
  9191  000F12  6F88               	movwf	strncmp@_r& (0+255),b
  9192  000F14  0EFF               	movlw	high STR_84
  9193  000F16  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9194  000F18  0E00               	movlw	0
  9195  000F1A  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9196  000F1C  0E03               	movlw	3
  9197  000F1E  6F8A               	movwf	strncmp@n& (0+255),b
  9198  000F20  ECAA  F022         	call	_strncmp	;wreg free
  9199  000F24  0100               	movlb	0	; () banked
  9200  000F26  5186               	movf	?_strncmp& (0+255),w,b
  9201  000F28  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9202  000F2A  B4D8               	btfsc	status,2,c
  9203  000F2C  EF9A  F007         	goto	u8481
  9204  000F30  EF9C  F007         	goto	u8480
  9205  000F34                     u8481:
  9206  000F34  EFB8  F007         	goto	l7413
  9207  000F38                     u8480:
  9208  000F38                     
  9209                           ; BSR set to: 0
  9210  000F38  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9211  000F3C  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9212  000F40  CFDE F086          	movff	postinc2,strncmp@_l
  9213  000F44  CFDD F087          	movff	postdec2,strncmp@_l+1
  9214  000F48  0ECE               	movlw	low STR_88
  9215  000F4A  6F88               	movwf	strncmp@_r& (0+255),b
  9216  000F4C  0EFF               	movlw	high STR_88
  9217  000F4E  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9218  000F50  0E00               	movlw	0
  9219  000F52  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9220  000F54  0E03               	movlw	3
  9221  000F56  6F8A               	movwf	strncmp@n& (0+255),b
  9222  000F58  ECAA  F022         	call	_strncmp	;wreg free
  9223  000F5C  0100               	movlb	0	; () banked
  9224  000F5E  5186               	movf	?_strncmp& (0+255),w,b
  9225  000F60  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9226  000F62  A4D8               	btfss	status,2,c
  9227  000F64  EFB6  F007         	goto	u8491
  9228  000F68  EFB8  F007         	goto	u8490
  9229  000F6C                     u8491:
  9230  000F6C  EF0E  F008         	goto	l7423
  9231  000F70                     u8490:
  9232  000F70                     l7413:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  9236  000F70  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9237  000F74  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9238  000F78  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  9239  000F7C  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  9240  000F80  0E02               	movlw	2
  9241  000F82  0101               	movlb	1	; () banked
  9242  000F84  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  9243  000F86  0E00               	movlw	0
  9244  000F88  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9245  000F8A  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9246  000F8E  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9247  000F92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9248  000F92  6AF8               	clrf	tblptru,c
  9249  000F94                     	endif
  9250  000F94                     	if	0	;tblptru may be non-zero
  9251  000F94                     	endif
  9252  000F94  0008               	tblrd		*
  9253  000F96  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  9254  000F9A                     
  9255                           ; BSR set to: 1
  9256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  9257  000F9A  0E03               	movlw	3
  9258  000F9C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9259  000FA0  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9260  000FA4  26DE               	addwf	postinc2,f,c
  9261  000FA6  0E00               	movlw	0
  9262  000FA8  22DD               	addwfc	postdec2,f,c
  9263  000FAA                     
  9264                           ; BSR set to: 1
  9265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9266  000FAA  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9267  000FAE  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9268  000FB2  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9269  000FB6  0E02               	movlw	2
  9270  000FB8  26DE               	addwf	postinc2,f,c
  9271  000FBA  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9272  000FBE  0E00               	movlw	0
  9273  000FC0  22DD               	addwfc	postdec2,f,c
  9274  000FC2  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9275  000FC6  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9276  000FCA  50DF               	movf	indf2,w,c
  9277  000FCC  6F24               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  9278  000FCE  5124               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  9279  000FD0  6F39               	movwf	vfpfcnvrt@llu& (0+255),b
  9280  000FD2  6B3A               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  9281  000FD4  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9282  000FD6  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9283  000FD8  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9284  000FDA  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9285  000FDC  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9286  000FDE  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9287  000FE0                     l7419:
  9288                           
  9289                           ; BSR set to: 1
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  9291  000FE0  C11C  F0A3         	movff	vfpfcnvrt@fp,xtoa@fp
  9292  000FE4  C11D  F0A4         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9293  000FE8  C139  F0A5         	movff	vfpfcnvrt@llu,xtoa@d
  9294  000FEC  C13A  F0A6         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  9295  000FF0  C13B  F0A7         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  9296  000FF4  C13C  F0A8         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  9297  000FF8  C13D  F0A9         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  9298  000FFC  C13E  F0AA         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  9299  001000  C13F  F0AB         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  9300  001004  C140  F0AC         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  9301  001008  C138  F0AD         	movff	vfpfcnvrt@c,xtoa@x
  9302  00100C  EC47  F015         	call	_xtoa	;wreg free
  9303  001010  C0A3  F11C         	movff	?_xtoa,?_vfpfcnvrt
  9304  001014  C0A4  F11D         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9305  001018  EFA3  F009         	goto	l879
  9306  00101C                     l7423:
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  9310  00101C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9311  001020  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9312  001024  CFDE F086          	movff	postinc2,strncmp@_l
  9313  001028  CFDD F087          	movff	postdec2,strncmp@_l+1
  9314  00102C  0EE7               	movlw	low (STR_84+1)
  9315  00102E  6F88               	movwf	strncmp@_r& (0+255),b
  9316  001030  0EFF               	movlw	high (STR_84+1)
  9317  001032  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9318  001034  0E00               	movlw	0
  9319  001036  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9320  001038  0E02               	movlw	2
  9321  00103A  6F8A               	movwf	strncmp@n& (0+255),b
  9322  00103C  ECAA  F022         	call	_strncmp	;wreg free
  9323  001040  0100               	movlb	0	; () banked
  9324  001042  5186               	movf	?_strncmp& (0+255),w,b
  9325  001044  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9326  001046  B4D8               	btfsc	status,2,c
  9327  001048  EF28  F008         	goto	u8501
  9328  00104C  EF2A  F008         	goto	u8500
  9329  001050                     u8501:
  9330  001050  EF46  F008         	goto	l7427
  9331  001054                     u8500:
  9332  001054                     
  9333                           ; BSR set to: 0
  9334  001054  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9335  001058  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9336  00105C  CFDE F086          	movff	postinc2,strncmp@_l
  9337  001060  CFDD F087          	movff	postdec2,strncmp@_l+1
  9338  001064  0ECF               	movlw	low (STR_88+1)
  9339  001066  6F88               	movwf	strncmp@_r& (0+255),b
  9340  001068  0EFF               	movlw	high (STR_88+1)
  9341  00106A  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9342  00106C  0E00               	movlw	0
  9343  00106E  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9344  001070  0E02               	movlw	2
  9345  001072  6F8A               	movwf	strncmp@n& (0+255),b
  9346  001074  ECAA  F022         	call	_strncmp	;wreg free
  9347  001078  0100               	movlb	0	; () banked
  9348  00107A  5186               	movf	?_strncmp& (0+255),w,b
  9349  00107C  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9350  00107E  A4D8               	btfss	status,2,c
  9351  001080  EF44  F008         	goto	u8511
  9352  001084  EF46  F008         	goto	u8510
  9353  001088                     u8511:
  9354  001088  EF83  F008         	goto	l7437
  9355  00108C                     u8510:
  9356  00108C                     l7427:
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  9360  00108C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9361  001090  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9362  001094  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  9363  001098  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  9364  00109C  0E01               	movlw	1
  9365  00109E  0101               	movlb	1	; () banked
  9366  0010A0  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  9367  0010A2  0E00               	movlw	0
  9368  0010A4  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9369  0010A6  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9370  0010AA  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9371  0010AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9372  0010AE  6AF8               	clrf	tblptru,c
  9373  0010B0                     	endif
  9374  0010B0                     	if	0	;tblptru may be non-zero
  9375  0010B0                     	endif
  9376  0010B0  0008               	tblrd		*
  9377  0010B2  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  9378  0010B6                     
  9379                           ; BSR set to: 1
  9380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  9381  0010B6  0E02               	movlw	2
  9382  0010B8  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9383  0010BC  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9384  0010C0  26DE               	addwf	postinc2,f,c
  9385  0010C2  0E00               	movlw	0
  9386  0010C4  22DD               	addwfc	postdec2,f,c
  9387  0010C6                     
  9388                           ; BSR set to: 1
  9389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  9390  0010C6  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9391  0010CA  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9392  0010CE  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9393  0010D2  0E02               	movlw	2
  9394  0010D4  26DE               	addwf	postinc2,f,c
  9395  0010D6  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9396  0010DA  0E00               	movlw	0
  9397  0010DC  22DD               	addwfc	postdec2,f,c
  9398  0010DE  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9399  0010E2  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9400  0010E6  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  9401  0010EA  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  9402  0010EE  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9403  0010F2  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9404  0010F6  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9405  0010F8  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9406  0010FA  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9407  0010FC  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9408  0010FE  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9409  001100  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9410  001102  EFF0  F007         	goto	l7419
  9411  001106                     l7437:
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  9415  001106  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9416  00110A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9417  00110E  CFDE FFF6          	movff	postinc2,tblptrl
  9418  001112  CFDD FFF7          	movff	postdec2,tblptrh
  9419  001116                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9420  001116  6AF8               	clrf	tblptru,c
  9421  001118                     	endif
  9422  001118                     	if	0	;tblptru may be non-zero
  9423  001118                     	endif
  9424  001118  0008               	tblrd		*
  9425  00111A  50F5               	movf	tablat,w,c
  9426  00111C  0A78               	xorlw	120
  9427  00111E  B4D8               	btfsc	status,2,c
  9428  001120  EF94  F008         	goto	u8521
  9429  001124  EF96  F008         	goto	u8520
  9430  001128                     u8521:
  9431  001128  EFA9  F008         	goto	l7441
  9432  00112C                     u8520:
  9433  00112C                     
  9434                           ; BSR set to: 0
  9435  00112C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9436  001130  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9437  001134  CFDE FFF6          	movff	postinc2,tblptrl
  9438  001138  CFDD FFF7          	movff	postdec2,tblptrh
  9439  00113C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9440  00113C  6AF8               	clrf	tblptru,c
  9441  00113E                     	endif
  9442  00113E                     	if	0	;tblptru may be non-zero
  9443  00113E                     	endif
  9444  00113E  0008               	tblrd		*
  9445  001140  50F5               	movf	tablat,w,c
  9446  001142  0A58               	xorlw	88
  9447  001144  A4D8               	btfss	status,2,c
  9448  001146  EFA7  F008         	goto	u8531
  9449  00114A  EFA9  F008         	goto	u8530
  9450  00114E                     u8531:
  9451  00114E  EFDD  F008         	goto	l7451
  9452  001152                     u8530:
  9453  001152                     l7441:
  9454                           
  9455                           ; BSR set to: 0
  9456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  9457  001152  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9458  001156  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9459  00115A  CFDE FFF6          	movff	postinc2,tblptrl
  9460  00115E  CFDD FFF7          	movff	postdec2,tblptrh
  9461  001162                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9462  001162  6AF8               	clrf	tblptru,c
  9463  001164                     	endif
  9464  001164                     	if	0	;tblptru may be non-zero
  9465  001164                     	endif
  9466  001164  0008               	tblrd		*
  9467  001166  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  9468  00116A                     
  9469                           ; BSR set to: 0
  9470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  9471  00116A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9472  00116E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9473  001172  2ADE               	incf	postinc2,f,c
  9474  001174  0E00               	movlw	0
  9475  001176  22DD               	addwfc	postdec2,f,c
  9476  001178                     
  9477                           ; BSR set to: 0
  9478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  9479  001178  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9480  00117C  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9481  001180  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9482  001184  0E02               	movlw	2
  9483  001186  26DE               	addwf	postinc2,f,c
  9484  001188  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9485  00118C  0E00               	movlw	0
  9486  00118E  22DD               	addwfc	postdec2,f,c
  9487  001190  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9488  001194  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9489  001198  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  9490  00119C  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  9491  0011A0  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9492  0011A4  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9493  0011A8  0101               	movlb	1	; () banked
  9494  0011AA  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9495  0011AC  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9496  0011AE  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9497  0011B0  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9498  0011B2  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9499  0011B4  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9500  0011B6  EFF0  F007         	goto	l7419
  9501  0011BA                     l7451:
  9502                           
  9503                           ; BSR set to: 0
  9504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  9505  0011BA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9506  0011BE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9507  0011C2  CFDE F086          	movff	postinc2,strncmp@_l
  9508  0011C6  CFDD F087          	movff	postdec2,strncmp@_l+1
  9509  0011CA  0EFC               	movlw	low STR_102
  9510  0011CC  6F88               	movwf	strncmp@_r& (0+255),b
  9511  0011CE  0EFF               	movlw	high STR_102
  9512  0011D0  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9513  0011D2  0E00               	movlw	0
  9514  0011D4  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9515  0011D6  0E02               	movlw	2
  9516  0011D8  6F8A               	movwf	strncmp@n& (0+255),b
  9517  0011DA  ECAA  F022         	call	_strncmp	;wreg free
  9518  0011DE  0100               	movlb	0	; () banked
  9519  0011E0  5186               	movf	?_strncmp& (0+255),w,b
  9520  0011E2  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9521  0011E4  B4D8               	btfsc	status,2,c
  9522  0011E6  EFF7  F008         	goto	u8541
  9523  0011EA  EFF9  F008         	goto	u8540
  9524  0011EE                     u8541:
  9525  0011EE  EF15  F009         	goto	l7455
  9526  0011F2                     u8540:
  9527  0011F2                     
  9528                           ; BSR set to: 0
  9529  0011F2  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9530  0011F6  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9531  0011FA  CFDE F086          	movff	postinc2,strncmp@_l
  9532  0011FE  CFDD F087          	movff	postdec2,strncmp@_l+1
  9533  001202  0EEA               	movlw	low STR_106
  9534  001204  6F88               	movwf	strncmp@_r& (0+255),b
  9535  001206  0EFF               	movlw	high STR_106
  9536  001208  6F89               	movwf	(strncmp@_r+1)& (0+255),b
  9537  00120A  0E00               	movlw	0
  9538  00120C  6F8B               	movwf	(strncmp@n+1)& (0+255),b
  9539  00120E  0E02               	movlw	2
  9540  001210  6F8A               	movwf	strncmp@n& (0+255),b
  9541  001212  ECAA  F022         	call	_strncmp	;wreg free
  9542  001216  0100               	movlb	0	; () banked
  9543  001218  5186               	movf	?_strncmp& (0+255),w,b
  9544  00121A  1187               	iorwf	(?_strncmp+1)& (0+255),w,b
  9545  00121C  A4D8               	btfss	status,2,c
  9546  00121E  EF13  F009         	goto	u8551
  9547  001222  EF15  F009         	goto	u8550
  9548  001226                     u8551:
  9549  001226  EF52  F009         	goto	l7465
  9550  00122A                     u8550:
  9551  00122A                     l7455:
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  9555  00122A  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9556  00122E  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9557  001232  CFDE F122          	movff	postinc2,??_vfpfcnvrt
  9558  001236  CFDD F123          	movff	postdec2,??_vfpfcnvrt+1
  9559  00123A  0E01               	movlw	1
  9560  00123C  0101               	movlb	1	; () banked
  9561  00123E  2722               	addwf	??_vfpfcnvrt& (0+255),f,b
  9562  001240  0E00               	movlw	0
  9563  001242  2323               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9564  001244  C122  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9565  001248  C123  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9566  00124C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9567  00124C  6AF8               	clrf	tblptru,c
  9568  00124E                     	endif
  9569  00124E                     	if	0	;tblptru may be non-zero
  9570  00124E                     	endif
  9571  00124E  0008               	tblrd		*
  9572  001250  CFF5 F138          	movff	tablat,vfpfcnvrt@c
  9573  001254                     
  9574                           ; BSR set to: 1
  9575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  9576  001254  0E02               	movlw	2
  9577  001256  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9578  00125A  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9579  00125E  26DE               	addwf	postinc2,f,c
  9580  001260  0E00               	movlw	0
  9581  001262  22DD               	addwfc	postdec2,f,c
  9582  001264                     
  9583                           ; BSR set to: 1
  9584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  9585  001264  C120  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9586  001268  C121  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9587  00126C  CFDF F122          	movff	indf2,??_vfpfcnvrt
  9588  001270  0E02               	movlw	2
  9589  001272  26DE               	addwf	postinc2,f,c
  9590  001274  CFDF F123          	movff	indf2,??_vfpfcnvrt+1
  9591  001278  0E00               	movlw	0
  9592  00127A  22DD               	addwfc	postdec2,f,c
  9593  00127C  C122  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9594  001280  C123  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9595  001284  CFDE F124          	movff	postinc2,??_vfpfcnvrt+2
  9596  001288  CFDD F125          	movff	postdec2,??_vfpfcnvrt+3
  9597  00128C  C124  F139         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  9598  001290  C125  F13A         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  9599  001294  6B3B               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  9600  001296  6B3C               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  9601  001298  6B3D               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  9602  00129A  6B3E               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  9603  00129C  6B3F               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  9604  00129E  6B40               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  9605  0012A0  EFF0  F007         	goto	l7419
  9606  0012A4                     l7465:
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9610  0012A4  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9611  0012A8  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9612  0012AC  CFDE FFF6          	movff	postinc2,tblptrl
  9613  0012B0  CFDD FFF7          	movff	postdec2,tblptrh
  9614  0012B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9615  0012B4  6AF8               	clrf	tblptru,c
  9616  0012B6                     	endif
  9617  0012B6                     	if	0	;tblptru may be non-zero
  9618  0012B6                     	endif
  9619  0012B6  0008               	tblrd		*
  9620  0012B8  50F5               	movf	tablat,w,c
  9621  0012BA  0A25               	xorlw	37
  9622  0012BC  A4D8               	btfss	status,2,c
  9623  0012BE  EF63  F009         	goto	u8561
  9624  0012C2  EF65  F009         	goto	u8560
  9625  0012C6                     u8561:
  9626  0012C6  EF7D  F009         	goto	l7475
  9627  0012CA                     u8560:
  9628  0012CA                     
  9629                           ; BSR set to: 0
  9630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9631  0012CA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9632  0012CE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9633  0012D2  2ADE               	incf	postinc2,f,c
  9634  0012D4  0E00               	movlw	0
  9635  0012D6  22DD               	addwfc	postdec2,f,c
  9636  0012D8                     
  9637                           ; BSR set to: 0
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9639  0012D8  0E00               	movlw	0
  9640  0012DA  6F89               	movwf	(fputc@c+1)& (0+255),b
  9641  0012DC  0E25               	movlw	37
  9642  0012DE  6F88               	movwf	fputc@c& (0+255),b
  9643  0012E0  C11C  F08A         	movff	vfpfcnvrt@fp,fputc@fp
  9644  0012E4  C11D  F08B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9645  0012E8  ECFA  F023         	call	_fputc	;wreg free
  9646  0012EC                     l7471:
  9647                           
  9648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9649  0012EC  0E00               	movlw	0
  9650  0012EE  0101               	movlb	1	; () banked
  9651  0012F0  6F1D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9652  0012F2  0E01               	movlw	1
  9653  0012F4  6F1C               	movwf	?_vfpfcnvrt& (0+255),b
  9654  0012F6  EFA3  F009         	goto	l879
  9655  0012FA                     l7475:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9659  0012FA  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9660  0012FE  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9661  001302  2ADE               	incf	postinc2,f,c
  9662  001304  0E00               	movlw	0
  9663  001306  22DD               	addwfc	postdec2,f,c
  9664  001308  EF06  F005         	goto	l7327
  9665  00130C                     l7481:
  9666                           
  9667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9668  00130C  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9669  001310  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9670  001314  CFDE FFF6          	movff	postinc2,tblptrl
  9671  001318  CFDD FFF7          	movff	postdec2,tblptrh
  9672  00131C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9673  00131C  6AF8               	clrf	tblptru,c
  9674  00131E                     	endif
  9675  00131E                     	if	0	;tblptru may be non-zero
  9676  00131E                     	endif
  9677  00131E  0008               	tblrd		*
  9678  001320  50F5               	movf	tablat,w,c
  9679  001322  0100               	movlb	0	; () banked
  9680  001324  6F88               	movwf	fputc@c& (0+255),b
  9681  001326  6B89               	clrf	(fputc@c+1)& (0+255),b
  9682  001328  C11C  F08A         	movff	vfpfcnvrt@fp,fputc@fp
  9683  00132C  C11D  F08B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9684  001330  ECFA  F023         	call	_fputc	;wreg free
  9685  001334                     
  9686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9687  001334  C11E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9688  001338  C11F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9689  00133C  2ADE               	incf	postinc2,f,c
  9690  00133E  0E00               	movlw	0
  9691  001340  22DD               	addwfc	postdec2,f,c
  9692  001342  EF76  F009         	goto	l7471
  9693  001346                     l879:
  9694  001346  0012               	return		;funcret
  9695  001348                     __end_of_vfpfcnvrt:
  9696                           	opt callstack 0
  9697                           
  9698 ;; *************** function _xtoa *****************
  9699 ;; Defined at:
  9700 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  9703 ;;		 -> vsnprintf@f(6), NULL(0), 
  9704 ;;  d               8   69[BANK0 ] unsigned long long 
  9705 ;;  x               1   77[BANK0 ] unsigned char 
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;  n               8   16[BANK1 ] unsigned long long 
  9708 ;;  c               2   26[BANK1 ] int 
  9709 ;;  i               2   24[BANK1 ] int 
  9710 ;;  w               2   14[BANK1 ] int 
  9711 ;;  p               2   12[BANK1 ] int 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  2   67[BANK0 ] int 
  9714 ;; Registers used:
  9715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9721 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9722 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9723 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9724 ;;      Totals:         0      11      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;Total ram usage:       39 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:   12
  9728 ;; This function calls:
  9729 ;;		_isalpha
  9730 ;;		_isupper
  9731 ;;		_pad
  9732 ;;		_toupper
  9733 ;; This function is called by:
  9734 ;;		_vfpfcnvrt
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text36
  9739  002A8E                     __ptext36:
  9740                           	opt callstack 0
  9741  002A8E                     _xtoa:
  9742                           	opt callstack 14
  9743  002A8E                     
  9744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  9745  002A8E  0100               	movlb	0	; () banked
  9746  002A90  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  9747  002A92  EF4D  F015         	goto	u7931
  9748  002A96  EF4F  F015         	goto	u7930
  9749  002A9A                     u7931:
  9750  002A9A  EF50  F015         	goto	l7077
  9751  002A9E                     u7930:
  9752  002A9E                     
  9753                           ; BSR set to: 0
  9754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  9755  002A9E  93CB               	bcf	_flags& (0+255),1,b
  9756  002AA0                     l7077:
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  9760  002AA0  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  9761  002AA2  EF5D  F015         	goto	u7940
  9762  002AA6  51CA               	movf	(_prec+1)& (0+255),w,b
  9763  002AA8  E106               	bnz	u7941
  9764  002AAA  05C9               	decf	_prec& (0+255),w,b
  9765  002AAC  B0D8               	btfsc	status,0,c
  9766  002AAE  EF5B  F015         	goto	u7941
  9767  002AB2  EF5D  F015         	goto	u7940
  9768  002AB6                     u7941:
  9769  002AB6  EF64  F015         	goto	l817
  9770  002ABA                     u7940:
  9771  002ABA                     
  9772                           ; BSR set to: 0
  9773  002ABA  0E00               	movlw	0
  9774  002ABC  0101               	movlb	1	; () banked
  9775  002ABE  6F0D               	movwf	(xtoa@p+1)& (0+255),b
  9776  002AC0  0E01               	movlw	1
  9777  002AC2  6F0C               	movwf	xtoa@p& (0+255),b
  9778  002AC4  EF68  F015         	goto	l819
  9779  002AC8                     l817:
  9780                           
  9781                           ; BSR set to: 0
  9782  002AC8  C0C9  F10C         	movff	_prec,xtoa@p
  9783  002ACC  C0CA  F10D         	movff	_prec+1,xtoa@p+1
  9784  002AD0                     l819:
  9785                           
  9786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  9787  002AD0  C0C7  F10E         	movff	_width,xtoa@w
  9788  002AD4  C0C8  F10F         	movff	_width+1,xtoa@w+1
  9789                           
  9790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  9791  002AD8  0100               	movlb	0	; () banked
  9792  002ADA  A9CB               	btfss	_flags& (0+255),4,b
  9793  002ADC  EF72  F015         	goto	u7951
  9794  002AE0  EF74  F015         	goto	u7950
  9795  002AE4                     u7951:
  9796  002AE4  EF79  F015         	goto	l7083
  9797  002AE8                     u7950:
  9798  002AE8                     
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  9801  002AE8  0101               	movlb	1	; () banked
  9802  002AEA  0EFE               	movlw	254
  9803  002AEC  270E               	addwf	xtoa@w& (0+255),f,b
  9804  002AEE  0EFF               	movlw	255
  9805  002AF0  230F               	addwfc	(xtoa@w+1)& (0+255),f,b
  9806  002AF2                     l7083:
  9807                           
  9808                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  9809  002AF2  C0A5  F110         	movff	xtoa@d,xtoa@n
  9810  002AF6  C0A6  F111         	movff	xtoa@d+1,xtoa@n+1
  9811  002AFA  C0A7  F112         	movff	xtoa@d+2,xtoa@n+2
  9812  002AFE  C0A8  F113         	movff	xtoa@d+3,xtoa@n+3
  9813  002B02  C0A9  F114         	movff	xtoa@d+4,xtoa@n+4
  9814  002B06  C0AA  F115         	movff	xtoa@d+5,xtoa@n+5
  9815  002B0A  C0AB  F116         	movff	xtoa@d+6,xtoa@n+6
  9816  002B0E  C0AC  F117         	movff	xtoa@d+7,xtoa@n+7
  9817  002B12                     
  9818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  9819  002B12  0E00               	movlw	0
  9820  002B14  0101               	movlb	1	; () banked
  9821  002B16  6F19               	movwf	(xtoa@i+1)& (0+255),b
  9822  002B18  0E1F               	movlw	31
  9823  002B1A  6F18               	movwf	xtoa@i& (0+255),b
  9824  002B1C                     
  9825                           ; BSR set to: 1
  9826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  9827  002B1C  0E00               	movlw	0
  9828  002B1E  6FA4               	movwf	(_dbuf+31)& (0+255),b
  9829                           
  9830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9831  002B20  EF49  F016         	goto	l7119
  9832  002B24                     l7089:
  9833                           
  9834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  9835  002B24  0101               	movlb	1	; () banked
  9836  002B26  0718               	decf	xtoa@i& (0+255),f,b
  9837  002B28  A0D8               	btfss	status,0,c
  9838  002B2A  0719               	decf	(xtoa@i+1)& (0+255),f,b
  9839  002B2C                     
  9840                           ; BSR set to: 1
  9841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  9842  002B2C  0E0F               	movlw	15
  9843  002B2E  1510               	andwf	xtoa@n& (0+255),w,b
  9844  002B30  6F1A               	movwf	xtoa@c& (0+255),b
  9845  002B32  6B1B               	clrf	(xtoa@c+1)& (0+255),b
  9846  002B34                     
  9847                           ; BSR set to: 1
  9848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  9849  002B34  BF1B               	btfsc	(xtoa@c+1)& (0+255),7,b
  9850  002B36  EFA6  F015         	goto	u7961
  9851  002B3A  511B               	movf	(xtoa@c+1)& (0+255),w,b
  9852  002B3C  E109               	bnz	u7960
  9853  002B3E  0E0A               	movlw	10
  9854  002B40  5D1A               	subwf	xtoa@c& (0+255),w,b
  9855  002B42  A0D8               	btfss	status,0,c
  9856  002B44  EFA6  F015         	goto	u7961
  9857  002B48  EFA8  F015         	goto	u7960
  9858  002B4C                     u7961:
  9859  002B4C  EFB0  F015         	goto	l7097
  9860  002B50                     u7960:
  9861  002B50                     
  9862                           ; BSR set to: 1
  9863  002B50  0E57               	movlw	87
  9864  002B52  251A               	addwf	xtoa@c& (0+255),w,b
  9865  002B54  6F1A               	movwf	xtoa@c& (0+255),b
  9866  002B56  0E00               	movlw	0
  9867  002B58  211B               	addwfc	(xtoa@c+1)& (0+255),w,b
  9868  002B5A  6F1B               	movwf	(xtoa@c+1)& (0+255),b
  9869  002B5C  EFB6  F015         	goto	l826
  9870  002B60                     l7097:
  9871                           
  9872                           ; BSR set to: 1
  9873  002B60  0E30               	movlw	48
  9874  002B62  251A               	addwf	xtoa@c& (0+255),w,b
  9875  002B64  6F1A               	movwf	xtoa@c& (0+255),b
  9876  002B66  0E00               	movlw	0
  9877  002B68  211B               	addwfc	(xtoa@c+1)& (0+255),w,b
  9878  002B6A  6F1B               	movwf	(xtoa@c+1)& (0+255),b
  9879  002B6C                     l826:
  9880                           
  9881                           ; BSR set to: 1
  9882  002B6C  0EBF               	movlw	191
  9883  002B6E  6F00               	movwf	??_xtoa& (0+255),b
  9884  002B70  0EFF               	movlw	255
  9885  002B72  6F01               	movwf	(??_xtoa+1)& (0+255),b
  9886  002B74  0100               	movlb	0	; () banked
  9887  002B76  51AD               	movf	xtoa@x& (0+255),w,b
  9888  002B78  0101               	movlb	1	; () banked
  9889  002B7A  6F02               	movwf	(??_xtoa+2)& (0+255),b
  9890  002B7C  6B03               	clrf	(??_xtoa+3)& (0+255),b
  9891  002B7E  5100               	movf	??_xtoa& (0+255),w,b
  9892  002B80  2702               	addwf	(??_xtoa+2)& (0+255),f,b
  9893  002B82  5101               	movf	(??_xtoa+1)& (0+255),w,b
  9894  002B84  2303               	addwfc	(??_xtoa+3)& (0+255),f,b
  9895  002B86  5103               	movf	(??_xtoa+3)& (0+255),w,b
  9896  002B88  E10A               	bnz	u7970
  9897  002B8A  0E1A               	movlw	26
  9898  002B8C  5D02               	subwf	(??_xtoa+2)& (0+255),w,b
  9899  002B8E  A0D8               	btfss	status,0,c
  9900  002B90  EFCC  F015         	goto	u7971
  9901  002B94  EFCF  F015         	goto	u7970
  9902  002B98                     u7971:
  9903  002B98  0E01               	movlw	1
  9904  002B9A  EFD0  F015         	goto	u7980
  9905  002B9E                     u7970:
  9906  002B9E  0E00               	movlw	0
  9907  002BA0                     u7980:
  9908  002BA0  6F08               	movwf	_xtoa$1822& (0+255),b
  9909  002BA2  6B09               	clrf	(_xtoa$1822+1)& (0+255),b
  9910  002BA4                     
  9911                           ; BSR set to: 1
  9912  002BA4  5108               	movf	_xtoa$1822& (0+255),w,b
  9913  002BA6  1109               	iorwf	(_xtoa$1822+1)& (0+255),w,b
  9914  002BA8  B4D8               	btfsc	status,2,c
  9915  002BAA  EFD9  F015         	goto	u7991
  9916  002BAE  EFDB  F015         	goto	u7990
  9917  002BB2                     u7991:
  9918  002BB2  EF0B  F016         	goto	l7111
  9919  002BB6                     u7990:
  9920  002BB6                     
  9921                           ; BSR set to: 1
  9922  002BB6  0E9F               	movlw	159
  9923  002BB8  6F00               	movwf	??_xtoa& (0+255),b
  9924  002BBA  0EFF               	movlw	255
  9925  002BBC  6F01               	movwf	(??_xtoa+1)& (0+255),b
  9926  002BBE  0E20               	movlw	32
  9927  002BC0  111A               	iorwf	xtoa@c& (0+255),w,b
  9928  002BC2  6F02               	movwf	(??_xtoa+2)& (0+255),b
  9929  002BC4  0E00               	movlw	0
  9930  002BC6  111B               	iorwf	(xtoa@c+1)& (0+255),w,b
  9931  002BC8  6F03               	movwf	(??_xtoa+3)& (0+255),b
  9932  002BCA  5100               	movf	??_xtoa& (0+255),w,b
  9933  002BCC  2702               	addwf	(??_xtoa+2)& (0+255),f,b
  9934  002BCE  5101               	movf	(??_xtoa+1)& (0+255),w,b
  9935  002BD0  2303               	addwfc	(??_xtoa+3)& (0+255),f,b
  9936  002BD2  5103               	movf	(??_xtoa+3)& (0+255),w,b
  9937  002BD4  E10A               	bnz	u8000
  9938  002BD6  0E1A               	movlw	26
  9939  002BD8  5D02               	subwf	(??_xtoa+2)& (0+255),w,b
  9940  002BDA  A0D8               	btfss	status,0,c
  9941  002BDC  EFF2  F015         	goto	u8001
  9942  002BE0  EFF5  F015         	goto	u8000
  9943  002BE4                     u8001:
  9944  002BE4  0E01               	movlw	1
  9945  002BE6  EFF6  F015         	goto	u8010
  9946  002BEA                     u8000:
  9947  002BEA  0E00               	movlw	0
  9948  002BEC                     u8010:
  9949  002BEC  6F0A               	movwf	_xtoa$1823& (0+255),b
  9950  002BEE  6B0B               	clrf	(_xtoa$1823+1)& (0+255),b
  9951  002BF0                     
  9952                           ; BSR set to: 1
  9953  002BF0  510A               	movf	_xtoa$1823& (0+255),w,b
  9954  002BF2  110B               	iorwf	(_xtoa$1823+1)& (0+255),w,b
  9955  002BF4  B4D8               	btfsc	status,2,c
  9956  002BF6  EFFF  F015         	goto	u8021
  9957  002BFA  EF01  F016         	goto	u8020
  9958  002BFE                     u8021:
  9959  002BFE  EF0B  F016         	goto	l7111
  9960  002C02                     u8020:
  9961  002C02                     
  9962                           ; BSR set to: 1
  9963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  9964  002C02  C11A  F08C         	movff	xtoa@c,toupper@c
  9965  002C06  C11B  F08D         	movff	xtoa@c+1,toupper@c+1
  9966  002C0A  ECFF  F025         	call	_toupper	;wreg free
  9967  002C0E  C08C  F11A         	movff	?_toupper,xtoa@c
  9968  002C12  C08D  F11B         	movff	?_toupper+1,xtoa@c+1
  9969  002C16                     l7111:
  9970                           
  9971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  9972  002C16  0E85               	movlw	low _dbuf
  9973  002C18  0101               	movlb	1	; () banked
  9974  002C1A  2518               	addwf	xtoa@i& (0+255),w,b
  9975  002C1C  6ED9               	movwf	fsr2l,c
  9976  002C1E  0E01               	movlw	high _dbuf
  9977  002C20  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
  9978  002C22  6EDA               	movwf	fsr2h,c
  9979  002C24  C11A  FFDF         	movff	xtoa@c,indf2
  9980  002C28                     
  9981                           ; BSR set to: 1
  9982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  9983  002C28  070C               	decf	xtoa@p& (0+255),f,b
  9984  002C2A  A0D8               	btfss	status,0,c
  9985  002C2C  070D               	decf	(xtoa@p+1)& (0+255),f,b
  9986  002C2E                     
  9987                           ; BSR set to: 1
  9988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  9989  002C2E  070E               	decf	xtoa@w& (0+255),f,b
  9990  002C30  A0D8               	btfss	status,0,c
  9991  002C32  070F               	decf	(xtoa@w+1)& (0+255),f,b
  9992  002C34                     
  9993                           ; BSR set to: 1
  9994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  9995  002C34  C110  F100         	movff	xtoa@n,??_xtoa
  9996  002C38  C111  F101         	movff	xtoa@n+1,??_xtoa+1
  9997  002C3C  C112  F102         	movff	xtoa@n+2,??_xtoa+2
  9998  002C40  C113  F103         	movff	xtoa@n+3,??_xtoa+3
  9999  002C44  C114  F104         	movff	xtoa@n+4,??_xtoa+4
 10000  002C48  C115  F105         	movff	xtoa@n+5,??_xtoa+5
 10001  002C4C  C116  F106         	movff	xtoa@n+6,??_xtoa+6
 10002  002C50  C117  F107         	movff	xtoa@n+7,??_xtoa+7
 10003  002C54  0E05               	movlw	5
 10004  002C56  EF36  F016         	goto	u8030
 10005  002C5A                     u8035:
 10006  002C5A  90D8               	bcf	status,0,c
 10007  002C5C  3307               	rrcf	(??_xtoa+7)& (0+255),f,b
 10008  002C5E  3306               	rrcf	(??_xtoa+6)& (0+255),f,b
 10009  002C60  3305               	rrcf	(??_xtoa+5)& (0+255),f,b
 10010  002C62  3304               	rrcf	(??_xtoa+4)& (0+255),f,b
 10011  002C64  3303               	rrcf	(??_xtoa+3)& (0+255),f,b
 10012  002C66  3302               	rrcf	(??_xtoa+2)& (0+255),f,b
 10013  002C68  3301               	rrcf	(??_xtoa+1)& (0+255),f,b
 10014  002C6A  3300               	rrcf	??_xtoa& (0+255),f,b
 10015  002C6C                     u8030:
 10016  002C6C  2EE8               	decfsz	wreg,f,c
 10017  002C6E  EF2D  F016         	goto	u8035
 10018  002C72  C100  F110         	movff	??_xtoa,xtoa@n
 10019  002C76  C101  F111         	movff	??_xtoa+1,xtoa@n+1
 10020  002C7A  C102  F112         	movff	??_xtoa+2,xtoa@n+2
 10021  002C7E  C103  F113         	movff	??_xtoa+3,xtoa@n+3
 10022  002C82  C104  F114         	movff	??_xtoa+4,xtoa@n+4
 10023  002C86  C105  F115         	movff	??_xtoa+5,xtoa@n+5
 10024  002C8A  C106  F116         	movff	??_xtoa+6,xtoa@n+6
 10025  002C8E  C107  F117         	movff	??_xtoa+7,xtoa@n+7
 10026  002C92                     l7119:
 10027                           
 10028                           ; BSR set to: 1
 10029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10030  002C92  BF19               	btfsc	(xtoa@i+1)& (0+255),7,b
 10031  002C94  EF55  F016         	goto	u8041
 10032  002C98  5119               	movf	(xtoa@i+1)& (0+255),w,b
 10033  002C9A  E109               	bnz	u8040
 10034  002C9C  0E02               	movlw	2
 10035  002C9E  5D18               	subwf	xtoa@i& (0+255),w,b
 10036  002CA0  A0D8               	btfss	status,0,c
 10037  002CA2  EF55  F016         	goto	u8041
 10038  002CA6  EF57  F016         	goto	u8040
 10039  002CAA                     u8041:
 10040  002CAA  EF88  F016         	goto	l840
 10041  002CAE                     u8040:
 10042  002CAE                     
 10043                           ; BSR set to: 1
 10044  002CAE  5110               	movf	xtoa@n& (0+255),w,b
 10045  002CB0  1111               	iorwf	(xtoa@n+1)& (0+255),w,b
 10046  002CB2  1112               	iorwf	(xtoa@n+2)& (0+255),w,b
 10047  002CB4  1113               	iorwf	(xtoa@n+3)& (0+255),w,b
 10048  002CB6  1114               	iorwf	(xtoa@n+4)& (0+255),w,b
 10049  002CB8  1115               	iorwf	(xtoa@n+5)& (0+255),w,b
 10050  002CBA  1116               	iorwf	(xtoa@n+6)& (0+255),w,b
 10051  002CBC  1117               	iorwf	(xtoa@n+7)& (0+255),w,b
 10052  002CBE  A4D8               	btfss	status,2,c
 10053  002CC0  EF64  F016         	goto	u8051
 10054  002CC4  EF66  F016         	goto	u8050
 10055  002CC8                     u8051:
 10056  002CC8  EF92  F015         	goto	l7089
 10057  002CCC                     u8050:
 10058  002CCC                     
 10059                           ; BSR set to: 1
 10060  002CCC  BF0D               	btfsc	(xtoa@p+1)& (0+255),7,b
 10061  002CCE  EF73  F016         	goto	u8060
 10062  002CD2  510D               	movf	(xtoa@p+1)& (0+255),w,b
 10063  002CD4  E106               	bnz	u8061
 10064  002CD6  050C               	decf	xtoa@p& (0+255),w,b
 10065  002CD8  B0D8               	btfsc	status,0,c
 10066  002CDA  EF71  F016         	goto	u8061
 10067  002CDE  EF73  F016         	goto	u8060
 10068  002CE2                     u8061:
 10069  002CE2  EF92  F015         	goto	l7089
 10070  002CE6                     u8060:
 10071  002CE6                     
 10072                           ; BSR set to: 1
 10073  002CE6  BF0F               	btfsc	(xtoa@w+1)& (0+255),7,b
 10074  002CE8  EF7E  F016         	goto	u8071
 10075  002CEC  510F               	movf	(xtoa@w+1)& (0+255),w,b
 10076  002CEE  E108               	bnz	u8070
 10077  002CF0  050E               	decf	xtoa@w& (0+255),w,b
 10078  002CF2  A0D8               	btfss	status,0,c
 10079  002CF4  EF7E  F016         	goto	u8071
 10080  002CF8  EF80  F016         	goto	u8070
 10081  002CFC                     u8071:
 10082  002CFC  EF88  F016         	goto	l840
 10083  002D00                     u8070:
 10084  002D00                     
 10085                           ; BSR set to: 1
 10086  002D00  0100               	movlb	0	; () banked
 10087  002D02  B3CB               	btfsc	_flags& (0+255),1,b
 10088  002D04  EF86  F016         	goto	u8081
 10089  002D08  EF88  F016         	goto	u8080
 10090  002D0C                     u8081:
 10091  002D0C  EF92  F015         	goto	l7089
 10092  002D10                     u8080:
 10093  002D10                     l840:
 10094                           
 10095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 10096  002D10  0100               	movlb	0	; () banked
 10097  002D12  A9CB               	btfss	_flags& (0+255),4,b
 10098  002D14  EF8E  F016         	goto	u8091
 10099  002D18  EF90  F016         	goto	u8090
 10100  002D1C                     u8091:
 10101  002D1C  EFA7  F016         	goto	l7135
 10102  002D20                     u8090:
 10103  002D20                     
 10104                           ; BSR set to: 0
 10105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 10106  002D20  0101               	movlb	1	; () banked
 10107  002D22  0718               	decf	xtoa@i& (0+255),f,b
 10108  002D24  A0D8               	btfss	status,0,c
 10109  002D26  0719               	decf	(xtoa@i+1)& (0+255),f,b
 10110  002D28                     
 10111                           ; BSR set to: 1
 10112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 10113  002D28  0E85               	movlw	low _dbuf
 10114  002D2A  2518               	addwf	xtoa@i& (0+255),w,b
 10115  002D2C  6ED9               	movwf	fsr2l,c
 10116  002D2E  0E01               	movlw	high _dbuf
 10117  002D30  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
 10118  002D32  6EDA               	movwf	fsr2h,c
 10119  002D34  C0AD  FFDF         	movff	xtoa@x,indf2
 10120  002D38                     
 10121                           ; BSR set to: 1
 10122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 10123  002D38  0718               	decf	xtoa@i& (0+255),f,b
 10124  002D3A  A0D8               	btfss	status,0,c
 10125  002D3C  0719               	decf	(xtoa@i+1)& (0+255),f,b
 10126                           
 10127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 10128  002D3E  0E85               	movlw	low _dbuf
 10129  002D40  2518               	addwf	xtoa@i& (0+255),w,b
 10130  002D42  6ED9               	movwf	fsr2l,c
 10131  002D44  0E01               	movlw	high _dbuf
 10132  002D46  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
 10133  002D48  6EDA               	movwf	fsr2h,c
 10134  002D4A  0E30               	movlw	48
 10135  002D4C  6EDF               	movwf	indf2,c
 10136  002D4E                     l7135:
 10137                           
 10138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 10139  002D4E  C0A3  F098         	movff	xtoa@fp,pad@fp
 10140  002D52  C0A4  F099         	movff	xtoa@fp+1,pad@fp+1
 10141  002D56  0E85               	movlw	low _dbuf
 10142  002D58  0101               	movlb	1	; () banked
 10143  002D5A  2518               	addwf	xtoa@i& (0+255),w,b
 10144  002D5C  0100               	movlb	0	; () banked
 10145  002D5E  6F9A               	movwf	pad@buf& (0+255),b
 10146  002D60  0E01               	movlw	high _dbuf
 10147  002D62  0101               	movlb	1	; () banked
 10148  002D64  2119               	addwfc	(xtoa@i+1)& (0+255),w,b
 10149  002D66  0100               	movlb	0	; () banked
 10150  002D68  6F9B               	movwf	(pad@buf+1)& (0+255),b
 10151  002D6A  C10E  F09C         	movff	xtoa@w,pad@p
 10152  002D6E  C10F  F09D         	movff	xtoa@w+1,pad@p+1
 10153  002D72  EC60  F024         	call	_pad	;wreg free
 10154  002D76  C098  F0A3         	movff	?_pad,?_xtoa
 10155  002D7A  C099  F0A4         	movff	?_pad+1,?_xtoa+1
 10156  002D7E  0012               	return		;funcret
 10157  002D80                     __end_of_xtoa:
 10158                           	opt callstack 0
 10159                           
 10160 ;; *************** function _toupper *****************
 10161 ;; Defined at:
 10162 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  c               2   44[BANK0 ] int 
 10165 ;; Auto vars:     Size  Location     Type
 10166 ;;		None
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  2   44[BANK0 ] int 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10178 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10179 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10180 ;;Total ram usage:        8 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    8
 10183 ;; This function calls:
 10184 ;;		_islower
 10185 ;; This function is called by:
 10186 ;;		_xtoa
 10187 ;; This function uses a non-reentrant model
 10188 ;;
 10189                           
 10190                           	psect	text37
 10191  004BFE                     __ptext37:
 10192                           	opt callstack 0
 10193  004BFE                     _toupper:
 10194                           	opt callstack 17
 10195  004BFE  0E9F               	movlw	159
 10196  004C00  0100               	movlb	0	; () banked
 10197  004C02  6F8E               	movwf	??_toupper& (0+255),b
 10198  004C04  0EFF               	movlw	255
 10199  004C06  6F8F               	movwf	(??_toupper+1)& (0+255),b
 10200  004C08  C08C  F090         	movff	toupper@c,??_toupper+2
 10201  004C0C  C08D  F091         	movff	toupper@c+1,??_toupper+3
 10202  004C10  518E               	movf	??_toupper& (0+255),w,b
 10203  004C12  2790               	addwf	(??_toupper+2)& (0+255),f,b
 10204  004C14  518F               	movf	(??_toupper+1)& (0+255),w,b
 10205  004C16  2391               	addwfc	(??_toupper+3)& (0+255),f,b
 10206  004C18  5191               	movf	(??_toupper+3)& (0+255),w,b
 10207  004C1A  E10A               	bnz	u7270
 10208  004C1C  0E1A               	movlw	26
 10209  004C1E  5D90               	subwf	(??_toupper+2)& (0+255),w,b
 10210  004C20  A0D8               	btfss	status,0,c
 10211  004C22  EF15  F026         	goto	u7271
 10212  004C26  EF18  F026         	goto	u7270
 10213  004C2A                     u7271:
 10214  004C2A  0E01               	movlw	1
 10215  004C2C  EF19  F026         	goto	u7280
 10216  004C30                     u7270:
 10217  004C30  0E00               	movlw	0
 10218  004C32                     u7280:
 10219  004C32  6F92               	movwf	_toupper$2513& (0+255),b
 10220  004C34  6B93               	clrf	(_toupper$2513+1)& (0+255),b
 10221  004C36                     
 10222                           ; BSR set to: 0
 10223  004C36  5192               	movf	_toupper$2513& (0+255),w,b
 10224  004C38  1193               	iorwf	(_toupper$2513+1)& (0+255),w,b
 10225  004C3A  B4D8               	btfsc	status,2,c
 10226  004C3C  EF22  F026         	goto	u7291
 10227  004C40  EF24  F026         	goto	u7290
 10228  004C44                     u7291:
 10229  004C44  EF2A  F026         	goto	l1716
 10230  004C48                     u7290:
 10231  004C48                     
 10232                           ; BSR set to: 0
 10233  004C48  0E5F               	movlw	95
 10234  004C4A  158C               	andwf	toupper@c& (0+255),w,b
 10235  004C4C  6F8C               	movwf	?_toupper& (0+255),b
 10236  004C4E  6B8D               	clrf	(?_toupper+1)& (0+255),b
 10237  004C50  EF2E  F026         	goto	l1721
 10238  004C54                     l1716:
 10239                           
 10240                           ; BSR set to: 0
 10241  004C54  C08C  F08C         	movff	toupper@c,?_toupper
 10242  004C58  C08D  F08D         	movff	toupper@c+1,?_toupper+1
 10243  004C5C                     l1721:
 10244                           
 10245                           ; BSR set to: 0
 10246  004C5C  0012               	return		;funcret
 10247  004C5E                     __end_of_toupper:
 10248                           	opt callstack 0
 10249                           
 10250 ;; *************** function _islower *****************
 10251 ;; Defined at:
 10252 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;  c               2   38[BANK0 ] int 
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;		None
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  2   38[BANK0 ] int 
 10259 ;; Registers used:
 10260 ;;		wreg, status,2, status,0
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10266 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10268 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10269 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10270 ;;Total ram usage:        6 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:    7
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_toupper
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text38
 10281  004FCE                     __ptext38:
 10282                           	opt callstack 0
 10283  004FCE                     _islower:
 10284                           	opt callstack 17
 10285  004FCE  0E9F               	movlw	159
 10286  004FD0  0100               	movlb	0	; () banked
 10287  004FD2  6F88               	movwf	??_islower& (0+255),b
 10288  004FD4  0EFF               	movlw	255
 10289  004FD6  6F89               	movwf	(??_islower+1)& (0+255),b
 10290  004FD8  C086  F08A         	movff	islower@c,??_islower+2
 10291  004FDC  C087  F08B         	movff	islower@c+1,??_islower+3
 10292  004FE0  5188               	movf	??_islower& (0+255),w,b
 10293  004FE2  278A               	addwf	(??_islower+2)& (0+255),f,b
 10294  004FE4  5189               	movf	(??_islower+1)& (0+255),w,b
 10295  004FE6  238B               	addwfc	(??_islower+3)& (0+255),f,b
 10296  004FE8  518B               	movf	(??_islower+3)& (0+255),w,b
 10297  004FEA  E10A               	bnz	u7150
 10298  004FEC  0E1A               	movlw	26
 10299  004FEE  5D8A               	subwf	(??_islower+2)& (0+255),w,b
 10300  004FF0  A0D8               	btfss	status,0,c
 10301  004FF2  EFFD  F027         	goto	u7151
 10302  004FF6  EF00  F028         	goto	u7150
 10303  004FFA                     u7151:
 10304  004FFA  0E01               	movlw	1
 10305  004FFC  EF01  F028         	goto	u7160
 10306  005000                     u7150:
 10307  005000  0E00               	movlw	0
 10308  005002                     u7160:
 10309  005002  6F86               	movwf	?_islower& (0+255),b
 10310  005004  6B87               	clrf	(?_islower+1)& (0+255),b
 10311  005006                     
 10312                           ; BSR set to: 0
 10313  005006  0012               	return		;funcret
 10314  005008                     __end_of_islower:
 10315                           	opt callstack 0
 10316                           
 10317 ;; *************** function _isupper *****************
 10318 ;; Defined at:
 10319 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  c               2   38[BANK0 ] int 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  2   38[BANK0 ] int 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2, status,0
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10337 ;;Total ram usage:        6 bytes
 10338 ;; Hardware stack levels used:    1
 10339 ;; Hardware stack levels required when called:    7
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_xtoa
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text39
 10348  005008                     __ptext39:
 10349                           	opt callstack 0
 10350  005008                     _isupper:
 10351                           	opt callstack 18
 10352  005008  0EBF               	movlw	191
 10353  00500A  0100               	movlb	0	; () banked
 10354  00500C  6F88               	movwf	??_isupper& (0+255),b
 10355  00500E  0EFF               	movlw	255
 10356  005010  6F89               	movwf	(??_isupper+1)& (0+255),b
 10357  005012  C086  F08A         	movff	isupper@c,??_isupper+2
 10358  005016  C087  F08B         	movff	isupper@c+1,??_isupper+3
 10359  00501A  5188               	movf	??_isupper& (0+255),w,b
 10360  00501C  278A               	addwf	(??_isupper+2)& (0+255),f,b
 10361  00501E  5189               	movf	(??_isupper+1)& (0+255),w,b
 10362  005020  238B               	addwfc	(??_isupper+3)& (0+255),f,b
 10363  005022  518B               	movf	(??_isupper+3)& (0+255),w,b
 10364  005024  E10A               	bnz	u7230
 10365  005026  0E1A               	movlw	26
 10366  005028  5D8A               	subwf	(??_isupper+2)& (0+255),w,b
 10367  00502A  A0D8               	btfss	status,0,c
 10368  00502C  EF1A  F028         	goto	u7231
 10369  005030  EF1D  F028         	goto	u7230
 10370  005034                     u7231:
 10371  005034  0E01               	movlw	1
 10372  005036  EF1E  F028         	goto	u7240
 10373  00503A                     u7230:
 10374  00503A  0E00               	movlw	0
 10375  00503C                     u7240:
 10376  00503C  6F86               	movwf	?_isupper& (0+255),b
 10377  00503E  6B87               	clrf	(?_isupper+1)& (0+255),b
 10378  005040                     
 10379                           ; BSR set to: 0
 10380  005040  0012               	return		;funcret
 10381  005042                     __end_of_isupper:
 10382                           	opt callstack 0
 10383                           
 10384 ;; *************** function _isalpha *****************
 10385 ;; Defined at:
 10386 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;  c               2   38[BANK0 ] int 
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;		None
 10391 ;; Return value:  Size  Location     Type
 10392 ;;                  2   38[BANK0 ] int 
 10393 ;; Registers used:
 10394 ;;		wreg, status,2, status,0
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10403 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10404 ;;Total ram usage:        6 bytes
 10405 ;; Hardware stack levels used:    1
 10406 ;; Hardware stack levels required when called:    7
 10407 ;; This function calls:
 10408 ;;		Nothing
 10409 ;; This function is called by:
 10410 ;;		_xtoa
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           	psect	text40
 10415  004F90                     __ptext40:
 10416                           	opt callstack 0
 10417  004F90                     _isalpha:
 10418                           	opt callstack 18
 10419  004F90  0E9F               	movlw	159
 10420  004F92  0100               	movlb	0	; () banked
 10421  004F94  6F88               	movwf	??_isalpha& (0+255),b
 10422  004F96  0EFF               	movlw	255
 10423  004F98  6F89               	movwf	(??_isalpha+1)& (0+255),b
 10424  004F9A  0E20               	movlw	32
 10425  004F9C  1186               	iorwf	isalpha@c& (0+255),w,b
 10426  004F9E  6F8A               	movwf	(??_isalpha+2)& (0+255),b
 10427  004FA0  0E00               	movlw	0
 10428  004FA2  1187               	iorwf	(isalpha@c+1)& (0+255),w,b
 10429  004FA4  6F8B               	movwf	(??_isalpha+3)& (0+255),b
 10430  004FA6  5188               	movf	??_isalpha& (0+255),w,b
 10431  004FA8  278A               	addwf	(??_isalpha+2)& (0+255),f,b
 10432  004FAA  5189               	movf	(??_isalpha+1)& (0+255),w,b
 10433  004FAC  238B               	addwfc	(??_isalpha+3)& (0+255),f,b
 10434  004FAE  518B               	movf	(??_isalpha+3)& (0+255),w,b
 10435  004FB0  E10A               	bnz	u7250
 10436  004FB2  0E1A               	movlw	26
 10437  004FB4  5D8A               	subwf	(??_isalpha+2)& (0+255),w,b
 10438  004FB6  A0D8               	btfss	status,0,c
 10439  004FB8  EFE0  F027         	goto	u7251
 10440  004FBC  EFE3  F027         	goto	u7250
 10441  004FC0                     u7251:
 10442  004FC0  0E01               	movlw	1
 10443  004FC2  EFE4  F027         	goto	u7260
 10444  004FC6                     u7250:
 10445  004FC6  0E00               	movlw	0
 10446  004FC8                     u7260:
 10447  004FC8  6F86               	movwf	?_isalpha& (0+255),b
 10448  004FCA  6B87               	clrf	(?_isalpha+1)& (0+255),b
 10449  004FCC                     
 10450                           ; BSR set to: 0
 10451  004FCC  0012               	return		;funcret
 10452  004FCE                     __end_of_isalpha:
 10453                           	opt callstack 0
 10454                           
 10455 ;; *************** function _utoa *****************
 10456 ;; Defined at:
 10457 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10458 ;; Parameters:    Size  Location     Type
 10459 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
 10460 ;;		 -> vsnprintf@f(6), NULL(0), 
 10461 ;;  d               8   69[BANK0 ] unsigned long long 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  n               8    4[BANK1 ] unsigned long long 
 10464 ;;  i               2   12[BANK1 ] int 
 10465 ;;  w               2    2[BANK1 ] int 
 10466 ;;  p               2    0[BANK1 ] int 
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  2   67[BANK0 ] int 
 10469 ;; Registers used:
 10470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10476 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10477 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10478 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10479 ;;      Totals:         0      18      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10480 ;;Total ram usage:       32 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:   12
 10483 ;; This function calls:
 10484 ;;		___lodiv
 10485 ;;		___lomod
 10486 ;;		_pad
 10487 ;; This function is called by:
 10488 ;;		_vfpfcnvrt
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text41
 10493  003022                     __ptext41:
 10494                           	opt callstack 0
 10495  003022                     _utoa:
 10496                           	opt callstack 14
 10497  003022                     
 10498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 10499  003022  0100               	movlb	0	; () banked
 10500  003024  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 10501  003026  EF17  F018         	goto	u7861
 10502  00302A  EF19  F018         	goto	u7860
 10503  00302E                     u7861:
 10504  00302E  EF1A  F018         	goto	l7041
 10505  003032                     u7860:
 10506  003032                     
 10507                           ; BSR set to: 0
 10508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 10509  003032  93CB               	bcf	_flags& (0+255),1,b
 10510  003034                     l7041:
 10511                           
 10512                           ; BSR set to: 0
 10513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 10514  003034  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 10515  003036  EF27  F018         	goto	u7870
 10516  00303A  51CA               	movf	(_prec+1)& (0+255),w,b
 10517  00303C  E106               	bnz	u7871
 10518  00303E  05C9               	decf	_prec& (0+255),w,b
 10519  003040  B0D8               	btfsc	status,0,c
 10520  003042  EF25  F018         	goto	u7871
 10521  003046  EF27  F018         	goto	u7870
 10522  00304A                     u7871:
 10523  00304A  EF2E  F018         	goto	l802
 10524  00304E                     u7870:
 10525  00304E                     
 10526                           ; BSR set to: 0
 10527  00304E  0E00               	movlw	0
 10528  003050  0101               	movlb	1	; () banked
 10529  003052  6F01               	movwf	(utoa@p+1)& (0+255),b
 10530  003054  0E01               	movlw	1
 10531  003056  6F00               	movwf	utoa@p& (0+255),b
 10532  003058  EF32  F018         	goto	l804
 10533  00305C                     l802:
 10534                           
 10535                           ; BSR set to: 0
 10536  00305C  C0C9  F100         	movff	_prec,utoa@p
 10537  003060  C0CA  F101         	movff	_prec+1,utoa@p+1
 10538  003064                     l804:
 10539                           
 10540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 10541  003064  C0C7  F102         	movff	_width,utoa@w
 10542  003068  C0C8  F103         	movff	_width+1,utoa@w+1
 10543                           
 10544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 10545  00306C  C0A5  F104         	movff	utoa@d,utoa@n
 10546  003070  C0A6  F105         	movff	utoa@d+1,utoa@n+1
 10547  003074  C0A7  F106         	movff	utoa@d+2,utoa@n+2
 10548  003078  C0A8  F107         	movff	utoa@d+3,utoa@n+3
 10549  00307C  C0A9  F108         	movff	utoa@d+4,utoa@n+4
 10550  003080  C0AA  F109         	movff	utoa@d+5,utoa@n+5
 10551  003084  C0AB  F10A         	movff	utoa@d+6,utoa@n+6
 10552  003088  C0AC  F10B         	movff	utoa@d+7,utoa@n+7
 10553  00308C                     
 10554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 10555  00308C  0E00               	movlw	0
 10556  00308E  0101               	movlb	1	; () banked
 10557  003090  6F0D               	movwf	(utoa@i+1)& (0+255),b
 10558  003092  0E1F               	movlw	31
 10559  003094  6F0C               	movwf	utoa@i& (0+255),b
 10560  003096                     
 10561                           ; BSR set to: 1
 10562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 10563  003096  0E00               	movlw	0
 10564  003098  6FA4               	movwf	(_dbuf+31)& (0+255),b
 10565                           
 10566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10567  00309A  EFCA  F018         	goto	l7059
 10568  00309E                     l7049:
 10569                           
 10570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 10571  00309E  0101               	movlb	1	; () banked
 10572  0030A0  070C               	decf	utoa@i& (0+255),f,b
 10573  0030A2  A0D8               	btfss	status,0,c
 10574  0030A4  070D               	decf	(utoa@i+1)& (0+255),f,b
 10575  0030A6                     
 10576                           ; BSR set to: 1
 10577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 10578  0030A6  0E85               	movlw	low _dbuf
 10579  0030A8  250C               	addwf	utoa@i& (0+255),w,b
 10580  0030AA  6ED9               	movwf	fsr2l,c
 10581  0030AC  0E01               	movlw	high _dbuf
 10582  0030AE  210D               	addwfc	(utoa@i+1)& (0+255),w,b
 10583  0030B0  6EDA               	movwf	fsr2h,c
 10584  0030B2  C104  F086         	movff	utoa@n,___lomod@dividend
 10585  0030B6  C105  F087         	movff	utoa@n+1,___lomod@dividend+1
 10586  0030BA  C106  F088         	movff	utoa@n+2,___lomod@dividend+2
 10587  0030BE  C107  F089         	movff	utoa@n+3,___lomod@dividend+3
 10588  0030C2  C108  F08A         	movff	utoa@n+4,___lomod@dividend+4
 10589  0030C6  C109  F08B         	movff	utoa@n+5,___lomod@dividend+5
 10590  0030CA  C10A  F08C         	movff	utoa@n+6,___lomod@dividend+6
 10591  0030CE  C10B  F08D         	movff	utoa@n+7,___lomod@dividend+7
 10592  0030D2  0E0A               	movlw	10
 10593  0030D4  0100               	movlb	0	; () banked
 10594  0030D6  6F8E               	movwf	___lomod@divisor& (0+255),b
 10595  0030D8  0E00               	movlw	0
 10596  0030DA  6F8F               	movwf	(___lomod@divisor+1)& (0+255),b
 10597  0030DC  0E00               	movlw	0
 10598  0030DE  6F90               	movwf	(___lomod@divisor+2)& (0+255),b
 10599  0030E0  0E00               	movlw	0
 10600  0030E2  6F91               	movwf	(___lomod@divisor+3)& (0+255),b
 10601  0030E4  0E00               	movlw	0
 10602  0030E6  6F92               	movwf	(___lomod@divisor+4)& (0+255),b
 10603  0030E8  0E00               	movlw	0
 10604  0030EA  6F93               	movwf	(___lomod@divisor+5)& (0+255),b
 10605  0030EC  0E00               	movlw	0
 10606  0030EE  6F94               	movwf	(___lomod@divisor+6)& (0+255),b
 10607  0030F0  0E00               	movlw	0
 10608  0030F2  6F95               	movwf	(___lomod@divisor+7)& (0+255),b
 10609  0030F4  EC91  F023         	call	___lomod	;wreg free
 10610  0030F8  C086  F0AD         	movff	?___lomod,??_utoa
 10611  0030FC  C087  F0AE         	movff	?___lomod+1,??_utoa+1
 10612  003100  C088  F0AF         	movff	?___lomod+2,??_utoa+2
 10613  003104  C089  F0B0         	movff	?___lomod+3,??_utoa+3
 10614  003108  C08A  F0B1         	movff	?___lomod+4,??_utoa+4
 10615  00310C  C08B  F0B2         	movff	?___lomod+5,??_utoa+5
 10616  003110  C08C  F0B3         	movff	?___lomod+6,??_utoa+6
 10617  003114  C08D  F0B4         	movff	?___lomod+7,??_utoa+7
 10618  003118  0100               	movlb	0	; () banked
 10619  00311A  51AD               	movf	??_utoa& (0+255),w,b
 10620  00311C  0F30               	addlw	48
 10621  00311E  6EDF               	movwf	indf2,c
 10622  003120                     
 10623                           ; BSR set to: 0
 10624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 10625  003120  0101               	movlb	1	; () banked
 10626  003122  0700               	decf	utoa@p& (0+255),f,b
 10627  003124  A0D8               	btfss	status,0,c
 10628  003126  0701               	decf	(utoa@p+1)& (0+255),f,b
 10629  003128                     
 10630                           ; BSR set to: 1
 10631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 10632  003128  0702               	decf	utoa@w& (0+255),f,b
 10633  00312A  A0D8               	btfss	status,0,c
 10634  00312C  0703               	decf	(utoa@w+1)& (0+255),f,b
 10635  00312E                     
 10636                           ; BSR set to: 1
 10637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 10638  00312E  C104  F086         	movff	utoa@n,___lodiv@dividend
 10639  003132  C105  F087         	movff	utoa@n+1,___lodiv@dividend+1
 10640  003136  C106  F088         	movff	utoa@n+2,___lodiv@dividend+2
 10641  00313A  C107  F089         	movff	utoa@n+3,___lodiv@dividend+3
 10642  00313E  C108  F08A         	movff	utoa@n+4,___lodiv@dividend+4
 10643  003142  C109  F08B         	movff	utoa@n+5,___lodiv@dividend+5
 10644  003146  C10A  F08C         	movff	utoa@n+6,___lodiv@dividend+6
 10645  00314A  C10B  F08D         	movff	utoa@n+7,___lodiv@dividend+7
 10646  00314E  0E0A               	movlw	10
 10647  003150  0100               	movlb	0	; () banked
 10648  003152  6F8E               	movwf	___lodiv@divisor& (0+255),b
 10649  003154  0E00               	movlw	0
 10650  003156  6F8F               	movwf	(___lodiv@divisor+1)& (0+255),b
 10651  003158  0E00               	movlw	0
 10652  00315A  6F90               	movwf	(___lodiv@divisor+2)& (0+255),b
 10653  00315C  0E00               	movlw	0
 10654  00315E  6F91               	movwf	(___lodiv@divisor+3)& (0+255),b
 10655  003160  0E00               	movlw	0
 10656  003162  6F92               	movwf	(___lodiv@divisor+4)& (0+255),b
 10657  003164  0E00               	movlw	0
 10658  003166  6F93               	movwf	(___lodiv@divisor+5)& (0+255),b
 10659  003168  0E00               	movlw	0
 10660  00316A  6F94               	movwf	(___lodiv@divisor+6)& (0+255),b
 10661  00316C  0E00               	movlw	0
 10662  00316E  6F95               	movwf	(___lodiv@divisor+7)& (0+255),b
 10663  003170  ECB9  F021         	call	___lodiv	;wreg free
 10664  003174  C086  F104         	movff	?___lodiv,utoa@n
 10665  003178  C087  F105         	movff	?___lodiv+1,utoa@n+1
 10666  00317C  C088  F106         	movff	?___lodiv+2,utoa@n+2
 10667  003180  C089  F107         	movff	?___lodiv+3,utoa@n+3
 10668  003184  C08A  F108         	movff	?___lodiv+4,utoa@n+4
 10669  003188  C08B  F109         	movff	?___lodiv+5,utoa@n+5
 10670  00318C  C08C  F10A         	movff	?___lodiv+6,utoa@n+6
 10671  003190  C08D  F10B         	movff	?___lodiv+7,utoa@n+7
 10672  003194                     l7059:
 10673                           
 10674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10675  003194  0101               	movlb	1	; () banked
 10676  003196  510C               	movf	utoa@i& (0+255),w,b
 10677  003198  110D               	iorwf	(utoa@i+1)& (0+255),w,b
 10678  00319A  B4D8               	btfsc	status,2,c
 10679  00319C  EFD2  F018         	goto	u7881
 10680  0031A0  EFD4  F018         	goto	u7880
 10681  0031A4                     u7881:
 10682  0031A4  EF05  F019         	goto	l7069
 10683  0031A8                     u7880:
 10684  0031A8                     
 10685                           ; BSR set to: 1
 10686  0031A8  5104               	movf	utoa@n& (0+255),w,b
 10687  0031AA  1105               	iorwf	(utoa@n+1)& (0+255),w,b
 10688  0031AC  1106               	iorwf	(utoa@n+2)& (0+255),w,b
 10689  0031AE  1107               	iorwf	(utoa@n+3)& (0+255),w,b
 10690  0031B0  1108               	iorwf	(utoa@n+4)& (0+255),w,b
 10691  0031B2  1109               	iorwf	(utoa@n+5)& (0+255),w,b
 10692  0031B4  110A               	iorwf	(utoa@n+6)& (0+255),w,b
 10693  0031B6  110B               	iorwf	(utoa@n+7)& (0+255),w,b
 10694  0031B8  A4D8               	btfss	status,2,c
 10695  0031BA  EFE1  F018         	goto	u7891
 10696  0031BE  EFE3  F018         	goto	u7890
 10697  0031C2                     u7891:
 10698  0031C2  EF4F  F018         	goto	l7049
 10699  0031C6                     u7890:
 10700  0031C6                     
 10701                           ; BSR set to: 1
 10702  0031C6  BF01               	btfsc	(utoa@p+1)& (0+255),7,b
 10703  0031C8  EFF0  F018         	goto	u7900
 10704  0031CC  5101               	movf	(utoa@p+1)& (0+255),w,b
 10705  0031CE  E106               	bnz	u7901
 10706  0031D0  0500               	decf	utoa@p& (0+255),w,b
 10707  0031D2  B0D8               	btfsc	status,0,c
 10708  0031D4  EFEE  F018         	goto	u7901
 10709  0031D8  EFF0  F018         	goto	u7900
 10710  0031DC                     u7901:
 10711  0031DC  EF4F  F018         	goto	l7049
 10712  0031E0                     u7900:
 10713  0031E0                     
 10714                           ; BSR set to: 1
 10715  0031E0  BF03               	btfsc	(utoa@w+1)& (0+255),7,b
 10716  0031E2  EFFB  F018         	goto	u7911
 10717  0031E6  5103               	movf	(utoa@w+1)& (0+255),w,b
 10718  0031E8  E108               	bnz	u7910
 10719  0031EA  0502               	decf	utoa@w& (0+255),w,b
 10720  0031EC  A0D8               	btfss	status,0,c
 10721  0031EE  EFFB  F018         	goto	u7911
 10722  0031F2  EFFD  F018         	goto	u7910
 10723  0031F6                     u7911:
 10724  0031F6  EF05  F019         	goto	l7069
 10725  0031FA                     u7910:
 10726  0031FA                     
 10727                           ; BSR set to: 1
 10728  0031FA  0100               	movlb	0	; () banked
 10729  0031FC  B3CB               	btfsc	_flags& (0+255),1,b
 10730  0031FE  EF03  F019         	goto	u7921
 10731  003202  EF05  F019         	goto	u7920
 10732  003206                     u7921:
 10733  003206  EF4F  F018         	goto	l7049
 10734  00320A                     u7920:
 10735  00320A                     l7069:
 10736                           
 10737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 10738  00320A  C0A3  F098         	movff	utoa@fp,pad@fp
 10739  00320E  C0A4  F099         	movff	utoa@fp+1,pad@fp+1
 10740  003212  0E85               	movlw	low _dbuf
 10741  003214  0101               	movlb	1	; () banked
 10742  003216  250C               	addwf	utoa@i& (0+255),w,b
 10743  003218  0100               	movlb	0	; () banked
 10744  00321A  6F9A               	movwf	pad@buf& (0+255),b
 10745  00321C  0E01               	movlw	high _dbuf
 10746  00321E  0101               	movlb	1	; () banked
 10747  003220  210D               	addwfc	(utoa@i+1)& (0+255),w,b
 10748  003222  0100               	movlb	0	; () banked
 10749  003224  6F9B               	movwf	(pad@buf+1)& (0+255),b
 10750  003226  C102  F09C         	movff	utoa@w,pad@p
 10751  00322A  C103  F09D         	movff	utoa@w+1,pad@p+1
 10752  00322E  EC60  F024         	call	_pad	;wreg free
 10753  003232  C098  F0A3         	movff	?_pad,?_utoa
 10754  003236  C099  F0A4         	movff	?_pad+1,?_utoa+1
 10755  00323A  0012               	return		;funcret
 10756  00323C                     __end_of_utoa:
 10757                           	opt callstack 0
 10758                           
 10759 ;; *************** function ___lomod *****************
 10760 ;; Defined at:
 10761 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;  dividend        8   38[BANK0 ] unsigned long long 
 10764 ;;  divisor         8   46[BANK0 ] unsigned long long 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  counter         1   54[BANK0 ] unsigned char 
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  8   38[BANK0 ] unsigned long long 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10776 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10779 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10780 ;;Total ram usage:       17 bytes
 10781 ;; Hardware stack levels used:    1
 10782 ;; Hardware stack levels required when called:    7
 10783 ;; This function calls:
 10784 ;;		Nothing
 10785 ;; This function is called by:
 10786 ;;		_utoa
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           	psect	text42
 10791  004722                     __ptext42:
 10792                           	opt callstack 0
 10793  004722                     ___lomod:
 10794                           	opt callstack 18
 10795  004722  0100               	movlb	0	; () banked
 10796  004724  518E               	movf	___lomod@divisor& (0+255),w,b
 10797  004726  118F               	iorwf	(___lomod@divisor+1)& (0+255),w,b
 10798  004728  1190               	iorwf	(___lomod@divisor+2)& (0+255),w,b
 10799  00472A  1191               	iorwf	(___lomod@divisor+3)& (0+255),w,b
 10800  00472C  1192               	iorwf	(___lomod@divisor+4)& (0+255),w,b
 10801  00472E  1193               	iorwf	(___lomod@divisor+5)& (0+255),w,b
 10802  004730  1194               	iorwf	(___lomod@divisor+6)& (0+255),w,b
 10803  004732  1195               	iorwf	(___lomod@divisor+7)& (0+255),w,b
 10804  004734  B4D8               	btfsc	status,2,c
 10805  004736  EF9F  F023         	goto	u7471
 10806  00473A  EFA1  F023         	goto	u7470
 10807  00473E                     u7471:
 10808  00473E  EFE9  F023         	goto	l1375
 10809  004742                     u7470:
 10810  004742                     
 10811                           ; BSR set to: 0
 10812  004742  0E01               	movlw	1
 10813  004744  6F96               	movwf	___lomod@counter& (0+255),b
 10814  004746  EFAF  F023         	goto	l6853
 10815  00474A                     l6851:
 10816                           
 10817                           ; BSR set to: 0
 10818  00474A  90D8               	bcf	status,0,c
 10819  00474C  378E               	rlcf	___lomod@divisor& (0+255),f,b
 10820  00474E  378F               	rlcf	(___lomod@divisor+1)& (0+255),f,b
 10821  004750  3790               	rlcf	(___lomod@divisor+2)& (0+255),f,b
 10822  004752  3791               	rlcf	(___lomod@divisor+3)& (0+255),f,b
 10823  004754  3792               	rlcf	(___lomod@divisor+4)& (0+255),f,b
 10824  004756  3793               	rlcf	(___lomod@divisor+5)& (0+255),f,b
 10825  004758  3794               	rlcf	(___lomod@divisor+6)& (0+255),f,b
 10826  00475A  3795               	rlcf	(___lomod@divisor+7)& (0+255),f,b
 10827  00475C  2B96               	incf	___lomod@counter& (0+255),f,b
 10828  00475E                     l6853:
 10829                           
 10830                           ; BSR set to: 0
 10831  00475E  AF95               	btfss	(___lomod@divisor+7)& (0+255),7,b
 10832  004760  EFB4  F023         	goto	u7481
 10833  004764  EFB6  F023         	goto	u7480
 10834  004768                     u7481:
 10835  004768  EFA5  F023         	goto	l6851
 10836  00476C                     u7480:
 10837  00476C                     l6855:
 10838                           
 10839                           ; BSR set to: 0
 10840  00476C  518E               	movf	___lomod@divisor& (0+255),w,b
 10841  00476E  5D86               	subwf	___lomod@dividend& (0+255),w,b
 10842  004770  518F               	movf	(___lomod@divisor+1)& (0+255),w,b
 10843  004772  5987               	subwfb	(___lomod@dividend+1)& (0+255),w,b
 10844  004774  5190               	movf	(___lomod@divisor+2)& (0+255),w,b
 10845  004776  5988               	subwfb	(___lomod@dividend+2)& (0+255),w,b
 10846  004778  5191               	movf	(___lomod@divisor+3)& (0+255),w,b
 10847  00477A  5989               	subwfb	(___lomod@dividend+3)& (0+255),w,b
 10848  00477C  5192               	movf	(___lomod@divisor+4)& (0+255),w,b
 10849  00477E  598A               	subwfb	(___lomod@dividend+4)& (0+255),w,b
 10850  004780  5193               	movf	(___lomod@divisor+5)& (0+255),w,b
 10851  004782  598B               	subwfb	(___lomod@dividend+5)& (0+255),w,b
 10852  004784  5194               	movf	(___lomod@divisor+6)& (0+255),w,b
 10853  004786  598C               	subwfb	(___lomod@dividend+6)& (0+255),w,b
 10854  004788  5195               	movf	(___lomod@divisor+7)& (0+255),w,b
 10855  00478A  598D               	subwfb	(___lomod@dividend+7)& (0+255),w,b
 10856  00478C  A0D8               	btfss	status,0,c
 10857  00478E  EFCB  F023         	goto	u7491
 10858  004792  EFCD  F023         	goto	u7490
 10859  004796                     u7491:
 10860  004796  EFDD  F023         	goto	l6859
 10861  00479A                     u7490:
 10862  00479A                     
 10863                           ; BSR set to: 0
 10864  00479A  518E               	movf	___lomod@divisor& (0+255),w,b
 10865  00479C  5F86               	subwf	___lomod@dividend& (0+255),f,b
 10866  00479E  518F               	movf	(___lomod@divisor+1)& (0+255),w,b
 10867  0047A0  5B87               	subwfb	(___lomod@dividend+1)& (0+255),f,b
 10868  0047A2  5190               	movf	(___lomod@divisor+2)& (0+255),w,b
 10869  0047A4  5B88               	subwfb	(___lomod@dividend+2)& (0+255),f,b
 10870  0047A6  5191               	movf	(___lomod@divisor+3)& (0+255),w,b
 10871  0047A8  5B89               	subwfb	(___lomod@dividend+3)& (0+255),f,b
 10872  0047AA  5192               	movf	(___lomod@divisor+4)& (0+255),w,b
 10873  0047AC  5B8A               	subwfb	(___lomod@dividend+4)& (0+255),f,b
 10874  0047AE  5193               	movf	(___lomod@divisor+5)& (0+255),w,b
 10875  0047B0  5B8B               	subwfb	(___lomod@dividend+5)& (0+255),f,b
 10876  0047B2  5194               	movf	(___lomod@divisor+6)& (0+255),w,b
 10877  0047B4  5B8C               	subwfb	(___lomod@dividend+6)& (0+255),f,b
 10878  0047B6  5195               	movf	(___lomod@divisor+7)& (0+255),w,b
 10879  0047B8  5B8D               	subwfb	(___lomod@dividend+7)& (0+255),f,b
 10880  0047BA                     l6859:
 10881                           
 10882                           ; BSR set to: 0
 10883  0047BA  90D8               	bcf	status,0,c
 10884  0047BC  3395               	rrcf	(___lomod@divisor+7)& (0+255),f,b
 10885  0047BE  3394               	rrcf	(___lomod@divisor+6)& (0+255),f,b
 10886  0047C0  3393               	rrcf	(___lomod@divisor+5)& (0+255),f,b
 10887  0047C2  3392               	rrcf	(___lomod@divisor+4)& (0+255),f,b
 10888  0047C4  3391               	rrcf	(___lomod@divisor+3)& (0+255),f,b
 10889  0047C6  3390               	rrcf	(___lomod@divisor+2)& (0+255),f,b
 10890  0047C8  338F               	rrcf	(___lomod@divisor+1)& (0+255),f,b
 10891  0047CA  338E               	rrcf	___lomod@divisor& (0+255),f,b
 10892  0047CC                     
 10893                           ; BSR set to: 0
 10894  0047CC  2F96               	decfsz	___lomod@counter& (0+255),f,b
 10895  0047CE  EFB6  F023         	goto	l6855
 10896  0047D2                     l1375:
 10897                           
 10898                           ; BSR set to: 0
 10899  0047D2  C086  F086         	movff	___lomod@dividend,?___lomod
 10900  0047D6  C087  F087         	movff	___lomod@dividend+1,?___lomod+1
 10901  0047DA  C088  F088         	movff	___lomod@dividend+2,?___lomod+2
 10902  0047DE  C089  F089         	movff	___lomod@dividend+3,?___lomod+3
 10903  0047E2  C08A  F08A         	movff	___lomod@dividend+4,?___lomod+4
 10904  0047E6  C08B  F08B         	movff	___lomod@dividend+5,?___lomod+5
 10905  0047EA  C08C  F08C         	movff	___lomod@dividend+6,?___lomod+6
 10906  0047EE  C08D  F08D         	movff	___lomod@dividend+7,?___lomod+7
 10907  0047F2                     
 10908                           ; BSR set to: 0
 10909  0047F2  0012               	return		;funcret
 10910  0047F4                     __end_of___lomod:
 10911                           	opt callstack 0
 10912                           
 10913 ;; *************** function ___lodiv *****************
 10914 ;; Defined at:
 10915 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  dividend        8   38[BANK0 ] unsigned long long 
 10918 ;;  divisor         8   46[BANK0 ] unsigned long long 
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;  quotient        8   54[BANK0 ] unsigned long long 
 10921 ;;  counter         1   62[BANK0 ] unsigned char 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  8   38[BANK0 ] unsigned long long 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10931 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10932 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;Total ram usage:       25 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    7
 10938 ;; This function calls:
 10939 ;;		Nothing
 10940 ;; This function is called by:
 10941 ;;		_utoa
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text43
 10946  004372                     __ptext43:
 10947                           	opt callstack 0
 10948  004372                     ___lodiv:
 10949                           	opt callstack 18
 10950  004372  EE20  F096         	lfsr	2,___lodiv@quotient
 10951  004376  0E07               	movlw	7
 10952  004378                     u7431:
 10953  004378  6ADE               	clrf	postinc2,c
 10954  00437A  06E8               	decf	wreg,f,c
 10955  00437C  E2FD               	bc	u7431
 10956  00437E  0100               	movlb	0	; () banked
 10957  004380  518E               	movf	___lodiv@divisor& (0+255),w,b
 10958  004382  118F               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
 10959  004384  1190               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
 10960  004386  1191               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
 10961  004388  1192               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
 10962  00438A  1193               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
 10963  00438C  1194               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
 10964  00438E  1195               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
 10965  004390  B4D8               	btfsc	status,2,c
 10966  004392  EFCD  F021         	goto	u7441
 10967  004396  EFCF  F021         	goto	u7440
 10968  00439A                     u7441:
 10969  00439A  EF21  F022         	goto	l1365
 10970  00439E                     u7440:
 10971  00439E                     
 10972                           ; BSR set to: 0
 10973  00439E  0E01               	movlw	1
 10974  0043A0  6F9E               	movwf	___lodiv@counter& (0+255),b
 10975  0043A2  EFDD  F021         	goto	l6833
 10976  0043A6                     l6831:
 10977                           
 10978                           ; BSR set to: 0
 10979  0043A6  90D8               	bcf	status,0,c
 10980  0043A8  378E               	rlcf	___lodiv@divisor& (0+255),f,b
 10981  0043AA  378F               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
 10982  0043AC  3790               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
 10983  0043AE  3791               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
 10984  0043B0  3792               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
 10985  0043B2  3793               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
 10986  0043B4  3794               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
 10987  0043B6  3795               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
 10988  0043B8  2B9E               	incf	___lodiv@counter& (0+255),f,b
 10989  0043BA                     l6833:
 10990                           
 10991                           ; BSR set to: 0
 10992  0043BA  AF95               	btfss	(___lodiv@divisor+7)& (0+255),7,b
 10993  0043BC  EFE2  F021         	goto	u7451
 10994  0043C0  EFE4  F021         	goto	u7450
 10995  0043C4                     u7451:
 10996  0043C4  EFD3  F021         	goto	l6831
 10997  0043C8                     u7450:
 10998  0043C8                     l6835:
 10999                           
 11000                           ; BSR set to: 0
 11001  0043C8  90D8               	bcf	status,0,c
 11002  0043CA  3796               	rlcf	___lodiv@quotient& (0+255),f,b
 11003  0043CC  3797               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
 11004  0043CE  3798               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
 11005  0043D0  3799               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
 11006  0043D2  379A               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
 11007  0043D4  379B               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
 11008  0043D6  379C               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
 11009  0043D8  379D               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
 11010  0043DA                     
 11011                           ; BSR set to: 0
 11012  0043DA  518E               	movf	___lodiv@divisor& (0+255),w,b
 11013  0043DC  5D86               	subwf	___lodiv@dividend& (0+255),w,b
 11014  0043DE  518F               	movf	(___lodiv@divisor+1)& (0+255),w,b
 11015  0043E0  5987               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
 11016  0043E2  5190               	movf	(___lodiv@divisor+2)& (0+255),w,b
 11017  0043E4  5988               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
 11018  0043E6  5191               	movf	(___lodiv@divisor+3)& (0+255),w,b
 11019  0043E8  5989               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
 11020  0043EA  5192               	movf	(___lodiv@divisor+4)& (0+255),w,b
 11021  0043EC  598A               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
 11022  0043EE  5193               	movf	(___lodiv@divisor+5)& (0+255),w,b
 11023  0043F0  598B               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
 11024  0043F2  5194               	movf	(___lodiv@divisor+6)& (0+255),w,b
 11025  0043F4  598C               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
 11026  0043F6  5195               	movf	(___lodiv@divisor+7)& (0+255),w,b
 11027  0043F8  598D               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
 11028  0043FA  A0D8               	btfss	status,0,c
 11029  0043FC  EF02  F022         	goto	u7461
 11030  004400  EF04  F022         	goto	u7460
 11031  004404                     u7461:
 11032  004404  EF15  F022         	goto	l6843
 11033  004408                     u7460:
 11034  004408                     
 11035                           ; BSR set to: 0
 11036  004408  518E               	movf	___lodiv@divisor& (0+255),w,b
 11037  00440A  5F86               	subwf	___lodiv@dividend& (0+255),f,b
 11038  00440C  518F               	movf	(___lodiv@divisor+1)& (0+255),w,b
 11039  00440E  5B87               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
 11040  004410  5190               	movf	(___lodiv@divisor+2)& (0+255),w,b
 11041  004412  5B88               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
 11042  004414  5191               	movf	(___lodiv@divisor+3)& (0+255),w,b
 11043  004416  5B89               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
 11044  004418  5192               	movf	(___lodiv@divisor+4)& (0+255),w,b
 11045  00441A  5B8A               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
 11046  00441C  5193               	movf	(___lodiv@divisor+5)& (0+255),w,b
 11047  00441E  5B8B               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
 11048  004420  5194               	movf	(___lodiv@divisor+6)& (0+255),w,b
 11049  004422  5B8C               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
 11050  004424  5195               	movf	(___lodiv@divisor+7)& (0+255),w,b
 11051  004426  5B8D               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
 11052  004428                     
 11053                           ; BSR set to: 0
 11054  004428  8196               	bsf	___lodiv@quotient& (0+255),0,b
 11055  00442A                     l6843:
 11056                           
 11057                           ; BSR set to: 0
 11058  00442A  90D8               	bcf	status,0,c
 11059  00442C  3395               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
 11060  00442E  3394               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
 11061  004430  3393               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
 11062  004432  3392               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
 11063  004434  3391               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
 11064  004436  3390               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
 11065  004438  338F               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
 11066  00443A  338E               	rrcf	___lodiv@divisor& (0+255),f,b
 11067  00443C                     
 11068                           ; BSR set to: 0
 11069  00443C  2F9E               	decfsz	___lodiv@counter& (0+255),f,b
 11070  00443E  EFE4  F021         	goto	l6835
 11071  004442                     l1365:
 11072                           
 11073                           ; BSR set to: 0
 11074  004442  C096  F086         	movff	___lodiv@quotient,?___lodiv
 11075  004446  C097  F087         	movff	___lodiv@quotient+1,?___lodiv+1
 11076  00444A  C098  F088         	movff	___lodiv@quotient+2,?___lodiv+2
 11077  00444E  C099  F089         	movff	___lodiv@quotient+3,?___lodiv+3
 11078  004452  C09A  F08A         	movff	___lodiv@quotient+4,?___lodiv+4
 11079  004456  C09B  F08B         	movff	___lodiv@quotient+5,?___lodiv+5
 11080  00445A  C09C  F08C         	movff	___lodiv@quotient+6,?___lodiv+6
 11081  00445E  C09D  F08D         	movff	___lodiv@quotient+7,?___lodiv+7
 11082  004462                     
 11083                           ; BSR set to: 0
 11084  004462  0012               	return		;funcret
 11085  004464                     __end_of___lodiv:
 11086                           	opt callstack 0
 11087                           
 11088 ;; *************** function _strncmp *****************
 11089 ;; Defined at:
 11090 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  _l              2   38[BANK0 ] PTR const unsigned char 
 11093 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
 11094 ;;		 -> STR_7(10), STR_6(14), STR_4(12), STR_3(44), 
 11095 ;;		 -> STR_2(12), STR_1(44), 
 11096 ;;  _r              2   40[BANK0 ] PTR const unsigned char 
 11097 ;;		 -> STR_108(3), STR_104(3), STR_99(3), STR_95(3), 
 11098 ;;		 -> STR_90(4), STR_86(4), STR_81(3), STR_76(3), 
 11099 ;;		 -> STR_71(4), STR_66(3), STR_61(3), STR_56(4), 
 11100 ;;		 -> STR_51(3), STR_46(3), STR_41(4), STR_36(3), 
 11101 ;;		 -> STR_32(3), STR_27(3), STR_23(3), STR_18(4), 
 11102 ;;		 -> STR_14(4), 
 11103 ;;  n               2   42[BANK0 ] unsigned int 
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;  r               2   47[BANK0 ] PTR const unsigned char 
 11106 ;;		 -> STR_108(3), STR_104(3), STR_99(3), STR_95(3), 
 11107 ;;		 -> STR_90(4), STR_86(4), STR_81(3), STR_76(3), 
 11108 ;;		 -> STR_71(4), STR_66(3), STR_61(3), STR_56(4), 
 11109 ;;		 -> STR_51(3), STR_46(3), STR_41(4), STR_36(3), 
 11110 ;;		 -> STR_32(3), STR_27(3), STR_23(3), STR_18(4), 
 11111 ;;		 -> STR_14(4), 
 11112 ;;  l               2   45[BANK0 ] PTR const unsigned char 
 11113 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
 11114 ;;		 -> STR_7(10), STR_6(14), STR_4(12), STR_3(44), 
 11115 ;;		 -> STR_2(12), STR_1(44), 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  2   38[BANK0 ] int 
 11118 ;; Registers used:
 11119 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11125 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11126 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11128 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11129 ;;Total ram usage:       11 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; Hardware stack levels required when called:    7
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_vfpfcnvrt
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           	psect	text44
 11140  004554                     __ptext44:
 11141                           	opt callstack 0
 11142  004554                     _strncmp:
 11143                           	opt callstack 19
 11144  004554  C086  F08D         	movff	strncmp@_l,strncmp@l
 11145  004558  C087  F08E         	movff	strncmp@_l+1,strncmp@l+1
 11146  00455C  C088  F08F         	movff	strncmp@_r,strncmp@r
 11147  004560  C089  F090         	movff	strncmp@_r+1,strncmp@r+1
 11148  004564  0100               	movlb	0	; () banked
 11149  004566  078A               	decf	strncmp@n& (0+255),f,b
 11150  004568  A0D8               	btfss	status,0,c
 11151  00456A  078B               	decf	(strncmp@n+1)& (0+255),f,b
 11152  00456C  298A               	incf	strncmp@n& (0+255),w,b
 11153  00456E  E106               	bnz	u5151
 11154  004570  298B               	incf	(strncmp@n+1)& (0+255),w,b
 11155  004572  A4D8               	btfss	status,2,c
 11156  004574  EFBE  F022         	goto	u5151
 11157  004578  EFC0  F022         	goto	u5150
 11158  00457C                     u5151:
 11159  00457C  EFCD  F022         	goto	l5013
 11160  004580                     u5150:
 11161  004580                     
 11162                           ; BSR set to: 0
 11163  004580  0E00               	movlw	0
 11164  004582  6F87               	movwf	(?_strncmp+1)& (0+255),b
 11165  004584  0E00               	movlw	0
 11166  004586  6F86               	movwf	?_strncmp& (0+255),b
 11167  004588  EF1F  F023         	goto	l1706
 11168  00458C                     l5011:
 11169                           
 11170                           ; BSR set to: 0
 11171  00458C  4B8D               	infsnz	strncmp@l& (0+255),f,b
 11172  00458E  2B8E               	incf	(strncmp@l+1)& (0+255),f,b
 11173  004590  4B8F               	infsnz	strncmp@r& (0+255),f,b
 11174  004592  2B90               	incf	(strncmp@r+1)& (0+255),f,b
 11175  004594  078A               	decf	strncmp@n& (0+255),f,b
 11176  004596  A0D8               	btfss	status,0,c
 11177  004598  078B               	decf	(strncmp@n+1)& (0+255),f,b
 11178  00459A                     l5013:
 11179                           
 11180                           ; BSR set to: 0
 11181  00459A  C08D  FFF6         	movff	strncmp@l,tblptrl
 11182  00459E  C08E  FFF7         	movff	strncmp@l+1,tblptrh
 11183  0045A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11184  0045A2  6AF8               	clrf	tblptru,c
 11185  0045A4                     	endif
 11186  0045A4                     	if	0	;tblptru may be non-zero
 11187  0045A4                     	endif
 11188  0045A4  0008               	tblrd		*
 11189  0045A6  50F5               	movf	tablat,w,c
 11190  0045A8  0900               	iorlw	0
 11191  0045AA  B4D8               	btfsc	status,2,c
 11192  0045AC  EFDA  F022         	goto	u5161
 11193  0045B0  EFDC  F022         	goto	u5160
 11194  0045B4                     u5161:
 11195  0045B4  EF0B  F023         	goto	l5021
 11196  0045B8                     u5160:
 11197  0045B8                     
 11198                           ; BSR set to: 0
 11199  0045B8  C08F  FFF6         	movff	strncmp@r,tblptrl
 11200  0045BC  C090  FFF7         	movff	strncmp@r+1,tblptrh
 11201  0045C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11202  0045C0  6AF8               	clrf	tblptru,c
 11203  0045C2                     	endif
 11204  0045C2                     	if	0	;tblptru may be non-zero
 11205  0045C2                     	endif
 11206  0045C2  0008               	tblrd		*
 11207  0045C4  50F5               	movf	tablat,w,c
 11208  0045C6  0900               	iorlw	0
 11209  0045C8  B4D8               	btfsc	status,2,c
 11210  0045CA  EFE9  F022         	goto	u5171
 11211  0045CE  EFEB  F022         	goto	u5170
 11212  0045D2                     u5171:
 11213  0045D2  EF0B  F023         	goto	l5021
 11214  0045D6                     u5170:
 11215  0045D6                     
 11216                           ; BSR set to: 0
 11217  0045D6  518A               	movf	strncmp@n& (0+255),w,b
 11218  0045D8  118B               	iorwf	(strncmp@n+1)& (0+255),w,b
 11219  0045DA  B4D8               	btfsc	status,2,c
 11220  0045DC  EFF2  F022         	goto	u5181
 11221  0045E0  EFF4  F022         	goto	u5180
 11222  0045E4                     u5181:
 11223  0045E4  EF0B  F023         	goto	l5021
 11224  0045E8                     u5180:
 11225  0045E8                     
 11226                           ; BSR set to: 0
 11227  0045E8  C08D  FFF6         	movff	strncmp@l,tblptrl
 11228  0045EC  C08E  FFF7         	movff	strncmp@l+1,tblptrh
 11229  0045F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11230  0045F0  6AF8               	clrf	tblptru,c
 11231  0045F2                     	endif
 11232  0045F2                     	if	0	;tblptru may be non-zero
 11233  0045F2                     	endif
 11234  0045F2  0008               	tblrd		*
 11235  0045F4  CFF5 F08C          	movff	tablat,??_strncmp
 11236  0045F8  C08F  FFF6         	movff	strncmp@r,tblptrl
 11237  0045FC  C090  FFF7         	movff	strncmp@r+1,tblptrh
 11238  004600                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11239  004600  6AF8               	clrf	tblptru,c
 11240  004602                     	endif
 11241  004602                     	if	0	;tblptru may be non-zero
 11242  004602                     	endif
 11243  004602  0008               	tblrd		*
 11244  004604  50F5               	movf	tablat,w,c
 11245  004606  198C               	xorwf	??_strncmp& (0+255),w,b
 11246  004608  B4D8               	btfsc	status,2,c
 11247  00460A  EF09  F023         	goto	u5191
 11248  00460E  EF0B  F023         	goto	u5190
 11249  004612                     u5191:
 11250  004612  EFC6  F022         	goto	l5011
 11251  004616                     u5190:
 11252  004616                     l5021:
 11253                           
 11254                           ; BSR set to: 0
 11255  004616  C08D  FFF6         	movff	strncmp@l,tblptrl
 11256  00461A  C08E  FFF7         	movff	strncmp@l+1,tblptrh
 11257  00461E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11258  00461E  6AF8               	clrf	tblptru,c
 11259  004620                     	endif
 11260  004620                     	if	0	;tblptru may be non-zero
 11261  004620                     	endif
 11262  004620  0008               	tblrd		*
 11263  004622  CFF5 F08C          	movff	tablat,??_strncmp
 11264  004626  C08F  FFF6         	movff	strncmp@r,tblptrl
 11265  00462A  C090  FFF7         	movff	strncmp@r+1,tblptrh
 11266  00462E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11267  00462E  6AF8               	clrf	tblptru,c
 11268  004630                     	endif
 11269  004630                     	if	0	;tblptru may be non-zero
 11270  004630                     	endif
 11271  004630  0008               	tblrd		*
 11272  004632  50F5               	movf	tablat,w,c
 11273  004634  5D8C               	subwf	??_strncmp& (0+255),w,b
 11274  004636  6F86               	movwf	?_strncmp& (0+255),b
 11275  004638  6B87               	clrf	(?_strncmp+1)& (0+255),b
 11276  00463A  A0D8               	btfss	status,0,c
 11277  00463C  0787               	decf	(?_strncmp+1)& (0+255),f,b
 11278  00463E                     l1706:
 11279                           
 11280                           ; BSR set to: 0
 11281  00463E  0012               	return		;funcret
 11282  004640                     __end_of_strncmp:
 11283                           	opt callstack 0
 11284                           
 11285 ;; *************** function _stoa *****************
 11286 ;; Defined at:
 11287 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
 11290 ;;		 -> vsnprintf@f(6), NULL(0), 
 11291 ;;  s               2   51[BANK0 ] PTR unsigned char 
 11292 ;;		 -> ?_snprintf(2), ?_printf(2), 
 11293 ;; Auto vars:     Size  Location     Type
 11294 ;;  nuls            7   54[BANK0 ] unsigned char [7]
 11295 ;;  l               2   69[BANK0 ] int 
 11296 ;;  p               2   67[BANK0 ] int 
 11297 ;;  cp              2   65[BANK0 ] PTR unsigned char 
 11298 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), 
 11299 ;;  w               2   63[BANK0 ] int 
 11300 ;;  i               2   61[BANK0 ] int 
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  2   49[BANK0 ] int 
 11303 ;; Registers used:
 11304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11313 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;Total ram usage:       22 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; Hardware stack levels required when called:   10
 11317 ;; This function calls:
 11318 ;;		_fputc
 11319 ;;		_strlen
 11320 ;; This function is called by:
 11321 ;;		_vfpfcnvrt
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text45
 11326  003802                     __ptext45:
 11327                           	opt callstack 0
 11328  003802                     _stoa:
 11329                           	opt callstack 16
 11330  003802                     
 11331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11332  003802  EE21  F0CF         	lfsr	2,stoa@F1152
 11333  003806  EE10  F096         	lfsr	1,stoa@nuls
 11334  00380A  0E06               	movlw	6
 11335  00380C                     u7771:
 11336  00380C  CFDB FFE3          	movff	plusw2,plusw1
 11337  003810  06E8               	decf	wreg,f,c
 11338  003812  E2FC               	bc	u7771
 11339  003814                     
 11340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
 11341  003814  C093  F0A1         	movff	stoa@s,stoa@cp
 11342  003818  C094  F0A2         	movff	stoa@s+1,stoa@cp+1
 11343  00381C                     
 11344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
 11345  00381C  0100               	movlb	0	; () banked
 11346  00381E  51A1               	movf	stoa@cp& (0+255),w,b
 11347  003820  11A2               	iorwf	(stoa@cp+1)& (0+255),w,b
 11348  003822  A4D8               	btfss	status,2,c
 11349  003824  EF16  F01C         	goto	u7781
 11350  003828  EF18  F01C         	goto	u7780
 11351  00382C                     u7781:
 11352  00382C  EF1C  F01C         	goto	l7003
 11353  003830                     u7780:
 11354  003830                     
 11355                           ; BSR set to: 0
 11356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
 11357  003830  0E96               	movlw	low stoa@nuls
 11358  003832  6FA1               	movwf	stoa@cp& (0+255),b
 11359  003834  0E00               	movlw	high stoa@nuls
 11360  003836  6FA2               	movwf	(stoa@cp+1)& (0+255),b
 11361  003838                     l7003:
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
 11365  003838  C0A1  F086         	movff	stoa@cp,strlen@s
 11366  00383C  C0A2  F087         	movff	stoa@cp+1,strlen@s+1
 11367  003840  EC21  F028         	call	_strlen	;wreg free
 11368  003844  C086  F0A5         	movff	?_strlen,stoa@l
 11369  003848  C087  F0A6         	movff	?_strlen+1,stoa@l+1
 11370  00384C                     
 11371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
 11372  00384C  C0C9  F0A3         	movff	_prec,stoa@p
 11373  003850  C0CA  F0A4         	movff	_prec+1,stoa@p+1
 11374  003854                     
 11375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
 11376  003854  0100               	movlb	0	; () banked
 11377  003856  BFA4               	btfsc	(stoa@p+1)& (0+255),7,b
 11378  003858  EF30  F01C         	goto	u7791
 11379  00385C  EF32  F01C         	goto	u7790
 11380  003860                     u7791:
 11381  003860  EF47  F01C         	goto	l783
 11382  003864                     u7790:
 11383  003864                     
 11384                           ; BSR set to: 0
 11385  003864  51A5               	movf	stoa@l& (0+255),w,b
 11386  003866  5DA3               	subwf	stoa@p& (0+255),w,b
 11387  003868  51A4               	movf	(stoa@p+1)& (0+255),w,b
 11388  00386A  0A80               	xorlw	128
 11389  00386C  6F95               	movwf	??_stoa& (0+255),b
 11390  00386E  51A6               	movf	(stoa@l+1)& (0+255),w,b
 11391  003870  0A80               	xorlw	128
 11392  003872  5995               	subwfb	??_stoa& (0+255),w,b
 11393  003874  A0D8               	btfss	status,0,c
 11394  003876  EF3F  F01C         	goto	u7801
 11395  00387A  EF41  F01C         	goto	u7800
 11396  00387E                     u7801:
 11397  00387E  EF43  F01C         	goto	l781
 11398  003882                     u7800:
 11399  003882  EF47  F01C         	goto	l783
 11400  003886                     l781:
 11401                           
 11402                           ; BSR set to: 0
 11403  003886  C0A3  F0A5         	movff	stoa@p,stoa@l
 11404  00388A  C0A4  F0A6         	movff	stoa@p+1,stoa@l+1
 11405  00388E                     l783:
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
 11409  00388E  C0A5  F0A3         	movff	stoa@l,stoa@p
 11410  003892  C0A6  F0A4         	movff	stoa@l+1,stoa@p+1
 11411                           
 11412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
 11413  003896  C0C7  F09F         	movff	_width,stoa@w
 11414  00389A  C0C8  F0A0         	movff	_width+1,stoa@w+1
 11415                           
 11416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
 11417  00389E  B1CB               	btfsc	_flags& (0+255),0,b
 11418  0038A0  EF54  F01C         	goto	u7811
 11419  0038A4  EF56  F01C         	goto	u7810
 11420  0038A8                     u7811:
 11421  0038A8  EF74  F01C         	goto	l7019
 11422  0038AC                     u7810:
 11423  0038AC  EF65  F01C         	goto	l7017
 11424  0038B0                     l7013:
 11425                           
 11426                           ; BSR set to: 0
 11427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
 11428  0038B0  0E00               	movlw	0
 11429  0038B2  6F89               	movwf	(fputc@c+1)& (0+255),b
 11430  0038B4  0E20               	movlw	32
 11431  0038B6  6F88               	movwf	fputc@c& (0+255),b
 11432  0038B8  C091  F08A         	movff	stoa@fp,fputc@fp
 11433  0038BC  C092  F08B         	movff	stoa@fp+1,fputc@fp+1
 11434  0038C0  ECFA  F023         	call	_fputc	;wreg free
 11435  0038C4                     
 11436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
 11437  0038C4  0100               	movlb	0	; () banked
 11438  0038C6  4BA5               	infsnz	stoa@l& (0+255),f,b
 11439  0038C8  2BA6               	incf	(stoa@l+1)& (0+255),f,b
 11440  0038CA                     l7017:
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
 11444  0038CA  519F               	movf	stoa@w& (0+255),w,b
 11445  0038CC  5DA5               	subwf	stoa@l& (0+255),w,b
 11446  0038CE  51A6               	movf	(stoa@l+1)& (0+255),w,b
 11447  0038D0  0A80               	xorlw	128
 11448  0038D2  6F95               	movwf	??_stoa& (0+255),b
 11449  0038D4  51A0               	movf	(stoa@w+1)& (0+255),w,b
 11450  0038D6  0A80               	xorlw	128
 11451  0038D8  5995               	subwfb	??_stoa& (0+255),w,b
 11452  0038DA  A0D8               	btfss	status,0,c
 11453  0038DC  EF72  F01C         	goto	u7821
 11454  0038E0  EF74  F01C         	goto	u7820
 11455  0038E4                     u7821:
 11456  0038E4  EF58  F01C         	goto	l7013
 11457  0038E8                     u7820:
 11458  0038E8                     l7019:
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
 11462  0038E8  0E00               	movlw	0
 11463  0038EA  6F9E               	movwf	(stoa@i+1)& (0+255),b
 11464  0038EC  0E00               	movlw	0
 11465  0038EE  6F9D               	movwf	stoa@i& (0+255),b
 11466                           
 11467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11468  0038F0  EF8E  F01C         	goto	l7027
 11469  0038F4                     l7021:
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
 11473  0038F4  C0A1  FFD9         	movff	stoa@cp,fsr2l
 11474  0038F8  C0A2  FFDA         	movff	stoa@cp+1,fsr2h
 11475  0038FC  50DF               	movf	indf2,w,c
 11476  0038FE  6F95               	movwf	??_stoa& (0+255),b
 11477  003900  5195               	movf	??_stoa& (0+255),w,b
 11478  003902  6F88               	movwf	fputc@c& (0+255),b
 11479  003904  6B89               	clrf	(fputc@c+1)& (0+255),b
 11480  003906  C091  F08A         	movff	stoa@fp,fputc@fp
 11481  00390A  C092  F08B         	movff	stoa@fp+1,fputc@fp+1
 11482  00390E  ECFA  F023         	call	_fputc	;wreg free
 11483  003912                     
 11484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
 11485  003912  0100               	movlb	0	; () banked
 11486  003914  4BA1               	infsnz	stoa@cp& (0+255),f,b
 11487  003916  2BA2               	incf	(stoa@cp+1)& (0+255),f,b
 11488  003918                     
 11489                           ; BSR set to: 0
 11490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
 11491  003918  4B9D               	infsnz	stoa@i& (0+255),f,b
 11492  00391A  2B9E               	incf	(stoa@i+1)& (0+255),f,b
 11493  00391C                     l7027:
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
 11497  00391C  51A3               	movf	stoa@p& (0+255),w,b
 11498  00391E  5D9D               	subwf	stoa@i& (0+255),w,b
 11499  003920  519E               	movf	(stoa@i+1)& (0+255),w,b
 11500  003922  0A80               	xorlw	128
 11501  003924  6F95               	movwf	??_stoa& (0+255),b
 11502  003926  51A4               	movf	(stoa@p+1)& (0+255),w,b
 11503  003928  0A80               	xorlw	128
 11504  00392A  5995               	subwfb	??_stoa& (0+255),w,b
 11505  00392C  A0D8               	btfss	status,0,c
 11506  00392E  EF9B  F01C         	goto	u7831
 11507  003932  EF9D  F01C         	goto	u7830
 11508  003936                     u7831:
 11509  003936  EF7A  F01C         	goto	l7021
 11510  00393A                     u7830:
 11511  00393A                     
 11512                           ; BSR set to: 0
 11513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
 11514  00393A  A1CB               	btfss	_flags& (0+255),0,b
 11515  00393C  EFA2  F01C         	goto	u7841
 11516  003940  EFA4  F01C         	goto	u7840
 11517  003944                     u7841:
 11518  003944  EFC2  F01C         	goto	l793
 11519  003948                     u7840:
 11520  003948  EFB3  F01C         	goto	l7035
 11521  00394C                     l7031:
 11522                           
 11523                           ; BSR set to: 0
 11524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
 11525  00394C  0E00               	movlw	0
 11526  00394E  6F89               	movwf	(fputc@c+1)& (0+255),b
 11527  003950  0E20               	movlw	32
 11528  003952  6F88               	movwf	fputc@c& (0+255),b
 11529  003954  C091  F08A         	movff	stoa@fp,fputc@fp
 11530  003958  C092  F08B         	movff	stoa@fp+1,fputc@fp+1
 11531  00395C  ECFA  F023         	call	_fputc	;wreg free
 11532  003960                     
 11533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
 11534  003960  0100               	movlb	0	; () banked
 11535  003962  4BA5               	infsnz	stoa@l& (0+255),f,b
 11536  003964  2BA6               	incf	(stoa@l+1)& (0+255),f,b
 11537  003966                     l7035:
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
 11541  003966  519F               	movf	stoa@w& (0+255),w,b
 11542  003968  5DA5               	subwf	stoa@l& (0+255),w,b
 11543  00396A  51A6               	movf	(stoa@l+1)& (0+255),w,b
 11544  00396C  0A80               	xorlw	128
 11545  00396E  6F95               	movwf	??_stoa& (0+255),b
 11546  003970  51A0               	movf	(stoa@w+1)& (0+255),w,b
 11547  003972  0A80               	xorlw	128
 11548  003974  5995               	subwfb	??_stoa& (0+255),w,b
 11549  003976  A0D8               	btfss	status,0,c
 11550  003978  EFC0  F01C         	goto	u7851
 11551  00397C  EFC2  F01C         	goto	u7850
 11552  003980                     u7851:
 11553  003980  EFA6  F01C         	goto	l7031
 11554  003984                     u7850:
 11555  003984                     l793:
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
 11559  003984  C0A5  F091         	movff	stoa@l,?_stoa
 11560  003988  C0A6  F092         	movff	stoa@l+1,?_stoa+1
 11561  00398C                     
 11562                           ; BSR set to: 0
 11563  00398C  0012               	return		;funcret
 11564  00398E                     __end_of_stoa:
 11565                           	opt callstack 0
 11566                           
 11567 ;; *************** function _otoa *****************
 11568 ;; Defined at:
 11569 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
 11572 ;;		 -> vsnprintf@f(6), NULL(0), 
 11573 ;;  d               8   69[BANK0 ] unsigned long long 
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;  n               8    6[BANK1 ] unsigned long long 
 11576 ;;  i               2   14[BANK1 ] int 
 11577 ;;  w               2    4[BANK1 ] int 
 11578 ;;  t               2    2[BANK1 ] int 
 11579 ;;  p               2    0[BANK1 ] int 
 11580 ;; Return value:  Size  Location     Type
 11581 ;;                  2   67[BANK0 ] int 
 11582 ;; Registers used:
 11583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11584 ;; Tracked objects:
 11585 ;;		On entry : 0/0
 11586 ;;		On exit  : 0/0
 11587 ;;		Unchanged: 0/0
 11588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11589 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11590 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11591 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11592 ;;      Totals:         0      18      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11593 ;;Total ram usage:       34 bytes
 11594 ;; Hardware stack levels used:    1
 11595 ;; Hardware stack levels required when called:   12
 11596 ;; This function calls:
 11597 ;;		_pad
 11598 ;; This function is called by:
 11599 ;;		_vfpfcnvrt
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           	psect	text46
 11604  00344C                     __ptext46:
 11605                           	opt callstack 0
 11606  00344C                     _otoa:
 11607                           	opt callstack 14
 11608  00344C                     
 11609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
 11610  00344C  0100               	movlb	0	; () banked
 11611  00344E  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 11612  003450  EF2C  F01A         	goto	u7671
 11613  003454  EF2E  F01A         	goto	u7670
 11614  003458                     u7671:
 11615  003458  EF2F  F01A         	goto	l6951
 11616  00345C                     u7670:
 11617  00345C                     
 11618                           ; BSR set to: 0
 11619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
 11620  00345C  93CB               	bcf	_flags& (0+255),1,b
 11621  00345E                     l6951:
 11622                           
 11623                           ; BSR set to: 0
 11624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
 11625  00345E  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 11626  003460  EF3C  F01A         	goto	u7680
 11627  003464  51CA               	movf	(_prec+1)& (0+255),w,b
 11628  003466  E106               	bnz	u7681
 11629  003468  05C9               	decf	_prec& (0+255),w,b
 11630  00346A  B0D8               	btfsc	status,0,c
 11631  00346C  EF3A  F01A         	goto	u7681
 11632  003470  EF3C  F01A         	goto	u7680
 11633  003474                     u7681:
 11634  003474  EF43  F01A         	goto	l763
 11635  003478                     u7680:
 11636  003478                     
 11637                           ; BSR set to: 0
 11638  003478  0E00               	movlw	0
 11639  00347A  0101               	movlb	1	; () banked
 11640  00347C  6F01               	movwf	(otoa@p+1)& (0+255),b
 11641  00347E  0E01               	movlw	1
 11642  003480  6F00               	movwf	otoa@p& (0+255),b
 11643  003482  EF47  F01A         	goto	l765
 11644  003486                     l763:
 11645                           
 11646                           ; BSR set to: 0
 11647  003486  C0C9  F100         	movff	_prec,otoa@p
 11648  00348A  C0CA  F101         	movff	_prec+1,otoa@p+1
 11649  00348E                     l765:
 11650                           
 11651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
 11652  00348E  C0C7  F104         	movff	_width,otoa@w
 11653  003492  C0C8  F105         	movff	_width+1,otoa@w+1
 11654                           
 11655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
 11656  003496  C0A5  F106         	movff	otoa@d,otoa@n
 11657  00349A  C0A6  F107         	movff	otoa@d+1,otoa@n+1
 11658  00349E  C0A7  F108         	movff	otoa@d+2,otoa@n+2
 11659  0034A2  C0A8  F109         	movff	otoa@d+3,otoa@n+3
 11660  0034A6  C0A9  F10A         	movff	otoa@d+4,otoa@n+4
 11661  0034AA  C0AA  F10B         	movff	otoa@d+5,otoa@n+5
 11662  0034AE  C0AB  F10C         	movff	otoa@d+6,otoa@n+6
 11663  0034B2  C0AC  F10D         	movff	otoa@d+7,otoa@n+7
 11664  0034B6                     
 11665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
 11666  0034B6  0E00               	movlw	0
 11667  0034B8  0101               	movlb	1	; () banked
 11668  0034BA  6F0F               	movwf	(otoa@i+1)& (0+255),b
 11669  0034BC  0E1F               	movlw	31
 11670  0034BE  6F0E               	movwf	otoa@i& (0+255),b
 11671  0034C0                     
 11672                           ; BSR set to: 1
 11673                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
 11674  0034C0  0E00               	movlw	0
 11675  0034C2  6FA4               	movwf	(_dbuf+31)& (0+255),b
 11676  0034C4                     
 11677                           ; BSR set to: 1
 11678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
 11679  0034C4  0E00               	movlw	0
 11680  0034C6  6F03               	movwf	(otoa@t+1)& (0+255),b
 11681  0034C8  0E00               	movlw	0
 11682  0034CA  6F02               	movwf	otoa@t& (0+255),b
 11683                           
 11684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11685  0034CC  EFAF  F01A         	goto	l6973
 11686  0034D0                     l6961:
 11687                           
 11688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
 11689  0034D0  0101               	movlb	1	; () banked
 11690  0034D2  070E               	decf	otoa@i& (0+255),f,b
 11691  0034D4  A0D8               	btfss	status,0,c
 11692  0034D6  070F               	decf	(otoa@i+1)& (0+255),f,b
 11693  0034D8                     
 11694                           ; BSR set to: 1
 11695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
 11696  0034D8  0E07               	movlw	7
 11697  0034DA  1506               	andwf	otoa@n& (0+255),w,b
 11698  0034DC  6F02               	movwf	otoa@t& (0+255),b
 11699  0034DE  6B03               	clrf	(otoa@t+1)& (0+255),b
 11700  0034E0                     
 11701                           ; BSR set to: 1
 11702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
 11703  0034E0  0E85               	movlw	low _dbuf
 11704  0034E2  250E               	addwf	otoa@i& (0+255),w,b
 11705  0034E4  6ED9               	movwf	fsr2l,c
 11706  0034E6  0E01               	movlw	high _dbuf
 11707  0034E8  210F               	addwfc	(otoa@i+1)& (0+255),w,b
 11708  0034EA  6EDA               	movwf	fsr2h,c
 11709  0034EC  5102               	movf	otoa@t& (0+255),w,b
 11710  0034EE  0F30               	addlw	48
 11711  0034F0  6EDF               	movwf	indf2,c
 11712  0034F2                     
 11713                           ; BSR set to: 1
 11714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
 11715  0034F2  0700               	decf	otoa@p& (0+255),f,b
 11716  0034F4  A0D8               	btfss	status,0,c
 11717  0034F6  0701               	decf	(otoa@p+1)& (0+255),f,b
 11718  0034F8                     
 11719                           ; BSR set to: 1
 11720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
 11721  0034F8  0704               	decf	otoa@w& (0+255),f,b
 11722  0034FA  A0D8               	btfss	status,0,c
 11723  0034FC  0705               	decf	(otoa@w+1)& (0+255),f,b
 11724  0034FE                     
 11725                           ; BSR set to: 1
 11726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
 11727  0034FE  C106  F0AD         	movff	otoa@n,??_otoa
 11728  003502  C107  F0AE         	movff	otoa@n+1,??_otoa+1
 11729  003506  C108  F0AF         	movff	otoa@n+2,??_otoa+2
 11730  00350A  C109  F0B0         	movff	otoa@n+3,??_otoa+3
 11731  00350E  C10A  F0B1         	movff	otoa@n+4,??_otoa+4
 11732  003512  C10B  F0B2         	movff	otoa@n+5,??_otoa+5
 11733  003516  C10C  F0B3         	movff	otoa@n+6,??_otoa+6
 11734  00351A  C10D  F0B4         	movff	otoa@n+7,??_otoa+7
 11735  00351E  0E04               	movlw	4
 11736  003520  EF9C  F01A         	goto	u7690
 11737  003524                     u7695:
 11738  003524  0100               	movlb	0	; () banked
 11739  003526  90D8               	bcf	status,0,c
 11740  003528  33B4               	rrcf	(??_otoa+7)& (0+255),f,b
 11741  00352A  33B3               	rrcf	(??_otoa+6)& (0+255),f,b
 11742  00352C  33B2               	rrcf	(??_otoa+5)& (0+255),f,b
 11743  00352E  33B1               	rrcf	(??_otoa+4)& (0+255),f,b
 11744  003530  33B0               	rrcf	(??_otoa+3)& (0+255),f,b
 11745  003532  33AF               	rrcf	(??_otoa+2)& (0+255),f,b
 11746  003534  33AE               	rrcf	(??_otoa+1)& (0+255),f,b
 11747  003536  33AD               	rrcf	??_otoa& (0+255),f,b
 11748  003538                     u7690:
 11749  003538  2EE8               	decfsz	wreg,f,c
 11750  00353A  EF92  F01A         	goto	u7695
 11751  00353E  C0AD  F106         	movff	??_otoa,otoa@n
 11752  003542  C0AE  F107         	movff	??_otoa+1,otoa@n+1
 11753  003546  C0AF  F108         	movff	??_otoa+2,otoa@n+2
 11754  00354A  C0B0  F109         	movff	??_otoa+3,otoa@n+3
 11755  00354E  C0B1  F10A         	movff	??_otoa+4,otoa@n+4
 11756  003552  C0B2  F10B         	movff	??_otoa+5,otoa@n+5
 11757  003556  C0B3  F10C         	movff	??_otoa+6,otoa@n+6
 11758  00355A  C0B4  F10D         	movff	??_otoa+7,otoa@n+7
 11759  00355E                     l6973:
 11760                           
 11761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11762  00355E  0101               	movlb	1	; () banked
 11763  003560  BF0F               	btfsc	(otoa@i+1)& (0+255),7,b
 11764  003562  EFBB  F01A         	goto	u7701
 11765  003566  510F               	movf	(otoa@i+1)& (0+255),w,b
 11766  003568  E108               	bnz	u7700
 11767  00356A  050E               	decf	otoa@i& (0+255),w,b
 11768  00356C  A0D8               	btfss	status,0,c
 11769  00356E  EFBB  F01A         	goto	u7701
 11770  003572  EFBD  F01A         	goto	u7700
 11771  003576                     u7701:
 11772  003576  EFEE  F01A         	goto	l772
 11773  00357A                     u7700:
 11774  00357A                     
 11775                           ; BSR set to: 1
 11776  00357A  5106               	movf	otoa@n& (0+255),w,b
 11777  00357C  1107               	iorwf	(otoa@n+1)& (0+255),w,b
 11778  00357E  1108               	iorwf	(otoa@n+2)& (0+255),w,b
 11779  003580  1109               	iorwf	(otoa@n+3)& (0+255),w,b
 11780  003582  110A               	iorwf	(otoa@n+4)& (0+255),w,b
 11781  003584  110B               	iorwf	(otoa@n+5)& (0+255),w,b
 11782  003586  110C               	iorwf	(otoa@n+6)& (0+255),w,b
 11783  003588  110D               	iorwf	(otoa@n+7)& (0+255),w,b
 11784  00358A  A4D8               	btfss	status,2,c
 11785  00358C  EFCA  F01A         	goto	u7711
 11786  003590  EFCC  F01A         	goto	u7710
 11787  003594                     u7711:
 11788  003594  EF68  F01A         	goto	l6961
 11789  003598                     u7710:
 11790  003598                     
 11791                           ; BSR set to: 1
 11792  003598  BF01               	btfsc	(otoa@p+1)& (0+255),7,b
 11793  00359A  EFD9  F01A         	goto	u7720
 11794  00359E  5101               	movf	(otoa@p+1)& (0+255),w,b
 11795  0035A0  E106               	bnz	u7721
 11796  0035A2  0500               	decf	otoa@p& (0+255),w,b
 11797  0035A4  B0D8               	btfsc	status,0,c
 11798  0035A6  EFD7  F01A         	goto	u7721
 11799  0035AA  EFD9  F01A         	goto	u7720
 11800  0035AE                     u7721:
 11801  0035AE  EF68  F01A         	goto	l6961
 11802  0035B2                     u7720:
 11803  0035B2                     
 11804                           ; BSR set to: 1
 11805  0035B2  BF05               	btfsc	(otoa@w+1)& (0+255),7,b
 11806  0035B4  EFE4  F01A         	goto	u7731
 11807  0035B8  5105               	movf	(otoa@w+1)& (0+255),w,b
 11808  0035BA  E108               	bnz	u7730
 11809  0035BC  0504               	decf	otoa@w& (0+255),w,b
 11810  0035BE  A0D8               	btfss	status,0,c
 11811  0035C0  EFE4  F01A         	goto	u7731
 11812  0035C4  EFE6  F01A         	goto	u7730
 11813  0035C8                     u7731:
 11814  0035C8  EFEE  F01A         	goto	l772
 11815  0035CC                     u7730:
 11816  0035CC                     
 11817                           ; BSR set to: 1
 11818  0035CC  0100               	movlb	0	; () banked
 11819  0035CE  B3CB               	btfsc	_flags& (0+255),1,b
 11820  0035D0  EFEC  F01A         	goto	u7741
 11821  0035D4  EFEE  F01A         	goto	u7740
 11822  0035D8                     u7741:
 11823  0035D8  EF68  F01A         	goto	l6961
 11824  0035DC                     u7740:
 11825  0035DC                     l772:
 11826                           
 11827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
 11828  0035DC  0100               	movlb	0	; () banked
 11829  0035DE  A9CB               	btfss	_flags& (0+255),4,b
 11830  0035E0  EFF4  F01A         	goto	u7751
 11831  0035E4  EFF6  F01A         	goto	u7750
 11832  0035E8                     u7751:
 11833  0035E8  EF0E  F01B         	goto	l6991
 11834  0035EC                     u7750:
 11835  0035EC                     
 11836                           ; BSR set to: 0
 11837  0035EC  0101               	movlb	1	; () banked
 11838  0035EE  5102               	movf	otoa@t& (0+255),w,b
 11839  0035F0  1103               	iorwf	(otoa@t+1)& (0+255),w,b
 11840  0035F2  B4D8               	btfsc	status,2,c
 11841  0035F4  EFFE  F01A         	goto	u7761
 11842  0035F8  EF00  F01B         	goto	u7760
 11843  0035FC                     u7761:
 11844  0035FC  EF0E  F01B         	goto	l6991
 11845  003600                     u7760:
 11846  003600                     
 11847                           ; BSR set to: 1
 11848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
 11849  003600  070E               	decf	otoa@i& (0+255),f,b
 11850  003602  A0D8               	btfss	status,0,c
 11851  003604  070F               	decf	(otoa@i+1)& (0+255),f,b
 11852  003606                     
 11853                           ; BSR set to: 1
 11854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
 11855  003606  0E85               	movlw	low _dbuf
 11856  003608  250E               	addwf	otoa@i& (0+255),w,b
 11857  00360A  6ED9               	movwf	fsr2l,c
 11858  00360C  0E01               	movlw	high _dbuf
 11859  00360E  210F               	addwfc	(otoa@i+1)& (0+255),w,b
 11860  003610  6EDA               	movwf	fsr2h,c
 11861  003612  0E30               	movlw	48
 11862  003614  6EDF               	movwf	indf2,c
 11863  003616                     
 11864                           ; BSR set to: 1
 11865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
 11866  003616  0704               	decf	otoa@w& (0+255),f,b
 11867  003618  A0D8               	btfss	status,0,c
 11868  00361A  0705               	decf	(otoa@w+1)& (0+255),f,b
 11869  00361C                     l6991:
 11870                           
 11871                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
 11872  00361C  C0A3  F098         	movff	otoa@fp,pad@fp
 11873  003620  C0A4  F099         	movff	otoa@fp+1,pad@fp+1
 11874  003624  0E85               	movlw	low _dbuf
 11875  003626  0101               	movlb	1	; () banked
 11876  003628  250E               	addwf	otoa@i& (0+255),w,b
 11877  00362A  0100               	movlb	0	; () banked
 11878  00362C  6F9A               	movwf	pad@buf& (0+255),b
 11879  00362E  0E01               	movlw	high _dbuf
 11880  003630  0101               	movlb	1	; () banked
 11881  003632  210F               	addwfc	(otoa@i+1)& (0+255),w,b
 11882  003634  0100               	movlb	0	; () banked
 11883  003636  6F9B               	movwf	(pad@buf+1)& (0+255),b
 11884  003638  C104  F09C         	movff	otoa@w,pad@p
 11885  00363C  C105  F09D         	movff	otoa@w+1,pad@p+1
 11886  003640  EC60  F024         	call	_pad	;wreg free
 11887  003644  C098  F0A3         	movff	?_pad,?_otoa
 11888  003648  C099  F0A4         	movff	?_pad+1,?_otoa+1
 11889  00364C  0012               	return		;funcret
 11890  00364E                     __end_of_otoa:
 11891                           	opt callstack 0
 11892                           
 11893 ;; *************** function _dtoa *****************
 11894 ;; Defined at:
 11895 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
 11898 ;;		 -> vsnprintf@f(6), NULL(0), 
 11899 ;;  d               8   69[BANK0 ] long long 
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;  n               8    8[BANK1 ] long long 
 11902 ;;  i               2   16[BANK1 ] int 
 11903 ;;  s               2    6[BANK1 ] int 
 11904 ;;  w               2    4[BANK1 ] int 
 11905 ;;  p               2    2[BANK1 ] int 
 11906 ;; Return value:  Size  Location     Type
 11907 ;;                  2   67[BANK0 ] int 
 11908 ;; Registers used:
 11909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11915 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11916 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11917 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11918 ;;      Totals:         0      18      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11919 ;;Total ram usage:       36 bytes
 11920 ;; Hardware stack levels used:    1
 11921 ;; Hardware stack levels required when called:   12
 11922 ;; This function calls:
 11923 ;;		___aodiv
 11924 ;;		___aomod
 11925 ;;		_abs
 11926 ;;		_pad
 11927 ;; This function is called by:
 11928 ;;		_vfpfcnvrt
 11929 ;; This function uses a non-reentrant model
 11930 ;;
 11931                           
 11932                           	psect	text47
 11933  002788                     __ptext47:
 11934                           	opt callstack 0
 11935  002788                     _dtoa:
 11936                           	opt callstack 14
 11937  002788                     
 11938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11939  002788  C0A5  F108         	movff	dtoa@d,dtoa@n
 11940  00278C  C0A6  F109         	movff	dtoa@d+1,dtoa@n+1
 11941  002790  C0A7  F10A         	movff	dtoa@d+2,dtoa@n+2
 11942  002794  C0A8  F10B         	movff	dtoa@d+3,dtoa@n+3
 11943  002798  C0A9  F10C         	movff	dtoa@d+4,dtoa@n+4
 11944  00279C  C0AA  F10D         	movff	dtoa@d+5,dtoa@n+5
 11945  0027A0  C0AB  F10E         	movff	dtoa@d+6,dtoa@n+6
 11946  0027A4  C0AC  F10F         	movff	dtoa@d+7,dtoa@n+7
 11947  0027A8                     
 11948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11949  0027A8  0101               	movlb	1	; () banked
 11950  0027AA  BF0F               	btfsc	(dtoa@n+7)& (0+255),7,b
 11951  0027AC  EFDA  F013         	goto	u7521
 11952  0027B0  EFDD  F013         	goto	u7520
 11953  0027B4                     u7521:
 11954  0027B4  0E01               	movlw	1
 11955  0027B6  EFDE  F013         	goto	u7530
 11956  0027BA                     u7520:
 11957  0027BA  0E00               	movlw	0
 11958  0027BC                     u7530:
 11959  0027BC  6F06               	movwf	dtoa@s& (0+255),b
 11960  0027BE  6B07               	clrf	(dtoa@s+1)& (0+255),b
 11961                           
 11962                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11963  0027C0  5106               	movf	dtoa@s& (0+255),w,b
 11964  0027C2  1107               	iorwf	(dtoa@s+1)& (0+255),w,b
 11965  0027C4  B4D8               	btfsc	status,2,c
 11966  0027C6  EFE7  F013         	goto	u7541
 11967  0027CA  EFE9  F013         	goto	u7540
 11968  0027CE                     u7541:
 11969  0027CE  EFF9  F013         	goto	l6891
 11970  0027D2                     u7540:
 11971  0027D2                     
 11972                           ; BSR set to: 1
 11973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11974  0027D2  1F0F               	comf	(dtoa@n+7)& (0+255),f,b
 11975  0027D4  1F0E               	comf	(dtoa@n+6)& (0+255),f,b
 11976  0027D6  1F0D               	comf	(dtoa@n+5)& (0+255),f,b
 11977  0027D8  1F0C               	comf	(dtoa@n+4)& (0+255),f,b
 11978  0027DA  1F0B               	comf	(dtoa@n+3)& (0+255),f,b
 11979  0027DC  1F0A               	comf	(dtoa@n+2)& (0+255),f,b
 11980  0027DE  1F09               	comf	(dtoa@n+1)& (0+255),f,b
 11981  0027E0  6D08               	negf	dtoa@n& (0+255),b
 11982  0027E2  0E00               	movlw	0
 11983  0027E4  2309               	addwfc	(dtoa@n+1)& (0+255),f,b
 11984  0027E6  230A               	addwfc	(dtoa@n+2)& (0+255),f,b
 11985  0027E8  230B               	addwfc	(dtoa@n+3)& (0+255),f,b
 11986  0027EA  230C               	addwfc	(dtoa@n+4)& (0+255),f,b
 11987  0027EC  230D               	addwfc	(dtoa@n+5)& (0+255),f,b
 11988  0027EE  230E               	addwfc	(dtoa@n+6)& (0+255),f,b
 11989  0027F0  230F               	addwfc	(dtoa@n+7)& (0+255),f,b
 11990  0027F2                     l6891:
 11991                           
 11992                           ; BSR set to: 1
 11993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11994  0027F2  0100               	movlb	0	; () banked
 11995  0027F4  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 11996  0027F6  EFFF  F013         	goto	u7551
 11997  0027FA  EF01  F014         	goto	u7550
 11998  0027FE                     u7551:
 11999  0027FE  EF02  F014         	goto	l6895
 12000  002802                     u7550:
 12001  002802                     
 12002                           ; BSR set to: 0
 12003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12004  002802  93CB               	bcf	_flags& (0+255),1,b
 12005  002804                     l6895:
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12009  002804  BFCA               	btfsc	(_prec+1)& (0+255),7,b
 12010  002806  EF0F  F014         	goto	u7560
 12011  00280A  51CA               	movf	(_prec+1)& (0+255),w,b
 12012  00280C  E106               	bnz	u7561
 12013  00280E  05C9               	decf	_prec& (0+255),w,b
 12014  002810  B0D8               	btfsc	status,0,c
 12015  002812  EF0D  F014         	goto	u7561
 12016  002816  EF0F  F014         	goto	u7560
 12017  00281A                     u7561:
 12018  00281A  EF16  F014         	goto	l738
 12019  00281E                     u7560:
 12020  00281E                     
 12021                           ; BSR set to: 0
 12022  00281E  0E00               	movlw	0
 12023  002820  0101               	movlb	1	; () banked
 12024  002822  6F03               	movwf	(dtoa@p+1)& (0+255),b
 12025  002824  0E01               	movlw	1
 12026  002826  6F02               	movwf	dtoa@p& (0+255),b
 12027  002828  EF1A  F014         	goto	l740
 12028  00282C                     l738:
 12029                           
 12030                           ; BSR set to: 0
 12031  00282C  C0C9  F102         	movff	_prec,dtoa@p
 12032  002830  C0CA  F103         	movff	_prec+1,dtoa@p+1
 12033  002834                     l740:
 12034                           
 12035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12036  002834  C0C7  F104         	movff	_width,dtoa@w
 12037  002838  C0C8  F105         	movff	_width+1,dtoa@w+1
 12038  00283C                     
 12039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12040  00283C  0101               	movlb	1	; () banked
 12041  00283E  5106               	movf	dtoa@s& (0+255),w,b
 12042  002840  1107               	iorwf	(dtoa@s+1)& (0+255),w,b
 12043  002842  A4D8               	btfss	status,2,c
 12044  002844  EF26  F014         	goto	u7571
 12045  002848  EF28  F014         	goto	u7570
 12046  00284C                     u7571:
 12047  00284C  EF30  F014         	goto	l6903
 12048  002850                     u7570:
 12049  002850                     
 12050                           ; BSR set to: 1
 12051  002850  0100               	movlb	0	; () banked
 12052  002852  A5CB               	btfss	_flags& (0+255),2,b
 12053  002854  EF2E  F014         	goto	u7581
 12054  002858  EF30  F014         	goto	u7580
 12055  00285C                     u7581:
 12056  00285C  EF34  F014         	goto	l6905
 12057  002860                     u7580:
 12058  002860                     l6903:
 12059                           
 12060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12061  002860  0101               	movlb	1	; () banked
 12062  002862  0704               	decf	dtoa@w& (0+255),f,b
 12063  002864  A0D8               	btfss	status,0,c
 12064  002866  0705               	decf	(dtoa@w+1)& (0+255),f,b
 12065  002868                     l6905:
 12066                           
 12067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12068  002868  0E00               	movlw	0
 12069  00286A  0101               	movlb	1	; () banked
 12070  00286C  6F11               	movwf	(dtoa@i+1)& (0+255),b
 12071  00286E  0E1F               	movlw	31
 12072  002870  6F10               	movwf	dtoa@i& (0+255),b
 12073  002872                     
 12074                           ; BSR set to: 1
 12075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12076  002872  0E00               	movlw	0
 12077  002874  6FA4               	movwf	(_dbuf+31)& (0+255),b
 12078                           
 12079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12080  002876  EFBE  F014         	goto	l6919
 12081  00287A                     l6909:
 12082                           
 12083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12084  00287A  0101               	movlb	1	; () banked
 12085  00287C  0710               	decf	dtoa@i& (0+255),f,b
 12086  00287E  A0D8               	btfss	status,0,c
 12087  002880  0711               	decf	(dtoa@i+1)& (0+255),f,b
 12088  002882                     
 12089                           ; BSR set to: 1
 12090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12091  002882  0E85               	movlw	low _dbuf
 12092  002884  2510               	addwf	dtoa@i& (0+255),w,b
 12093  002886  6ED9               	movwf	fsr2l,c
 12094  002888  0E01               	movlw	high _dbuf
 12095  00288A  2111               	addwfc	(dtoa@i+1)& (0+255),w,b
 12096  00288C  6EDA               	movwf	fsr2h,c
 12097  00288E  C108  F086         	movff	dtoa@n,___aomod@dividend
 12098  002892  C109  F087         	movff	dtoa@n+1,___aomod@dividend+1
 12099  002896  C10A  F088         	movff	dtoa@n+2,___aomod@dividend+2
 12100  00289A  C10B  F089         	movff	dtoa@n+3,___aomod@dividend+3
 12101  00289E  C10C  F08A         	movff	dtoa@n+4,___aomod@dividend+4
 12102  0028A2  C10D  F08B         	movff	dtoa@n+5,___aomod@dividend+5
 12103  0028A6  C10E  F08C         	movff	dtoa@n+6,___aomod@dividend+6
 12104  0028AA  C10F  F08D         	movff	dtoa@n+7,___aomod@dividend+7
 12105  0028AE  0E0A               	movlw	10
 12106  0028B0  0100               	movlb	0	; () banked
 12107  0028B2  6F8E               	movwf	___aomod@divisor& (0+255),b
 12108  0028B4  0E00               	movlw	0
 12109  0028B6  6F8F               	movwf	(___aomod@divisor+1)& (0+255),b
 12110  0028B8  0E00               	movlw	0
 12111  0028BA  6F90               	movwf	(___aomod@divisor+2)& (0+255),b
 12112  0028BC  0E00               	movlw	0
 12113  0028BE  6F91               	movwf	(___aomod@divisor+3)& (0+255),b
 12114  0028C0  0E00               	movlw	0
 12115  0028C2  6F92               	movwf	(___aomod@divisor+4)& (0+255),b
 12116  0028C4  0E00               	movlw	0
 12117  0028C6  6F93               	movwf	(___aomod@divisor+5)& (0+255),b
 12118  0028C8  0E00               	movlw	0
 12119  0028CA  6F94               	movwf	(___aomod@divisor+6)& (0+255),b
 12120  0028CC  0E00               	movlw	0
 12121  0028CE  6F95               	movwf	(___aomod@divisor+7)& (0+255),b
 12122  0028D0  EC4D  F01E         	call	___aomod	;wreg free
 12123  0028D4  C086  F0AD         	movff	?___aomod,??_dtoa
 12124  0028D8  C087  F0AE         	movff	?___aomod+1,??_dtoa+1
 12125  0028DC  C088  F0AF         	movff	?___aomod+2,??_dtoa+2
 12126  0028E0  C089  F0B0         	movff	?___aomod+3,??_dtoa+3
 12127  0028E4  C08A  F0B1         	movff	?___aomod+4,??_dtoa+4
 12128  0028E8  C08B  F0B2         	movff	?___aomod+5,??_dtoa+5
 12129  0028EC  C08C  F0B3         	movff	?___aomod+6,??_dtoa+6
 12130  0028F0  C08D  F0B4         	movff	?___aomod+7,??_dtoa+7
 12131  0028F4  C0AD  F098         	movff	??_dtoa,abs@a
 12132  0028F8  C0AF  F099         	movff	??_dtoa+2,abs@a+1
 12133  0028FC  EC86  F027         	call	_abs	;wreg free
 12134  002900  0100               	movlb	0	; () banked
 12135  002902  5198               	movf	?_abs& (0+255),w,b
 12136  002904  0F30               	addlw	48
 12137  002906  6EDF               	movwf	indf2,c
 12138  002908                     
 12139                           ; BSR set to: 0
 12140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12141  002908  0101               	movlb	1	; () banked
 12142  00290A  0702               	decf	dtoa@p& (0+255),f,b
 12143  00290C  A0D8               	btfss	status,0,c
 12144  00290E  0703               	decf	(dtoa@p+1)& (0+255),f,b
 12145  002910                     
 12146                           ; BSR set to: 1
 12147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12148  002910  0704               	decf	dtoa@w& (0+255),f,b
 12149  002912  A0D8               	btfss	status,0,c
 12150  002914  0705               	decf	(dtoa@w+1)& (0+255),f,b
 12151  002916                     
 12152                           ; BSR set to: 1
 12153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12154  002916  C108  F086         	movff	dtoa@n,___aodiv@dividend
 12155  00291A  C109  F087         	movff	dtoa@n+1,___aodiv@dividend+1
 12156  00291E  C10A  F088         	movff	dtoa@n+2,___aodiv@dividend+2
 12157  002922  C10B  F089         	movff	dtoa@n+3,___aodiv@dividend+3
 12158  002926  C10C  F08A         	movff	dtoa@n+4,___aodiv@dividend+4
 12159  00292A  C10D  F08B         	movff	dtoa@n+5,___aodiv@dividend+5
 12160  00292E  C10E  F08C         	movff	dtoa@n+6,___aodiv@dividend+6
 12161  002932  C10F  F08D         	movff	dtoa@n+7,___aodiv@dividend+7
 12162  002936  0E0A               	movlw	10
 12163  002938  0100               	movlb	0	; () banked
 12164  00293A  6F8E               	movwf	___aodiv@divisor& (0+255),b
 12165  00293C  0E00               	movlw	0
 12166  00293E  6F8F               	movwf	(___aodiv@divisor+1)& (0+255),b
 12167  002940  0E00               	movlw	0
 12168  002942  6F90               	movwf	(___aodiv@divisor+2)& (0+255),b
 12169  002944  0E00               	movlw	0
 12170  002946  6F91               	movwf	(___aodiv@divisor+3)& (0+255),b
 12171  002948  0E00               	movlw	0
 12172  00294A  6F92               	movwf	(___aodiv@divisor+4)& (0+255),b
 12173  00294C  0E00               	movlw	0
 12174  00294E  6F93               	movwf	(___aodiv@divisor+5)& (0+255),b
 12175  002950  0E00               	movlw	0
 12176  002952  6F94               	movwf	(___aodiv@divisor+6)& (0+255),b
 12177  002954  0E00               	movlw	0
 12178  002956  6F95               	movwf	(___aodiv@divisor+7)& (0+255),b
 12179  002958  ECC7  F01C         	call	___aodiv	;wreg free
 12180  00295C  C086  F108         	movff	?___aodiv,dtoa@n
 12181  002960  C087  F109         	movff	?___aodiv+1,dtoa@n+1
 12182  002964  C088  F10A         	movff	?___aodiv+2,dtoa@n+2
 12183  002968  C089  F10B         	movff	?___aodiv+3,dtoa@n+3
 12184  00296C  C08A  F10C         	movff	?___aodiv+4,dtoa@n+4
 12185  002970  C08B  F10D         	movff	?___aodiv+5,dtoa@n+5
 12186  002974  C08C  F10E         	movff	?___aodiv+6,dtoa@n+6
 12187  002978  C08D  F10F         	movff	?___aodiv+7,dtoa@n+7
 12188  00297C                     l6919:
 12189                           
 12190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12191  00297C  0101               	movlb	1	; () banked
 12192  00297E  BF11               	btfsc	(dtoa@i+1)& (0+255),7,b
 12193  002980  EFCA  F014         	goto	u7591
 12194  002984  5111               	movf	(dtoa@i+1)& (0+255),w,b
 12195  002986  E108               	bnz	u7590
 12196  002988  0510               	decf	dtoa@i& (0+255),w,b
 12197  00298A  A0D8               	btfss	status,0,c
 12198  00298C  EFCA  F014         	goto	u7591
 12199  002990  EFCC  F014         	goto	u7590
 12200  002994                     u7591:
 12201  002994  EFFD  F014         	goto	l6929
 12202  002998                     u7590:
 12203  002998                     
 12204                           ; BSR set to: 1
 12205  002998  5108               	movf	dtoa@n& (0+255),w,b
 12206  00299A  1109               	iorwf	(dtoa@n+1)& (0+255),w,b
 12207  00299C  110A               	iorwf	(dtoa@n+2)& (0+255),w,b
 12208  00299E  110B               	iorwf	(dtoa@n+3)& (0+255),w,b
 12209  0029A0  110C               	iorwf	(dtoa@n+4)& (0+255),w,b
 12210  0029A2  110D               	iorwf	(dtoa@n+5)& (0+255),w,b
 12211  0029A4  110E               	iorwf	(dtoa@n+6)& (0+255),w,b
 12212  0029A6  110F               	iorwf	(dtoa@n+7)& (0+255),w,b
 12213  0029A8  A4D8               	btfss	status,2,c
 12214  0029AA  EFD9  F014         	goto	u7601
 12215  0029AE  EFDB  F014         	goto	u7600
 12216  0029B2                     u7601:
 12217  0029B2  EF3D  F014         	goto	l6909
 12218  0029B6                     u7600:
 12219  0029B6                     
 12220                           ; BSR set to: 1
 12221  0029B6  BF03               	btfsc	(dtoa@p+1)& (0+255),7,b
 12222  0029B8  EFE8  F014         	goto	u7610
 12223  0029BC  5103               	movf	(dtoa@p+1)& (0+255),w,b
 12224  0029BE  E106               	bnz	u7611
 12225  0029C0  0502               	decf	dtoa@p& (0+255),w,b
 12226  0029C2  B0D8               	btfsc	status,0,c
 12227  0029C4  EFE6  F014         	goto	u7611
 12228  0029C8  EFE8  F014         	goto	u7610
 12229  0029CC                     u7611:
 12230  0029CC  EF3D  F014         	goto	l6909
 12231  0029D0                     u7610:
 12232  0029D0                     
 12233                           ; BSR set to: 1
 12234  0029D0  BF05               	btfsc	(dtoa@w+1)& (0+255),7,b
 12235  0029D2  EFF3  F014         	goto	u7621
 12236  0029D6  5105               	movf	(dtoa@w+1)& (0+255),w,b
 12237  0029D8  E108               	bnz	u7620
 12238  0029DA  0504               	decf	dtoa@w& (0+255),w,b
 12239  0029DC  A0D8               	btfss	status,0,c
 12240  0029DE  EFF3  F014         	goto	u7621
 12241  0029E2  EFF5  F014         	goto	u7620
 12242  0029E6                     u7621:
 12243  0029E6  EFFD  F014         	goto	l6929
 12244  0029EA                     u7620:
 12245  0029EA                     
 12246                           ; BSR set to: 1
 12247  0029EA  0100               	movlb	0	; () banked
 12248  0029EC  B3CB               	btfsc	_flags& (0+255),1,b
 12249  0029EE  EFFB  F014         	goto	u7631
 12250  0029F2  EFFD  F014         	goto	u7630
 12251  0029F6                     u7631:
 12252  0029F6  EF3D  F014         	goto	l6909
 12253  0029FA                     u7630:
 12254  0029FA                     l6929:
 12255                           
 12256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12257  0029FA  0101               	movlb	1	; () banked
 12258  0029FC  5106               	movf	dtoa@s& (0+255),w,b
 12259  0029FE  1107               	iorwf	(dtoa@s+1)& (0+255),w,b
 12260  002A00  A4D8               	btfss	status,2,c
 12261  002A02  EF05  F015         	goto	u7641
 12262  002A06  EF07  F015         	goto	u7640
 12263  002A0A                     u7641:
 12264  002A0A  EF0F  F015         	goto	l6933
 12265  002A0E                     u7640:
 12266  002A0E                     
 12267                           ; BSR set to: 1
 12268  002A0E  0100               	movlb	0	; () banked
 12269  002A10  A5CB               	btfss	_flags& (0+255),2,b
 12270  002A12  EF0D  F015         	goto	u7651
 12271  002A16  EF0F  F015         	goto	u7650
 12272  002A1A                     u7651:
 12273  002A1A  EF2E  F015         	goto	l6943
 12274  002A1E                     u7650:
 12275  002A1E                     l6933:
 12276                           
 12277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12278  002A1E  0101               	movlb	1	; () banked
 12279  002A20  0710               	decf	dtoa@i& (0+255),f,b
 12280  002A22  A0D8               	btfss	status,0,c
 12281  002A24  0711               	decf	(dtoa@i+1)& (0+255),f,b
 12282  002A26                     
 12283                           ; BSR set to: 1
 12284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12285  002A26  5106               	movf	dtoa@s& (0+255),w,b
 12286  002A28  1107               	iorwf	(dtoa@s+1)& (0+255),w,b
 12287  002A2A  A4D8               	btfss	status,2,c
 12288  002A2C  EF1A  F015         	goto	u7661
 12289  002A30  EF1C  F015         	goto	u7660
 12290  002A34                     u7661:
 12291  002A34  EF22  F015         	goto	l6939
 12292  002A38                     u7660:
 12293  002A38                     
 12294                           ; BSR set to: 1
 12295  002A38  0E00               	movlw	0
 12296  002A3A  6F01               	movwf	(_dtoa$1786+1)& (0+255),b
 12297  002A3C  0E2B               	movlw	43
 12298  002A3E  6F00               	movwf	_dtoa$1786& (0+255),b
 12299  002A40  EF26  F015         	goto	l6941
 12300  002A44                     l6939:
 12301                           
 12302                           ; BSR set to: 1
 12303  002A44  0E00               	movlw	0
 12304  002A46  6F01               	movwf	(_dtoa$1786+1)& (0+255),b
 12305  002A48  0E2D               	movlw	45
 12306  002A4A  6F00               	movwf	_dtoa$1786& (0+255),b
 12307  002A4C                     l6941:
 12308                           
 12309                           ; BSR set to: 1
 12310  002A4C  0E85               	movlw	low _dbuf
 12311  002A4E  2510               	addwf	dtoa@i& (0+255),w,b
 12312  002A50  6ED9               	movwf	fsr2l,c
 12313  002A52  0E01               	movlw	high _dbuf
 12314  002A54  2111               	addwfc	(dtoa@i+1)& (0+255),w,b
 12315  002A56  6EDA               	movwf	fsr2h,c
 12316  002A58  C100  FFDF         	movff	_dtoa$1786,indf2
 12317  002A5C                     l6943:
 12318                           
 12319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12320  002A5C  C0A3  F098         	movff	dtoa@fp,pad@fp
 12321  002A60  C0A4  F099         	movff	dtoa@fp+1,pad@fp+1
 12322  002A64  0E85               	movlw	low _dbuf
 12323  002A66  0101               	movlb	1	; () banked
 12324  002A68  2510               	addwf	dtoa@i& (0+255),w,b
 12325  002A6A  0100               	movlb	0	; () banked
 12326  002A6C  6F9A               	movwf	pad@buf& (0+255),b
 12327  002A6E  0E01               	movlw	high _dbuf
 12328  002A70  0101               	movlb	1	; () banked
 12329  002A72  2111               	addwfc	(dtoa@i+1)& (0+255),w,b
 12330  002A74  0100               	movlb	0	; () banked
 12331  002A76  6F9B               	movwf	(pad@buf+1)& (0+255),b
 12332  002A78  C104  F09C         	movff	dtoa@w,pad@p
 12333  002A7C  C105  F09D         	movff	dtoa@w+1,pad@p+1
 12334  002A80  EC60  F024         	call	_pad	;wreg free
 12335  002A84  C098  F0A3         	movff	?_pad,?_dtoa
 12336  002A88  C099  F0A4         	movff	?_pad+1,?_dtoa+1
 12337  002A8C  0012               	return		;funcret
 12338  002A8E                     __end_of_dtoa:
 12339                           	opt callstack 0
 12340                           
 12341 ;; *************** function _abs *****************
 12342 ;; Defined at:
 12343 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;  a               2   56[BANK0 ] int 
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;		None
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  2   56[BANK0 ] int 
 12350 ;; Registers used:
 12351 ;;		wreg, status,2, status,0
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12357 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12359 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12360 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12361 ;;Total ram usage:        4 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; Hardware stack levels required when called:    7
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		_dtoa
 12368 ;; This function uses a non-reentrant model
 12369 ;;
 12370                           
 12371                           	psect	text48
 12372  004F0C                     __ptext48:
 12373                           	opt callstack 0
 12374  004F0C                     _abs:
 12375                           	opt callstack 18
 12376  004F0C  0100               	movlb	0	; () banked
 12377  004F0E  BF99               	btfsc	(abs@a+1)& (0+255),7,b
 12378  004F10  EF94  F027         	goto	u7180
 12379  004F14  5199               	movf	(abs@a+1)& (0+255),w,b
 12380  004F16  E106               	bnz	u7181
 12381  004F18  0598               	decf	abs@a& (0+255),w,b
 12382  004F1A  B0D8               	btfsc	status,0,c
 12383  004F1C  EF92  F027         	goto	u7181
 12384  004F20  EF94  F027         	goto	u7180
 12385  004F24                     u7181:
 12386  004F24  EFA2  F027         	goto	l1602
 12387  004F28                     u7180:
 12388  004F28                     
 12389                           ; BSR set to: 0
 12390  004F28  C098  F09A         	movff	abs@a,??_abs
 12391  004F2C  C099  F09B         	movff	abs@a+1,??_abs+1
 12392  004F30  1F9A               	comf	??_abs& (0+255),f,b
 12393  004F32  1F9B               	comf	(??_abs+1)& (0+255),f,b
 12394  004F34  4B9A               	infsnz	??_abs& (0+255),f,b
 12395  004F36  2B9B               	incf	(??_abs+1)& (0+255),f,b
 12396  004F38  C09A  F098         	movff	??_abs,?_abs
 12397  004F3C  C09B  F099         	movff	??_abs+1,?_abs+1
 12398  004F40  EFA6  F027         	goto	l1605
 12399  004F44                     l1602:
 12400                           
 12401                           ; BSR set to: 0
 12402  004F44  C098  F098         	movff	abs@a,?_abs
 12403  004F48  C099  F099         	movff	abs@a+1,?_abs+1
 12404  004F4C                     l1605:
 12405                           
 12406                           ; BSR set to: 0
 12407  004F4C  0012               	return		;funcret
 12408  004F4E                     __end_of_abs:
 12409                           	opt callstack 0
 12410                           
 12411 ;; *************** function ___aomod *****************
 12412 ;; Defined at:
 12413 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  dividend        8   38[BANK0 ] long long 
 12416 ;;  divisor         8   46[BANK0 ] long long 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  sign            1   55[BANK0 ] unsigned char 
 12419 ;;  counter         1   54[BANK0 ] unsigned char 
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  8   38[BANK0 ] long long 
 12422 ;; Registers used:
 12423 ;;		wreg, status,2, status,0
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12429 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12432 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12433 ;;Total ram usage:       18 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    7
 12436 ;; This function calls:
 12437 ;;		Nothing
 12438 ;; This function is called by:
 12439 ;;		_dtoa
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443                           	psect	text49
 12444  003C9A                     __ptext49:
 12445                           	opt callstack 0
 12446  003C9A                     ___aomod:
 12447                           	opt callstack 18
 12448  003C9A  0E00               	movlw	0
 12449  003C9C  0100               	movlb	0	; () banked
 12450  003C9E  6F97               	movwf	___aomod@sign& (0+255),b
 12451  003CA0                     
 12452                           ; BSR set to: 0
 12453  003CA0  BF8D               	btfsc	(___aomod@dividend+7)& (0+255),7,b
 12454  003CA2  EF57  F01E         	goto	u7370
 12455  003CA6  EF55  F01E         	goto	u7371
 12456  003CAA                     u7371:
 12457  003CAA  EF69  F01E         	goto	l6797
 12458  003CAE                     u7370:
 12459  003CAE                     
 12460                           ; BSR set to: 0
 12461  003CAE  1F8D               	comf	(___aomod@dividend+7)& (0+255),f,b
 12462  003CB0  1F8C               	comf	(___aomod@dividend+6)& (0+255),f,b
 12463  003CB2  1F8B               	comf	(___aomod@dividend+5)& (0+255),f,b
 12464  003CB4  1F8A               	comf	(___aomod@dividend+4)& (0+255),f,b
 12465  003CB6  1F89               	comf	(___aomod@dividend+3)& (0+255),f,b
 12466  003CB8  1F88               	comf	(___aomod@dividend+2)& (0+255),f,b
 12467  003CBA  1F87               	comf	(___aomod@dividend+1)& (0+255),f,b
 12468  003CBC  6D86               	negf	___aomod@dividend& (0+255),b
 12469  003CBE  0E00               	movlw	0
 12470  003CC0  2387               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 12471  003CC2  2388               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 12472  003CC4  2389               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 12473  003CC6  238A               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 12474  003CC8  238B               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 12475  003CCA  238C               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 12476  003CCC  238D               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 12477  003CCE                     
 12478                           ; BSR set to: 0
 12479  003CCE  0E01               	movlw	1
 12480  003CD0  6F97               	movwf	___aomod@sign& (0+255),b
 12481  003CD2                     l6797:
 12482                           
 12483                           ; BSR set to: 0
 12484  003CD2  BF95               	btfsc	(___aomod@divisor+7)& (0+255),7,b
 12485  003CD4  EF70  F01E         	goto	u7380
 12486  003CD8  EF6E  F01E         	goto	u7381
 12487  003CDC                     u7381:
 12488  003CDC  EF80  F01E         	goto	l6801
 12489  003CE0                     u7380:
 12490  003CE0                     
 12491                           ; BSR set to: 0
 12492  003CE0  1F95               	comf	(___aomod@divisor+7)& (0+255),f,b
 12493  003CE2  1F94               	comf	(___aomod@divisor+6)& (0+255),f,b
 12494  003CE4  1F93               	comf	(___aomod@divisor+5)& (0+255),f,b
 12495  003CE6  1F92               	comf	(___aomod@divisor+4)& (0+255),f,b
 12496  003CE8  1F91               	comf	(___aomod@divisor+3)& (0+255),f,b
 12497  003CEA  1F90               	comf	(___aomod@divisor+2)& (0+255),f,b
 12498  003CEC  1F8F               	comf	(___aomod@divisor+1)& (0+255),f,b
 12499  003CEE  6D8E               	negf	___aomod@divisor& (0+255),b
 12500  003CF0  0E00               	movlw	0
 12501  003CF2  238F               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 12502  003CF4  2390               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 12503  003CF6  2391               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 12504  003CF8  2392               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 12505  003CFA  2393               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 12506  003CFC  2394               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 12507  003CFE  2395               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 12508  003D00                     l6801:
 12509                           
 12510                           ; BSR set to: 0
 12511  003D00  518E               	movf	___aomod@divisor& (0+255),w,b
 12512  003D02  118F               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 12513  003D04  1190               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 12514  003D06  1191               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 12515  003D08  1192               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 12516  003D0A  1193               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 12517  003D0C  1194               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 12518  003D0E  1195               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 12519  003D10  B4D8               	btfsc	status,2,c
 12520  003D12  EF8D  F01E         	goto	u7391
 12521  003D16  EF8F  F01E         	goto	u7390
 12522  003D1A                     u7391:
 12523  003D1A  EFD7  F01E         	goto	l6817
 12524  003D1E                     u7390:
 12525  003D1E                     
 12526                           ; BSR set to: 0
 12527  003D1E  0E01               	movlw	1
 12528  003D20  6F96               	movwf	___aomod@counter& (0+255),b
 12529  003D22  EF9D  F01E         	goto	l6807
 12530  003D26                     l6805:
 12531                           
 12532                           ; BSR set to: 0
 12533  003D26  90D8               	bcf	status,0,c
 12534  003D28  378E               	rlcf	___aomod@divisor& (0+255),f,b
 12535  003D2A  378F               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 12536  003D2C  3790               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 12537  003D2E  3791               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 12538  003D30  3792               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 12539  003D32  3793               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 12540  003D34  3794               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 12541  003D36  3795               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 12542  003D38  2B96               	incf	___aomod@counter& (0+255),f,b
 12543  003D3A                     l6807:
 12544                           
 12545                           ; BSR set to: 0
 12546  003D3A  AF95               	btfss	(___aomod@divisor+7)& (0+255),7,b
 12547  003D3C  EFA2  F01E         	goto	u7401
 12548  003D40  EFA4  F01E         	goto	u7400
 12549  003D44                     u7401:
 12550  003D44  EF93  F01E         	goto	l6805
 12551  003D48                     u7400:
 12552  003D48                     l6809:
 12553                           
 12554                           ; BSR set to: 0
 12555  003D48  518E               	movf	___aomod@divisor& (0+255),w,b
 12556  003D4A  5D86               	subwf	___aomod@dividend& (0+255),w,b
 12557  003D4C  518F               	movf	(___aomod@divisor+1)& (0+255),w,b
 12558  003D4E  5987               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 12559  003D50  5190               	movf	(___aomod@divisor+2)& (0+255),w,b
 12560  003D52  5988               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 12561  003D54  5191               	movf	(___aomod@divisor+3)& (0+255),w,b
 12562  003D56  5989               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 12563  003D58  5192               	movf	(___aomod@divisor+4)& (0+255),w,b
 12564  003D5A  598A               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 12565  003D5C  5193               	movf	(___aomod@divisor+5)& (0+255),w,b
 12566  003D5E  598B               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 12567  003D60  5194               	movf	(___aomod@divisor+6)& (0+255),w,b
 12568  003D62  598C               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 12569  003D64  5195               	movf	(___aomod@divisor+7)& (0+255),w,b
 12570  003D66  598D               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 12571  003D68  A0D8               	btfss	status,0,c
 12572  003D6A  EFB9  F01E         	goto	u7411
 12573  003D6E  EFBB  F01E         	goto	u7410
 12574  003D72                     u7411:
 12575  003D72  EFCB  F01E         	goto	l6813
 12576  003D76                     u7410:
 12577  003D76                     
 12578                           ; BSR set to: 0
 12579  003D76  518E               	movf	___aomod@divisor& (0+255),w,b
 12580  003D78  5F86               	subwf	___aomod@dividend& (0+255),f,b
 12581  003D7A  518F               	movf	(___aomod@divisor+1)& (0+255),w,b
 12582  003D7C  5B87               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 12583  003D7E  5190               	movf	(___aomod@divisor+2)& (0+255),w,b
 12584  003D80  5B88               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 12585  003D82  5191               	movf	(___aomod@divisor+3)& (0+255),w,b
 12586  003D84  5B89               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 12587  003D86  5192               	movf	(___aomod@divisor+4)& (0+255),w,b
 12588  003D88  5B8A               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 12589  003D8A  5193               	movf	(___aomod@divisor+5)& (0+255),w,b
 12590  003D8C  5B8B               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 12591  003D8E  5194               	movf	(___aomod@divisor+6)& (0+255),w,b
 12592  003D90  5B8C               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 12593  003D92  5195               	movf	(___aomod@divisor+7)& (0+255),w,b
 12594  003D94  5B8D               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 12595  003D96                     l6813:
 12596                           
 12597                           ; BSR set to: 0
 12598  003D96  90D8               	bcf	status,0,c
 12599  003D98  3395               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 12600  003D9A  3394               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 12601  003D9C  3393               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 12602  003D9E  3392               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 12603  003DA0  3391               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 12604  003DA2  3390               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 12605  003DA4  338F               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 12606  003DA6  338E               	rrcf	___aomod@divisor& (0+255),f,b
 12607  003DA8                     
 12608                           ; BSR set to: 0
 12609  003DA8  2F96               	decfsz	___aomod@counter& (0+255),f,b
 12610  003DAA  EFA4  F01E         	goto	l6809
 12611  003DAE                     l6817:
 12612                           
 12613                           ; BSR set to: 0
 12614  003DAE  5197               	movf	___aomod@sign& (0+255),w,b
 12615  003DB0  B4D8               	btfsc	status,2,c
 12616  003DB2  EFDD  F01E         	goto	u7421
 12617  003DB6  EFDF  F01E         	goto	u7420
 12618  003DBA                     u7421:
 12619  003DBA  EFEF  F01E         	goto	l6821
 12620  003DBE                     u7420:
 12621  003DBE                     
 12622                           ; BSR set to: 0
 12623  003DBE  1F8D               	comf	(___aomod@dividend+7)& (0+255),f,b
 12624  003DC0  1F8C               	comf	(___aomod@dividend+6)& (0+255),f,b
 12625  003DC2  1F8B               	comf	(___aomod@dividend+5)& (0+255),f,b
 12626  003DC4  1F8A               	comf	(___aomod@dividend+4)& (0+255),f,b
 12627  003DC6  1F89               	comf	(___aomod@dividend+3)& (0+255),f,b
 12628  003DC8  1F88               	comf	(___aomod@dividend+2)& (0+255),f,b
 12629  003DCA  1F87               	comf	(___aomod@dividend+1)& (0+255),f,b
 12630  003DCC  6D86               	negf	___aomod@dividend& (0+255),b
 12631  003DCE  0E00               	movlw	0
 12632  003DD0  2387               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 12633  003DD2  2388               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 12634  003DD4  2389               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 12635  003DD6  238A               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 12636  003DD8  238B               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 12637  003DDA  238C               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 12638  003DDC  238D               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 12639  003DDE                     l6821:
 12640                           
 12641                           ; BSR set to: 0
 12642  003DDE  C086  F086         	movff	___aomod@dividend,?___aomod
 12643  003DE2  C087  F087         	movff	___aomod@dividend+1,?___aomod+1
 12644  003DE6  C088  F088         	movff	___aomod@dividend+2,?___aomod+2
 12645  003DEA  C089  F089         	movff	___aomod@dividend+3,?___aomod+3
 12646  003DEE  C08A  F08A         	movff	___aomod@dividend+4,?___aomod+4
 12647  003DF2  C08B  F08B         	movff	___aomod@dividend+5,?___aomod+5
 12648  003DF6  C08C  F08C         	movff	___aomod@dividend+6,?___aomod+6
 12649  003DFA  C08D  F08D         	movff	___aomod@dividend+7,?___aomod+7
 12650  003DFE                     
 12651                           ; BSR set to: 0
 12652  003DFE  0012               	return		;funcret
 12653  003E00                     __end_of___aomod:
 12654                           	opt callstack 0
 12655                           
 12656 ;; *************** function ___aodiv *****************
 12657 ;; Defined at:
 12658 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  dividend        8   38[BANK0 ] long long 
 12661 ;;  divisor         8   46[BANK0 ] long long 
 12662 ;; Auto vars:     Size  Location     Type
 12663 ;;  quotient        8   56[BANK0 ] long long 
 12664 ;;  sign            1   55[BANK0 ] unsigned char 
 12665 ;;  counter         1   54[BANK0 ] unsigned char 
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  8   38[BANK0 ] long long 
 12668 ;; Registers used:
 12669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12670 ;; Tracked objects:
 12671 ;;		On entry : 0/0
 12672 ;;		On exit  : 0/0
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12675 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12676 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12678 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12679 ;;Total ram usage:       26 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    7
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_dtoa
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text50
 12690  00398E                     __ptext50:
 12691                           	opt callstack 0
 12692  00398E                     ___aodiv:
 12693                           	opt callstack 18
 12694  00398E  0E00               	movlw	0
 12695  003990  0100               	movlb	0	; () banked
 12696  003992  6F97               	movwf	___aodiv@sign& (0+255),b
 12697  003994                     
 12698                           ; BSR set to: 0
 12699  003994  BF95               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 12700  003996  EFD1  F01C         	goto	u7300
 12701  00399A  EFCF  F01C         	goto	u7301
 12702  00399E                     u7301:
 12703  00399E  EFE3  F01C         	goto	l6753
 12704  0039A2                     u7300:
 12705  0039A2                     
 12706                           ; BSR set to: 0
 12707  0039A2  1F95               	comf	(___aodiv@divisor+7)& (0+255),f,b
 12708  0039A4  1F94               	comf	(___aodiv@divisor+6)& (0+255),f,b
 12709  0039A6  1F93               	comf	(___aodiv@divisor+5)& (0+255),f,b
 12710  0039A8  1F92               	comf	(___aodiv@divisor+4)& (0+255),f,b
 12711  0039AA  1F91               	comf	(___aodiv@divisor+3)& (0+255),f,b
 12712  0039AC  1F90               	comf	(___aodiv@divisor+2)& (0+255),f,b
 12713  0039AE  1F8F               	comf	(___aodiv@divisor+1)& (0+255),f,b
 12714  0039B0  6D8E               	negf	___aodiv@divisor& (0+255),b
 12715  0039B2  0E00               	movlw	0
 12716  0039B4  238F               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 12717  0039B6  2390               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 12718  0039B8  2391               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 12719  0039BA  2392               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 12720  0039BC  2393               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 12721  0039BE  2394               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 12722  0039C0  2395               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 12723  0039C2                     
 12724                           ; BSR set to: 0
 12725  0039C2  0E01               	movlw	1
 12726  0039C4  6F97               	movwf	___aodiv@sign& (0+255),b
 12727  0039C6                     l6753:
 12728                           
 12729                           ; BSR set to: 0
 12730  0039C6  BF8D               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 12731  0039C8  EFEA  F01C         	goto	u7310
 12732  0039CC  EFE8  F01C         	goto	u7311
 12733  0039D0                     u7311:
 12734  0039D0  EFFC  F01C         	goto	l6759
 12735  0039D4                     u7310:
 12736  0039D4                     
 12737                           ; BSR set to: 0
 12738  0039D4  1F8D               	comf	(___aodiv@dividend+7)& (0+255),f,b
 12739  0039D6  1F8C               	comf	(___aodiv@dividend+6)& (0+255),f,b
 12740  0039D8  1F8B               	comf	(___aodiv@dividend+5)& (0+255),f,b
 12741  0039DA  1F8A               	comf	(___aodiv@dividend+4)& (0+255),f,b
 12742  0039DC  1F89               	comf	(___aodiv@dividend+3)& (0+255),f,b
 12743  0039DE  1F88               	comf	(___aodiv@dividend+2)& (0+255),f,b
 12744  0039E0  1F87               	comf	(___aodiv@dividend+1)& (0+255),f,b
 12745  0039E2  6D86               	negf	___aodiv@dividend& (0+255),b
 12746  0039E4  0E00               	movlw	0
 12747  0039E6  2387               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 12748  0039E8  2388               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 12749  0039EA  2389               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 12750  0039EC  238A               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 12751  0039EE  238B               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 12752  0039F0  238C               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 12753  0039F2  238D               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 12754  0039F4                     
 12755                           ; BSR set to: 0
 12756  0039F4  0E01               	movlw	1
 12757  0039F6  1B97               	xorwf	___aodiv@sign& (0+255),f,b
 12758  0039F8                     l6759:
 12759                           
 12760                           ; BSR set to: 0
 12761  0039F8  EE20  F098         	lfsr	2,___aodiv@quotient
 12762  0039FC  0E07               	movlw	7
 12763  0039FE                     u7321:
 12764  0039FE  6ADE               	clrf	postinc2,c
 12765  003A00  06E8               	decf	wreg,f,c
 12766  003A02  E2FD               	bc	u7321
 12767  003A04                     
 12768                           ; BSR set to: 0
 12769  003A04  518E               	movf	___aodiv@divisor& (0+255),w,b
 12770  003A06  118F               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 12771  003A08  1190               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 12772  003A0A  1191               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 12773  003A0C  1192               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 12774  003A0E  1193               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 12775  003A10  1194               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 12776  003A12  1195               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 12777  003A14  B4D8               	btfsc	status,2,c
 12778  003A16  EF0F  F01D         	goto	u7331
 12779  003A1A  EF11  F01D         	goto	u7330
 12780  003A1E                     u7331:
 12781  003A1E  EF63  F01D         	goto	l6781
 12782  003A22                     u7330:
 12783  003A22                     
 12784                           ; BSR set to: 0
 12785  003A22  0E01               	movlw	1
 12786  003A24  6F96               	movwf	___aodiv@counter& (0+255),b
 12787  003A26  EF1F  F01D         	goto	l6767
 12788  003A2A                     l6765:
 12789                           
 12790                           ; BSR set to: 0
 12791  003A2A  90D8               	bcf	status,0,c
 12792  003A2C  378E               	rlcf	___aodiv@divisor& (0+255),f,b
 12793  003A2E  378F               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 12794  003A30  3790               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 12795  003A32  3791               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 12796  003A34  3792               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 12797  003A36  3793               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 12798  003A38  3794               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 12799  003A3A  3795               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 12800  003A3C  2B96               	incf	___aodiv@counter& (0+255),f,b
 12801  003A3E                     l6767:
 12802                           
 12803                           ; BSR set to: 0
 12804  003A3E  AF95               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 12805  003A40  EF24  F01D         	goto	u7341
 12806  003A44  EF26  F01D         	goto	u7340
 12807  003A48                     u7341:
 12808  003A48  EF15  F01D         	goto	l6765
 12809  003A4C                     u7340:
 12810  003A4C                     l6769:
 12811                           
 12812                           ; BSR set to: 0
 12813  003A4C  90D8               	bcf	status,0,c
 12814  003A4E  3798               	rlcf	___aodiv@quotient& (0+255),f,b
 12815  003A50  3799               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 12816  003A52  379A               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 12817  003A54  379B               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 12818  003A56  379C               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 12819  003A58  379D               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 12820  003A5A  379E               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 12821  003A5C  379F               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 12822  003A5E                     
 12823                           ; BSR set to: 0
 12824  003A5E  518E               	movf	___aodiv@divisor& (0+255),w,b
 12825  003A60  5D86               	subwf	___aodiv@dividend& (0+255),w,b
 12826  003A62  518F               	movf	(___aodiv@divisor+1)& (0+255),w,b
 12827  003A64  5987               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 12828  003A66  5190               	movf	(___aodiv@divisor+2)& (0+255),w,b
 12829  003A68  5988               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 12830  003A6A  5191               	movf	(___aodiv@divisor+3)& (0+255),w,b
 12831  003A6C  5989               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 12832  003A6E  5192               	movf	(___aodiv@divisor+4)& (0+255),w,b
 12833  003A70  598A               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 12834  003A72  5193               	movf	(___aodiv@divisor+5)& (0+255),w,b
 12835  003A74  598B               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 12836  003A76  5194               	movf	(___aodiv@divisor+6)& (0+255),w,b
 12837  003A78  598C               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 12838  003A7A  5195               	movf	(___aodiv@divisor+7)& (0+255),w,b
 12839  003A7C  598D               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 12840  003A7E  A0D8               	btfss	status,0,c
 12841  003A80  EF44  F01D         	goto	u7351
 12842  003A84  EF46  F01D         	goto	u7350
 12843  003A88                     u7351:
 12844  003A88  EF57  F01D         	goto	l6777
 12845  003A8C                     u7350:
 12846  003A8C                     
 12847                           ; BSR set to: 0
 12848  003A8C  518E               	movf	___aodiv@divisor& (0+255),w,b
 12849  003A8E  5F86               	subwf	___aodiv@dividend& (0+255),f,b
 12850  003A90  518F               	movf	(___aodiv@divisor+1)& (0+255),w,b
 12851  003A92  5B87               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 12852  003A94  5190               	movf	(___aodiv@divisor+2)& (0+255),w,b
 12853  003A96  5B88               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 12854  003A98  5191               	movf	(___aodiv@divisor+3)& (0+255),w,b
 12855  003A9A  5B89               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 12856  003A9C  5192               	movf	(___aodiv@divisor+4)& (0+255),w,b
 12857  003A9E  5B8A               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 12858  003AA0  5193               	movf	(___aodiv@divisor+5)& (0+255),w,b
 12859  003AA2  5B8B               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 12860  003AA4  5194               	movf	(___aodiv@divisor+6)& (0+255),w,b
 12861  003AA6  5B8C               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 12862  003AA8  5195               	movf	(___aodiv@divisor+7)& (0+255),w,b
 12863  003AAA  5B8D               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 12864  003AAC                     
 12865                           ; BSR set to: 0
 12866  003AAC  8198               	bsf	___aodiv@quotient& (0+255),0,b
 12867  003AAE                     l6777:
 12868                           
 12869                           ; BSR set to: 0
 12870  003AAE  90D8               	bcf	status,0,c
 12871  003AB0  3395               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 12872  003AB2  3394               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 12873  003AB4  3393               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 12874  003AB6  3392               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 12875  003AB8  3391               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 12876  003ABA  3390               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 12877  003ABC  338F               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 12878  003ABE  338E               	rrcf	___aodiv@divisor& (0+255),f,b
 12879  003AC0                     
 12880                           ; BSR set to: 0
 12881  003AC0  2F96               	decfsz	___aodiv@counter& (0+255),f,b
 12882  003AC2  EF26  F01D         	goto	l6769
 12883  003AC6                     l6781:
 12884                           
 12885                           ; BSR set to: 0
 12886  003AC6  5197               	movf	___aodiv@sign& (0+255),w,b
 12887  003AC8  B4D8               	btfsc	status,2,c
 12888  003ACA  EF69  F01D         	goto	u7361
 12889  003ACE  EF6B  F01D         	goto	u7360
 12890  003AD2                     u7361:
 12891  003AD2  EF7B  F01D         	goto	l6785
 12892  003AD6                     u7360:
 12893  003AD6                     
 12894                           ; BSR set to: 0
 12895  003AD6  1F9F               	comf	(___aodiv@quotient+7)& (0+255),f,b
 12896  003AD8  1F9E               	comf	(___aodiv@quotient+6)& (0+255),f,b
 12897  003ADA  1F9D               	comf	(___aodiv@quotient+5)& (0+255),f,b
 12898  003ADC  1F9C               	comf	(___aodiv@quotient+4)& (0+255),f,b
 12899  003ADE  1F9B               	comf	(___aodiv@quotient+3)& (0+255),f,b
 12900  003AE0  1F9A               	comf	(___aodiv@quotient+2)& (0+255),f,b
 12901  003AE2  1F99               	comf	(___aodiv@quotient+1)& (0+255),f,b
 12902  003AE4  6D98               	negf	___aodiv@quotient& (0+255),b
 12903  003AE6  0E00               	movlw	0
 12904  003AE8  2399               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 12905  003AEA  239A               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 12906  003AEC  239B               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 12907  003AEE  239C               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 12908  003AF0  239D               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 12909  003AF2  239E               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 12910  003AF4  239F               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 12911  003AF6                     l6785:
 12912                           
 12913                           ; BSR set to: 0
 12914  003AF6  C098  F086         	movff	___aodiv@quotient,?___aodiv
 12915  003AFA  C099  F087         	movff	___aodiv@quotient+1,?___aodiv+1
 12916  003AFE  C09A  F088         	movff	___aodiv@quotient+2,?___aodiv+2
 12917  003B02  C09B  F089         	movff	___aodiv@quotient+3,?___aodiv+3
 12918  003B06  C09C  F08A         	movff	___aodiv@quotient+4,?___aodiv+4
 12919  003B0A  C09D  F08B         	movff	___aodiv@quotient+5,?___aodiv+5
 12920  003B0E  C09E  F08C         	movff	___aodiv@quotient+6,?___aodiv+6
 12921  003B12  C09F  F08D         	movff	___aodiv@quotient+7,?___aodiv+7
 12922  003B16                     
 12923                           ; BSR set to: 0
 12924  003B16  0012               	return		;funcret
 12925  003B18                     __end_of___aodiv:
 12926                           	opt callstack 0
 12927                           
 12928 ;; *************** function _ctoa *****************
 12929 ;; Defined at:
 12930 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
 12933 ;;		 -> vsnprintf@f(6), NULL(0), 
 12934 ;;  c               1   69[BANK0 ] unsigned char 
 12935 ;; Auto vars:     Size  Location     Type
 12936 ;;  w               2   70[BANK0 ] int 
 12937 ;;  l               2    0        int 
 12938 ;; Return value:  Size  Location     Type
 12939 ;;                  2   67[BANK0 ] int 
 12940 ;; Registers used:
 12941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12942 ;; Tracked objects:
 12943 ;;		On entry : 0/0
 12944 ;;		On exit  : 0/0
 12945 ;;		Unchanged: 0/0
 12946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12947 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12948 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12950 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12951 ;;Total ram usage:        5 bytes
 12952 ;; Hardware stack levels used:    1
 12953 ;; Hardware stack levels required when called:   12
 12954 ;; This function calls:
 12955 ;;		_pad
 12956 ;; This function is called by:
 12957 ;;		_vfpfcnvrt
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text51
 12962  004C5E                     __ptext51:
 12963                           	opt callstack 0
 12964  004C5E                     _ctoa:
 12965                           	opt callstack 14
 12966  004C5E                     
 12967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 12968  004C5E  0100               	movlb	0	; () banked
 12969  004C60  51C7               	movf	_width& (0+255),w,b
 12970  004C62  11C8               	iorwf	(_width+1)& (0+255),w,b
 12971  004C64  A4D8               	btfss	status,2,c
 12972  004C66  EF37  F026         	goto	u7511
 12973  004C6A  EF39  F026         	goto	u7510
 12974  004C6E                     u7511:
 12975  004C6E  EF3F  F026         	goto	l6875
 12976  004C72                     u7510:
 12977  004C72                     
 12978                           ; BSR set to: 0
 12979  004C72  C0C7  F0A6         	movff	_width,ctoa@w
 12980  004C76  C0C8  F0A7         	movff	_width+1,ctoa@w+1
 12981  004C7A  EF45  F026         	goto	l6877
 12982  004C7E                     l6875:
 12983                           
 12984                           ; BSR set to: 0
 12985  004C7E  0EFF               	movlw	255
 12986  004C80  25C7               	addwf	_width& (0+255),w,b
 12987  004C82  6FA6               	movwf	ctoa@w& (0+255),b
 12988  004C84  0EFF               	movlw	255
 12989  004C86  21C8               	addwfc	(_width+1)& (0+255),w,b
 12990  004C88  6FA7               	movwf	(ctoa@w+1)& (0+255),b
 12991  004C8A                     l6877:
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 12995  004C8A  C0A5  F185         	movff	ctoa@c,_dbuf
 12996  004C8E                     
 12997                           ; BSR set to: 0
 12998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 12999  004C8E  0E00               	movlw	0
 13000  004C90  0101               	movlb	1	; () banked
 13001  004C92  6F86               	movwf	(_dbuf+1)& (0+255),b
 13002  004C94                     
 13003                           ; BSR set to: 1
 13004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 13005  004C94  C0A3  F098         	movff	ctoa@fp,pad@fp
 13006  004C98  C0A4  F099         	movff	ctoa@fp+1,pad@fp+1
 13007  004C9C  0E85               	movlw	low _dbuf
 13008  004C9E  0100               	movlb	0	; () banked
 13009  004CA0  6F9A               	movwf	pad@buf& (0+255),b
 13010  004CA2  0E01               	movlw	high _dbuf
 13011  004CA4  6F9B               	movwf	(pad@buf+1)& (0+255),b
 13012  004CA6  C0A6  F09C         	movff	ctoa@w,pad@p
 13013  004CAA  C0A7  F09D         	movff	ctoa@w+1,pad@p+1
 13014  004CAE  EC60  F024         	call	_pad	;wreg free
 13015  004CB2  C098  F0A3         	movff	?_pad,?_ctoa
 13016  004CB6  C099  F0A4         	movff	?_pad+1,?_ctoa+1
 13017  004CBA  0012               	return		;funcret
 13018  004CBC                     __end_of_ctoa:
 13019                           	opt callstack 0
 13020                           
 13021 ;; *************** function _pad *****************
 13022 ;; Defined at:
 13023 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
 13026 ;;		 -> vsnprintf@f(6), NULL(0), 
 13027 ;;  buf             2   58[BANK0 ] PTR unsigned char 
 13028 ;;		 -> dbuf(32), 
 13029 ;;  p               2   60[BANK0 ] int 
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;  w               2   65[BANK0 ] int 
 13032 ;;  i               2   63[BANK0 ] int 
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  2   56[BANK0 ] int 
 13035 ;; Registers used:
 13036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13042 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13043 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13045 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13046 ;;Total ram usage:       11 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:   11
 13049 ;; This function calls:
 13050 ;;		_fputc
 13051 ;;		_fputs
 13052 ;;		_strlen
 13053 ;; This function is called by:
 13054 ;;		_ctoa
 13055 ;;		_dtoa
 13056 ;;		_otoa
 13057 ;;		_utoa
 13058 ;;		_xtoa
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062                           	psect	text52
 13063  0048C0                     __ptext52:
 13064                           	opt callstack 0
 13065  0048C0                     _pad:
 13066                           	opt callstack 14
 13067  0048C0                     
 13068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13069  0048C0  0100               	movlb	0	; () banked
 13070  0048C2  A1CB               	btfss	_flags& (0+255),0,b
 13071  0048C4  EF66  F024         	goto	u7191
 13072  0048C8  EF68  F024         	goto	u7190
 13073  0048CC                     u7191:
 13074  0048CC  EF72  F024         	goto	l6709
 13075  0048D0                     u7190:
 13076  0048D0                     
 13077                           ; BSR set to: 0
 13078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13079  0048D0  C09A  F091         	movff	pad@buf,fputs@s
 13080  0048D4  C09B  F092         	movff	pad@buf+1,fputs@s+1
 13081  0048D8  C098  F093         	movff	pad@fp,fputs@fp
 13082  0048DC  C099  F094         	movff	pad@fp+1,fputs@fp+1
 13083  0048E0  ECFA  F026         	call	_fputs	;wreg free
 13084  0048E4                     l6709:
 13085                           
 13086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13087  0048E4  0100               	movlb	0	; () banked
 13088  0048E6  BF9D               	btfsc	(pad@p+1)& (0+255),7,b
 13089  0048E8  EF78  F024         	goto	u7201
 13090  0048EC  EF7A  F024         	goto	u7200
 13091  0048F0                     u7201:
 13092  0048F0  EF80  F024         	goto	l6713
 13093  0048F4                     u7200:
 13094  0048F4                     
 13095                           ; BSR set to: 0
 13096  0048F4  C09C  F0A1         	movff	pad@p,pad@w
 13097  0048F8  C09D  F0A2         	movff	pad@p+1,pad@w+1
 13098  0048FC  EF84  F024         	goto	l720
 13099  004900                     l6713:
 13100                           
 13101                           ; BSR set to: 0
 13102  004900  0E00               	movlw	0
 13103  004902  6FA2               	movwf	(pad@w+1)& (0+255),b
 13104  004904  0E00               	movlw	0
 13105  004906  6FA1               	movwf	pad@w& (0+255),b
 13106  004908                     l720:
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13110  004908  0E00               	movlw	0
 13111  00490A  6FA0               	movwf	(pad@i+1)& (0+255),b
 13112  00490C  0E00               	movlw	0
 13113  00490E  6F9F               	movwf	pad@i& (0+255),b
 13114                           
 13115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13116  004910  EF97  F024         	goto	l6719
 13117  004914                     l6715:
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13121  004914  0E00               	movlw	0
 13122  004916  6F89               	movwf	(fputc@c+1)& (0+255),b
 13123  004918  0E20               	movlw	32
 13124  00491A  6F88               	movwf	fputc@c& (0+255),b
 13125  00491C  C098  F08A         	movff	pad@fp,fputc@fp
 13126  004920  C099  F08B         	movff	pad@fp+1,fputc@fp+1
 13127  004924  ECFA  F023         	call	_fputc	;wreg free
 13128  004928                     
 13129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13130  004928  0100               	movlb	0	; () banked
 13131  00492A  4B9F               	infsnz	pad@i& (0+255),f,b
 13132  00492C  2BA0               	incf	(pad@i+1)& (0+255),f,b
 13133  00492E                     l6719:
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13137  00492E  51A1               	movf	pad@w& (0+255),w,b
 13138  004930  5D9F               	subwf	pad@i& (0+255),w,b
 13139  004932  51A0               	movf	(pad@i+1)& (0+255),w,b
 13140  004934  0A80               	xorlw	128
 13141  004936  6F9E               	movwf	??_pad& (0+255),b
 13142  004938  51A2               	movf	(pad@w+1)& (0+255),w,b
 13143  00493A  0A80               	xorlw	128
 13144  00493C  599E               	subwfb	??_pad& (0+255),w,b
 13145  00493E  A0D8               	btfss	status,0,c
 13146  004940  EFA4  F024         	goto	u7211
 13147  004944  EFA6  F024         	goto	u7210
 13148  004948                     u7211:
 13149  004948  EF8A  F024         	goto	l6715
 13150  00494C                     u7210:
 13151  00494C                     
 13152                           ; BSR set to: 0
 13153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13154  00494C  B1CB               	btfsc	_flags& (0+255),0,b
 13155  00494E  EFAB  F024         	goto	u7221
 13156  004952  EFAD  F024         	goto	u7220
 13157  004956                     u7221:
 13158  004956  EFB7  F024         	goto	l6723
 13159  00495A                     u7220:
 13160  00495A                     
 13161                           ; BSR set to: 0
 13162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13163  00495A  C09A  F091         	movff	pad@buf,fputs@s
 13164  00495E  C09B  F092         	movff	pad@buf+1,fputs@s+1
 13165  004962  C098  F093         	movff	pad@fp,fputs@fp
 13166  004966  C099  F094         	movff	pad@fp+1,fputs@fp+1
 13167  00496A  ECFA  F026         	call	_fputs	;wreg free
 13168  00496E                     l6723:
 13169                           
 13170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13171  00496E  C09A  F086         	movff	pad@buf,strlen@s
 13172  004972  C09B  F087         	movff	pad@buf+1,strlen@s+1
 13173  004976  EC21  F028         	call	_strlen	;wreg free
 13174  00497A  0100               	movlb	0	; () banked
 13175  00497C  51A1               	movf	pad@w& (0+255),w,b
 13176  00497E  2586               	addwf	?_strlen& (0+255),w,b
 13177  004980  6F98               	movwf	?_pad& (0+255),b
 13178  004982  51A2               	movf	(pad@w+1)& (0+255),w,b
 13179  004984  2187               	addwfc	(?_strlen+1)& (0+255),w,b
 13180  004986  6F99               	movwf	(?_pad+1)& (0+255),b
 13181  004988                     
 13182                           ; BSR set to: 0
 13183  004988  0012               	return		;funcret
 13184  00498A                     __end_of_pad:
 13185                           	opt callstack 0
 13186                           
 13187 ;; *************** function _strlen *****************
 13188 ;; Defined at:
 13189 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;  s               2   38[BANK0 ] PTR const unsigned char 
 13192 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 13193 ;; Auto vars:     Size  Location     Type
 13194 ;;  a               2   40[BANK0 ] PTR const unsigned char 
 13195 ;;		 -> ?_snprintf(2), ?_printf(2), stoa@nuls(7), dbuf(32), 
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  2   38[BANK0 ] unsigned int 
 13198 ;; Registers used:
 13199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/0
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13206 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13208 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13209 ;;Total ram usage:        4 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; Hardware stack levels required when called:    7
 13212 ;; This function calls:
 13213 ;;		Nothing
 13214 ;; This function is called by:
 13215 ;;		_pad
 13216 ;;		_stoa
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text53
 13221  005042                     __ptext53:
 13222                           	opt callstack 0
 13223  005042                     _strlen:
 13224                           	opt callstack 17
 13225  005042  C086  F088         	movff	strlen@s,strlen@a
 13226  005046  C087  F089         	movff	strlen@s+1,strlen@a+1
 13227  00504A  EF2A  F028         	goto	l6689
 13228  00504E                     l6687:
 13229  00504E  0100               	movlb	0	; () banked
 13230  005050  4B86               	infsnz	strlen@s& (0+255),f,b
 13231  005052  2B87               	incf	(strlen@s+1)& (0+255),f,b
 13232  005054                     l6689:
 13233  005054  C086  FFD9         	movff	strlen@s,fsr2l
 13234  005058  C087  FFDA         	movff	strlen@s+1,fsr2h
 13235  00505C  50DF               	movf	indf2,w,c
 13236  00505E  A4D8               	btfss	status,2,c
 13237  005060  EF34  F028         	goto	u7141
 13238  005064  EF36  F028         	goto	u7140
 13239  005068                     u7141:
 13240  005068  EF27  F028         	goto	l6687
 13241  00506C                     u7140:
 13242  00506C  0100               	movlb	0	; () banked
 13243  00506E  5188               	movf	strlen@a& (0+255),w,b
 13244  005070  5D86               	subwf	strlen@s& (0+255),w,b
 13245  005072  6F86               	movwf	?_strlen& (0+255),b
 13246  005074  5189               	movf	(strlen@a+1)& (0+255),w,b
 13247  005076  5987               	subwfb	(strlen@s+1)& (0+255),w,b
 13248  005078  6F87               	movwf	(?_strlen+1)& (0+255),b
 13249  00507A                     
 13250                           ; BSR set to: 0
 13251  00507A  0012               	return		;funcret
 13252  00507C                     __end_of_strlen:
 13253                           	opt callstack 0
 13254                           
 13255 ;; *************** function _fputs *****************
 13256 ;; Defined at:
 13257 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  s               2   49[BANK0 ] PTR const unsigned char 
 13260 ;;		 -> dbuf(32), 
 13261 ;;  fp              2   51[BANK0 ] PTR struct _IO_FILE
 13262 ;;		 -> vsnprintf@f(6), NULL(0), 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;  i               2   54[BANK0 ] int 
 13265 ;;  c               1   53[BANK0 ] unsigned char 
 13266 ;; Return value:  Size  Location     Type
 13267 ;;                  2   49[BANK0 ] int 
 13268 ;; Registers used:
 13269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13270 ;; Tracked objects:
 13271 ;;		On entry : 0/0
 13272 ;;		On exit  : 0/0
 13273 ;;		Unchanged: 0/0
 13274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13275 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13276 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13278 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13279 ;;Total ram usage:        7 bytes
 13280 ;; Hardware stack levels used:    1
 13281 ;; Hardware stack levels required when called:   10
 13282 ;; This function calls:
 13283 ;;		_fputc
 13284 ;; This function is called by:
 13285 ;;		_pad
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text54
 13290  004DF4                     __ptext54:
 13291                           	opt callstack 0
 13292  004DF4                     _fputs:
 13293                           	opt callstack 14
 13294  004DF4  0E00               	movlw	0
 13295  004DF6  0100               	movlb	0	; () banked
 13296  004DF8  6F97               	movwf	(fputs@i+1)& (0+255),b
 13297  004DFA  0E00               	movlw	0
 13298  004DFC  6F96               	movwf	fputs@i& (0+255),b
 13299  004DFE  EF0D  F027         	goto	l6683
 13300  004E02                     l6679:
 13301                           
 13302                           ; BSR set to: 0
 13303  004E02  C095  F088         	movff	fputs@c,fputc@c
 13304  004E06  6B89               	clrf	(fputc@c+1)& (0+255),b
 13305  004E08  C093  F08A         	movff	fputs@fp,fputc@fp
 13306  004E0C  C094  F08B         	movff	fputs@fp+1,fputc@fp+1
 13307  004E10  ECFA  F023         	call	_fputc	;wreg free
 13308  004E14  0100               	movlb	0	; () banked
 13309  004E16  4B96               	infsnz	fputs@i& (0+255),f,b
 13310  004E18  2B97               	incf	(fputs@i+1)& (0+255),f,b
 13311  004E1A                     l6683:
 13312                           
 13313                           ; BSR set to: 0
 13314  004E1A  5196               	movf	fputs@i& (0+255),w,b
 13315  004E1C  2591               	addwf	fputs@s& (0+255),w,b
 13316  004E1E  6ED9               	movwf	fsr2l,c
 13317  004E20  5197               	movf	(fputs@i+1)& (0+255),w,b
 13318  004E22  2192               	addwfc	(fputs@s+1)& (0+255),w,b
 13319  004E24  6EDA               	movwf	fsr2h,c
 13320  004E26  50DF               	movf	indf2,w,c
 13321  004E28  6F95               	movwf	fputs@c& (0+255),b
 13322  004E2A  5195               	movf	fputs@c& (0+255),w,b
 13323  004E2C  A4D8               	btfss	status,2,c
 13324  004E2E  EF1B  F027         	goto	u7131
 13325  004E32  EF1D  F027         	goto	u7130
 13326  004E36                     u7131:
 13327  004E36  EF01  F027         	goto	l6679
 13328  004E3A                     u7130:
 13329  004E3A                     
 13330                           ; BSR set to: 0
 13331  004E3A  0012               	return		;funcret
 13332  004E3C                     __end_of_fputs:
 13333                           	opt callstack 0
 13334                           
 13335 ;; *************** function _fputc *****************
 13336 ;; Defined at:
 13337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;  c               2   40[BANK0 ] int 
 13340 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
 13341 ;;		 -> vsnprintf@f(6), NULL(0), 
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  2   40[BANK0 ] int 
 13346 ;; Registers used:
 13347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13355 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13356 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13357 ;;Total ram usage:        9 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; Hardware stack levels required when called:    9
 13360 ;; This function calls:
 13361 ;;		_putch
 13362 ;; This function is called by:
 13363 ;;		_pad
 13364 ;;		_stoa
 13365 ;;		_vfpfcnvrt
 13366 ;;		_fputs
 13367 ;; This function uses a non-reentrant model
 13368 ;;
 13369                           
 13370                           	psect	text55
 13371  0047F4                     __ptext55:
 13372                           	opt callstack 0
 13373  0047F4                     _fputc:
 13374                           	opt callstack 14
 13375  0047F4  0100               	movlb	0	; () banked
 13376  0047F6  518A               	movf	fputc@fp& (0+255),w,b
 13377  0047F8  118B               	iorwf	(fputc@fp+1)& (0+255),w,b
 13378  0047FA  B4D8               	btfsc	status,2,c
 13379  0047FC  EF02  F024         	goto	u7091
 13380  004800  EF04  F024         	goto	u7090
 13381  004804                     u7091:
 13382  004804  EF0D  F024         	goto	l6667
 13383  004808                     u7090:
 13384  004808                     
 13385                           ; BSR set to: 0
 13386  004808  518A               	movf	fputc@fp& (0+255),w,b
 13387  00480A  118B               	iorwf	(fputc@fp+1)& (0+255),w,b
 13388  00480C  A4D8               	btfss	status,2,c
 13389  00480E  EF0B  F024         	goto	u7101
 13390  004812  EF0D  F024         	goto	u7100
 13391  004816                     u7101:
 13392  004816  EF12  F024         	goto	l6669
 13393  00481A                     u7100:
 13394  00481A                     l6667:
 13395                           
 13396                           ; BSR set to: 0
 13397  00481A  5188               	movf	fputc@c& (0+255),w,b
 13398  00481C  EC0B  F02A         	call	_putch
 13399  004820  EF5F  F024         	goto	l1674
 13400  004824                     l6669:
 13401                           
 13402                           ; BSR set to: 0
 13403  004824  EE20 F004          	lfsr	2,4
 13404  004828  518A               	movf	fputc@fp& (0+255),w,b
 13405  00482A  26D9               	addwf	fsr2l,f,c
 13406  00482C  518B               	movf	(fputc@fp+1)& (0+255),w,b
 13407  00482E  22DA               	addwfc	fsr2h,f,c
 13408  004830  50DE               	movf	postinc2,w,c
 13409  004832  10DE               	iorwf	postinc2,w,c
 13410  004834  B4D8               	btfsc	status,2,c
 13411  004836  EF1F  F024         	goto	u7111
 13412  00483A  EF21  F024         	goto	u7110
 13413  00483E                     u7111:
 13414  00483E  EF3C  F024         	goto	l6673
 13415  004842                     u7110:
 13416  004842                     
 13417                           ; BSR set to: 0
 13418  004842  EE20 F004          	lfsr	2,4
 13419  004846  518A               	movf	fputc@fp& (0+255),w,b
 13420  004848  26D9               	addwf	fsr2l,f,c
 13421  00484A  518B               	movf	(fputc@fp+1)& (0+255),w,b
 13422  00484C  22DA               	addwfc	fsr2h,f,c
 13423  00484E  EE10 F002          	lfsr	1,2
 13424  004852  518A               	movf	fputc@fp& (0+255),w,b
 13425  004854  26E1               	addwf	fsr1l,f,c
 13426  004856  518B               	movf	(fputc@fp+1)& (0+255),w,b
 13427  004858  22E2               	addwfc	fsr1h,f,c
 13428  00485A  50DE               	movf	postinc2,w,c
 13429  00485C  5CE6               	subwf	postinc1,w,c
 13430  00485E  50E6               	movf	postinc1,w,c
 13431  004860  0A80               	xorlw	128
 13432  004862  6F90               	movwf	(??_fputc+4)& (0+255),b
 13433  004864  50DE               	movf	postinc2,w,c
 13434  004866  0A80               	xorlw	128
 13435  004868  5990               	subwfb	(??_fputc+4)& (0+255),w,b
 13436  00486A  B0D8               	btfsc	status,0,c
 13437  00486C  EF3A  F024         	goto	u7121
 13438  004870  EF3C  F024         	goto	u7120
 13439  004874                     u7121:
 13440  004874  EF5F  F024         	goto	l1674
 13441  004878                     u7120:
 13442  004878                     l6673:
 13443                           
 13444                           ; BSR set to: 0
 13445  004878  EE20 F002          	lfsr	2,2
 13446  00487C  518A               	movf	fputc@fp& (0+255),w,b
 13447  00487E  26D9               	addwf	fsr2l,f,c
 13448  004880  518B               	movf	(fputc@fp+1)& (0+255),w,b
 13449  004882  22DA               	addwfc	fsr2h,f,c
 13450  004884  CFDE F08C          	movff	postinc2,??_fputc
 13451  004888  CFDD F08D          	movff	postdec2,??_fputc+1
 13452  00488C  C08A  FFD9         	movff	fputc@fp,fsr2l
 13453  004890  C08B  FFDA         	movff	fputc@fp+1,fsr2h
 13454  004894  CFDE F08E          	movff	postinc2,??_fputc+2
 13455  004898  CFDD F08F          	movff	postdec2,??_fputc+3
 13456  00489C  518C               	movf	??_fputc& (0+255),w,b
 13457  00489E  258E               	addwf	(??_fputc+2)& (0+255),w,b
 13458  0048A0  6ED9               	movwf	fsr2l,c
 13459  0048A2  518D               	movf	(??_fputc+1)& (0+255),w,b
 13460  0048A4  218F               	addwfc	(??_fputc+3)& (0+255),w,b
 13461  0048A6  6EDA               	movwf	fsr2h,c
 13462  0048A8  C088  FFDF         	movff	fputc@c,indf2
 13463  0048AC  EE20 F002          	lfsr	2,2
 13464  0048B0  518A               	movf	fputc@fp& (0+255),w,b
 13465  0048B2  26D9               	addwf	fsr2l,f,c
 13466  0048B4  518B               	movf	(fputc@fp+1)& (0+255),w,b
 13467  0048B6  22DA               	addwfc	fsr2h,f,c
 13468  0048B8  2ADE               	incf	postinc2,f,c
 13469  0048BA  0E00               	movlw	0
 13470  0048BC  22DD               	addwfc	postdec2,f,c
 13471  0048BE                     l1674:
 13472  0048BE  0012               	return		;funcret
 13473  0048C0                     __end_of_fputc:
 13474                           	opt callstack 0
 13475                           
 13476 ;; *************** function _putch *****************
 13477 ;; Defined at:
 13478 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;  txData          1    wreg     unsigned char 
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;  txData          1   39[BANK0 ] unsigned char 
 13483 ;; Return value:  Size  Location     Type
 13484 ;;                  1    wreg      void 
 13485 ;; Registers used:
 13486 ;;		wreg, status,2, cstack
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/0
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13495 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13496 ;;Total ram usage:        1 bytes
 13497 ;; Hardware stack levels used:    1
 13498 ;; Hardware stack levels required when called:    8
 13499 ;; This function calls:
 13500 ;;		_EUSART1_Write
 13501 ;; This function is called by:
 13502 ;;		_fputc
 13503 ;; This function uses a non-reentrant model
 13504 ;;
 13505                           
 13506                           	psect	text56
 13507  005416                     __ptext56:
 13508                           	opt callstack 0
 13509  005416                     _putch:
 13510                           	opt callstack 14
 13511                           
 13512                           ;incstack = 0
 13513                           ;putch@txData stored from wreg
 13514  005416  0100               	movlb	0	; () banked
 13515  005418  6F87               	movwf	putch@txData& (0+255),b
 13516  00541A                     
 13517                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13518  00541A  0100               	movlb	0	; () banked
 13519  00541C  5187               	movf	putch@txData& (0+255),w,b
 13520  00541E  ECCC  F029         	call	_EUSART1_Write
 13521  005422  0012               	return		;funcret
 13522  005424                     __end_of_putch:
 13523                           	opt callstack 0
 13524                           
 13525 ;; *************** function _EUSART1_Write *****************
 13526 ;; Defined at:
 13527 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;  txData          1    wreg     unsigned char 
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;  txData          1   38[BANK0 ] unsigned char 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      void 
 13534 ;; Registers used:
 13535 ;;		wreg
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13544 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13545 ;;Total ram usage:        1 bytes
 13546 ;; Hardware stack levels used:    1
 13547 ;; Hardware stack levels required when called:    7
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_putch
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           	psect	text57
 13556  005398                     __ptext57:
 13557                           	opt callstack 0
 13558  005398                     _EUSART1_Write:
 13559                           	opt callstack 14
 13560                           
 13561                           ;incstack = 0
 13562                           ;EUSART1_Write@txData stored from wreg
 13563  005398  0100               	movlb	0	; () banked
 13564  00539A  6F86               	movwf	EUSART1_Write@txData& (0+255),b
 13565  00539C                     l299:
 13566                           
 13567                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13568  00539C  A89E               	btfss	158,4,c	;volatile
 13569  00539E  EFD3  F029         	goto	u7081
 13570  0053A2  EFD5  F029         	goto	u7080
 13571  0053A6                     u7081:
 13572  0053A6  EFCE  F029         	goto	l299
 13573  0053AA                     u7080:
 13574  0053AA                     
 13575                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13576  0053AA  C086  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13577  0053AE  0012               	return		;funcret
 13578  0053B0                     __end_of_EUSART1_Write:
 13579                           	opt callstack 0
 13580                           
 13581 ;; *************** function _atoi *****************
 13582 ;; Defined at:
 13583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  s               2   45[BANK0 ] PTR const unsigned char 
 13586 ;;		 -> STR_11(27), STR_10(21), STR_9(14), STR_8(10), 
 13587 ;;		 -> STR_7(10), STR_6(14), STR_4(12), STR_3(44), 
 13588 ;;		 -> STR_2(12), STR_1(44), Out_USART@value_3(4), Out_USART@value_1(3), 
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;  n               2   58[BANK0 ] int 
 13591 ;;  neg             2   51[BANK0 ] int 
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  2   45[BANK0 ] int 
 13594 ;; Registers used:
 13595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13596 ;; Tracked objects:
 13597 ;;		On entry : 0/0
 13598 ;;		On exit  : 0/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13602 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13604 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13605 ;;Total ram usage:       15 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:    8
 13608 ;; This function calls:
 13609 ;;		___wmul
 13610 ;;		_isdigit
 13611 ;;		_isspace
 13612 ;; This function is called by:
 13613 ;;		_Out_USART
 13614 ;;		_vfpfcnvrt
 13615 ;; This function uses a non-reentrant model
 13616 ;;
 13617                           
 13618                           	psect	text58
 13619  00323C                     __ptext58:
 13620                           	opt callstack 0
 13621  00323C                     _atoi:
 13622                           	opt callstack 18
 13623  00323C  0E00               	movlw	0
 13624  00323E  0100               	movlb	0	; () banked
 13625  003240  6F9B               	movwf	(atoi@n+1)& (0+255),b
 13626  003242  0E00               	movlw	0
 13627  003244  6F9A               	movwf	atoi@n& (0+255),b
 13628  003246  0E00               	movlw	0
 13629  003248  6F94               	movwf	(atoi@neg+1)& (0+255),b
 13630  00324A  0E00               	movlw	0
 13631  00324C  6F93               	movwf	atoi@neg& (0+255),b
 13632  00324E  EF2B  F019         	goto	l4691
 13633  003252                     l4689:
 13634                           
 13635                           ; BSR set to: 0
 13636  003252  4B8D               	infsnz	atoi@s& (0+255),f,b
 13637  003254  2B8E               	incf	(atoi@s+1)& (0+255),f,b
 13638  003256                     l4691:
 13639                           
 13640                           ; BSR set to: 0
 13641  003256  0E01               	movlw	1
 13642  003258  6F99               	movwf	_atoi$2400& (0+255),b
 13643  00325A                     
 13644                           ; BSR set to: 0
 13645  00325A  C08D  FFF6         	movff	atoi@s,tblptrl
 13646  00325E  C08E  FFF7         	movff	atoi@s+1,tblptrh
 13647  003262  0E00               	movlw	low (__mediumconst shr (0+16))
 13648  003264  6EF8               	movwf	tblptru,c
 13649  003266  0E0E               	movlw	(high __ramtop+-1)
 13650  003268  64F7               	cpfsgt	tblptrh,c
 13651  00326A  D003               	bra	u4437
 13652  00326C  0008               	tblrd		*
 13653  00326E  50F5               	movf	tablat,w,c
 13654  003270  D005               	bra	u4430
 13655  003272                     u4437:
 13656  003272  CFF6 FFE1          	movff	tblptrl,fsr1l
 13657  003276  CFF7 FFE2          	movff	tblptrh,fsr1h
 13658  00327A  50E7               	movf	indf1,w,c
 13659  00327C                     u4430:
 13660  00327C  0A20               	xorlw	32
 13661  00327E  B4D8               	btfsc	status,2,c
 13662  003280  EF44  F019         	goto	u4441
 13663  003284  EF46  F019         	goto	u4440
 13664  003288                     u4441:
 13665  003288  EF70  F019         	goto	l4699
 13666  00328C                     u4440:
 13667  00328C  0EF7               	movlw	247
 13668  00328E  0100               	movlb	0	; () banked
 13669  003290  6F8F               	movwf	??_atoi& (0+255),b
 13670  003292  0EFF               	movlw	255
 13671  003294  6F90               	movwf	(??_atoi+1)& (0+255),b
 13672  003296  C08D  FFF6         	movff	atoi@s,tblptrl
 13673  00329A  C08E  FFF7         	movff	atoi@s+1,tblptrh
 13674  00329E  0E00               	movlw	low (__mediumconst shr (0+16))
 13675  0032A0  6EF8               	movwf	tblptru,c
 13676  0032A2  0E0E               	movlw	(high __ramtop+-1)
 13677  0032A4  64F7               	cpfsgt	tblptrh,c
 13678  0032A6  D003               	bra	u4457
 13679  0032A8  0008               	tblrd		*
 13680  0032AA  50F5               	movf	tablat,w,c
 13681  0032AC  D005               	bra	u4450
 13682  0032AE                     u4457:
 13683  0032AE  CFF6 FFE1          	movff	tblptrl,fsr1l
 13684  0032B2  CFF7 FFE2          	movff	tblptrh,fsr1h
 13685  0032B6  50E7               	movf	indf1,w,c
 13686  0032B8                     u4450:
 13687  0032B8  0100               	movlb	0	; () banked
 13688  0032BA  6F91               	movwf	(??_atoi+2)& (0+255),b
 13689  0032BC  6B92               	clrf	(??_atoi+3)& (0+255),b
 13690  0032BE  518F               	movf	??_atoi& (0+255),w,b
 13691  0032C0  2791               	addwf	(??_atoi+2)& (0+255),f,b
 13692  0032C2  5190               	movf	(??_atoi+1)& (0+255),w,b
 13693  0032C4  2392               	addwfc	(??_atoi+3)& (0+255),f,b
 13694  0032C6  5192               	movf	(??_atoi+3)& (0+255),w,b
 13695  0032C8  E109               	bnz	u4460
 13696  0032CA  0E05               	movlw	5
 13697  0032CC  5D91               	subwf	(??_atoi+2)& (0+255),w,b
 13698  0032CE  A0D8               	btfss	status,0,c
 13699  0032D0  EF6C  F019         	goto	u4461
 13700  0032D4  EF6E  F019         	goto	u4460
 13701  0032D8                     u4461:
 13702  0032D8  EF70  F019         	goto	l4699
 13703  0032DC                     u4460:
 13704  0032DC                     
 13705                           ; BSR set to: 0
 13706  0032DC  0E00               	movlw	0
 13707  0032DE  6F99               	movwf	_atoi$2400& (0+255),b
 13708  0032E0                     l4699:
 13709  0032E0  C099  F095         	movff	_atoi$2400,_atoi$2399
 13710  0032E4  0100               	movlb	0	; () banked
 13711  0032E6  6B96               	clrf	(_atoi$2399+1)& (0+255),b
 13712  0032E8                     
 13713                           ; BSR set to: 0
 13714  0032E8  5195               	movf	_atoi$2399& (0+255),w,b
 13715  0032EA  1196               	iorwf	(_atoi$2399+1)& (0+255),w,b
 13716  0032EC  A4D8               	btfss	status,2,c
 13717  0032EE  EF7B  F019         	goto	u4471
 13718  0032F2  EF7D  F019         	goto	u4470
 13719  0032F6                     u4471:
 13720  0032F6  EF29  F019         	goto	l4689
 13721  0032FA                     u4470:
 13722  0032FA  EF87  F019         	goto	l4709
 13723  0032FE                     l4705:
 13724                           
 13725                           ; BSR set to: 0
 13726  0032FE  0E00               	movlw	0
 13727  003300  6F94               	movwf	(atoi@neg+1)& (0+255),b
 13728  003302  0E01               	movlw	1
 13729  003304  6F93               	movwf	atoi@neg& (0+255),b
 13730  003306                     l4707:
 13731                           
 13732                           ; BSR set to: 0
 13733  003306  4B8D               	infsnz	atoi@s& (0+255),f,b
 13734  003308  2B8E               	incf	(atoi@s+1)& (0+255),f,b
 13735  00330A  EFD6  F019         	goto	l4715
 13736  00330E                     l4709:
 13737                           
 13738                           ; BSR set to: 0
 13739  00330E  C08D  FFF6         	movff	atoi@s,tblptrl
 13740  003312  C08E  FFF7         	movff	atoi@s+1,tblptrh
 13741  003316  0E00               	movlw	low (__mediumconst shr (0+16))
 13742  003318  6EF8               	movwf	tblptru,c
 13743  00331A  0E0E               	movlw	(high __ramtop+-1)
 13744  00331C  64F7               	cpfsgt	tblptrh,c
 13745  00331E  D003               	bra	u4487
 13746  003320  0008               	tblrd		*
 13747  003322  50F5               	movf	tablat,w,c
 13748  003324  D005               	bra	u4480
 13749  003326                     u4487:
 13750  003326  CFF6 FFE1          	movff	tblptrl,fsr1l
 13751  00332A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13752  00332E  50E7               	movf	indf1,w,c
 13753  003330                     u4480:
 13754  003330  0100               	movlb	0	; () banked
 13755  003332  6F8F               	movwf	??_atoi& (0+255),b
 13756  003334  6B90               	clrf	(??_atoi+1)& (0+255),b
 13757                           
 13758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13759                           ; Switch size 1, requested type "simple"
 13760                           ; Number of cases is 1, Range of values is 0 to 0
 13761                           ; switch strategies available:
 13762                           ; Name         Instructions Cycles
 13763                           ; simple_byte            4     3 (average)
 13764                           ;	Chosen strategy is simple_byte
 13765  003336  5190               	movf	(??_atoi+1)& (0+255),w,b
 13766  003338  0A00               	xorlw	0	; case 0
 13767  00333A  B4D8               	btfsc	status,2,c
 13768  00333C  EFA2  F019         	goto	l8107
 13769  003340  EFD6  F019         	goto	l4715
 13770  003344                     l8107:
 13771                           
 13772                           ; BSR set to: 0
 13773                           ; Switch size 1, requested type "simple"
 13774                           ; Number of cases is 2, Range of values is 43 to 45
 13775                           ; switch strategies available:
 13776                           ; Name         Instructions Cycles
 13777                           ; simple_byte            7     4 (average)
 13778                           ;	Chosen strategy is simple_byte
 13779  003344  518F               	movf	??_atoi& (0+255),w,b
 13780  003346  0A2B               	xorlw	43	; case 43
 13781  003348  B4D8               	btfsc	status,2,c
 13782  00334A  EF83  F019         	goto	l4707
 13783  00334E  0A06               	xorlw	6	; case 45
 13784  003350  B4D8               	btfsc	status,2,c
 13785  003352  EF7F  F019         	goto	l4705
 13786  003356  EFD6  F019         	goto	l4715
 13787  00335A                     l4711:
 13788                           
 13789                           ; BSR set to: 0
 13790  00335A  C09A  F086         	movff	atoi@n,___wmul@multiplier
 13791  00335E  C09B  F087         	movff	atoi@n+1,___wmul@multiplier+1
 13792  003362  0E00               	movlw	0
 13793  003364  6F89               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13794  003366  0E0A               	movlw	10
 13795  003368  6F88               	movwf	___wmul@multiplicand& (0+255),b
 13796  00336A  EC4C  F029         	call	___wmul	;wreg free
 13797  00336E  C08D  FFF6         	movff	atoi@s,tblptrl
 13798  003372  C08E  FFF7         	movff	atoi@s+1,tblptrh
 13799  003376  0E00               	movlw	low (__mediumconst shr (0+16))
 13800  003378  6EF8               	movwf	tblptru,c
 13801  00337A  0E0E               	movlw	(high __ramtop+-1)
 13802  00337C  64F7               	cpfsgt	tblptrh,c
 13803  00337E  D003               	bra	u4497
 13804  003380  0008               	tblrd		*
 13805  003382  50F5               	movf	tablat,w,c
 13806  003384  D005               	bra	u4490
 13807  003386                     u4497:
 13808  003386  CFF6 FFE1          	movff	tblptrl,fsr1l
 13809  00338A  CFF7 FFE2          	movff	tblptrh,fsr1h
 13810  00338E  50E7               	movf	indf1,w,c
 13811  003390                     u4490:
 13812  003390  0100               	movlb	0	; () banked
 13813  003392  6F8F               	movwf	??_atoi& (0+255),b
 13814  003394  518F               	movf	??_atoi& (0+255),w,b
 13815  003396  5F86               	subwf	?___wmul& (0+255),f,b
 13816  003398  0E00               	movlw	0
 13817  00339A  5B87               	subwfb	(?___wmul+1)& (0+255),f,b
 13818  00339C  0E30               	movlw	48
 13819  00339E  2586               	addwf	?___wmul& (0+255),w,b
 13820  0033A0  6F9A               	movwf	atoi@n& (0+255),b
 13821  0033A2  0E00               	movlw	0
 13822  0033A4  2187               	addwfc	(?___wmul+1)& (0+255),w,b
 13823  0033A6  6F9B               	movwf	(atoi@n+1)& (0+255),b
 13824  0033A8  EF83  F019         	goto	l4707
 13825  0033AC                     l4715:
 13826                           
 13827                           ; BSR set to: 0
 13828  0033AC  0ED0               	movlw	208
 13829  0033AE  6F8F               	movwf	??_atoi& (0+255),b
 13830  0033B0  0EFF               	movlw	255
 13831  0033B2  6F90               	movwf	(??_atoi+1)& (0+255),b
 13832  0033B4  C08D  FFF6         	movff	atoi@s,tblptrl
 13833  0033B8  C08E  FFF7         	movff	atoi@s+1,tblptrh
 13834  0033BC  0E00               	movlw	low (__mediumconst shr (0+16))
 13835  0033BE  6EF8               	movwf	tblptru,c
 13836  0033C0  0E0E               	movlw	(high __ramtop+-1)
 13837  0033C2  64F7               	cpfsgt	tblptrh,c
 13838  0033C4  D003               	bra	u4507
 13839  0033C6  0008               	tblrd		*
 13840  0033C8  50F5               	movf	tablat,w,c
 13841  0033CA  D005               	bra	u4500
 13842  0033CC                     u4507:
 13843  0033CC  CFF6 FFE1          	movff	tblptrl,fsr1l
 13844  0033D0  CFF7 FFE2          	movff	tblptrh,fsr1h
 13845  0033D4  50E7               	movf	indf1,w,c
 13846  0033D6                     u4500:
 13847  0033D6  0100               	movlb	0	; () banked
 13848  0033D8  6F91               	movwf	(??_atoi+2)& (0+255),b
 13849  0033DA  6B92               	clrf	(??_atoi+3)& (0+255),b
 13850  0033DC  518F               	movf	??_atoi& (0+255),w,b
 13851  0033DE  2791               	addwf	(??_atoi+2)& (0+255),f,b
 13852  0033E0  5190               	movf	(??_atoi+1)& (0+255),w,b
 13853  0033E2  2392               	addwfc	(??_atoi+3)& (0+255),f,b
 13854  0033E4  5192               	movf	(??_atoi+3)& (0+255),w,b
 13855  0033E6  E10A               	bnz	u4510
 13856  0033E8  0E0A               	movlw	10
 13857  0033EA  5D91               	subwf	(??_atoi+2)& (0+255),w,b
 13858  0033EC  A0D8               	btfss	status,0,c
 13859  0033EE  EFFB  F019         	goto	u4511
 13860  0033F2  EFFE  F019         	goto	u4510
 13861  0033F6                     u4511:
 13862  0033F6  0E01               	movlw	1
 13863  0033F8  EFFF  F019         	goto	u4520
 13864  0033FC                     u4510:
 13865  0033FC  0E00               	movlw	0
 13866  0033FE                     u4520:
 13867  0033FE  6F97               	movwf	_atoi$2401& (0+255),b
 13868  003400  6B98               	clrf	(_atoi$2401+1)& (0+255),b
 13869  003402                     
 13870                           ; BSR set to: 0
 13871  003402  5197               	movf	_atoi$2401& (0+255),w,b
 13872  003404  1198               	iorwf	(_atoi$2401+1)& (0+255),w,b
 13873  003406  A4D8               	btfss	status,2,c
 13874  003408  EF08  F01A         	goto	u4531
 13875  00340C  EF0A  F01A         	goto	u4530
 13876  003410                     u4531:
 13877  003410  EFAD  F019         	goto	l4711
 13878  003414                     u4530:
 13879  003414                     
 13880                           ; BSR set to: 0
 13881  003414  5193               	movf	atoi@neg& (0+255),w,b
 13882  003416  1194               	iorwf	(atoi@neg+1)& (0+255),w,b
 13883  003418  A4D8               	btfss	status,2,c
 13884  00341A  EF11  F01A         	goto	u4541
 13885  00341E  EF13  F01A         	goto	u4540
 13886  003422                     u4541:
 13887  003422  EF21  F01A         	goto	l1633
 13888  003426                     u4540:
 13889  003426                     
 13890                           ; BSR set to: 0
 13891  003426  C09A  F08F         	movff	atoi@n,??_atoi
 13892  00342A  C09B  F090         	movff	atoi@n+1,??_atoi+1
 13893  00342E  1F8F               	comf	??_atoi& (0+255),f,b
 13894  003430  1F90               	comf	(??_atoi+1)& (0+255),f,b
 13895  003432  4B8F               	infsnz	??_atoi& (0+255),f,b
 13896  003434  2B90               	incf	(??_atoi+1)& (0+255),f,b
 13897  003436  C08F  F08D         	movff	??_atoi,?_atoi
 13898  00343A  C090  F08E         	movff	??_atoi+1,?_atoi+1
 13899  00343E  EF25  F01A         	goto	l1636
 13900  003442                     l1633:
 13901                           
 13902                           ; BSR set to: 0
 13903  003442  C09A  F08D         	movff	atoi@n,?_atoi
 13904  003446  C09B  F08E         	movff	atoi@n+1,?_atoi+1
 13905  00344A                     l1636:
 13906                           
 13907                           ; BSR set to: 0
 13908  00344A  0012               	return		;funcret
 13909  00344C                     __end_of_atoi:
 13910                           	opt callstack 0
 13911                           
 13912 ;; *************** function _isspace *****************
 13913 ;; Defined at:
 13914 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;  c               2   38[BANK0 ] int 
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;		None
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  2   38[BANK0 ] int 
 13921 ;; Registers used:
 13922 ;;		wreg, status,2, status,0
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13930 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13931 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13932 ;;Total ram usage:        7 bytes
 13933 ;; Hardware stack levels used:    1
 13934 ;; Hardware stack levels required when called:    7
 13935 ;; This function calls:
 13936 ;;		Nothing
 13937 ;; This function is called by:
 13938 ;;		_atoi
 13939 ;; This function uses a non-reentrant model
 13940 ;;
 13941                           
 13942                           	psect	text59
 13943  004CBC                     __ptext59:
 13944                           	opt callstack 0
 13945  004CBC                     _isspace:
 13946                           	opt callstack 18
 13947  004CBC  0E01               	movlw	1
 13948  004CBE  0100               	movlb	0	; () banked
 13949  004CC0  6F8C               	movwf	_isspace$2426& (0+255),b
 13950  004CC2                     
 13951                           ; BSR set to: 0
 13952  004CC2  0E20               	movlw	32
 13953  004CC4  1986               	xorwf	isspace@c& (0+255),w,b
 13954  004CC6  1187               	iorwf	(isspace@c+1)& (0+255),w,b
 13955  004CC8  B4D8               	btfsc	status,2,c
 13956  004CCA  EF69  F026         	goto	u4401
 13957  004CCE  EF6B  F026         	goto	u4400
 13958  004CD2                     u4401:
 13959  004CD2  EF84  F026         	goto	l4671
 13960  004CD6                     u4400:
 13961  004CD6                     
 13962                           ; BSR set to: 0
 13963  004CD6  0EF7               	movlw	247
 13964  004CD8  6F88               	movwf	??_isspace& (0+255),b
 13965  004CDA  0EFF               	movlw	255
 13966  004CDC  6F89               	movwf	(??_isspace+1)& (0+255),b
 13967  004CDE  C086  F08A         	movff	isspace@c,??_isspace+2
 13968  004CE2  C087  F08B         	movff	isspace@c+1,??_isspace+3
 13969  004CE6  5188               	movf	??_isspace& (0+255),w,b
 13970  004CE8  278A               	addwf	(??_isspace+2)& (0+255),f,b
 13971  004CEA  5189               	movf	(??_isspace+1)& (0+255),w,b
 13972  004CEC  238B               	addwfc	(??_isspace+3)& (0+255),f,b
 13973  004CEE  518B               	movf	(??_isspace+3)& (0+255),w,b
 13974  004CF0  E109               	bnz	u4410
 13975  004CF2  0E05               	movlw	5
 13976  004CF4  5D8A               	subwf	(??_isspace+2)& (0+255),w,b
 13977  004CF6  A0D8               	btfss	status,0,c
 13978  004CF8  EF80  F026         	goto	u4411
 13979  004CFC  EF82  F026         	goto	u4410
 13980  004D00                     u4411:
 13981  004D00  EF84  F026         	goto	l4671
 13982  004D04                     u4410:
 13983  004D04                     
 13984                           ; BSR set to: 0
 13985  004D04  0E00               	movlw	0
 13986  004D06  6F8C               	movwf	_isspace$2426& (0+255),b
 13987  004D08                     l4671:
 13988                           
 13989                           ; BSR set to: 0
 13990  004D08  C08C  F086         	movff	_isspace$2426,?_isspace
 13991  004D0C  6B87               	clrf	(?_isspace+1)& (0+255),b
 13992  004D0E                     
 13993                           ; BSR set to: 0
 13994  004D0E  0012               	return		;funcret
 13995  004D10                     __end_of_isspace:
 13996                           	opt callstack 0
 13997                           
 13998 ;; *************** function _isdigit *****************
 13999 ;; Defined at:
 14000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;  c               2   38[BANK0 ] int 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;		None
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  2   38[BANK0 ] int 
 14007 ;; Registers used:
 14008 ;;		wreg, status,2, status,0
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14016 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14017 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14018 ;;Total ram usage:        6 bytes
 14019 ;; Hardware stack levels used:    1
 14020 ;; Hardware stack levels required when called:    7
 14021 ;; This function calls:
 14022 ;;		Nothing
 14023 ;; This function is called by:
 14024 ;;		_vfpfcnvrt
 14025 ;;		_atoi
 14026 ;; This function uses a non-reentrant model
 14027 ;;
 14028                           
 14029                           	psect	text60
 14030  00507C                     __ptext60:
 14031                           	opt callstack 0
 14032  00507C                     _isdigit:
 14033                           	opt callstack 19
 14034  00507C  0ED0               	movlw	208
 14035  00507E  0100               	movlb	0	; () banked
 14036  005080  6F88               	movwf	??_isdigit& (0+255),b
 14037  005082  0EFF               	movlw	255
 14038  005084  6F89               	movwf	(??_isdigit+1)& (0+255),b
 14039  005086  C086  F08A         	movff	isdigit@c,??_isdigit+2
 14040  00508A  C087  F08B         	movff	isdigit@c+1,??_isdigit+3
 14041  00508E  5188               	movf	??_isdigit& (0+255),w,b
 14042  005090  278A               	addwf	(??_isdigit+2)& (0+255),f,b
 14043  005092  5189               	movf	(??_isdigit+1)& (0+255),w,b
 14044  005094  238B               	addwfc	(??_isdigit+3)& (0+255),f,b
 14045  005096  518B               	movf	(??_isdigit+3)& (0+255),w,b
 14046  005098  E10A               	bnz	u3790
 14047  00509A  0E0A               	movlw	10
 14048  00509C  5D8A               	subwf	(??_isdigit+2)& (0+255),w,b
 14049  00509E  A0D8               	btfss	status,0,c
 14050  0050A0  EF54  F028         	goto	u3791
 14051  0050A4  EF57  F028         	goto	u3790
 14052  0050A8                     u3791:
 14053  0050A8  0E01               	movlw	1
 14054  0050AA  EF58  F028         	goto	u3800
 14055  0050AE                     u3790:
 14056  0050AE  0E00               	movlw	0
 14057  0050B0                     u3800:
 14058  0050B0  6F86               	movwf	?_isdigit& (0+255),b
 14059  0050B2  6B87               	clrf	(?_isdigit+1)& (0+255),b
 14060  0050B4                     
 14061                           ; BSR set to: 0
 14062  0050B4  0012               	return		;funcret
 14063  0050B6                     __end_of_isdigit:
 14064                           	opt callstack 0
 14065                           
 14066 ;; *************** function ___wmul *****************
 14067 ;; Defined at:
 14068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;  multiplier      2   38[BANK0 ] unsigned int 
 14071 ;;  multiplicand    2   40[BANK0 ] unsigned int 
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;  product         2   42[BANK0 ] unsigned int 
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  2   38[BANK0 ] unsigned int 
 14076 ;; Registers used:
 14077 ;;		wreg, status,2, status,0, prodl, prodh
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14086 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14087 ;;Total ram usage:        6 bytes
 14088 ;; Hardware stack levels used:    1
 14089 ;; Hardware stack levels required when called:    7
 14090 ;; This function calls:
 14091 ;;		Nothing
 14092 ;; This function is called by:
 14093 ;;		_atoi
 14094 ;; This function uses a non-reentrant model
 14095 ;;
 14096                           
 14097                           	psect	text61
 14098  005298                     __ptext61:
 14099                           	opt callstack 0
 14100  005298                     ___wmul:
 14101                           	opt callstack 18
 14102  005298  0100               	movlb	0	; () banked
 14103  00529A  5186               	movf	___wmul@multiplier& (0+255),w,b
 14104  00529C  0388               	mulwf	___wmul@multiplicand& (0+255),b
 14105  00529E  CFF3 F08A          	movff	prodl,___wmul@product
 14106  0052A2  CFF4 F08B          	movff	prodh,___wmul@product+1
 14107  0052A6  5186               	movf	___wmul@multiplier& (0+255),w,b
 14108  0052A8  0389               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14109  0052AA  50F3               	movf	243,w,c
 14110  0052AC  278B               	addwf	(___wmul@product+1)& (0+255),f,b
 14111  0052AE  5187               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14112  0052B0  0388               	mulwf	___wmul@multiplicand& (0+255),b
 14113  0052B2  50F3               	movf	243,w,c
 14114  0052B4  278B               	addwf	(___wmul@product+1)& (0+255),f,b
 14115  0052B6                     
 14116                           ; BSR set to: 0
 14117  0052B6  C08A  F086         	movff	___wmul@product,?___wmul
 14118  0052BA  C08B  F087         	movff	___wmul@product+1,?___wmul+1
 14119  0052BE                     
 14120                           ; BSR set to: 0
 14121  0052BE  0012               	return		;funcret
 14122  0052C0                     __end_of___wmul:
 14123                           	opt callstack 0
 14124                           
 14125 ;; *************** function _EUSART1_is_rx_ready *****************
 14126 ;; Defined at:
 14127 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;		None
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      _Bool 
 14134 ;; Registers used:
 14135 ;;		wreg
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14145 ;;Total ram usage:        0 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:    7
 14148 ;; This function calls:
 14149 ;;		Nothing
 14150 ;; This function is called by:
 14151 ;;		_Out_USART
 14152 ;;		_main
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text62
 14157  0053DE                     __ptext62:
 14158                           	opt callstack 0
 14159  0053DE                     _EUSART1_is_rx_ready:
 14160                           	opt callstack 22
 14161  0053DE                     
 14162                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 14163  0053DE  BA9E               	btfsc	158,5,c	;volatile
 14164  0053E0  EFF4  F029         	goto	u6531
 14165  0053E4  EFF7  F029         	goto	u6530
 14166  0053E8                     u6531:
 14167  0053E8  0E01               	movlw	1
 14168  0053EA  EFF8  F029         	goto	u6536
 14169  0053EE                     u6530:
 14170  0053EE  0E00               	movlw	0
 14171  0053F0                     u6536:
 14172  0053F0  0012               	return		;funcret
 14173  0053F2                     __end_of_EUSART1_is_rx_ready:
 14174                           	opt callstack 0
 14175                           
 14176 ;; *************** function _EUSART1_Read *****************
 14177 ;; Defined at:
 14178 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 14179 ;; Parameters:    Size  Location     Type
 14180 ;;		None
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;		None
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  1    wreg      unsigned char 
 14185 ;; Registers used:
 14186 ;;		wreg, status,2
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14196 ;;Total ram usage:        0 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:    7
 14199 ;; This function calls:
 14200 ;;		Nothing
 14201 ;; This function is called by:
 14202 ;;		_Out_USART
 14203 ;;		_getch
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           	psect	text63
 14208  005246                     __ptext63:
 14209                           	opt callstack 0
 14210  005246                     _EUSART1_Read:
 14211                           	opt callstack 22
 14212  005246                     l292:
 14213                           
 14214                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 14215  005246  AA9E               	btfss	158,5,c	;volatile
 14216  005248  EF28  F029         	goto	u6541
 14217  00524C  EF2A  F029         	goto	u6540
 14218  005250                     u6541:
 14219  005250  EF23  F029         	goto	l292
 14220  005254                     u6540:
 14221  005254                     
 14222                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 14223  005254  0E00               	movlw	0
 14224  005256  0100               	movlb	0	; () banked
 14225  005258  6FD5               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 14226  00525A                     
 14227                           ; BSR set to: 0
 14228                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 14229  00525A  A2AB               	btfss	171,1,c	;volatile
 14230  00525C  EF32  F029         	goto	u6551
 14231  005260  EF34  F029         	goto	u6550
 14232  005264                     u6551:
 14233  005264  EF36  F029         	goto	l5973
 14234  005268                     u6550:
 14235  005268                     
 14236                           ; BSR set to: 0
 14237                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 14238  005268  98AB               	bcf	171,4,c	;volatile
 14239                           
 14240                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 14241  00526A  88AB               	bsf	171,4,c	;volatile
 14242  00526C                     l5973:
 14243                           
 14244                           ; BSR set to: 0
 14245                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 14246  00526C  50AE               	movf	174,w,c	;volatile
 14247  00526E                     
 14248                           ; BSR set to: 0
 14249  00526E  0012               	return		;funcret
 14250  005270                     __end_of_EUSART1_Read:
 14251                           	opt callstack 0
 14252                           
 14253 ;; *************** function _INTERRUPT_InterruptManager *****************
 14254 ;; Defined at:
 14255 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14256 ;; Parameters:    Size  Location     Type
 14257 ;;		None
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;		None
 14260 ;; Return value:  Size  Location     Type
 14261 ;;                  1    wreg      void 
 14262 ;; Registers used:
 14263 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14264 ;; Tracked objects:
 14265 ;;		On entry : 0/0
 14266 ;;		On exit  : 0/0
 14267 ;;		Unchanged: 0/0
 14268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14272 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14273 ;;Total ram usage:        4 bytes
 14274 ;; Hardware stack levels used:    1
 14275 ;; Hardware stack levels required when called:    6
 14276 ;; This function calls:
 14277 ;;		_PIN_MANAGER_IOC
 14278 ;;		_TMR2_ISR
 14279 ;; This function is called by:
 14280 ;;		Interrupt level 2
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           
 14284                           	psect	intcode
 14285  000008                     __pintcode:
 14286                           	opt callstack 0
 14287  000008                     _INTERRUPT_InterruptManager:
 14288                           	opt callstack 14
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;incstack = 0
 14292  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14293  00000A  CFFA F082          	movff	pclath,??_INTERRUPT_InterruptManager
 14294  00000E  CFFB F083          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14295  000012  CFF3 F084          	movff	prodl,??_INTERRUPT_InterruptManager+2
 14296  000016  CFF4 F085          	movff	prodh,??_INTERRUPT_InterruptManager+3
 14297  00001A                     
 14298                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 14299  00001A  A6F2               	btfss	242,3,c	;volatile
 14300  00001C  EF12  F000         	goto	i2u692_41
 14301  000020  EF14  F000         	goto	i2u692_40
 14302  000024                     i2u692_41:
 14303  000024  EF1F  F000         	goto	i2l346
 14304  000028                     i2u692_40:
 14305  000028  A0F2               	btfss	242,0,c	;volatile
 14306  00002A  EF19  F000         	goto	i2u693_41
 14307  00002E  EF1B  F000         	goto	i2u693_40
 14308  000032                     i2u693_41:
 14309  000032  EF1F  F000         	goto	i2l346
 14310  000036                     i2u693_40:
 14311  000036                     
 14312                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 14313  000036  ECD8  F029         	call	_PIN_MANAGER_IOC	;wreg free
 14314                           
 14315                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 14316  00003A  EF38  F000         	goto	i2l352
 14317  00003E                     i2l346:
 14318  00003E  ACF2               	btfss	242,6,c	;volatile
 14319  000040  EF24  F000         	goto	i2u694_41
 14320  000044  EF26  F000         	goto	i2u694_40
 14321  000048                     i2u694_41:
 14322  000048  EF38  F000         	goto	i2l352
 14323  00004C                     i2u694_40:
 14324  00004C                     
 14325                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 14326  00004C  A29D               	btfss	157,1,c	;volatile
 14327  00004E  EF2B  F000         	goto	i2u695_41
 14328  000052  EF2D  F000         	goto	i2u695_40
 14329  000056                     i2u695_41:
 14330  000056  EF38  F000         	goto	i2l351
 14331  00005A                     i2u695_40:
 14332  00005A  A29E               	btfss	158,1,c	;volatile
 14333  00005C  EF32  F000         	goto	i2u696_41
 14334  000060  EF34  F000         	goto	i2u696_40
 14335  000064                     i2u696_41:
 14336  000064  EF38  F000         	goto	i2l351
 14337  000068                     i2u696_40:
 14338  000068                     
 14339                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR2_ISR();
 14340  000068  ECDE  F028         	call	_TMR2_ISR	;wreg free
 14341                           
 14342                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 14343  00006C  EF38  F000         	goto	i2l352
 14344  000070                     i2l351:
 14345  000070                     i2l352:
 14346  000070  C085  FFF4         	movff	??_INTERRUPT_InterruptManager+3,prodh
 14347  000074  C084  FFF3         	movff	??_INTERRUPT_InterruptManager+2,prodl
 14348  000078  C083  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14349  00007C  C082  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14350  000080  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14351  000082  0011               	retfie		f
 14352  000084                     __end_of_INTERRUPT_InterruptManager:
 14353                           	opt callstack 0
 14354                           
 14355 ;; *************** function _TMR2_ISR *****************
 14356 ;; Defined at:
 14357 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 14358 ;; Parameters:    Size  Location     Type
 14359 ;;		None
 14360 ;; Auto vars:     Size  Location     Type
 14361 ;;		None
 14362 ;; Return value:  Size  Location     Type
 14363 ;;                  1    wreg      void 
 14364 ;; Registers used:
 14365 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14366 ;; Tracked objects:
 14367 ;;		On entry : 0/0
 14368 ;;		On exit  : 0/0
 14369 ;;		Unchanged: 0/0
 14370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14375 ;;Total ram usage:        0 bytes
 14376 ;; Hardware stack levels used:    1
 14377 ;; Hardware stack levels required when called:    5
 14378 ;; This function calls:
 14379 ;;		_TMR2_CallBack
 14380 ;; This function is called by:
 14381 ;;		_INTERRUPT_InterruptManager
 14382 ;; This function uses a non-reentrant model
 14383 ;;
 14384                           
 14385                           	psect	text65
 14386  0051BC                     __ptext65:
 14387                           	opt callstack 0
 14388  0051BC                     _TMR2_ISR:
 14389                           	opt callstack 14
 14390  0051BC                     
 14391                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 14392  0051BC  929E               	bcf	158,1,c	;volatile
 14393  0051BE                     
 14394                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 10)
 14395  0051BE  0100               	movlb	0	; () banked
 14396  0051C0  4BD1               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
 14397  0051C2  2BD2               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 14398  0051C4  51D2               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 14399  0051C6  E109               	bnz	i2u676_40
 14400  0051C8  0E0A               	movlw	10
 14401  0051CA  5DD1               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
 14402  0051CC  A0D8               	btfss	status,0,c
 14403  0051CE  EFEB  F028         	goto	i2u676_41
 14404  0051D2  EFED  F028         	goto	i2u676_40
 14405  0051D6                     i2u676_41:
 14406  0051D6  EFF4  F028         	goto	i2l396
 14407  0051DA                     i2u676_40:
 14408  0051DA                     
 14409                           ; BSR set to: 0
 14410                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 14411  0051DA  ECF5  F028         	call	_TMR2_CallBack	;wreg free
 14412  0051DE                     
 14413                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 14414  0051DE  0E00               	movlw	0
 14415  0051E0  0100               	movlb	0	; () banked
 14416  0051E2  6FD2               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
 14417  0051E4  0E00               	movlw	0
 14418  0051E6  6FD1               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
 14419  0051E8                     i2l396:
 14420                           
 14421                           ; BSR set to: 0
 14422  0051E8  0012               	return		;funcret
 14423  0051EA                     __end_of_TMR2_ISR:
 14424                           	opt callstack 0
 14425                           
 14426 ;; *************** function _TMR2_CallBack *****************
 14427 ;; Defined at:
 14428 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 14429 ;; Parameters:    Size  Location     Type
 14430 ;;		None
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;		None
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  1    wreg      void 
 14435 ;; Registers used:
 14436 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14446 ;;Total ram usage:        0 bytes
 14447 ;; Hardware stack levels used:    1
 14448 ;; Hardware stack levels required when called:    4
 14449 ;; This function calls:
 14450 ;;		Absolute function
 14451 ;;		_TIMER2_CALLBACK
 14452 ;;		_TMR2_DefaultInterruptHandler
 14453 ;; This function is called by:
 14454 ;;		_TMR2_ISR
 14455 ;; This function uses a non-reentrant model
 14456 ;;
 14457                           
 14458                           	psect	text66
 14459  0051EA                     __ptext66:
 14460                           	opt callstack 0
 14461  0051EA                     _TMR2_CallBack:
 14462                           	opt callstack 14
 14463  0051EA                     
 14464                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 14465  0051EA  0101               	movlb	1	; () banked
 14466  0051EC  51C3               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14467  0051EE  11C4               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14468  0051F0  B4D8               	btfsc	status,2,c
 14469  0051F2  EFFD  F028         	goto	i2u656_41
 14470  0051F6  EFFF  F028         	goto	i2u656_40
 14471  0051FA                     i2u656_41:
 14472  0051FA  EF0B  F029         	goto	i2l400
 14473  0051FE                     i2u656_40:
 14474  0051FE                     
 14475                           ; BSR set to: 1
 14476                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 14477  0051FE  D802               	call	i2u657_48
 14478  005200  EF0B  F029         	goto	i2u657_49
 14479  005204                     i2u657_48:
 14480  005204  0005               	push	
 14481  005206  6EFA               	movwf	pclath,c
 14482  005208  51C3               	movf	_TMR2_InterruptHandler& (0+255),w,b
 14483  00520A  6EFD               	movwf	tosl,c
 14484  00520C  51C4               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 14485  00520E  6EFE               	movwf	tosh,c
 14486  005210  6AFF               	clrf	tosu,c
 14487  005212  50FA               	movf	pclath,w,c
 14488  005214  0012               	return		;indir
 14489  005216                     i2u657_49:
 14490  005216                     i2l400:
 14491  005216  0012               	return		;funcret
 14492  005218                     __end_of_TMR2_CallBack:
 14493                           	opt callstack 0
 14494                           
 14495 ;; *************** function _TIMER2_CALLBACK *****************
 14496 ;; Defined at:
 14497 ;;		line 104 in file "main.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;		None
 14500 ;; Auto vars:     Size  Location     Type
 14501 ;;		None
 14502 ;; Return value:  Size  Location     Type
 14503 ;;                  1    wreg      void 
 14504 ;; Registers used:
 14505 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14506 ;; Tracked objects:
 14507 ;;		On entry : 0/0
 14508 ;;		On exit  : 0/0
 14509 ;;		Unchanged: 0/0
 14510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14515 ;;Total ram usage:        0 bytes
 14516 ;; Hardware stack levels used:    1
 14517 ;; Hardware stack levels required when called:    3
 14518 ;; This function calls:
 14519 ;;		_Get_values
 14520 ;;		_PI_Controller
 14521 ;; This function is called by:
 14522 ;;		_main
 14523 ;;		_TMR2_CallBack
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           	psect	text67
 14528  005462                     __ptext67:
 14529                           	opt callstack 0
 14530  005462                     _TIMER2_CALLBACK:
 14531                           	opt callstack 14
 14532  005462                     
 14533                           ;main.c: 105:     Get_values();
 14534  005462  EC20  F023         	call	_Get_values	;wreg free
 14535  005466                     
 14536                           ;main.c: 106:     PI_Controller();
 14537  005466  EC03  F012         	call	_PI_Controller	;wreg free
 14538  00546A  0012               	return		;funcret
 14539  00546C                     __end_of_TIMER2_CALLBACK:
 14540                           	opt callstack 0
 14541                           
 14542 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 14543 ;; Defined at:
 14544 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;		None
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  1    wreg      void 
 14551 ;; Registers used:
 14552 ;;		None
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14562 ;;Total ram usage:        0 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; This function calls:
 14565 ;;		Nothing
 14566 ;; This function is called by:
 14567 ;;		_TMR2_Initialize
 14568 ;;		_TMR2_CallBack
 14569 ;; This function uses a non-reentrant model
 14570 ;;
 14571                           
 14572                           	psect	text68
 14573  005480                     __ptext68:
 14574                           	opt callstack 0
 14575  005480                     _TMR2_DefaultInterruptHandler:
 14576                           	opt callstack 17
 14577  005480  0012               	return		;funcret
 14578  005482                     __end_of_TMR2_DefaultInterruptHandler:
 14579                           	opt callstack 0
 14580                           
 14581 ;; *************** function _PI_Controller *****************
 14582 ;; Defined at:
 14583 ;;		line 68 in file "main.c"
 14584 ;; Parameters:    Size  Location     Type
 14585 ;;		None
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;		None
 14588 ;; Return value:  Size  Location     Type
 14589 ;;                  1    wreg      void 
 14590 ;; Registers used:
 14591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14592 ;; Tracked objects:
 14593 ;;		On entry : 0/0
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14600 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14601 ;;Total ram usage:        3 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    2
 14604 ;; This function calls:
 14605 ;;		_EPWM1_LoadDutyValue
 14606 ;;		___fladd
 14607 ;;		___fldiv
 14608 ;;		___flge
 14609 ;;		___flmul
 14610 ;;		___flsub
 14611 ;;		___fltol
 14612 ;;		___xxtofl
 14613 ;;		i2___wmul
 14614 ;;		i2_abs
 14615 ;; This function is called by:
 14616 ;;		_TIMER2_CALLBACK
 14617 ;; This function uses a non-reentrant model
 14618 ;;
 14619                           
 14620                           	psect	text69
 14621  002406                     __ptext69:
 14622                           	opt callstack 0
 14623  002406                     _PI_Controller:
 14624                           	opt callstack 14
 14625  002406                     
 14626                           ;main.c: 69:     error = setpoint - sensor;
 14627  002406  C0BD  F071         	movff	_setpoint,___flsub@b
 14628  00240A  C0BE  F072         	movff	_setpoint+1,___flsub@b+1
 14629  00240E  C0BF  F073         	movff	_setpoint+2,___flsub@b+2
 14630  002412  C0C0  F074         	movff	_setpoint+3,___flsub@b+3
 14631  002416  C0C1  F075         	movff	_sensor,___flsub@a
 14632  00241A  C0C2  F076         	movff	_sensor+1,___flsub@a+1
 14633  00241E  C0C3  F077         	movff	_sensor+2,___flsub@a+2
 14634  002422  C0C4  F078         	movff	_sensor+3,___flsub@a+3
 14635  002426  EC1E  F027         	call	___flsub	;wreg free
 14636  00242A  C071  F0B9         	movff	?___flsub,_error
 14637  00242E  C072  F0BA         	movff	?___flsub+1,_error+1
 14638  002432  C073  F0BB         	movff	?___flsub+2,_error+2
 14639  002436  C074  F0BC         	movff	?___flsub+3,_error+3
 14640                           
 14641                           ;main.c: 70:     sum_error = sum_error + error;
 14642  00243A  C0B9  F057         	movff	_error,___fladd@a
 14643  00243E  C0BA  F058         	movff	_error+1,___fladd@a+1
 14644  002442  C0BB  F059         	movff	_error+2,___fladd@a+2
 14645  002446  C0BC  F05A         	movff	_error+3,___fladd@a+3
 14646  00244A  C0CF  F020         	movff	_sum_error,___xxtofl@val
 14647  00244E  C0D0  F021         	movff	_sum_error+1,___xxtofl@val+1
 14648  002452  0E00               	movlw	0
 14649  002454  BE21               	btfsc	(___xxtofl@val+1)^0,7,c
 14650  002456  0EFF               	movlw	-1
 14651  002458  6E22               	movwf	(___xxtofl@val+2)^0,c
 14652  00245A  6E23               	movwf	(___xxtofl@val+3)^0,c
 14653  00245C  0E01               	movlw	1
 14654  00245E  EC27  F01B         	call	___xxtofl
 14655  002462  C020  F053         	movff	?___xxtofl,___fladd@b
 14656  002466  C021  F054         	movff	?___xxtofl+1,___fladd@b+1
 14657  00246A  C022  F055         	movff	?___xxtofl+2,___fladd@b+2
 14658  00246E  C023  F056         	movff	?___xxtofl+3,___fladd@b+3
 14659  002472  ECA4  F009         	call	___fladd	;wreg free
 14660  002476  C053  F071         	movff	?___fladd,___fltol@f1
 14661  00247A  C054  F072         	movff	?___fladd+1,___fltol@f1+1
 14662  00247E  C055  F073         	movff	?___fladd+2,___fltol@f1+2
 14663  002482  C056  F074         	movff	?___fladd+3,___fltol@f1+3
 14664  002486  ECB3  F020         	call	___fltol	;wreg free
 14665  00248A  C071  F0CF         	movff	?___fltol,_sum_error
 14666  00248E  C072  F0D0         	movff	?___fltol+1,_sum_error+1
 14667                           
 14668                           ;main.c: 72:     if (abs(sum_error) > 100)
 14669  002492  C0CF  F07B         	movff	_sum_error,i2abs@a
 14670  002496  C0D0  F07C         	movff	_sum_error+1,i2abs@a+1
 14671  00249A  ECA7  F027         	call	i2_abs	;wreg free
 14672  00249E  0100               	movlb	0	; () banked
 14673  0024A0  BF7C               	btfsc	(?i2_abs+1)& (0+255),7,b
 14674  0024A2  EF5C  F012         	goto	i2u593_41
 14675  0024A6  517C               	movf	(?i2_abs+1)& (0+255),w,b
 14676  0024A8  E109               	bnz	i2u593_40
 14677  0024AA  0E65               	movlw	101
 14678  0024AC  5D7B               	subwf	?i2_abs& (0+255),w,b
 14679  0024AE  A0D8               	btfss	status,0,c
 14680  0024B0  EF5C  F012         	goto	i2u593_41
 14681  0024B4  EF5E  F012         	goto	i2u593_40
 14682  0024B8                     i2u593_41:
 14683  0024B8  EF88  F012         	goto	i2l508
 14684  0024BC                     i2u593_40:
 14685  0024BC                     
 14686                           ; BSR set to: 0
 14687                           ;main.c: 73:         sum_error = 100 * ( ( (sum_error) < 0 ) ? -1 : ( (sum_error) > 0 ) 
      +                          );
 14688  0024BC  BFD0               	btfsc	(_sum_error+1)& (0+255),7,b
 14689  0024BE  EF63  F012         	goto	i2u594_41
 14690  0024C2  EF65  F012         	goto	i2u594_40
 14691  0024C6                     i2u594_41:
 14692  0024C6  EF78  F012         	goto	i2l510
 14693  0024CA                     i2u594_40:
 14694  0024CA                     
 14695                           ; BSR set to: 0
 14696  0024CA  BFD0               	btfsc	(_sum_error+1)& (0+255),7,b
 14697  0024CC  EF73  F012         	goto	i2u595_40
 14698  0024D0  51D0               	movf	(_sum_error+1)& (0+255),w,b
 14699  0024D2  E106               	bnz	i2u595_41
 14700  0024D4  05CF               	decf	_sum_error& (0+255),w,b
 14701  0024D6  B0D8               	btfsc	status,0,c
 14702  0024D8  EF70  F012         	goto	i2u595_41
 14703  0024DC  EF73  F012         	goto	i2u595_40
 14704  0024E0                     i2u595_41:
 14705  0024E0  0E01               	movlw	1
 14706  0024E2  EF74  F012         	goto	i2u596_40
 14707  0024E6                     i2u595_40:
 14708  0024E6  0E00               	movlw	0
 14709  0024E8                     i2u596_40:
 14710  0024E8  6F80               	movwf	_PI_Controller$1387& (0+255),b
 14711  0024EA  6B81               	clrf	(_PI_Controller$1387+1)& (0+255),b
 14712  0024EC  EF7A  F012         	goto	i2l5483
 14713  0024F0                     i2l510:
 14714                           
 14715                           ; BSR set to: 0
 14716  0024F0  6980               	setf	_PI_Controller$1387& (0+255),b
 14717  0024F2  6981               	setf	(_PI_Controller$1387+1)& (0+255),b
 14718  0024F4                     i2l5483:
 14719                           
 14720                           ; BSR set to: 0
 14721  0024F4  C080  F001         	movff	_PI_Controller$1387,i2___wmul@multiplier
 14722  0024F8  C081  F002         	movff	_PI_Controller$1387+1,i2___wmul@multiplier+1
 14723  0024FC  0E00               	movlw	0
 14724  0024FE  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 14725  002500  0E64               	movlw	100
 14726  002502  6E03               	movwf	i2___wmul@multiplicand^0,c
 14727  002504  EC73  F029         	call	i2___wmul	;wreg free
 14728  002508  C001  F0CF         	movff	?i2___wmul,_sum_error
 14729  00250C  C002  F0D0         	movff	?i2___wmul+1,_sum_error+1
 14730  002510                     i2l508:
 14731                           
 14732                           ;main.c: 75:     dc_value = (error * KP / 10.0) + (sum_error*(Ki/10.0));
 14733  002510  0E00               	movlw	0
 14734  002512  6E4B               	movwf	___fldiv@a^0,c
 14735  002514  0E00               	movlw	0
 14736  002516  6E4C               	movwf	(___fldiv@a+1)^0,c
 14737  002518  0E20               	movlw	32
 14738  00251A  6E4D               	movwf	(___fldiv@a+2)^0,c
 14739  00251C  0E41               	movlw	65
 14740  00251E  6E4E               	movwf	(___fldiv@a+3)^0,c
 14741  002520  C0B9  F032         	movff	_error,___flmul@a
 14742  002524  C0BA  F033         	movff	_error+1,___flmul@a+1
 14743  002528  C0BB  F034         	movff	_error+2,___flmul@a+2
 14744  00252C  C0BC  F035         	movff	_error+3,___flmul@a+3
 14745  002530  C1D8  F020         	movff	_KP,___xxtofl@val
 14746  002534  C1D9  F021         	movff	_KP+1,___xxtofl@val+1
 14747  002538  0E00               	movlw	0
 14748  00253A  BE21               	btfsc	(___xxtofl@val+1)^0,7,c
 14749  00253C  0EFF               	movlw	-1
 14750  00253E  6E22               	movwf	(___xxtofl@val+2)^0,c
 14751  002540  6E23               	movwf	(___xxtofl@val+3)^0,c
 14752  002542  0E01               	movlw	1
 14753  002544  EC27  F01B         	call	___xxtofl
 14754  002548  C020  F02E         	movff	?___xxtofl,___flmul@b
 14755  00254C  C021  F02F         	movff	?___xxtofl+1,___flmul@b+1
 14756  002550  C022  F030         	movff	?___xxtofl+2,___flmul@b+2
 14757  002554  C023  F031         	movff	?___xxtofl+3,___flmul@b+3
 14758  002558  EC20  F00E         	call	___flmul	;wreg free
 14759  00255C  C02E  F047         	movff	?___flmul,___fldiv@b
 14760  002560  C02F  F048         	movff	?___flmul+1,___fldiv@b+1
 14761  002564  C030  F049         	movff	?___flmul+2,___fldiv@b+2
 14762  002568  C031  F04A         	movff	?___flmul+3,___fldiv@b+3
 14763  00256C  EC35  F010         	call	___fldiv	;wreg free
 14764  002570  C047  F053         	movff	?___fldiv,___fladd@b
 14765  002574  C048  F054         	movff	?___fldiv+1,___fladd@b+1
 14766  002578  C049  F055         	movff	?___fldiv+2,___fladd@b+2
 14767  00257C  C04A  F056         	movff	?___fldiv+3,___fladd@b+3
 14768  002580  0E00               	movlw	0
 14769  002582  6E4B               	movwf	___fldiv@a^0,c
 14770  002584  0E00               	movlw	0
 14771  002586  6E4C               	movwf	(___fldiv@a+1)^0,c
 14772  002588  0E20               	movlw	32
 14773  00258A  6E4D               	movwf	(___fldiv@a+2)^0,c
 14774  00258C  0E41               	movlw	65
 14775  00258E  6E4E               	movwf	(___fldiv@a+3)^0,c
 14776  002590  C1D6  F020         	movff	_Ki,___xxtofl@val
 14777  002594  C1D7  F021         	movff	_Ki+1,___xxtofl@val+1
 14778  002598  0E00               	movlw	0
 14779  00259A  BE21               	btfsc	(___xxtofl@val+1)^0,7,c
 14780  00259C  0EFF               	movlw	-1
 14781  00259E  6E22               	movwf	(___xxtofl@val+2)^0,c
 14782  0025A0  6E23               	movwf	(___xxtofl@val+3)^0,c
 14783  0025A2  0E01               	movlw	1
 14784  0025A4  EC27  F01B         	call	___xxtofl
 14785  0025A8  C020  F047         	movff	?___xxtofl,___fldiv@b
 14786  0025AC  C021  F048         	movff	?___xxtofl+1,___fldiv@b+1
 14787  0025B0  C022  F049         	movff	?___xxtofl+2,___fldiv@b+2
 14788  0025B4  C023  F04A         	movff	?___xxtofl+3,___fldiv@b+3
 14789  0025B8  EC35  F010         	call	___fldiv	;wreg free
 14790  0025BC  C047  F032         	movff	?___fldiv,___flmul@a
 14791  0025C0  C048  F033         	movff	?___fldiv+1,___flmul@a+1
 14792  0025C4  C049  F034         	movff	?___fldiv+2,___flmul@a+2
 14793  0025C8  C04A  F035         	movff	?___fldiv+3,___flmul@a+3
 14794  0025CC  C0CF  F020         	movff	_sum_error,___xxtofl@val
 14795  0025D0  C0D0  F021         	movff	_sum_error+1,___xxtofl@val+1
 14796  0025D4  0E00               	movlw	0
 14797  0025D6  BE21               	btfsc	(___xxtofl@val+1)^0,7,c
 14798  0025D8  0EFF               	movlw	-1
 14799  0025DA  6E22               	movwf	(___xxtofl@val+2)^0,c
 14800  0025DC  6E23               	movwf	(___xxtofl@val+3)^0,c
 14801  0025DE  0E01               	movlw	1
 14802  0025E0  EC27  F01B         	call	___xxtofl
 14803  0025E4  C020  F02E         	movff	?___xxtofl,___flmul@b
 14804  0025E8  C021  F02F         	movff	?___xxtofl+1,___flmul@b+1
 14805  0025EC  C022  F030         	movff	?___xxtofl+2,___flmul@b+2
 14806  0025F0  C023  F031         	movff	?___xxtofl+3,___flmul@b+3
 14807  0025F4  EC20  F00E         	call	___flmul	;wreg free
 14808  0025F8  C02E  F057         	movff	?___flmul,___fladd@a
 14809  0025FC  C02F  F058         	movff	?___flmul+1,___fladd@a+1
 14810  002600  C030  F059         	movff	?___flmul+2,___fladd@a+2
 14811  002604  C031  F05A         	movff	?___flmul+3,___fladd@a+3
 14812  002608  ECA4  F009         	call	___fladd	;wreg free
 14813  00260C  C053  F0B5         	movff	?___fladd,_dc_value
 14814  002610  C054  F0B6         	movff	?___fladd+1,_dc_value+1
 14815  002614  C055  F0B7         	movff	?___fladd+2,_dc_value+2
 14816  002618  C056  F0B8         	movff	?___fladd+3,_dc_value+3
 14817  00261C                     
 14818                           ;main.c: 77:     if (dc_value > 100)
 14819  00261C  0E00               	movlw	0
 14820  00261E  6E01               	movwf	___flge@ff1^0,c
 14821  002620  0E00               	movlw	0
 14822  002622  6E02               	movwf	(___flge@ff1+1)^0,c
 14823  002624  0EC8               	movlw	200
 14824  002626  6E03               	movwf	(___flge@ff1+2)^0,c
 14825  002628  0E42               	movlw	66
 14826  00262A  6E04               	movwf	(___flge@ff1+3)^0,c
 14827  00262C  C0B5  F005         	movff	_dc_value,___flge@ff2
 14828  002630  C0B6  F006         	movff	_dc_value+1,___flge@ff2+1
 14829  002634  C0B7  F007         	movff	_dc_value+2,___flge@ff2+2
 14830  002638  C0B8  F008         	movff	_dc_value+3,___flge@ff2+3
 14831  00263C  EC37  F021         	call	___flge	;wreg free
 14832  002640  B0D8               	btfsc	status,0,c
 14833  002642  EF25  F013         	goto	i2u597_41
 14834  002646  EF27  F013         	goto	i2u597_40
 14835  00264A                     i2u597_41:
 14836  00264A  EF32  F013         	goto	i2l5489
 14837  00264E                     i2u597_40:
 14838  00264E                     
 14839                           ;main.c: 78:         dc_value = 100;
 14840  00264E  0E00               	movlw	0
 14841  002650  0100               	movlb	0	; () banked
 14842  002652  6FB5               	movwf	_dc_value& (0+255),b
 14843  002654  0E00               	movlw	0
 14844  002656  6FB6               	movwf	(_dc_value+1)& (0+255),b
 14845  002658  0EC8               	movlw	200
 14846  00265A  6FB7               	movwf	(_dc_value+2)& (0+255),b
 14847  00265C  0E42               	movlw	66
 14848  00265E  6FB8               	movwf	(_dc_value+3)& (0+255),b
 14849  002660  EF42  F013         	goto	i2l5493
 14850  002664                     i2l5489:
 14851  002664  0100               	movlb	0	; () banked
 14852  002666  BFB8               	btfsc	(_dc_value+3)& (0+255),7,b
 14853  002668  EF3A  F013         	goto	i2u598_40
 14854  00266C  EF38  F013         	goto	i2u598_41
 14855  002670                     i2u598_41:
 14856  002670  EF42  F013         	goto	i2l5493
 14857  002674                     i2u598_40:
 14858  002674                     
 14859                           ; BSR set to: 0
 14860                           ;main.c: 80:         dc_value = 0;
 14861  002674  0E00               	movlw	0
 14862  002676  6FB5               	movwf	_dc_value& (0+255),b
 14863  002678  0E00               	movlw	0
 14864  00267A  6FB6               	movwf	(_dc_value+1)& (0+255),b
 14865  00267C  0E00               	movlw	0
 14866  00267E  6FB7               	movwf	(_dc_value+2)& (0+255),b
 14867  002680  0E00               	movlw	0
 14868  002682  6FB8               	movwf	(_dc_value+3)& (0+255),b
 14869  002684                     i2l5493:
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;main.c: 82:     dc_value = (long int) dc_value * 10.23;
 14873  002684  C0B5  F071         	movff	_dc_value,___fltol@f1
 14874  002688  C0B6  F072         	movff	_dc_value+1,___fltol@f1+1
 14875  00268C  C0B7  F073         	movff	_dc_value+2,___fltol@f1+2
 14876  002690  C0B8  F074         	movff	_dc_value+3,___fltol@f1+3
 14877  002694  ECB3  F020         	call	___fltol	;wreg free
 14878  002698  C071  F020         	movff	?___fltol,___xxtofl@val
 14879  00269C  C072  F021         	movff	?___fltol+1,___xxtofl@val+1
 14880  0026A0  C073  F022         	movff	?___fltol+2,___xxtofl@val+2
 14881  0026A4  C074  F023         	movff	?___fltol+3,___xxtofl@val+3
 14882  0026A8  0E01               	movlw	1
 14883  0026AA  EC27  F01B         	call	___xxtofl
 14884  0026AE  C020  F02E         	movff	?___xxtofl,___flmul@b
 14885  0026B2  C021  F02F         	movff	?___xxtofl+1,___flmul@b+1
 14886  0026B6  C022  F030         	movff	?___xxtofl+2,___flmul@b+2
 14887  0026BA  C023  F031         	movff	?___xxtofl+3,___flmul@b+3
 14888  0026BE  0E14               	movlw	20
 14889  0026C0  6E32               	movwf	___flmul@a^0,c
 14890  0026C2  0EAE               	movlw	174
 14891  0026C4  6E33               	movwf	(___flmul@a+1)^0,c
 14892  0026C6  0E23               	movlw	35
 14893  0026C8  6E34               	movwf	(___flmul@a+2)^0,c
 14894  0026CA  0E41               	movlw	65
 14895  0026CC  6E35               	movwf	(___flmul@a+3)^0,c
 14896  0026CE  EC20  F00E         	call	___flmul	;wreg free
 14897  0026D2  C02E  F0B5         	movff	?___flmul,_dc_value
 14898  0026D6  C02F  F0B6         	movff	?___flmul+1,_dc_value+1
 14899  0026DA  C030  F0B7         	movff	?___flmul+2,_dc_value+2
 14900  0026DE  C031  F0B8         	movff	?___flmul+3,_dc_value+3
 14901  0026E2                     
 14902                           ;main.c: 84:     EPWM1_LoadDutyValue(dc_value);
 14903  0026E2  C0B5  F071         	movff	_dc_value,___fltol@f1
 14904  0026E6  C0B6  F072         	movff	_dc_value+1,___fltol@f1+1
 14905  0026EA  C0B7  F073         	movff	_dc_value+2,___fltol@f1+2
 14906  0026EE  C0B8  F074         	movff	_dc_value+3,___fltol@f1+3
 14907  0026F2  ECB3  F020         	call	___fltol	;wreg free
 14908  0026F6  C071  F07B         	movff	?___fltol,EPWM1_LoadDutyValue@dutyValue
 14909  0026FA  C072  F07C         	movff	?___fltol+1,EPWM1_LoadDutyValue@dutyValue+1
 14910  0026FE  ECAD  F028         	call	_EPWM1_LoadDutyValue	;wreg free
 14911  002702                     
 14912                           ;main.c: 87:     if (abs(error) >= turn_on_value) {
 14913  002702  C0B9  F071         	movff	_error,___fltol@f1
 14914  002706  C0BA  F072         	movff	_error+1,___fltol@f1+1
 14915  00270A  C0BB  F073         	movff	_error+2,___fltol@f1+2
 14916  00270E  C0BC  F074         	movff	_error+3,___fltol@f1+3
 14917  002712  ECB3  F020         	call	___fltol	;wreg free
 14918  002716  C071  F07B         	movff	?___fltol,i2abs@a
 14919  00271A  C072  F07C         	movff	?___fltol+1,i2abs@a+1
 14920  00271E  ECA7  F027         	call	i2_abs	;wreg free
 14921  002722  0100               	movlb	0	; () banked
 14922  002724  51D8               	movf	_turn_on_value& (0+255),w,b
 14923  002726  5D7B               	subwf	?i2_abs& (0+255),w,b
 14924  002728  517C               	movf	(?i2_abs+1)& (0+255),w,b
 14925  00272A  0A80               	xorlw	128
 14926  00272C  6F7F               	movwf	??_PI_Controller& (0+255),b
 14927  00272E  51D9               	movf	(_turn_on_value+1)& (0+255),w,b
 14928  002730  0A80               	xorlw	128
 14929  002732  597F               	subwfb	??_PI_Controller& (0+255),w,b
 14930  002734  A0D8               	btfss	status,0,c
 14931  002736  EF9F  F013         	goto	i2u599_41
 14932  00273A  EFA1  F013         	goto	i2u599_40
 14933  00273E                     i2u599_41:
 14934  00273E  EFA2  F013         	goto	i2l5499
 14935  002742                     i2u599_40:
 14936  002742                     
 14937                           ; BSR set to: 0
 14938  002742  8A89               	bsf	137,5,c	;volatile
 14939  002744                     i2l5499:
 14940                           
 14941                           ; BSR set to: 0
 14942                           ;main.c: 90:     if (abs(error) <= turn_off_value) {
 14943  002744  C0B9  F071         	movff	_error,___fltol@f1
 14944  002748  C0BA  F072         	movff	_error+1,___fltol@f1+1
 14945  00274C  C0BB  F073         	movff	_error+2,___fltol@f1+2
 14946  002750  C0BC  F074         	movff	_error+3,___fltol@f1+3
 14947  002754  ECB3  F020         	call	___fltol	;wreg free
 14948  002758  C071  F07B         	movff	?___fltol,i2abs@a
 14949  00275C  C072  F07C         	movff	?___fltol+1,i2abs@a+1
 14950  002760  ECA7  F027         	call	i2_abs	;wreg free
 14951  002764  0100               	movlb	0	; () banked
 14952  002766  517B               	movf	?i2_abs& (0+255),w,b
 14953  002768  5DD6               	subwf	_turn_off_value& (0+255),w,b
 14954  00276A  51D7               	movf	(_turn_off_value+1)& (0+255),w,b
 14955  00276C  0A80               	xorlw	128
 14956  00276E  6F7F               	movwf	??_PI_Controller& (0+255),b
 14957  002770  517C               	movf	(?i2_abs+1)& (0+255),w,b
 14958  002772  0A80               	xorlw	128
 14959  002774  597F               	subwfb	??_PI_Controller& (0+255),w,b
 14960  002776  A0D8               	btfss	status,0,c
 14961  002778  EFC0  F013         	goto	i2u600_41
 14962  00277C  EFC2  F013         	goto	i2u600_40
 14963  002780                     i2u600_41:
 14964  002780  EFC3  F013         	goto	i2l522
 14965  002784                     i2u600_40:
 14966  002784                     
 14967                           ; BSR set to: 0
 14968  002784  9A89               	bcf	137,5,c	;volatile
 14969  002786                     i2l522:
 14970                           
 14971                           ; BSR set to: 0
 14972  002786  0012               	return		;funcret
 14973  002788                     __end_of_PI_Controller:
 14974                           	opt callstack 0
 14975                           
 14976 ;; *************** function i2_abs *****************
 14977 ;; Defined at:
 14978 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;  a               2   27[BANK0 ] int 
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;		None
 14983 ;; Return value:  Size  Location     Type
 14984 ;;                  2   27[BANK0 ] int 
 14985 ;; Registers used:
 14986 ;;		wreg, status,2, status,0
 14987 ;; Tracked objects:
 14988 ;;		On entry : 0/0
 14989 ;;		On exit  : 0/0
 14990 ;;		Unchanged: 0/0
 14991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14996 ;;Total ram usage:        4 bytes
 14997 ;; Hardware stack levels used:    1
 14998 ;; This function calls:
 14999 ;;		Nothing
 15000 ;; This function is called by:
 15001 ;;		_PI_Controller
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           	psect	text70
 15006  004F4E                     __ptext70:
 15007                           	opt callstack 0
 15008  004F4E                     i2_abs:
 15009                           	opt callstack 15
 15010  004F4E  0100               	movlb	0	; () banked
 15011  004F50  BF7C               	btfsc	(i2abs@a+1)& (0+255),7,b
 15012  004F52  EFB5  F027         	goto	i2u592_40
 15013  004F56  517C               	movf	(i2abs@a+1)& (0+255),w,b
 15014  004F58  E106               	bnz	i2u592_41
 15015  004F5A  057B               	decf	i2abs@a& (0+255),w,b
 15016  004F5C  B0D8               	btfsc	status,0,c
 15017  004F5E  EFB3  F027         	goto	i2u592_41
 15018  004F62  EFB5  F027         	goto	i2u592_40
 15019  004F66                     i2u592_41:
 15020  004F66  EFC3  F027         	goto	i2l1602
 15021  004F6A                     i2u592_40:
 15022  004F6A                     
 15023                           ; BSR set to: 0
 15024  004F6A  C07B  F07D         	movff	i2abs@a,??i2_abs
 15025  004F6E  C07C  F07E         	movff	i2abs@a+1,??i2_abs+1
 15026  004F72  1F7D               	comf	??i2_abs& (0+255),f,b
 15027  004F74  1F7E               	comf	(??i2_abs+1)& (0+255),f,b
 15028  004F76  4B7D               	infsnz	??i2_abs& (0+255),f,b
 15029  004F78  2B7E               	incf	(??i2_abs+1)& (0+255),f,b
 15030  004F7A  C07D  F07B         	movff	??i2_abs,?i2_abs
 15031  004F7E  C07E  F07C         	movff	??i2_abs+1,?i2_abs+1
 15032  004F82  EFC7  F027         	goto	i2l1605
 15033  004F86                     i2l1602:
 15034                           
 15035                           ; BSR set to: 0
 15036  004F86  C07B  F07B         	movff	i2abs@a,?i2_abs
 15037  004F8A  C07C  F07C         	movff	i2abs@a+1,?i2_abs+1
 15038  004F8E                     i2l1605:
 15039                           
 15040                           ; BSR set to: 0
 15041  004F8E  0012               	return		;funcret
 15042  004F90                     __end_ofi2_abs:
 15043                           	opt callstack 0
 15044                           
 15045 ;; *************** function i2___wmul *****************
 15046 ;; Defined at:
 15047 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;  multiplier      2    0[COMRAM] unsigned int 
 15050 ;;  multiplicand    2    2[COMRAM] unsigned int 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;  __wmul          2    4[COMRAM] unsigned int 
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  2    0[COMRAM] unsigned int 
 15055 ;; Registers used:
 15056 ;;		wreg, status,2, status,0, prodl, prodh
 15057 ;; Tracked objects:
 15058 ;;		On entry : 0/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15065 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15066 ;;Total ram usage:        6 bytes
 15067 ;; Hardware stack levels used:    1
 15068 ;; This function calls:
 15069 ;;		Nothing
 15070 ;; This function is called by:
 15071 ;;		_PI_Controller
 15072 ;; This function uses a non-reentrant model
 15073 ;;
 15074                           
 15075                           	psect	text71
 15076  0052E6                     __ptext71:
 15077                           	opt callstack 0
 15078  0052E6                     i2___wmul:
 15079                           	opt callstack 15
 15080  0052E6  5001               	movf	i2___wmul@multiplier^0,w,c
 15081  0052E8  0203               	mulwf	i2___wmul@multiplicand^0,c
 15082  0052EA  CFF3 F005          	movff	prodl,i2___wmul@product
 15083  0052EE  CFF4 F006          	movff	prodh,i2___wmul@product+1
 15084  0052F2  5001               	movf	i2___wmul@multiplier^0,w,c
 15085  0052F4  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 15086  0052F6  50F3               	movf	243,w,c
 15087  0052F8  2606               	addwf	(i2___wmul@product+1)^0,f,c
 15088  0052FA  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 15089  0052FC  0203               	mulwf	i2___wmul@multiplicand^0,c
 15090  0052FE  50F3               	movf	243,w,c
 15091  005300  2606               	addwf	(i2___wmul@product+1)^0,f,c
 15092  005302  C005  F001         	movff	i2___wmul@product,?i2___wmul
 15093  005306  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 15094  00530A  0012               	return		;funcret
 15095  00530C                     __end_ofi2___wmul:
 15096                           	opt callstack 0
 15097                           
 15098 ;; *************** function ___fltol *****************
 15099 ;; Defined at:
 15100 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 15101 ;; Parameters:    Size  Location     Type
 15102 ;;  f1              4   17[BANK0 ] unsigned int 
 15103 ;; Auto vars:     Size  Location     Type
 15104 ;;  exp1            1   26[BANK0 ] unsigned char 
 15105 ;;  sign1           1   25[BANK0 ] unsigned char 
 15106 ;; Return value:  Size  Location     Type
 15107 ;;                  4   17[BANK0 ] long 
 15108 ;; Registers used:
 15109 ;;		wreg, status,2, status,0
 15110 ;; Tracked objects:
 15111 ;;		On entry : 0/0
 15112 ;;		On exit  : 0/0
 15113 ;;		Unchanged: 0/0
 15114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15115 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15118 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15119 ;;Total ram usage:       10 bytes
 15120 ;; Hardware stack levels used:    1
 15121 ;; This function calls:
 15122 ;;		Nothing
 15123 ;; This function is called by:
 15124 ;;		_PI_Controller
 15125 ;; This function uses a non-reentrant model
 15126 ;;
 15127                           
 15128                           	psect	text72
 15129  004166                     __ptext72:
 15130                           	opt callstack 0
 15131  004166                     ___fltol:
 15132                           	opt callstack 15
 15133  004166  0100               	movlb	0	; () banked
 15134  004168  3573               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15135  00416A  3574               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15136  00416C  6F7A               	movwf	___fltol@exp1& (0+255),b
 15137  00416E  517A               	movf	___fltol@exp1& (0+255),w,b
 15138  004170  A4D8               	btfss	status,2,c
 15139  004172  EFBD  F020         	goto	i2u575_41
 15140  004176  EFBF  F020         	goto	i2u575_40
 15141  00417A                     i2u575_41:
 15142  00417A  EFC9  F020         	goto	i2l5381
 15143  00417E                     i2u575_40:
 15144  00417E                     i2l5377:
 15145                           
 15146                           ; BSR set to: 0
 15147  00417E  0E00               	movlw	0
 15148  004180  6F71               	movwf	?___fltol& (0+255),b
 15149  004182  0E00               	movlw	0
 15150  004184  6F72               	movwf	(?___fltol+1)& (0+255),b
 15151  004186  0E00               	movlw	0
 15152  004188  6F73               	movwf	(?___fltol+2)& (0+255),b
 15153  00418A  0E00               	movlw	0
 15154  00418C  6F74               	movwf	(?___fltol+3)& (0+255),b
 15155  00418E  EF36  F021         	goto	i2l1224
 15156  004192                     i2l5381:
 15157                           
 15158                           ; BSR set to: 0
 15159  004192  C071  F075         	movff	___fltol@f1,??___fltol
 15160  004196  C072  F076         	movff	___fltol@f1+1,??___fltol+1
 15161  00419A  C073  F077         	movff	___fltol@f1+2,??___fltol+2
 15162  00419E  C074  F078         	movff	___fltol@f1+3,??___fltol+3
 15163  0041A2  0E20               	movlw	32
 15164  0041A4  EFD9  F020         	goto	i2u576_40
 15165  0041A8                     i2u576_45:
 15166  0041A8  90D8               	bcf	status,0,c
 15167  0041AA  3378               	rrcf	(??___fltol+3)& (0+255),f,b
 15168  0041AC  3377               	rrcf	(??___fltol+2)& (0+255),f,b
 15169  0041AE  3376               	rrcf	(??___fltol+1)& (0+255),f,b
 15170  0041B0  3375               	rrcf	??___fltol& (0+255),f,b
 15171  0041B2                     i2u576_40:
 15172  0041B2  2EE8               	decfsz	wreg,f,c
 15173  0041B4  EFD4  F020         	goto	i2u576_45
 15174  0041B8  5175               	movf	??___fltol& (0+255),w,b
 15175  0041BA  6F79               	movwf	___fltol@sign1& (0+255),b
 15176  0041BC                     
 15177                           ; BSR set to: 0
 15178  0041BC  8F73               	bsf	(___fltol@f1+2)& (0+255),7,b
 15179  0041BE                     
 15180                           ; BSR set to: 0
 15181  0041BE  0EFF               	movlw	255
 15182  0041C0  1771               	andwf	___fltol@f1& (0+255),f,b
 15183  0041C2  0EFF               	movlw	255
 15184  0041C4  1772               	andwf	(___fltol@f1+1)& (0+255),f,b
 15185  0041C6  0EFF               	movlw	255
 15186  0041C8  1773               	andwf	(___fltol@f1+2)& (0+255),f,b
 15187  0041CA  0E00               	movlw	0
 15188  0041CC  1774               	andwf	(___fltol@f1+3)& (0+255),f,b
 15189  0041CE                     
 15190                           ; BSR set to: 0
 15191  0041CE  0E96               	movlw	150
 15192  0041D0  5F7A               	subwf	___fltol@exp1& (0+255),f,b
 15193  0041D2                     
 15194                           ; BSR set to: 0
 15195  0041D2  BF7A               	btfsc	___fltol@exp1& (0+255),7,b
 15196  0041D4  EFF0  F020         	goto	i2u577_40
 15197  0041D8  EFEE  F020         	goto	i2u577_41
 15198  0041DC                     i2u577_41:
 15199  0041DC  EF06  F021         	goto	i2l5401
 15200  0041E0                     i2u577_40:
 15201  0041E0                     
 15202                           ; BSR set to: 0
 15203  0041E0  517A               	movf	___fltol@exp1& (0+255),w,b
 15204  0041E2  0A80               	xorlw	128
 15205  0041E4  0F97               	addlw	151
 15206  0041E6  B0D8               	btfsc	status,0,c
 15207  0041E8  EFF8  F020         	goto	i2u578_41
 15208  0041EC  EFFA  F020         	goto	i2u578_40
 15209  0041F0                     i2u578_41:
 15210  0041F0  EFFC  F020         	goto	i2l5397
 15211  0041F4                     i2u578_40:
 15212  0041F4  EFBF  F020         	goto	i2l5377
 15213  0041F8                     i2l5397:
 15214                           
 15215                           ; BSR set to: 0
 15216  0041F8  90D8               	bcf	status,0,c
 15217  0041FA  3374               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15218  0041FC  3373               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15219  0041FE  3372               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15220  004200  3371               	rrcf	___fltol@f1& (0+255),f,b
 15221  004202                     
 15222                           ; BSR set to: 0
 15223  004202  3F7A               	incfsz	___fltol@exp1& (0+255),f,b
 15224  004204  EFFC  F020         	goto	i2l5397
 15225  004208  EF1E  F021         	goto	i2l5411
 15226  00420C                     i2l5401:
 15227                           
 15228                           ; BSR set to: 0
 15229  00420C  0E1F               	movlw	31
 15230  00420E  657A               	cpfsgt	___fltol@exp1& (0+255),b
 15231  004210  EF0C  F021         	goto	i2u579_41
 15232  004214  EF0E  F021         	goto	i2u579_40
 15233  004218                     i2u579_41:
 15234  004218  EF16  F021         	goto	i2l5409
 15235  00421C                     i2u579_40:
 15236  00421C  EFBF  F020         	goto	i2l5377
 15237  004220                     i2l5407:
 15238                           
 15239                           ; BSR set to: 0
 15240  004220  90D8               	bcf	status,0,c
 15241  004222  3771               	rlcf	___fltol@f1& (0+255),f,b
 15242  004224  3772               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15243  004226  3773               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15244  004228  3774               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15245  00422A  077A               	decf	___fltol@exp1& (0+255),f,b
 15246  00422C                     i2l5409:
 15247                           
 15248                           ; BSR set to: 0
 15249  00422C  517A               	movf	___fltol@exp1& (0+255),w,b
 15250  00422E  A4D8               	btfss	status,2,c
 15251  004230  EF1C  F021         	goto	i2u580_41
 15252  004234  EF1E  F021         	goto	i2u580_40
 15253  004238                     i2u580_41:
 15254  004238  EF10  F021         	goto	i2l5407
 15255  00423C                     i2u580_40:
 15256  00423C                     i2l5411:
 15257                           
 15258                           ; BSR set to: 0
 15259  00423C  5179               	movf	___fltol@sign1& (0+255),w,b
 15260  00423E  B4D8               	btfsc	status,2,c
 15261  004240  EF24  F021         	goto	i2u581_41
 15262  004244  EF26  F021         	goto	i2u581_40
 15263  004248                     i2u581_41:
 15264  004248  EF2E  F021         	goto	i2l5415
 15265  00424C                     i2u581_40:
 15266  00424C                     
 15267                           ; BSR set to: 0
 15268  00424C  1F74               	comf	(___fltol@f1+3)& (0+255),f,b
 15269  00424E  1F73               	comf	(___fltol@f1+2)& (0+255),f,b
 15270  004250  1F72               	comf	(___fltol@f1+1)& (0+255),f,b
 15271  004252  6D71               	negf	___fltol@f1& (0+255),b
 15272  004254  0E00               	movlw	0
 15273  004256  2372               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15274  004258  2373               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15275  00425A  2374               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15276  00425C                     i2l5415:
 15277                           
 15278                           ; BSR set to: 0
 15279  00425C  C071  F071         	movff	___fltol@f1,?___fltol
 15280  004260  C072  F072         	movff	___fltol@f1+1,?___fltol+1
 15281  004264  C073  F073         	movff	___fltol@f1+2,?___fltol+2
 15282  004268  C074  F074         	movff	___fltol@f1+3,?___fltol+3
 15283  00426C                     i2l1224:
 15284                           
 15285                           ; BSR set to: 0
 15286  00426C  0012               	return		;funcret
 15287  00426E                     __end_of___fltol:
 15288                           	opt callstack 0
 15289                           
 15290 ;; *************** function ___flsub *****************
 15291 ;; Defined at:
 15292 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15293 ;; Parameters:    Size  Location     Type
 15294 ;;  b               4   17[BANK0 ] long 
 15295 ;;  a               4   21[BANK0 ] long 
 15296 ;; Auto vars:     Size  Location     Type
 15297 ;;		None
 15298 ;; Return value:  Size  Location     Type
 15299 ;;                  4   17[BANK0 ] long 
 15300 ;; Registers used:
 15301 ;;		wreg, status,2, status,0, cstack
 15302 ;; Tracked objects:
 15303 ;;		On entry : 0/0
 15304 ;;		On exit  : 0/0
 15305 ;;		Unchanged: 0/0
 15306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15307 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15310 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15311 ;;Total ram usage:        8 bytes
 15312 ;; Hardware stack levels used:    1
 15313 ;; Hardware stack levels required when called:    1
 15314 ;; This function calls:
 15315 ;;		___fladd
 15316 ;; This function is called by:
 15317 ;;		_PI_Controller
 15318 ;; This function uses a non-reentrant model
 15319 ;;
 15320                           
 15321                           	psect	text73
 15322  004E3C                     __ptext73:
 15323                           	opt callstack 0
 15324  004E3C                     ___flsub:
 15325                           	opt callstack 14
 15326  004E3C  0E00               	movlw	0
 15327  004E3E  0100               	movlb	0	; () banked
 15328  004E40  1B75               	xorwf	___flsub@a& (0+255),f,b
 15329  004E42  0E00               	movlw	0
 15330  004E44  1B76               	xorwf	(___flsub@a+1)& (0+255),f,b
 15331  004E46  0E00               	movlw	0
 15332  004E48  1B77               	xorwf	(___flsub@a+2)& (0+255),f,b
 15333  004E4A  0E80               	movlw	128
 15334  004E4C  1B78               	xorwf	(___flsub@a+3)& (0+255),f,b
 15335  004E4E                     
 15336                           ; BSR set to: 0
 15337  004E4E  C071  F053         	movff	___flsub@b,___fladd@b
 15338  004E52  C072  F054         	movff	___flsub@b+1,___fladd@b+1
 15339  004E56  C073  F055         	movff	___flsub@b+2,___fladd@b+2
 15340  004E5A  C074  F056         	movff	___flsub@b+3,___fladd@b+3
 15341  004E5E  C075  F057         	movff	___flsub@a,___fladd@a
 15342  004E62  C076  F058         	movff	___flsub@a+1,___fladd@a+1
 15343  004E66  C077  F059         	movff	___flsub@a+2,___fladd@a+2
 15344  004E6A  C078  F05A         	movff	___flsub@a+3,___fladd@a+3
 15345  004E6E  ECA4  F009         	call	___fladd	;wreg free
 15346  004E72  C053  F071         	movff	?___fladd,?___flsub
 15347  004E76  C054  F072         	movff	?___fladd+1,?___flsub+1
 15348  004E7A  C055  F073         	movff	?___fladd+2,?___flsub+2
 15349  004E7E  C056  F074         	movff	?___fladd+3,?___flsub+3
 15350  004E82  0012               	return		;funcret
 15351  004E84                     __end_of___flsub:
 15352                           	opt callstack 0
 15353                           
 15354 ;; *************** function ___fladd *****************
 15355 ;; Defined at:
 15356 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;  b               4   82[COMRAM] long 
 15359 ;;  a               4   86[COMRAM] long 
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;  grs             1   16[BANK0 ] unsigned char 
 15362 ;;  bexp            1   15[BANK0 ] unsigned char 
 15363 ;;  aexp            1   14[BANK0 ] unsigned char 
 15364 ;;  signs           1   13[BANK0 ] unsigned char 
 15365 ;; Return value:  Size  Location     Type
 15366 ;;                  4   82[COMRAM] unsigned char 
 15367 ;; Registers used:
 15368 ;;		wreg, status,2, status,0
 15369 ;; Tracked objects:
 15370 ;;		On entry : 0/0
 15371 ;;		On exit  : 0/0
 15372 ;;		Unchanged: 0/0
 15373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15374 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15375 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15377 ;;      Totals:        12       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15378 ;;Total ram usage:       16 bytes
 15379 ;; Hardware stack levels used:    1
 15380 ;; This function calls:
 15381 ;;		Nothing
 15382 ;; This function is called by:
 15383 ;;		_PI_Controller
 15384 ;;		___flsub
 15385 ;; This function uses a non-reentrant model
 15386 ;;
 15387                           
 15388                           	psect	text74
 15389  001348                     __ptext74:
 15390                           	opt callstack 0
 15391  001348                     ___fladd:
 15392                           	opt callstack 14
 15393  001348  5056               	movf	(___fladd@b+3)^0,w,c
 15394  00134A  0B80               	andlw	128
 15395  00134C  0100               	movlb	0	; () banked
 15396  00134E  6F6D               	movwf	___fladd@signs& (0+255),b
 15397  001350  5056               	movf	(___fladd@b+3)^0,w,c
 15398  001352  2456               	addwf	(___fladd@b+3)^0,w,c
 15399  001354  6F6F               	movwf	___fladd@bexp& (0+255),b
 15400  001356                     
 15401                           ; BSR set to: 0
 15402  001356  AE55               	btfss	(___fladd@b+2)^0,7,c
 15403  001358  EFB0  F009         	goto	i2u394_41
 15404  00135C  EFB2  F009         	goto	i2u394_40
 15405  001360                     i2u394_41:
 15406  001360  EFB3  F009         	goto	i2l4429
 15407  001364                     i2u394_40:
 15408  001364                     
 15409                           ; BSR set to: 0
 15410  001364  816F               	bsf	___fladd@bexp& (0+255),0,b
 15411  001366                     i2l4429:
 15412                           
 15413                           ; BSR set to: 0
 15414  001366  516F               	movf	___fladd@bexp& (0+255),w,b
 15415  001368  B4D8               	btfsc	status,2,c
 15416  00136A  EFB9  F009         	goto	i2u395_41
 15417  00136E  EFBB  F009         	goto	i2u395_40
 15418  001372                     i2u395_41:
 15419  001372  EFD0  F009         	goto	i2l4439
 15420  001376                     i2u395_40:
 15421  001376                     
 15422                           ; BSR set to: 0
 15423  001376  296F               	incf	___fladd@bexp& (0+255),w,b
 15424  001378  A4D8               	btfss	status,2,c
 15425  00137A  EFC1  F009         	goto	i2u396_41
 15426  00137E  EFC3  F009         	goto	i2u396_40
 15427  001382                     i2u396_41:
 15428  001382  EFCB  F009         	goto	i2l4435
 15429  001386                     i2u396_40:
 15430  001386                     
 15431                           ; BSR set to: 0
 15432  001386  0E00               	movlw	0
 15433  001388  6E53               	movwf	___fladd@b^0,c
 15434  00138A  0E00               	movlw	0
 15435  00138C  6E54               	movwf	(___fladd@b+1)^0,c
 15436  00138E  0E00               	movlw	0
 15437  001390  6E55               	movwf	(___fladd@b+2)^0,c
 15438  001392  0E00               	movlw	0
 15439  001394  6E56               	movwf	(___fladd@b+3)^0,c
 15440  001396                     i2l4435:
 15441                           
 15442                           ; BSR set to: 0
 15443  001396  8E55               	bsf	(___fladd@b+2)^0,7,c
 15444  001398                     
 15445                           ; BSR set to: 0
 15446  001398  0E00               	movlw	0
 15447  00139A  6E56               	movwf	(___fladd@b+3)^0,c
 15448  00139C  EFD8  F009         	goto	i2l4441
 15449  0013A0                     i2l4439:
 15450                           
 15451                           ; BSR set to: 0
 15452  0013A0  0E00               	movlw	0
 15453  0013A2  6E53               	movwf	___fladd@b^0,c
 15454  0013A4  0E00               	movlw	0
 15455  0013A6  6E54               	movwf	(___fladd@b+1)^0,c
 15456  0013A8  0E00               	movlw	0
 15457  0013AA  6E55               	movwf	(___fladd@b+2)^0,c
 15458  0013AC  0E00               	movlw	0
 15459  0013AE  6E56               	movwf	(___fladd@b+3)^0,c
 15460  0013B0                     i2l4441:
 15461                           
 15462                           ; BSR set to: 0
 15463  0013B0  505A               	movf	(___fladd@a+3)^0,w,c
 15464  0013B2  0B80               	andlw	128
 15465  0013B4  6F6E               	movwf	___fladd@aexp& (0+255),b
 15466  0013B6                     
 15467                           ; BSR set to: 0
 15468  0013B6  516D               	movf	___fladd@signs& (0+255),w,b
 15469  0013B8  196E               	xorwf	___fladd@aexp& (0+255),w,b
 15470  0013BA  B4D8               	btfsc	status,2,c
 15471  0013BC  EFE2  F009         	goto	i2u397_41
 15472  0013C0  EFE4  F009         	goto	i2u397_40
 15473  0013C4                     i2u397_41:
 15474  0013C4  EFE5  F009         	goto	i2l4447
 15475  0013C8                     i2u397_40:
 15476  0013C8                     
 15477                           ; BSR set to: 0
 15478  0013C8  8D6D               	bsf	___fladd@signs& (0+255),6,b
 15479  0013CA                     i2l4447:
 15480                           
 15481                           ; BSR set to: 0
 15482  0013CA  505A               	movf	(___fladd@a+3)^0,w,c
 15483  0013CC  245A               	addwf	(___fladd@a+3)^0,w,c
 15484  0013CE  6F6E               	movwf	___fladd@aexp& (0+255),b
 15485  0013D0                     
 15486                           ; BSR set to: 0
 15487  0013D0  AE59               	btfss	(___fladd@a+2)^0,7,c
 15488  0013D2  EFED  F009         	goto	i2u398_41
 15489  0013D6  EFEF  F009         	goto	i2u398_40
 15490  0013DA                     i2u398_41:
 15491  0013DA  EFF0  F009         	goto	i2l4453
 15492  0013DE                     i2u398_40:
 15493  0013DE                     
 15494                           ; BSR set to: 0
 15495  0013DE  816E               	bsf	___fladd@aexp& (0+255),0,b
 15496  0013E0                     i2l4453:
 15497                           
 15498                           ; BSR set to: 0
 15499  0013E0  516E               	movf	___fladd@aexp& (0+255),w,b
 15500  0013E2  B4D8               	btfsc	status,2,c
 15501  0013E4  EFF6  F009         	goto	i2u399_41
 15502  0013E8  EFF8  F009         	goto	i2u399_40
 15503  0013EC                     i2u399_41:
 15504  0013EC  EF0D  F00A         	goto	i2l4463
 15505  0013F0                     i2u399_40:
 15506  0013F0                     
 15507                           ; BSR set to: 0
 15508  0013F0  296E               	incf	___fladd@aexp& (0+255),w,b
 15509  0013F2  A4D8               	btfss	status,2,c
 15510  0013F4  EFFE  F009         	goto	i2u400_41
 15511  0013F8  EF00  F00A         	goto	i2u400_40
 15512  0013FC                     i2u400_41:
 15513  0013FC  EF08  F00A         	goto	i2l4459
 15514  001400                     i2u400_40:
 15515  001400                     
 15516                           ; BSR set to: 0
 15517  001400  0E00               	movlw	0
 15518  001402  6E57               	movwf	___fladd@a^0,c
 15519  001404  0E00               	movlw	0
 15520  001406  6E58               	movwf	(___fladd@a+1)^0,c
 15521  001408  0E00               	movlw	0
 15522  00140A  6E59               	movwf	(___fladd@a+2)^0,c
 15523  00140C  0E00               	movlw	0
 15524  00140E  6E5A               	movwf	(___fladd@a+3)^0,c
 15525  001410                     i2l4459:
 15526                           
 15527                           ; BSR set to: 0
 15528  001410  8E59               	bsf	(___fladd@a+2)^0,7,c
 15529  001412                     
 15530                           ; BSR set to: 0
 15531  001412  0E00               	movlw	0
 15532  001414  6E5A               	movwf	(___fladd@a+3)^0,c
 15533  001416  EF15  F00A         	goto	i2l4465
 15534  00141A                     i2l4463:
 15535                           
 15536                           ; BSR set to: 0
 15537  00141A  0E00               	movlw	0
 15538  00141C  6E57               	movwf	___fladd@a^0,c
 15539  00141E  0E00               	movlw	0
 15540  001420  6E58               	movwf	(___fladd@a+1)^0,c
 15541  001422  0E00               	movlw	0
 15542  001424  6E59               	movwf	(___fladd@a+2)^0,c
 15543  001426  0E00               	movlw	0
 15544  001428  6E5A               	movwf	(___fladd@a+3)^0,c
 15545  00142A                     i2l4465:
 15546                           
 15547                           ; BSR set to: 0
 15548  00142A  516F               	movf	___fladd@bexp& (0+255),w,b
 15549  00142C  5D6E               	subwf	___fladd@aexp& (0+255),w,b
 15550  00142E  B0D8               	btfsc	status,0,c
 15551  001430  EF1C  F00A         	goto	i2u401_41
 15552  001434  EF1E  F00A         	goto	i2u401_40
 15553  001438                     i2u401_41:
 15554  001438  EF45  F00A         	goto	i2l4501
 15555  00143C                     i2u401_40:
 15556  00143C                     
 15557                           ; BSR set to: 0
 15558  00143C  AD6D               	btfss	___fladd@signs& (0+255),6,b
 15559  00143E  EF23  F00A         	goto	i2u402_41
 15560  001442  EF25  F00A         	goto	i2u402_40
 15561  001446                     i2u402_41:
 15562  001446  EF27  F00A         	goto	i2l4471
 15563  00144A                     i2u402_40:
 15564  00144A                     
 15565                           ; BSR set to: 0
 15566  00144A  0E80               	movlw	128
 15567  00144C  1B6D               	xorwf	___fladd@signs& (0+255),f,b
 15568  00144E                     i2l4471:
 15569                           
 15570                           ; BSR set to: 0
 15571  00144E  C06F  F070         	movff	___fladd@bexp,___fladd@grs
 15572  001452                     
 15573                           ; BSR set to: 0
 15574  001452  C06E  F06F         	movff	___fladd@aexp,___fladd@bexp
 15575  001456                     
 15576                           ; BSR set to: 0
 15577  001456  C070  F06E         	movff	___fladd@grs,___fladd@aexp
 15578  00145A                     
 15579                           ; BSR set to: 0
 15580  00145A  C053  F070         	movff	___fladd@b,___fladd@grs
 15581  00145E                     
 15582                           ; BSR set to: 0
 15583  00145E  C057  F053         	movff	___fladd@a,___fladd@b
 15584  001462                     
 15585                           ; BSR set to: 0
 15586  001462  C070  F057         	movff	___fladd@grs,___fladd@a
 15587  001466                     
 15588                           ; BSR set to: 0
 15589  001466  C054  F070         	movff	___fladd@b+1,___fladd@grs
 15590  00146A                     
 15591                           ; BSR set to: 0
 15592  00146A  C058  F054         	movff	___fladd@a+1,___fladd@b+1
 15593  00146E                     
 15594                           ; BSR set to: 0
 15595  00146E  C070  F058         	movff	___fladd@grs,___fladd@a+1
 15596  001472                     
 15597                           ; BSR set to: 0
 15598  001472  C055  F070         	movff	___fladd@b+2,___fladd@grs
 15599  001476                     
 15600                           ; BSR set to: 0
 15601  001476  C059  F055         	movff	___fladd@a+2,___fladd@b+2
 15602  00147A                     
 15603                           ; BSR set to: 0
 15604  00147A  C070  F059         	movff	___fladd@grs,___fladd@a+2
 15605  00147E                     
 15606                           ; BSR set to: 0
 15607  00147E  C056  F070         	movff	___fladd@b+3,___fladd@grs
 15608  001482                     
 15609                           ; BSR set to: 0
 15610  001482  C05A  F056         	movff	___fladd@a+3,___fladd@b+3
 15611  001486                     
 15612                           ; BSR set to: 0
 15613  001486  C070  F05A         	movff	___fladd@grs,___fladd@a+3
 15614  00148A                     i2l4501:
 15615                           
 15616                           ; BSR set to: 0
 15617  00148A  0E00               	movlw	0
 15618  00148C  6F70               	movwf	___fladd@grs& (0+255),b
 15619  00148E                     
 15620                           ; BSR set to: 0
 15621  00148E  516F               	movf	___fladd@bexp& (0+255),w,b
 15622  001490  C06E  F05B         	movff	___fladd@aexp,??___fladd
 15623  001494  6A5C               	clrf	(??___fladd+1)^0,c
 15624  001496  5E5B               	subwf	??___fladd^0,f,c
 15625  001498  0E00               	movlw	0
 15626  00149A  5A5C               	subwfb	(??___fladd+1)^0,f,c
 15627  00149C  BE5C               	btfsc	(??___fladd+1)^0,7,c
 15628  00149E  EF5A  F00A         	goto	i2u403_41
 15629  0014A2  505C               	movf	(??___fladd+1)^0,w,c
 15630  0014A4  E109               	bnz	i2u403_40
 15631  0014A6  0E1A               	movlw	26
 15632  0014A8  5C5B               	subwf	??___fladd^0,w,c
 15633  0014AA  A0D8               	btfss	status,0,c
 15634  0014AC  EF5A  F00A         	goto	i2u403_41
 15635  0014B0  EF5C  F00A         	goto	i2u403_40
 15636  0014B4                     i2u403_41:
 15637  0014B4  EF93  F00A         	goto	i2l1456
 15638  0014B8                     i2u403_40:
 15639  0014B8                     
 15640                           ; BSR set to: 0
 15641  0014B8  5053               	movf	___fladd@b^0,w,c
 15642  0014BA  1054               	iorwf	(___fladd@b+1)^0,w,c
 15643  0014BC  1055               	iorwf	(___fladd@b+2)^0,w,c
 15644  0014BE  1056               	iorwf	(___fladd@b+3)^0,w,c
 15645  0014C0  A4D8               	btfss	status,2,c
 15646  0014C2  EF65  F00A         	goto	i2u404_41
 15647  0014C6  EF68  F00A         	goto	i2u404_40
 15648  0014CA                     i2u404_41:
 15649  0014CA  0E01               	movlw	1
 15650  0014CC  EF69  F00A         	goto	i2u405_40
 15651  0014D0                     i2u404_40:
 15652  0014D0  0E00               	movlw	0
 15653  0014D2                     i2u405_40:
 15654  0014D2  6F70               	movwf	___fladd@grs& (0+255),b
 15655  0014D4                     
 15656                           ; BSR set to: 0
 15657  0014D4  0E00               	movlw	0
 15658  0014D6  6E53               	movwf	___fladd@b^0,c
 15659  0014D8  0E00               	movlw	0
 15660  0014DA  6E54               	movwf	(___fladd@b+1)^0,c
 15661  0014DC  0E00               	movlw	0
 15662  0014DE  6E55               	movwf	(___fladd@b+2)^0,c
 15663  0014E0  0E00               	movlw	0
 15664  0014E2  6E56               	movwf	(___fladd@b+3)^0,c
 15665  0014E4                     
 15666                           ; BSR set to: 0
 15667  0014E4  C06E  F06F         	movff	___fladd@aexp,___fladd@bexp
 15668  0014E8  EF9C  F00A         	goto	i2l1455
 15669  0014EC                     i2l1457:
 15670                           
 15671                           ; BSR set to: 0
 15672  0014EC  A170               	btfss	___fladd@grs& (0+255),0,b
 15673  0014EE  EF7B  F00A         	goto	i2u406_41
 15674  0014F2  EF7D  F00A         	goto	i2u406_40
 15675  0014F6                     i2u406_41:
 15676  0014F6  EF83  F00A         	goto	i2l4513
 15677  0014FA                     i2u406_40:
 15678  0014FA                     
 15679                           ; BSR set to: 0
 15680  0014FA  90D8               	bcf	status,0,c
 15681  0014FC  3170               	rrcf	___fladd@grs& (0+255),w,b
 15682  0014FE  0901               	iorlw	1
 15683  001500  6F70               	movwf	___fladd@grs& (0+255),b
 15684  001502  EF85  F00A         	goto	i2l4515
 15685  001506                     i2l4513:
 15686                           
 15687                           ; BSR set to: 0
 15688  001506  90D8               	bcf	status,0,c
 15689  001508  3370               	rrcf	___fladd@grs& (0+255),f,b
 15690  00150A                     i2l4515:
 15691                           
 15692                           ; BSR set to: 0
 15693  00150A  A053               	btfss	___fladd@b^0,0,c
 15694  00150C  EF8A  F00A         	goto	i2u407_41
 15695  001510  EF8C  F00A         	goto	i2u407_40
 15696  001514                     i2u407_41:
 15697  001514  EF8D  F00A         	goto	i2l4519
 15698  001518                     i2u407_40:
 15699  001518                     
 15700                           ; BSR set to: 0
 15701  001518  8F70               	bsf	___fladd@grs& (0+255),7,b
 15702  00151A                     i2l4519:
 15703                           
 15704                           ; BSR set to: 0
 15705  00151A  3456               	rlcf	(___fladd@b+3)^0,w,c
 15706  00151C  3256               	rrcf	(___fladd@b+3)^0,f,c
 15707  00151E  3255               	rrcf	(___fladd@b+2)^0,f,c
 15708  001520  3254               	rrcf	(___fladd@b+1)^0,f,c
 15709  001522  3253               	rrcf	___fladd@b^0,f,c
 15710  001524                     
 15711                           ; BSR set to: 0
 15712  001524  2B6F               	incf	___fladd@bexp& (0+255),f,b
 15713  001526                     i2l1456:
 15714                           
 15715                           ; BSR set to: 0
 15716  001526  516E               	movf	___fladd@aexp& (0+255),w,b
 15717  001528  5D6F               	subwf	___fladd@bexp& (0+255),w,b
 15718  00152A  A0D8               	btfss	status,0,c
 15719  00152C  EF9A  F00A         	goto	i2u408_41
 15720  001530  EF9C  F00A         	goto	i2u408_40
 15721  001534                     i2u408_41:
 15722  001534  EF76  F00A         	goto	i2l1457
 15723  001538                     i2u408_40:
 15724  001538                     i2l1455:
 15725                           
 15726                           ; BSR set to: 0
 15727  001538  BD6D               	btfsc	___fladd@signs& (0+255),6,b
 15728  00153A  EFA1  F00A         	goto	i2u409_41
 15729  00153E  EFA3  F00A         	goto	i2u409_40
 15730  001542                     i2u409_41:
 15731  001542  EFE3  F00A         	goto	i2l4547
 15732  001546                     i2u409_40:
 15733  001546                     
 15734                           ; BSR set to: 0
 15735  001546  516F               	movf	___fladd@bexp& (0+255),w,b
 15736  001548  A4D8               	btfss	status,2,c
 15737  00154A  EFA9  F00A         	goto	i2u410_41
 15738  00154E  EFAB  F00A         	goto	i2u410_40
 15739  001552                     i2u410_41:
 15740  001552  EFB5  F00A         	goto	i2l4529
 15741  001556                     i2u410_40:
 15742  001556                     
 15743                           ; BSR set to: 0
 15744  001556  0E00               	movlw	0
 15745  001558  6E53               	movwf	?___fladd^0,c
 15746  00155A  0E00               	movlw	0
 15747  00155C  6E54               	movwf	(?___fladd+1)^0,c
 15748  00155E  0E00               	movlw	0
 15749  001560  6E55               	movwf	(?___fladd+2)^0,c
 15750  001562  0E00               	movlw	0
 15751  001564  6E56               	movwf	(?___fladd+3)^0,c
 15752  001566  EF04  F00C         	goto	i2l1464
 15753  00156A                     i2l4529:
 15754                           
 15755                           ; BSR set to: 0
 15756  00156A  5057               	movf	___fladd@a^0,w,c
 15757  00156C  2653               	addwf	___fladd@b^0,f,c
 15758  00156E  5058               	movf	(___fladd@a+1)^0,w,c
 15759  001570  2254               	addwfc	(___fladd@b+1)^0,f,c
 15760  001572  5059               	movf	(___fladd@a+2)^0,w,c
 15761  001574  2255               	addwfc	(___fladd@b+2)^0,f,c
 15762  001576  505A               	movf	(___fladd@a+3)^0,w,c
 15763  001578  2256               	addwfc	(___fladd@b+3)^0,f,c
 15764  00157A                     
 15765                           ; BSR set to: 0
 15766  00157A  A056               	btfss	(___fladd@b+3)^0,0,c
 15767  00157C  EFC2  F00A         	goto	i2u411_41
 15768  001580  EFC4  F00A         	goto	i2u411_40
 15769  001584                     i2u411_41:
 15770  001584  EF70  F00B         	goto	i2l4583
 15771  001588                     i2u411_40:
 15772  001588                     
 15773                           ; BSR set to: 0
 15774  001588  A170               	btfss	___fladd@grs& (0+255),0,b
 15775  00158A  EFC9  F00A         	goto	i2u412_41
 15776  00158E  EFCB  F00A         	goto	i2u412_40
 15777  001592                     i2u412_41:
 15778  001592  EFD1  F00A         	goto	i2l4537
 15779  001596                     i2u412_40:
 15780  001596                     
 15781                           ; BSR set to: 0
 15782  001596  90D8               	bcf	status,0,c
 15783  001598  3170               	rrcf	___fladd@grs& (0+255),w,b
 15784  00159A  0901               	iorlw	1
 15785  00159C  6F70               	movwf	___fladd@grs& (0+255),b
 15786  00159E  EFD3  F00A         	goto	i2l4539
 15787  0015A2                     i2l4537:
 15788                           
 15789                           ; BSR set to: 0
 15790  0015A2  90D8               	bcf	status,0,c
 15791  0015A4  3370               	rrcf	___fladd@grs& (0+255),f,b
 15792  0015A6                     i2l4539:
 15793                           
 15794                           ; BSR set to: 0
 15795  0015A6  A053               	btfss	___fladd@b^0,0,c
 15796  0015A8  EFD8  F00A         	goto	i2u413_41
 15797  0015AC  EFDA  F00A         	goto	i2u413_40
 15798  0015B0                     i2u413_41:
 15799  0015B0  EFDB  F00A         	goto	i2l4543
 15800  0015B4                     i2u413_40:
 15801  0015B4                     
 15802                           ; BSR set to: 0
 15803  0015B4  8F70               	bsf	___fladd@grs& (0+255),7,b
 15804  0015B6                     i2l4543:
 15805                           
 15806                           ; BSR set to: 0
 15807  0015B6  3456               	rlcf	(___fladd@b+3)^0,w,c
 15808  0015B8  3256               	rrcf	(___fladd@b+3)^0,f,c
 15809  0015BA  3255               	rrcf	(___fladd@b+2)^0,f,c
 15810  0015BC  3254               	rrcf	(___fladd@b+1)^0,f,c
 15811  0015BE  3253               	rrcf	___fladd@b^0,f,c
 15812  0015C0                     
 15813                           ; BSR set to: 0
 15814  0015C0  2B6F               	incf	___fladd@bexp& (0+255),f,b
 15815  0015C2  EF70  F00B         	goto	i2l4583
 15816  0015C6                     i2l4547:
 15817                           
 15818                           ; BSR set to: 0
 15819  0015C6  5057               	movf	___fladd@a^0,w,c
 15820  0015C8  5C53               	subwf	___fladd@b^0,w,c
 15821  0015CA  5058               	movf	(___fladd@a+1)^0,w,c
 15822  0015CC  5854               	subwfb	(___fladd@b+1)^0,w,c
 15823  0015CE  5059               	movf	(___fladd@a+2)^0,w,c
 15824  0015D0  5855               	subwfb	(___fladd@b+2)^0,w,c
 15825  0015D2  5056               	movf	(___fladd@b+3)^0,w,c
 15826  0015D4  0A80               	xorlw	128
 15827  0015D6  6E5B               	movwf	??___fladd^0,c
 15828  0015D8  505A               	movf	(___fladd@a+3)^0,w,c
 15829  0015DA  0A80               	xorlw	128
 15830  0015DC  585B               	subwfb	??___fladd^0,w,c
 15831  0015DE  B0D8               	btfsc	status,0,c
 15832  0015E0  EFF4  F00A         	goto	i2u414_41
 15833  0015E4  EFF6  F00A         	goto	i2u414_40
 15834  0015E8                     i2u414_41:
 15835  0015E8  EF21  F00B         	goto	i2l4557
 15836  0015EC                     i2u414_40:
 15837  0015EC                     
 15838                           ; BSR set to: 0
 15839  0015EC  5053               	movf	___fladd@b^0,w,c
 15840  0015EE  5C57               	subwf	___fladd@a^0,w,c
 15841  0015F0  6E5B               	movwf	??___fladd^0,c
 15842  0015F2  5054               	movf	(___fladd@b+1)^0,w,c
 15843  0015F4  5858               	subwfb	(___fladd@a+1)^0,w,c
 15844  0015F6  6E5C               	movwf	(??___fladd+1)^0,c
 15845  0015F8  5055               	movf	(___fladd@b+2)^0,w,c
 15846  0015FA  5859               	subwfb	(___fladd@a+2)^0,w,c
 15847  0015FC  6E5D               	movwf	(??___fladd+2)^0,c
 15848  0015FE  5056               	movf	(___fladd@b+3)^0,w,c
 15849  001600  585A               	subwfb	(___fladd@a+3)^0,w,c
 15850  001602  6E5E               	movwf	(??___fladd+3)^0,c
 15851  001604  0EFF               	movlw	255
 15852  001606  245B               	addwf	??___fladd^0,w,c
 15853  001608  6E53               	movwf	___fladd@b^0,c
 15854  00160A  0EFF               	movlw	255
 15855  00160C  205C               	addwfc	(??___fladd+1)^0,w,c
 15856  00160E  6E54               	movwf	(___fladd@b+1)^0,c
 15857  001610  0EFF               	movlw	255
 15858  001612  205D               	addwfc	(??___fladd+2)^0,w,c
 15859  001614  6E55               	movwf	(___fladd@b+2)^0,c
 15860  001616  0EFF               	movlw	255
 15861  001618  205E               	addwfc	(??___fladd+3)^0,w,c
 15862  00161A  6E56               	movwf	(___fladd@b+3)^0,c
 15863  00161C  0E80               	movlw	128
 15864  00161E  1B6D               	xorwf	___fladd@signs& (0+255),f,b
 15865  001620                     
 15866                           ; BSR set to: 0
 15867  001620  6D70               	negf	___fladd@grs& (0+255),b
 15868  001622                     
 15869                           ; BSR set to: 0
 15870  001622  5170               	movf	___fladd@grs& (0+255),w,b
 15871  001624  A4D8               	btfss	status,2,c
 15872  001626  EF17  F00B         	goto	i2u415_41
 15873  00162A  EF19  F00B         	goto	i2u415_40
 15874  00162E                     i2u415_41:
 15875  00162E  EF29  F00B         	goto	i2l1472
 15876  001632                     i2u415_40:
 15877  001632                     
 15878                           ; BSR set to: 0
 15879  001632  0E01               	movlw	1
 15880  001634  2653               	addwf	___fladd@b^0,f,c
 15881  001636  0E00               	movlw	0
 15882  001638  2254               	addwfc	(___fladd@b+1)^0,f,c
 15883  00163A  2255               	addwfc	(___fladd@b+2)^0,f,c
 15884  00163C  2256               	addwfc	(___fladd@b+3)^0,f,c
 15885  00163E  EF29  F00B         	goto	i2l1472
 15886  001642                     i2l4557:
 15887                           
 15888                           ; BSR set to: 0
 15889  001642  5057               	movf	___fladd@a^0,w,c
 15890  001644  5E53               	subwf	___fladd@b^0,f,c
 15891  001646  5058               	movf	(___fladd@a+1)^0,w,c
 15892  001648  5A54               	subwfb	(___fladd@b+1)^0,f,c
 15893  00164A  5059               	movf	(___fladd@a+2)^0,w,c
 15894  00164C  5A55               	subwfb	(___fladd@b+2)^0,f,c
 15895  00164E  505A               	movf	(___fladd@a+3)^0,w,c
 15896  001650  5A56               	subwfb	(___fladd@b+3)^0,f,c
 15897  001652                     i2l1472:
 15898                           
 15899                           ; BSR set to: 0
 15900  001652  5053               	movf	___fladd@b^0,w,c
 15901  001654  1054               	iorwf	(___fladd@b+1)^0,w,c
 15902  001656  1055               	iorwf	(___fladd@b+2)^0,w,c
 15903  001658  1056               	iorwf	(___fladd@b+3)^0,w,c
 15904  00165A  A4D8               	btfss	status,2,c
 15905  00165C  EF32  F00B         	goto	i2u416_41
 15906  001660  EF34  F00B         	goto	i2u416_40
 15907  001664                     i2u416_41:
 15908  001664  EF69  F00B         	goto	i2l4581
 15909  001668                     i2u416_40:
 15910  001668                     
 15911                           ; BSR set to: 0
 15912  001668  5170               	movf	___fladd@grs& (0+255),w,b
 15913  00166A  A4D8               	btfss	status,2,c
 15914  00166C  EF3A  F00B         	goto	i2u417_41
 15915  001670  EF3C  F00B         	goto	i2u417_40
 15916  001674                     i2u417_41:
 15917  001674  EF69  F00B         	goto	i2l4581
 15918  001678                     i2u417_40:
 15919  001678                     
 15920                           ; BSR set to: 0
 15921  001678  0E00               	movlw	0
 15922  00167A  6E53               	movwf	?___fladd^0,c
 15923  00167C  0E00               	movlw	0
 15924  00167E  6E54               	movwf	(?___fladd+1)^0,c
 15925  001680  0E00               	movlw	0
 15926  001682  6E55               	movwf	(?___fladd+2)^0,c
 15927  001684  0E00               	movlw	0
 15928  001686  6E56               	movwf	(?___fladd+3)^0,c
 15929  001688  EF04  F00C         	goto	i2l1464
 15930  00168C                     i2l4565:
 15931                           
 15932                           ; BSR set to: 0
 15933  00168C  90D8               	bcf	status,0,c
 15934  00168E  3653               	rlcf	___fladd@b^0,f,c
 15935  001690  3654               	rlcf	(___fladd@b+1)^0,f,c
 15936  001692  3655               	rlcf	(___fladd@b+2)^0,f,c
 15937  001694  3656               	rlcf	(___fladd@b+3)^0,f,c
 15938  001696                     
 15939                           ; BSR set to: 0
 15940  001696  AF70               	btfss	___fladd@grs& (0+255),7,b
 15941  001698  EF50  F00B         	goto	i2u418_41
 15942  00169C  EF52  F00B         	goto	i2u418_40
 15943  0016A0                     i2u418_41:
 15944  0016A0  EF53  F00B         	goto	i2l4571
 15945  0016A4                     i2u418_40:
 15946  0016A4                     
 15947                           ; BSR set to: 0
 15948  0016A4  8053               	bsf	___fladd@b^0,0,c
 15949  0016A6                     i2l4571:
 15950                           
 15951                           ; BSR set to: 0
 15952  0016A6  A170               	btfss	___fladd@grs& (0+255),0,b
 15953  0016A8  EF58  F00B         	goto	i2u419_41
 15954  0016AC  EF5A  F00B         	goto	i2u419_40
 15955  0016B0                     i2u419_41:
 15956  0016B0  EF5E  F00B         	goto	i2l4575
 15957  0016B4                     i2u419_40:
 15958  0016B4                     
 15959                           ; BSR set to: 0
 15960  0016B4  80D8               	bsf	status,0,c
 15961  0016B6  3770               	rlcf	___fladd@grs& (0+255),f,b
 15962  0016B8  EF60  F00B         	goto	i2l4577
 15963  0016BC                     i2l4575:
 15964                           
 15965                           ; BSR set to: 0
 15966  0016BC  90D8               	bcf	status,0,c
 15967  0016BE  3770               	rlcf	___fladd@grs& (0+255),f,b
 15968  0016C0                     i2l4577:
 15969                           
 15970                           ; BSR set to: 0
 15971  0016C0  516F               	movf	___fladd@bexp& (0+255),w,b
 15972  0016C2  B4D8               	btfsc	status,2,c
 15973  0016C4  EF66  F00B         	goto	i2u420_41
 15974  0016C8  EF68  F00B         	goto	i2u420_40
 15975  0016CC                     i2u420_41:
 15976  0016CC  EF69  F00B         	goto	i2l4581
 15977  0016D0                     i2u420_40:
 15978  0016D0                     
 15979                           ; BSR set to: 0
 15980  0016D0  076F               	decf	___fladd@bexp& (0+255),f,b
 15981  0016D2                     i2l4581:
 15982                           
 15983                           ; BSR set to: 0
 15984  0016D2  AE55               	btfss	(___fladd@b+2)^0,7,c
 15985  0016D4  EF6E  F00B         	goto	i2u421_41
 15986  0016D8  EF70  F00B         	goto	i2u421_40
 15987  0016DC                     i2u421_41:
 15988  0016DC  EF46  F00B         	goto	i2l4565
 15989  0016E0                     i2u421_40:
 15990  0016E0                     i2l4583:
 15991                           
 15992                           ; BSR set to: 0
 15993  0016E0  0E00               	movlw	0
 15994  0016E2  6F6E               	movwf	___fladd@aexp& (0+255),b
 15995  0016E4                     
 15996                           ; BSR set to: 0
 15997  0016E4  AF70               	btfss	___fladd@grs& (0+255),7,b
 15998  0016E6  EF77  F00B         	goto	i2u422_41
 15999  0016EA  EF79  F00B         	goto	i2u422_40
 16000  0016EE                     i2u422_41:
 16001  0016EE  EF91  F00B         	goto	i2l1481
 16002  0016F2                     i2u422_40:
 16003  0016F2                     
 16004                           ; BSR set to: 0
 16005  0016F2  C070  F05B         	movff	___fladd@grs,??___fladd
 16006  0016F6  0E7F               	movlw	127
 16007  0016F8  165B               	andwf	??___fladd^0,f,c
 16008  0016FA  B4D8               	btfsc	status,2,c
 16009  0016FC  EF82  F00B         	goto	i2u423_41
 16010  001700  EF84  F00B         	goto	i2u423_40
 16011  001704                     i2u423_41:
 16012  001704  EF88  F00B         	goto	i2l1482
 16013  001708                     i2u423_40:
 16014  001708                     i2l4589:
 16015                           
 16016                           ; BSR set to: 0
 16017  001708  0E01               	movlw	1
 16018  00170A  6F6E               	movwf	___fladd@aexp& (0+255),b
 16019  00170C  EF91  F00B         	goto	i2l1481
 16020  001710                     i2l1482:
 16021                           
 16022                           ; BSR set to: 0
 16023  001710  A053               	btfss	___fladd@b^0,0,c
 16024  001712  EF8D  F00B         	goto	i2u424_41
 16025  001716  EF8F  F00B         	goto	i2u424_40
 16026  00171A                     i2u424_41:
 16027  00171A  EF91  F00B         	goto	i2l1481
 16028  00171E                     i2u424_40:
 16029  00171E  EF84  F00B         	goto	i2l4589
 16030  001722                     i2l1481:
 16031                           
 16032                           ; BSR set to: 0
 16033  001722  516E               	movf	___fladd@aexp& (0+255),w,b
 16034  001724  B4D8               	btfsc	status,2,c
 16035  001726  EF97  F00B         	goto	i2u425_41
 16036  00172A  EF99  F00B         	goto	i2u425_40
 16037  00172E                     i2u425_41:
 16038  00172E  EFC4  F00B         	goto	i2l4601
 16039  001732                     i2u425_40:
 16040  001732                     
 16041                           ; BSR set to: 0
 16042  001732  0E01               	movlw	1
 16043  001734  2653               	addwf	___fladd@b^0,f,c
 16044  001736  0E00               	movlw	0
 16045  001738  2254               	addwfc	(___fladd@b+1)^0,f,c
 16046  00173A  2255               	addwfc	(___fladd@b+2)^0,f,c
 16047  00173C  2256               	addwfc	(___fladd@b+3)^0,f,c
 16048  00173E                     
 16049                           ; BSR set to: 0
 16050  00173E  A056               	btfss	(___fladd@b+3)^0,0,c
 16051  001740  EFA4  F00B         	goto	i2u426_41
 16052  001744  EFA6  F00B         	goto	i2u426_40
 16053  001748                     i2u426_41:
 16054  001748  EFC4  F00B         	goto	i2l4601
 16055  00174C                     i2u426_40:
 16056  00174C                     
 16057                           ; BSR set to: 0
 16058  00174C  C053  F05B         	movff	___fladd@b,??___fladd
 16059  001750  C054  F05C         	movff	___fladd@b+1,??___fladd+1
 16060  001754  C055  F05D         	movff	___fladd@b+2,??___fladd+2
 16061  001758  C056  F05E         	movff	___fladd@b+3,??___fladd+3
 16062  00175C  345E               	rlcf	(??___fladd+3)^0,w,c
 16063  00175E  325E               	rrcf	(??___fladd+3)^0,f,c
 16064  001760  325D               	rrcf	(??___fladd+2)^0,f,c
 16065  001762  325C               	rrcf	(??___fladd+1)^0,f,c
 16066  001764  325B               	rrcf	??___fladd^0,f,c
 16067  001766  C05B  F053         	movff	??___fladd,___fladd@b
 16068  00176A  C05C  F054         	movff	??___fladd+1,___fladd@b+1
 16069  00176E  C05D  F055         	movff	??___fladd+2,___fladd@b+2
 16070  001772  C05E  F056         	movff	??___fladd+3,___fladd@b+3
 16071  001776  296F               	incf	___fladd@bexp& (0+255),w,b
 16072  001778  B4D8               	btfsc	status,2,c
 16073  00177A  EFC1  F00B         	goto	i2u427_41
 16074  00177E  EFC3  F00B         	goto	i2u427_40
 16075  001782                     i2u427_41:
 16076  001782  EFC4  F00B         	goto	i2l4601
 16077  001786                     i2u427_40:
 16078  001786                     
 16079                           ; BSR set to: 0
 16080  001786  2B6F               	incf	___fladd@bexp& (0+255),f,b
 16081  001788                     i2l4601:
 16082                           
 16083                           ; BSR set to: 0
 16084  001788  296F               	incf	___fladd@bexp& (0+255),w,b
 16085  00178A  B4D8               	btfsc	status,2,c
 16086  00178C  EFCA  F00B         	goto	i2u428_41
 16087  001790  EFCC  F00B         	goto	i2u428_40
 16088  001794                     i2u428_41:
 16089  001794  EFD4  F00B         	goto	i2l4605
 16090  001798                     i2u428_40:
 16091  001798                     
 16092                           ; BSR set to: 0
 16093  001798  516F               	movf	___fladd@bexp& (0+255),w,b
 16094  00179A  A4D8               	btfss	status,2,c
 16095  00179C  EFD2  F00B         	goto	i2u429_41
 16096  0017A0  EFD4  F00B         	goto	i2u429_40
 16097  0017A4                     i2u429_41:
 16098  0017A4  EFE6  F00B         	goto	i2l4609
 16099  0017A8                     i2u429_40:
 16100  0017A8                     i2l4605:
 16101                           
 16102                           ; BSR set to: 0
 16103  0017A8  0E00               	movlw	0
 16104  0017AA  6E53               	movwf	___fladd@b^0,c
 16105  0017AC  0E00               	movlw	0
 16106  0017AE  6E54               	movwf	(___fladd@b+1)^0,c
 16107  0017B0  0E00               	movlw	0
 16108  0017B2  6E55               	movwf	(___fladd@b+2)^0,c
 16109  0017B4  0E00               	movlw	0
 16110  0017B6  6E56               	movwf	(___fladd@b+3)^0,c
 16111  0017B8  516F               	movf	___fladd@bexp& (0+255),w,b
 16112  0017BA  A4D8               	btfss	status,2,c
 16113  0017BC  EFE2  F00B         	goto	i2u430_41
 16114  0017C0  EFE4  F00B         	goto	i2u430_40
 16115  0017C4                     i2u430_41:
 16116  0017C4  EFE6  F00B         	goto	i2l4609
 16117  0017C8                     i2u430_40:
 16118  0017C8                     
 16119                           ; BSR set to: 0
 16120  0017C8  0E00               	movlw	0
 16121  0017CA  6F6D               	movwf	___fladd@signs& (0+255),b
 16122  0017CC                     i2l4609:
 16123                           
 16124                           ; BSR set to: 0
 16125  0017CC  A16F               	btfss	___fladd@bexp& (0+255),0,b
 16126  0017CE  EFEB  F00B         	goto	i2u431_41
 16127  0017D2  EFED  F00B         	goto	i2u431_40
 16128  0017D6                     i2u431_41:
 16129  0017D6  EFF0  F00B         	goto	i2l4613
 16130  0017DA                     i2u431_40:
 16131  0017DA                     
 16132                           ; BSR set to: 0
 16133  0017DA  8E55               	bsf	(___fladd@b+2)^0,7,c
 16134  0017DC  EFF1  F00B         	goto	i2l4615
 16135  0017E0                     i2l4613:
 16136                           
 16137                           ; BSR set to: 0
 16138  0017E0  9E55               	bcf	(___fladd@b+2)^0,7,c
 16139  0017E2                     i2l4615:
 16140                           
 16141                           ; BSR set to: 0
 16142  0017E2  90D8               	bcf	status,0,c
 16143  0017E4  316F               	rrcf	___fladd@bexp& (0+255),w,b
 16144  0017E6  6E56               	movwf	(___fladd@b+3)^0,c
 16145  0017E8                     
 16146                           ; BSR set to: 0
 16147  0017E8  AF6D               	btfss	___fladd@signs& (0+255),7,b
 16148  0017EA  EFF9  F00B         	goto	i2u432_41
 16149  0017EE  EFFB  F00B         	goto	i2u432_40
 16150  0017F2                     i2u432_41:
 16151  0017F2  EFFC  F00B         	goto	i2l4621
 16152  0017F6                     i2u432_40:
 16153  0017F6                     
 16154                           ; BSR set to: 0
 16155  0017F6  8E56               	bsf	(___fladd@b+3)^0,7,c
 16156  0017F8                     i2l4621:
 16157                           
 16158                           ; BSR set to: 0
 16159  0017F8  C053  F053         	movff	___fladd@b,?___fladd
 16160  0017FC  C054  F054         	movff	___fladd@b+1,?___fladd+1
 16161  001800  C055  F055         	movff	___fladd@b+2,?___fladd+2
 16162  001804  C056  F056         	movff	___fladd@b+3,?___fladd+3
 16163  001808                     i2l1464:
 16164                           
 16165                           ; BSR set to: 0
 16166  001808  0012               	return		;funcret
 16167  00180A                     __end_of___fladd:
 16168                           	opt callstack 0
 16169                           
 16170 ;; *************** function ___flmul *****************
 16171 ;; Defined at:
 16172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;  b               4   45[COMRAM] unsigned char 
 16175 ;;  a               4   49[COMRAM] unsigned char 
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;  prod            4   64[COMRAM] struct .
 16178 ;;  grs             4   58[COMRAM] unsigned long 
 16179 ;;  temp            2   68[COMRAM] struct .
 16180 ;;  bexp            1   63[COMRAM] unsigned char 
 16181 ;;  aexp            1   62[COMRAM] unsigned char 
 16182 ;;  sign            1   57[COMRAM] unsigned char 
 16183 ;; Return value:  Size  Location     Type
 16184 ;;                  4   45[COMRAM] unsigned char 
 16185 ;; Registers used:
 16186 ;;		wreg, status,2, status,0, prodl, prodh
 16187 ;; Tracked objects:
 16188 ;;		On entry : 0/0
 16189 ;;		On exit  : 0/0
 16190 ;;		Unchanged: 0/0
 16191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16192 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16193 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16195 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16196 ;;Total ram usage:       25 bytes
 16197 ;; Hardware stack levels used:    1
 16198 ;; This function calls:
 16199 ;;		Nothing
 16200 ;; This function is called by:
 16201 ;;		_PI_Controller
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           	psect	text75
 16206  001C40                     __ptext75:
 16207                           	opt callstack 0
 16208  001C40                     ___flmul:
 16209                           	opt callstack 15
 16210  001C40  5031               	movf	(___flmul@b+3)^0,w,c
 16211  001C42  0B80               	andlw	128
 16212  001C44  6E3A               	movwf	___flmul@sign^0,c
 16213  001C46  5031               	movf	(___flmul@b+3)^0,w,c
 16214  001C48  2431               	addwf	(___flmul@b+3)^0,w,c
 16215  001C4A  6E40               	movwf	___flmul@bexp^0,c
 16216  001C4C  AE30               	btfss	(___flmul@b+2)^0,7,c
 16217  001C4E  EF2B  F00E         	goto	i2u551_41
 16218  001C52  EF2D  F00E         	goto	i2u551_40
 16219  001C56                     i2u551_41:
 16220  001C56  EF2E  F00E         	goto	i2l5223
 16221  001C5A                     i2u551_40:
 16222  001C5A  8040               	bsf	___flmul@bexp^0,0,c
 16223  001C5C                     i2l5223:
 16224  001C5C  5040               	movf	___flmul@bexp^0,w,c
 16225  001C5E  B4D8               	btfsc	status,2,c
 16226  001C60  EF34  F00E         	goto	i2u552_41
 16227  001C64  EF36  F00E         	goto	i2u552_40
 16228  001C68                     i2u552_41:
 16229  001C68  EF49  F00E         	goto	i2l5231
 16230  001C6C                     i2u552_40:
 16231  001C6C  2840               	incf	___flmul@bexp^0,w,c
 16232  001C6E  A4D8               	btfss	status,2,c
 16233  001C70  EF3C  F00E         	goto	i2u553_41
 16234  001C74  EF3E  F00E         	goto	i2u553_40
 16235  001C78                     i2u553_41:
 16236  001C78  EF46  F00E         	goto	i2l5229
 16237  001C7C                     i2u553_40:
 16238  001C7C  0E00               	movlw	0
 16239  001C7E  6E2E               	movwf	___flmul@b^0,c
 16240  001C80  0E00               	movlw	0
 16241  001C82  6E2F               	movwf	(___flmul@b+1)^0,c
 16242  001C84  0E00               	movlw	0
 16243  001C86  6E30               	movwf	(___flmul@b+2)^0,c
 16244  001C88  0E00               	movlw	0
 16245  001C8A  6E31               	movwf	(___flmul@b+3)^0,c
 16246  001C8C                     i2l5229:
 16247  001C8C  8E30               	bsf	(___flmul@b+2)^0,7,c
 16248  001C8E  EF51  F00E         	goto	i2l5233
 16249  001C92                     i2l5231:
 16250  001C92  0E00               	movlw	0
 16251  001C94  6E2E               	movwf	___flmul@b^0,c
 16252  001C96  0E00               	movlw	0
 16253  001C98  6E2F               	movwf	(___flmul@b+1)^0,c
 16254  001C9A  0E00               	movlw	0
 16255  001C9C  6E30               	movwf	(___flmul@b+2)^0,c
 16256  001C9E  0E00               	movlw	0
 16257  001CA0  6E31               	movwf	(___flmul@b+3)^0,c
 16258  001CA2                     i2l5233:
 16259  001CA2  5035               	movf	(___flmul@a+3)^0,w,c
 16260  001CA4  0B80               	andlw	128
 16261  001CA6  1A3A               	xorwf	___flmul@sign^0,f,c
 16262  001CA8  5035               	movf	(___flmul@a+3)^0,w,c
 16263  001CAA  2435               	addwf	(___flmul@a+3)^0,w,c
 16264  001CAC  6E3F               	movwf	___flmul@aexp^0,c
 16265  001CAE  AE34               	btfss	(___flmul@a+2)^0,7,c
 16266  001CB0  EF5C  F00E         	goto	i2u554_41
 16267  001CB4  EF5E  F00E         	goto	i2u554_40
 16268  001CB8                     i2u554_41:
 16269  001CB8  EF5F  F00E         	goto	i2l5241
 16270  001CBC                     i2u554_40:
 16271  001CBC  803F               	bsf	___flmul@aexp^0,0,c
 16272  001CBE                     i2l5241:
 16273  001CBE  503F               	movf	___flmul@aexp^0,w,c
 16274  001CC0  B4D8               	btfsc	status,2,c
 16275  001CC2  EF65  F00E         	goto	i2u555_41
 16276  001CC6  EF67  F00E         	goto	i2u555_40
 16277  001CCA                     i2u555_41:
 16278  001CCA  EF7A  F00E         	goto	i2l5249
 16279  001CCE                     i2u555_40:
 16280  001CCE  283F               	incf	___flmul@aexp^0,w,c
 16281  001CD0  A4D8               	btfss	status,2,c
 16282  001CD2  EF6D  F00E         	goto	i2u556_41
 16283  001CD6  EF6F  F00E         	goto	i2u556_40
 16284  001CDA                     i2u556_41:
 16285  001CDA  EF77  F00E         	goto	i2l5247
 16286  001CDE                     i2u556_40:
 16287  001CDE  0E00               	movlw	0
 16288  001CE0  6E32               	movwf	___flmul@a^0,c
 16289  001CE2  0E00               	movlw	0
 16290  001CE4  6E33               	movwf	(___flmul@a+1)^0,c
 16291  001CE6  0E00               	movlw	0
 16292  001CE8  6E34               	movwf	(___flmul@a+2)^0,c
 16293  001CEA  0E00               	movlw	0
 16294  001CEC  6E35               	movwf	(___flmul@a+3)^0,c
 16295  001CEE                     i2l5247:
 16296  001CEE  8E34               	bsf	(___flmul@a+2)^0,7,c
 16297  001CF0  EF82  F00E         	goto	i2l1541
 16298  001CF4                     i2l5249:
 16299  001CF4  0E00               	movlw	0
 16300  001CF6  6E32               	movwf	___flmul@a^0,c
 16301  001CF8  0E00               	movlw	0
 16302  001CFA  6E33               	movwf	(___flmul@a+1)^0,c
 16303  001CFC  0E00               	movlw	0
 16304  001CFE  6E34               	movwf	(___flmul@a+2)^0,c
 16305  001D00  0E00               	movlw	0
 16306  001D02  6E35               	movwf	(___flmul@a+3)^0,c
 16307  001D04                     i2l1541:
 16308  001D04  503F               	movf	___flmul@aexp^0,w,c
 16309  001D06  B4D8               	btfsc	status,2,c
 16310  001D08  EF88  F00E         	goto	i2u557_41
 16311  001D0C  EF8A  F00E         	goto	i2u557_40
 16312  001D10                     i2u557_41:
 16313  001D10  EF92  F00E         	goto	i2l5253
 16314  001D14                     i2u557_40:
 16315  001D14  5040               	movf	___flmul@bexp^0,w,c
 16316  001D16  A4D8               	btfss	status,2,c
 16317  001D18  EF90  F00E         	goto	i2u558_41
 16318  001D1C  EF92  F00E         	goto	i2u558_40
 16319  001D20                     i2u558_41:
 16320  001D20  EF9C  F00E         	goto	i2l5257
 16321  001D24                     i2u558_40:
 16322  001D24                     i2l5253:
 16323  001D24  0E00               	movlw	0
 16324  001D26  6E2E               	movwf	?___flmul^0,c
 16325  001D28  0E00               	movlw	0
 16326  001D2A  6E2F               	movwf	(?___flmul+1)^0,c
 16327  001D2C  0E00               	movlw	0
 16328  001D2E  6E30               	movwf	(?___flmul+2)^0,c
 16329  001D30  0E00               	movlw	0
 16330  001D32  6E31               	movwf	(?___flmul+3)^0,c
 16331  001D34  EF34  F010         	goto	i2l1545
 16332  001D38                     i2l5257:
 16333  001D38  5034               	movf	(___flmul@a+2)^0,w,c
 16334  001D3A  022E               	mulwf	___flmul@b^0,c
 16335  001D3C  CFF3 F045          	movff	prodl,___flmul@temp
 16336  001D40  CFF4 F046          	movff	prodh,___flmul@temp+1
 16337  001D44  5045               	movf	___flmul@temp^0,w,c
 16338  001D46  6E3B               	movwf	___flmul@grs^0,c
 16339  001D48  6A3C               	clrf	(___flmul@grs+1)^0,c
 16340  001D4A  6A3D               	clrf	(___flmul@grs+2)^0,c
 16341  001D4C  6A3E               	clrf	(___flmul@grs+3)^0,c
 16342  001D4E  5046               	movf	(___flmul@temp+1)^0,w,c
 16343  001D50  6E41               	movwf	___flmul@prod^0,c
 16344  001D52  6A42               	clrf	(___flmul@prod+1)^0,c
 16345  001D54  6A43               	clrf	(___flmul@prod+2)^0,c
 16346  001D56  6A44               	clrf	(___flmul@prod+3)^0,c
 16347  001D58  5033               	movf	(___flmul@a+1)^0,w,c
 16348  001D5A  022F               	mulwf	(___flmul@b+1)^0,c
 16349  001D5C  CFF3 F045          	movff	prodl,___flmul@temp
 16350  001D60  CFF4 F046          	movff	prodh,___flmul@temp+1
 16351  001D64  5045               	movf	___flmul@temp^0,w,c
 16352  001D66  263B               	addwf	___flmul@grs^0,f,c
 16353  001D68  0E00               	movlw	0
 16354  001D6A  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16355  001D6C  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16356  001D6E  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16357  001D70  5046               	movf	(___flmul@temp+1)^0,w,c
 16358  001D72  2641               	addwf	___flmul@prod^0,f,c
 16359  001D74  0E00               	movlw	0
 16360  001D76  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16361  001D78  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16362  001D7A  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16363  001D7C  5032               	movf	___flmul@a^0,w,c
 16364  001D7E  0230               	mulwf	(___flmul@b+2)^0,c
 16365  001D80  CFF3 F045          	movff	prodl,___flmul@temp
 16366  001D84  CFF4 F046          	movff	prodh,___flmul@temp+1
 16367  001D88  5045               	movf	___flmul@temp^0,w,c
 16368  001D8A  263B               	addwf	___flmul@grs^0,f,c
 16369  001D8C  0E00               	movlw	0
 16370  001D8E  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16371  001D90  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16372  001D92  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16373  001D94  5046               	movf	(___flmul@temp+1)^0,w,c
 16374  001D96  2641               	addwf	___flmul@prod^0,f,c
 16375  001D98  0E00               	movlw	0
 16376  001D9A  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16377  001D9C  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16378  001D9E  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16379  001DA0  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 16380  001DA4  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 16381  001DA8  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 16382  001DAC  6A3B               	clrf	___flmul@grs^0,c
 16383  001DAE  5032               	movf	___flmul@a^0,w,c
 16384  001DB0  022F               	mulwf	(___flmul@b+1)^0,c
 16385  001DB2  CFF3 F045          	movff	prodl,___flmul@temp
 16386  001DB6  CFF4 F046          	movff	prodh,___flmul@temp+1
 16387  001DBA  5045               	movf	___flmul@temp^0,w,c
 16388  001DBC  263B               	addwf	___flmul@grs^0,f,c
 16389  001DBE  5046               	movf	(___flmul@temp+1)^0,w,c
 16390  001DC0  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16391  001DC2  0E00               	movlw	0
 16392  001DC4  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16393  001DC6  0E00               	movlw	0
 16394  001DC8  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16395  001DCA  5033               	movf	(___flmul@a+1)^0,w,c
 16396  001DCC  022E               	mulwf	___flmul@b^0,c
 16397  001DCE  CFF3 F045          	movff	prodl,___flmul@temp
 16398  001DD2  CFF4 F046          	movff	prodh,___flmul@temp+1
 16399  001DD6  5045               	movf	___flmul@temp^0,w,c
 16400  001DD8  263B               	addwf	___flmul@grs^0,f,c
 16401  001DDA  5046               	movf	(___flmul@temp+1)^0,w,c
 16402  001DDC  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16403  001DDE  0E00               	movlw	0
 16404  001DE0  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16405  001DE2  0E00               	movlw	0
 16406  001DE4  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16407  001DE6  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 16408  001DEA  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 16409  001DEE  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 16410  001DF2  6A3B               	clrf	___flmul@grs^0,c
 16411  001DF4  5032               	movf	___flmul@a^0,w,c
 16412  001DF6  022E               	mulwf	___flmul@b^0,c
 16413  001DF8  CFF3 F045          	movff	prodl,___flmul@temp
 16414  001DFC  CFF4 F046          	movff	prodh,___flmul@temp+1
 16415  001E00  5045               	movf	___flmul@temp^0,w,c
 16416  001E02  263B               	addwf	___flmul@grs^0,f,c
 16417  001E04  5046               	movf	(___flmul@temp+1)^0,w,c
 16418  001E06  223C               	addwfc	(___flmul@grs+1)^0,f,c
 16419  001E08  0E00               	movlw	0
 16420  001E0A  223D               	addwfc	(___flmul@grs+2)^0,f,c
 16421  001E0C  0E00               	movlw	0
 16422  001E0E  223E               	addwfc	(___flmul@grs+3)^0,f,c
 16423  001E10  5034               	movf	(___flmul@a+2)^0,w,c
 16424  001E12  022F               	mulwf	(___flmul@b+1)^0,c
 16425  001E14  CFF3 F045          	movff	prodl,___flmul@temp
 16426  001E18  CFF4 F046          	movff	prodh,___flmul@temp+1
 16427  001E1C  5045               	movf	___flmul@temp^0,w,c
 16428  001E1E  2641               	addwf	___flmul@prod^0,f,c
 16429  001E20  5046               	movf	(___flmul@temp+1)^0,w,c
 16430  001E22  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16431  001E24  0E00               	movlw	0
 16432  001E26  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16433  001E28  0E00               	movlw	0
 16434  001E2A  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16435  001E2C  5033               	movf	(___flmul@a+1)^0,w,c
 16436  001E2E  0230               	mulwf	(___flmul@b+2)^0,c
 16437  001E30  CFF3 F045          	movff	prodl,___flmul@temp
 16438  001E34  CFF4 F046          	movff	prodh,___flmul@temp+1
 16439  001E38  5045               	movf	___flmul@temp^0,w,c
 16440  001E3A  2641               	addwf	___flmul@prod^0,f,c
 16441  001E3C  5046               	movf	(___flmul@temp+1)^0,w,c
 16442  001E3E  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16443  001E40  0E00               	movlw	0
 16444  001E42  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16445  001E44  0E00               	movlw	0
 16446  001E46  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16447  001E48  5034               	movf	(___flmul@a+2)^0,w,c
 16448  001E4A  0230               	mulwf	(___flmul@b+2)^0,c
 16449  001E4C  CFF3 F045          	movff	prodl,___flmul@temp
 16450  001E50  CFF4 F046          	movff	prodh,___flmul@temp+1
 16451  001E54  5045               	movf	___flmul@temp^0,w,c
 16452  001E56  6E36               	movwf	??___flmul^0,c
 16453  001E58  5046               	movf	(___flmul@temp+1)^0,w,c
 16454  001E5A  6E37               	movwf	(??___flmul+1)^0,c
 16455  001E5C  6A38               	clrf	(??___flmul+2)^0,c
 16456  001E5E  6A39               	clrf	(??___flmul+3)^0,c
 16457  001E60  C038  F039         	movff	??___flmul+2,??___flmul+3
 16458  001E64  C037  F038         	movff	??___flmul+1,??___flmul+2
 16459  001E68  C036  F037         	movff	??___flmul,??___flmul+1
 16460  001E6C  6A36               	clrf	??___flmul^0,c
 16461  001E6E  5036               	movf	??___flmul^0,w,c
 16462  001E70  2641               	addwf	___flmul@prod^0,f,c
 16463  001E72  5037               	movf	(??___flmul+1)^0,w,c
 16464  001E74  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16465  001E76  5038               	movf	(??___flmul+2)^0,w,c
 16466  001E78  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16467  001E7A  5039               	movf	(??___flmul+3)^0,w,c
 16468  001E7C  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16469  001E7E  C03B  F036         	movff	___flmul@grs,??___flmul
 16470  001E82  C03C  F037         	movff	___flmul@grs+1,??___flmul+1
 16471  001E86  C03D  F038         	movff	___flmul@grs+2,??___flmul+2
 16472  001E8A  C03E  F039         	movff	___flmul@grs+3,??___flmul+3
 16473  001E8E  0E19               	movlw	25
 16474  001E90  EF4F  F00F         	goto	i2u559_40
 16475  001E94                     i2u559_45:
 16476  001E94  90D8               	bcf	status,0,c
 16477  001E96  3239               	rrcf	(??___flmul+3)^0,f,c
 16478  001E98  3238               	rrcf	(??___flmul+2)^0,f,c
 16479  001E9A  3237               	rrcf	(??___flmul+1)^0,f,c
 16480  001E9C  3236               	rrcf	??___flmul^0,f,c
 16481  001E9E                     i2u559_40:
 16482  001E9E  2EE8               	decfsz	wreg,f,c
 16483  001EA0  EF4A  F00F         	goto	i2u559_45
 16484  001EA4  5036               	movf	??___flmul^0,w,c
 16485  001EA6  2641               	addwf	___flmul@prod^0,f,c
 16486  001EA8  5037               	movf	(??___flmul+1)^0,w,c
 16487  001EAA  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16488  001EAC  5038               	movf	(??___flmul+2)^0,w,c
 16489  001EAE  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16490  001EB0  5039               	movf	(??___flmul+3)^0,w,c
 16491  001EB2  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16492  001EB4  C03D  F03E         	movff	___flmul@grs+2,___flmul@grs+3
 16493  001EB8  C03C  F03D         	movff	___flmul@grs+1,___flmul@grs+2
 16494  001EBC  C03B  F03C         	movff	___flmul@grs,___flmul@grs+1
 16495  001EC0  6A3B               	clrf	___flmul@grs^0,c
 16496  001EC2  503F               	movf	___flmul@aexp^0,w,c
 16497  001EC4  C040  F036         	movff	___flmul@bexp,??___flmul
 16498  001EC8  6A37               	clrf	(??___flmul+1)^0,c
 16499  001ECA  2636               	addwf	??___flmul^0,f,c
 16500  001ECC  0E00               	movlw	0
 16501  001ECE  2237               	addwfc	(??___flmul+1)^0,f,c
 16502  001ED0  0E82               	movlw	130
 16503  001ED2  2436               	addwf	??___flmul^0,w,c
 16504  001ED4  6E45               	movwf	___flmul@temp^0,c
 16505  001ED6  0EFF               	movlw	255
 16506  001ED8  2037               	addwfc	(??___flmul+1)^0,w,c
 16507  001EDA  6E46               	movwf	(___flmul@temp+1)^0,c
 16508  001EDC  EF85  F00F         	goto	i2l5305
 16509  001EE0                     i2l5299:
 16510  001EE0  90D8               	bcf	status,0,c
 16511  001EE2  3641               	rlcf	___flmul@prod^0,f,c
 16512  001EE4  3642               	rlcf	(___flmul@prod+1)^0,f,c
 16513  001EE6  3643               	rlcf	(___flmul@prod+2)^0,f,c
 16514  001EE8  3644               	rlcf	(___flmul@prod+3)^0,f,c
 16515  001EEA  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 16516  001EEC  EF7A  F00F         	goto	i2u560_41
 16517  001EF0  EF7C  F00F         	goto	i2u560_40
 16518  001EF4                     i2u560_41:
 16519  001EF4  EF7D  F00F         	goto	i2l1548
 16520  001EF8                     i2u560_40:
 16521  001EF8  8041               	bsf	___flmul@prod^0,0,c
 16522  001EFA                     i2l1548:
 16523  001EFA  90D8               	bcf	status,0,c
 16524  001EFC  363B               	rlcf	___flmul@grs^0,f,c
 16525  001EFE  363C               	rlcf	(___flmul@grs+1)^0,f,c
 16526  001F00  363D               	rlcf	(___flmul@grs+2)^0,f,c
 16527  001F02  363E               	rlcf	(___flmul@grs+3)^0,f,c
 16528  001F04  0645               	decf	___flmul@temp^0,f,c
 16529  001F06  A0D8               	btfss	status,0,c
 16530  001F08  0646               	decf	(___flmul@temp+1)^0,f,c
 16531  001F0A                     i2l5305:
 16532  001F0A  AE43               	btfss	(___flmul@prod+2)^0,7,c
 16533  001F0C  EF8A  F00F         	goto	i2u561_41
 16534  001F10  EF8C  F00F         	goto	i2u561_40
 16535  001F14                     i2u561_41:
 16536  001F14  EF70  F00F         	goto	i2l5299
 16537  001F18                     i2u561_40:
 16538  001F18  0E00               	movlw	0
 16539  001F1A  6E3F               	movwf	___flmul@aexp^0,c
 16540  001F1C  AE3E               	btfss	(___flmul@grs+3)^0,7,c
 16541  001F1E  EF93  F00F         	goto	i2u562_41
 16542  001F22  EF95  F00F         	goto	i2u562_40
 16543  001F26                     i2u562_41:
 16544  001F26  EFB9  F00F         	goto	i2l1550
 16545  001F2A                     i2u562_40:
 16546  001F2A  0EFF               	movlw	255
 16547  001F2C  143B               	andwf	___flmul@grs^0,w,c
 16548  001F2E  6E36               	movwf	??___flmul^0,c
 16549  001F30  0EFF               	movlw	255
 16550  001F32  143C               	andwf	(___flmul@grs+1)^0,w,c
 16551  001F34  6E37               	movwf	(??___flmul+1)^0,c
 16552  001F36  0EFF               	movlw	255
 16553  001F38  143D               	andwf	(___flmul@grs+2)^0,w,c
 16554  001F3A  6E38               	movwf	(??___flmul+2)^0,c
 16555  001F3C  0E7F               	movlw	127
 16556  001F3E  143E               	andwf	(___flmul@grs+3)^0,w,c
 16557  001F40  6E39               	movwf	(??___flmul+3)^0,c
 16558  001F42  5036               	movf	??___flmul^0,w,c
 16559  001F44  1037               	iorwf	(??___flmul+1)^0,w,c
 16560  001F46  1038               	iorwf	(??___flmul+2)^0,w,c
 16561  001F48  1039               	iorwf	(??___flmul+3)^0,w,c
 16562  001F4A  B4D8               	btfsc	status,2,c
 16563  001F4C  EFAA  F00F         	goto	i2u563_41
 16564  001F50  EFAC  F00F         	goto	i2u563_40
 16565  001F54                     i2u563_41:
 16566  001F54  EFB0  F00F         	goto	i2l1551
 16567  001F58                     i2u563_40:
 16568  001F58                     i2l5313:
 16569  001F58  0E01               	movlw	1
 16570  001F5A  6E3F               	movwf	___flmul@aexp^0,c
 16571  001F5C  EFB9  F00F         	goto	i2l1550
 16572  001F60                     i2l1551:
 16573  001F60  A041               	btfss	___flmul@prod^0,0,c
 16574  001F62  EFB5  F00F         	goto	i2u564_41
 16575  001F66  EFB7  F00F         	goto	i2u564_40
 16576  001F6A                     i2u564_41:
 16577  001F6A  EFB9  F00F         	goto	i2l1550
 16578  001F6E                     i2u564_40:
 16579  001F6E  EFAC  F00F         	goto	i2l5313
 16580  001F72                     i2l1550:
 16581  001F72  503F               	movf	___flmul@aexp^0,w,c
 16582  001F74  B4D8               	btfsc	status,2,c
 16583  001F76  EFBF  F00F         	goto	i2u565_41
 16584  001F7A  EFC1  F00F         	goto	i2u565_40
 16585  001F7E                     i2u565_41:
 16586  001F7E  EFE5  F00F         	goto	i2l5325
 16587  001F82                     i2u565_40:
 16588  001F82  0E01               	movlw	1
 16589  001F84  2641               	addwf	___flmul@prod^0,f,c
 16590  001F86  0E00               	movlw	0
 16591  001F88  2242               	addwfc	(___flmul@prod+1)^0,f,c
 16592  001F8A  2243               	addwfc	(___flmul@prod+2)^0,f,c
 16593  001F8C  2244               	addwfc	(___flmul@prod+3)^0,f,c
 16594  001F8E  A044               	btfss	(___flmul@prod+3)^0,0,c
 16595  001F90  EFCC  F00F         	goto	i2u566_41
 16596  001F94  EFCE  F00F         	goto	i2u566_40
 16597  001F98                     i2u566_41:
 16598  001F98  EFE5  F00F         	goto	i2l5325
 16599  001F9C                     i2u566_40:
 16600  001F9C  C041  F036         	movff	___flmul@prod,??___flmul
 16601  001FA0  C042  F037         	movff	___flmul@prod+1,??___flmul+1
 16602  001FA4  C043  F038         	movff	___flmul@prod+2,??___flmul+2
 16603  001FA8  C044  F039         	movff	___flmul@prod+3,??___flmul+3
 16604  001FAC  3439               	rlcf	(??___flmul+3)^0,w,c
 16605  001FAE  3239               	rrcf	(??___flmul+3)^0,f,c
 16606  001FB0  3238               	rrcf	(??___flmul+2)^0,f,c
 16607  001FB2  3237               	rrcf	(??___flmul+1)^0,f,c
 16608  001FB4  3236               	rrcf	??___flmul^0,f,c
 16609  001FB6  C036  F041         	movff	??___flmul,___flmul@prod
 16610  001FBA  C037  F042         	movff	??___flmul+1,___flmul@prod+1
 16611  001FBE  C038  F043         	movff	??___flmul+2,___flmul@prod+2
 16612  001FC2  C039  F044         	movff	??___flmul+3,___flmul@prod+3
 16613  001FC6  4A45               	infsnz	___flmul@temp^0,f,c
 16614  001FC8  2A46               	incf	(___flmul@temp+1)^0,f,c
 16615  001FCA                     i2l5325:
 16616  001FCA  BE46               	btfsc	(___flmul@temp+1)^0,7,c
 16617  001FCC  EFF0  F00F         	goto	i2u567_41
 16618  001FD0  5046               	movf	(___flmul@temp+1)^0,w,c
 16619  001FD2  E108               	bnz	i2u567_40
 16620  001FD4  2845               	incf	___flmul@temp^0,w,c
 16621  001FD6  A0D8               	btfss	status,0,c
 16622  001FD8  EFF0  F00F         	goto	i2u567_41
 16623  001FDC  EFF2  F00F         	goto	i2u567_40
 16624  001FE0                     i2u567_41:
 16625  001FE0  EFFC  F00F         	goto	i2l5329
 16626  001FE4                     i2u567_40:
 16627  001FE4  0E00               	movlw	0
 16628  001FE6  6E41               	movwf	___flmul@prod^0,c
 16629  001FE8  0E00               	movlw	0
 16630  001FEA  6E42               	movwf	(___flmul@prod+1)^0,c
 16631  001FEC  0E80               	movlw	128
 16632  001FEE  6E43               	movwf	(___flmul@prod+2)^0,c
 16633  001FF0  0E7F               	movlw	127
 16634  001FF2  6E44               	movwf	(___flmul@prod+3)^0,c
 16635  001FF4  EF2A  F010         	goto	i2l5341
 16636  001FF8                     i2l5329:
 16637  001FF8  BE46               	btfsc	(___flmul@temp+1)^0,7,c
 16638  001FFA  EF09  F010         	goto	i2u568_40
 16639  001FFE  5046               	movf	(___flmul@temp+1)^0,w,c
 16640  002000  E106               	bnz	i2u568_41
 16641  002002  0445               	decf	___flmul@temp^0,w,c
 16642  002004  B0D8               	btfsc	status,0,c
 16643  002006  EF07  F010         	goto	i2u568_41
 16644  00200A  EF09  F010         	goto	i2u568_40
 16645  00200E                     i2u568_41:
 16646  00200E  EF15  F010         	goto	i2l1558
 16647  002012                     i2u568_40:
 16648  002012  0E00               	movlw	0
 16649  002014  6E41               	movwf	___flmul@prod^0,c
 16650  002016  0E00               	movlw	0
 16651  002018  6E42               	movwf	(___flmul@prod+1)^0,c
 16652  00201A  0E00               	movlw	0
 16653  00201C  6E43               	movwf	(___flmul@prod+2)^0,c
 16654  00201E  0E00               	movlw	0
 16655  002020  6E44               	movwf	(___flmul@prod+3)^0,c
 16656  002022  0E00               	movlw	0
 16657  002024  6E3A               	movwf	___flmul@sign^0,c
 16658  002026  EF2A  F010         	goto	i2l5341
 16659  00202A                     i2l1558:
 16660  00202A  C045  F040         	movff	___flmul@temp,___flmul@bexp
 16661  00202E  0EFF               	movlw	255
 16662  002030  1641               	andwf	___flmul@prod^0,f,c
 16663  002032  0EFF               	movlw	255
 16664  002034  1642               	andwf	(___flmul@prod+1)^0,f,c
 16665  002036  0E7F               	movlw	127
 16666  002038  1643               	andwf	(___flmul@prod+2)^0,f,c
 16667  00203A  0E00               	movlw	0
 16668  00203C  1644               	andwf	(___flmul@prod+3)^0,f,c
 16669  00203E  A040               	btfss	___flmul@bexp^0,0,c
 16670  002040  EF24  F010         	goto	i2u569_41
 16671  002044  EF26  F010         	goto	i2u569_40
 16672  002048                     i2u569_41:
 16673  002048  EF27  F010         	goto	i2l5339
 16674  00204C                     i2u569_40:
 16675  00204C  8E43               	bsf	(___flmul@prod+2)^0,7,c
 16676  00204E                     i2l5339:
 16677  00204E  90D8               	bcf	status,0,c
 16678  002050  3040               	rrcf	___flmul@bexp^0,w,c
 16679  002052  6E44               	movwf	(___flmul@prod+3)^0,c
 16680  002054                     i2l5341:
 16681  002054  503A               	movf	___flmul@sign^0,w,c
 16682  002056  1244               	iorwf	(___flmul@prod+3)^0,f,c
 16683  002058  C041  F02E         	movff	___flmul@prod,?___flmul
 16684  00205C  C042  F02F         	movff	___flmul@prod+1,?___flmul+1
 16685  002060  C043  F030         	movff	___flmul@prod+2,?___flmul+2
 16686  002064  C044  F031         	movff	___flmul@prod+3,?___flmul+3
 16687  002068                     i2l1545:
 16688  002068  0012               	return		;funcret
 16689  00206A                     __end_of___flmul:
 16690                           	opt callstack 0
 16691                           
 16692 ;; *************** function ___flge *****************
 16693 ;; Defined at:
 16694 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;  ff1             4    0[COMRAM] unsigned char 
 16697 ;;  ff2             4    4[COMRAM] unsigned char 
 16698 ;; Auto vars:     Size  Location     Type
 16699 ;;		None
 16700 ;; Return value:  Size  Location     Type
 16701 ;;		None               void
 16702 ;; Registers used:
 16703 ;;		wreg, status,2, status,0
 16704 ;; Tracked objects:
 16705 ;;		On entry : 0/0
 16706 ;;		On exit  : 0/0
 16707 ;;		Unchanged: 0/0
 16708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16709 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16711 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16712 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16713 ;;Total ram usage:       12 bytes
 16714 ;; Hardware stack levels used:    1
 16715 ;; This function calls:
 16716 ;;		Nothing
 16717 ;; This function is called by:
 16718 ;;		_PI_Controller
 16719 ;; This function uses a non-reentrant model
 16720 ;;
 16721                           
 16722                           	psect	text76
 16723  00426E                     __ptext76:
 16724                           	opt callstack 0
 16725  00426E                     ___flge:
 16726                           	opt callstack 15
 16727  00426E  0E00               	movlw	0
 16728  004270  1401               	andwf	___flge@ff1^0,w,c
 16729  004272  6E09               	movwf	??___flge^0,c
 16730  004274  0E00               	movlw	0
 16731  004276  1402               	andwf	(___flge@ff1+1)^0,w,c
 16732  004278  6E0A               	movwf	(??___flge+1)^0,c
 16733  00427A  0E80               	movlw	128
 16734  00427C  1403               	andwf	(___flge@ff1+2)^0,w,c
 16735  00427E  6E0B               	movwf	(??___flge+2)^0,c
 16736  004280  0E7F               	movlw	127
 16737  004282  1404               	andwf	(___flge@ff1+3)^0,w,c
 16738  004284  6E0C               	movwf	(??___flge+3)^0,c
 16739  004286  5009               	movf	??___flge^0,w,c
 16740  004288  100A               	iorwf	(??___flge+1)^0,w,c
 16741  00428A  100B               	iorwf	(??___flge+2)^0,w,c
 16742  00428C  100C               	iorwf	(??___flge+3)^0,w,c
 16743  00428E  A4D8               	btfss	status,2,c
 16744  004290  EF4C  F021         	goto	i2u570_41
 16745  004294  EF4E  F021         	goto	i2u570_40
 16746  004298                     i2u570_41:
 16747  004298  EF56  F021         	goto	i2l5357
 16748  00429C                     i2u570_40:
 16749  00429C  0E00               	movlw	0
 16750  00429E  6E01               	movwf	___flge@ff1^0,c
 16751  0042A0  0E00               	movlw	0
 16752  0042A2  6E02               	movwf	(___flge@ff1+1)^0,c
 16753  0042A4  0E00               	movlw	0
 16754  0042A6  6E03               	movwf	(___flge@ff1+2)^0,c
 16755  0042A8  0E00               	movlw	0
 16756  0042AA  6E04               	movwf	(___flge@ff1+3)^0,c
 16757  0042AC                     i2l5357:
 16758  0042AC  0E00               	movlw	0
 16759  0042AE  1405               	andwf	___flge@ff2^0,w,c
 16760  0042B0  6E09               	movwf	??___flge^0,c
 16761  0042B2  0E00               	movlw	0
 16762  0042B4  1406               	andwf	(___flge@ff2+1)^0,w,c
 16763  0042B6  6E0A               	movwf	(??___flge+1)^0,c
 16764  0042B8  0E80               	movlw	128
 16765  0042BA  1407               	andwf	(___flge@ff2+2)^0,w,c
 16766  0042BC  6E0B               	movwf	(??___flge+2)^0,c
 16767  0042BE  0E7F               	movlw	127
 16768  0042C0  1408               	andwf	(___flge@ff2+3)^0,w,c
 16769  0042C2  6E0C               	movwf	(??___flge+3)^0,c
 16770  0042C4  5009               	movf	??___flge^0,w,c
 16771  0042C6  100A               	iorwf	(??___flge+1)^0,w,c
 16772  0042C8  100B               	iorwf	(??___flge+2)^0,w,c
 16773  0042CA  100C               	iorwf	(??___flge+3)^0,w,c
 16774  0042CC  A4D8               	btfss	status,2,c
 16775  0042CE  EF6B  F021         	goto	i2u571_41
 16776  0042D2  EF6D  F021         	goto	i2u571_40
 16777  0042D6                     i2u571_41:
 16778  0042D6  EF75  F021         	goto	i2l5361
 16779  0042DA                     i2u571_40:
 16780  0042DA  0E00               	movlw	0
 16781  0042DC  6E05               	movwf	___flge@ff2^0,c
 16782  0042DE  0E00               	movlw	0
 16783  0042E0  6E06               	movwf	(___flge@ff2+1)^0,c
 16784  0042E2  0E00               	movlw	0
 16785  0042E4  6E07               	movwf	(___flge@ff2+2)^0,c
 16786  0042E6  0E00               	movlw	0
 16787  0042E8  6E08               	movwf	(___flge@ff2+3)^0,c
 16788  0042EA                     i2l5361:
 16789  0042EA  AE04               	btfss	(___flge@ff1+3)^0,7,c
 16790  0042EC  EF7A  F021         	goto	i2u572_41
 16791  0042F0  EF7C  F021         	goto	i2u572_40
 16792  0042F4                     i2u572_41:
 16793  0042F4  EF85  F021         	goto	i2l5365
 16794  0042F8                     i2u572_40:
 16795  0042F8  6C01               	negf	___flge@ff1^0,c
 16796  0042FA  1E02               	comf	(___flge@ff1+1)^0,f,c
 16797  0042FC  B0D8               	btfsc	status,0,c
 16798  0042FE  2A02               	incf	(___flge@ff1+1)^0,f,c
 16799  004300  1E03               	comf	(___flge@ff1+2)^0,f,c
 16800  004302  B0D8               	btfsc	status,0,c
 16801  004304  2A03               	incf	(___flge@ff1+2)^0,f,c
 16802  004306  0E80               	movlw	128
 16803  004308  5604               	subfwb	(___flge@ff1+3)^0,f,c
 16804  00430A                     i2l5365:
 16805  00430A  AE08               	btfss	(___flge@ff2+3)^0,7,c
 16806  00430C  EF8A  F021         	goto	i2u573_41
 16807  004310  EF8C  F021         	goto	i2u573_40
 16808  004314                     i2u573_41:
 16809  004314  EF95  F021         	goto	i2l1192
 16810  004318                     i2u573_40:
 16811  004318  6C05               	negf	___flge@ff2^0,c
 16812  00431A  1E06               	comf	(___flge@ff2+1)^0,f,c
 16813  00431C  B0D8               	btfsc	status,0,c
 16814  00431E  2A06               	incf	(___flge@ff2+1)^0,f,c
 16815  004320  1E07               	comf	(___flge@ff2+2)^0,f,c
 16816  004322  B0D8               	btfsc	status,0,c
 16817  004324  2A07               	incf	(___flge@ff2+2)^0,f,c
 16818  004326  0E80               	movlw	128
 16819  004328  5608               	subfwb	(___flge@ff2+3)^0,f,c
 16820  00432A                     i2l1192:
 16821  00432A  0E00               	movlw	0
 16822  00432C  1A01               	xorwf	___flge@ff1^0,f,c
 16823  00432E  0E00               	movlw	0
 16824  004330  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 16825  004332  0E00               	movlw	0
 16826  004334  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 16827  004336  0E80               	movlw	128
 16828  004338  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 16829  00433A  0E00               	movlw	0
 16830  00433C  1A05               	xorwf	___flge@ff2^0,f,c
 16831  00433E  0E00               	movlw	0
 16832  004340  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 16833  004342  0E00               	movlw	0
 16834  004344  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 16835  004346  0E80               	movlw	128
 16836  004348  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 16837  00434A  5005               	movf	___flge@ff2^0,w,c
 16838  00434C  5C01               	subwf	___flge@ff1^0,w,c
 16839  00434E  5006               	movf	(___flge@ff2+1)^0,w,c
 16840  004350  5802               	subwfb	(___flge@ff1+1)^0,w,c
 16841  004352  5007               	movf	(___flge@ff2+2)^0,w,c
 16842  004354  5803               	subwfb	(___flge@ff1+2)^0,w,c
 16843  004356  5008               	movf	(___flge@ff2+3)^0,w,c
 16844  004358  5804               	subwfb	(___flge@ff1+3)^0,w,c
 16845  00435A  B0D8               	btfsc	status,0,c
 16846  00435C  EFB2  F021         	goto	i2u574_41
 16847  004360  EFB4  F021         	goto	i2u574_40
 16848  004364                     i2u574_41:
 16849  004364  EFB7  F021         	goto	i2l5371
 16850  004368                     i2u574_40:
 16851  004368  90D8               	bcf	status,0,c
 16852  00436A  EFB8  F021         	goto	i2l1197
 16853  00436E                     i2l5371:
 16854  00436E  80D8               	bsf	status,0,c
 16855  004370                     i2l1197:
 16856  004370  0012               	return		;funcret
 16857  004372                     __end_of___flge:
 16858                           	opt callstack 0
 16859                           
 16860 ;; *************** function ___fldiv *****************
 16861 ;; Defined at:
 16862 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  b               4   70[COMRAM] unsigned char 
 16865 ;;  a               4   74[COMRAM] unsigned char 
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  grs             4    7[BANK0 ] unsigned long 
 16868 ;;  rem             4    0[BANK0 ] unsigned long 
 16869 ;;  new_exp         2    5[BANK0 ] short 
 16870 ;;  aexp            1   12[BANK0 ] unsigned char 
 16871 ;;  bexp            1   11[BANK0 ] unsigned char 
 16872 ;;  sign            1    4[BANK0 ] unsigned char 
 16873 ;; Return value:  Size  Location     Type
 16874 ;;                  4   70[COMRAM] unsigned char 
 16875 ;; Registers used:
 16876 ;;		wreg, status,2, status,0
 16877 ;; Tracked objects:
 16878 ;;		On entry : 0/0
 16879 ;;		On exit  : 0/0
 16880 ;;		Unchanged: 0/0
 16881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16883 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16885 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16886 ;;Total ram usage:       25 bytes
 16887 ;; Hardware stack levels used:    1
 16888 ;; This function calls:
 16889 ;;		Nothing
 16890 ;; This function is called by:
 16891 ;;		_PI_Controller
 16892 ;; This function uses a non-reentrant model
 16893 ;;
 16894                           
 16895                           	psect	text77
 16896  00206A                     __ptext77:
 16897                           	opt callstack 0
 16898  00206A                     ___fldiv:
 16899                           	opt callstack 15
 16900  00206A  504A               	movf	(___fldiv@b+3)^0,w,c
 16901  00206C  0B80               	andlw	128
 16902  00206E  0100               	movlb	0	; () banked
 16903  002070  6F64               	movwf	___fldiv@sign& (0+255),b
 16904  002072  504A               	movf	(___fldiv@b+3)^0,w,c
 16905  002074  244A               	addwf	(___fldiv@b+3)^0,w,c
 16906  002076  6F6B               	movwf	___fldiv@bexp& (0+255),b
 16907  002078                     
 16908                           ; BSR set to: 0
 16909  002078  AE49               	btfss	(___fldiv@b+2)^0,7,c
 16910  00207A  EF41  F010         	goto	i2u528_41
 16911  00207E  EF43  F010         	goto	i2u528_40
 16912  002082                     i2u528_41:
 16913  002082  EF44  F010         	goto	i2l5085
 16914  002086                     i2u528_40:
 16915  002086                     
 16916                           ; BSR set to: 0
 16917  002086  816B               	bsf	___fldiv@bexp& (0+255),0,b
 16918  002088                     i2l5085:
 16919                           
 16920                           ; BSR set to: 0
 16921  002088  516B               	movf	___fldiv@bexp& (0+255),w,b
 16922  00208A  B4D8               	btfsc	status,2,c
 16923  00208C  EF4A  F010         	goto	i2u529_41
 16924  002090  EF4C  F010         	goto	i2u529_40
 16925  002094                     i2u529_41:
 16926  002094  EF61  F010         	goto	i2l5095
 16927  002098                     i2u529_40:
 16928  002098                     
 16929                           ; BSR set to: 0
 16930  002098  296B               	incf	___fldiv@bexp& (0+255),w,b
 16931  00209A  A4D8               	btfss	status,2,c
 16932  00209C  EF52  F010         	goto	i2u530_41
 16933  0020A0  EF54  F010         	goto	i2u530_40
 16934  0020A4                     i2u530_41:
 16935  0020A4  EF5C  F010         	goto	i2l5091
 16936  0020A8                     i2u530_40:
 16937  0020A8                     
 16938                           ; BSR set to: 0
 16939  0020A8  0E00               	movlw	0
 16940  0020AA  6E47               	movwf	___fldiv@b^0,c
 16941  0020AC  0E00               	movlw	0
 16942  0020AE  6E48               	movwf	(___fldiv@b+1)^0,c
 16943  0020B0  0E00               	movlw	0
 16944  0020B2  6E49               	movwf	(___fldiv@b+2)^0,c
 16945  0020B4  0E00               	movlw	0
 16946  0020B6  6E4A               	movwf	(___fldiv@b+3)^0,c
 16947  0020B8                     i2l5091:
 16948                           
 16949                           ; BSR set to: 0
 16950  0020B8  8E49               	bsf	(___fldiv@b+2)^0,7,c
 16951  0020BA                     
 16952                           ; BSR set to: 0
 16953  0020BA  0E00               	movlw	0
 16954  0020BC  6E4A               	movwf	(___fldiv@b+3)^0,c
 16955  0020BE  EF69  F010         	goto	i2l5097
 16956  0020C2                     i2l5095:
 16957                           
 16958                           ; BSR set to: 0
 16959  0020C2  0E00               	movlw	0
 16960  0020C4  6E47               	movwf	___fldiv@b^0,c
 16961  0020C6  0E00               	movlw	0
 16962  0020C8  6E48               	movwf	(___fldiv@b+1)^0,c
 16963  0020CA  0E00               	movlw	0
 16964  0020CC  6E49               	movwf	(___fldiv@b+2)^0,c
 16965  0020CE  0E00               	movlw	0
 16966  0020D0  6E4A               	movwf	(___fldiv@b+3)^0,c
 16967  0020D2                     i2l5097:
 16968                           
 16969                           ; BSR set to: 0
 16970  0020D2  504E               	movf	(___fldiv@a+3)^0,w,c
 16971  0020D4  0B80               	andlw	128
 16972  0020D6  1B64               	xorwf	___fldiv@sign& (0+255),f,b
 16973  0020D8                     
 16974                           ; BSR set to: 0
 16975  0020D8  504E               	movf	(___fldiv@a+3)^0,w,c
 16976  0020DA  244E               	addwf	(___fldiv@a+3)^0,w,c
 16977  0020DC  6F6C               	movwf	___fldiv@aexp& (0+255),b
 16978  0020DE                     
 16979                           ; BSR set to: 0
 16980  0020DE  AE4D               	btfss	(___fldiv@a+2)^0,7,c
 16981  0020E0  EF74  F010         	goto	i2u531_41
 16982  0020E4  EF76  F010         	goto	i2u531_40
 16983  0020E8                     i2u531_41:
 16984  0020E8  EF77  F010         	goto	i2l5105
 16985  0020EC                     i2u531_40:
 16986  0020EC                     
 16987                           ; BSR set to: 0
 16988  0020EC  816C               	bsf	___fldiv@aexp& (0+255),0,b
 16989  0020EE                     i2l5105:
 16990                           
 16991                           ; BSR set to: 0
 16992  0020EE  516C               	movf	___fldiv@aexp& (0+255),w,b
 16993  0020F0  B4D8               	btfsc	status,2,c
 16994  0020F2  EF7D  F010         	goto	i2u532_41
 16995  0020F6  EF7F  F010         	goto	i2u532_40
 16996  0020FA                     i2u532_41:
 16997  0020FA  EF94  F010         	goto	i2l5115
 16998  0020FE                     i2u532_40:
 16999  0020FE                     
 17000                           ; BSR set to: 0
 17001  0020FE  296C               	incf	___fldiv@aexp& (0+255),w,b
 17002  002100  A4D8               	btfss	status,2,c
 17003  002102  EF85  F010         	goto	i2u533_41
 17004  002106  EF87  F010         	goto	i2u533_40
 17005  00210A                     i2u533_41:
 17006  00210A  EF8F  F010         	goto	i2l5111
 17007  00210E                     i2u533_40:
 17008  00210E                     
 17009                           ; BSR set to: 0
 17010  00210E  0E00               	movlw	0
 17011  002110  6E4B               	movwf	___fldiv@a^0,c
 17012  002112  0E00               	movlw	0
 17013  002114  6E4C               	movwf	(___fldiv@a+1)^0,c
 17014  002116  0E00               	movlw	0
 17015  002118  6E4D               	movwf	(___fldiv@a+2)^0,c
 17016  00211A  0E00               	movlw	0
 17017  00211C  6E4E               	movwf	(___fldiv@a+3)^0,c
 17018  00211E                     i2l5111:
 17019                           
 17020                           ; BSR set to: 0
 17021  00211E  8E4D               	bsf	(___fldiv@a+2)^0,7,c
 17022  002120                     
 17023                           ; BSR set to: 0
 17024  002120  0E00               	movlw	0
 17025  002122  6E4E               	movwf	(___fldiv@a+3)^0,c
 17026  002124  EF9C  F010         	goto	i2l5117
 17027  002128                     i2l5115:
 17028                           
 17029                           ; BSR set to: 0
 17030  002128  0E00               	movlw	0
 17031  00212A  6E4B               	movwf	___fldiv@a^0,c
 17032  00212C  0E00               	movlw	0
 17033  00212E  6E4C               	movwf	(___fldiv@a+1)^0,c
 17034  002130  0E00               	movlw	0
 17035  002132  6E4D               	movwf	(___fldiv@a+2)^0,c
 17036  002134  0E00               	movlw	0
 17037  002136  6E4E               	movwf	(___fldiv@a+3)^0,c
 17038  002138                     i2l5117:
 17039                           
 17040                           ; BSR set to: 0
 17041  002138  504B               	movf	___fldiv@a^0,w,c
 17042  00213A  104C               	iorwf	(___fldiv@a+1)^0,w,c
 17043  00213C  104D               	iorwf	(___fldiv@a+2)^0,w,c
 17044  00213E  104E               	iorwf	(___fldiv@a+3)^0,w,c
 17045  002140  A4D8               	btfss	status,2,c
 17046  002142  EFA5  F010         	goto	i2u534_41
 17047  002146  EFA7  F010         	goto	i2u534_40
 17048  00214A                     i2u534_41:
 17049  00214A  EFBF  F010         	goto	i2l5129
 17050  00214E                     i2u534_40:
 17051  00214E                     
 17052                           ; BSR set to: 0
 17053  00214E  0E00               	movlw	0
 17054  002150  6E47               	movwf	___fldiv@b^0,c
 17055  002152  0E00               	movlw	0
 17056  002154  6E48               	movwf	(___fldiv@b+1)^0,c
 17057  002156  0E00               	movlw	0
 17058  002158  6E49               	movwf	(___fldiv@b+2)^0,c
 17059  00215A  0E00               	movlw	0
 17060  00215C  6E4A               	movwf	(___fldiv@b+3)^0,c
 17061  00215E                     
 17062                           ; BSR set to: 0
 17063  00215E  0E80               	movlw	128
 17064  002160  1249               	iorwf	(___fldiv@b+2)^0,f,c
 17065  002162  0E7F               	movlw	127
 17066  002164  124A               	iorwf	(___fldiv@b+3)^0,f,c
 17067  002166                     i2l5123:
 17068                           
 17069                           ; BSR set to: 0
 17070  002166  5164               	movf	___fldiv@sign& (0+255),w,b
 17071  002168  124A               	iorwf	(___fldiv@b+3)^0,f,c
 17072  00216A                     
 17073                           ; BSR set to: 0
 17074  00216A  C047  F047         	movff	___fldiv@b,?___fldiv
 17075  00216E  C048  F048         	movff	___fldiv@b+1,?___fldiv+1
 17076  002172  C049  F049         	movff	___fldiv@b+2,?___fldiv+2
 17077  002176  C04A  F04A         	movff	___fldiv@b+3,?___fldiv+3
 17078  00217A  EF02  F012         	goto	i2l1509
 17079  00217E                     i2l5129:
 17080                           
 17081                           ; BSR set to: 0
 17082  00217E  516B               	movf	___fldiv@bexp& (0+255),w,b
 17083  002180  A4D8               	btfss	status,2,c
 17084  002182  EFC5  F010         	goto	i2u535_41
 17085  002186  EFC7  F010         	goto	i2u535_40
 17086  00218A                     i2u535_41:
 17087  00218A  EFD1  F010         	goto	i2l5137
 17088  00218E                     i2u535_40:
 17089  00218E                     
 17090                           ; BSR set to: 0
 17091  00218E  0E00               	movlw	0
 17092  002190  6E47               	movwf	?___fldiv^0,c
 17093  002192  0E00               	movlw	0
 17094  002194  6E48               	movwf	(?___fldiv+1)^0,c
 17095  002196  0E00               	movlw	0
 17096  002198  6E49               	movwf	(?___fldiv+2)^0,c
 17097  00219A  0E00               	movlw	0
 17098  00219C  6E4A               	movwf	(?___fldiv+3)^0,c
 17099  00219E  EF02  F012         	goto	i2l1509
 17100  0021A2                     i2l5137:
 17101                           
 17102                           ; BSR set to: 0
 17103  0021A2  516C               	movf	___fldiv@aexp& (0+255),w,b
 17104  0021A4  C06B  F04F         	movff	___fldiv@bexp,??___fldiv
 17105  0021A8  6A50               	clrf	(??___fldiv+1)^0,c
 17106  0021AA  5E4F               	subwf	??___fldiv^0,f,c
 17107  0021AC  0E00               	movlw	0
 17108  0021AE  5A50               	subwfb	(??___fldiv+1)^0,f,c
 17109  0021B0  0E7F               	movlw	127
 17110  0021B2  244F               	addwf	??___fldiv^0,w,c
 17111  0021B4  6F65               	movwf	___fldiv@new_exp& (0+255),b
 17112  0021B6  0E00               	movlw	0
 17113  0021B8  2050               	addwfc	(??___fldiv+1)^0,w,c
 17114  0021BA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17115  0021BC                     
 17116                           ; BSR set to: 0
 17117  0021BC  C047  F060         	movff	___fldiv@b,___fldiv@rem
 17118  0021C0  C048  F061         	movff	___fldiv@b+1,___fldiv@rem+1
 17119  0021C4  C049  F062         	movff	___fldiv@b+2,___fldiv@rem+2
 17120  0021C8  C04A  F063         	movff	___fldiv@b+3,___fldiv@rem+3
 17121  0021CC                     
 17122                           ; BSR set to: 0
 17123  0021CC  0E00               	movlw	0
 17124  0021CE  6E47               	movwf	___fldiv@b^0,c
 17125  0021D0  0E00               	movlw	0
 17126  0021D2  6E48               	movwf	(___fldiv@b+1)^0,c
 17127  0021D4  0E00               	movlw	0
 17128  0021D6  6E49               	movwf	(___fldiv@b+2)^0,c
 17129  0021D8  0E00               	movlw	0
 17130  0021DA  6E4A               	movwf	(___fldiv@b+3)^0,c
 17131  0021DC                     
 17132                           ; BSR set to: 0
 17133  0021DC  0E00               	movlw	0
 17134  0021DE  6F67               	movwf	___fldiv@grs& (0+255),b
 17135  0021E0  0E00               	movlw	0
 17136  0021E2  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
 17137  0021E4  0E00               	movlw	0
 17138  0021E6  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
 17139  0021E8  0E00               	movlw	0
 17140  0021EA  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
 17141  0021EC                     
 17142                           ; BSR set to: 0
 17143  0021EC  0E00               	movlw	0
 17144  0021EE  6F6C               	movwf	___fldiv@aexp& (0+255),b
 17145  0021F0  EF32  F011         	goto	i2l1511
 17146  0021F4                     i2l5147:
 17147                           
 17148                           ; BSR set to: 0
 17149  0021F4  516C               	movf	___fldiv@aexp& (0+255),w,b
 17150  0021F6  B4D8               	btfsc	status,2,c
 17151  0021F8  EF00  F011         	goto	i2u536_41
 17152  0021FC  EF02  F011         	goto	i2u536_40
 17153  002200                     i2u536_41:
 17154  002200  EF19  F011         	goto	i2l5155
 17155  002204                     i2u536_40:
 17156  002204                     
 17157                           ; BSR set to: 0
 17158  002204  90D8               	bcf	status,0,c
 17159  002206  3760               	rlcf	___fldiv@rem& (0+255),f,b
 17160  002208  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 17161  00220A  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 17162  00220C  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 17163  00220E  90D8               	bcf	status,0,c
 17164  002210  3647               	rlcf	___fldiv@b^0,f,c
 17165  002212  3648               	rlcf	(___fldiv@b+1)^0,f,c
 17166  002214  3649               	rlcf	(___fldiv@b+2)^0,f,c
 17167  002216  364A               	rlcf	(___fldiv@b+3)^0,f,c
 17168  002218                     
 17169                           ; BSR set to: 0
 17170  002218  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17171  00221A  EF11  F011         	goto	i2u537_41
 17172  00221E  EF13  F011         	goto	i2u537_40
 17173  002222                     i2u537_41:
 17174  002222  EF14  F011         	goto	i2l1514
 17175  002226                     i2u537_40:
 17176  002226                     
 17177                           ; BSR set to: 0
 17178  002226  8047               	bsf	___fldiv@b^0,0,c
 17179  002228                     i2l1514:
 17180                           
 17181                           ; BSR set to: 0
 17182  002228  90D8               	bcf	status,0,c
 17183  00222A  3767               	rlcf	___fldiv@grs& (0+255),f,b
 17184  00222C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17185  00222E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17186  002230  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17187  002232                     i2l5155:
 17188                           
 17189                           ; BSR set to: 0
 17190  002232  504B               	movf	___fldiv@a^0,w,c
 17191  002234  5D60               	subwf	___fldiv@rem& (0+255),w,b
 17192  002236  504C               	movf	(___fldiv@a+1)^0,w,c
 17193  002238  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 17194  00223A  504D               	movf	(___fldiv@a+2)^0,w,c
 17195  00223C  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 17196  00223E  504E               	movf	(___fldiv@a+3)^0,w,c
 17197  002240  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 17198  002242  A0D8               	btfss	status,0,c
 17199  002244  EF26  F011         	goto	i2u538_41
 17200  002248  EF28  F011         	goto	i2u538_40
 17201  00224C                     i2u538_41:
 17202  00224C  EF31  F011         	goto	i2l5161
 17203  002250                     i2u538_40:
 17204  002250                     
 17205                           ; BSR set to: 0
 17206  002250  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 17207  002252                     
 17208                           ; BSR set to: 0
 17209  002252  504B               	movf	___fldiv@a^0,w,c
 17210  002254  5F60               	subwf	___fldiv@rem& (0+255),f,b
 17211  002256  504C               	movf	(___fldiv@a+1)^0,w,c
 17212  002258  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 17213  00225A  504D               	movf	(___fldiv@a+2)^0,w,c
 17214  00225C  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 17215  00225E  504E               	movf	(___fldiv@a+3)^0,w,c
 17216  002260  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 17217  002262                     i2l5161:
 17218                           
 17219                           ; BSR set to: 0
 17220  002262  2B6C               	incf	___fldiv@aexp& (0+255),f,b
 17221  002264                     i2l1511:
 17222                           
 17223                           ; BSR set to: 0
 17224  002264  0E19               	movlw	25
 17225  002266  656C               	cpfsgt	___fldiv@aexp& (0+255),b
 17226  002268  EF38  F011         	goto	i2u539_41
 17227  00226C  EF3A  F011         	goto	i2u539_40
 17228  002270                     i2u539_41:
 17229  002270  EFFA  F010         	goto	i2l5147
 17230  002274                     i2u539_40:
 17231  002274                     
 17232                           ; BSR set to: 0
 17233  002274  5160               	movf	___fldiv@rem& (0+255),w,b
 17234  002276  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 17235  002278  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 17236  00227A  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 17237  00227C  B4D8               	btfsc	status,2,c
 17238  00227E  EF43  F011         	goto	i2u540_41
 17239  002282  EF45  F011         	goto	i2u540_40
 17240  002286                     i2u540_41:
 17241  002286  EF5D  F011         	goto	i2l5173
 17242  00228A                     i2u540_40:
 17243  00228A                     
 17244                           ; BSR set to: 0
 17245  00228A  8167               	bsf	___fldiv@grs& (0+255),0,b
 17246  00228C  EF5D  F011         	goto	i2l5173
 17247  002290                     i2l5167:
 17248                           
 17249                           ; BSR set to: 0
 17250  002290  90D8               	bcf	status,0,c
 17251  002292  3647               	rlcf	___fldiv@b^0,f,c
 17252  002294  3648               	rlcf	(___fldiv@b+1)^0,f,c
 17253  002296  3649               	rlcf	(___fldiv@b+2)^0,f,c
 17254  002298  364A               	rlcf	(___fldiv@b+3)^0,f,c
 17255  00229A                     
 17256                           ; BSR set to: 0
 17257  00229A  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17258  00229C  EF52  F011         	goto	i2u541_41
 17259  0022A0  EF54  F011         	goto	i2u541_40
 17260  0022A4                     i2u541_41:
 17261  0022A4  EF55  F011         	goto	i2l1520
 17262  0022A8                     i2u541_40:
 17263  0022A8                     
 17264                           ; BSR set to: 0
 17265  0022A8  8047               	bsf	___fldiv@b^0,0,c
 17266  0022AA                     i2l1520:
 17267                           
 17268                           ; BSR set to: 0
 17269  0022AA  90D8               	bcf	status,0,c
 17270  0022AC  3767               	rlcf	___fldiv@grs& (0+255),f,b
 17271  0022AE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17272  0022B0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17273  0022B2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17274  0022B4  0765               	decf	___fldiv@new_exp& (0+255),f,b
 17275  0022B6  A0D8               	btfss	status,0,c
 17276  0022B8  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17277  0022BA                     i2l5173:
 17278                           
 17279                           ; BSR set to: 0
 17280  0022BA  AE49               	btfss	(___fldiv@b+2)^0,7,c
 17281  0022BC  EF62  F011         	goto	i2u542_41
 17282  0022C0  EF64  F011         	goto	i2u542_40
 17283  0022C4                     i2u542_41:
 17284  0022C4  EF48  F011         	goto	i2l5167
 17285  0022C8                     i2u542_40:
 17286  0022C8                     
 17287                           ; BSR set to: 0
 17288  0022C8  0E00               	movlw	0
 17289  0022CA  6F6C               	movwf	___fldiv@aexp& (0+255),b
 17290  0022CC                     
 17291                           ; BSR set to: 0
 17292  0022CC  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17293  0022CE  EF6B  F011         	goto	i2u543_41
 17294  0022D2  EF6D  F011         	goto	i2u543_40
 17295  0022D6                     i2u543_41:
 17296  0022D6  EF91  F011         	goto	i2l1522
 17297  0022DA                     i2u543_40:
 17298  0022DA                     
 17299                           ; BSR set to: 0
 17300  0022DA  0EFF               	movlw	255
 17301  0022DC  1567               	andwf	___fldiv@grs& (0+255),w,b
 17302  0022DE  6E4F               	movwf	??___fldiv^0,c
 17303  0022E0  0EFF               	movlw	255
 17304  0022E2  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17305  0022E4  6E50               	movwf	(??___fldiv+1)^0,c
 17306  0022E6  0EFF               	movlw	255
 17307  0022E8  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17308  0022EA  6E51               	movwf	(??___fldiv+2)^0,c
 17309  0022EC  0E7F               	movlw	127
 17310  0022EE  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17311  0022F0  6E52               	movwf	(??___fldiv+3)^0,c
 17312  0022F2  504F               	movf	??___fldiv^0,w,c
 17313  0022F4  1050               	iorwf	(??___fldiv+1)^0,w,c
 17314  0022F6  1051               	iorwf	(??___fldiv+2)^0,w,c
 17315  0022F8  1052               	iorwf	(??___fldiv+3)^0,w,c
 17316  0022FA  B4D8               	btfsc	status,2,c
 17317  0022FC  EF82  F011         	goto	i2u544_41
 17318  002300  EF84  F011         	goto	i2u544_40
 17319  002304                     i2u544_41:
 17320  002304  EF88  F011         	goto	i2l1523
 17321  002308                     i2u544_40:
 17322  002308                     i2l5181:
 17323                           
 17324                           ; BSR set to: 0
 17325  002308  0E01               	movlw	1
 17326  00230A  6F6C               	movwf	___fldiv@aexp& (0+255),b
 17327  00230C  EF91  F011         	goto	i2l1522
 17328  002310                     i2l1523:
 17329                           
 17330                           ; BSR set to: 0
 17331  002310  A047               	btfss	___fldiv@b^0,0,c
 17332  002312  EF8D  F011         	goto	i2u545_41
 17333  002316  EF8F  F011         	goto	i2u545_40
 17334  00231A                     i2u545_41:
 17335  00231A  EF91  F011         	goto	i2l1522
 17336  00231E                     i2u545_40:
 17337  00231E  EF84  F011         	goto	i2l5181
 17338  002322                     i2l1522:
 17339                           
 17340                           ; BSR set to: 0
 17341  002322  516C               	movf	___fldiv@aexp& (0+255),w,b
 17342  002324  B4D8               	btfsc	status,2,c
 17343  002326  EF97  F011         	goto	i2u546_41
 17344  00232A  EF99  F011         	goto	i2u546_40
 17345  00232E                     i2u546_41:
 17346  00232E  EFBD  F011         	goto	i2l5193
 17347  002332                     i2u546_40:
 17348  002332                     
 17349                           ; BSR set to: 0
 17350  002332  0E01               	movlw	1
 17351  002334  2647               	addwf	___fldiv@b^0,f,c
 17352  002336  0E00               	movlw	0
 17353  002338  2248               	addwfc	(___fldiv@b+1)^0,f,c
 17354  00233A  2249               	addwfc	(___fldiv@b+2)^0,f,c
 17355  00233C  224A               	addwfc	(___fldiv@b+3)^0,f,c
 17356  00233E                     
 17357                           ; BSR set to: 0
 17358  00233E  A04A               	btfss	(___fldiv@b+3)^0,0,c
 17359  002340  EFA4  F011         	goto	i2u547_41
 17360  002344  EFA6  F011         	goto	i2u547_40
 17361  002348                     i2u547_41:
 17362  002348  EFBD  F011         	goto	i2l5193
 17363  00234C                     i2u547_40:
 17364  00234C                     
 17365                           ; BSR set to: 0
 17366  00234C  C047  F04F         	movff	___fldiv@b,??___fldiv
 17367  002350  C048  F050         	movff	___fldiv@b+1,??___fldiv+1
 17368  002354  C049  F051         	movff	___fldiv@b+2,??___fldiv+2
 17369  002358  C04A  F052         	movff	___fldiv@b+3,??___fldiv+3
 17370  00235C  3452               	rlcf	(??___fldiv+3)^0,w,c
 17371  00235E  3252               	rrcf	(??___fldiv+3)^0,f,c
 17372  002360  3251               	rrcf	(??___fldiv+2)^0,f,c
 17373  002362  3250               	rrcf	(??___fldiv+1)^0,f,c
 17374  002364  324F               	rrcf	??___fldiv^0,f,c
 17375  002366  C04F  F047         	movff	??___fldiv,___fldiv@b
 17376  00236A  C050  F048         	movff	??___fldiv+1,___fldiv@b+1
 17377  00236E  C051  F049         	movff	??___fldiv+2,___fldiv@b+2
 17378  002372  C052  F04A         	movff	??___fldiv+3,___fldiv@b+3
 17379  002376                     
 17380                           ; BSR set to: 0
 17381  002376  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
 17382  002378  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17383  00237A                     i2l5193:
 17384                           
 17385                           ; BSR set to: 0
 17386  00237A  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17387  00237C  EFC8  F011         	goto	i2u548_41
 17388  002380  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17389  002382  E108               	bnz	i2u548_40
 17390  002384  2965               	incf	___fldiv@new_exp& (0+255),w,b
 17391  002386  A0D8               	btfss	status,0,c
 17392  002388  EFC8  F011         	goto	i2u548_41
 17393  00238C  EFCA  F011         	goto	i2u548_40
 17394  002390                     i2u548_41:
 17395  002390  EFD5  F011         	goto	i2l5197
 17396  002394                     i2u548_40:
 17397  002394                     
 17398                           ; BSR set to: 0
 17399  002394  0E00               	movlw	0
 17400  002396  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17401  002398  6965               	setf	___fldiv@new_exp& (0+255),b
 17402  00239A  0E00               	movlw	0
 17403  00239C  6E47               	movwf	___fldiv@b^0,c
 17404  00239E  0E00               	movlw	0
 17405  0023A0  6E48               	movwf	(___fldiv@b+1)^0,c
 17406  0023A2  0E00               	movlw	0
 17407  0023A4  6E49               	movwf	(___fldiv@b+2)^0,c
 17408  0023A6  0E00               	movlw	0
 17409  0023A8  6E4A               	movwf	(___fldiv@b+3)^0,c
 17410  0023AA                     i2l5197:
 17411                           
 17412                           ; BSR set to: 0
 17413  0023AA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17414  0023AC  EFE2  F011         	goto	i2u549_40
 17415  0023B0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17416  0023B2  E106               	bnz	i2u549_41
 17417  0023B4  0565               	decf	___fldiv@new_exp& (0+255),w,b
 17418  0023B6  B0D8               	btfsc	status,0,c
 17419  0023B8  EFE0  F011         	goto	i2u549_41
 17420  0023BC  EFE2  F011         	goto	i2u549_40
 17421  0023C0                     i2u549_41:
 17422  0023C0  EFF0  F011         	goto	i2l5201
 17423  0023C4                     i2u549_40:
 17424  0023C4                     
 17425                           ; BSR set to: 0
 17426  0023C4  0E00               	movlw	0
 17427  0023C6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17428  0023C8  0E00               	movlw	0
 17429  0023CA  6F65               	movwf	___fldiv@new_exp& (0+255),b
 17430  0023CC  0E00               	movlw	0
 17431  0023CE  6E47               	movwf	___fldiv@b^0,c
 17432  0023D0  0E00               	movlw	0
 17433  0023D2  6E48               	movwf	(___fldiv@b+1)^0,c
 17434  0023D4  0E00               	movlw	0
 17435  0023D6  6E49               	movwf	(___fldiv@b+2)^0,c
 17436  0023D8  0E00               	movlw	0
 17437  0023DA  6E4A               	movwf	(___fldiv@b+3)^0,c
 17438  0023DC  0E00               	movlw	0
 17439  0023DE  6F64               	movwf	___fldiv@sign& (0+255),b
 17440  0023E0                     i2l5201:
 17441                           
 17442                           ; BSR set to: 0
 17443  0023E0  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
 17444  0023E4                     
 17445                           ; BSR set to: 0
 17446  0023E4  A16B               	btfss	___fldiv@bexp& (0+255),0,b
 17447  0023E6  EFF7  F011         	goto	i2u550_41
 17448  0023EA  EFF9  F011         	goto	i2u550_40
 17449  0023EE                     i2u550_41:
 17450  0023EE  EFFC  F011         	goto	i2l5207
 17451  0023F2                     i2u550_40:
 17452  0023F2                     
 17453                           ; BSR set to: 0
 17454  0023F2  8E49               	bsf	(___fldiv@b+2)^0,7,c
 17455  0023F4  EFFD  F011         	goto	i2l5209
 17456  0023F8                     i2l5207:
 17457                           
 17458                           ; BSR set to: 0
 17459  0023F8  9E49               	bcf	(___fldiv@b+2)^0,7,c
 17460  0023FA                     i2l5209:
 17461                           
 17462                           ; BSR set to: 0
 17463  0023FA  90D8               	bcf	status,0,c
 17464  0023FC  316B               	rrcf	___fldiv@bexp& (0+255),w,b
 17465  0023FE  6E4A               	movwf	(___fldiv@b+3)^0,c
 17466  002400  EFB3  F010         	goto	i2l5123
 17467  002404                     i2l1509:
 17468                           
 17469                           ; BSR set to: 0
 17470  002404  0012               	return		;funcret
 17471  002406                     __end_of___fldiv:
 17472                           	opt callstack 0
 17473                           
 17474 ;; *************** function _EPWM1_LoadDutyValue *****************
 17475 ;; Defined at:
 17476 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 17477 ;; Parameters:    Size  Location     Type
 17478 ;;  dutyValue       2   27[BANK0 ] unsigned short 
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;		None
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  1    wreg      void 
 17483 ;; Registers used:
 17484 ;;		wreg, status,2, status,0
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17494 ;;Total ram usage:        4 bytes
 17495 ;; Hardware stack levels used:    1
 17496 ;; This function calls:
 17497 ;;		Nothing
 17498 ;; This function is called by:
 17499 ;;		_PI_Controller
 17500 ;; This function uses a non-reentrant model
 17501 ;;
 17502                           
 17503                           	psect	text78
 17504  00515A                     __ptext78:
 17505                           	opt callstack 0
 17506  00515A                     _EPWM1_LoadDutyValue:
 17507                           	opt callstack 15
 17508  00515A                     
 17509                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 17510  00515A  C07B  F07D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 17511  00515E  C07C  F07E         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 17512  005162  0100               	movlb	0	; () banked
 17513  005164  90D8               	bcf	status,0,c
 17514  005166  337E               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
 17515  005168  337D               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
 17516  00516A  90D8               	bcf	status,0,c
 17517  00516C  337E               	rrcf	(??_EPWM1_LoadDutyValue+1)& (0+255),f,b
 17518  00516E  337D               	rrcf	??_EPWM1_LoadDutyValue& (0+255),f,b
 17519  005170  517D               	movf	??_EPWM1_LoadDutyValue& (0+255),w,b
 17520  005172  6EBC               	movwf	188,c	;volatile
 17521                           
 17522                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 17523  005174  C07B  F07D         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 17524  005178  0E03               	movlw	3
 17525  00517A  177D               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
 17526  00517C  3B7D               	swapf	??_EPWM1_LoadDutyValue& (0+255),f,b
 17527  00517E  0EF0               	movlw	240
 17528  005180  177D               	andwf	??_EPWM1_LoadDutyValue& (0+255),f,b
 17529  005182  50BB               	movf	187,w,c	;volatile
 17530  005184  0BCF               	andlw	207
 17531  005186  117D               	iorwf	??_EPWM1_LoadDutyValue& (0+255),w,b
 17532  005188  6EBB               	movwf	187,c	;volatile
 17533  00518A                     
 17534                           ; BSR set to: 0
 17535  00518A  0012               	return		;funcret
 17536  00518C                     __end_of_EPWM1_LoadDutyValue:
 17537                           	opt callstack 0
 17538                           
 17539 ;; *************** function _Get_values *****************
 17540 ;; Defined at:
 17541 ;;		line 60 in file "main.c"
 17542 ;; Parameters:    Size  Location     Type
 17543 ;;		None
 17544 ;; Auto vars:     Size  Location     Type
 17545 ;;		None
 17546 ;; Return value:  Size  Location     Type
 17547 ;;                  1    wreg      void 
 17548 ;; Registers used:
 17549 ;;		wreg, status,2, status,0, cstack
 17550 ;; Tracked objects:
 17551 ;;		On entry : 0/0
 17552 ;;		On exit  : 0/0
 17553 ;;		Unchanged: 0/0
 17554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17559 ;;Total ram usage:        0 bytes
 17560 ;; Hardware stack levels used:    1
 17561 ;; Hardware stack levels required when called:    1
 17562 ;; This function calls:
 17563 ;;		_ADC_GetConversion
 17564 ;;		___aldiv
 17565 ;;		___lmul
 17566 ;;		___xxtofl
 17567 ;; This function is called by:
 17568 ;;		_TIMER2_CALLBACK
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text79
 17573  004640                     __ptext79:
 17574                           	opt callstack 0
 17575  004640                     _Get_values:
 17576                           	opt callstack 15
 17577  004640                     
 17578                           ;main.c: 61:     setpoint = (long int) (ADC_GetConversion(POT_PIN)) * 100 / 4095;
 17579  004640  0EFF               	movlw	255
 17580  004642  6E16               	movwf	___aldiv@divisor^0,c
 17581  004644  0E0F               	movlw	15
 17582  004646  6E17               	movwf	(___aldiv@divisor+1)^0,c
 17583  004648  0E00               	movlw	0
 17584  00464A  6E18               	movwf	(___aldiv@divisor+2)^0,c
 17585  00464C  0E00               	movlw	0
 17586  00464E  6E19               	movwf	(___aldiv@divisor+3)^0,c
 17587  004650  0E00               	movlw	0
 17588  004652  EC5B  F028         	call	_ADC_GetConversion
 17589  004656  C001  F006         	movff	?_ADC_GetConversion,___lmul@multiplier
 17590  00465A  C002  F007         	movff	?_ADC_GetConversion+1,___lmul@multiplier+1
 17591  00465E  6A08               	clrf	(___lmul@multiplier+2)^0,c
 17592  004660  6A09               	clrf	(___lmul@multiplier+3)^0,c
 17593  004662  0E64               	movlw	100
 17594  004664  6E0A               	movwf	___lmul@multiplicand^0,c
 17595  004666  0E00               	movlw	0
 17596  004668  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 17597  00466A  0E00               	movlw	0
 17598  00466C  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 17599  00466E  0E00               	movlw	0
 17600  004670  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 17601  004672  EC99  F025         	call	___lmul	;wreg free
 17602  004676  C006  F012         	movff	?___lmul,___aldiv@dividend
 17603  00467A  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 17604  00467E  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 17605  004682  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 17606  004686  EC2D  F020         	call	___aldiv	;wreg free
 17607  00468A  C012  F020         	movff	?___aldiv,___xxtofl@val
 17608  00468E  C013  F021         	movff	?___aldiv+1,___xxtofl@val+1
 17609  004692  C014  F022         	movff	?___aldiv+2,___xxtofl@val+2
 17610  004696  C015  F023         	movff	?___aldiv+3,___xxtofl@val+3
 17611  00469A  0E01               	movlw	1
 17612  00469C  EC27  F01B         	call	___xxtofl
 17613  0046A0  C020  F0BD         	movff	?___xxtofl,_setpoint
 17614  0046A4  C021  F0BE         	movff	?___xxtofl+1,_setpoint+1
 17615  0046A8  C022  F0BF         	movff	?___xxtofl+2,_setpoint+2
 17616  0046AC  C023  F0C0         	movff	?___xxtofl+3,_setpoint+3
 17617                           
 17618                           ;main.c: 62:     sensor = (long int) (ADC_GetConversion(SENSOR)) * 100 / 4095;
 17619  0046B0  0EFF               	movlw	255
 17620  0046B2  6E16               	movwf	___aldiv@divisor^0,c
 17621  0046B4  0E0F               	movlw	15
 17622  0046B6  6E17               	movwf	(___aldiv@divisor+1)^0,c
 17623  0046B8  0E00               	movlw	0
 17624  0046BA  6E18               	movwf	(___aldiv@divisor+2)^0,c
 17625  0046BC  0E00               	movlw	0
 17626  0046BE  6E19               	movwf	(___aldiv@divisor+3)^0,c
 17627  0046C0  0E01               	movlw	1
 17628  0046C2  EC5B  F028         	call	_ADC_GetConversion
 17629  0046C6  C001  F006         	movff	?_ADC_GetConversion,___lmul@multiplier
 17630  0046CA  C002  F007         	movff	?_ADC_GetConversion+1,___lmul@multiplier+1
 17631  0046CE  6A08               	clrf	(___lmul@multiplier+2)^0,c
 17632  0046D0  6A09               	clrf	(___lmul@multiplier+3)^0,c
 17633  0046D2  0E64               	movlw	100
 17634  0046D4  6E0A               	movwf	___lmul@multiplicand^0,c
 17635  0046D6  0E00               	movlw	0
 17636  0046D8  6E0B               	movwf	(___lmul@multiplicand+1)^0,c
 17637  0046DA  0E00               	movlw	0
 17638  0046DC  6E0C               	movwf	(___lmul@multiplicand+2)^0,c
 17639  0046DE  0E00               	movlw	0
 17640  0046E0  6E0D               	movwf	(___lmul@multiplicand+3)^0,c
 17641  0046E2  EC99  F025         	call	___lmul	;wreg free
 17642  0046E6  C006  F012         	movff	?___lmul,___aldiv@dividend
 17643  0046EA  C007  F013         	movff	?___lmul+1,___aldiv@dividend+1
 17644  0046EE  C008  F014         	movff	?___lmul+2,___aldiv@dividend+2
 17645  0046F2  C009  F015         	movff	?___lmul+3,___aldiv@dividend+3
 17646  0046F6  EC2D  F020         	call	___aldiv	;wreg free
 17647  0046FA  C012  F020         	movff	?___aldiv,___xxtofl@val
 17648  0046FE  C013  F021         	movff	?___aldiv+1,___xxtofl@val+1
 17649  004702  C014  F022         	movff	?___aldiv+2,___xxtofl@val+2
 17650  004706  C015  F023         	movff	?___aldiv+3,___xxtofl@val+3
 17651  00470A  0E01               	movlw	1
 17652  00470C  EC27  F01B         	call	___xxtofl
 17653  004710  C020  F0C1         	movff	?___xxtofl,_sensor
 17654  004714  C021  F0C2         	movff	?___xxtofl+1,_sensor+1
 17655  004718  C022  F0C3         	movff	?___xxtofl+2,_sensor+2
 17656  00471C  C023  F0C4         	movff	?___xxtofl+3,_sensor+3
 17657  004720  0012               	return		;funcret
 17658  004722                     __end_of_Get_values:
 17659                           	opt callstack 0
 17660                           
 17661 ;; *************** function ___xxtofl *****************
 17662 ;; Defined at:
 17663 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17664 ;; Parameters:    Size  Location     Type
 17665 ;;  sign            1    wreg     unsigned char 
 17666 ;;  val             4   31[COMRAM] long 
 17667 ;; Auto vars:     Size  Location     Type
 17668 ;;  sign            1   39[COMRAM] unsigned char 
 17669 ;;  arg             4   41[COMRAM] unsigned long 
 17670 ;;  exp             1   40[COMRAM] unsigned char 
 17671 ;; Return value:  Size  Location     Type
 17672 ;;                  4   31[COMRAM] unsigned char 
 17673 ;; Registers used:
 17674 ;;		wreg, status,2, status,0
 17675 ;; Tracked objects:
 17676 ;;		On entry : 0/0
 17677 ;;		On exit  : 0/0
 17678 ;;		Unchanged: 0/0
 17679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17681 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17683 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17684 ;;Total ram usage:       14 bytes
 17685 ;; Hardware stack levels used:    1
 17686 ;; This function calls:
 17687 ;;		Nothing
 17688 ;; This function is called by:
 17689 ;;		_Get_values
 17690 ;;		_PI_Controller
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           	psect	text80
 17695  00364E                     __ptext80:
 17696                           	opt callstack 0
 17697  00364E                     ___xxtofl:
 17698                           	opt callstack 15
 17699                           
 17700                           ;incstack = 0
 17701                           ;___xxtofl@sign stored from wreg
 17702  00364E  6E28               	movwf	___xxtofl@sign^0,c
 17703  003650  5028               	movf	___xxtofl@sign^0,w,c
 17704  003652  B4D8               	btfsc	status,2,c
 17705  003654  EF2E  F01B         	goto	i2u582_41
 17706  003658  EF30  F01B         	goto	i2u582_40
 17707  00365C                     i2u582_41:
 17708  00365C  EF52  F01B         	goto	i2l1582
 17709  003660                     i2u582_40:
 17710  003660  BE23               	btfsc	(___xxtofl@val+3)^0,7,c
 17711  003662  EF37  F01B         	goto	i2u583_40
 17712  003666  EF35  F01B         	goto	i2u583_41
 17713  00366A                     i2u583_41:
 17714  00366A  EF52  F01B         	goto	i2l1582
 17715  00366E                     i2u583_40:
 17716  00366E  C020  F024         	movff	___xxtofl@val,??___xxtofl
 17717  003672  C021  F025         	movff	___xxtofl@val+1,??___xxtofl+1
 17718  003676  C022  F026         	movff	___xxtofl@val+2,??___xxtofl+2
 17719  00367A  C023  F027         	movff	___xxtofl@val+3,??___xxtofl+3
 17720  00367E  1E24               	comf	??___xxtofl^0,f,c
 17721  003680  1E25               	comf	(??___xxtofl+1)^0,f,c
 17722  003682  1E26               	comf	(??___xxtofl+2)^0,f,c
 17723  003684  1E27               	comf	(??___xxtofl+3)^0,f,c
 17724  003686  2A24               	incf	??___xxtofl^0,f,c
 17725  003688  0E00               	movlw	0
 17726  00368A  2225               	addwfc	(??___xxtofl+1)^0,f,c
 17727  00368C  2226               	addwfc	(??___xxtofl+2)^0,f,c
 17728  00368E  2227               	addwfc	(??___xxtofl+3)^0,f,c
 17729  003690  C024  F02A         	movff	??___xxtofl,___xxtofl@arg
 17730  003694  C025  F02B         	movff	??___xxtofl+1,___xxtofl@arg+1
 17731  003698  C026  F02C         	movff	??___xxtofl+2,___xxtofl@arg+2
 17732  00369C  C027  F02D         	movff	??___xxtofl+3,___xxtofl@arg+3
 17733  0036A0  EF5A  F01B         	goto	i2l5425
 17734  0036A4                     i2l1582:
 17735  0036A4  C020  F02A         	movff	___xxtofl@val,___xxtofl@arg
 17736  0036A8  C021  F02B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17737  0036AC  C022  F02C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17738  0036B0  C023  F02D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17739  0036B4                     i2l5425:
 17740  0036B4  5020               	movf	___xxtofl@val^0,w,c
 17741  0036B6  1021               	iorwf	(___xxtofl@val+1)^0,w,c
 17742  0036B8  1022               	iorwf	(___xxtofl@val+2)^0,w,c
 17743  0036BA  1023               	iorwf	(___xxtofl@val+3)^0,w,c
 17744  0036BC  A4D8               	btfss	status,2,c
 17745  0036BE  EF63  F01B         	goto	i2u584_41
 17746  0036C2  EF65  F01B         	goto	i2u584_40
 17747  0036C6                     i2u584_41:
 17748  0036C6  EF6F  F01B         	goto	i2l5431
 17749  0036CA                     i2u584_40:
 17750  0036CA  0E00               	movlw	0
 17751  0036CC  6E20               	movwf	?___xxtofl^0,c
 17752  0036CE  0E00               	movlw	0
 17753  0036D0  6E21               	movwf	(?___xxtofl+1)^0,c
 17754  0036D2  0E00               	movlw	0
 17755  0036D4  6E22               	movwf	(?___xxtofl+2)^0,c
 17756  0036D6  0E00               	movlw	0
 17757  0036D8  6E23               	movwf	(?___xxtofl+3)^0,c
 17758  0036DA  EF00  F01C         	goto	i2l1585
 17759  0036DE                     i2l5431:
 17760  0036DE  0E96               	movlw	150
 17761  0036E0  6E29               	movwf	___xxtofl@exp^0,c
 17762  0036E2  EF79  F01B         	goto	i2l5435
 17763  0036E6                     i2l5433:
 17764  0036E6  2A29               	incf	___xxtofl@exp^0,f,c
 17765  0036E8  90D8               	bcf	status,0,c
 17766  0036EA  322D               	rrcf	(___xxtofl@arg+3)^0,f,c
 17767  0036EC  322C               	rrcf	(___xxtofl@arg+2)^0,f,c
 17768  0036EE  322B               	rrcf	(___xxtofl@arg+1)^0,f,c
 17769  0036F0  322A               	rrcf	___xxtofl@arg^0,f,c
 17770  0036F2                     i2l5435:
 17771  0036F2  0E00               	movlw	0
 17772  0036F4  142A               	andwf	___xxtofl@arg^0,w,c
 17773  0036F6  6E24               	movwf	??___xxtofl^0,c
 17774  0036F8  0E00               	movlw	0
 17775  0036FA  142B               	andwf	(___xxtofl@arg+1)^0,w,c
 17776  0036FC  6E25               	movwf	(??___xxtofl+1)^0,c
 17777  0036FE  0E00               	movlw	0
 17778  003700  142C               	andwf	(___xxtofl@arg+2)^0,w,c
 17779  003702  6E26               	movwf	(??___xxtofl+2)^0,c
 17780  003704  0EFE               	movlw	254
 17781  003706  142D               	andwf	(___xxtofl@arg+3)^0,w,c
 17782  003708  6E27               	movwf	(??___xxtofl+3)^0,c
 17783  00370A  5024               	movf	??___xxtofl^0,w,c
 17784  00370C  1025               	iorwf	(??___xxtofl+1)^0,w,c
 17785  00370E  1026               	iorwf	(??___xxtofl+2)^0,w,c
 17786  003710  1027               	iorwf	(??___xxtofl+3)^0,w,c
 17787  003712  A4D8               	btfss	status,2,c
 17788  003714  EF8E  F01B         	goto	i2u585_41
 17789  003718  EF90  F01B         	goto	i2u585_40
 17790  00371C                     i2u585_41:
 17791  00371C  EF73  F01B         	goto	i2l5433
 17792  003720                     i2u585_40:
 17793  003720  EF9E  F01B         	goto	i2l1589
 17794  003724                     i2l5437:
 17795  003724  2A29               	incf	___xxtofl@exp^0,f,c
 17796  003726  0E01               	movlw	1
 17797  003728  262A               	addwf	___xxtofl@arg^0,f,c
 17798  00372A  0E00               	movlw	0
 17799  00372C  222B               	addwfc	(___xxtofl@arg+1)^0,f,c
 17800  00372E  222C               	addwfc	(___xxtofl@arg+2)^0,f,c
 17801  003730  222D               	addwfc	(___xxtofl@arg+3)^0,f,c
 17802  003732  90D8               	bcf	status,0,c
 17803  003734  322D               	rrcf	(___xxtofl@arg+3)^0,f,c
 17804  003736  322C               	rrcf	(___xxtofl@arg+2)^0,f,c
 17805  003738  322B               	rrcf	(___xxtofl@arg+1)^0,f,c
 17806  00373A  322A               	rrcf	___xxtofl@arg^0,f,c
 17807  00373C                     i2l1589:
 17808  00373C  0E00               	movlw	0
 17809  00373E  142A               	andwf	___xxtofl@arg^0,w,c
 17810  003740  6E24               	movwf	??___xxtofl^0,c
 17811  003742  0E00               	movlw	0
 17812  003744  142B               	andwf	(___xxtofl@arg+1)^0,w,c
 17813  003746  6E25               	movwf	(??___xxtofl+1)^0,c
 17814  003748  0E00               	movlw	0
 17815  00374A  142C               	andwf	(___xxtofl@arg+2)^0,w,c
 17816  00374C  6E26               	movwf	(??___xxtofl+2)^0,c
 17817  00374E  0EFF               	movlw	255
 17818  003750  142D               	andwf	(___xxtofl@arg+3)^0,w,c
 17819  003752  6E27               	movwf	(??___xxtofl+3)^0,c
 17820  003754  5024               	movf	??___xxtofl^0,w,c
 17821  003756  1025               	iorwf	(??___xxtofl+1)^0,w,c
 17822  003758  1026               	iorwf	(??___xxtofl+2)^0,w,c
 17823  00375A  1027               	iorwf	(??___xxtofl+3)^0,w,c
 17824  00375C  A4D8               	btfss	status,2,c
 17825  00375E  EFB3  F01B         	goto	i2u586_41
 17826  003762  EFB5  F01B         	goto	i2u586_40
 17827  003766                     i2u586_41:
 17828  003766  EF92  F01B         	goto	i2l5437
 17829  00376A                     i2u586_40:
 17830  00376A  EFBD  F01B         	goto	i2l5445
 17831  00376E                     i2l5443:
 17832  00376E  0629               	decf	___xxtofl@exp^0,f,c
 17833  003770  90D8               	bcf	status,0,c
 17834  003772  362A               	rlcf	___xxtofl@arg^0,f,c
 17835  003774  362B               	rlcf	(___xxtofl@arg+1)^0,f,c
 17836  003776  362C               	rlcf	(___xxtofl@arg+2)^0,f,c
 17837  003778  362D               	rlcf	(___xxtofl@arg+3)^0,f,c
 17838  00377A                     i2l5445:
 17839  00377A  BE2C               	btfsc	(___xxtofl@arg+2)^0,7,c
 17840  00377C  EFC2  F01B         	goto	i2u587_41
 17841  003780  EFC4  F01B         	goto	i2u587_40
 17842  003784                     i2u587_41:
 17843  003784  EFCC  F01B         	goto	i2l1596
 17844  003788                     i2u587_40:
 17845  003788  0E02               	movlw	2
 17846  00378A  6029               	cpfslt	___xxtofl@exp^0,c
 17847  00378C  EFCA  F01B         	goto	i2u588_41
 17848  003790  EFCC  F01B         	goto	i2u588_40
 17849  003794                     i2u588_41:
 17850  003794  EFB7  F01B         	goto	i2l5443
 17851  003798                     i2u588_40:
 17852  003798                     i2l1596:
 17853  003798  B029               	btfsc	___xxtofl@exp^0,0,c
 17854  00379A  EFD1  F01B         	goto	i2u589_41
 17855  00379E  EFD3  F01B         	goto	i2u589_40
 17856  0037A2                     i2u589_41:
 17857  0037A2  EFD4  F01B         	goto	i2l5451
 17858  0037A6                     i2u589_40:
 17859  0037A6  9E2C               	bcf	(___xxtofl@arg+2)^0,7,c
 17860  0037A8                     i2l5451:
 17861  0037A8  90D8               	bcf	status,0,c
 17862  0037AA  3229               	rrcf	___xxtofl@exp^0,f,c
 17863  0037AC  C029  F024         	movff	___xxtofl@exp,??___xxtofl
 17864  0037B0  6A25               	clrf	(??___xxtofl+1)^0,c
 17865  0037B2  6A26               	clrf	(??___xxtofl+2)^0,c
 17866  0037B4  6A27               	clrf	(??___xxtofl+3)^0,c
 17867  0037B6  C024  F027         	movff	??___xxtofl,??___xxtofl+3
 17868  0037BA  6A26               	clrf	(??___xxtofl+2)^0,c
 17869  0037BC  6A25               	clrf	(??___xxtofl+1)^0,c
 17870  0037BE  6A24               	clrf	??___xxtofl^0,c
 17871  0037C0  5024               	movf	??___xxtofl^0,w,c
 17872  0037C2  122A               	iorwf	___xxtofl@arg^0,f,c
 17873  0037C4  5025               	movf	(??___xxtofl+1)^0,w,c
 17874  0037C6  122B               	iorwf	(___xxtofl@arg+1)^0,f,c
 17875  0037C8  5026               	movf	(??___xxtofl+2)^0,w,c
 17876  0037CA  122C               	iorwf	(___xxtofl@arg+2)^0,f,c
 17877  0037CC  5027               	movf	(??___xxtofl+3)^0,w,c
 17878  0037CE  122D               	iorwf	(___xxtofl@arg+3)^0,f,c
 17879  0037D0  5028               	movf	___xxtofl@sign^0,w,c
 17880  0037D2  B4D8               	btfsc	status,2,c
 17881  0037D4  EFEE  F01B         	goto	i2u590_41
 17882  0037D8  EFF0  F01B         	goto	i2u590_40
 17883  0037DC                     i2u590_41:
 17884  0037DC  EFF8  F01B         	goto	i2l5461
 17885  0037E0                     i2u590_40:
 17886  0037E0  BE23               	btfsc	(___xxtofl@val+3)^0,7,c
 17887  0037E2  EFF7  F01B         	goto	i2u591_40
 17888  0037E6  EFF5  F01B         	goto	i2u591_41
 17889  0037EA                     i2u591_41:
 17890  0037EA  EFF8  F01B         	goto	i2l5461
 17891  0037EE                     i2u591_40:
 17892  0037EE  8E2D               	bsf	(___xxtofl@arg+3)^0,7,c
 17893  0037F0                     i2l5461:
 17894  0037F0  C02A  F020         	movff	___xxtofl@arg,?___xxtofl
 17895  0037F4  C02B  F021         	movff	___xxtofl@arg+1,?___xxtofl+1
 17896  0037F8  C02C  F022         	movff	___xxtofl@arg+2,?___xxtofl+2
 17897  0037FC  C02D  F023         	movff	___xxtofl@arg+3,?___xxtofl+3
 17898  003800                     i2l1585:
 17899  003800  0012               	return		;funcret
 17900  003802                     __end_of___xxtofl:
 17901                           	opt callstack 0
 17902                           
 17903 ;; *************** function ___lmul *****************
 17904 ;; Defined at:
 17905 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;  multiplier      4    5[COMRAM] unsigned long 
 17908 ;;  multiplicand    4    9[COMRAM] unsigned long 
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;  product         4   13[COMRAM] unsigned long 
 17911 ;; Return value:  Size  Location     Type
 17912 ;;                  4    5[COMRAM] unsigned long 
 17913 ;; Registers used:
 17914 ;;		wreg, status,2, status,0
 17915 ;; Tracked objects:
 17916 ;;		On entry : 0/0
 17917 ;;		On exit  : 0/0
 17918 ;;		Unchanged: 0/0
 17919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17920 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17923 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;Total ram usage:       12 bytes
 17925 ;; Hardware stack levels used:    1
 17926 ;; This function calls:
 17927 ;;		Nothing
 17928 ;; This function is called by:
 17929 ;;		_Get_values
 17930 ;; This function uses a non-reentrant model
 17931 ;;
 17932                           
 17933                           	psect	text81
 17934  004B32                     __ptext81:
 17935                           	opt callstack 0
 17936  004B32                     ___lmul:
 17937                           	opt callstack 15
 17938  004B32  0E00               	movlw	0
 17939  004B34  6E0E               	movwf	___lmul@product^0,c
 17940  004B36  0E00               	movlw	0
 17941  004B38  6E0F               	movwf	(___lmul@product+1)^0,c
 17942  004B3A  0E00               	movlw	0
 17943  004B3C  6E10               	movwf	(___lmul@product+2)^0,c
 17944  004B3E  0E00               	movlw	0
 17945  004B40  6E11               	movwf	(___lmul@product+3)^0,c
 17946  004B42                     i2l5027:
 17947  004B42  A006               	btfss	___lmul@multiplier^0,0,c
 17948  004B44  EFA6  F025         	goto	i2u520_41
 17949  004B48  EFA8  F025         	goto	i2u520_40
 17950  004B4C                     i2u520_41:
 17951  004B4C  EFB0  F025         	goto	i2l5031
 17952  004B50                     i2u520_40:
 17953  004B50  500A               	movf	___lmul@multiplicand^0,w,c
 17954  004B52  260E               	addwf	___lmul@product^0,f,c
 17955  004B54  500B               	movf	(___lmul@multiplicand+1)^0,w,c
 17956  004B56  220F               	addwfc	(___lmul@product+1)^0,f,c
 17957  004B58  500C               	movf	(___lmul@multiplicand+2)^0,w,c
 17958  004B5A  2210               	addwfc	(___lmul@product+2)^0,f,c
 17959  004B5C  500D               	movf	(___lmul@multiplicand+3)^0,w,c
 17960  004B5E  2211               	addwfc	(___lmul@product+3)^0,f,c
 17961  004B60                     i2l5031:
 17962  004B60  90D8               	bcf	status,0,c
 17963  004B62  360A               	rlcf	___lmul@multiplicand^0,f,c
 17964  004B64  360B               	rlcf	(___lmul@multiplicand+1)^0,f,c
 17965  004B66  360C               	rlcf	(___lmul@multiplicand+2)^0,f,c
 17966  004B68  360D               	rlcf	(___lmul@multiplicand+3)^0,f,c
 17967  004B6A  90D8               	bcf	status,0,c
 17968  004B6C  3209               	rrcf	(___lmul@multiplier+3)^0,f,c
 17969  004B6E  3208               	rrcf	(___lmul@multiplier+2)^0,f,c
 17970  004B70  3207               	rrcf	(___lmul@multiplier+1)^0,f,c
 17971  004B72  3206               	rrcf	___lmul@multiplier^0,f,c
 17972  004B74  5006               	movf	___lmul@multiplier^0,w,c
 17973  004B76  1007               	iorwf	(___lmul@multiplier+1)^0,w,c
 17974  004B78  1008               	iorwf	(___lmul@multiplier+2)^0,w,c
 17975  004B7A  1009               	iorwf	(___lmul@multiplier+3)^0,w,c
 17976  004B7C  A4D8               	btfss	status,2,c
 17977  004B7E  EFC3  F025         	goto	i2u521_41
 17978  004B82  EFC5  F025         	goto	i2u521_40
 17979  004B86                     i2u521_41:
 17980  004B86  EFA1  F025         	goto	i2l5027
 17981  004B8A                     i2u521_40:
 17982  004B8A  C00E  F006         	movff	___lmul@product,?___lmul
 17983  004B8E  C00F  F007         	movff	___lmul@product+1,?___lmul+1
 17984  004B92  C010  F008         	movff	___lmul@product+2,?___lmul+2
 17985  004B96  C011  F009         	movff	___lmul@product+3,?___lmul+3
 17986  004B9A  0012               	return		;funcret
 17987  004B9C                     __end_of___lmul:
 17988                           	opt callstack 0
 17989                           
 17990 ;; *************** function ___aldiv *****************
 17991 ;; Defined at:
 17992 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 17993 ;; Parameters:    Size  Location     Type
 17994 ;;  dividend        4   17[COMRAM] long 
 17995 ;;  divisor         4   21[COMRAM] long 
 17996 ;; Auto vars:     Size  Location     Type
 17997 ;;  quotient        4   27[COMRAM] long 
 17998 ;;  sign            1   26[COMRAM] unsigned char 
 17999 ;;  counter         1   25[COMRAM] unsigned char 
 18000 ;; Return value:  Size  Location     Type
 18001 ;;                  4   17[COMRAM] long 
 18002 ;; Registers used:
 18003 ;;		wreg, status,2, status,0
 18004 ;; Tracked objects:
 18005 ;;		On entry : 0/0
 18006 ;;		On exit  : 0/0
 18007 ;;		Unchanged: 0/0
 18008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18009 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18010 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18012 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18013 ;;Total ram usage:       14 bytes
 18014 ;; Hardware stack levels used:    1
 18015 ;; This function calls:
 18016 ;;		Nothing
 18017 ;; This function is called by:
 18018 ;;		_Get_values
 18019 ;; This function uses a non-reentrant model
 18020 ;;
 18021                           
 18022                           	psect	text82
 18023  00405A                     __ptext82:
 18024                           	opt callstack 0
 18025  00405A                     ___aldiv:
 18026                           	opt callstack 15
 18027  00405A  0E00               	movlw	0
 18028  00405C  6E1B               	movwf	___aldiv@sign^0,c
 18029  00405E  BE19               	btfsc	(___aldiv@divisor+3)^0,7,c
 18030  004060  EF36  F020         	goto	i2u522_40
 18031  004064  EF34  F020         	goto	i2u522_41
 18032  004068                     i2u522_41:
 18033  004068  EF40  F020         	goto	i2l5043
 18034  00406C                     i2u522_40:
 18035  00406C  1E19               	comf	(___aldiv@divisor+3)^0,f,c
 18036  00406E  1E18               	comf	(___aldiv@divisor+2)^0,f,c
 18037  004070  1E17               	comf	(___aldiv@divisor+1)^0,f,c
 18038  004072  6C16               	negf	___aldiv@divisor^0,c
 18039  004074  0E00               	movlw	0
 18040  004076  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
 18041  004078  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
 18042  00407A  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
 18043  00407C  0E01               	movlw	1
 18044  00407E  6E1B               	movwf	___aldiv@sign^0,c
 18045  004080                     i2l5043:
 18046  004080  BE15               	btfsc	(___aldiv@dividend+3)^0,7,c
 18047  004082  EF47  F020         	goto	i2u523_40
 18048  004086  EF45  F020         	goto	i2u523_41
 18049  00408A                     i2u523_41:
 18050  00408A  EF51  F020         	goto	i2l5049
 18051  00408E                     i2u523_40:
 18052  00408E  1E15               	comf	(___aldiv@dividend+3)^0,f,c
 18053  004090  1E14               	comf	(___aldiv@dividend+2)^0,f,c
 18054  004092  1E13               	comf	(___aldiv@dividend+1)^0,f,c
 18055  004094  6C12               	negf	___aldiv@dividend^0,c
 18056  004096  0E00               	movlw	0
 18057  004098  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
 18058  00409A  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
 18059  00409C  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
 18060  00409E  0E01               	movlw	1
 18061  0040A0  1A1B               	xorwf	___aldiv@sign^0,f,c
 18062  0040A2                     i2l5049:
 18063  0040A2  0E00               	movlw	0
 18064  0040A4  6E1C               	movwf	___aldiv@quotient^0,c
 18065  0040A6  0E00               	movlw	0
 18066  0040A8  6E1D               	movwf	(___aldiv@quotient+1)^0,c
 18067  0040AA  0E00               	movlw	0
 18068  0040AC  6E1E               	movwf	(___aldiv@quotient+2)^0,c
 18069  0040AE  0E00               	movlw	0
 18070  0040B0  6E1F               	movwf	(___aldiv@quotient+3)^0,c
 18071  0040B2  5016               	movf	___aldiv@divisor^0,w,c
 18072  0040B4  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
 18073  0040B6  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
 18074  0040B8  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
 18075  0040BA  B4D8               	btfsc	status,2,c
 18076  0040BC  EF62  F020         	goto	i2u524_41
 18077  0040C0  EF64  F020         	goto	i2u524_40
 18078  0040C4                     i2u524_41:
 18079  0040C4  EF9A  F020         	goto	i2l5071
 18080  0040C8                     i2u524_40:
 18081  0040C8  0E01               	movlw	1
 18082  0040CA  6E1A               	movwf	___aldiv@counter^0,c
 18083  0040CC  EF6E  F020         	goto	i2l5057
 18084  0040D0                     i2l5055:
 18085  0040D0  90D8               	bcf	status,0,c
 18086  0040D2  3616               	rlcf	___aldiv@divisor^0,f,c
 18087  0040D4  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
 18088  0040D6  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
 18089  0040D8  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
 18090  0040DA  2A1A               	incf	___aldiv@counter^0,f,c
 18091  0040DC                     i2l5057:
 18092  0040DC  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
 18093  0040DE  EF73  F020         	goto	i2u525_41
 18094  0040E2  EF75  F020         	goto	i2u525_40
 18095  0040E6                     i2u525_41:
 18096  0040E6  EF68  F020         	goto	i2l5055
 18097  0040EA                     i2u525_40:
 18098  0040EA                     i2l5059:
 18099  0040EA  90D8               	bcf	status,0,c
 18100  0040EC  361C               	rlcf	___aldiv@quotient^0,f,c
 18101  0040EE  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
 18102  0040F0  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
 18103  0040F2  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
 18104  0040F4  5016               	movf	___aldiv@divisor^0,w,c
 18105  0040F6  5C12               	subwf	___aldiv@dividend^0,w,c
 18106  0040F8  5017               	movf	(___aldiv@divisor+1)^0,w,c
 18107  0040FA  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
 18108  0040FC  5018               	movf	(___aldiv@divisor+2)^0,w,c
 18109  0040FE  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
 18110  004100  5019               	movf	(___aldiv@divisor+3)^0,w,c
 18111  004102  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
 18112  004104  A0D8               	btfss	status,0,c
 18113  004106  EF87  F020         	goto	i2u526_41
 18114  00410A  EF89  F020         	goto	i2u526_40
 18115  00410E                     i2u526_41:
 18116  00410E  EF92  F020         	goto	i2l5067
 18117  004112                     i2u526_40:
 18118  004112  5016               	movf	___aldiv@divisor^0,w,c
 18119  004114  5E12               	subwf	___aldiv@dividend^0,f,c
 18120  004116  5017               	movf	(___aldiv@divisor+1)^0,w,c
 18121  004118  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
 18122  00411A  5018               	movf	(___aldiv@divisor+2)^0,w,c
 18123  00411C  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
 18124  00411E  5019               	movf	(___aldiv@divisor+3)^0,w,c
 18125  004120  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
 18126  004122  801C               	bsf	___aldiv@quotient^0,0,c
 18127  004124                     i2l5067:
 18128  004124  90D8               	bcf	status,0,c
 18129  004126  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
 18130  004128  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
 18131  00412A  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
 18132  00412C  3216               	rrcf	___aldiv@divisor^0,f,c
 18133  00412E  2E1A               	decfsz	___aldiv@counter^0,f,c
 18134  004130  EF75  F020         	goto	i2l5059
 18135  004134                     i2l5071:
 18136  004134  501B               	movf	___aldiv@sign^0,w,c
 18137  004136  B4D8               	btfsc	status,2,c
 18138  004138  EFA0  F020         	goto	i2u527_41
 18139  00413C  EFA2  F020         	goto	i2u527_40
 18140  004140                     i2u527_41:
 18141  004140  EFAA  F020         	goto	i2l5075
 18142  004144                     i2u527_40:
 18143  004144  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
 18144  004146  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
 18145  004148  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
 18146  00414A  6C1C               	negf	___aldiv@quotient^0,c
 18147  00414C  0E00               	movlw	0
 18148  00414E  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
 18149  004150  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
 18150  004152  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
 18151  004154                     i2l5075:
 18152  004154  C01C  F012         	movff	___aldiv@quotient,?___aldiv
 18153  004158  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
 18154  00415C  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
 18155  004160  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
 18156  004164  0012               	return		;funcret
 18157  004166                     __end_of___aldiv:
 18158                           	opt callstack 0
 18159                           
 18160 ;; *************** function _ADC_GetConversion *****************
 18161 ;; Defined at:
 18162 ;;		line 108 in file "mcc_generated_files/adc.c"
 18163 ;; Parameters:    Size  Location     Type
 18164 ;;  channel         1    wreg     enum E12385
 18165 ;; Auto vars:     Size  Location     Type
 18166 ;;  channel         1    4[COMRAM] enum E12385
 18167 ;; Return value:  Size  Location     Type
 18168 ;;                  2    0[COMRAM] unsigned short 
 18169 ;; Registers used:
 18170 ;;		wreg, status,2, status,0
 18171 ;; Tracked objects:
 18172 ;;		On entry : 0/0
 18173 ;;		On exit  : 0/0
 18174 ;;		Unchanged: 0/0
 18175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18179 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18180 ;;Total ram usage:        5 bytes
 18181 ;; Hardware stack levels used:    1
 18182 ;; This function calls:
 18183 ;;		Nothing
 18184 ;; This function is called by:
 18185 ;;		_Get_values
 18186 ;; This function uses a non-reentrant model
 18187 ;;
 18188                           
 18189                           	psect	text83
 18190  0050B6                     __ptext83:
 18191                           	opt callstack 0
 18192  0050B6                     _ADC_GetConversion:
 18193                           	opt callstack 15
 18194                           
 18195                           ;incstack = 0
 18196                           ;ADC_GetConversion@channel stored from wreg
 18197  0050B6  6E05               	movwf	ADC_GetConversion@channel^0,c
 18198  0050B8                     
 18199                           ;mcc_generated_files/adc.c: 108: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 109: {;mcc_generated_files/adc.c: 111:     ADCON0bits.CHS = ch
      +                          annel;
 18200  0050B8  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 18201  0050BC  4603               	rlncf	??_ADC_GetConversion^0,f,c
 18202  0050BE  4603               	rlncf	??_ADC_GetConversion^0,f,c
 18203  0050C0  50C2               	movf	194,w,c	;volatile
 18204  0050C2  1803               	xorwf	??_ADC_GetConversion^0,w,c
 18205  0050C4  0B83               	andlw	-125
 18206  0050C6  1803               	xorwf	??_ADC_GetConversion^0,w,c
 18207  0050C8  6EC2               	movwf	194,c	;volatile
 18208  0050CA                     
 18209                           ;mcc_generated_files/adc.c: 114:     ADCON0bits.ADON = 1;
 18210  0050CA  80C2               	bsf	194,0,c	;volatile
 18211  0050CC                     
 18212                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
 18213  0050CC  82C2               	bsf	194,1,c	;volatile
 18214  0050CE                     i2l181:
 18215                           
 18216                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
 18217  0050CE  B2C2               	btfsc	194,1,c	;volatile
 18218  0050D0  EF6C  F028         	goto	i2u442_41
 18219  0050D4  EF6E  F028         	goto	i2u442_40
 18220  0050D8                     i2u442_41:
 18221  0050D8  EF67  F028         	goto	i2l181
 18222  0050DC                     i2u442_40:
 18223  0050DC                     
 18224                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18225  0050DC  50C4               	movf	196,w,c	;volatile
 18226  0050DE  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
 18227  0050E0  6A03               	clrf	??_ADC_GetConversion^0,c
 18228  0050E2  50C3               	movf	195,w,c	;volatile
 18229  0050E4  2403               	addwf	??_ADC_GetConversion^0,w,c
 18230  0050E6  6E01               	movwf	?_ADC_GetConversion^0,c
 18231  0050E8  0E00               	movlw	0
 18232  0050EA  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 18233  0050EC  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
 18234  0050EE  0012               	return		;funcret
 18235  0050F0                     __end_of_ADC_GetConversion:
 18236                           	opt callstack 0
 18237                           
 18238 ;; *************** function _PIN_MANAGER_IOC *****************
 18239 ;; Defined at:
 18240 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18241 ;; Parameters:    Size  Location     Type
 18242 ;;		None
 18243 ;; Auto vars:     Size  Location     Type
 18244 ;;		None
 18245 ;; Return value:  Size  Location     Type
 18246 ;;                  1    wreg      void 
 18247 ;; Registers used:
 18248 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18249 ;; Tracked objects:
 18250 ;;		On entry : 0/0
 18251 ;;		On exit  : 0/0
 18252 ;;		Unchanged: 0/0
 18253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18258 ;;Total ram usage:        0 bytes
 18259 ;; Hardware stack levels used:    1
 18260 ;; Hardware stack levels required when called:    2
 18261 ;; This function calls:
 18262 ;;		_IOCB4_ISR
 18263 ;; This function is called by:
 18264 ;;		_INTERRUPT_InterruptManager
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           	psect	text84
 18269  0053B0                     __ptext84:
 18270                           	opt callstack 0
 18271  0053B0                     _PIN_MANAGER_IOC:
 18272                           	opt callstack 17
 18273  0053B0                     
 18274                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18275  0053B0  010F               	movlb	15	; () banked
 18276  0053B2  A95A               	btfss	90,4,b	;volatile
 18277  0053B4  EFDE  F029         	goto	i2u674_41
 18278  0053B8  EFE0  F029         	goto	i2u674_40
 18279  0053BC                     i2u674_41:
 18280  0053BC  EFE2  F029         	goto	i2l6115
 18281  0053C0                     i2u674_40:
 18282  0053C0                     
 18283                           ; BSR set to: 15
 18284                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18285  0053C0  EC0C  F029         	call	_IOCB4_ISR	;wreg free
 18286  0053C4                     i2l6115:
 18287                           
 18288                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18289  0053C4  90F2               	bcf	242,0,c	;volatile
 18290  0053C6  0012               	return		;funcret
 18291  0053C8                     __end_of_PIN_MANAGER_IOC:
 18292                           	opt callstack 0
 18293                           
 18294 ;; *************** function _IOCB4_ISR *****************
 18295 ;; Defined at:
 18296 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;		None
 18299 ;; Auto vars:     Size  Location     Type
 18300 ;;		None
 18301 ;; Return value:  Size  Location     Type
 18302 ;;                  1    wreg      void 
 18303 ;; Registers used:
 18304 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18305 ;; Tracked objects:
 18306 ;;		On entry : 0/0
 18307 ;;		On exit  : 0/0
 18308 ;;		Unchanged: 0/0
 18309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18314 ;;Total ram usage:        0 bytes
 18315 ;; Hardware stack levels used:    1
 18316 ;; Hardware stack levels required when called:    1
 18317 ;; This function calls:
 18318 ;;		Absolute function
 18319 ;;		_INTERRUPT_S1_CALLBACK
 18320 ;;		_IOCB4_DefaultInterruptHandler
 18321 ;; This function is called by:
 18322 ;;		_PIN_MANAGER_IOC
 18323 ;; This function uses a non-reentrant model
 18324 ;;
 18325                           
 18326                           	psect	text85
 18327  005218                     __ptext85:
 18328                           	opt callstack 0
 18329  005218                     _IOCB4_ISR:
 18330                           	opt callstack 17
 18331  005218                     
 18332                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18333  005218  0101               	movlb	1	; () banked
 18334  00521A  51CD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18335  00521C  11CE               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18336  00521E  B4D8               	btfsc	status,2,c
 18337  005220  EF14  F029         	goto	i2u651_41
 18338  005224  EF16  F029         	goto	i2u651_40
 18339  005228                     i2u651_41:
 18340  005228  EF22  F029         	goto	i2l144
 18341  00522C                     i2u651_40:
 18342  00522C                     
 18343                           ; BSR set to: 1
 18344                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18345  00522C  D802               	call	i2u652_48
 18346  00522E  EF22  F029         	goto	i2u652_49
 18347  005232                     i2u652_48:
 18348  005232  0005               	push	
 18349  005234  6EFA               	movwf	pclath,c
 18350  005236  51CD               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18351  005238  6EFD               	movwf	tosl,c
 18352  00523A  51CE               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18353  00523C  6EFE               	movwf	tosh,c
 18354  00523E  6AFF               	clrf	tosu,c
 18355  005240  50FA               	movf	pclath,w,c
 18356  005242  0012               	return		;indir
 18357  005244                     i2u652_49:
 18358  005244                     i2l144:
 18359  005244  0012               	return		;funcret
 18360  005246                     __end_of_IOCB4_ISR:
 18361                           	opt callstack 0
 18362                           
 18363 ;; *************** function _INTERRUPT_S1_CALLBACK *****************
 18364 ;; Defined at:
 18365 ;;		line 98 in file "main.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;		None
 18368 ;; Auto vars:     Size  Location     Type
 18369 ;;		None
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  1    wreg      void 
 18372 ;; Registers used:
 18373 ;;		wreg
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18383 ;;Total ram usage:        0 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_main
 18389 ;;		_IOCB4_ISR
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           	psect	text86
 18394  00547C                     __ptext86:
 18395                           	opt callstack 0
 18396  00547C                     _INTERRUPT_S1_CALLBACK:
 18397                           	opt callstack 17
 18398  00547C                     
 18399                           ;main.c: 99:     if (PORTBbits.RB4 == 0) {
 18400  00547C  5081               	movf	129,w,c	;volatile
 18401  00547E  0012               	return		;funcret
 18402  005480                     __end_of_INTERRUPT_S1_CALLBACK:
 18403                           	opt callstack 0
 18404                           
 18405 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18406 ;; Defined at:
 18407 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;		None
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;		None
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  1    wreg      void 
 18414 ;; Registers used:
 18415 ;;		None
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18425 ;;Total ram usage:        0 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; This function calls:
 18428 ;;		Nothing
 18429 ;; This function is called by:
 18430 ;;		_PIN_MANAGER_Initialize
 18431 ;;		_IOCB4_ISR
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           	psect	text87
 18436  005482                     __ptext87:
 18437                           	opt callstack 0
 18438  005482                     _IOCB4_DefaultInterruptHandler:
 18439                           	opt callstack 17
 18440  005482  0012               	return		;funcret
 18441  005484                     __end_of_IOCB4_DefaultInterruptHandler:
 18442                           	opt callstack 0
 18443                           
 18444                           	psect	text88
 18445  000000                     __ptext88:
 18446                           	opt callstack 0
 18447  000000                     
 18448                           	psect	rparam
 18449  0000                     
 18450                           	psect	temp
 18451  00005F                     btemp:
 18452                           	opt callstack 0
 18453  00005F                     	ds	1
 18454  0000                     int$flags	set	btemp
 18455  0000                     wtemp8	set	btemp+1
 18456  0000                     ttemp5	set	btemp+1
 18457  0000                     ttemp6	set	btemp+4
 18458  0000                     ttemp7	set	btemp+8
 18459                           tosu	equ	0xFFF
 18460                           tosh	equ	0xFFE
 18461                           tosl	equ	0xFFD
 18462                           stkptr	equ	0xFFC
 18463                           pclatu	equ	0xFFB
 18464                           pclath	equ	0xFFA
 18465                           pcl	equ	0xFF9
 18466                           tblptru	equ	0xFF8
 18467                           tblptrh	equ	0xFF7
 18468                           tblptrl	equ	0xFF6
 18469                           tablat	equ	0xFF5
 18470                           prodh	equ	0xFF4
 18471                           prodl	equ	0xFF3
 18472                           indf0	equ	0xFEF
 18473                           postinc0	equ	0xFEE
 18474                           postdec0	equ	0xFED
 18475                           preinc0	equ	0xFEC
 18476                           plusw0	equ	0xFEB
 18477                           fsr0h	equ	0xFEA
 18478                           fsr0l	equ	0xFE9
 18479                           wreg	equ	0xFE8
 18480                           indf1	equ	0xFE7
 18481                           postinc1	equ	0xFE6
 18482                           postdec1	equ	0xFE5
 18483                           preinc1	equ	0xFE4
 18484                           plusw1	equ	0xFE3
 18485                           fsr1h	equ	0xFE2
 18486                           fsr1l	equ	0xFE1
 18487                           bsr	equ	0xFE0
 18488                           indf2	equ	0xFDF
 18489                           postinc2	equ	0xFDE
 18490                           postdec2	equ	0xFDD
 18491                           preinc2	equ	0xFDC
 18492                           plusw2	equ	0xFDB
 18493                           fsr2h	equ	0xFDA
 18494                           fsr2l	equ	0xFD9
 18495                           status	equ	0xFD8


Data Sizes:
    Strings     278
    Constant    3548
    Data        15
    BSS         107
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     85     122
    BANK1           256    123     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_108(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_95(CODE[3]), 
		 -> STR_90(CODE[4]), STR_86(CODE[4]), STR_81(CODE[3]), STR_76(CODE[3]), 
		 -> STR_71(CODE[4]), STR_66(CODE[3]), STR_61(CODE[3]), STR_56(CODE[4]), 
		 -> STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), STR_36(CODE[3]), 
		 -> STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), STR_18(CODE[4]), 
		 -> STR_14(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_108(CODE[3]), STR_104(CODE[3]), STR_99(CODE[3]), STR_95(CODE[3]), 
		 -> STR_90(CODE[4]), STR_86(CODE[4]), STR_81(CODE[3]), STR_76(CODE[3]), 
		 -> STR_71(CODE[4]), STR_66(CODE[3]), STR_61(CODE[3]), STR_56(CODE[4]), 
		 -> STR_51(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), STR_36(CODE[3]), 
		 -> STR_32(CODE[3]), STR_27(CODE[3]), STR_23(CODE[3]), STR_18(CODE[4]), 
		 -> STR_14(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), STR_4(CODE[12]), STR_3(CODE[44]), 
		 -> STR_2(CODE[12]), STR_1(CODE[44]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), STR_4(CODE[12]), STR_3(CODE[44]), 
		 -> STR_2(CODE[12]), STR_1(CODE[44]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_4(CODE[12]), STR_3(CODE[44]), STR_2(CODE[12]), STR_1(CODE[44]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    S2439_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 30
		 -> string(BANK1[30]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), STR_4(CODE[12]), STR_3(CODE[44]), 
		 -> STR_2(CODE[12]), STR_1(CODE[44]), Out_USART@value_3(BANK1[4]), Out_USART@value_1(BANK1[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), STR_4(CODE[12]), STR_3(CODE[44]), 
		 -> STR_2(CODE[12]), STR_1(CODE[44]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_11(CODE[27]), STR_10(CODE[21]), STR_9(CODE[14]), STR_8(CODE[10]), 
		 -> STR_7(CODE[10]), STR_6(CODE[14]), STR_4(CODE[12]), STR_3(CODE[44]), 
		 -> STR_2(CODE[12]), STR_1(CODE[44]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), ?_printf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 33
		 -> string(BANK1[30]), STR_5(CODE[33]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TIMER2_CALLBACK(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TIMER2_CALLBACK(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INTERRUPT_S1_CALLBACK(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _PI_Controller->___fladd
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _Get_values->___xxtofl
    ___xxtofl->___aldiv
    ___lmul->_ADC_GetConversion
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_otoa
    _vfpfcnvrt->_utoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TIMER2_CALLBACK->_PI_Controller
    _PI_Controller->_EPWM1_LoadDutyValue
    _PI_Controller->i2_abs
    i2_abs->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    _EPWM1_LoadDutyValue->___fltol

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _Out_USART->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  190105
                                            121 BANK1      2     2      0
                _EUSART1_is_rx_ready
          _IOCB4_SetInterruptHandler
                          _Out_USART
                           _SPI_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            26     4     22   59634
                                             95 BANK1     26     4     22
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   57727
                                             73 BANK1     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37190
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             38 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             47 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   32602
                                             69 BANK0     14     4     10
                                              0 BANK1      4     4      0
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             47 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             43 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             41 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             41 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             41 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             39 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             38 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             38 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             38 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Out_USART                                           10    10      0   59598
                                             81 BANK1     10    10      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                               _atoi
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4   57275
                                             73 BANK1      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   56690
                                             65 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   55626
                                             28 BANK1     37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    8901
                                             67 BANK0     11     0     11
                                              0 BANK1     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             44 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             38 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                             38 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             38 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    7743
                                             67 BANK0     18     8     10
                                              0 BANK1     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             38 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             38 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                             38 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2794
                                             49 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7015
                                             67 BANK0     18     8     10
                                              0 BANK1     16    16      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    8762
                                             67 BANK0     18     8     10
                                              0 BANK1     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     348
                                             56 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             38 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             38 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6070
                                             67 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5791
                                             56 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             38 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2139
                                             49 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1639
                                             40 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             39 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             38 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2016
                                             45 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                             38 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                             38 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     871
                                             38 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0   13352
                                             34 BANK0      4     4      0
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0   13352
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR2_CallBack                                       0     0      0   13352
                   Absolute function *
                    _TIMER2_CALLBACK *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TIMER2_CALLBACK                                     0     0      0   13352
                         _Get_values
                      _PI_Controller
 ---------------------------------------------------------------------------------
 (15) _PI_Controller                                       3     3      0   11350
                                             31 BANK0      3     3      0
                _EPWM1_LoadDutyValue
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                           i2___wmul
                              i2_abs
 ---------------------------------------------------------------------------------
 (16) i2_abs                                               4     2      2     144
                                             27 BANK0      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) ___fltol                                            10     6      4     609
                                             17 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) ___flsub                                             8     0      8    2889
                                             17 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            16     8      8    2566
                                             82 COMRAM    12     4      8
                                             13 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) ___flmul                                            25    17      8    2048
                                             45 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) ___flge                                             12     4      8     334
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (16) ___fldiv                                            25    17      8    1551
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (16) _EPWM1_LoadDutyValue                                 4     2      2     120
                                             27 BANK0      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (15) _Get_values                                          0     0      0    2002
                  _ADC_GetConversion
                            ___aldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (16) ___xxtofl                                           14    10      4     854
                                             31 COMRAM    14    10      4
                  _ADC_GetConversion (ARG)
                            ___aldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lmul                                             12     4      8     522
                                              5 COMRAM    12     4      8
                  _ADC_GetConversion (ARG)
 ---------------------------------------------------------------------------------
 (16) ___aldiv                                            14     6      8     604
                                             17 COMRAM    14     6      8
                  _ADC_GetConversion (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (16) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (13) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
              _INTERRUPT_S1_CALLBACK *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_S1_CALLBACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_is_rx_ready
   _IOCB4_SetInterruptHandler
   _Out_USART
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _atoi
       ___wmul
       _isdigit
       _isspace
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
   _TMR2_StopTimer
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _stoa
             _fputc
               _putch
                 _EUSART1_Write
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _INTERRUPT_S1_CALLBACK *
       _IOCB4_DefaultInterruptHandler *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TIMER2_CALLBACK *
         _Get_values
           _ADC_GetConversion
           ___aldiv
             _ADC_GetConversion (ARG)
             ___lmul (ARG)
               _ADC_GetConversion (ARG)
           ___lmul
             _ADC_GetConversion (ARG)
           ___xxtofl
             _ADC_GetConversion (ARG)
             ___aldiv (ARG)
               _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
             ___lmul (ARG)
               _ADC_GetConversion (ARG)
         _PI_Controller
           _EPWM1_LoadDutyValue
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _ADC_GetConversion (ARG)
                       ___aldiv (ARG)
                         _ADC_GetConversion (ARG)
                         ___lmul (ARG)
                           _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                     ___aldiv (ARG)
                       _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                     ___aldiv (ARG)
                       _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversion (ARG)
               ___aldiv (ARG)
                 _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversion (ARG)
               ___aldiv (ARG)
                 _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               _ADC_GetConversion (ARG)
               ___aldiv (ARG)
                 _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                     ___aldiv (ARG)
                       _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                     ___aldiv (ARG)
                       _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
             ___xxtofl (ARG)
               _ADC_GetConversion (ARG)
               ___aldiv (ARG)
                 _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
           ___xxtofl
             _ADC_GetConversion (ARG)
             ___aldiv (ARG)
               _ADC_GetConversion (ARG)
               ___lmul (ARG)
                 _ADC_GetConversion (ARG)
             ___lmul (ARG)
               _ADC_GetConversion (ARG)
           i2___wmul
           i2_abs
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       _ADC_GetConversion (ARG)
                       ___aldiv (ARG)
                         _ADC_GetConversion (ARG)
                         ___lmul (ARG)
                           _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                     ___aldiv (ARG)
                       _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     _ADC_GetConversion (ARG)
                     ___aldiv (ARG)
                       _ADC_GetConversion (ARG)
                       ___lmul (ARG)
                         _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   _ADC_GetConversion (ARG)
                   ___aldiv (ARG)
                     _ADC_GetConversion (ARG)
                     ___lmul (ARG)
                       _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
               ___xxtofl (ARG)
                 _ADC_GetConversion (ARG)
                 ___aldiv (ARG)
                   _ADC_GetConversion (ARG)
                   ___lmul (ARG)
                     _ADC_GetConversion (ARG)
                 ___lmul (ARG)
                   _ADC_GetConversion (ARG)
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     7B      DC       8       85.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      7A       5       76.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B4       6        0.0%
DATA                 0      0     1B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 16 13:36:42 2020

                                _SPI_Initialize 53F2                __end_of_TMR2_SetInterruptHandler 543A  
                                  ___fldiv@aexp 006C                                    ___fldiv@bexp 006B  
                                  ___fldiv@sign 0064                                     _SSPSTATbits 000FC7  
                                            l32 5414                                              l53 5402  
                                            l29 52E4                                              l63 5350  
                                            l57 4A3C                                              l65 535E  
                                            l66 5362                                              _KP 01D8  
                                            _Ki 01D6                             ___wmul@multiplicand 0088  
            __size_of_IOCB4_SetInterruptHandler 000A                                     __CFG_BORV$3 000000  
                    ?_IOCB4_SetInterruptHandler 0086                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                             l302 53AE  
                                           l206 5158                                             l320 5456  
                                           l136 4DF2                                             l323 544C  
                                           l147 5442                                             l403 5438  
                                           l308 5422                                             l341 547A  
                                           l502 4552                                             l326 5460  
                                           l423 537E                                             l169 53DC  
                                           l283 53F0                                             l275 4EC8  
                                           l603 4AC4                                             l292 5246  
                                           l381 5472                                             l375 5346  
                                           l296 526E                                             l720 4908  
                                           l802 305C                                             l378 5476  
                                           l570 5126                                             l299 539C  
                                           l723 494C                                             l732 4CBA  
                                           l740 2834                                             l812 323A  
                                           l804 3064                                             l725 4988  
                                           l582 5328                                             l840 2D10  
                                           l592 4DAA                                             l672 3C98  
                                           l817 2AC8                                             l681 3F48  
                                           l738 282C                                             l842 2D7E  
                                           l826 2B6C                                             l763 3486  
                                           l819 2AD0                                             l923 4B28  
                                           l499 4492                                             l579 1C3E  
                                           l772 35DC                                             l924 4B30  
                                           l596 4D5C                                             l588 4F0A  
                                           l765 348E                                             l781 3886  
                                           l758 2A8C                                             l774 364C  
                                           l927 52BE                                             l783 388E  
                                           l599 5396                                             l792 393A  
                                           l856 018C                                             l793 3984  
                                           l797 398C                                             l879 1346  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FCB  
                                  __CFG_CPD$OFF 000000                                 _timer1ReloadVal 01CB  
                                           _abs 4F0C                                             _pad 48C0  
                               _TMR2_Initialize 532A                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                  ___flmul@aexp 003F                                    ___flmul@bexp 0040  
                                  ___flmul@sign 003A                                    ___flmul@temp 0045  
                                  ___flmul@prod 0041                                 ?_lcd_set_cursor 008B  
                                  ___fltol@exp1 007A                              __size_of_IOCB4_ISR 002E  
                                          l1041 3B16                                            ?_abs 0098  
                                          l1054 3DFE                                            l1602 4F44  
                                          l1372 4462                                            l1605 4F4C  
                                          l1365 4442                                            l1702 507A  
                                          l1382 47F2                                            l1375 47D2  
                                          l1633 3442                                            l1721 4C5C  
                                          l1706 463E                                            l5011 458C  
                                          l1636 344A                                            l1716 4C54  
                                          l1645 50B4                                            l1653 4D0E  
                                          l5021 4616                                            l5013 459A  
                                          l5005 4554                                            l5015 45B8  
                                          l5007 4580                                            l1639 4FCC  
                                          l1727 5006                                            l1743 4038  
                                          l5017 45D6                                            l1674 48BE  
                                          l1682 4E3A                                            l1738 4058  
                                          l5019 45E8                                            l1659 5040  
                                          l4333 507C                                            l6101 49DE  
                                          l6103 49E2                                            l1696 51BA  
                                          l4337 5298                                            l7001 3830  
                                          l1689 5296                                            l6105 4A06  
                                          l4339 52B6                                            l7003 3838  
                                          l6107 4A3A                                            l7021 38F4  
                                          l7013 38B0                                            l7005 384C  
                                          l7101 2BA4                                            l6141 5470  
                                          ?_pad 0098                                            l4711 335A  
                                          l4703 32E8                                            l7031 394C  
                                          l7023 3912                                            l7015 38C4  
                                          l7007 3854                                            l7103 2BB6  
                                          l7111 2C16                                            l4721 3414  
                                          l4705 32FE                                            l7033 3960  
                                          l7025 3918                                            l7017 38CA  
                                          l7009 3864                                            l7041 3034  
                                          l7121 2CAE                                            l7113 2C28  
                                          l7201 019C                                            l6081 52C4  
                                          l4723 3426                                            l4715 33AC  
                                          l4707 3306                                            l7035 3966  
                                          l7027 391C                                            l7019 38E8  
                                          l7051 30A6                                            l7043 304E  
                                          l7131 2D28                                            l7123 2CCC  
                                          l7115 2C2E                                            l7107 2BF0  
                                          l7211 0216                                            l7203 019E  
                                          l6091 52D8                                            l6083 52C8  
                                          l6139 5474                                            l4709 330E  
                                          l7061 31A8                                            l7053 3120  
                                          l7045 308C                                            l7037 3022  
                                          l7133 2D38                                            l7125 2CE6  
                                          l7117 2C34                                            l7109 2C02  
                                          l7213 0236                                            l7221 02A0  
                                          l7205 01C4                                            l6093 52DC  
                                          l6085 52CC                                            l7141 4D76  
                                          l4671 4D08                                            l4663 4CBC  
                                          l4719 3402                                            l7063 31C6  
                                          l7055 3128                                            l7047 3096  
                                          l7039 3032                                            l7135 2D4E  
                                          l7127 2D00                                            l7119 2C92  
                                          l7231 033E                                            l7223 02C6  
                                          l7215 0244                                            l7207 01FA  
                                          l6095 52E0                                            l6087 52D0  
                                          l6079 52C0                                            l7151 4D10  
                                          l4665 4CC2                                            l7065 31E0  
                                          l7057 312E                                            l7049 309E  
                                          l7129 2D20                                            l7081 2AE8  
                                          l7073 2A8E                                            l7401 0E76  
                                          l7321 0990                                            l7313 0906  
                                          l7305 0890                                            l7233 035E  
                                          l7225 02D0                                            l7241 03C8  
                                          l7209 0208                                            l8105 014A  
                                          l6097 498E                                            l6089 52D4  
                                          l7145 4D7C                                            l7153 4D28  
                                          l4667 4CD6                                            l8107 3344  
                                          l4691 3256                                            l7067 31FA  
                                          l7059 3194                                            l7091 2B2C  
                                          l7083 2AF2                                            l7075 2A9E  
                                          l7411 0F38                                            l7403 0EAE  
                                          l7323 09C8                                            l7331 0A1A  
                                          l7315 093E                                            l7307 08B6  
                                          l7251 0478                                            l7243 03EE  
                                          l7235 036C                                            l7227 02DE  
                                          l7219 028E                                            l7171 00D2  
                                          l7163 0088                                            l6099 499C  
                                          l7147 4DA8                                            l7139 4D5E  
                                          l4669 4D04                                            l4693 325A  
                                          l6701 4F0C                                            l7069 320A  
                                          l7093 2B34                                            l7085 2B12  
                                          l7077 2AA0                                            l7413 0F70  
                                          l7333 0A52                                            l7341 0A9E  
                                          l7325 0A00                                            l7261 056A  
                                          l7253 04B0                                            l7245 0422  
                                          l7229 0304                                            l7181 00FE  
                                          l7173 00E0                                            l7165 00AE  
                                          l5901 53FE                                            l7157 4D2E  
                                          l4695 328C                                            l4687 323C  
                                          l6711 48F4                                            l6703 4F28  
                                          l7095 2B50                                            l7087 2B1C  
                                          l7079 2ABA                                            l7431 10C6  
                                          l7415 0F9A                                            l7423 101C  
                                          l7343 0AC4                                            l7351 0B0E  
                                          l7335 0A8A                                            l7327 0A0C  
                                          l7271 0618                                            l7263 05A2  
                                          l7255 04FA                                            l7239 03B6  
                                          l7175 00E4                                            l7167 00BC  
                                          l7511 4AC6                                            l5911 4DDE  
                                          l5903 5400                                            l7159 4D5A  
                                          l7503 4F08                                            l4697 32DC  
                                          l4689 3252                                            l6721 495A  
                                          l6713 4900                                            l6705 48C0  
                                          l6801 3D00                                            l7097 2B60  
                                          l7089 2B24                                            l7441 1152  
                                          l7425 1054                                            l7417 0FAA  
                                          l7409 0F00                                            l7353 0B46  
                                          l7361 0B92                                            l7345 0AFA  
                                          l7281 06C4                                            l7273 063E  
                                          l7249 043E                                            l7193 0116  
                                          l7185 0106                                            l7177 00F6  
                                          l7169 00CE                                            l7513 4ACE  
                                          l7521 527A                                            l5921 53C8  
                                          l5913 4DE0                                            l5905 4DAC  
                                          l7601 4028                                            l4699 32E0  
                                          l6723 496E                                            l6715 4914  
                                          l6707 48D0                                            l6811 3D76  
                                          l6803 3D1E                                            l6731 4F90  
                                          l7443 116A                                            l7451 11BA  
                                          l7427 108C                                            l7419 0FE0  
                                          l7371 0C68                                            l7363 0BB8  
                                          l7355 0B7E                                            l7291 0786  
                                          l7283 06FC                                            l7259 0532  
                                          l7515 4ADC                                            l7611 448E  
                                          l5923 5364                                            l5915 4DE2  
                                          l5907 4DC8                                            l5931 5330  
                                          l7507 5380                                            l7531 4A78  
                                          l7603 4040                                            l6661 541A  
                                          l6717 4928                                            l6709 48E4  
                                          l6821 3DDE                                            l6813 3D96  
                                          l6805 3D26                                            l6901 2850  
                                          l6741 4C48                                            l7453 11F2  
                                          l7445 1178                                            l7429 10B6  
                                          l7437 1106                                            l7381 0D3E  
                                          l7373 0C9E                                            l7365 0C04  
                                          l7293 07CE                                            l7269 05F2  
                                          l7197 0122                                            l7189 010E  
                                          l7517 4B0A                                            l7621 44CC  
                                          l7613 44A6                                            l5925 537C  
                                          l5861 5444                                            l5917 4DF0  
                                          l5909 4DD2                                            l5941 5134  
                                          l5933 5332                                            l7533 4A84  
                                          l7525 4A3E                                            l7701 1978  
                                          l7605 4050                                            l6671 4842  
                                          l6663 47F4                                            l6719 492E  
                                          l6751 39C2                                            l6815 3DA8  
                                          l6807 3D3A                                            l6911 2882  
                                          l6903 2860                                            l6831 43A6  
                                          l6727 5008                                            l6735 4BFE  
                                          l7471 12EC                                            l7455 122A  
                                          l7439 112C                                            l7279 068C  
                                          l7199 0178                                            l7519 5270  
                                          l7631 4516                                            l7623 44D4  
                                          l7615 44B4                                            l5863 5458  
                                          l5951 4EA6                                            l5919 5404  
                                          l5943 5136                                            l5935 5334  
                                          l5927 532A                                            l7543 3B18  
                                          l7535 4AA0                                            l7527 4A50  
                                          l7711 19B4                                            l7703 1984  
                                          l5961 53DE                                            l6657 539C  
                                          l6673 4878                                            l6665 4808  
                                          l6681 4E14                                            l6761 3A04  
                                          l6753 39C6                                            l6745 398E  
                                          l6809 3D48                                            l6817 3DAE  
                                          l6921 2998                                            l6913 2908  
                                          l6905 2868                                            l6841 4428  
                                          l6833 43BA                                            l6825 4372  
                                          l7457 1254                                            l7465 12A4  
                                          l7393 0E00                                            l7385 0D76  
                                          l7377 0CBE                                            l7369 0C42  
                                          l7297 0806                                            l7289 074E  
                                          l7481 130C                                            l7633 451E  
                                          l7625 44EA                                            l7617 44BC  
                                          l7609 4464                                            l5953 4EB4  
                                          l5857 543A                                            l5945 5154  
                                          l5865 5430                                            l5937 5342  
                                          l5929 532C                                            l7561 3C1C  
                                          l7553 3B6C                                            l7545 3B22  
                                          l7537 4AA8                                            l7801 1BD0  
                                          l7721 19F0                                            l7713 19C0  
                                          l7705 1990                                            l7641 1816  
                                          l5971 5268                                            l6659 53AA  
                                          l6667 481A                                            l6683 4E1A  
                                          l6691 506C                                            l6771 3A5E  
                                          l6763 3A22                                            l6755 39D4  
                                          l6747 3994                                            l6819 3DBE  
                                          l6931 2A0E                                            l6923 29B6  
                                          l6915 2910                                            l6907 2872  
                                          l6843 442A                                            l6835 43C8  
                                          l6827 437E                                            l6851 474A  
                                          l6739 4C36                                            l7483 1334  
                                          l7467 12CA                                            l7475 12FA  
                                          l7459 1264                                            l7395 0E26  
                                          l7387 0DAE                                            l7379 0CF6  
                                          l7299 083E                                            l7635 4526  
                                          l7627 4500                                            l7619 44C4  
                                          l5859 544E                                            l5955 4EC2  
                                          l5947 4E84                                            l5939 5128  
                                          l7571 3C4E                                            l7563 3C2C  
                                          l7547 3B66                                            l7811 1C0C  
                                          l7803 1BDC                                            l7731 1A2C  
                                          l7723 19FC                                            l7715 19CC  
                                          l7707 199C                                            l7651 184C  
                                          l7643 181C                                            l5973 526C  
                                          l5965 5246                                            l6669 4824  
                                          l6677 4DF4                                            l6685 5042  
                                          l6773 3A8C                                            l6765 3A2A  
                                          l6781 3AC6                                            l6757 39F4  
                                          l6749 39A2                                            l6941 2A4C  
                                          l6933 2A1E                                            l6925 29D0  
                                          l6917 2916                                            l6909 287A  
                                          l6845 443C                                            l6837 43DA  
                                          l6829 439E                                            l6861 47CC  
                                          l6853 475E                                            l7469 12D8  
                                          l7637 453C                                            l7629 450E  
                                          l5949 4E98                                            l7573 3C5E  
                                          l7565 3C38                                            l7821 3E04  
                                          l7813 1C1E                                            l7805 1BE8  
                                          l7741 1A68                                            l7733 1A38  
                                          l7725 1A08                                            l7717 19D8  
                                          l7709 19A8                                            l7661 1888  
                                          l7653 1858                                            l7645 1828  
                                          l7581 3F66                                            l7901 2D88  
                                          l5967 5254                                            l6679 4E02  
                                          l6687 504E                                            l6871 4C5E  
                                          l6783 3AD6                                            l6775 3AAC  
                                          l6767 3A3E                                            l6759 39F8  
                                          l6791 3CA0                                            l6935 2A26  
                                          l6943 2A5C                                            l6927 29EA  
                                          l6919 297C                                            l6951 345E  
                                          l6839 4408                                            l6855 476C  
                                          l6847 4722                                            l6695 4FCE  
                                          l6863 5310                                            l7495 4ECA  
                                          l7567 3C3C                                            l7559 3B70  
                                          l7575 3C60                                            l7831 3EE2  
                                          l7823 3E1A                                            l5991 5110  
                                          l7815 1C2A                                            l7807 1BF4  
                                          l7751 1AA4                                            l7743 1A74  
                                          l7735 1A44                                            l7727 1A14  
                                          l7719 19E4                                            l7671 18C4  
                                          l7663 1894                                            l7655 1864  
                                          l7647 1834                                            l7639 180A  
                                          l7591 3FA4                                            l7911 2DA4  
                                          l7903 2D8E                                            l5969 525A  
                                          l6689 5054                                            l6881 4C94  
                                          l6873 4C72                                            l6785 3AF6  
                                          l6777 3AAE                                            l6769 3A4C  
                                          l6793 3CAE                                            l6937 2A38  
                                          l6929 29FA                                            l6961 34D0  
                                          l6953 3478                                            l6857 479A  
                                          l6849 4742                                            l5897 5478  
                                          l6865 531C                                            l7497 4EE6  
                                          l7569 3C4C                                            l7833 3F12  
                                          l7825 3E5C                                            l5993 5114  
                                          l7817 1C30                                            l7809 1C00  
                                          l7761 1AE0                                            l7753 1AB0  
                                          l7745 1A80                                            l7737 1A50  
                                          l7729 1A20                                            l7681 1900  
                                          l7673 18D0                                            l7665 18A0  
                                          l7657 1870                                            l7649 1840  
                                          l7593 3FB4                                            l7585 3F6E  
                                          l7577 3F4A                                            l7921 2E00  
                                          l7913 2DB2                                            l7905 2D92  
                                          l6875 4C7E                                            l6779 3AC0  
                                          l6795 3CCE                                            l6939 2A44  
                                          l6891 27F2                                            l6971 34FE  
                                          l6963 34D8                                            l6955 34B6  
                                          l6947 344C                                            l6859 47BA  
                                          l5899 53F2                                            l6699 534C  
                                          l6867 531E                                            l7499 4F02  
                                          l7827 3E60                                            l7835 3F16  
                                          l7819 3E00                                            l5987 50F4  
                                          l7771 1B1C                                            l7763 1AEC  
                                          l7755 1ABC                                            l7747 1A8C  
                                          l7739 1A5C                                            l7691 193C  
                                          l7683 190C                                            l7675 18DC  
                                          l7667 18AC                                            l7659 187C  
                                          l7595 3FD8                                            l7587 3F8C  
                                          l7579 3F5E                                            l7931 2EC0  
                                          l7923 2E2C                                            l7915 2DB4  
                                          l7907 2D94                                            l6877 4C8A  
                                          l6797 3CD2                                            l6789 3C9A  
                                          l6893 2802                                            l6885 2788  
                                          l6981 35CC                                            l6965 34E0  
                                          l6973 355E                                            l6957 34C0  
                                          l6949 345C                                            l6869 5326  
                                          l7829 3EB6                                            l5989 50FE  
                                          l7781 1B58                                            l7773 1B28  
                                          l7765 1AF8                                            l7757 1AC8  
                                          l7749 1A98                                            l7693 1948  
                                          l7685 1918                                            l7677 18E8  
                                          l7669 18B8                                            l7597 3FEC  
                                          l7589 3F98                                            l7837 518C  
                                          l7941 2F78                                            l7933 2EDE  
                                          l7925 2E4A                                            l7917 2DB6  
                                          l7909 2D96                                            l6879 4C8E  
                                          l6799 3CE0                                            l6895 2804  
                                          l6887 27A8                                            l6983 35EC  
                                          l6991 361C                                            l6975 357A  
                                          l6967 34F2                                            l6959 34C4  
                                          l7791 1B94                                            l7783 1B64  
                                          l7775 1B34                                            l7767 1B04  
                                          l7759 1AD4                                            l7695 1954  
                                          l7687 1924                                            l7679 18F4  
                                          l7599 3FFA                                            l7839 5196  
                                          l7943 2F8C                                            l7935 2F0A  
                                          l7927 2E76                                            l7919 2DE2  
                                          l6897 281E                                            l6889 27D2  
                                          l6985 3600                                            l6977 3598  
                                          l6969 34F8                                            l7793 1BA0  
                                          l7785 1B70                                            l7777 1B40  
                                          l7769 1B10                                            l7697 1960  
                                          l7689 1930                                            l7937 2F48  
                                          l7929 2E94                                            l6899 283C  
                                          l6987 3606                                            l6979 35B2  
                                          l6995 3802                                            l7795 1BAC  
                                          l7787 1B7C                                            l7779 1B4C  
                                          l7699 196C                                            l7947 2F90  
                                          l7939 2F74                                            l6989 3616  
                                          l6997 3814                                            l7797 1BB8  
                                          l7789 1B88                                            l7949 2FEE  
                                          l6999 381C                                            l7799 1BC4  
                                          l7897 2D80                                            l7899 2D84  
                                          STR_1 FEE9                                            STR_2 FFAE  
                                          STR_3 FF15                                            STR_4 FFAE  
                                          STR_5 FF41                                            STR_6 FFA0  
                                          STR_7 FFC4                                            STR_8 FFBA  
                                          STR_9 FF92                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          u4400 4CD6                                            u4401 4CD2  
                                          u4410 4D04                                            u4411 4D00  
                                          u4500 33D6                                            u4510 33FC  
                                          u4430 327C                                            u5150 4580  
                                          u4511 33F6                                            u5151 457C  
                                          u3800 50B0                                            u4520 33FE  
                                          u4440 328C                                            u5160 45B8  
                                          u4441 3288                                            u5161 45B4  
                                          u4530 3414                                            u4450 32B8  
                                          u5170 45D6                                            u4531 3410  
                                          u4507 33CC                                            u5171 45D2  
                                          u4540 3426                                            u4460 32DC  
                                          u7100 481A                                            u5180 45E8  
                                          u4541 3422                                            u4461 32D8  
                                          u4437 3272                                            u7101 4816  
                                          u5181 45E4                                            u4470 32FA  
                                          u7110 4842                                            u5190 4616  
                                          u4471 32F6                                            u7111 483E  
                                          u5191 4612                                            u4480 3330  
                                          u7120 4878                                            u7200 48F4  
                                          u8000 2BEA                                            u4457 32AE  
                                          u7121 4874                                            u7201 48F0  
                                          u8001 2BE4                                            u4490 3390  
                                          u7130 4E3A                                            u7210 494C  
                                          u8010 2BEC                                            u7131 4E36  
                                          u7211 4948                                            u7140 506C  
                                          u7220 495A                                            u7300 39A2  
                                          u8020 2C02                                            u8100 4D76  
                                          u7141 5068                                            u7221 4956  
                                          u7301 399E                                            u8021 2BFE  
                                          u8101 4D72                                            u3790 50AE  
                                          u7310 39D4                                            u7230 503A  
                                          u7150 5000                                            u8030 2C6C  
                                          u8110 4D28                                            u3791 50A8  
                                          u4487 3326                                            u7311 39D0  
                                          u7231 5034                                            u7151 4FFA  
                                          u8111 4D24                                            u7080 53AA  
                                          u7400 3D48                                            u7240 503C  
                                          u7160 5002                                            u8040 2CAE  
                                          u8200 02C6                                            u8120 00AE  
                                          u4497 3386                                            u7081 53A6  
                                          u7321 39FE                                            u7401 3D44  
                                          u8041 2CAA                                            u8201 02C2  
                                          u8121 00AA                                            u6530 53EE  
                                          u7090 4808                                            u7330 3A22  
                                          u7410 3D76                                            u7250 4FC6  
                                          u8050 2CCC                                            u8210 0304  
                                          u8130 018C                                            u7170 535E  
                                          u6531 53E8                                            u7091 4804  
                                          u7331 3A1E                                            u7411 3D72  
                                          u7251 4FC0                                            u8051 2CC8  
                                          u8035 2C5A                                            u8211 0300  
                                          u8131 0188                                            u7171 535A  
                                          u6540 5254                                            u7340 3A4C  
                                          u7420 3DBE                                            u7180 4F28  
                                          u7260 4FC8                                            u8060 2CE6  
                                          u8300 0618                                            u8220 03B0  
                                          u8140 019C                                            u6541 5250  
                                          u7341 3A48                                            u7421 3DBA  
                                          u7181 4F24                                            u8061 2CE2  
                                          u8301 0614                                            u8221 03AA  
                                          u8141 0198                                            u6550 5268  
                                          u7190 48D0                                            u7510 4C72  
                                          u7350 3A8C                                            u7270 4C30  
                                          u8070 2D00                                            u8310 063E  
                                          u8230 03B2                                            u8150 01C4  
                                          u6551 5264                                            u7191 48CC  
                                          u7511 4C6E                                            u7351 3A88  
                                          u7431 4378                                            u7271 4C2A  
                                          u8071 2CFC                                            u8311 063A  
                                          u8151 01C0                                            u9007 5106  
                                          u6536 53F0                                            u7360 3AD6  
                                          u7600 29B6                                            u7520 27BA  
                                          u7440 439E                                            u7280 4C32  
                                          u8080 2D10                                            u8400 0AC4  
                                          u8320 06C4                                            u8240 03C8  
                                          u8160 0208                                            u7361 3AD2  
                                          u7601 29B2                                            u7521 27B4  
                                          u7441 439A                                            u8081 2D0C  
                                          u8401 0AC0                                            u8321 06C0  
                                          u8241 03C4                                            u8161 0204  
                                          u7505 531A                                            u7370 3CAE  
                                          u7610 29D0                                            u7530 27BC  
                                          u7450 43C8                                            u7290 4C48  
                                          u8090 2D20                                            u8410 0B46  
                                          u8330 06FC                                            u8250 03EE  
                                          u8170 0288                                            u6730 499C  
                                          u7506 531C                                            u7371 3CAA  
                                          u7611 29CC                                            u7451 43C4  
                                          u7291 4C44                                            u8091 2D1C  
                                          u8411 0B42                                            u8331 06F8  
                                          u8251 03EA                                            u8171 0282  
                                          u6731 4998                                            u7380 3CE0  
                                          u7620 29EA                                            u7540 27D2  
                                          u7700 357A                                            u7460 4408  
                                          u8500 1054                                            u8420 0BB8  
                                          u8340 0786                                            u8260 0478  
                                          u8180 028A                                            u6580 5126  
                                          u7381 3CDC                                            u7621 29E6  
                                          u7541 27CE                                            u7701 3576  
                                          u7461 4404                                            u8501 1050  
                                          u8421 0BB4                                            u8341 0782  
                                          u8261 0474                                            u6581 5122  
                                          u7390 3D1E                                            u7630 29FA  
                                          u7550 2802                                            u7710 3598  
                                          u7470 4742                                            u8510 108C  
                                          u8430 0C68                                            u8350 083E  
                                          u8270 04B0                                            u8190 02A0  
                                          u7391 3D1A                                            u7631 29F6  
                                          u7551 27FE                                            u7711 3594  
                                          u7471 473E                                            u8511 1088  
                                          u8431 0C64                                            u8351 083A  
                                          u8271 04AC                                            u8191 029C  
                                          u7640 2A0E                                            u7560 281E  
                                          u7720 35B2                                            u7800 3882  
                                          u7480 476C                                            u8520 112C  
                                          u8440 0CF6                                            u8360 08B6  
                                          u8280 056A                                            u8600 4A74  
                                          u7641 2A0A                                            u7561 281A  
                                          u7721 35AE                                            u7801 387E  
                                          u7481 4768                                            u8521 1128  
                                          u8441 0CF2                                            u8361 08B2  
                                          u8281 0566                                            u8601 4A70  
                                          u7650 2A1E                                            u7570 2850  
                                          u7730 35CC                                            u7810 38AC  
                                          u7490 479A                                            u8530 1152  
                                          u8450 0DAE                                            u8370 093E  
                                          u8290 05A2                                            u8610 4AA0  
                                          u7651 2A1A                                            u7571 284C  
                                          u7731 35C8                                            u7811 38A8  
                                          u7491 4796                                            u8531 114E  
                                          u8451 0DAA                                            u8371 093A  
                                          u8291 059E                                            u8611 4A9C  
                                          u7660 2A38                                            u7580 2860  
                                          u7740 35DC                                            u7820 38E8  
                                          u7900 31E0                                            u8540 11F2  
                                          u8460 0E26                                            u8380 09C8  
                                          u8620 4AC4                                            u8700 3F8C  
                                          u7661 2A34                                            u7581 285C  
                                          u7741 35D8                                            u7821 38E4  
                                          u7901 31DC                                            u8541 11EE  
                                          u8461 0E22                                            u8381 09C4  
                                          u8621 4AC0                                            u8701 3F88  
                                          u7590 2998                                            u7750 35EC  
                                          u7670 345C                                            u7830 393A  
                                          u7910 31FA                                            u8550 122A  
                                          u8470 0EAE                                            u8390 0A52  
                                          u8710 3FEC                                            u7591 2994  
                                          u7751 35E8                                            u7671 3458  
                                          u7831 3936                                            u7911 31F6  
                                          u8551 1226                                            u8471 0EAA  
                                          u8391 0A4E                                            u8711 3FE8  
                                          u7760 3600                                            u7680 3478  
                                          u7840 3948                                            u7920 320A  
                                          u8560 12CA                                            u8480 0F38  
                                          u8720 3FFA                                            u7761 35FC  
                                          u7681 3474                                            u7841 3944  
                                          u7921 3206                                            u8561 12C6  
                                          u8481 0F34                                            u8721 3FF6  
                                          u7690 3538                                            u7850 3984  
                                          u7930 2A9E                                            u8490 0F70  
                                          u8570 4EE6                                            u8650 3C1C  
                                          u8730 4028                                            u7851 3980  
                                          u7771 380C                                            u7931 2A9A  
                                          u8491 0F6C                                            u8571 4EE2  
                                          u8651 3C18                                            u8731 4024  
                                          u7780 3830                                            u7860 3032  
                                          u7940 2ABA                                            u8740 44A6  
                                          u8580 4F02                                            u8660 3C4C  
                                          u8644 3BFA                                            u7781 382C  
                                          u7861 302E                                            u7941 2AB6  
                                          u8741 44A2                                            u8581 4EFE  
                                          u8661 3C48                                            u8645 3BF4  
                                          u7790 3864                                            u7870 304E  
                                          u7950 2AE8                                            u8590 4B28  
                                          u8670 3C5E                                            u8750 3E8C  
                                          u7695 3524                                            u7791 3860  
                                          u7871 304A                                            u7951 2AE4  
                                          u8591 4B24                                            u8671 3C5A  
                                          u7880 31A8                                            u7960 2B50  
                                          u8680 3C98                                            u8760 3EB6  
                                          u7881 31A4                                            u7961 2B4C  
                                          u8681 3C94                                            u8761 3EB2  
                                          u7890 31C6                                            u7970 2B9E  
                                          u8770 3F38                                            u8690 3F5E  
                                          u7891 31C2                                            u7971 2B98  
                                          u8691 3F5A                                            u7980 2BA0  
                                          u8780 3F48                                            u8781 3F44  
                                          u8757 3E82                                            u7990 2BB6  
                                          u7991 2BB2                                            u8777 3F2E  
                                          u8890 2F8C                                            u8891 2F88  
                                          _TMR2 000FCC                                            _WPUB 000F5B  
                                 _EUSART1_Write 5398                                            abs@a 0098  
                                          _dbuf 0185                                            _atoi 323C  
                                          _ctoa 4C5E                                            _main 2D80  
                                          _dtoa 2788                                            _font F10D  
                                 ?_EUSART1_Read 0001                                            _prec 00C9  
                                          _otoa 344C                                            _nout 00C5  
                                          pad@i 009F                                            pad@p 009C  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 00A1  
                                          fsr2l 000FD9                                            _stoa 3802  
                                          btemp 005F                                            _utoa 3022  
                                          _xtoa 2A8E                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0084  
                               ??_PI_Controller 007F                                   __CFG_IESO$OFF 000000  
                               ___fldiv@new_exp 0065                          __end_of_SPI_Initialize 5404  
                         ??_EPWM1_LoadDutyValue 007D                                   lcd_fill@width 0093  
                                 __CFG_MCLRE$ON 000000                                    ___param_bank 000000  
                                         ??_abs 009A                                           ??_pad 009E  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 5416  
                                 ___fltol@sign1 0079                                 __end_of___aldiv 4166  
                               __end_of___aodiv 3B18                                           ?_atoi 008D  
                                         ?_ctoa 00A3                                 __end_of___fladd 180A  
                                         ?_main 0001                                           ?_dtoa 00A3  
                               __end_of___aomod 3E00                                 __end_of___fldiv 2406  
                                         STR_10 FF7D                                           STR_11 FF62  
                                         STR_12 FFD2                                           STR_14 FFD2  
                                         STR_30 FFED                                           STR_23 FFD3  
                                         STR_32 FFED                                           STR_16 FFD6  
                                         STR_41 FFDE                                           STR_18 FFD6  
                                         STR_34 FFF0                                           STR_27 FFD7  
                                         STR_51 FFF6                                           STR_36 FFF0  
                                         STR_61 FFDB                                           STR_46 FFDF  
                                         STR_54 FFDA                                           STR_71 FFE2  
                                         STR_39 FFDE                                           STR_56 FFDA  
                                         STR_64 FFF3                                           STR_81 FFF9  
                                         STR_49 FFF6                                           STR_90 FFCE  
                                         STR_66 FFF3                                           STR_76 FFE3  
                                         STR_84 FFE6                                           STR_69 FFE2  
                                         STR_86 FFE6                                           STR_95 FFE7  
                                         STR_79 FFF9                                           STR_88 FFCE  
                               __end_of___flmul 206A                                           ?_otoa 00A3  
                                         STR_99 FFCF                                 __end_of___flsub 4E84  
                               __end_of___fltol 426E               __end_of_IOCB4_SetInterruptHandler 5444  
                                         ?_stoa 0091                                           ?_utoa 00A3  
                               __end_of___lodiv 4464                                           ?_xtoa 00A3  
                                         _T1CON 000FCD                                           _T2CON 000FCA  
                               __end_of___lomod 47F4                                           i2l140 53C6  
                                         i2l150 5482                                           i2l144 5244  
                                         i2l400 5216                                           i2l181 50CE  
                                         i2l510 24F0                                           i2l406 5480  
                                         i2l351 0070                                           i2l184 50EE  
                                         i2l520 2784                                           i2l352 0070  
                                         i2l505 4720                                           i2l426 518A  
                                         i2l522 2786                                           i2l346 003E  
                                         i2l508 2510                                           i2l517 2742  
                                         i2l526 547E                                           i2l529 546A  
                                         i2l396 51E8                                           i2l927 530A  
                                         i2l938 4B8A                                           i2l939 4B9A  
                                  vfpfcnvrt@fmt 011E                                    vfpfcnvrt@llu 0139  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _PORTB 000F81                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _TRISD 000F95                                           _TRISE 000F96  
                                         i2_abs 4F4E                                      _Draw_Graph 0184  
                                 __CFG_WRT0$OFF 000000                                 ??_lcd_draw_char 0099  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                           ___lmul@multiplicand 000A                                   __CFG_WRT3$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                      _Get_values 4640  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR2_ISR 51EA                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                               __end_of_msDelay 5128                                  __CFG_EBTRB$OFF 000000  
                       __end_of_PIN_MANAGER_IOC 53C8                                           _flags 00CB  
                                         _errno 0180                                           _error 00B9  
                                         _fputc 47F4                                 __end_of_isalpha 4FCE  
                                         _fputs 4DF4                                 __end_of_isdigit 50B6  
                                         atoi@n 009A                                           pad@fp 0098  
                                         atoi@s 008D                                           _width 00C7  
                                         ctoa@c 00A5                                           _putch 5416  
                                         ctoa@w 00A6                                           dtoa@d 00A5  
                                         dtoa@i 0110                                           dtoa@n 0108  
                                         dtoa@p 0102                                           dtoa@s 0106  
                                         dtoa@w 0104                                __end_of_SPI_Open 4A3E  
                               __end_of_islower 5008                                 __end_of_isspace 4D10  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 515A  
                               Out_USART@F12900 0179                                 Out_USART@F12896 017D  
                               Out_USART@F12898 0182                                 __end_of_isupper 5042  
                                         pclath 000FFA                                           tablat 000FF5  
                                         otoa@d 00A5                                           otoa@i 010E  
                                         otoa@n 0106                                           otoa@p 0100  
                                         otoa@t 0102                                           otoa@w 0104  
                              __end_ofi2___wmul 530C                                  ??_EUSART1_Read 0086  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         stoa@i 009D                                           stoa@l 00A5  
                                         stoa@p 00A3                                           stoa@s 0093  
                                         stoa@w 009F                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                         utoa@d 00A5                                           utoa@i 010C  
                                         utoa@n 0104                                           utoa@p 0100  
                                         utoa@w 0102                                           status 000FD8  
                                         wtemp8 0060                                           xtoa@c 011A  
                                         xtoa@d 00A5                                           xtoa@i 0118  
                                         xtoa@n 0110                                           xtoa@p 010C  
                                         xtoa@w 010E                                           xtoa@x 00AD  
                               _TMR2_StartTimer 5474                                 __end_of_strncmp 4640  
                               __end_of_toupper 4C5E                                  lcd_fill@height 0091  
                              ___lodiv@dividend 0086              _EUSART1_DefaultFramingErrorHandler 000000  
                               ?_SPI_Initialize 0001                 ??_IOCB4_DefaultInterruptHandler 0001  
                                  _toupper$2513 0092                                 __initialization 4B9C  
                                  __end_of_atoi 344C                                    __end_of_ctoa 4CBC  
                    __end_of_EUSART1_Initialize 4ECA                                    __end_of_main 3022  
                                  __end_of_dtoa 2A8E                                    __end_of_font FEE5  
                                  __end_of_otoa 364E                                    __end_of_stoa 398E  
                                  __end_of_utoa 323C                                    __end_of_xtoa 2D80  
                             __end_of_IOCB4_ISR 5246                         __end_of_TMR2_Initialize 5348  
                   ?_INTERRUPT_InterruptManager 0001                                 _TIMER2_CALLBACK 5462  
                                        ??_atoi 008F                                          ??_ctoa 00A6  
                      _TMR2_SetInterruptHandler 5430                                          ??_main 00B5  
                                        ??_dtoa 00AD                               ?_lcd_set_cursor_x 0089  
                             ?_lcd_set_cursor_y 0089                                   lcd_send@value 0087  
                                        ??_otoa 00AD                                          ??_stoa 0095  
                                        ??_utoa 00AD                                          ??_xtoa 0100  
                                 __activetblptr 000003                              ??_lcd_set_cursor_x 008B  
                            ??_lcd_set_cursor_y 008B                                          ?i2_abs 007B  
                                __CFG_RETEN$OFF 000000                                ___lodiv@quotient 0096  
                                lcd_draw_char@i 00A4                                  lcd_draw_char@j 00A2  
                                lcd_draw_char@k 00A3                        __end_of_SPI_ExchangeByte 5364  
                                lcd_draw_char@x 008F                                  lcd_draw_char@y 0091  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0088  
                                        STR_102 FFFC                                          ?_fputs 0091  
                                        STR_104 FFFC                                          STR_106 FFEA  
                                        _ADRESH 000FC4                                          STR_108 FFEA  
                                        _ADRESL 000FC3                                          _CCPR1H 000FBD  
                                        _CCPR1L 000FBC                                          _ANCON0 000F5D  
                                        _ANCON1 000F5C                                          ?_putch 0001  
                                        _T1GCON 000FAA                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l1006 4164                                 __CFG_BBSIZ$BB2K 000000  
                                        i2l1224 426C                                          i2l1511 2264  
                                        i2l1520 22AA                                          i2l1192 432A  
                                        i2l1522 2322                                          i2l1514 2228  
                                        i2l1602 4F86                                          i2l1523 2310  
                                        i2l1509 2404                                          i2l1197 4370  
                                        i2l1541 1D04                                          i2l1605 4F8E  
                                        i2l1550 1F72                                          i2l1551 1F60  
                                        i2l1455 1538                                          i2l1472 1652  
                                        i2l1464 1808                                          i2l1456 1526  
                                        i2l1545 2068                                          i2l1481 1722  
                                        i2l1457 14EC                                          i2l1482 1710  
                                        i2l1548 1EFA                                          i2l5101 20DE  
                                        i2l1582 36A4                                          i2l1558 202A  
                                __CFG_WDTEN$OFF 000000                                          i2l5031 4B60  
                                        i2l5111 211E                                          i2l5103 20EC  
                                        i2l5041 407C                                          i2l5033 4B6A  
                                        i2l5025 4B32                                          i2l1585 3800  
                                        i2l5201 23E0                                          i2l5121 215E  
                                        i2l5113 2120                                          i2l5105 20EE  
                                        i2l1497 4E82                                          i2l5051 40B2  
                                        i2l5043 4080                                          i2l5035 405A  
                                        i2l5027 4B42                                          i2l5203 23E4  
                                        i2l5131 218E                                          i2l5123 2166  
                                        i2l5107 20FE                                          i2l5115 2128  
                                        i2l1596 3798                                          i2l5061 40F4  
                                        i2l5053 40C8                                          i2l5045 408E  
                                        i2l5037 405E                                          i2l5029 4B50  
                                        i2l1589 373C                                          i2l5205 23F2  
                                        i2l5141 21CC                                          i2l5133 218E  
                                        i2l5125 216A                                          i2l5117 2138  
                                        i2l5109 210E                                          i2l5301 1EEA  
                                        i2l5221 1C5A                                          i2l4501 148A  
                                        i2l6111 53B0                                          i2l5063 4112  
                                        i2l5055 40D0                                          i2l5071 4134  
                                        i2l5047 409E                                          i2l5039 406C  
                                        i2l5207 23F8                                          i2l5151 2218  
                                        i2l5143 21DC                                          i2l5119 214E  
                                        i2l5311 1F2A                                          i2l5303 1EF8  
                                        i2l5231 1C92                                          i2l5223 1C5C  
                                        i2l4511 14FA                                          i2l4503 148E  
                                        i2l4431 1376                                          i2l4423 1348  
                                        i2l6113 53C0                                          i2l5073 4144  
                                        i2l5065 4122                                          i2l5057 40DC  
                                        i2l5049 40A2                                          i2l5209 23FA  
                                        i2l5161 2262                                          i2l5153 2226  
                                        i2l5145 21EC                                          i2l5137 21A2  
                                        i2l5129 217E                                          i2l5081 2078  
                                        i2l5321 1F9C                                          i2l5313 1F58  
                                        i2l5305 1F0A                                          i2l5241 1CBE  
                                        i2l5233 1CA2                                          i2l5225 1C6C  
                                        i2l5217 1C40                                          i2l4601 1788  
                                        i2l4521 1524                                          i2l4513 1506  
                                        i2l4505 14B8                                          i2l4441 13B0  
                                        i2l4433 1386                                          i2l4425 1356  
                                        i2l5401 420C                                          i2l6115 53C4  
                                        i2l5075 4154                                          i2l5067 4124  
                                        i2l5059 40EA                                          i2l5171 22A8  
                                        i2l5163 2274                                          i2l5155 2232  
                                        i2l5147 21F4                                          i2l5139 21BC  
                                        i2l5091 20B8                                          i2l5083 2086  
                                        i2l5331 2012                                          i2l5323 1FC6  
                                        i2l5307 1F18                                          i2l5251 1D14  
                                        i2l5243 1CCE                                          i2l5235 1CA8  
                                        i2l5227 1C7C                                          i2l5219 1C4C  
                                        i2l4611 17DA                                          i2l4603 1798  
                                        i2l4531 157A                                          i2l4523 1546  
                                        i2l4515 150A                                          i2l4507 14D4  
                                        i2l4451 13DE                                          i2l4443 13B6  
                                        i2l4435 1396                                          i2l4427 1364  
                                        i2l5411 423C                                          i2l6131 51BC  
                                        i2l5069 412E                                          i2l5421 3660  
                                        i2l5181 2308                                          i2l5165 228A  
                                        i2l5173 22BA                                          i2l5157 2250  
                                        i2l5149 2204                                          i2l5093 20BA  
                                        i2l5085 2088                                          i2l5333 202E  
                                        i2l5341 2054                                          i2l5317 1F82  
                                        i2l5325 1FCA                                          i2l5309 1F1C  
                                        i2l5261 1D4E                                          i2l5253 1D24  
                                        i2l5245 1CDE                                          i2l5237 1CAE  
                                        i2l5229 1C8C                                          i2l4621 17F8  
                                        i2l4613 17E0                                          i2l4605 17A8  
                                        i2l4541 15B4                                          i2l4533 1588  
                                        i2l4525 1556                                          i2l4517 1518  
                                        i2l4509 14E4                                          i2l4461 1412  
                                        i2l4453 13E0                                          i2l4445 13C8  
                                        i2l4437 1398                                          i2l4429 1366  
                                        i2l5413 424C                                          i2l6133 51BE  
                                        i2l5431 36DE                                          i2l5423 366E  
                                        i2l5191 2376                                          i2l5175 22C8  
                                        i2l5167 2290                                          i2l5159 2252  
                                        i2l5087 2098                                          i2l5095 20C2  
                                        i2l5079 206A                                          i2l5343 2058  
                                        i2l5335 203E                                          i2l5327 1FE4  
                                        i2l5319 1F8E                                          i2l5271 1DA0  
                                        i2l5263 1D64                                          i2l5247 1CEE  
                                        i2l5239 1CBC                                          i2l4615 17E2  
                                        i2l4607 17C8                                          i2l4551 1620  
                                        i2l4543 15B6                                          i2l4535 1596  
                                        i2l4519 151A                                          i2l4471 144E  
                                        i2l4455 13F0                                          i2l4463 141A  
                                        i2l4447 13CA                                          i2l4439 13A0  
                                        i2l5415 425C                                          i2l5407 4220  
                                        i2l6135 51DA                                          i2l5441 3732  
                                        i2l5433 36E6                                          i2l5425 36B4  
                                        i2l5185 2332                                          i2l5193 237A  
                                        i2l5177 22CC                                          i2l5169 229A  
                                        i2l5097 20D2                                          i2l5089 20A8  
                                        i2l5361 42EA                                          i2l5353 426E  
                                        i2l5337 204C                                          i2l5329 1FF8  
                                        i2l5281 1DE6                                          i2l5273 1DAE  
                                        i2l5265 1D70                                          i2l5257 1D38  
                                        i2l5249 1CF4                                          i2l4617 17E8  
                                        i2l4609 17CC                                          i2l4561 1678  
                                        i2l4553 1622                                          i2l4545 15C0  
                                        i2l4537 15A2                                          i2l4529 156A  
                                        i2l4481 1462                                          i2l4473 1452  
                                        i2l4465 142A                                          i2l4457 1400  
                                        i2l4449 13D0                                          i2l5409 422C  
                                        i2l6137 51DE                                          i2l5451 37A8  
                                        i2l5443 376E                                          i2l5435 36F2  
                                        i2l5427 36CA                                          i2l5419 3650  
                                        i2l5195 2394                                          i2l5187 233E  
                                        i2l5179 22DA                                          i2l5099 20D8  
                                        i2l5371 436E                                          i2l5363 42F8  
                                        i2l5355 429C                                          i2l5339 204E  
                                        i2l5291 1E54                                          i2l5283 1E00  
                                        i2l5275 1DBA                                          i2l5267 1D88  
                                        i2l5259 1D44                                          i2l4619 17F6  
                                        i2l4571 16A6                                          i2l4555 1632  
                                        i2l4539 15A6                                          i2l4547 15C6  
                                        i2l4491 1476                                          i2l4483 1466  
                                        i2l4475 1456                                          i2l4467 143C  
                                        i2l4459 1410                                          i2l5347 4E3C  
                                        i2l5461 37F0                                          i2l5453 37AC  
                                        i2l5445 377A                                          i2l5437 3724  
                                        i2l5197 23AA                                          i2l5189 234C  
                                        i2l5365 430A                                          i2l5357 42AC  
                                        i2l5293 1E7E                                          i2l5285 1E10  
                                        i2l5277 1DCA                                          i2l5269 1D94  
                                        i2l4573 16B4                                          i2l4565 168C  
                                        i2l4581 16D2                                          i2l4549 15EC  
                                        i2l4557 1642                                          i2l4493 147A  
                                        i2l4485 146A                                          i2l4477 145A  
                                        i2l4469 144A                                          i2l5349 4E4E  
                                        i2l5381 4192                                          i2l5455 37D0  
                                        i2l5447 3788                                          i2l5439 3726  
                                        i2l5199 23C4                                          i2l5367 4318  
                                        i2l5359 42DA                                          i2l5295 1EB4  
                                        i2l5287 1E2C                                          i2l5279 1DD6  
                                        i2l4575 16BC                                          i2l4567 1696  
                                        i2l4559 1668                                          i2l4583 16E0  
                                        i2l4495 147E                                          i2l4487 146E  
                                        i2l4479 145E                                          i2l5391 41E0  
                                        i2l5383 41BC                                          i2l5375 4166  
                                        i2l5471 4F4E                                          i2l4681 50DC  
                                        i2l5457 37E0                                          i2l5449 37A6  
                                        i2l5369 4368                                          i2l5297 1EC2  
                                        i2l5289 1E38                                          i2l4593 1732  
                                        i2l4585 16E4                                          i2l4577 16C0  
                                        i2l4569 16A4                                          i2l4497 1482  
                                        i2l4489 1472                                          i2l5385 41BE  
                                        i2l5377 417E                                          i2l5465 52E6  
                                        i2l5473 4F6A                                          i2l5481 24CA  
                                        i2l6441 0036                                          i2l4675 50B8  
                                        i2l5459 37EE                                          i2l5475 4640  
                                        i2l5299 1EE0                                          i2l4595 173E  
                                        i2l4587 16F2                                          i2l4579 16D0  
                                        i2l4499 1486                                          i2l5387 41CE  
                                        i2l5467 5302                                          i2l5491 2674  
                                        i2l5483 24F4                                          i2l6443 004C  
                                        i2l4677 50CA                                          i2l4685 515A  
                                        i2l4597 174C                                          i2l4589 1708  
                                        i2l5397 41F8                                          i2l5389 41D2  
                                        i2l5493 2684                                          i2l5485 261C  
                                        i2l5477 2406                                          i2l6445 005A  
                                        i2l6437 001A                                          i2l4679 50CC  
                                        i2l4599 1786                                          i2l5399 4202  
                                        i2l5495 26E2                                          i2l5487 264E  
                                        i2l5479 24BC                                          i2l6447 0068  
                                        i2l6439 0028                                          i2l5497 2702  
                                        i2l5489 2664                                          i2l5499 2744  
                                        i2l5871 5466                                          i2l5867 547C  
                                        i2l5957 5218                                          i2l5869 5462  
                                        i2l5959 522C                                          i2l5977 51EA  
                                        i2l5979 51FE                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                 vfpfcnvrt@done 0128                                          _SPBRG1 000FAF  
                                        _SSPADD 000FC8                                          _SSPBUF 000FC9  
                                        _TXREG1 000FAD                                __end_of___xxtofl 3802  
                                        i2abs@a 007B                                          _TXSTA1 000FAC  
                               _global_bg_color 00CD                                  __CFG_XINST$OFF 000000  
                              ??_lcd_draw_pixel 008B                                __end_of_lcd_fill 4AC6  
                                  vfprintf@cfmt 0147                                __end_of_lcd_init 1C40  
                              __end_of_lcd_send 532A                                          ___flge 426E  
                                        ___lmul 4B32                                       ??___aldiv 001A  
                                     ??___aodiv 0096                                       ??___fladd 005B  
                                     ??___aomod 0096                                          ___wmul 5298  
                                     ??___fldiv 004F                                  __CFG_STVREN$ON 000000  
                                     ??___flmul 0036                                       ??___flsub 005F  
                                     ??___fltol 0075                                       ??___lodiv 0096  
                                     ??___lomod 0096                        ?_EUSART1_SetErrorHandler 0086  
                                        clear_0 4BE2                                          clear_1 4BEE  
                                        _sensor 00C1                                          _printf 5270  
                                        pad@buf 009A                ??_EUSART1_SetOverrunErrorHandler 0088  
               ?_EUSART1_SetOverrunErrorHandler 0086                                          ctoa@fp 00A3  
                                        dtoa@fp 00A3                                          _string 01A5  
                                        _strlen 5042                              __size_of_Out_USART 00F0  
                                     ??_msDelay 0086                                          fputc@c 0088  
                                        fputs@c 0095                                          fputs@i 0096  
                                        fputs@s 0091                                       ??_isalpha 0088  
                                     ??_isdigit 0088                                       ??_islower 0088  
                                  __mediumconst F10C                                       ??_isspace 0088  
                                        otoa@fp 00A3                                     ?_Get_values 0001  
                                        tblptrh 000FF7                                       ??_isupper 0088  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                      ADC_GetConversion@channel 0005                                          stoa@cp 00A1  
                                        stoa@fp 0091                                __end_of_vfprintf 4B32  
                               ??_EUSART1_Write 0086                                          utoa@fp 00A3  
                       __end_of_TMR2_StartTimer 5478        TMR2_SetInterruptHandler@InterruptHandler 0086  
     IOCB4_SetInterruptHandler@InterruptHandler 0086                                ?_PIN_MANAGER_IOC 0001  
                              __end_of_snprintf 51BC                                          xtoa@fp 00A3  
                       ??_INTERRUPT_S1_CALLBACK 0001                                       ??_strncmp 008C  
                                     ??_toupper 008E                   __size_of_INTERRUPT_Initialize 0004  
                                    ___flge@ff1 0001                                      ___flge@ff2 0005  
                              ?_TMR1_Initialize 0001                                    ___xxtofl@arg 002A  
                                  ___xxtofl@exp 0029                               _SYSTEM_Initialize 52C0  
                                  ___xxtofl@val 0020                                      __accesstop 0060  
                      __size_of_lcd_draw_string 014A                         __end_of__initialization 4BF4  
                         __end_of_TMR2_CallBack 5218                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                      ___fltol@f1 0071  
                                 __end_ofi2_abs 4F90                         __end_of_TIMER2_CALLBACK 546C  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 546C                                    __pidataBANK1 5424  
                           ??_SYSTEM_Initialize 0088                                       ?_TMR2_ISR 0001  
                            ??_EPWM1_Initialize 0086                                   __end_of_fputc 48C0  
                                 __end_of_fputs 4E3C           __end_of_IOCB4_DefaultInterruptHandler 5484  
        __size_of_IOCB4_DefaultInterruptHandler 0002                   _IOCB4_DefaultInterruptHandler 5482  
                                 __end_of_putch 5424                                ?_TMR2_Initialize 0001  
                                     ?_SPI_Open 0001                     ??_IOCB4_SetInterruptHandler 0088  
                          __end_of_EUSART1_Read 5270                                       ?i2___wmul 0001  
                              ??_lcd_set_cursor 008F                                         ??i2_abs 007D  
                                       ??_fputc 008C                       __end_of_SYSTEM_Initialize 52E6  
                                       ??_fputs 0095                                         ??_putch 0087  
                                    __pbssBANK0 00B5                                      __pbssBANK1 0179  
                               __CFG_PLLCFG$OFF 000000                               __end_of_Out_USART 4554  
                              Out_USART@value_1 0158                                Out_USART@value_2 0151  
                              Out_USART@value_3 0154                 __end_of_EUSART1_SetErrorHandler 5462  
                                       ?___flge 0001                             __size_of_Get_values 00E2  
                                       ?___lmul 0006                                         ?___wmul 0086  
                                    ??_TMR2_ISR 005F                                         _CCP1CON 000FBB  
                                       _ECCP1AS 000FBF                                  ___lmul@product 000E  
                                    ??_SPI_Open 0086                                         ?_printf 0149  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0086  
        __end_of_EUSART1_SetFramingErrorHandler 5458         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 544E                                      ??i2___wmul 0005  
                              __CFG_CANMX$PORTB 000000                                       ?___xxtofl 0020  
                                       _REFOCON 000F9A                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 12C0                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000F7D                         __size_of_TMR2_StopTimer 0004  
                                       _SSPCON1 000FC6                                         _SSPCON2 000FC5  
                              ?_TMR2_StartTimer 0001                                       ?_lcd_fill 008F  
                                     ?_lcd_init 0001                                       ?_lcd_send 0087  
                                       _SSPSTAT 000FC7                                ___lomod@dividend 0086  
                   __end_of_EPWM1_LoadDutyValue 518C                                ??_SPI_Initialize 0086  
                     _IOCB4_SetInterruptHandler 543A                                 __CFG_PWRTEN$OFF 000000  
                          _ADC_InterruptHandler 00D3                                         __Hparam 0000  
                                       __Lparam 0000                      ??_TMR2_SetInterruptHandler 0088  
                            __size_of_vsnprintf 0110                                ?_TIMER2_CALLBACK 0001  
                         __end_of_PI_Controller 2788                               ??_lcd_draw_string 00AF  
                                 _turn_on_value 00D8                                         ___aldiv 405A  
                               __size_of___flge 0104                                         ___aodiv 398E  
                                       ___fladd 1348                                         ___aomod 3C9A  
                                       ___fldiv 206A                                 __size_of___lmul 006A  
                                       ___flmul 1C40                                         ___flsub 4E3C  
                                       ___fltol 4166                                 __size_of___wmul 0028  
                                       ___lodiv 4372                                         ___lomod 4722  
                                     ?_vfprintf 0141                                       ?_snprintf 015F  
                           _EUSART1_is_rx_ready 53DE                                         __pcinit 4B9C  
                                       __ramtop 0F00                                         __ptext0 2D80  
                                       __ptext1 518C                                         __ptext2 3F4A  
                                       __ptext3 180A                                         __ptext4 50F0  
                                       __ptext5 4A3E                                         __ptext6 3E00  
                                       __ptext7 3B18                                         __ptext8 4ECA  
                                       __ptext9 4D10                                 __size_of_printf 0028  
                                       _msDelay 50F0                                       _IOCB4_ISR 5218  
                               __size_of_strlen 003A                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 5404                                       _T2CONbits 000FCA  
                                  __size_of_abs 0042                                    __size_of_pad 00CA  
                                       _isalpha 4F90                                         _isdigit 507C  
                                    ??___xxtofl 0024                                ___aldiv@dividend 0012  
                            _EUSART1_Initialize 4E84                                         _islower 4FCE  
                      ??_PIN_MANAGER_Initialize 0088                                         _isspace 4CBC  
                             __CFG_MSSPMSK$MSK7 000000                                         _isupper 5008  
                                       atoi@neg 0093                           __end_of_lcd_draw_char 3C9A  
                    __size_of_SYSTEM_Initialize 0026                                      ??_lcd_fill 0091  
                             ?_SPI_ExchangeByte 0001                                      ??_lcd_init 0095  
                                    ??_lcd_send 0088                                         _strncmp 4554  
                                       _toupper 4BFE                            end_of_initialization 4BF4  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                            ??_SPI_ExchangeByte 0086                       __size_of_lcd_set_cursor_x 004E  
                     __size_of_lcd_set_cursor_y 004E                                         fputc@fp 008A  
                   _EUSART1_OverrunErrorHandler 01C7                                         fputs@fp 0093  
                           i2___wmul@multiplier 0001                             lcd_draw_char@fIndex 0093  
                             __end_of_vfpfcnvrt 1348                                ___aldiv@quotient 001C  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 002A  
                              lcd_fill@bg_color 008F                                      ??_vfprintf 00B5  
                          ??_EUSART1_Initialize 0088                                      ??_snprintf 00B5  
                                       strlen@a 0088                                         strlen@s 0086  
                             lcd_draw_string@pS 00A9                                       _PORTBbits 000F81  
                             _spi_configuration FEE5                                      ?_IOCB4_ISR 0001  
                                   ___fladd@grs 0070                                __CFG_FOSC$INTIO2 000000  
                                 ___xxtofl@sign 0028                                    ??_Get_values 002E  
                                     _TRISCbits 000F94                               __end_of_vsnprintf 405A  
                                   ___fldiv@grs 0067                                     ___fldiv@rem 0060  
              __size_of_EUSART1_SetErrorHandler 000A                             EUSART1_Write@txData 0086  
                         ??_EUSART1_is_rx_ready 0086                  __size_of_INTERRUPT_S1_CALLBACK 0004  
                 __end_of_INTERRUPT_S1_CALLBACK 5480                                     ___flmul@grs 003B  
                                    lcd_send@dc 0088                                    _EUSART1_Read 5246  
                            __end_of_Get_values 4722                    __end_of_INTERRUPT_Initialize 547C  
                          SPI_ExchangeByte@data 0086            __end_of_TMR2_DefaultInterruptHandler 5482  
         __size_of_TMR2_DefaultInterruptHandler 0002                    _TMR2_DefaultInterruptHandler 5480  
                                __end_of___flge 4372                       __end_of_spi_configuration FEE9  
                                __end_of___lmul 4B9C                                     vfpfcnvrt@ap 0120  
                                   vfpfcnvrt@cp 0126                                     vfpfcnvrt@fp 011C  
                                   vfpfcnvrt@ll 012E                                  __end_of___wmul 52C0  
                                   vfpfcnvrt@vp 0136                               __size_of_TMR2_ISR 002E  
                                _ADC_Initialize 53C8                          ?_OSCILLATOR_Initialize 0001  
                              i2___wmul@product 0005                                  __end_of_printf 5298  
                             __size_of_SPI_Open 00B4                                  __end_of_strlen 507C  
                           start_initialization 4B9C                                 ___lodiv@divisor 008E  
                     __size_of_EPWM1_Initialize 001C                                 ___lodiv@counter 009E  
                             __size_ofi2___wmul 0026                 __size_of_PIN_MANAGER_Initialize 0048  
                                   __end_of_abs 4F4E                                     __end_of_pad 498A  
                                _TMR2_StopTimer 5470                                     putch@txData 0087  
                  EPWM1_LoadDutyValue@dutyValue 007B                           __end_of_EUSART1_Write 53B0  
                      __size_of_PIN_MANAGER_IOC 0018                  SPI_Open@spiUniqueConfiguration 0087  
                      __size_of_TMR1_Initialize 0032                                     vfprintf@fmt 0143  
                                     _Out_USART 4464                                        ??___flge 0009  
                                      ??___lmul 000E                                        ??___wmul 008A  
                                   _CCPTMRSbits 000F99                          __end_of_ADC_Initialize 53DE  
                                   __pdataBANK0 00D6                                     __pdataBANK1 01CF  
               fp__TMR2_DefaultInterruptHandler 0000                   ?_TMR2_DefaultInterruptHandler 0001  
                                      ??_printf 00B5                                        ??_strlen 0088  
                                   ??_IOCB4_ISR 0001                                       ___fladd@a 0057  
                                     ___fladd@b 0053                         __size_of_lcd_draw_pixel 0018  
                                  vsnprintf@cnt 0157                                    vsnprintf@fmt 014D  
                                     ___fldiv@a 004B                                       ___fldiv@b 0047  
                        __size_of_TMR2_CallBack 002E                          __end_of_TMR2_StopTimer 5474  
                                     ___flmul@a 0032                                       ___flmul@b 002E  
                                     ___flsub@a 0075                                       ___flsub@b 0071  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ___aodiv@dividend 0086                        __size_of_TMR2_Initialize 001E  
                                   snprintf@fmt 0163                               __size_of___xxtofl 01B4  
                               _lcd_draw_string 3E00                                _lcd_set_cursor_x 4D5E  
                              _lcd_set_cursor_y 4D10                ??_EUSART1_SetFramingErrorHandler 0088  
               ?_EUSART1_SetFramingErrorHandler 0086                               __size_of_lcd_fill 0088  
                             __size_of_lcd_init 0436                               __size_of_lcd_send 001E  
                                     _atoi$2400 0099                                       _atoi$2401 0097  
                                     _atoi$2399 0095                                       __pnvBANK1 01C3  
                        _PIN_MANAGER_Initialize 4DAC                                       _dtoa$1786 0100  
                      fp__INTERRUPT_S1_CALLBACK 0000                                      ?_Out_USART 0001  
                                     __pintcode 0008                                   __pmediumconst F10C  
                                      ?___aldiv 0012                                        ?___aodiv 0086  
                                      ?___fladd 0053                                        ?___aomod 0086  
                                      ?___fldiv 0047                                ___aodiv@quotient 0098  
                                      ?___flmul 002E                                        ?___flsub 0071  
                                      ?___fltol 0071                                        ?___lodiv 0086  
                                      ?___lomod 0086                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0082                               __size_of_vfprintf 006C  
                             __size_of_snprintf 0030                                        ?_msDelay 0001  
                               ___lomod@divisor 008E                                        _ECCP1DEL 000FBE  
                               ___lomod@counter 0096                                        _BAUDCON1 000FA7  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0086  
                                      ?_isdigit 0086                                 ?_TMR2_StopTimer 0001  
                                __size_ofi2_abs 0042                            _EUSART1_ErrorHandler 01C5  
                                      ?_islower 0086                                        ?_isspace 0086  
                                      ?_isupper 0086                         _EUSART1_SetErrorHandler 5458  
                                __size_of_fputc 00CC                                  __size_of_fputs 0048  
                                      ?_strncmp 0086                                        ?_toupper 008C  
                                __size_of_putch 000E                            _INTERRUPT_Initialize 5478  
                       __size_of_lcd_set_cursor 0042                                 ___aldiv@divisor 0016  
                               ___aldiv@counter 001A                                  ___wmul@product 008A  
                                      _IOCBbits 000F5A                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 0086                                        _LATEbits 000F8D  
                                 _TMR2_CallBack 51EA                                        _PIE1bits 000F9D  
                      __size_of_TMR2_StartTimer 0004                                 lcd_set_cursor@x 008B  
                               lcd_set_cursor@y 008D             __size_of_INTERRUPT_InterruptManager 007C  
                                      i2u400_40 1400                                        i2u400_41 13FC  
                                      i2u401_40 143C                                        i2u401_41 1438  
                                      i2u410_40 1556                                        i2u402_40 144A  
                                      i2u410_41 1552                                        i2u402_41 1446  
                                      i2u411_40 1588                                        i2u403_40 14B8  
                                      i2u411_41 1584                                        i2u403_41 14B4  
                                      i2u420_40 16D0                                        i2u412_40 1596  
                                      i2u404_40 14D0                                        i2u420_41 16CC  
                                      i2u412_41 1592                                        i2u404_41 14CA  
                                      i2u421_40 16E0                                        i2u413_40 15B4  
                                      i2u405_40 14D2                                        i2u421_41 16DC  
                                      i2u413_41 15B0                                        i2u430_40 17C8  
                                      i2u422_40 16F2                                        i2u414_40 15EC  
                                      i2u406_40 14FA                                        i2u430_41 17C4  
                                      i2u422_41 16EE                                        i2u414_41 15E8  
                                      i2u406_41 14F6                                        i2u431_40 17DA  
                                      i2u423_40 1708                                        i2u415_40 1632  
                                      i2u407_40 1518                                        i2u431_41 17D6  
                                      i2u423_41 1704                                        i2u415_41 162E  
                                      i2u407_41 1514                                        i2u520_40 4B50  
                                      i2u432_40 17F6                                        i2u424_40 171E  
                                      i2u416_40 1668                                        i2u408_40 1538  
                                      i2u600_40 2784                                        i2u520_41 4B4C  
                                      i2u432_41 17F2                                        i2u424_41 171A  
                                      i2u416_41 1664                                        i2u408_41 1534  
                                      i2u600_41 2780                                        i2u521_40 4B8A  
                                      i2u425_40 1732                                        i2u417_40 1678  
                                      i2u409_40 1546                                        i2u521_41 4B86  
                                      i2u425_41 172E                                        i2u417_41 1674  
                                      i2u409_41 1542                                        _PIR1bits 000F9E  
                                      i2u442_40 50DC                                        i2u522_40 406C  
                                      i2u530_40 20A8                                        i2u426_40 174C  
                                      i2u418_40 16A4                                        i2u442_41 50D8  
                                      i2u522_41 4068                                        i2u530_41 20A4  
                                      i2u426_41 1748                                        i2u418_41 16A0  
                                      i2u523_40 408E                                        i2u531_40 20EC  
                                      i2u427_40 1786                                        i2u419_40 16B4  
                                      i2u523_41 408A                                        i2u531_41 20E8  
                                      i2u427_41 1782                                        i2u419_41 16B0  
                                      i2u524_40 40C8                                        i2u540_40 228A  
                                      i2u532_40 20FE                                        i2u428_40 1798  
                                      i2u524_41 40C4                                        i2u540_41 2286  
                                      i2u532_41 20FA                                        i2u428_41 1794  
                                      i2u525_40 40EA                                        i2u541_40 22A8  
                                      i2u533_40 210E                                        i2u429_40 17A8  
                                      i2u525_41 40E6                                        i2u541_41 22A4  
                                      i2u533_41 210A                                        i2u429_41 17A4  
                                      i2u526_40 4112                                        i2u550_40 23F2  
                                      i2u542_40 22C8                                        i2u534_40 214E  
                                      i2u526_41 410E                                        i2u550_41 23EE  
                                      i2u542_41 22C4                                        i2u534_41 214A  
                                      i2u527_40 4144                                        i2u543_40 22DA  
                                      i2u535_40 218E                                        i2u551_40 1C5A  
                                      i2u527_41 4140                                        i2u543_41 22D6  
                                      i2u535_41 218A                                        i2u551_41 1C56  
                                      i2u544_40 2308                                        i2u536_40 2204  
                                      i2u528_40 2086                                        i2u560_40 1EF8  
                                      i2u552_40 1C6C                                        i2u544_41 2304  
                                      i2u536_41 2200                                        i2u528_41 2082  
                                      i2u560_41 1EF4                                        i2u552_41 1C68  
                                      i2u545_40 231E                                        i2u537_40 2226  
                                      i2u529_40 2098                                        i2u561_40 1F18  
                                      i2u553_40 1C7C                                        i2u545_41 231A  
                                      i2u537_41 2222                                        i2u529_41 2094  
                                      i2u561_41 1F14                                        i2u553_41 1C78  
                                      i2u546_40 2332                                        i2u538_40 2250  
                                      i2u570_40 429C                                        i2u562_40 1F2A  
                                      i2u554_40 1CBC                                        i2u394_40 1364  
                                      i2u546_41 232E                                        i2u538_41 224C  
                                      i2u570_41 4298                                        i2u562_41 1F26  
                                      i2u554_41 1CB8                                        i2u394_41 1360  
                         lcd_draw_string@lIndex 0102                                        i2u651_40 522C  
                                      i2u547_40 234C                                        i2u539_40 2274  
                                      i2u571_40 42DA                                        i2u563_40 1F58  
                                      i2u555_40 1CCE                                        i2u395_40 1376  
                                      i2u651_41 5228                                        i2u547_41 2348  
                                      i2u539_41 2270                                        i2u571_41 42D6  
                                      i2u563_41 1F54                                        i2u555_41 1CCA  
                                      i2u395_41 1372                                        i2u548_40 2394  
                                      i2u572_40 42F8                                        i2u564_40 1F6E  
                                      i2u556_40 1CDE                                        i2u396_40 1386  
                                      i2u580_40 423C                                        i2u548_41 2390  
                                      i2u572_41 42F4                                        i2u564_41 1F6A  
                                      i2u556_41 1CDA                                        i2u396_41 1382  
                                      i2u580_41 4238                                        i2u652_48 5232  
                                      i2u549_40 23C4                                        i2u573_40 4318  
                                      i2u565_40 1F82                                        i2u557_40 1D14  
                                      i2u397_40 13C8                                        i2u581_40 424C  
                                      i2u652_49 5244                                        i2u549_41 23C0  
                                      i2u573_41 4314                                        i2u565_41 1F7E  
                                      i2u557_41 1D10                                        i2u397_41 13C4  
                                      i2u581_41 4248                    __size_of_EPWM1_LoadDutyValue 0032  
                                      i2u590_40 37E0                                        i2u582_40 3660  
                                      i2u574_40 4368                                        i2u566_40 1F9C  
                                      i2u558_40 1D24                                        i2u398_40 13DE  
                                      i2u590_41 37DC                                        i2u582_41 365C  
                                      i2u574_41 4364                                        i2u566_41 1F98  
                                      i2u558_41 1D20                                        i2u398_41 13DA  
                                      i2u591_40 37EE                                        i2u583_40 366E  
                                      i2u567_40 1FE4                                        i2u559_40 1E9E  
                                      i2u399_40 13F0                                        i2u575_40 417E  
                                      i2u591_41 37EA                                        i2u583_41 366A  
                                      i2u567_41 1FE0                                        i2u399_41 13EC  
                                      i2u575_41 417A                                        i2u559_45 1E94  
                                      i2u584_40 36CA                                        i2u568_40 2012  
                                      i2u576_40 41B2                                        i2u592_40 4F6A  
                                      i2u656_40 51FE                                        i2u584_41 36C6  
                                      i2u568_41 200E                                        i2u592_41 4F66  
                                      i2u656_41 51FA                                        i2u576_45 41A8  
                                      i2u585_40 3720                                        i2u569_40 204C  
                                      i2u577_40 41E0                                        i2u593_40 24BC  
                                      i2u585_41 371C                                        i2u569_41 2048  
                                      i2u577_41 41DC                                        i2u593_41 24B8  
                                      i2u674_40 53C0                                        i2u586_40 376A  
                                      i2u578_40 41F4                                        i2u594_40 24CA  
                                      i2u657_48 5204                                        i2u674_41 53BC  
                                      i2u586_41 3766                                        i2u578_41 41F0  
                                      i2u594_41 24C6                                        i2u657_49 5216  
                                      i2u587_40 3788                                        i2u579_40 421C  
                                      i2u595_40 24E6                                        i2u587_41 3784  
                                      i2u579_41 4218                                        i2u595_41 24E0  
                                      i2u588_40 3798                                        i2u596_40 24E8  
                                      i2u676_40 51DA                                        i2u692_40 0028  
                                      i2u588_41 3794                                        i2u676_41 51D6  
                                      i2u692_41 0024                                        i2u589_40 37A6  
                                      i2u597_40 264E                                        i2u693_40 0036  
                                      i2u589_41 37A2                                        i2u597_41 264A  
                                      i2u693_41 0032                                        i2u598_40 2674  
                                      i2u694_40 004C                                        i2u598_41 2670  
                                      i2u694_41 0048                                        i2u599_40 2742  
                                      i2u695_40 005A                                        i2u599_41 273E  
                                      i2u695_41 0056                                        i2u696_40 0068  
                                      i2u696_41 0064                                        _RCONbits 000FD0  
                     __size_of_SPI_ExchangeByte 001C                                        _TMR2_ISR 51BC  
                                      _PSTR1CON 000F9C                                lcd_draw_string@k 0100  
                              lcd_draw_string@x 00A5                                lcd_draw_string@y 00A7  
                             ??_PIN_MANAGER_IOC 0001                                       _vfpfcnvrt 0088  
                                     _xtoa$1822 0108                                       _xtoa$1823 010A  
                                      _SPI_Open 498A                               ??_TMR1_Initialize 0086  
                                    _ADCON0bits 000FC2                        __size_of_TIMER2_CALLBACK 000A  
                             ___wmul@multiplier 0086                              fp__TIMER2_CALLBACK 0000  
                              __CFG_SOSCSEL$DIG 000000                                        i2___wmul 52E6  
                                     _sum_error 00CF                         __end_of_lcd_draw_string 3F4A  
                ??_TMR2_DefaultInterruptHandler 0001                                _EPWM1_Initialize 5364  
             __size_of_TMR2_SetInterruptHandler 000A                       ?_TMR2_SetInterruptHandler 0086  
                                  _isspace$2426 008C                                       msDelay@ms 0087  
                                    vfpfcnvrt@c 0138                          __size_of_PI_Controller 0382  
                             ___lmul@multiplier 0006                                     _INTCON2bits 000FF1  
                                     copy_data0 4BB0                                       copy_data1 4BD0  
                         ?_INTERRUPT_Initialize 0001                                       _vsnprintf 3F4A  
                             ??_TMR2_Initialize 0088                                  ?_TMR2_CallBack 0001  
                                _turn_off_value 00D6                             lcd_draw_pixel@color 0089  
                                      __Hrparam 0000                                      vfprintf@ap 0145  
                                      __Lrparam 0000                                      vfprintf@fp 0141  
                             _ADC_GetConversion 50B6                                     ??_Out_USART 00B5  
                            __CFG_BOREN$SBORDIS 000000                         __size_of_SPI_Initialize 0012  
                       ??_OSCILLATOR_Initialize 0086                          __size_of_lcd_draw_char 0182  
                            ?_ADC_GetConversion 0001                                __size_of___aldiv 010C  
                              __size_of___aodiv 018A                                __size_of___fladd 04C2  
                              __size_of___aomod 0166                                __size_of___fldiv 039C  
                                   vsnprintf@ap 014F                                __size_of___flmul 042A  
                              __size_of___flsub 0048                                __size_of___fltol 0108  
                         i2___wmul@multiplicand 0003                                __size_of___lodiv 00F2  
                              __size_of___lomod 00D2                     __size_of_EUSART1_Initialize 0046  
                                    ?_vfpfcnvrt 011C                                      snprintf@ap 0177  
                               ___aodiv@divisor 008E                                 ___aodiv@counter 0096  
                        _IOCB4_InterruptHandler 01CD                                  _lcd_draw_pixel 5380  
                     ??_EUSART1_SetErrorHandler 0088                     _EUSART1_DefaultErrorHandler 000000  
                           ??_ADC_GetConversion 0003                                        _dc_value 00B5  
                              __size_of_msDelay 0038                     __end_of_EUSART1_is_rx_ready 53F2  
                                      ___xxtofl 364E                                __size_of_isalpha 003E  
                              __size_of_isdigit 003A                fp__IOCB4_DefaultInterruptHandler 0000  
                ?_IOCB4_DefaultInterruptHandler 0001                                __size_of_islower 003A  
                              __size_of_isspace 0054                                        __ptext10 4D5E  
                                      __ptext11 5380                                        __ptext20 53F2  
                                      __ptext12 530C                                        __ptext21 4DAC  
                                      __ptext13 5348                                      _T1GCONbits 000FAA  
                                      __ptext30 53C8                                        __ptext22 543A  
                                      __ptext14 5470                                        __ptext31 498A  
                                      __ptext23 5404                                        __ptext15 5474  
                                      __ptext40 4F90                                        __ptext32 4464  
                                      __ptext24 5478                                        __ptext16 52C0  
                                      __ptext41 3022                                        __ptext33 5270  
                                      __ptext25 4E84                                        __ptext17 532A  
                                      __ptext50 398E                                        __ptext42 4722  
                                      __ptext34 4AC6                                        __ptext26 5444  
                                      __ptext18 5430                                        __ptext51 4C5E  
                                      __ptext43 4372                                        __ptext35 0088  
                                      __ptext27 544E                                        __ptext19 5128  
                                      __ptext60 507C                                        __ptext52 48C0  
                                      __ptext44 4554                                        __ptext36 2A8E  
                                      __ptext28 5458                                        __ptext61 5298  
                                      __ptext53 5042                                        __ptext45 3802  
                                      __ptext37 4BFE                                        __ptext29 5364  
                                      __ptext70 4F4E                                        __ptext62 53DE  
                                      __ptext54 4DF4                                        __ptext46 344C  
                                      __ptext38 4FCE                                        __ptext71 52E6  
                                      __ptext63 5246                                        __ptext55 47F4  
                                      __ptext47 2788                                        __ptext39 5008  
                                      __ptext80 364E                                        __ptext72 4166  
                                      __ptext56 5416                                        __ptext48 4F0C  
                                      __ptext81 4B32                                        __ptext73 4E3C  
                                      __ptext65 51BC                                        __ptext57 5398  
                                      __ptext49 3C9A                                        __ptext82 405A  
                                      __ptext74 1348                                        __ptext66 51EA  
                                      __ptext58 323C                                        __ptext83 50B6  
                                      __ptext75 1C40                                        __ptext67 5462  
                                      __ptext59 4CBC                                        __ptext84 53B0  
                                      __ptext76 426E                                        __ptext68 5480  
                                      __ptext85 5218                                        __ptext77 206A  
                                      __ptext69 2406                                        __ptext86 547C  
                                      __ptext78 515A                                        __ptext87 5482  
                                      __ptext79 4640                                        __ptext88 0000  
                              __size_of_isupper 003A                                        _lcd_fill 4A3E  
                                      _lcd_init 180A                                        _lcd_send 530C  
                              __size_of_strncmp 00EC                                __size_of_toupper 0060  
                                    ?_vsnprintf 0149                                   __size_of_atoi 0210  
                                 __size_of_ctoa 005E                                   __size_of_main 02A2  
                                 __size_of_dtoa 0306                                   __size_of_otoa 0202  
                                 __size_of_stoa 018C                                   __size_of_utoa 021A  
                                 __size_of_xtoa 02F2                           _INTERRUPT_S1_CALLBACK 547C  
                     __end_of_ADC_GetConversion 50F0                              _PI_Controller$1387 0080  
                                     stoa@F1152 01CF  EUSART1_SetOverrunErrorHandler@interruptHandler 0086  
                         lcd_draw_char@bg_color 0097                                   _PI_Controller 2406  
                                      _setpoint 00BD                                        int$flags 005F  
                                      _vfprintf 4AC6                           lcd_draw_char@fg_color 0095  
                             ??_TMR2_StartTimer 0086              __end_of_INTERRUPT_InterruptManager 0084  
                    _INTERRUPT_InterruptManager 0008                          __end_of_lcd_draw_pixel 5398  
                                      _snprintf 518C                                       printf@fmt 0149  
                      __end_of_lcd_set_cursor_x 4DAC                        __end_of_lcd_set_cursor_y 4D5E  
                   _EUSART1_FramingErrorHandler 01C9                             __CFG_INTOSCSEL$HIGH 000000  
                                      msDelay@k 0088                                ___aomod@dividend 0086  
                                _vfpfcnvrt$1837 012A                                  _vfpfcnvrt$1838 012C  
                                    _INTCONbits 000FF2                                ?_lcd_draw_string 00A5  
                                      isalpha@c 0086                                        isdigit@c 0086  
                        ??_INTERRUPT_Initialize 0086                               ??_TIMER2_CALLBACK 005F  
                                    vsnprintf@f 0159                                      vsnprintf@n 014B  
                                    vsnprintf@s 0149                                   _lcd_draw_char 3B18  
                                     snprintf@n 0161                                       snprintf@s 015F  
                                      intlevel2 0000                                  _lcd_set_cursor 4ECA  
                               ??_TMR2_CallBack 005F                               lcd_set_cursor_x@x 0089  
                             lcd_set_cursor_y@y 0089                                        islower@c 0086  
                                      isspace@c 0086                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 544E         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 5444                                      _RCSTA1bits 000FAB  
                                      isupper@c 0086                                       strncmp@_l 0086  
                                     strncmp@_r 0088                                ??_ADC_Initialize 0086  
                                ?_PI_Controller 0001                                _SPI_ExchangeByte 5348  
                       lcd_draw_string@bg_color 00AD                                        printf@ap 014F  
                            __CFG_WDTPS$1048576 000000  EUSART1_SetFramingErrorHandler@interruptHandler 0086  
                               ___aomod@divisor 008E                         lcd_draw_string@fg_color 00AB  
                               ?_lcd_draw_pixel 0089                                     ??_vfpfcnvrt 0122  
                              ??_TMR2_StopTimer 0086                                        stoa@nuls 0096  
                               ___aomod@counter 0096                          __size_of_EUSART1_Write 0018  
                            _eusart1RxLastError 00D5                                  _vsnprintf$2544 0155  
                         TMR2_ISR@CountCallBack 00D1                                        strncmp@l 008D  
                                      strncmp@n 008A                                        strncmp@r 008F  
                                      toupper@c 008C                                    ___aldiv@sign 001B  
                           _EPWM1_LoadDutyValue 515A                                     _SSPCON1bits 000FC6  
                        __end_of_lcd_set_cursor 4F0C                                  ?_lcd_draw_char 008F  
                                 ___fladd@signs 006D                                    ___aodiv@sign 0097  
                __end_of_PIN_MANAGER_Initialize 4DF4                                     ??_vsnprintf 0151  
                                  ___fladd@aexp 006E                                    ___fladd@bexp 006F  
                           __CFG_BORPWR$ZPBORMV 000000                          ?_INTERRUPT_S1_CALLBACK 0001  
                               _PIN_MANAGER_IOC 53B0                           _TMR2_InterruptHandler 01C3  
                    __size_of_ADC_GetConversion 003A                                    ___aomod@sign 0097  
                               _TMR1_Initialize 5128                        __end_of_EPWM1_Initialize 5380  
                          ?_EPWM1_LoadDutyValue 007B  
