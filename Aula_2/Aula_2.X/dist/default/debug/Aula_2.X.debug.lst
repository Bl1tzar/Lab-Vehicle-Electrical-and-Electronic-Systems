

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 21 11:31:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F46K80 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  00383E                     __pidataBANK0:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for stoa@F1152
   120  00383E  28                 	db	40
   121  00383F  6E                 	db	110
   122  003840  75                 	db	117
   123  003841  6C                 	db	108
   124  003842  6C                 	db	108
   125  003843  29                 	db	41
   126  003844  00                 	db	0
   127                           
   128                           	psect	mediumconst
   129  00F1C0                     __pmediumconst:
   130                           	opt callstack 0
   131  00F1C0  00                 	db	0
   132  00F1C1                     _font:
   133                           	opt callstack 0
   134  00F1C1  0004               	dw	4
   135  00F1C3  0000               	dw	0
   136  00F1C5  0000               	dw	0
   137  00F1C7  0000               	dw	0
   138  00F1C9  0000               	dw	0
   139  00F1CB  0000               	dw	0
   140  00F1CD  0000               	dw	0
   141  00F1CF  0000               	dw	0
   142  00F1D1  0000               	dw	0
   143  00F1D3  0003               	dw	3
   144  00F1D5  0000               	dw	0
   145  00F1D7  0000               	dw	0
   146  00F1D9  00FE               	dw	254
   147  00F1DB  001B               	dw	27
   148  00F1DD  0000               	dw	0
   149  00F1DF  0000               	dw	0
   150  00F1E1  0005               	dw	5
   151  00F1E3  001E               	dw	30
   152  00F1E5  0000               	dw	0
   153  00F1E7  0000               	dw	0
   154  00F1E9  0000               	dw	0
   155  00F1EB  0000               	dw	0
   156  00F1ED  0000               	dw	0
   157  00F1EF  001E               	dw	30
   158  00F1F1  0000               	dw	0
   159  00F1F3  0000               	dw	0
   160  00F1F5  0000               	dw	0
   161  00F1F7  000B               	dw	11
   162  00F1F9  0000               	dw	0
   163  00F1FB  0000               	dw	0
   164  00F1FD  0010               	dw	16
   165  00F1FF  0001               	dw	1
   166  00F201  0010               	dw	16
   167  00F203  001D               	dw	29
   168  00F205  00F0               	dw	240
   169  00F207  0003               	dw	3
   170  00F209  001E               	dw	30
   171  00F20B  0001               	dw	1
   172  00F20D  0010               	dw	16
   173  00F20F  0001               	dw	1
   174  00F211  0010               	dw	16
   175  00F213  001D               	dw	29
   176  00F215  00F0               	dw	240
   177  00F217  0003               	dw	3
   178  00F219  001E               	dw	30
   179  00F21B  0001               	dw	1
   180  00F21D  0010               	dw	16
   181  00F21F  0001               	dw	1
   182  00F221  0000               	dw	0
   183  00F223  0000               	dw	0
   184  00F225  0009               	dw	9
   185  00F227  0000               	dw	0
   186  00F229  0004               	dw	4
   187  00F22B  001C               	dw	28
   188  00F22D  0008               	dw	8
   189  00F22F  0022               	dw	34
   190  00F231  0010               	dw	16
   191  00F233  0042               	dw	66
   192  00F235  0010               	dw	16
   193  00F237  00FF               	dw	255
   194  00F239  007F               	dw	127
   195  00F23B  0042               	dw	66
   196  00F23D  0010               	dw	16
   197  00F23F  0084               	dw	132
   198  00F241  0010               	dw	16
   199  00F243  0000               	dw	0
   200  00F245  000F               	dw	15
   201  00F247  0000               	dw	0
   202  00F249  0000               	dw	0
   203  00F24B  000C               	dw	12
   204  00F24D  001C               	dw	28
   205  00F24F  0000               	dw	0
   206  00F251  0022               	dw	34
   207  00F253  0010               	dw	16
   208  00F255  0022               	dw	34
   209  00F257  0008               	dw	8
   210  00F259  0022               	dw	34
   211  00F25B  0006               	dw	6
   212  00F25D  001C               	dw	28
   213  00F25F  0001               	dw	1
   214  00F261  00C0               	dw	192
   215  00F263  0000               	dw	0
   216  00F265  0020               	dw	32
   217  00F267  000E               	dw	14
   218  00F269  0018               	dw	24
   219  00F26B  0011               	dw	17
   220  00F26D  0004               	dw	4
   221  00F26F  0011               	dw	17
   222  00F271  0002               	dw	2
   223  00F273  0011               	dw	17
   224  00F275  0000               	dw	0
   225  00F277  000E               	dw	14
   226  00F279  0000               	dw	0
   227  00F27B  0000               	dw	0
   228  00F27D  000B               	dw	11
   229  00F27F  0000               	dw	0
   230  00F281  0000               	dw	0
   231  00F283  0000               	dw	0
   232  00F285  000E               	dw	14
   233  00F287  001C               	dw	28
   234  00F289  0011               	dw	17
   235  00F28B  00A2               	dw	162
   236  00F28D  0010               	dw	16
   237  00F28F  00C2               	dw	194
   238  00F291  0010               	dw	16
   239  00F293  0022               	dw	34
   240  00F295  0011               	dw	17
   241  00F297  001C               	dw	28
   242  00F299  000A               	dw	10
   243  00F29B  0000               	dw	0
   244  00F29D  000C               	dw	12
   245  00F29F  0000               	dw	0
   246  00F2A1  000C               	dw	12
   247  00F2A3  0000               	dw	0
   248  00F2A5  0012               	dw	18
   249  00F2A7  0000               	dw	0
   250  00F2A9  0000               	dw	0
   251  00F2AB  0003               	dw	3
   252  00F2AD  0000               	dw	0
   253  00F2AF  0000               	dw	0
   254  00F2B1  001E               	dw	30
   255  00F2B3  0000               	dw	0
   256  00F2B5  0000               	dw	0
   257  00F2B7  0000               	dw	0
   258  00F2B9  0006               	dw	6
   259  00F2BB  0000               	dw	0
   260  00F2BD  0000               	dw	0
   261  00F2BF  0000               	dw	0
   262  00F2C1  0000               	dw	0
   263  00F2C3  00E0               	dw	224
   264  00F2C5  001F               	dw	31
   265  00F2C7  001C               	dw	28
   266  00F2C9  0060               	dw	96
   267  00F2CB  0002               	dw	2
   268  00F2CD  0080               	dw	128
   269  00F2CF  0000               	dw	0
   270  00F2D1  0000               	dw	0
   271  00F2D3  0004               	dw	4
   272  00F2D5  0000               	dw	0
   273  00F2D7  0000               	dw	0
   274  00F2D9  0006               	dw	6
   275  00F2DB  00C0               	dw	192
   276  00F2DD  00F8               	dw	248
   277  00F2DF  003F               	dw	63
   278  00F2E1  0000               	dw	0
   279  00F2E3  0000               	dw	0
   280  00F2E5  0006               	dw	6
   281  00F2E7  0024               	dw	36
   282  00F2E9  0000               	dw	0
   283  00F2EB  0018               	dw	24
   284  00F2ED  0000               	dw	0
   285  00F2EF  007E               	dw	126
   286  00F2F1  0000               	dw	0
   287  00F2F3  0018               	dw	24
   288  00F2F5  0000               	dw	0
   289  00F2F7  0024               	dw	36
   290  00F2F9  0000               	dw	0
   291  00F2FB  0000               	dw	0
   292  00F2FD  0000               	dw	0
   293  00F2FF  0009               	dw	9
   294  00F301  0000               	dw	0
   295  00F303  0000               	dw	0
   296  00F305  0080               	dw	128
   297  00F307  0000               	dw	0
   298  00F309  0080               	dw	128
   299  00F30B  0000               	dw	0
   300  00F30D  0080               	dw	128
   301  00F30F  0000               	dw	0
   302  00F311  00F0               	dw	240
   303  00F313  0007               	dw	7
   304  00F315  0080               	dw	128
   305  00F317  0000               	dw	0
   306  00F319  0080               	dw	128
   307  00F31B  0000               	dw	0
   308  00F31D  0080               	dw	128
   309  00F31F  0000               	dw	0
   310  00F321  0000               	dw	0
   311  00F323  0000               	dw	0
   312  00F325  0004               	dw	4
   313  00F327  0000               	dw	0
   314  00F329  0000               	dw	0
   315  00F32B  0000               	dw	0
   316  00F32D  0060               	dw	96
   317  00F32F  0000               	dw	0
   318  00F331  0018               	dw	24
   319  00F333  0000               	dw	0
   320  00F335  0000               	dw	0
   321  00F337  0005               	dw	5
   322  00F339  0000               	dw	0
   323  00F33B  0001               	dw	1
   324  00F33D  0000               	dw	0
   325  00F33F  0001               	dw	1
   326  00F341  0000               	dw	0
   327  00F343  0001               	dw	1
   328  00F345  0000               	dw	0
   329  00F347  0001               	dw	1
   330  00F349  0000               	dw	0
   331  00F34B  0000               	dw	0
   332  00F34D  0004               	dw	4
   333  00F34F  0000               	dw	0
   334  00F351  0000               	dw	0
   335  00F353  0000               	dw	0
   336  00F355  0018               	dw	24
   337  00F357  0000               	dw	0
   338  00F359  0018               	dw	24
   339  00F35B  0000               	dw	0
   340  00F35D  0000               	dw	0
   341  00F35F  0008               	dw	8
   342  00F361  0000               	dw	0
   343  00F363  0000               	dw	0
   344  00F365  0000               	dw	0
   345  00F367  0040               	dw	64
   346  00F369  0000               	dw	0
   347  00F36B  0038               	dw	56
   348  00F36D  0000               	dw	0
   349  00F36F  0007               	dw	7
   350  00F371  00E0               	dw	224
   351  00F373  0000               	dw	0
   352  00F375  001C               	dw	28
   353  00F377  0000               	dw	0
   354  00F379  0002               	dw	2
   355  00F37B  0000               	dw	0
   356  00F37D  0000               	dw	0
   357  00F37F  0000               	dw	0
   358  00F381  0009               	dw	9
   359  00F383  00F8               	dw	248
   360  00F385  0007               	dw	7
   361  00F387  0004               	dw	4
   362  00F389  0008               	dw	8
   363  00F38B  0002               	dw	2
   364  00F38D  0010               	dw	16
   365  00F38F  0002               	dw	2
   366  00F391  0010               	dw	16
   367  00F393  0002               	dw	2
   368  00F395  0010               	dw	16
   369  00F397  0002               	dw	2
   370  00F399  0010               	dw	16
   371  00F39B  0004               	dw	4
   372  00F39D  0008               	dw	8
   373  00F39F  00F8               	dw	248
   374  00F3A1  0007               	dw	7
   375  00F3A3  0000               	dw	0
   376  00F3A5  0000               	dw	0
   377  00F3A7  0006               	dw	6
   378  00F3A9  0000               	dw	0
   379  00F3AB  0000               	dw	0
   380  00F3AD  0000               	dw	0
   381  00F3AF  0000               	dw	0
   382  00F3B1  0002               	dw	2
   383  00F3B3  0000               	dw	0
   384  00F3B5  0002               	dw	2
   385  00F3B7  0000               	dw	0
   386  00F3B9  00FE               	dw	254
   387  00F3BB  001F               	dw	31
   388  00F3BD  0000               	dw	0
   389  00F3BF  0000               	dw	0
   390  00F3C1  0009               	dw	9
   391  00F3C3  0018               	dw	24
   392  00F3C5  0010               	dw	16
   393  00F3C7  0004               	dw	4
   394  00F3C9  0018               	dw	24
   395  00F3CB  0002               	dw	2
   396  00F3CD  0014               	dw	20
   397  00F3CF  0002               	dw	2
   398  00F3D1  0012               	dw	18
   399  00F3D3  0002               	dw	2
   400  00F3D5  0011               	dw	17
   401  00F3D7  0082               	dw	130
   402  00F3D9  0010               	dw	16
   403  00F3DB  0044               	dw	68
   404  00F3DD  0010               	dw	16
   405  00F3DF  0038               	dw	56
   406  00F3E1  0010               	dw	16
   407  00F3E3  0000               	dw	0
   408  00F3E5  0000               	dw	0
   409  00F3E7  0009               	dw	9
   410  00F3E9  0008               	dw	8
   411  00F3EB  000C               	dw	12
   412  00F3ED  0004               	dw	4
   413  00F3EF  0010               	dw	16
   414  00F3F1  0002               	dw	2
   415  00F3F3  0010               	dw	16
   416  00F3F5  0042               	dw	66
   417  00F3F7  0010               	dw	16
   418  00F3F9  0042               	dw	66
   419  00F3FB  0010               	dw	16
   420  00F3FD  0044               	dw	68
   421  00F3FF  0010               	dw	16
   422  00F401  00B8               	dw	184
   423  00F403  0008               	dw	8
   424  00F405  0000               	dw	0
   425  00F407  0007               	dw	7
   426  00F409  0000               	dw	0
   427  00F40B  0000               	dw	0
   428  00F40D  0009               	dw	9
   429  00F40F  0000               	dw	0
   430  00F411  0002               	dw	2
   431  00F413  0000               	dw	0
   432  00F415  0003               	dw	3
   433  00F417  0080               	dw	128
   434  00F419  0002               	dw	2
   435  00F41B  0060               	dw	96
   436  00F41D  0002               	dw	2
   437  00F41F  0010               	dw	16
   438  00F421  0002               	dw	2
   439  00F423  0008               	dw	8
   440  00F425  0002               	dw	2
   441  00F427  00FE               	dw	254
   442  00F429  001F               	dw	31
   443  00F42B  0000               	dw	0
   444  00F42D  0002               	dw	2
   445  00F42F  0000               	dw	0
   446  00F431  0000               	dw	0
   447  00F433  0009               	dw	9
   448  00F435  0000               	dw	0
   449  00F437  0004               	dw	4
   450  00F439  0070               	dw	112
   451  00F43B  0008               	dw	8
   452  00F43D  002E               	dw	46
   453  00F43F  0010               	dw	16
   454  00F441  0022               	dw	34
   455  00F443  0010               	dw	16
   456  00F445  0022               	dw	34
   457  00F447  0010               	dw	16
   458  00F449  0022               	dw	34
   459  00F44B  0010               	dw	16
   460  00F44D  0042               	dw	66
   461  00F44F  0008               	dw	8
   462  00F451  0082               	dw	130
   463  00F453  0007               	dw	7
   464  00F455  0000               	dw	0
   465  00F457  0000               	dw	0
   466  00F459  0009               	dw	9
   467  00F45B  0000               	dw	0
   468  00F45D  0000               	dw	0
   469  00F45F  0000               	dw	0
   470  00F461  0007               	dw	7
   471  00F463  00C0               	dw	192
   472  00F465  0008               	dw	8
   473  00F467  0060               	dw	96
   474  00F469  0010               	dw	16
   475  00F46B  0058               	dw	88
   476  00F46D  0010               	dw	16
   477  00F46F  0044               	dw	68
   478  00F471  0010               	dw	16
   479  00F473  0082               	dw	130
   480  00F475  0008               	dw	8
   481  00F477  0000               	dw	0
   482  00F479  0007               	dw	7
   483  00F47B  0000               	dw	0
   484  00F47D  0000               	dw	0
   485  00F47F  0009               	dw	9
   486  00F481  0000               	dw	0
   487  00F483  0000               	dw	0
   488  00F485  0002               	dw	2
   489  00F487  0010               	dw	16
   490  00F489  0002               	dw	2
   491  00F48B  000C               	dw	12
   492  00F48D  0002               	dw	2
   493  00F48F  0003               	dw	3
   494  00F491  00C2               	dw	194
   495  00F493  0000               	dw	0
   496  00F495  0032               	dw	50
   497  00F497  0000               	dw	0
   498  00F499  000E               	dw	14
   499  00F49B  0000               	dw	0
   500  00F49D  0002               	dw	2
   501  00F49F  0000               	dw	0
   502  00F4A1  0000               	dw	0
   503  00F4A3  0000               	dw	0
   504  00F4A5  0009               	dw	9
   505  00F4A7  0000               	dw	0
   506  00F4A9  0007               	dw	7
   507  00F4AB  0098               	dw	152
   508  00F4AD  0008               	dw	8
   509  00F4AF  0064               	dw	100
   510  00F4B1  0010               	dw	16
   511  00F4B3  0042               	dw	66
   512  00F4B5  0010               	dw	16
   513  00F4B7  0042               	dw	66
   514  00F4B9  0010               	dw	16
   515  00F4BB  0064               	dw	100
   516  00F4BD  0010               	dw	16
   517  00F4BF  0098               	dw	152
   518  00F4C1  0008               	dw	8
   519  00F4C3  0000               	dw	0
   520  00F4C5  0007               	dw	7
   521  00F4C7  0000               	dw	0
   522  00F4C9  0000               	dw	0
   523  00F4CB  0009               	dw	9
   524  00F4CD  0000               	dw	0
   525  00F4CF  0000               	dw	0
   526  00F4D1  0038               	dw	56
   527  00F4D3  0000               	dw	0
   528  00F4D5  0044               	dw	68
   529  00F4D7  0010               	dw	16
   530  00F4D9  0082               	dw	130
   531  00F4DB  0008               	dw	8
   532  00F4DD  0082               	dw	130
   533  00F4DF  0004               	dw	4
   534  00F4E1  0082               	dw	130
   535  00F4E3  0003               	dw	3
   536  00F4E5  0084               	dw	132
   537  00F4E7  0000               	dw	0
   538  00F4E9  0078               	dw	120
   539  00F4EB  0000               	dw	0
   540  00F4ED  0000               	dw	0
   541  00F4EF  0000               	dw	0
   542  00F4F1  0004               	dw	4
   543  00F4F3  0000               	dw	0
   544  00F4F5  0000               	dw	0
   545  00F4F7  0030               	dw	48
   546  00F4F9  0018               	dw	24
   547  00F4FB  0030               	dw	48
   548  00F4FD  0018               	dw	24
   549  00F4FF  0000               	dw	0
   550  00F501  0000               	dw	0
   551  00F503  0004               	dw	4
   552  00F505  0000               	dw	0
   553  00F507  0000               	dw	0
   554  00F509  0030               	dw	48
   555  00F50B  0060               	dw	96
   556  00F50D  0030               	dw	48
   557  00F50F  0018               	dw	24
   558  00F511  0000               	dw	0
   559  00F513  0000               	dw	0
   560  00F515  000A               	dw	10
   561  00F517  0000               	dw	0
   562  00F519  0000               	dw	0
   563  00F51B  0080               	dw	128
   564  00F51D  0000               	dw	0
   565  00F51F  0080               	dw	128
   566  00F521  0000               	dw	0
   567  00F523  0040               	dw	64
   568  00F525  0001               	dw	1
   569  00F527  0020               	dw	32
   570  00F529  0002               	dw	2
   571  00F52B  0020               	dw	32
   572  00F52D  0002               	dw	2
   573  00F52F  0010               	dw	16
   574  00F531  0004               	dw	4
   575  00F533  0010               	dw	16
   576  00F535  0004               	dw	4
   577  00F537  0008               	dw	8
   578  00F539  0008               	dw	8
   579  00F53B  0000               	dw	0
   580  00F53D  0000               	dw	0
   581  00F53F  000A               	dw	10
   582  00F541  0000               	dw	0
   583  00F543  0000               	dw	0
   584  00F545  0020               	dw	32
   585  00F547  0001               	dw	1
   586  00F549  0020               	dw	32
   587  00F54B  0001               	dw	1
   588  00F54D  0020               	dw	32
   589  00F54F  0001               	dw	1
   590  00F551  0020               	dw	32
   591  00F553  0001               	dw	1
   592  00F555  0020               	dw	32
   593  00F557  0001               	dw	1
   594  00F559  0020               	dw	32
   595  00F55B  0001               	dw	1
   596  00F55D  0020               	dw	32
   597  00F55F  0001               	dw	1
   598  00F561  0020               	dw	32
   599  00F563  0001               	dw	1
   600  00F565  0000               	dw	0
   601  00F567  0000               	dw	0
   602  00F569  000A               	dw	10
   603  00F56B  0000               	dw	0
   604  00F56D  0000               	dw	0
   605  00F56F  0008               	dw	8
   606  00F571  0008               	dw	8
   607  00F573  0010               	dw	16
   608  00F575  0004               	dw	4
   609  00F577  0010               	dw	16
   610  00F579  0004               	dw	4
   611  00F57B  0020               	dw	32
   612  00F57D  0002               	dw	2
   613  00F57F  0020               	dw	32
   614  00F581  0002               	dw	2
   615  00F583  0040               	dw	64
   616  00F585  0001               	dw	1
   617  00F587  0080               	dw	128
   618  00F589  0000               	dw	0
   619  00F58B  0080               	dw	128
   620  00F58D  0000               	dw	0
   621  00F58F  0000               	dw	0
   622  00F591  0000               	dw	0
   623  00F593  0008               	dw	8
   624  00F595  0000               	dw	0
   625  00F597  0000               	dw	0
   626  00F599  000C               	dw	12
   627  00F59B  0000               	dw	0
   628  00F59D  0082               	dw	130
   629  00F59F  0001               	dw	1
   630  00F5A1  0042               	dw	66
   631  00F5A3  0002               	dw	2
   632  00F5A5  0022               	dw	34
   633  00F5A7  001A               	dw	26
   634  00F5A9  0022               	dw	34
   635  00F5AB  001A               	dw	26
   636  00F5AD  009C               	dw	156
   637  00F5AF  0001               	dw	1
   638  00F5B1  0000               	dw	0
   639  00F5B3  0000               	dw	0
   640  00F5B5  000E               	dw	14
   641  00F5B7  0000               	dw	0
   642  00F5B9  0000               	dw	0
   643  00F5BB  00F0               	dw	240
   644  00F5BD  0003               	dw	3
   645  00F5BF  0008               	dw	8
   646  00F5C1  0004               	dw	4
   647  00F5C3  0004               	dw	4
   648  00F5C5  0008               	dw	8
   649  00F5C7  00C2               	dw	194
   650  00F5C9  0011               	dw	17
   651  00F5CB  0022               	dw	34
   652  00F5CD  0012               	dw	18
   653  00F5CF  0012               	dw	18
   654  00F5D1  0012               	dw	18
   655  00F5D3  0012               	dw	18
   656  00F5D5  0012               	dw	18
   657  00F5D7  00E2               	dw	226
   658  00F5D9  0011               	dw	17
   659  00F5DB  0012               	dw	18
   660  00F5DD  0012               	dw	18
   661  00F5DF  0004               	dw	4
   662  00F5E1  0012               	dw	18
   663  00F5E3  0008               	dw	8
   664  00F5E5  0009               	dw	9
   665  00F5E7  00F0               	dw	240
   666  00F5E9  0004               	dw	4
   667  00F5EB  0000               	dw	0
   668  00F5ED  0000               	dw	0
   669  00F5EF  000D               	dw	13
   670  00F5F1  0000               	dw	0
   671  00F5F3  0000               	dw	0
   672  00F5F5  0000               	dw	0
   673  00F5F7  0010               	dw	16
   674  00F5F9  0000               	dw	0
   675  00F5FB  000E               	dw	14
   676  00F5FD  0080               	dw	128
   677  00F5FF  0001               	dw	1
   678  00F601  0060               	dw	96
   679  00F603  0001               	dw	1
   680  00F605  001C               	dw	28
   681  00F607  0001               	dw	1
   682  00F609  0002               	dw	2
   683  00F60B  0001               	dw	1
   684  00F60D  001C               	dw	28
   685  00F60F  0001               	dw	1
   686  00F611  0060               	dw	96
   687  00F613  0001               	dw	1
   688  00F615  0080               	dw	128
   689  00F617  0001               	dw	1
   690  00F619  0000               	dw	0
   691  00F61B  000E               	dw	14
   692  00F61D  0000               	dw	0
   693  00F61F  0010               	dw	16
   694  00F621  0000               	dw	0
   695  00F623  0000               	dw	0
   696  00F625  0009               	dw	9
   697  00F627  0000               	dw	0
   698  00F629  0000               	dw	0
   699  00F62B  0000               	dw	0
   700  00F62D  0000               	dw	0
   701  00F62F  00FE               	dw	254
   702  00F631  001F               	dw	31
   703  00F633  0042               	dw	66
   704  00F635  0010               	dw	16
   705  00F637  0042               	dw	66
   706  00F639  0010               	dw	16
   707  00F63B  0064               	dw	100
   708  00F63D  0010               	dw	16
   709  00F63F  0098               	dw	152
   710  00F641  0008               	dw	8
   711  00F643  0000               	dw	0
   712  00F645  0007               	dw	7
   713  00F647  0000               	dw	0
   714  00F649  0000               	dw	0
   715  00F64B  000D               	dw	13
   716  00F64D  0000               	dw	0
   717  00F64F  0000               	dw	0
   718  00F651  00F0               	dw	240
   719  00F653  0003               	dw	3
   720  00F655  0008               	dw	8
   721  00F657  0004               	dw	4
   722  00F659  0004               	dw	4
   723  00F65B  0008               	dw	8
   724  00F65D  0002               	dw	2
   725  00F65F  0010               	dw	16
   726  00F661  0002               	dw	2
   727  00F663  0010               	dw	16
   728  00F665  0002               	dw	2
   729  00F667  0010               	dw	16
   730  00F669  0002               	dw	2
   731  00F66B  0010               	dw	16
   732  00F66D  0002               	dw	2
   733  00F66F  0010               	dw	16
   734  00F671  0004               	dw	4
   735  00F673  0008               	dw	8
   736  00F675  0004               	dw	4
   737  00F677  0008               	dw	8
   738  00F679  0008               	dw	8
   739  00F67B  0004               	dw	4
   740  00F67D  0000               	dw	0
   741  00F67F  0000               	dw	0
   742  00F681  000C               	dw	12
   743  00F683  0000               	dw	0
   744  00F685  0000               	dw	0
   745  00F687  0000               	dw	0
   746  00F689  0000               	dw	0
   747  00F68B  00FE               	dw	254
   748  00F68D  001F               	dw	31
   749  00F68F  0002               	dw	2
   750  00F691  0010               	dw	16
   751  00F693  0002               	dw	2
   752  00F695  0010               	dw	16
   753  00F697  0002               	dw	2
   754  00F699  0010               	dw	16
   755  00F69B  0002               	dw	2
   756  00F69D  0010               	dw	16
   757  00F69F  0002               	dw	2
   758  00F6A1  0010               	dw	16
   759  00F6A3  0004               	dw	4
   760  00F6A5  0008               	dw	8
   761  00F6A7  0008               	dw	8
   762  00F6A9  0004               	dw	4
   763  00F6AB  00F0               	dw	240
   764  00F6AD  0003               	dw	3
   765  00F6AF  0000               	dw	0
   766  00F6B1  0000               	dw	0
   767  00F6B3  0009               	dw	9
   768  00F6B5  0000               	dw	0
   769  00F6B7  0000               	dw	0
   770  00F6B9  0000               	dw	0
   771  00F6BB  0000               	dw	0
   772  00F6BD  00FE               	dw	254
   773  00F6BF  001F               	dw	31
   774  00F6C1  0042               	dw	66
   775  00F6C3  0010               	dw	16
   776  00F6C5  0042               	dw	66
   777  00F6C7  0010               	dw	16
   778  00F6C9  0042               	dw	66
   779  00F6CB  0010               	dw	16
   780  00F6CD  0042               	dw	66
   781  00F6CF  0010               	dw	16
   782  00F6D1  0042               	dw	66
   783  00F6D3  0010               	dw	16
   784  00F6D5  0000               	dw	0
   785  00F6D7  0000               	dw	0
   786  00F6D9  0008               	dw	8
   787  00F6DB  0000               	dw	0
   788  00F6DD  0000               	dw	0
   789  00F6DF  0000               	dw	0
   790  00F6E1  0000               	dw	0
   791  00F6E3  00FE               	dw	254
   792  00F6E5  001F               	dw	31
   793  00F6E7  0042               	dw	66
   794  00F6E9  0000               	dw	0
   795  00F6EB  0042               	dw	66
   796  00F6ED  0000               	dw	0
   797  00F6EF  0042               	dw	66
   798  00F6F1  0000               	dw	0
   799  00F6F3  0042               	dw	66
   800  00F6F5  0000               	dw	0
   801  00F6F7  0000               	dw	0
   802  00F6F9  0000               	dw	0
   803  00F6FB  000E               	dw	14
   804  00F6FD  0000               	dw	0
   805  00F6FF  0000               	dw	0
   806  00F701  00F0               	dw	240
   807  00F703  0003               	dw	3
   808  00F705  0008               	dw	8
   809  00F707  0004               	dw	4
   810  00F709  0004               	dw	4
   811  00F70B  0008               	dw	8
   812  00F70D  0002               	dw	2
   813  00F70F  0010               	dw	16
   814  00F711  0002               	dw	2
   815  00F713  0010               	dw	16
   816  00F715  0002               	dw	2
   817  00F717  0010               	dw	16
   818  00F719  0002               	dw	2
   819  00F71B  0010               	dw	16
   820  00F71D  0082               	dw	130
   821  00F71F  0010               	dw	16
   822  00F721  0084               	dw	132
   823  00F723  0010               	dw	16
   824  00F725  0084               	dw	132
   825  00F727  0008               	dw	8
   826  00F729  0088               	dw	136
   827  00F72B  0004               	dw	4
   828  00F72D  0080               	dw	128
   829  00F72F  0003               	dw	3
   830  00F731  0000               	dw	0
   831  00F733  0000               	dw	0
   832  00F735  000A               	dw	10
   833  00F737  0000               	dw	0
   834  00F739  0000               	dw	0
   835  00F73B  0000               	dw	0
   836  00F73D  0000               	dw	0
   837  00F73F  00FE               	dw	254
   838  00F741  001F               	dw	31
   839  00F743  0040               	dw	64
   840  00F745  0000               	dw	0
   841  00F747  0040               	dw	64
   842  00F749  0000               	dw	0
   843  00F74B  0040               	dw	64
   844  00F74D  0000               	dw	0
   845  00F74F  0040               	dw	64
   846  00F751  0000               	dw	0
   847  00F753  0040               	dw	64
   848  00F755  0000               	dw	0
   849  00F757  00FE               	dw	254
   850  00F759  001F               	dw	31
   851  00F75B  0000               	dw	0
   852  00F75D  0000               	dw	0
   853  00F75F  0004               	dw	4
   854  00F761  0000               	dw	0
   855  00F763  0000               	dw	0
   856  00F765  0000               	dw	0
   857  00F767  0000               	dw	0
   858  00F769  00FE               	dw	254
   859  00F76B  001F               	dw	31
   860  00F76D  0000               	dw	0
   861  00F76F  0000               	dw	0
   862  00F771  0007               	dw	7
   863  00F773  0000               	dw	0
   864  00F775  0000               	dw	0
   865  00F777  0000               	dw	0
   866  00F779  0008               	dw	8
   867  00F77B  0000               	dw	0
   868  00F77D  0010               	dw	16
   869  00F77F  0000               	dw	0
   870  00F781  0010               	dw	16
   871  00F783  0000               	dw	0
   872  00F785  0008               	dw	8
   873  00F787  00FE               	dw	254
   874  00F789  0007               	dw	7
   875  00F78B  0000               	dw	0
   876  00F78D  0000               	dw	0
   877  00F78F  0009               	dw	9
   878  00F791  0000               	dw	0
   879  00F793  0000               	dw	0
   880  00F795  0000               	dw	0
   881  00F797  0000               	dw	0
   882  00F799  00FE               	dw	254
   883  00F79B  001F               	dw	31
   884  00F79D  0060               	dw	96
   885  00F79F  0000               	dw	0
   886  00F7A1  0090               	dw	144
   887  00F7A3  0001               	dw	1
   888  00F7A5  0008               	dw	8
   889  00F7A7  0002               	dw	2
   890  00F7A9  0004               	dw	4
   891  00F7AB  000C               	dw	12
   892  00F7AD  0002               	dw	2
   893  00F7AF  0010               	dw	16
   894  00F7B1  0000               	dw	0
   895  00F7B3  0000               	dw	0
   896  00F7B5  0008               	dw	8
   897  00F7B7  0000               	dw	0
   898  00F7B9  0000               	dw	0
   899  00F7BB  0000               	dw	0
   900  00F7BD  0000               	dw	0
   901  00F7BF  00FE               	dw	254
   902  00F7C1  001F               	dw	31
   903  00F7C3  0000               	dw	0
   904  00F7C5  0010               	dw	16
   905  00F7C7  0000               	dw	0
   906  00F7C9  0010               	dw	16
   907  00F7CB  0000               	dw	0
   908  00F7CD  0010               	dw	16
   909  00F7CF  0000               	dw	0
   910  00F7D1  0010               	dw	16
   911  00F7D3  0000               	dw	0
   912  00F7D5  0000               	dw	0
   913  00F7D7  000F               	dw	15
   914  00F7D9  0000               	dw	0
   915  00F7DB  0000               	dw	0
   916  00F7DD  0000               	dw	0
   917  00F7DF  001C               	dw	28
   918  00F7E1  00F8               	dw	248
   919  00F7E3  0003               	dw	3
   920  00F7E5  0006               	dw	6
   921  00F7E7  0000               	dw	0
   922  00F7E9  0038               	dw	56
   923  00F7EB  0000               	dw	0
   924  00F7ED  00C0               	dw	192
   925  00F7EF  0001               	dw	1
   926  00F7F1  0000               	dw	0
   927  00F7F3  000E               	dw	14
   928  00F7F5  0000               	dw	0
   929  00F7F7  0010               	dw	16
   930  00F7F9  0000               	dw	0
   931  00F7FB  000E               	dw	14
   932  00F7FD  00C0               	dw	192
   933  00F7FF  0001               	dw	1
   934  00F801  0038               	dw	56
   935  00F803  0000               	dw	0
   936  00F805  0006               	dw	6
   937  00F807  0000               	dw	0
   938  00F809  00F8               	dw	248
   939  00F80B  0003               	dw	3
   940  00F80D  0000               	dw	0
   941  00F80F  001C               	dw	28
   942  00F811  0000               	dw	0
   943  00F813  0000               	dw	0
   944  00F815  000B               	dw	11
   945  00F817  0000               	dw	0
   946  00F819  0000               	dw	0
   947  00F81B  0000               	dw	0
   948  00F81D  0000               	dw	0
   949  00F81F  00FE               	dw	254
   950  00F821  001F               	dw	31
   951  00F823  0008               	dw	8
   952  00F825  0000               	dw	0
   953  00F827  0030               	dw	48
   954  00F829  0000               	dw	0
   955  00F82B  0040               	dw	64
   956  00F82D  0000               	dw	0
   957  00F82F  0080               	dw	128
   958  00F831  0000               	dw	0
   959  00F833  0000               	dw	0
   960  00F835  0003               	dw	3
   961  00F837  0000               	dw	0
   962  00F839  0004               	dw	4
   963  00F83B  00FE               	dw	254
   964  00F83D  001F               	dw	31
   965  00F83F  0000               	dw	0
   966  00F841  0000               	dw	0
   967  00F843  000E               	dw	14
   968  00F845  0000               	dw	0
   969  00F847  0000               	dw	0
   970  00F849  00F0               	dw	240
   971  00F84B  0003               	dw	3
   972  00F84D  0008               	dw	8
   973  00F84F  0004               	dw	4
   974  00F851  0004               	dw	4
   975  00F853  0008               	dw	8
   976  00F855  0002               	dw	2
   977  00F857  0010               	dw	16
   978  00F859  0002               	dw	2
   979  00F85B  0010               	dw	16
   980  00F85D  0002               	dw	2
   981  00F85F  0010               	dw	16
   982  00F861  0002               	dw	2
   983  00F863  0010               	dw	16
   984  00F865  0002               	dw	2
   985  00F867  0010               	dw	16
   986  00F869  0002               	dw	2
   987  00F86B  0010               	dw	16
   988  00F86D  0004               	dw	4
   989  00F86F  0008               	dw	8
   990  00F871  0008               	dw	8
   991  00F873  0004               	dw	4
   992  00F875  00F0               	dw	240
   993  00F877  0003               	dw	3
   994  00F879  0000               	dw	0
   995  00F87B  0000               	dw	0
   996  00F87D  0009               	dw	9
   997  00F87F  0000               	dw	0
   998  00F881  0000               	dw	0
   999  00F883  0000               	dw	0
  1000  00F885  0000               	dw	0
  1001  00F887  00FE               	dw	254
  1002  00F889  001F               	dw	31
  1003  00F88B  0042               	dw	66
  1004  00F88D  0000               	dw	0
  1005  00F88F  0042               	dw	66
  1006  00F891  0000               	dw	0
  1007  00F893  0042               	dw	66
  1008  00F895  0000               	dw	0
  1009  00F897  0024               	dw	36
  1010  00F899  0000               	dw	0
  1011  00F89B  0018               	dw	24
  1012  00F89D  0000               	dw	0
  1013  00F89F  0000               	dw	0
  1014  00F8A1  0000               	dw	0
  1015  00F8A3  000E               	dw	14
  1016  00F8A5  0000               	dw	0
  1017  00F8A7  0000               	dw	0
  1018  00F8A9  00F0               	dw	240
  1019  00F8AB  0003               	dw	3
  1020  00F8AD  0008               	dw	8
  1021  00F8AF  0004               	dw	4
  1022  00F8B1  0004               	dw	4
  1023  00F8B3  0008               	dw	8
  1024  00F8B5  0002               	dw	2
  1025  00F8B7  0010               	dw	16
  1026  00F8B9  0002               	dw	2
  1027  00F8BB  0010               	dw	16
  1028  00F8BD  0002               	dw	2
  1029  00F8BF  0010               	dw	16
  1030  00F8C1  0002               	dw	2
  1031  00F8C3  0011               	dw	17
  1032  00F8C5  0002               	dw	2
  1033  00F8C7  0012               	dw	18
  1034  00F8C9  0002               	dw	2
  1035  00F8CB  000C               	dw	12
  1036  00F8CD  0004               	dw	4
  1037  00F8CF  0008               	dw	8
  1038  00F8D1  0008               	dw	8
  1039  00F8D3  0016               	dw	22
  1040  00F8D5  00F0               	dw	240
  1041  00F8D7  0021               	dw	33
  1042  00F8D9  0000               	dw	0
  1043  00F8DB  0000               	dw	0
  1044  00F8DD  000A               	dw	10
  1045  00F8DF  0000               	dw	0
  1046  00F8E1  0000               	dw	0
  1047  00F8E3  0000               	dw	0
  1048  00F8E5  0000               	dw	0
  1049  00F8E7  00FE               	dw	254
  1050  00F8E9  001F               	dw	31
  1051  00F8EB  0042               	dw	66
  1052  00F8ED  0000               	dw	0
  1053  00F8EF  00C2               	dw	194
  1054  00F8F1  0000               	dw	0
  1055  00F8F3  0042               	dw	66
  1056  00F8F5  0001               	dw	1
  1057  00F8F7  0042               	dw	66
  1058  00F8F9  0006               	dw	6
  1059  00F8FB  0024               	dw	36
  1060  00F8FD  0008               	dw	8
  1061  00F8FF  0018               	dw	24
  1062  00F901  0010               	dw	16
  1063  00F903  0000               	dw	0
  1064  00F905  0000               	dw	0
  1065  00F907  0008               	dw	8
  1066  00F909  0000               	dw	0
  1067  00F90B  0004               	dw	4
  1068  00F90D  0018               	dw	24
  1069  00F90F  0008               	dw	8
  1070  00F911  0024               	dw	36
  1071  00F913  0010               	dw	16
  1072  00F915  0042               	dw	66
  1073  00F917  0010               	dw	16
  1074  00F919  0042               	dw	66
  1075  00F91B  0010               	dw	16
  1076  00F91D  0084               	dw	132
  1077  00F91F  0008               	dw	8
  1078  00F921  0008               	dw	8
  1079  00F923  0007               	dw	7
  1080  00F925  0000               	dw	0
  1081  00F927  0000               	dw	0
  1082  00F929  0008               	dw	8
  1083  00F92B  0002               	dw	2
  1084  00F92D  0000               	dw	0
  1085  00F92F  0002               	dw	2
  1086  00F931  0000               	dw	0
  1087  00F933  0002               	dw	2
  1088  00F935  0000               	dw	0
  1089  00F937  00FE               	dw	254
  1090  00F939  001F               	dw	31
  1091  00F93B  0002               	dw	2
  1092  00F93D  0000               	dw	0
  1093  00F93F  0002               	dw	2
  1094  00F941  0000               	dw	0
  1095  00F943  0002               	dw	2
  1096  00F945  0000               	dw	0
  1097  00F947  0000               	dw	0
  1098  00F949  0000               	dw	0
  1099  00F94B  000A               	dw	10
  1100  00F94D  0000               	dw	0
  1101  00F94F  0000               	dw	0
  1102  00F951  0000               	dw	0
  1103  00F953  0000               	dw	0
  1104  00F955  00FE               	dw	254
  1105  00F957  0007               	dw	7
  1106  00F959  0000               	dw	0
  1107  00F95B  0008               	dw	8
  1108  00F95D  0000               	dw	0
  1109  00F95F  0010               	dw	16
  1110  00F961  0000               	dw	0
  1111  00F963  0010               	dw	16
  1112  00F965  0000               	dw	0
  1113  00F967  0010               	dw	16
  1114  00F969  0000               	dw	0
  1115  00F96B  0008               	dw	8
  1116  00F96D  00FE               	dw	254
  1117  00F96F  0007               	dw	7
  1118  00F971  0000               	dw	0
  1119  00F973  0000               	dw	0
  1120  00F975  000C               	dw	12
  1121  00F977  0002               	dw	2
  1122  00F979  0000               	dw	0
  1123  00F97B  001C               	dw	28
  1124  00F97D  0000               	dw	0
  1125  00F97F  0060               	dw	96
  1126  00F981  0000               	dw	0
  1127  00F983  0080               	dw	128
  1128  00F985  0001               	dw	1
  1129  00F987  0000               	dw	0
  1130  00F989  000E               	dw	14
  1131  00F98B  0000               	dw	0
  1132  00F98D  0010               	dw	16
  1133  00F98F  0000               	dw	0
  1134  00F991  000E               	dw	14
  1135  00F993  0080               	dw	128
  1136  00F995  0001               	dw	1
  1137  00F997  0060               	dw	96
  1138  00F999  0000               	dw	0
  1139  00F99B  001C               	dw	28
  1140  00F99D  0000               	dw	0
  1141  00F99F  0002               	dw	2
  1142  00F9A1  0000               	dw	0
  1143  00F9A3  0000               	dw	0
  1144  00F9A5  0000               	dw	0
  1145  00F9A7  000F               	dw	15
  1146  00F9A9  0000               	dw	0
  1147  00F9AB  0000               	dw	0
  1148  00F9AD  0006               	dw	6
  1149  00F9AF  0000               	dw	0
  1150  00F9B1  0078               	dw	120
  1151  00F9B3  0000               	dw	0
  1152  00F9B5  0080               	dw	128
  1153  00F9B7  0007               	dw	7
  1154  00F9B9  0000               	dw	0
  1155  00F9BB  0018               	dw	24
  1156  00F9BD  0080               	dw	128
  1157  00F9BF  0007               	dw	7
  1158  00F9C1  0078               	dw	120
  1159  00F9C3  0000               	dw	0
  1160  00F9C5  0006               	dw	6
  1161  00F9C7  0000               	dw	0
  1162  00F9C9  0078               	dw	120
  1163  00F9CB  0000               	dw	0
  1164  00F9CD  0080               	dw	128
  1165  00F9CF  0007               	dw	7
  1166  00F9D1  0000               	dw	0
  1167  00F9D3  0018               	dw	24
  1168  00F9D5  0080               	dw	128
  1169  00F9D7  0007               	dw	7
  1170  00F9D9  0078               	dw	120
  1171  00F9DB  0000               	dw	0
  1172  00F9DD  0006               	dw	6
  1173  00F9DF  0000               	dw	0
  1174  00F9E1  0000               	dw	0
  1175  00F9E3  0000               	dw	0
  1176  00F9E5  0009               	dw	9
  1177  00F9E7  0000               	dw	0
  1178  00F9E9  0000               	dw	0
  1179  00F9EB  0006               	dw	6
  1180  00F9ED  0018               	dw	24
  1181  00F9EF  0008               	dw	8
  1182  00F9F1  0004               	dw	4
  1183  00F9F3  0030               	dw	48
  1184  00F9F5  0003               	dw	3
  1185  00F9F7  00C0               	dw	192
  1186  00F9F9  0000               	dw	0
  1187  00F9FB  0030               	dw	48
  1188  00F9FD  0003               	dw	3
  1189  00F9FF  0008               	dw	8
  1190  00FA01  0004               	dw	4
  1191  00FA03  0006               	dw	6
  1192  00FA05  0018               	dw	24
  1193  00FA07  0000               	dw	0
  1194  00FA09  0000               	dw	0
  1195  00FA0B  000B               	dw	11
  1196  00FA0D  0000               	dw	0
  1197  00FA0F  0000               	dw	0
  1198  00FA11  0002               	dw	2
  1199  00FA13  0000               	dw	0
  1200  00FA15  0004               	dw	4
  1201  00FA17  0000               	dw	0
  1202  00FA19  0018               	dw	24
  1203  00FA1B  0000               	dw	0
  1204  00FA1D  0060               	dw	96
  1205  00FA1F  0000               	dw	0
  1206  00FA21  0080               	dw	128
  1207  00FA23  001F               	dw	31
  1208  00FA25  0060               	dw	96
  1209  00FA27  0000               	dw	0
  1210  00FA29  0018               	dw	24
  1211  00FA2B  0000               	dw	0
  1212  00FA2D  0004               	dw	4
  1213  00FA2F  0000               	dw	0
  1214  00FA31  0002               	dw	2
  1215  00FA33  0000               	dw	0
  1216  00FA35  0000               	dw	0
  1217  00FA37  0000               	dw	0
  1218  00FA39  0008               	dw	8
  1219  00FA3B  0002               	dw	2
  1220  00FA3D  0010               	dw	16
  1221  00FA3F  0002               	dw	2
  1222  00FA41  001C               	dw	28
  1223  00FA43  0002               	dw	2
  1224  00FA45  0013               	dw	19
  1225  00FA47  00C2               	dw	194
  1226  00FA49  0010               	dw	16
  1227  00FA4B  0032               	dw	50
  1228  00FA4D  0010               	dw	16
  1229  00FA4F  000E               	dw	14
  1230  00FA51  0010               	dw	16
  1231  00FA53  0002               	dw	2
  1232  00FA55  0010               	dw	16
  1233  00FA57  0000               	dw	0
  1234  00FA59  0000               	dw	0
  1235  00FA5B  0006               	dw	6
  1236  00FA5D  0000               	dw	0
  1237  00FA5F  0000               	dw	0
  1238  00FA61  0000               	dw	0
  1239  00FA63  0000               	dw	0
  1240  00FA65  00FE               	dw	254
  1241  00FA67  00FF               	dw	255
  1242  00FA69  0002               	dw	2
  1243  00FA6B  0080               	dw	128
  1244  00FA6D  0002               	dw	2
  1245  00FA6F  0080               	dw	128
  1246  00FA71  0000               	dw	0
  1247  00FA73  0000               	dw	0
  1248  00FA75  000A               	dw	10
  1249  00FA77  0002               	dw	2
  1250  00FA79  0000               	dw	0
  1251  00FA7B  000C               	dw	12
  1252  00FA7D  0000               	dw	0
  1253  00FA7F  0010               	dw	16
  1254  00FA81  0000               	dw	0
  1255  00FA83  0060               	dw	96
  1256  00FA85  0000               	dw	0
  1257  00FA87  0080               	dw	128
  1258  00FA89  0001               	dw	1
  1259  00FA8B  0000               	dw	0
  1260  00FA8D  0006               	dw	6
  1261  00FA8F  0000               	dw	0
  1262  00FA91  0008               	dw	8
  1263  00FA93  0000               	dw	0
  1264  00FA95  0030               	dw	48
  1265  00FA97  0000               	dw	0
  1266  00FA99  0040               	dw	64
  1267  00FA9B  0000               	dw	0
  1268  00FA9D  0000               	dw	0
  1269  00FA9F  0005               	dw	5
  1270  00FAA1  0000               	dw	0
  1271  00FAA3  0000               	dw	0
  1272  00FAA5  0002               	dw	2
  1273  00FAA7  0080               	dw	128
  1274  00FAA9  0002               	dw	2
  1275  00FAAB  0080               	dw	128
  1276  00FAAD  00FE               	dw	254
  1277  00FAAF  00FF               	dw	255
  1278  00FAB1  0000               	dw	0
  1279  00FAB3  0000               	dw	0
  1280  00FAB5  000B               	dw	11
  1281  00FAB7  0000               	dw	0
  1282  00FAB9  0000               	dw	0
  1283  00FABB  0000               	dw	0
  1284  00FABD  0002               	dw	2
  1285  00FABF  0080               	dw	128
  1286  00FAC1  0001               	dw	1
  1287  00FAC3  0070               	dw	112
  1288  00FAC5  0000               	dw	0
  1289  00FAC7  000C               	dw	12
  1290  00FAC9  0000               	dw	0
  1291  00FACB  0002               	dw	2
  1292  00FACD  0000               	dw	0
  1293  00FACF  000C               	dw	12
  1294  00FAD1  0000               	dw	0
  1295  00FAD3  0070               	dw	112
  1296  00FAD5  0000               	dw	0
  1297  00FAD7  0080               	dw	128
  1298  00FAD9  0001               	dw	1
  1299  00FADB  0000               	dw	0
  1300  00FADD  0002               	dw	2
  1301  00FADF  0000               	dw	0
  1302  00FAE1  0000               	dw	0
  1303  00FAE3  0009               	dw	9
  1304  00FAE5  0000               	dw	0
  1305  00FAE7  0040               	dw	64
  1306  00FAE9  0000               	dw	0
  1307  00FAEB  0040               	dw	64
  1308  00FAED  0000               	dw	0
  1309  00FAEF  0040               	dw	64
  1310  00FAF1  0000               	dw	0
  1311  00FAF3  0040               	dw	64
  1312  00FAF5  0000               	dw	0
  1313  00FAF7  0040               	dw	64
  1314  00FAF9  0000               	dw	0
  1315  00FAFB  0040               	dw	64
  1316  00FAFD  0000               	dw	0
  1317  00FAFF  0040               	dw	64
  1318  00FB01  0000               	dw	0
  1319  00FB03  0040               	dw	64
  1320  00FB05  0000               	dw	0
  1321  00FB07  0000               	dw	0
  1322  00FB09  0005               	dw	5
  1323  00FB0B  0000               	dw	0
  1324  00FB0D  0000               	dw	0
  1325  00FB0F  0000               	dw	0
  1326  00FB11  0000               	dw	0
  1327  00FB13  0002               	dw	2
  1328  00FB15  0000               	dw	0
  1329  00FB17  0004               	dw	4
  1330  00FB19  0000               	dw	0
  1331  00FB1B  0000               	dw	0
  1332  00FB1D  0000               	dw	0
  1333  00FB1F  000B               	dw	11
  1334  00FB21  0000               	dw	0
  1335  00FB23  0000               	dw	0
  1336  00FB25  00C0               	dw	192
  1337  00FB27  0007               	dw	7
  1338  00FB29  0020               	dw	32
  1339  00FB2B  0008               	dw	8
  1340  00FB2D  0010               	dw	16
  1341  00FB2F  0010               	dw	16
  1342  00FB31  0010               	dw	16
  1343  00FB33  0010               	dw	16
  1344  00FB35  0010               	dw	16
  1345  00FB37  0010               	dw	16
  1346  00FB39  0010               	dw	16
  1347  00FB3B  0010               	dw	16
  1348  00FB3D  0010               	dw	16
  1349  00FB3F  0010               	dw	16
  1350  00FB41  0020               	dw	32
  1351  00FB43  0008               	dw	8
  1352  00FB45  00F0               	dw	240
  1353  00FB47  001F               	dw	31
  1354  00FB49  0000               	dw	0
  1355  00FB4B  0000               	dw	0
  1356  00FB4D  000B               	dw	11
  1357  00FB4F  0000               	dw	0
  1358  00FB51  0000               	dw	0
  1359  00FB53  00FE               	dw	254
  1360  00FB55  001F               	dw	31
  1361  00FB57  0020               	dw	32
  1362  00FB59  0008               	dw	8
  1363  00FB5B  0010               	dw	16
  1364  00FB5D  0010               	dw	16
  1365  00FB5F  0010               	dw	16
  1366  00FB61  0010               	dw	16
  1367  00FB63  0010               	dw	16
  1368  00FB65  0010               	dw	16
  1369  00FB67  0010               	dw	16
  1370  00FB69  0010               	dw	16
  1371  00FB6B  0010               	dw	16
  1372  00FB6D  0010               	dw	16
  1373  00FB6F  0020               	dw	32
  1374  00FB71  0008               	dw	8
  1375  00FB73  00C0               	dw	192
  1376  00FB75  0007               	dw	7
  1377  00FB77  0000               	dw	0
  1378  00FB79  0000               	dw	0
  1379  00FB7B  000A               	dw	10
  1380  00FB7D  0000               	dw	0
  1381  00FB7F  0000               	dw	0
  1382  00FB81  00C0               	dw	192
  1383  00FB83  0007               	dw	7
  1384  00FB85  0020               	dw	32
  1385  00FB87  0008               	dw	8
  1386  00FB89  0010               	dw	16
  1387  00FB8B  0010               	dw	16
  1388  00FB8D  0010               	dw	16
  1389  00FB8F  0010               	dw	16
  1390  00FB91  0010               	dw	16
  1391  00FB93  0010               	dw	16
  1392  00FB95  0010               	dw	16
  1393  00FB97  0010               	dw	16
  1394  00FB99  0020               	dw	32
  1395  00FB9B  0008               	dw	8
  1396  00FB9D  0040               	dw	64
  1397  00FB9F  0004               	dw	4
  1398  00FBA1  0000               	dw	0
  1399  00FBA3  0000               	dw	0
  1400  00FBA5  000B               	dw	11
  1401  00FBA7  0000               	dw	0
  1402  00FBA9  0000               	dw	0
  1403  00FBAB  00C0               	dw	192
  1404  00FBAD  0007               	dw	7
  1405  00FBAF  0020               	dw	32
  1406  00FBB1  0008               	dw	8
  1407  00FBB3  0010               	dw	16
  1408  00FBB5  0010               	dw	16
  1409  00FBB7  0010               	dw	16
  1410  00FBB9  0010               	dw	16
  1411  00FBBB  0010               	dw	16
  1412  00FBBD  0010               	dw	16
  1413  00FBBF  0010               	dw	16
  1414  00FBC1  0010               	dw	16
  1415  00FBC3  0010               	dw	16
  1416  00FBC5  0010               	dw	16
  1417  00FBC7  0020               	dw	32
  1418  00FBC9  0008               	dw	8
  1419  00FBCB  00FE               	dw	254
  1420  00FBCD  001F               	dw	31
  1421  00FBCF  0000               	dw	0
  1422  00FBD1  0000               	dw	0
  1423  00FBD3  000A               	dw	10
  1424  00FBD5  0000               	dw	0
  1425  00FBD7  0000               	dw	0
  1426  00FBD9  00C0               	dw	192
  1427  00FBDB  0007               	dw	7
  1428  00FBDD  0020               	dw	32
  1429  00FBDF  0009               	dw	9
  1430  00FBE1  0010               	dw	16
  1431  00FBE3  0011               	dw	17
  1432  00FBE5  0010               	dw	16
  1433  00FBE7  0011               	dw	17
  1434  00FBE9  0010               	dw	16
  1435  00FBEB  0011               	dw	17
  1436  00FBED  0010               	dw	16
  1437  00FBEF  0011               	dw	17
  1438  00FBF1  0020               	dw	32
  1439  00FBF3  0009               	dw	9
  1440  00FBF5  00C0               	dw	192
  1441  00FBF7  0005               	dw	5
  1442  00FBF9  0000               	dw	0
  1443  00FBFB  0000               	dw	0
  1444  00FBFD  0006               	dw	6
  1445  00FBFF  0000               	dw	0
  1446  00FC01  0000               	dw	0
  1447  00FC03  0010               	dw	16
  1448  00FC05  0000               	dw	0
  1449  00FC07  00FC               	dw	252
  1450  00FC09  001F               	dw	31
  1451  00FC0B  0012               	dw	18
  1452  00FC0D  0000               	dw	0
  1453  00FC0F  0012               	dw	18
  1454  00FC11  0000               	dw	0
  1455  00FC13  0000               	dw	0
  1456  00FC15  0000               	dw	0
  1457  00FC17  000B               	dw	11
  1458  00FC19  0000               	dw	0
  1459  00FC1B  0000               	dw	0
  1460  00FC1D  00C0               	dw	192
  1461  00FC1F  0027               	dw	39
  1462  00FC21  0020               	dw	32
  1463  00FC23  0048               	dw	72
  1464  00FC25  0010               	dw	16
  1465  00FC27  0090               	dw	144
  1466  00FC29  0010               	dw	16
  1467  00FC2B  0090               	dw	144
  1468  00FC2D  0010               	dw	16
  1469  00FC2F  0090               	dw	144
  1470  00FC31  0010               	dw	16
  1471  00FC33  0090               	dw	144
  1472  00FC35  0010               	dw	16
  1473  00FC37  0090               	dw	144
  1474  00FC39  0020               	dw	32
  1475  00FC3B  0048               	dw	72
  1476  00FC3D  00F0               	dw	240
  1477  00FC3F  003F               	dw	63
  1478  00FC41  0000               	dw	0
  1479  00FC43  0000               	dw	0
  1480  00FC45  000A               	dw	10
  1481  00FC47  0000               	dw	0
  1482  00FC49  0000               	dw	0
  1483  00FC4B  00FE               	dw	254
  1484  00FC4D  001F               	dw	31
  1485  00FC4F  0020               	dw	32
  1486  00FC51  0000               	dw	0
  1487  00FC53  0010               	dw	16
  1488  00FC55  0000               	dw	0
  1489  00FC57  0010               	dw	16
  1490  00FC59  0000               	dw	0
  1491  00FC5B  0010               	dw	16
  1492  00FC5D  0000               	dw	0
  1493  00FC5F  0010               	dw	16
  1494  00FC61  0000               	dw	0
  1495  00FC63  0020               	dw	32
  1496  00FC65  0000               	dw	0
  1497  00FC67  00C0               	dw	192
  1498  00FC69  001F               	dw	31
  1499  00FC6B  0000               	dw	0
  1500  00FC6D  0000               	dw	0
  1501  00FC6F  0003               	dw	3
  1502  00FC71  0000               	dw	0
  1503  00FC73  0000               	dw	0
  1504  00FC75  00F6               	dw	246
  1505  00FC77  001F               	dw	31
  1506  00FC79  0000               	dw	0
  1507  00FC7B  0000               	dw	0
  1508  00FC7D  0003               	dw	3
  1509  00FC7F  0000               	dw	0
  1510  00FC81  0080               	dw	128
  1511  00FC83  00F6               	dw	246
  1512  00FC85  007F               	dw	127
  1513  00FC87  0000               	dw	0
  1514  00FC89  0000               	dw	0
  1515  00FC8B  0008               	dw	8
  1516  00FC8D  0000               	dw	0
  1517  00FC8F  0000               	dw	0
  1518  00FC91  00FE               	dw	254
  1519  00FC93  001F               	dw	31
  1520  00FC95  0000               	dw	0
  1521  00FC97  0001               	dw	1
  1522  00FC99  0080               	dw	128
  1523  00FC9B  0002               	dw	2
  1524  00FC9D  0040               	dw	64
  1525  00FC9F  0004               	dw	4
  1526  00FCA1  0020               	dw	32
  1527  00FCA3  0008               	dw	8
  1528  00FCA5  0010               	dw	16
  1529  00FCA7  0010               	dw	16
  1530  00FCA9  0000               	dw	0
  1531  00FCAB  0000               	dw	0
  1532  00FCAD  0003               	dw	3
  1533  00FCAF  0000               	dw	0
  1534  00FCB1  0000               	dw	0
  1535  00FCB3  00FE               	dw	254
  1536  00FCB5  001F               	dw	31
  1537  00FCB7  0000               	dw	0
  1538  00FCB9  0000               	dw	0
  1539  00FCBB  000F               	dw	15
  1540  00FCBD  0000               	dw	0
  1541  00FCBF  0000               	dw	0
  1542  00FCC1  00F0               	dw	240
  1543  00FCC3  001F               	dw	31
  1544  00FCC5  0020               	dw	32
  1545  00FCC7  0000               	dw	0
  1546  00FCC9  0010               	dw	16
  1547  00FCCB  0000               	dw	0
  1548  00FCCD  0010               	dw	16
  1549  00FCCF  0000               	dw	0
  1550  00FCD1  0010               	dw	16
  1551  00FCD3  0000               	dw	0
  1552  00FCD5  0020               	dw	32
  1553  00FCD7  0000               	dw	0
  1554  00FCD9  00C0               	dw	192
  1555  00FCDB  001F               	dw	31
  1556  00FCDD  0020               	dw	32
  1557  00FCDF  0000               	dw	0
  1558  00FCE1  0010               	dw	16
  1559  00FCE3  0000               	dw	0
  1560  00FCE5  0010               	dw	16
  1561  00FCE7  0000               	dw	0
  1562  00FCE9  0010               	dw	16
  1563  00FCEB  0000               	dw	0
  1564  00FCED  0020               	dw	32
  1565  00FCEF  0000               	dw	0
  1566  00FCF1  00C0               	dw	192
  1567  00FCF3  001F               	dw	31
  1568  00FCF5  0000               	dw	0
  1569  00FCF7  0000               	dw	0
  1570  00FCF9  000A               	dw	10
  1571  00FCFB  0000               	dw	0
  1572  00FCFD  0000               	dw	0
  1573  00FCFF  00F0               	dw	240
  1574  00FD01  001F               	dw	31
  1575  00FD03  0020               	dw	32
  1576  00FD05  0000               	dw	0
  1577  00FD07  0010               	dw	16
  1578  00FD09  0000               	dw	0
  1579  00FD0B  0010               	dw	16
  1580  00FD0D  0000               	dw	0
  1581  00FD0F  0010               	dw	16
  1582  00FD11  0000               	dw	0
  1583  00FD13  0010               	dw	16
  1584  00FD15  0000               	dw	0
  1585  00FD17  0020               	dw	32
  1586  00FD19  0000               	dw	0
  1587  00FD1B  00C0               	dw	192
  1588  00FD1D  001F               	dw	31
  1589  00FD1F  0000               	dw	0
  1590  00FD21  0000               	dw	0
  1591  00FD23  000A               	dw	10
  1592  00FD25  0000               	dw	0
  1593  00FD27  0000               	dw	0
  1594  00FD29  00C0               	dw	192
  1595  00FD2B  0007               	dw	7
  1596  00FD2D  0020               	dw	32
  1597  00FD2F  0008               	dw	8
  1598  00FD31  0010               	dw	16
  1599  00FD33  0010               	dw	16
  1600  00FD35  0010               	dw	16
  1601  00FD37  0010               	dw	16
  1602  00FD39  0010               	dw	16
  1603  00FD3B  0010               	dw	16
  1604  00FD3D  0010               	dw	16
  1605  00FD3F  0010               	dw	16
  1606  00FD41  0020               	dw	32
  1607  00FD43  0008               	dw	8
  1608  00FD45  00C0               	dw	192
  1609  00FD47  0007               	dw	7
  1610  00FD49  0000               	dw	0
  1611  00FD4B  0000               	dw	0
  1612  00FD4D  000B               	dw	11
  1613  00FD4F  0000               	dw	0
  1614  00FD51  0000               	dw	0
  1615  00FD53  00F0               	dw	240
  1616  00FD55  00FF               	dw	255
  1617  00FD57  0020               	dw	32
  1618  00FD59  0008               	dw	8
  1619  00FD5B  0010               	dw	16
  1620  00FD5D  0010               	dw	16
  1621  00FD5F  0010               	dw	16
  1622  00FD61  0010               	dw	16
  1623  00FD63  0010               	dw	16
  1624  00FD65  0010               	dw	16
  1625  00FD67  0010               	dw	16
  1626  00FD69  0010               	dw	16
  1627  00FD6B  0010               	dw	16
  1628  00FD6D  0010               	dw	16
  1629  00FD6F  0020               	dw	32
  1630  00FD71  0008               	dw	8
  1631  00FD73  00C0               	dw	192
  1632  00FD75  0007               	dw	7
  1633  00FD77  0000               	dw	0
  1634  00FD79  0000               	dw	0
  1635  00FD7B  000B               	dw	11
  1636  00FD7D  0000               	dw	0
  1637  00FD7F  0000               	dw	0
  1638  00FD81  00C0               	dw	192
  1639  00FD83  0007               	dw	7
  1640  00FD85  0020               	dw	32
  1641  00FD87  0008               	dw	8
  1642  00FD89  0010               	dw	16
  1643  00FD8B  0010               	dw	16
  1644  00FD8D  0010               	dw	16
  1645  00FD8F  0010               	dw	16
  1646  00FD91  0010               	dw	16
  1647  00FD93  0010               	dw	16
  1648  00FD95  0010               	dw	16
  1649  00FD97  0010               	dw	16
  1650  00FD99  0010               	dw	16
  1651  00FD9B  0010               	dw	16
  1652  00FD9D  0020               	dw	32
  1653  00FD9F  0008               	dw	8
  1654  00FDA1  00F0               	dw	240
  1655  00FDA3  00FF               	dw	255
  1656  00FDA5  0000               	dw	0
  1657  00FDA7  0000               	dw	0
  1658  00FDA9  0006               	dw	6
  1659  00FDAB  0000               	dw	0
  1660  00FDAD  0000               	dw	0
  1661  00FDAF  00F0               	dw	240
  1662  00FDB1  001F               	dw	31
  1663  00FDB3  0020               	dw	32
  1664  00FDB5  0000               	dw	0
  1665  00FDB7  0010               	dw	16
  1666  00FDB9  0000               	dw	0
  1667  00FDBB  0010               	dw	16
  1668  00FDBD  0000               	dw	0
  1669  00FDBF  0000               	dw	0
  1670  00FDC1  0000               	dw	0
  1671  00FDC3  0006               	dw	6
  1672  00FDC5  0060               	dw	96
  1673  00FDC7  0008               	dw	8
  1674  00FDC9  0090               	dw	144
  1675  00FDCB  0010               	dw	16
  1676  00FDCD  0010               	dw	16
  1677  00FDCF  0011               	dw	17
  1678  00FDD1  0010               	dw	16
  1679  00FDD3  0011               	dw	17
  1680  00FDD5  0020               	dw	32
  1681  00FDD7  000E               	dw	14
  1682  00FDD9  0000               	dw	0
  1683  00FDDB  0000               	dw	0
  1684  00FDDD  0007               	dw	7
  1685  00FDDF  0000               	dw	0
  1686  00FDE1  0000               	dw	0
  1687  00FDE3  0010               	dw	16
  1688  00FDE5  0000               	dw	0
  1689  00FDE7  0010               	dw	16
  1690  00FDE9  0000               	dw	0
  1691  00FDEB  00FE               	dw	254
  1692  00FDED  001F               	dw	31
  1693  00FDEF  0010               	dw	16
  1694  00FDF1  0000               	dw	0
  1695  00FDF3  0010               	dw	16
  1696  00FDF5  0000               	dw	0
  1697  00FDF7  0000               	dw	0
  1698  00FDF9  0000               	dw	0
  1699  00FDFB  000A               	dw	10
  1700  00FDFD  0000               	dw	0
  1701  00FDFF  0000               	dw	0
  1702  00FE01  00F0               	dw	240
  1703  00FE03  0007               	dw	7
  1704  00FE05  0000               	dw	0
  1705  00FE07  0008               	dw	8
  1706  00FE09  0000               	dw	0
  1707  00FE0B  0010               	dw	16
  1708  00FE0D  0000               	dw	0
  1709  00FE0F  0010               	dw	16
  1710  00FE11  0000               	dw	0
  1711  00FE13  0010               	dw	16
  1712  00FE15  0000               	dw	0
  1713  00FE17  0010               	dw	16
  1714  00FE19  0000               	dw	0
  1715  00FE1B  0008               	dw	8
  1716  00FE1D  00F0               	dw	240
  1717  00FE1F  0007               	dw	7
  1718  00FE21  0000               	dw	0
  1719  00FE23  0000               	dw	0
  1720  00FE25  000A               	dw	10
  1721  00FE27  0010               	dw	16
  1722  00FE29  0000               	dw	0
  1723  00FE2B  0060               	dw	96
  1724  00FE2D  0000               	dw	0
  1725  00FE2F  0080               	dw	128
  1726  00FE31  0003               	dw	3
  1727  00FE33  0000               	dw	0
  1728  00FE35  000C               	dw	12
  1729  00FE37  0000               	dw	0
  1730  00FE39  0010               	dw	16
  1731  00FE3B  0000               	dw	0
  1732  00FE3D  000C               	dw	12
  1733  00FE3F  0080               	dw	128
  1734  00FE41  0003               	dw	3
  1735  00FE43  0060               	dw	96
  1736  00FE45  0000               	dw	0
  1737  00FE47  0010               	dw	16
  1738  00FE49  0000               	dw	0
  1739  00FE4B  0000               	dw	0
  1740  00FE4D  0000               	dw	0
  1741  00FE4F  000E               	dw	14
  1742  00FE51  0010               	dw	16
  1743  00FE53  0000               	dw	0
  1744  00FE55  00E0               	dw	224
  1745  00FE57  0000               	dw	0
  1746  00FE59  0000               	dw	0
  1747  00FE5B  0007               	dw	7
  1748  00FE5D  0000               	dw	0
  1749  00FE5F  0018               	dw	24
  1750  00FE61  0000               	dw	0
  1751  00FE63  0007               	dw	7
  1752  00FE65  00E0               	dw	224
  1753  00FE67  0000               	dw	0
  1754  00FE69  0010               	dw	16
  1755  00FE6B  0000               	dw	0
  1756  00FE6D  00E0               	dw	224
  1757  00FE6F  0000               	dw	0
  1758  00FE71  0000               	dw	0
  1759  00FE73  0007               	dw	7
  1760  00FE75  0000               	dw	0
  1761  00FE77  0018               	dw	24
  1762  00FE79  0000               	dw	0
  1763  00FE7B  0007               	dw	7
  1764  00FE7D  00E0               	dw	224
  1765  00FE7F  0000               	dw	0
  1766  00FE81  0010               	dw	16
  1767  00FE83  0000               	dw	0
  1768  00FE85  0000               	dw	0
  1769  00FE87  0000               	dw	0
  1770  00FE89  0009               	dw	9
  1771  00FE8B  0010               	dw	16
  1772  00FE8D  0010               	dw	16
  1773  00FE8F  0020               	dw	32
  1774  00FE91  0008               	dw	8
  1775  00FE93  0040               	dw	64
  1776  00FE95  0004               	dw	4
  1777  00FE97  0080               	dw	128
  1778  00FE99  0003               	dw	3
  1779  00FE9B  0080               	dw	128
  1780  00FE9D  0003               	dw	3
  1781  00FE9F  0040               	dw	64
  1782  00FEA1  0004               	dw	4
  1783  00FEA3  0020               	dw	32
  1784  00FEA5  0008               	dw	8
  1785  00FEA7  0010               	dw	16
  1786  00FEA9  0010               	dw	16
  1787  00FEAB  0000               	dw	0
  1788  00FEAD  0000               	dw	0
  1789  00FEAF  0009               	dw	9
  1790  00FEB1  0010               	dw	16
  1791  00FEB3  0000               	dw	0
  1792  00FEB5  00E0               	dw	224
  1793  00FEB7  0000               	dw	0
  1794  00FEB9  0000               	dw	0
  1795  00FEBB  0083               	dw	131
  1796  00FEBD  0000               	dw	0
  1797  00FEBF  007C               	dw	124
  1798  00FEC1  0000               	dw	0
  1799  00FEC3  000C               	dw	12
  1800  00FEC5  0000               	dw	0
  1801  00FEC7  0003               	dw	3
  1802  00FEC9  00E0               	dw	224
  1803  00FECB  0000               	dw	0
  1804  00FECD  0010               	dw	16
  1805  00FECF  0000               	dw	0
  1806  00FED1  0000               	dw	0
  1807  00FED3  0000               	dw	0
  1808  00FED5  0008               	dw	8
  1809  00FED7  0010               	dw	16
  1810  00FED9  0010               	dw	16
  1811  00FEDB  0010               	dw	16
  1812  00FEDD  0018               	dw	24
  1813  00FEDF  0010               	dw	16
  1814  00FEE1  0016               	dw	22
  1815  00FEE3  0010               	dw	16
  1816  00FEE5  0011               	dw	17
  1817  00FEE7  00D0               	dw	208
  1818  00FEE9  0010               	dw	16
  1819  00FEEB  0030               	dw	48
  1820  00FEED  0010               	dw	16
  1821  00FEEF  0010               	dw	16
  1822  00FEF1  0010               	dw	16
  1823  00FEF3  0000               	dw	0
  1824  00FEF5  0000               	dw	0
  1825  00FEF7  0007               	dw	7
  1826  00FEF9  0000               	dw	0
  1827  00FEFB  0000               	dw	0
  1828  00FEFD  0000               	dw	0
  1829  00FEFF  0001               	dw	1
  1830  00FF01  0080               	dw	128
  1831  00FF03  0002               	dw	2
  1832  00FF05  00FC               	dw	252
  1833  00FF07  007E               	dw	126
  1834  00FF09  0002               	dw	2
  1835  00FF0B  0080               	dw	128
  1836  00FF0D  0002               	dw	2
  1837  00FF0F  0080               	dw	128
  1838  00FF11  0000               	dw	0
  1839  00FF13  0000               	dw	0
  1840  00FF15  0007               	dw	7
  1841  00FF17  0000               	dw	0
  1842  00FF19  0000               	dw	0
  1843  00FF1B  0000               	dw	0
  1844  00FF1D  0000               	dw	0
  1845  00FF1F  0000               	dw	0
  1846  00FF21  0000               	dw	0
  1847  00FF23  0000               	dw	0
  1848  00FF25  0000               	dw	0
  1849  00FF27  0000               	dw	0
  1850  00FF29  0000               	dw	0
  1851  00FF2B  00FE               	dw	254
  1852  00FF2D  00FF               	dw	255
  1853  00FF2F  0000               	dw	0
  1854  00FF31  0000               	dw	0
  1855  00FF33  0006               	dw	6
  1856  00FF35  0002               	dw	2
  1857  00FF37  0080               	dw	128
  1858  00FF39  0002               	dw	2
  1859  00FF3B  0080               	dw	128
  1860  00FF3D  00FC               	dw	252
  1861  00FF3F  007E               	dw	126
  1862  00FF41  0080               	dw	128
  1863  00FF43  0002               	dw	2
  1864  00FF45  0000               	dw	0
  1865  00FF47  0001               	dw	1
  1866  00FF49  0000               	dw	0
  1867  00FF4B  0000               	dw	0
  1868  00FF4D  000A               	dw	10
  1869  00FF4F  0000               	dw	0
  1870  00FF51  0000               	dw	0
  1871  00FF53  0080               	dw	128
  1872  00FF55  0000               	dw	0
  1873  00FF57  0040               	dw	64
  1874  00FF59  0000               	dw	0
  1875  00FF5B  0040               	dw	64
  1876  00FF5D  0000               	dw	0
  1877  00FF5F  0040               	dw	64
  1878  00FF61  0000               	dw	0
  1879  00FF63  0080               	dw	128
  1880  00FF65  0000               	dw	0
  1881  00FF67  0080               	dw	128
  1882  00FF69  0000               	dw	0
  1883  00FF6B  0080               	dw	128
  1884  00FF6D  0000               	dw	0
  1885  00FF6F  0040               	dw	64
  1886  00FF71  0000               	dw	0
  1887  00FF73  0000               	dw	0
  1888  00FF75  0000               	dw	0
  1889  00FF77  0005               	dw	5
  1890  00FF79  00FF               	dw	255
  1891  00FF7B  000F               	dw	15
  1892  00FF7D  0001               	dw	1
  1893  00FF7F  0008               	dw	8
  1894  00FF81  0001               	dw	1
  1895  00FF83  0008               	dw	8
  1896  00FF85  00FF               	dw	255
  1897  00FF87  000F               	dw	15
  1898  00FF89  0000               	dw	0
  1899  00FF8B  0000               	dw	0
  1900  00FF8D                     __end_of_font:
  1901                           	opt callstack 0
  1902  00FF8D                     _spi_configuration:
  1903                           	opt callstack 0
  1904  00FF8D  00                 	db	0
  1905  00FF8E  40                 	db	64
  1906  00FF8F  01                 	db	1
  1907  00FF90  00                 	db	0
  1908  00FF91                     __end_of_spi_configuration:
  1909                           	opt callstack 0
  1910  00FF91                     STR_1:
  1911  00FF91  58                 	db	88	;'X'
  1912  00FF92  43                 	db	67	;'C'
  1913  00FF93  38                 	db	56	;'8'
  1914  00FF94  20                 	db	32
  1915  00FF95  2D                 	db	45
  1916  00FF96  20                 	db	32
  1917  00FF97  42                 	db	66	;'B'
  1918  00FF98  69                 	db	105	;'i'
  1919  00FF99  62                 	db	98	;'b'
  1920  00FF9A  6C                 	db	108	;'l'
  1921  00FF9B  69                 	db	105	;'i'
  1922  00FF9C  6F                 	db	111	;'o'
  1923  00FF9D  74                 	db	116	;'t'
  1924  00FF9E  65                 	db	101	;'e'
  1925  00FF9F  63                 	db	99	;'c'
  1926  00FFA0  61                 	db	97	;'a'
  1927  00FFA1  20                 	db	32
  1928  00FFA2  2D                 	db	45
  1929  00FFA3  20                 	db	32
  1930  00FFA4  4C                 	db	76	;'L'
  1931  00FFA5  43                 	db	67	;'C'
  1932  00FFA6  44                 	db	68	;'D'
  1933  00FFA7  20                 	db	32
  1934  00FFA8  2D                 	db	45
  1935  00FFA9  20                 	db	32
  1936  00FFAA  49                 	db	73	;'I'
  1937  00FFAB  4C                 	db	76	;'L'
  1938  00FFAC  49                 	db	73	;'I'
  1939  00FFAD  39                 	db	57	;'9'
  1940  00FFAE  33                 	db	51	;'3'
  1941  00FFAF  34                 	db	52	;'4'
  1942  00FFB0  31                 	db	49	;'1'
  1943  00FFB1  00                 	db	0
  1944  00FFB2                     STR_3:
  1945  00FFB2  70                 	db	112	;'p'
  1946  00FFB3  65                 	db	101	;'e'
  1947  00FFB4  72                 	db	114	;'r'
  1948  00FFB5  63                 	db	99	;'c'
  1949  00FFB6  65                 	db	101	;'e'
  1950  00FFB7  6E                 	db	110	;'n'
  1951  00FFB8  74                 	db	116	;'t'
  1952  00FFB9  61                 	db	97	;'a'
  1953  00FFBA  67                 	db	103	;'g'
  1954  00FFBB  65                 	db	101	;'e'
  1955  00FFBC  6D                 	db	109	;'m'
  1956  00FFBD  20                 	db	32
  1957  00FFBE  3D                 	db	61	;'='
  1958  00FFBF  20                 	db	32
  1959  00FFC0  25                 	db	37
  1960  00FFC1  64                 	db	100	;'d'
  1961  00FFC2  00                 	db	0
  1962  00FFC3                     STR_2:
  1963  00FFC3  50                 	db	80	;'P'
  1964  00FFC4  49                 	db	73	;'I'
  1965  00FFC5  43                 	db	67	;'C'
  1966  00FFC6  20                 	db	32
  1967  00FFC7  2D                 	db	45
  1968  00FFC8  20                 	db	32
  1969  00FFC9  53                 	db	83	;'S'
  1970  00FFCA  45                 	db	69	;'E'
  1971  00FFCB  45                 	db	69	;'E'
  1972  00FFCC  56                 	db	86	;'V'
  1973  00FFCD  00                 	db	0
  1974  00FFCE                     STR_80:
  1975  00FFCE  68                 	db	104	;'h'
  1976  00FFCF  68                 	db	104	;'h'
  1977  00FFD0  58                 	db	88	;'X'
  1978  00FFD1  00                 	db	0
  1979  00FFD2                     STR_4:
  1980  00FFD2  68                 	db	104	;'h'
  1981  00FFD3  68                 	db	104	;'h'
  1982  00FFD4  64                 	db	100	;'d'
  1983  00FFD5  00                 	db	0
  1984  00FFD6                     STR_8:
  1985  00FFD6  68                 	db	104	;'h'
  1986  00FFD7  68                 	db	104	;'h'
  1987  00FFD8  69                 	db	105	;'i'
  1988  00FFD9  00                 	db	0
  1989  00FFDA                     STR_46:
  1990  00FFDA  68                 	db	104	;'h'
  1991  00FFDB  68                 	db	104	;'h'
  1992  00FFDC  6E                 	db	110	;'n'
  1993  00FFDD  00                 	db	0
  1994  00FFDE                     STR_31:
  1995  00FFDE  68                 	db	104	;'h'
  1996  00FFDF  68                 	db	104	;'h'
  1997  00FFE0  6F                 	db	111	;'o'
  1998  00FFE1  00                 	db	0
  1999  00FFE2                     STR_61:
  2000  00FFE2  68                 	db	104	;'h'
  2001  00FFE3  68                 	db	104	;'h'
  2002  00FFE4  75                 	db	117	;'u'
  2003  00FFE5  00                 	db	0
  2004  00FFE6                     STR_76:
  2005  00FFE6  68                 	db	104	;'h'
  2006  00FFE7  68                 	db	104	;'h'
  2007  00FFE8  78                 	db	120	;'x'
  2008  00FFE9  00                 	db	0
  2009  00FFEA                     STR_98:
  2010  00FFEA  7A                 	db	122	;'z'
  2011  00FFEB  58                 	db	88	;'X'
  2012  00FFEC  00                 	db	0
  2013  00FFED                     STR_22:
  2014  00FFED  7A                 	db	122	;'z'
  2015  00FFEE  64                 	db	100	;'d'
  2016  00FFEF  00                 	db	0
  2017  00FFF0                     STR_26:
  2018  00FFF0  7A                 	db	122	;'z'
  2019  00FFF1  69                 	db	105	;'i'
  2020  00FFF2  00                 	db	0
  2021  00FFF3                     STR_56:
  2022  00FFF3  7A                 	db	122	;'z'
  2023  00FFF4  6E                 	db	110	;'n'
  2024  00FFF5  00                 	db	0
  2025  00FFF6                     STR_41:
  2026  00FFF6  7A                 	db	122	;'z'
  2027  00FFF7  6F                 	db	111	;'o'
  2028  00FFF8  00                 	db	0
  2029  00FFF9                     STR_71:
  2030  00FFF9  7A                 	db	122	;'z'
  2031  00FFFA  75                 	db	117	;'u'
  2032  00FFFB  00                 	db	0
  2033  00FFFC                     STR_94:
  2034  00FFFC  7A                 	db	122	;'z'
  2035  00FFFD  78                 	db	120	;'x'
  2036  00FFFE  00                 	db	0
  2037  0000                     
  2038                           ; #config settings
  2039  00FFFF  00                 	db	0	; dummy byte at the end
  2040  0000                     
  2041                           	psect	nvBANK0
  2042  0000D2                     __pnvBANK0:
  2043                           	opt callstack 0
  2044  0000D2                     _ADC_InterruptHandler:
  2045                           	opt callstack 0
  2046  0000D2                     	ds	2
  2047  0000D4                     _IOCB4_InterruptHandler:
  2048                           	opt callstack 0
  2049  0000D4                     	ds	2
  2050  0000                     _IOCBbits	set	3930
  2051  0000                     _WPUB	set	3931
  2052  0000                     _ANCON1	set	3932
  2053  0000                     _ANCON0	set	3933
  2054  0000                     _LATEbits	set	3981
  2055  0000                     _SSPSTATbits	set	4039
  2056  0000                     _LATAbits	set	3977
  2057  0000                     _PORTBbits	set	3969
  2058  0000                     _ADCON0bits	set	4034
  2059  0000                     _ADRESL	set	4035
  2060  0000                     _ADRESH	set	4036
  2061  0000                     _ADCON2	set	4032
  2062  0000                     _ADCON1	set	4033
  2063  0000                     _ADCON0	set	4034
  2064  0000                     _SSPBUF	set	4041
  2065  0000                     _SSPCON2	set	4037
  2066  0000                     _SSPCON1bits	set	4038
  2067  0000                     _TRISCbits	set	3988
  2068  0000                     _SSPADD	set	4040
  2069  0000                     _SSPCON1	set	4038
  2070  0000                     _SSPSTAT	set	4039
  2071  0000                     _PIR1bits	set	3998
  2072  0000                     _PIE1bits	set	3997
  2073  0000                     _RCONbits	set	4048
  2074  0000                     _REFOCON	set	3994
  2075  0000                     _OSCTUNE	set	3995
  2076  0000                     _OSCCON2	set	4050
  2077  0000                     _OSCCON	set	4051
  2078  0000                     _INTCONbits	set	4082
  2079  0000                     _INTCON2bits	set	4081
  2080  0000                     _TRISD	set	3989
  2081  0000                     _TRISC	set	3988
  2082  0000                     _TRISB	set	3987
  2083  0000                     _TRISA	set	3986
  2084  0000                     _TRISE	set	3990
  2085  0000                     _LATC	set	3979
  2086  0000                     _LATB	set	3978
  2087  0000                     _LATA	set	3977
  2088  0000                     _LATD	set	3980
  2089  0000                     _LATE	set	3981
  2090                           
  2091                           	psect	cinit
  2092  0033AA                     __pcinit:
  2093                           	opt callstack 0
  2094  0033AA                     start_initialization:
  2095                           	opt callstack 0
  2096  0033AA                     __initialization:
  2097                           	opt callstack 0
  2098                           
  2099                           ; Initialize objects allocated to BANK0 (7 bytes)
  2100                           ; load TBLPTR registers with __pidataBANK0
  2101  0033AA  0E3E               	movlw	low __pidataBANK0
  2102  0033AC  6EF6               	movwf	tblptrl,c
  2103  0033AE  0E38               	movlw	high __pidataBANK0
  2104  0033B0  6EF7               	movwf	tblptrh,c
  2105  0033B2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2106  0033B4  6EF8               	movwf	tblptru,c
  2107  0033B6  EE00  F0CB         	lfsr	0,__pdataBANK0
  2108  0033BA  EE10 F007          	lfsr	1,7
  2109  0033BE                     copy_data0:
  2110  0033BE  0009               	tblrd		*+
  2111  0033C0  CFF5 FFEE          	movff	tablat,postinc0
  2112  0033C4  50E5               	movf	postdec1,w,c
  2113  0033C6  50E1               	movf	fsr1l,w,c
  2114  0033C8  E1FA               	bnz	copy_data0
  2115                           
  2116                           ; Clear objects allocated to BANK1 (100 bytes)
  2117  0033CA  EE01  F000         	lfsr	0,__pbssBANK1
  2118  0033CE  0E64               	movlw	100
  2119  0033D0                     clear_0:
  2120  0033D0  6AEE               	clrf	postinc0,c
  2121  0033D2  06E8               	decf	wreg,f,c
  2122  0033D4  E1FD               	bnz	clear_0
  2123                           
  2124                           ; Clear objects allocated to BANK0 (46 bytes)
  2125  0033D6  EE00  F09D         	lfsr	0,__pbssBANK0
  2126  0033DA  0E2E               	movlw	46
  2127  0033DC                     clear_1:
  2128  0033DC  6AEE               	clrf	postinc0,c
  2129  0033DE  06E8               	decf	wreg,f,c
  2130  0033E0  E1FD               	bnz	clear_1
  2131                           
  2132                           ; Clear objects allocated to COMRAM (2 bytes)
  2133  0033E2  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2134  0033E4  6A58               	clrf	__pbssCOMRAM& (0+255),c
  2135  0033E6                     end_of_initialization:
  2136                           	opt callstack 0
  2137  0033E6                     __end_of__initialization:
  2138                           	opt callstack 0
  2139  0033E6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2140  0033E8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2141  0033EA  0100               	movlb	0
  2142  0033EC  EF9F  F015         	goto	_main	;jump to C main() function
  2143                           
  2144                           	psect	bssCOMRAM
  2145  000058                     __pbssCOMRAM:
  2146                           	opt callstack 0
  2147  000058                     _flags:
  2148                           	opt callstack 0
  2149  000058                     	ds	2
  2150                           
  2151                           	psect	bssBANK0
  2152  00009D                     __pbssBANK0:
  2153                           	opt callstack 0
  2154  00009D                     _errno:
  2155                           	opt callstack 0
  2156  00009D                     	ds	2
  2157  00009F                     _nout:
  2158                           	opt callstack 0
  2159  00009F                     	ds	2
  2160  0000A1                     _width:
  2161                           	opt callstack 0
  2162  0000A1                     	ds	2
  2163  0000A3                     _prec:
  2164                           	opt callstack 0
  2165  0000A3                     	ds	2
  2166  0000A5                     _global_bg_color:
  2167                           	opt callstack 0
  2168  0000A5                     	ds	2
  2169  0000A7                     _percentagem:
  2170                           	opt callstack 0
  2171  0000A7                     	ds	2
  2172  0000A9                     _codigo_digital:
  2173                           	opt callstack 0
  2174  0000A9                     	ds	2
  2175  0000AB                     _dbuf:
  2176                           	opt callstack 0
  2177  0000AB                     	ds	32
  2178                           
  2179                           	psect	dataBANK0
  2180  0000CB                     __pdataBANK0:
  2181                           	opt callstack 0
  2182  0000CB                     stoa@F1152:
  2183                           	opt callstack 0
  2184  0000CB                     	ds	7
  2185                           
  2186                           	psect	bssBANK1
  2187  000100                     __pbssBANK1:
  2188                           	opt callstack 0
  2189  000100                     _string:
  2190                           	opt callstack 0
  2191  000100                     	ds	100
  2192                           
  2193                           	psect	cstackBANK0
  2194  000060                     __pcstackBANK0:
  2195                           	opt callstack 0
  2196  000060                     vfpfcnvrt@cp:
  2197                           	opt callstack 0
  2198                           
  2199                           ; 2 bytes @ 0x0
  2200  000060                     	ds	2
  2201  000062                     vfpfcnvrt@done:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 2 bytes @ 0x2
  2205  000062                     	ds	2
  2206  000064                     _vfpfcnvrt$1313:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x4
  2210  000064                     	ds	2
  2211  000066                     _vfpfcnvrt$1314:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 2 bytes @ 0x6
  2215  000066                     	ds	2
  2216  000068                     vfpfcnvrt@ll:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 8 bytes @ 0x8
  2220  000068                     	ds	8
  2221  000070                     vfpfcnvrt@vp:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x10
  2225  000070                     	ds	2
  2226  000072                     vfpfcnvrt@c:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 1 bytes @ 0x12
  2230  000072                     	ds	1
  2231  000073                     vfpfcnvrt@llu:
  2232                           	opt callstack 0
  2233                           
  2234                           ; 8 bytes @ 0x13
  2235  000073                     	ds	8
  2236  00007B                     ?_vsnprintf:
  2237                           	opt callstack 0
  2238  00007B                     vsnprintf@s:
  2239                           	opt callstack 0
  2240                           
  2241                           ; 2 bytes @ 0x1B
  2242  00007B                     	ds	2
  2243  00007D                     vsnprintf@n:
  2244                           	opt callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x1D
  2247  00007D                     	ds	2
  2248  00007F                     vsnprintf@fmt:
  2249                           	opt callstack 0
  2250                           
  2251                           ; 2 bytes @ 0x1F
  2252  00007F                     	ds	2
  2253  000081                     vsnprintf@ap:
  2254                           	opt callstack 0
  2255                           
  2256                           ; 2 bytes @ 0x21
  2257  000081                     	ds	2
  2258  000083                     ??_vsnprintf:
  2259                           
  2260                           ; 1 bytes @ 0x23
  2261  000083                     	ds	4
  2262  000087                     _vsnprintf$2014:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x27
  2266  000087                     	ds	2
  2267  000089                     vsnprintf@cnt:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x29
  2271  000089                     	ds	2
  2272  00008B                     vsnprintf@f:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 6 bytes @ 0x2B
  2276  00008B                     	ds	6
  2277  000091                     ?_snprintf:
  2278                           	opt callstack 0
  2279  000091                     snprintf@s:
  2280                           	opt callstack 0
  2281                           
  2282                           ; 2 bytes @ 0x31
  2283  000091                     	ds	2
  2284  000093                     snprintf@n:
  2285                           	opt callstack 0
  2286                           
  2287                           ; 2 bytes @ 0x33
  2288  000093                     	ds	2
  2289  000095                     snprintf@fmt:
  2290                           	opt callstack 0
  2291                           
  2292                           ; 2 bytes @ 0x35
  2293  000095                     	ds	6
  2294  00009B                     snprintf@ap:
  2295                           	opt callstack 0
  2296                           
  2297                           ; 2 bytes @ 0x3B
  2298  00009B                     	ds	2
  2299                           
  2300                           	psect	cstackCOMRAM
  2301  000001                     __pcstackCOMRAM:
  2302                           	opt callstack 0
  2303  000001                     ??_acende_led:
  2304  000001                     
  2305                           ; 1 bytes @ 0x0
  2306  000001                     	ds	1
  2307  000002                     ??_INTERRUPT_InterruptManager:
  2308                           
  2309                           ; 1 bytes @ 0x1
  2310  000002                     	ds	2
  2311  000004                     ??_SPI_Open:
  2312  000004                     ??_msDelay:
  2313  000004                     ?_strlen:
  2314                           	opt callstack 0
  2315  000004                     ?_isupper:
  2316                           	opt callstack 0
  2317  000004                     ?_isalpha:
  2318                           	opt callstack 0
  2319  000004                     ?_isdigit:
  2320                           	opt callstack 0
  2321  000004                     ?_strncmp:
  2322                           	opt callstack 0
  2323  000004                     ?_isspace:
  2324                           	opt callstack 0
  2325  000004                     ?_islower:
  2326                           	opt callstack 0
  2327  000004                     ?___wmul:
  2328                           	opt callstack 0
  2329  000004                     ?___aodiv:
  2330                           	opt callstack 0
  2331  000004                     ?___aomod:
  2332                           	opt callstack 0
  2333  000004                     ?___lodiv:
  2334                           	opt callstack 0
  2335  000004                     ?___lomod:
  2336                           	opt callstack 0
  2337  000004                     SPI_ExchangeByte@data:
  2338                           	opt callstack 0
  2339  000004                     IOCB4_SetInterruptHandler@InterruptHandler:
  2340                           	opt callstack 0
  2341  000004                     ADC_SetInterruptHandler@InterruptHandler:
  2342                           	opt callstack 0
  2343  000004                     ___wmul@multiplier:
  2344                           	opt callstack 0
  2345  000004                     isalpha@c:
  2346                           	opt callstack 0
  2347  000004                     isdigit@c:
  2348                           	opt callstack 0
  2349  000004                     isspace@c:
  2350                           	opt callstack 0
  2351  000004                     isupper@c:
  2352                           	opt callstack 0
  2353  000004                     fputc@c:
  2354                           	opt callstack 0
  2355  000004                     strlen@s:
  2356                           	opt callstack 0
  2357  000004                     strncmp@_l:
  2358                           	opt callstack 0
  2359  000004                     islower@c:
  2360                           	opt callstack 0
  2361  000004                     ___aodiv@dividend:
  2362                           	opt callstack 0
  2363  000004                     ___aomod@dividend:
  2364                           	opt callstack 0
  2365  000004                     ___lodiv@dividend:
  2366                           	opt callstack 0
  2367  000004                     ___lomod@dividend:
  2368                           	opt callstack 0
  2369                           
  2370                           ; 8 bytes @ 0x3
  2371  000004                     	ds	1
  2372  000005                     SPI_Open@spiUniqueConfiguration:
  2373                           	opt callstack 0
  2374  000005                     msDelay@ms:
  2375                           	opt callstack 0
  2376  000005                     lcd_send@value:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 1 bytes @ 0x4
  2380  000005                     	ds	1
  2381  000006                     ??_isupper:
  2382  000006                     ??_isalpha:
  2383  000006                     ??_isdigit:
  2384  000006                     ??_isspace:
  2385  000006                     ??_islower:
  2386  000006                     msDelay@k:
  2387                           	opt callstack 0
  2388  000006                     lcd_send@dc:
  2389                           	opt callstack 0
  2390  000006                     ___wmul@multiplicand:
  2391                           	opt callstack 0
  2392  000006                     fputc@fp:
  2393                           	opt callstack 0
  2394  000006                     strlen@a:
  2395                           	opt callstack 0
  2396  000006                     strncmp@_r:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x5
  2400  000006                     	ds	1
  2401  000007                     lcd_set_cursor_x@x:
  2402                           	opt callstack 0
  2403  000007                     lcd_set_cursor_y@y:
  2404                           	opt callstack 0
  2405  000007                     lcd_draw_pixel@color:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x6
  2409  000007                     	ds	1
  2410  000008                     ??_fputc:
  2411  000008                     ___wmul@product:
  2412                           	opt callstack 0
  2413  000008                     strncmp@n:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x7
  2417  000008                     	ds	1
  2418  000009                     lcd_set_cursor@x:
  2419                           	opt callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x8
  2422  000009                     	ds	1
  2423  00000A                     ??_strncmp:
  2424  00000A                     ?_toupper:
  2425                           	opt callstack 0
  2426  00000A                     _isspace$1902:
  2427                           	opt callstack 0
  2428  00000A                     toupper@c:
  2429                           	opt callstack 0
  2430                           
  2431                           ; 2 bytes @ 0x9
  2432  00000A                     	ds	1
  2433  00000B                     ?_atoi:
  2434                           	opt callstack 0
  2435  00000B                     lcd_set_cursor@y:
  2436                           	opt callstack 0
  2437  00000B                     atoi@s:
  2438                           	opt callstack 0
  2439  00000B                     strncmp@l:
  2440                           	opt callstack 0
  2441                           
  2442                           ; 2 bytes @ 0xA
  2443  00000B                     	ds	1
  2444  00000C                     ??_toupper:
  2445  00000C                     ___aodiv@divisor:
  2446                           	opt callstack 0
  2447  00000C                     ___aomod@divisor:
  2448                           	opt callstack 0
  2449  00000C                     ___lodiv@divisor:
  2450                           	opt callstack 0
  2451  00000C                     ___lomod@divisor:
  2452                           	opt callstack 0
  2453                           
  2454                           ; 8 bytes @ 0xB
  2455  00000C                     	ds	1
  2456  00000D                     ??_atoi:
  2457  00000D                     ?_stoa:
  2458                           	opt callstack 0
  2459  00000D                     lcd_fill@bg_color:
  2460                           	opt callstack 0
  2461  00000D                     lcd_draw_pixel_at@x:
  2462                           	opt callstack 0
  2463  00000D                     lcd_draw_char@x:
  2464                           	opt callstack 0
  2465  00000D                     stoa@fp:
  2466                           	opt callstack 0
  2467  00000D                     fputs@s:
  2468                           	opt callstack 0
  2469  00000D                     strncmp@r:
  2470                           	opt callstack 0
  2471                           
  2472                           ; 2 bytes @ 0xC
  2473  00000D                     	ds	2
  2474  00000F                     lcd_fill@height:
  2475                           	opt callstack 0
  2476  00000F                     lcd_draw_pixel_at@y:
  2477                           	opt callstack 0
  2478  00000F                     lcd_draw_char@y:
  2479                           	opt callstack 0
  2480  00000F                     stoa@s:
  2481                           	opt callstack 0
  2482  00000F                     fputs@fp:
  2483                           	opt callstack 0
  2484                           
  2485                           ; 2 bytes @ 0xE
  2486  00000F                     	ds	1
  2487  000010                     _toupper$1982:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 2 bytes @ 0xF
  2491  000010                     	ds	1
  2492  000011                     ??_stoa:
  2493  000011                     fputs@c:
  2494                           	opt callstack 0
  2495  000011                     lcd_fill@width:
  2496                           	opt callstack 0
  2497  000011                     lcd_draw_pixel_at@color:
  2498                           	opt callstack 0
  2499  000011                     lcd_draw_char@fIndex:
  2500                           	opt callstack 0
  2501  000011                     atoi@neg:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x10
  2505  000011                     	ds	1
  2506  000012                     fputs@i:
  2507                           	opt callstack 0
  2508  000012                     stoa@nuls:
  2509                           	opt callstack 0
  2510                           
  2511                           ; 7 bytes @ 0x11
  2512  000012                     	ds	1
  2513  000013                     lcd_draw_line@x0:
  2514                           	opt callstack 0
  2515  000013                     lcd_draw_char@fg_color:
  2516                           	opt callstack 0
  2517  000013                     _atoi$1875:
  2518                           	opt callstack 0
  2519                           
  2520                           ; 2 bytes @ 0x12
  2521  000013                     	ds	1
  2522  000014                     ?_pad:
  2523                           	opt callstack 0
  2524  000014                     ___aodiv@counter:
  2525                           	opt callstack 0
  2526  000014                     ___aomod@counter:
  2527                           	opt callstack 0
  2528  000014                     ___lomod@counter:
  2529                           	opt callstack 0
  2530  000014                     pad@fp:
  2531                           	opt callstack 0
  2532  000014                     ___lodiv@quotient:
  2533                           	opt callstack 0
  2534                           
  2535                           ; 8 bytes @ 0x13
  2536  000014                     	ds	1
  2537  000015                     ___aodiv@sign:
  2538                           	opt callstack 0
  2539  000015                     ___aomod@sign:
  2540                           	opt callstack 0
  2541  000015                     lcd_draw_line@y0:
  2542                           	opt callstack 0
  2543  000015                     lcd_draw_char@bg_color:
  2544                           	opt callstack 0
  2545  000015                     _atoi$1877:
  2546                           	opt callstack 0
  2547                           
  2548                           ; 2 bytes @ 0x14
  2549  000015                     	ds	1
  2550  000016                     ?_abs:
  2551                           	opt callstack 0
  2552  000016                     pad@buf:
  2553                           	opt callstack 0
  2554  000016                     abs@a:
  2555                           	opt callstack 0
  2556  000016                     ___aodiv@quotient:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 8 bytes @ 0x15
  2560  000016                     	ds	1
  2561  000017                     ??_lcd_draw_char:
  2562  000017                     _atoi$1876:
  2563                           	opt callstack 0
  2564  000017                     lcd_draw_line@x1:
  2565                           	opt callstack 0
  2566                           
  2567                           ; 2 bytes @ 0x16
  2568  000017                     	ds	1
  2569  000018                     ??_abs:
  2570  000018                     pad@p:
  2571                           	opt callstack 0
  2572  000018                     atoi@n:
  2573                           	opt callstack 0
  2574                           
  2575                           ; 2 bytes @ 0x17
  2576  000018                     	ds	1
  2577  000019                     lcd_draw_line@y1:
  2578                           	opt callstack 0
  2579  000019                     stoa@i:
  2580                           	opt callstack 0
  2581                           
  2582                           ; 2 bytes @ 0x18
  2583  000019                     	ds	1
  2584  00001A                     ??_pad:
  2585                           
  2586                           ; 1 bytes @ 0x19
  2587  00001A                     	ds	1
  2588  00001B                     lcd_draw_line@color:
  2589                           	opt callstack 0
  2590  00001B                     pad@i:
  2591                           	opt callstack 0
  2592  00001B                     stoa@w:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 2 bytes @ 0x1A
  2596  00001B                     	ds	1
  2597  00001C                     ___lodiv@counter:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 1 bytes @ 0x1B
  2601  00001C                     	ds	1
  2602  00001D                     ??_lcd_draw_line:
  2603  00001D                     pad@w:
  2604                           	opt callstack 0
  2605  00001D                     stoa@cp:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 2 bytes @ 0x1C
  2609  00001D                     	ds	1
  2610  00001E                     lcd_draw_line@sx:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0x1D
  2614  00001E                     	ds	1
  2615  00001F                     ?_ctoa:
  2616                           	opt callstack 0
  2617  00001F                     ?_dtoa:
  2618                           	opt callstack 0
  2619  00001F                     ?_otoa:
  2620                           	opt callstack 0
  2621  00001F                     ?_utoa:
  2622                           	opt callstack 0
  2623  00001F                     ?_xtoa:
  2624                           	opt callstack 0
  2625  00001F                     ctoa@fp:
  2626                           	opt callstack 0
  2627  00001F                     dtoa@fp:
  2628                           	opt callstack 0
  2629  00001F                     otoa@fp:
  2630                           	opt callstack 0
  2631  00001F                     stoa@p:
  2632                           	opt callstack 0
  2633  00001F                     utoa@fp:
  2634                           	opt callstack 0
  2635  00001F                     xtoa@fp:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 2 bytes @ 0x1E
  2639  00001F                     	ds	1
  2640  000020                     lcd_draw_char@j:
  2641                           	opt callstack 0
  2642  000020                     lcd_draw_line@sy:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x1F
  2646  000020                     	ds	1
  2647  000021                     lcd_draw_char@k:
  2648                           	opt callstack 0
  2649  000021                     ctoa@c:
  2650                           	opt callstack 0
  2651  000021                     stoa@l:
  2652                           	opt callstack 0
  2653  000021                     dtoa@d:
  2654                           	opt callstack 0
  2655  000021                     otoa@d:
  2656                           	opt callstack 0
  2657  000021                     utoa@d:
  2658                           	opt callstack 0
  2659  000021                     xtoa@d:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 8 bytes @ 0x20
  2663  000021                     	ds	1
  2664  000022                     lcd_draw_char@i:
  2665                           	opt callstack 0
  2666  000022                     lcd_draw_line@err:
  2667                           	opt callstack 0
  2668  000022                     ctoa@w:
  2669                           	opt callstack 0
  2670                           
  2671                           ; 2 bytes @ 0x21
  2672  000022                     	ds	1
  2673  000023                     lcd_draw_string@x:
  2674                           	opt callstack 0
  2675                           
  2676                           ; 2 bytes @ 0x22
  2677  000023                     	ds	1
  2678  000024                     lcd_draw_line@e2:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 2 bytes @ 0x23
  2682  000024                     	ds	1
  2683  000025                     lcd_draw_string@y:
  2684                           	opt callstack 0
  2685                           
  2686                           ; 2 bytes @ 0x24
  2687  000025                     	ds	1
  2688  000026                     lcd_draw_line@dx:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 2 bytes @ 0x25
  2692  000026                     	ds	1
  2693  000027                     lcd_draw_string@pS:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 2 bytes @ 0x26
  2697  000027                     	ds	1
  2698  000028                     lcd_draw_line@dy:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 2 bytes @ 0x27
  2702  000028                     	ds	1
  2703  000029                     ??_dtoa:
  2704  000029                     ??_otoa:
  2705  000029                     ??_utoa:
  2706  000029                     xtoa@x:
  2707                           	opt callstack 0
  2708  000029                     lcd_draw_string@fg_color:
  2709                           	opt callstack 0
  2710                           
  2711                           ; 2 bytes @ 0x28
  2712  000029                     	ds	1
  2713  00002A                     ??_xtoa:
  2714                           
  2715                           ; 1 bytes @ 0x29
  2716  00002A                     	ds	1
  2717  00002B                     lcd_draw_string@bg_color:
  2718                           	opt callstack 0
  2719                           
  2720                           ; 2 bytes @ 0x2A
  2721  00002B                     	ds	2
  2722  00002D                     ??_lcd_draw_string:
  2723                           
  2724                           ; 1 bytes @ 0x2C
  2725  00002D                     	ds	4
  2726  000031                     lcd_draw_string@k:
  2727                           	opt callstack 0
  2728  000031                     _dtoa$1262:
  2729                           	opt callstack 0
  2730  000031                     otoa@p:
  2731                           	opt callstack 0
  2732  000031                     utoa@p:
  2733                           	opt callstack 0
  2734                           
  2735                           ; 2 bytes @ 0x30
  2736  000031                     	ds	1
  2737  000032                     _xtoa$1298:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 2 bytes @ 0x31
  2741  000032                     	ds	1
  2742  000033                     lcd_draw_string@lIndex:
  2743                           	opt callstack 0
  2744  000033                     dtoa@p:
  2745                           	opt callstack 0
  2746  000033                     otoa@t:
  2747                           	opt callstack 0
  2748  000033                     utoa@w:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 2 bytes @ 0x32
  2752  000033                     	ds	1
  2753  000034                     _xtoa$1299:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 2 bytes @ 0x33
  2757  000034                     	ds	1
  2758  000035                     dtoa@w:
  2759                           	opt callstack 0
  2760  000035                     otoa@w:
  2761                           	opt callstack 0
  2762  000035                     utoa@n:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 8 bytes @ 0x34
  2766  000035                     	ds	1
  2767  000036                     xtoa@p:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x35
  2771  000036                     	ds	1
  2772  000037                     dtoa@s:
  2773                           	opt callstack 0
  2774  000037                     otoa@n:
  2775                           	opt callstack 0
  2776                           
  2777                           ; 8 bytes @ 0x36
  2778  000037                     	ds	1
  2779  000038                     xtoa@w:
  2780                           	opt callstack 0
  2781                           
  2782                           ; 2 bytes @ 0x37
  2783  000038                     	ds	1
  2784  000039                     dtoa@n:
  2785                           	opt callstack 0
  2786                           
  2787                           ; 8 bytes @ 0x38
  2788  000039                     	ds	1
  2789  00003A                     xtoa@n:
  2790                           	opt callstack 0
  2791                           
  2792                           ; 8 bytes @ 0x39
  2793  00003A                     	ds	3
  2794  00003D                     utoa@i:
  2795                           	opt callstack 0
  2796                           
  2797                           ; 2 bytes @ 0x3C
  2798  00003D                     	ds	2
  2799  00003F                     otoa@i:
  2800                           	opt callstack 0
  2801                           
  2802                           ; 2 bytes @ 0x3E
  2803  00003F                     	ds	2
  2804  000041                     dtoa@i:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 2 bytes @ 0x40
  2808  000041                     	ds	1
  2809  000042                     xtoa@i:
  2810                           	opt callstack 0
  2811                           
  2812                           ; 2 bytes @ 0x41
  2813  000042                     	ds	2
  2814  000044                     xtoa@c:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 2 bytes @ 0x43
  2818  000044                     	ds	2
  2819  000046                     ?_vfpfcnvrt:
  2820                           	opt callstack 0
  2821  000046                     vfpfcnvrt@fp:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x45
  2825  000046                     	ds	2
  2826  000048                     vfpfcnvrt@fmt:
  2827                           	opt callstack 0
  2828                           
  2829                           ; 2 bytes @ 0x47
  2830  000048                     	ds	2
  2831  00004A                     vfpfcnvrt@ap:
  2832                           	opt callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x49
  2835  00004A                     	ds	2
  2836  00004C                     ??_vfpfcnvrt:
  2837                           
  2838                           ; 1 bytes @ 0x4B
  2839  00004C                     	ds	4
  2840  000050                     ?_vfprintf:
  2841                           	opt callstack 0
  2842  000050                     vfprintf@fp:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 2 bytes @ 0x4F
  2846  000050                     	ds	2
  2847  000052                     vfprintf@fmt:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 2 bytes @ 0x51
  2851  000052                     	ds	2
  2852  000054                     vfprintf@ap:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 2 bytes @ 0x53
  2856  000054                     	ds	2
  2857  000056                     vfprintf@cfmt:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 2 bytes @ 0x55
  2861  000056                     	ds	2
  2862  000058                     
  2863                           ; 1 bytes @ 0x57
  2864 ;;
  2865 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2866 ;;
  2867 ;; *************** function _main *****************
  2868 ;; Defined at:
  2869 ;;		line 39 in file "main.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels required when called:   13
  2889 ;; This function calls:
  2890 ;;		_ADC_SetInterruptHandler
  2891 ;;		_IOCB4_SetInterruptHandler
  2892 ;;		_SPI_Open
  2893 ;;		_SYSTEM_Initialize
  2894 ;;		_lcd_draw_line
  2895 ;;		_lcd_draw_string
  2896 ;;		_lcd_init
  2897 ;;		_snprintf
  2898 ;; This function is called by:
  2899 ;;		Startup code after reset
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text0
  2904  002B3E                     __ptext0:
  2905                           	opt callstack 0
  2906  002B3E                     _main:
  2907                           	opt callstack 18
  2908  002B3E                     
  2909                           ;main.c: 42:     SYSTEM_Initialize();
  2910  002B3E  ECF2  F01B         	call	_SYSTEM_Initialize	;wreg free
  2911                           
  2912                           ;main.c: 48:     IOCB4_SetInterruptHandler(acende_led);
  2913  002B42  0E16               	movlw	low _acende_led
  2914  002B44  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  2915  002B46  0E36               	movlw	high _acende_led
  2916  002B48  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  2917  002B4A  EC15  F01C         	call	_IOCB4_SetInterruptHandler	;wreg free
  2918                           
  2919                           ;main.c: 50:     ADC_SetInterruptHandler(ADC_POT);
  2920  002B4E  0E1E               	movlw	low _ADC_POT
  2921  002B50  6E04               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
  2922  002B52  0E38               	movlw	high _ADC_POT
  2923  002B54  6E05               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
  2924  002B56  EC1A  F01C         	call	_ADC_SetInterruptHandler	;wreg free
  2925  002B5A                     
  2926                           ;main.c: 52:     SPI_Open(SPI_DEFAULT);
  2927  002B5A  0E00               	movlw	0
  2928  002B5C  EC3D  F018         	call	_SPI_Open
  2929  002B60                     
  2930                           ;main.c: 54:     lcd_init ();
  2931  002B60  EC78  F009         	call	_lcd_init	;wreg free
  2932  002B64                     
  2933                           ;main.c: 58:     lcd_draw_line(40,150,280,150,0xFFE0);
  2934  002B64  0E00               	movlw	0
  2935  002B66  6E14               	movwf	(lcd_draw_line@x0+1)^0,c
  2936  002B68  0E28               	movlw	40
  2937  002B6A  6E13               	movwf	lcd_draw_line@x0^0,c
  2938  002B6C  0E00               	movlw	0
  2939  002B6E  6E16               	movwf	(lcd_draw_line@y0+1)^0,c
  2940  002B70  0E96               	movlw	150
  2941  002B72  6E15               	movwf	lcd_draw_line@y0^0,c
  2942  002B74  0E01               	movlw	1
  2943  002B76  6E18               	movwf	(lcd_draw_line@x1+1)^0,c
  2944  002B78  0E18               	movlw	24
  2945  002B7A  6E17               	movwf	lcd_draw_line@x1^0,c
  2946  002B7C  0E00               	movlw	0
  2947  002B7E  6E1A               	movwf	(lcd_draw_line@y1+1)^0,c
  2948  002B80  0E96               	movlw	150
  2949  002B82  6E19               	movwf	lcd_draw_line@y1^0,c
  2950  002B84  0EFF               	movlw	255
  2951  002B86  6E1C               	movwf	(lcd_draw_line@color+1)^0,c
  2952  002B88  0EE0               	movlw	224
  2953  002B8A  6E1B               	movwf	lcd_draw_line@color^0,c
  2954  002B8C  EC18  F013         	call	_lcd_draw_line	;wreg free
  2955  002B90                     
  2956                           ;main.c: 60:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  2957  002B90  0E00               	movlw	0
  2958  002B92  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  2959  002B94  0E2D               	movlw	45
  2960  002B96  6E23               	movwf	lcd_draw_string@x^0,c
  2961  002B98  0E00               	movlw	0
  2962  002B9A  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  2963  002B9C  0E9B               	movlw	155
  2964  002B9E  6E25               	movwf	lcd_draw_string@y^0,c
  2965  002BA0  0E91               	movlw	low STR_1
  2966  002BA2  6E27               	movwf	lcd_draw_string@pS^0,c
  2967  002BA4  0EFF               	movlw	high STR_1
  2968  002BA6  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  2969  002BA8  0E00               	movlw	0
  2970  002BAA  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  2971  002BAC  0E1F               	movlw	31
  2972  002BAE  6E29               	movwf	lcd_draw_string@fg_color^0,c
  2973  002BB0  0E00               	movlw	0
  2974  002BB2  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  2975  002BB4  0E00               	movlw	0
  2976  002BB6  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  2977  002BB8  EC7E  F014         	call	_lcd_draw_string	;wreg free
  2978  002BBC                     
  2979                           ;main.c: 62:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  2980  002BBC  0E00               	movlw	0
  2981  002BBE  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  2982  002BC0  0E78               	movlw	120
  2983  002BC2  6E23               	movwf	lcd_draw_string@x^0,c
  2984  002BC4  0E00               	movlw	0
  2985  002BC6  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  2986  002BC8  0E78               	movlw	120
  2987  002BCA  6E25               	movwf	lcd_draw_string@y^0,c
  2988  002BCC  0EC3               	movlw	low STR_2
  2989  002BCE  6E27               	movwf	lcd_draw_string@pS^0,c
  2990  002BD0  0EFF               	movlw	high STR_2
  2991  002BD2  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  2992  002BD4  0E04               	movlw	4
  2993  002BD6  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  2994  002BD8  0E00               	movlw	0
  2995  002BDA  6E29               	movwf	lcd_draw_string@fg_color^0,c
  2996  002BDC  0E00               	movlw	0
  2997  002BDE  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  2998  002BE0  0E00               	movlw	0
  2999  002BE2  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3000  002BE4  EC7E  F014         	call	_lcd_draw_string	;wreg free
  3001  002BE8                     
  3002                           ;main.c: 66:     (INTCONbits.GIE = 1);
  3003  002BE8  8EF2               	bsf	242,7,c	;volatile
  3004  002BEA                     l4695:
  3005                           
  3006                           ;main.c: 79:     {;main.c: 81:         snprintf(string,sizeof(string),"percentagem = %d"
      +                          ,percentagem);
  3007  002BEA  0E00               	movlw	low _string
  3008  002BEC  0100               	movlb	0	; () banked
  3009  002BEE  6F91               	movwf	snprintf@s& (0+255),b
  3010  002BF0  0E01               	movlw	high _string
  3011  002BF2  6F92               	movwf	(snprintf@s+1)& (0+255),b
  3012  002BF4  0E00               	movlw	0
  3013  002BF6  6F94               	movwf	(snprintf@n+1)& (0+255),b
  3014  002BF8  0E64               	movlw	100
  3015  002BFA  6F93               	movwf	snprintf@n& (0+255),b
  3016  002BFC  0EB2               	movlw	low STR_3
  3017  002BFE  6F95               	movwf	snprintf@fmt& (0+255),b
  3018  002C00  0EFF               	movlw	high STR_3
  3019  002C02  6F96               	movwf	(snprintf@fmt+1)& (0+255),b
  3020  002C04  C0A7  F097         	movff	_percentagem,?_snprintf+6
  3021  002C08  C0A8  F098         	movff	_percentagem+1,?_snprintf+7
  3022  002C0C  EC3F  F01B         	call	_snprintf	;wreg free
  3023  002C10                     
  3024                           ;main.c: 82:         lcd_draw_string (120,80,string,0x0400,0x0000);
  3025  002C10  0E00               	movlw	0
  3026  002C12  6E24               	movwf	(lcd_draw_string@x+1)^0,c
  3027  002C14  0E78               	movlw	120
  3028  002C16  6E23               	movwf	lcd_draw_string@x^0,c
  3029  002C18  0E00               	movlw	0
  3030  002C1A  6E26               	movwf	(lcd_draw_string@y+1)^0,c
  3031  002C1C  0E50               	movlw	80
  3032  002C1E  6E25               	movwf	lcd_draw_string@y^0,c
  3033  002C20  0E00               	movlw	low _string
  3034  002C22  6E27               	movwf	lcd_draw_string@pS^0,c
  3035  002C24  0E01               	movlw	high _string
  3036  002C26  6E28               	movwf	(lcd_draw_string@pS+1)^0,c
  3037  002C28  0E04               	movlw	4
  3038  002C2A  6E2A               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3039  002C2C  0E00               	movlw	0
  3040  002C2E  6E29               	movwf	lcd_draw_string@fg_color^0,c
  3041  002C30  0E00               	movlw	0
  3042  002C32  6E2C               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3043  002C34  0E00               	movlw	0
  3044  002C36  6E2B               	movwf	lcd_draw_string@bg_color^0,c
  3045  002C38  EC7E  F014         	call	_lcd_draw_string	;wreg free
  3046  002C3C  EFF5  F015         	goto	l4695
  3047  002C40  EF3A  F000         	goto	start
  3048  002C44                     __end_of_main:
  3049                           	opt callstack 0
  3050                           
  3051 ;; *************** function _snprintf *****************
  3052 ;; Defined at:
  3053 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  s               2   49[BANK0 ] PTR unsigned char 
  3056 ;;		 -> string(100), 
  3057 ;;  n               2   51[BANK0 ] unsigned int 
  3058 ;;  fmt             2   53[BANK0 ] PTR const unsigned char 
  3059 ;;		 -> STR_3(17), 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  ap              2   59[BANK0 ] PTR void [1]
  3062 ;;		 -> ?_snprintf(2), 
  3063 ;;  ret             2    0        int 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2   49[BANK0 ] int 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3073 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;Total ram usage:       12 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:   12
  3080 ;; This function calls:
  3081 ;;		_vsnprintf
  3082 ;; This function is called by:
  3083 ;;		_main
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text1
  3088  00367E                     __ptext1:
  3089                           	opt callstack 0
  3090  00367E                     _snprintf:
  3091                           	opt callstack 18
  3092  00367E  0E97               	movlw	low (?_snprintf+6)
  3093  003680  0100               	movlb	0	; () banked
  3094  003682  6F9B               	movwf	snprintf@ap& (0+255),b
  3095  003684  0E00               	movlw	high (?_snprintf+6)
  3096  003686  6F9C               	movwf	(snprintf@ap+1)& (0+255),b
  3097  003688                     
  3098                           ; BSR set to: 0
  3099  003688  C091  F07B         	movff	snprintf@s,vsnprintf@s
  3100  00368C  C092  F07C         	movff	snprintf@s+1,vsnprintf@s+1
  3101  003690  C093  F07D         	movff	snprintf@n,vsnprintf@n
  3102  003694  C094  F07E         	movff	snprintf@n+1,vsnprintf@n+1
  3103  003698  C095  F07F         	movff	snprintf@fmt,vsnprintf@fmt
  3104  00369C  C096  F080         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3105  0036A0  0E9B               	movlw	low snprintf@ap
  3106  0036A2  6F81               	movwf	vsnprintf@ap& (0+255),b
  3107  0036A4  0E00               	movlw	high snprintf@ap
  3108  0036A6  6F82               	movwf	(vsnprintf@ap+1)& (0+255),b
  3109  0036A8  EC17  F015         	call	_vsnprintf	;wreg free
  3110  0036AC  0012               	return		;funcret
  3111  0036AE                     __end_of_snprintf:
  3112                           	opt callstack 0
  3113                           
  3114 ;; *************** function _vsnprintf *****************
  3115 ;; Defined at:
  3116 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  s               2   27[BANK0 ] PTR unsigned char 
  3119 ;;		 -> string(100), 
  3120 ;;  n               2   29[BANK0 ] unsigned int 
  3121 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  3122 ;;		 -> STR_3(17), 
  3123 ;;  ap              2   33[BANK0 ] PTR PTR void 
  3124 ;;		 -> snprintf@ap(2), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  f               6   43[BANK0 ] struct _IO_FILE
  3127 ;;  cnt             2   41[BANK0 ] int 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2   27[BANK0 ] int 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;Total ram usage:       22 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:   11
  3144 ;; This function calls:
  3145 ;;		_vfprintf
  3146 ;; This function is called by:
  3147 ;;		_snprintf
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text2
  3152  002A2E                     __ptext2:
  3153                           	opt callstack 0
  3154  002A2E                     _vsnprintf:
  3155                           	opt callstack 18
  3156  002A2E  0E80               	movlw	128
  3157  002A30  0100               	movlb	0	; () banked
  3158  002A32  5D7E               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3159  002A34  A0D8               	btfss	status,0,c
  3160  002A36  EF1F  F015         	goto	u4431
  3161  002A3A  EF21  F015         	goto	u4430
  3162  002A3E                     u4431:
  3163  002A3E  EF29  F015         	goto	l4651
  3164  002A42                     u4430:
  3165  002A42                     
  3166                           ; BSR set to: 0
  3167  002A42  0E00               	movlw	0
  3168  002A44  6F9E               	movwf	(_errno+1)& (0+255),b
  3169  002A46  0E4B               	movlw	75
  3170  002A48  6F9D               	movwf	_errno& (0+255),b
  3171  002A4A                     
  3172                           ; BSR set to: 0
  3173  002A4A  697B               	setf	?_vsnprintf& (0+255),b
  3174  002A4C  697C               	setf	(?_vsnprintf+1)& (0+255),b
  3175  002A4E  EF9E  F015         	goto	l1466
  3176  002A52                     l4651:
  3177                           
  3178                           ; BSR set to: 0
  3179  002A52  C07B  F08B         	movff	vsnprintf@s,vsnprintf@f
  3180  002A56  C07C  F08C         	movff	vsnprintf@s+1,vsnprintf@f+1
  3181  002A5A  517E               	movf	(vsnprintf@n+1)& (0+255),w,b
  3182  002A5C  E109               	bnz	u4440
  3183  002A5E  0E02               	movlw	2
  3184  002A60  5D7D               	subwf	vsnprintf@n& (0+255),w,b
  3185  002A62  A0D8               	btfss	status,0,c
  3186  002A64  EF36  F015         	goto	u4441
  3187  002A68  EF38  F015         	goto	u4440
  3188  002A6C                     u4441:
  3189  002A6C  EF44  F015         	goto	l4657
  3190  002A70                     u4440:
  3191  002A70                     
  3192                           ; BSR set to: 0
  3193  002A70  0EFF               	movlw	255
  3194  002A72  257D               	addwf	vsnprintf@n& (0+255),w,b
  3195  002A74  6F8F               	movwf	(vsnprintf@f+4)& (0+255),b
  3196  002A76  0EFF               	movlw	255
  3197  002A78  217E               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3198  002A7A  6F90               	movwf	(vsnprintf@f+5)& (0+255),b
  3199  002A7C                     
  3200                           ; BSR set to: 0
  3201  002A7C  0E00               	movlw	0
  3202  002A7E  6F8E               	movwf	(vsnprintf@f+3)& (0+255),b
  3203  002A80  0E00               	movlw	0
  3204  002A82  6F8D               	movwf	(vsnprintf@f+2)& (0+255),b
  3205  002A84  EF4C  F015         	goto	l4659
  3206  002A88                     l4657:
  3207                           
  3208                           ; BSR set to: 0
  3209  002A88  0E00               	movlw	0
  3210  002A8A  6F90               	movwf	(vsnprintf@f+5)& (0+255),b
  3211  002A8C  0E01               	movlw	1
  3212  002A8E  6F8F               	movwf	(vsnprintf@f+4)& (0+255),b
  3213  002A90  0E00               	movlw	0
  3214  002A92  6F8E               	movwf	(vsnprintf@f+3)& (0+255),b
  3215  002A94  0E01               	movlw	1
  3216  002A96  6F8D               	movwf	(vsnprintf@f+2)& (0+255),b
  3217  002A98                     l4659:
  3218                           
  3219                           ; BSR set to: 0
  3220  002A98  0E8B               	movlw	low vsnprintf@f
  3221  002A9A  6E50               	movwf	vfprintf@fp^0,c
  3222  002A9C  0E00               	movlw	high vsnprintf@f
  3223  002A9E  6E51               	movwf	(vfprintf@fp+1)^0,c
  3224  002AA0  C07F  F052         	movff	vsnprintf@fmt,vfprintf@fmt
  3225  002AA4  C080  F053         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3226  002AA8  C081  F054         	movff	vsnprintf@ap,vfprintf@ap
  3227  002AAC  C082  F055         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3228  002AB0  ECD6  F018         	call	_vfprintf	;wreg free
  3229  002AB4  C050  F089         	movff	?_vfprintf,vsnprintf@cnt
  3230  002AB8  C051  F08A         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3231  002ABC  0100               	movlb	0	; () banked
  3232  002ABE  517D               	movf	vsnprintf@n& (0+255),w,b
  3233  002AC0  117E               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3234  002AC2  B4D8               	btfsc	status,2,c
  3235  002AC4  EF66  F015         	goto	u4451
  3236  002AC8  EF68  F015         	goto	u4450
  3237  002ACC                     u4451:
  3238  002ACC  EF9A  F015         	goto	l4671
  3239  002AD0                     u4450:
  3240  002AD0                     
  3241                           ; BSR set to: 0
  3242  002AD0  BF8A               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3243  002AD2  EF6D  F015         	goto	u4461
  3244  002AD6  EF6F  F015         	goto	u4460
  3245  002ADA                     u4461:
  3246  002ADA  EF9A  F015         	goto	l4671
  3247  002ADE                     u4460:
  3248  002ADE                     
  3249                           ; BSR set to: 0
  3250  002ADE  0EFF               	movlw	255
  3251  002AE0  6F83               	movwf	??_vsnprintf& (0+255),b
  3252  002AE2  0EFF               	movlw	255
  3253  002AE4  6F84               	movwf	(??_vsnprintf+1)& (0+255),b
  3254  002AE6  C07D  F085         	movff	vsnprintf@n,??_vsnprintf+2
  3255  002AEA  C07E  F086         	movff	vsnprintf@n+1,??_vsnprintf+3
  3256  002AEE  5183               	movf	??_vsnprintf& (0+255),w,b
  3257  002AF0  2785               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3258  002AF2  5184               	movf	(??_vsnprintf+1)& (0+255),w,b
  3259  002AF4  2386               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3260  002AF6  5185               	movf	(??_vsnprintf+2)& (0+255),w,b
  3261  002AF8  5D89               	subwf	vsnprintf@cnt& (0+255),w,b
  3262  002AFA  5186               	movf	(??_vsnprintf+3)& (0+255),w,b
  3263  002AFC  598A               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3264  002AFE  A0D8               	btfss	status,0,c
  3265  002B00  EF84  F015         	goto	u4471
  3266  002B04  EF86  F015         	goto	u4470
  3267  002B08                     u4471:
  3268  002B08  EF8E  F015         	goto	l1471
  3269  002B0C                     u4470:
  3270  002B0C                     
  3271                           ; BSR set to: 0
  3272  002B0C  0EFF               	movlw	255
  3273  002B0E  257D               	addwf	vsnprintf@n& (0+255),w,b
  3274  002B10  6F87               	movwf	_vsnprintf$2014& (0+255),b
  3275  002B12  0EFF               	movlw	255
  3276  002B14  217E               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3277  002B16  6F88               	movwf	(_vsnprintf$2014+1)& (0+255),b
  3278  002B18  EF92  F015         	goto	l4669
  3279  002B1C                     l1471:
  3280                           
  3281                           ; BSR set to: 0
  3282  002B1C  C089  F087         	movff	vsnprintf@cnt,_vsnprintf$2014
  3283  002B20  C08A  F088         	movff	vsnprintf@cnt+1,_vsnprintf$2014+1
  3284  002B24                     l4669:
  3285                           
  3286                           ; BSR set to: 0
  3287  002B24  5187               	movf	_vsnprintf$2014& (0+255),w,b
  3288  002B26  257B               	addwf	vsnprintf@s& (0+255),w,b
  3289  002B28  6ED9               	movwf	fsr2l,c
  3290  002B2A  5188               	movf	(_vsnprintf$2014+1)& (0+255),w,b
  3291  002B2C  217C               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3292  002B2E  6EDA               	movwf	fsr2h,c
  3293  002B30  0E00               	movlw	0
  3294  002B32  6EDF               	movwf	indf2,c
  3295  002B34                     l4671:
  3296                           
  3297                           ; BSR set to: 0
  3298  002B34  C089  F07B         	movff	vsnprintf@cnt,?_vsnprintf
  3299  002B38  C08A  F07C         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3300  002B3C                     l1466:
  3301                           
  3302                           ; BSR set to: 0
  3303  002B3C  0012               	return		;funcret
  3304  002B3E                     __end_of_vsnprintf:
  3305                           	opt callstack 0
  3306                           
  3307 ;; *************** function _vfprintf *****************
  3308 ;; Defined at:
  3309 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3312 ;;		 -> vsnprintf@f(6), 
  3313 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3314 ;;		 -> STR_3(17), 
  3315 ;;  ap              2   83[COMRAM] PTR PTR void 
  3316 ;;		 -> snprintf@ap(2), 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3319 ;;		 -> STR_3(17), 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  2   79[COMRAM] int 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3329 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3333 ;;Total ram usage:        8 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:   10
  3336 ;; This function calls:
  3337 ;;		_vfpfcnvrt
  3338 ;; This function is called by:
  3339 ;;		_vsnprintf
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text3
  3344  0031AC                     __ptext3:
  3345                           	opt callstack 0
  3346  0031AC                     _vfprintf:
  3347                           	opt callstack 18
  3348  0031AC                     
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3350  0031AC  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3351  0031B0  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3352  0031B4                     
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3354  0031B4  0E00               	movlw	0
  3355  0031B6  0100               	movlb	0	; () banked
  3356  0031B8  6FA0               	movwf	(_nout+1)& (0+255),b
  3357  0031BA  0E00               	movlw	0
  3358  0031BC  6F9F               	movwf	_nout& (0+255),b
  3359                           
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3361  0031BE  EFF4  F018         	goto	l4015
  3362  0031C2                     l4013:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3366  0031C2  C050  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  3367  0031C6  C051  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3368  0031CA  0E56               	movlw	low vfprintf@cfmt
  3369  0031CC  6E48               	movwf	vfpfcnvrt@fmt^0,c
  3370  0031CE  0E00               	movlw	high vfprintf@cfmt
  3371  0031D0  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3372  0031D2  C054  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  3373  0031D6  C055  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3374  0031DA  EC3C  F000         	call	_vfpfcnvrt	;wreg free
  3375  0031DE  5046               	movf	?_vfpfcnvrt^0,w,c
  3376  0031E0  0100               	movlb	0	; () banked
  3377  0031E2  279F               	addwf	_nout& (0+255),f,b
  3378  0031E4  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  3379  0031E6  23A0               	addwfc	(_nout+1)& (0+255),f,b
  3380  0031E8                     l4015:
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3384  0031E8  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3385  0031EC  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3386  0031F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3387  0031F0  6AF8               	clrf	tblptru,c
  3388  0031F2                     	endif
  3389  0031F2                     	if	0	;tblptru may be non-zero
  3390  0031F2                     	endif
  3391  0031F2  0008               	tblrd		*
  3392  0031F4  50F5               	movf	tablat,w,c
  3393  0031F6  0900               	iorlw	0
  3394  0031F8  A4D8               	btfss	status,2,c
  3395  0031FA  EF01  F019         	goto	u3921
  3396  0031FE  EF03  F019         	goto	u3920
  3397  003202                     u3921:
  3398  003202  EFE1  F018         	goto	l4013
  3399  003206                     u3920:
  3400  003206                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3403  003206  C09F  F050         	movff	_nout,?_vfprintf
  3404  00320A  C0A0  F051         	movff	_nout+1,?_vfprintf+1
  3405  00320E                     
  3406                           ; BSR set to: 0
  3407  00320E  0012               	return		;funcret
  3408  003210                     __end_of_vfprintf:
  3409                           	opt callstack 0
  3410                           
  3411 ;; *************** function _vfpfcnvrt *****************
  3412 ;; Defined at:
  3413 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  3416 ;;		 -> vsnprintf@f(6), 
  3417 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  3418 ;;		 -> vfprintf@cfmt(2), 
  3419 ;;  ap              2   73[COMRAM] PTR PTR void 
  3420 ;;		 -> snprintf@ap(2), 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  llu             8   19[BANK0 ] unsigned long long 
  3423 ;;  ll              8    8[BANK0 ] long long 
  3424 ;;  f               4    0        long long 
  3425 ;;  ct              3    0        unsigned char [3]
  3426 ;;  vp              2   16[BANK0 ] PTR void 
  3427 ;;		 -> ?_snprintf(2), 
  3428 ;;  done            2    2[BANK0 ] int 
  3429 ;;  cp              2    0[BANK0 ] PTR unsigned char 
  3430 ;;		 -> ?_snprintf(2), 
  3431 ;;  i               2    0        int 
  3432 ;;  c               1   18[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2   69[COMRAM] int 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3442 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;      Totals:        10      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3446 ;;Total ram usage:       37 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    9
  3449 ;; This function calls:
  3450 ;;		_atoi
  3451 ;;		_ctoa
  3452 ;;		_dtoa
  3453 ;;		_fputc
  3454 ;;		_isdigit
  3455 ;;		_otoa
  3456 ;;		_stoa
  3457 ;;		_strncmp
  3458 ;;		_utoa
  3459 ;;		_xtoa
  3460 ;; This function is called by:
  3461 ;;		_vfprintf
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text4
  3466  000078                     __ptext4:
  3467                           	opt callstack 0
  3468  000078                     _vfpfcnvrt:
  3469                           	opt callstack 18
  3470  000078                     
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3472  000078  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3473  00007C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3474  000080  CFDE FFF6          	movff	postinc2,tblptrl
  3475  000084  CFDD FFF7          	movff	postdec2,tblptrh
  3476  000088                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3477  000088  6AF8               	clrf	tblptru,c
  3478  00008A                     	endif
  3479  00008A                     	if	0	;tblptru may be non-zero
  3480  00008A                     	endif
  3481  00008A  0008               	tblrd		*
  3482  00008C  50F5               	movf	tablat,w,c
  3483  00008E  0A25               	xorlw	37
  3484  000090  A4D8               	btfss	status,2,c
  3485  000092  EF4D  F000         	goto	u3431
  3486  000096  EF4F  F000         	goto	u3430
  3487  00009A                     u3431:
  3488  00009A  EF5B  F009         	goto	l3965
  3489  00009E                     u3430:
  3490  00009E                     
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3492  00009E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3493  0000A2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3494  0000A6  2ADE               	incf	postinc2,f,c
  3495  0000A8  0E00               	movlw	0
  3496  0000AA  22DD               	addwfc	postdec2,f,c
  3497  0000AC                     
  3498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3499  0000AC  0E00               	movlw	0
  3500  0000AE  0100               	movlb	0	; () banked
  3501  0000B0  6FA2               	movwf	(_width+1)& (0+255),b
  3502  0000B2  0E00               	movlw	0
  3503  0000B4  6FA1               	movwf	_width& (0+255),b
  3504  0000B6  C0A1  F058         	movff	_width,_flags
  3505  0000BA  C0A2  F059         	movff	_width+1,_flags+1
  3506  0000BE                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3509  0000BE  69A3               	setf	_prec& (0+255),b
  3510  0000C0  69A4               	setf	(_prec+1)& (0+255),b
  3511  0000C2                     
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  3514  0000C2  0E00               	movlw	0
  3515  0000C4  6F63               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3516  0000C6  0E00               	movlw	0
  3517  0000C8  6F62               	movwf	vfpfcnvrt@done& (0+255),b
  3518                           
  3519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3520  0000CA  EFAE  F000         	goto	l3683
  3521  0000CE                     l3657:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  3525  0000CE  8058               	bsf	_flags^0,0,c
  3526  0000D0                     l3659:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  3530  0000D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3531  0000D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  0000D8  2ADE               	incf	postinc2,f,c
  3533  0000DA  0E00               	movlw	0
  3534  0000DC  22DD               	addwfc	postdec2,f,c
  3535                           
  3536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  3537  0000DE  EFAE  F000         	goto	l3683
  3538  0000E2                     l3661:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  3542  0000E2  8258               	bsf	_flags^0,1,c
  3543  0000E4  EF68  F000         	goto	l3659
  3544  0000E8                     l3665:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  3548  0000E8  8458               	bsf	_flags^0,2,c
  3549  0000EA  EF68  F000         	goto	l3659
  3550  0000EE                     l3669:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  3554  0000EE  8658               	bsf	_flags^0,3,c
  3555  0000F0  EF68  F000         	goto	l3659
  3556  0000F4                     l3673:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  3560  0000F4  8858               	bsf	_flags^0,4,c
  3561  0000F6  EF68  F000         	goto	l3659
  3562  0000FA                     l3677:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  3566  0000FA  0E00               	movlw	0
  3567  0000FC  6F63               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  3568  0000FE  0E01               	movlw	1
  3569  000100  6F62               	movwf	vfpfcnvrt@done& (0+255),b
  3570                           
  3571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  3572  000102  EFAE  F000         	goto	l3683
  3573  000106                     l3681:
  3574                           
  3575                           ; BSR set to: 0
  3576  000106  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3577  00010A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3578  00010E  CFDE FFF6          	movff	postinc2,tblptrl
  3579  000112  CFDD FFF7          	movff	postdec2,tblptrh
  3580  000116                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3581  000116  6AF8               	clrf	tblptru,c
  3582  000118                     	endif
  3583  000118                     	if	0	;tblptru may be non-zero
  3584  000118                     	endif
  3585  000118  0008               	tblrd		*
  3586  00011A  50F5               	movf	tablat,w,c
  3587  00011C  6E4C               	movwf	??_vfpfcnvrt^0,c
  3588  00011E  6A4D               	clrf	(??_vfpfcnvrt+1)^0,c
  3589                           
  3590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3591                           ; Switch size 1, requested type "simple"
  3592                           ; Number of cases is 1, Range of values is 0 to 0
  3593                           ; switch strategies available:
  3594                           ; Name         Instructions Cycles
  3595                           ; simple_byte            4     3 (average)
  3596                           ;	Chosen strategy is simple_byte
  3597  000120  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  3598  000122  0A00               	xorlw	0	; case 0
  3599  000124  B4D8               	btfsc	status,2,c
  3600  000126  EF97  F000         	goto	l4769
  3601  00012A  EF7D  F000         	goto	l3677
  3602  00012E                     l4769:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ; Switch size 1, requested type "simple"
  3606                           ; Number of cases is 5, Range of values is 32 to 48
  3607                           ; switch strategies available:
  3608                           ; Name         Instructions Cycles
  3609                           ; simple_byte           16     9 (average)
  3610                           ;	Chosen strategy is simple_byte
  3611  00012E  504C               	movf	??_vfpfcnvrt^0,w,c
  3612  000130  0A20               	xorlw	32	; case 32
  3613  000132  B4D8               	btfsc	status,2,c
  3614  000134  EF77  F000         	goto	l3669
  3615  000138  0A03               	xorlw	3	; case 35
  3616  00013A  B4D8               	btfsc	status,2,c
  3617  00013C  EF7A  F000         	goto	l3673
  3618  000140  0A08               	xorlw	8	; case 43
  3619  000142  B4D8               	btfsc	status,2,c
  3620  000144  EF74  F000         	goto	l3665
  3621  000148  0A06               	xorlw	6	; case 45
  3622  00014A  B4D8               	btfsc	status,2,c
  3623  00014C  EF67  F000         	goto	l3657
  3624  000150  0A1D               	xorlw	29	; case 48
  3625  000152  B4D8               	btfsc	status,2,c
  3626  000154  EF71  F000         	goto	l3661
  3627  000158  EF7D  F000         	goto	l3677
  3628  00015C                     l3683:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  3632  00015C  5162               	movf	vfpfcnvrt@done& (0+255),w,b
  3633  00015E  1163               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  3634  000160  B4D8               	btfsc	status,2,c
  3635  000162  EFB5  F000         	goto	u3441
  3636  000166  EFB7  F000         	goto	u3440
  3637  00016A                     u3441:
  3638  00016A  EF83  F000         	goto	l3681
  3639  00016E                     u3440:
  3640  00016E                     
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  3643  00016E  A058               	btfss	_flags^0,0,c
  3644  000170  EFBC  F000         	goto	u3451
  3645  000174  EFBE  F000         	goto	u3450
  3646  000178                     u3451:
  3647  000178  EFBF  F000         	goto	l3687
  3648  00017C                     u3450:
  3649  00017C                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  3652  00017C  9258               	bcf	_flags^0,1,c
  3653  00017E                     l3687:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3657  00017E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3658  000182  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3659  000186  CFDE FFF6          	movff	postinc2,tblptrl
  3660  00018A  CFDD FFF7          	movff	postdec2,tblptrh
  3661  00018E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3662  00018E  6AF8               	clrf	tblptru,c
  3663  000190                     	endif
  3664  000190                     	if	0	;tblptru may be non-zero
  3665  000190                     	endif
  3666  000190  0008               	tblrd		*
  3667  000192  50F5               	movf	tablat,w,c
  3668  000194  0A2A               	xorlw	42
  3669  000196  A4D8               	btfss	status,2,c
  3670  000198  EFD0  F000         	goto	u3461
  3671  00019C  EFD2  F000         	goto	u3460
  3672  0001A0                     u3461:
  3673  0001A0  EFFB  F000         	goto	l3695
  3674  0001A4                     u3460:
  3675  0001A4                     
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3678  0001A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3679  0001A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3680  0001AC  2ADE               	incf	postinc2,f,c
  3681  0001AE  0E00               	movlw	0
  3682  0001B0  22DD               	addwfc	postdec2,f,c
  3683                           
  3684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3685  0001B2  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3686  0001B6  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3687  0001BA  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  3688  0001BE  0E02               	movlw	2
  3689  0001C0  26DE               	addwf	postinc2,f,c
  3690  0001C2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  3691  0001C6  0E00               	movlw	0
  3692  0001C8  22DD               	addwfc	postdec2,f,c
  3693  0001CA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3694  0001CE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3695  0001D2  CFDE F0A1          	movff	postinc2,_width
  3696  0001D6  CFDD F0A2          	movff	postdec2,_width+1
  3697  0001DA                     
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3700  0001DA  BFA2               	btfsc	(_width+1)& (0+255),7,b
  3701  0001DC  EFF4  F000         	goto	u3470
  3702  0001E0  EFF2  F000         	goto	u3471
  3703  0001E4                     u3471:
  3704  0001E4  EF40  F001         	goto	l3705
  3705  0001E8                     u3470:
  3706  0001E8                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3709  0001E8  8058               	bsf	_flags^0,0,c
  3710                           
  3711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3712  0001EA  6DA1               	negf	_width& (0+255),b
  3713  0001EC  1FA2               	comf	(_width+1)& (0+255),f,b
  3714  0001EE  B0D8               	btfsc	status,0,c
  3715  0001F0  2BA2               	incf	(_width+1)& (0+255),f,b
  3716  0001F2  EF40  F001         	goto	l3705
  3717  0001F6                     l3695:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3721  0001F6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3722  0001FA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3723  0001FE  CFDE F00B          	movff	postinc2,atoi@s
  3724  000202  CFDD F00C          	movff	postdec2,atoi@s+1
  3725  000206  EC09  F010         	call	_atoi	;wreg free
  3726  00020A  C00B  F0A1         	movff	?_atoi,_width
  3727  00020E  C00C  F0A2         	movff	?_atoi+1,_width+1
  3728                           
  3729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3730  000212  EF12  F001         	goto	l3699
  3731  000216                     l3697:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3735  000216  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3736  00021A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3737  00021E  2ADE               	incf	postinc2,f,c
  3738  000220  0E00               	movlw	0
  3739  000222  22DD               	addwfc	postdec2,f,c
  3740  000224                     l3699:
  3741  000224  0ED0               	movlw	208
  3742  000226  6E4C               	movwf	??_vfpfcnvrt^0,c
  3743  000228  0EFF               	movlw	255
  3744  00022A  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  3745  00022C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3746  000230  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3747  000234  CFDE FFF6          	movff	postinc2,tblptrl
  3748  000238  CFDD FFF7          	movff	postdec2,tblptrh
  3749  00023C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3750  00023C  6AF8               	clrf	tblptru,c
  3751  00023E                     	endif
  3752  00023E                     	if	0	;tblptru may be non-zero
  3753  00023E                     	endif
  3754  00023E  0008               	tblrd		*
  3755  000240  50F5               	movf	tablat,w,c
  3756  000242  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  3757  000244  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  3758  000246  504C               	movf	??_vfpfcnvrt^0,w,c
  3759  000248  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3760  00024A  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  3761  00024C  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3762  00024E  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  3763  000250  E10A               	bnz	u3480
  3764  000252  0E0A               	movlw	10
  3765  000254  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3766  000256  A0D8               	btfss	status,0,c
  3767  000258  EF30  F001         	goto	u3481
  3768  00025C  EF33  F001         	goto	u3480
  3769  000260                     u3481:
  3770  000260  0E01               	movlw	1
  3771  000262  EF34  F001         	goto	u3490
  3772  000266                     u3480:
  3773  000266  0E00               	movlw	0
  3774  000268                     u3490:
  3775  000268  0100               	movlb	0	; () banked
  3776  00026A  6F64               	movwf	_vfpfcnvrt$1313& (0+255),b
  3777  00026C  6B65               	clrf	(_vfpfcnvrt$1313+1)& (0+255),b
  3778  00026E                     
  3779                           ; BSR set to: 0
  3780  00026E  5164               	movf	_vfpfcnvrt$1313& (0+255),w,b
  3781  000270  1165               	iorwf	(_vfpfcnvrt$1313+1)& (0+255),w,b
  3782  000272  A4D8               	btfss	status,2,c
  3783  000274  EF3E  F001         	goto	u3501
  3784  000278  EF40  F001         	goto	u3500
  3785  00027C                     u3501:
  3786  00027C  EF0B  F001         	goto	l3697
  3787  000280                     u3500:
  3788  000280                     l3705:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  3792  000280  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3793  000284  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3794  000288  CFDE FFF6          	movff	postinc2,tblptrl
  3795  00028C  CFDD FFF7          	movff	postdec2,tblptrh
  3796  000290                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3797  000290  6AF8               	clrf	tblptru,c
  3798  000292                     	endif
  3799  000292                     	if	0	;tblptru may be non-zero
  3800  000292                     	endif
  3801  000292  0008               	tblrd		*
  3802  000294  50F5               	movf	tablat,w,c
  3803  000296  0A2E               	xorlw	46
  3804  000298  A4D8               	btfss	status,2,c
  3805  00029A  EF51  F001         	goto	u3511
  3806  00029E  EF53  F001         	goto	u3510
  3807  0002A2                     u3511:
  3808  0002A2  EFD3  F001         	goto	l3725
  3809  0002A6                     u3510:
  3810  0002A6                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  3813  0002A6  0E00               	movlw	0
  3814  0002A8  6FA4               	movwf	(_prec+1)& (0+255),b
  3815  0002AA  0E00               	movlw	0
  3816  0002AC  6FA3               	movwf	_prec& (0+255),b
  3817  0002AE                     
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  3820  0002AE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3821  0002B2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3822  0002B6  2ADE               	incf	postinc2,f,c
  3823  0002B8  0E00               	movlw	0
  3824  0002BA  22DD               	addwfc	postdec2,f,c
  3825  0002BC                     
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  3828  0002BC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3829  0002C0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3830  0002C4  CFDE FFF6          	movff	postinc2,tblptrl
  3831  0002C8  CFDD FFF7          	movff	postdec2,tblptrh
  3832  0002CC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3833  0002CC  6AF8               	clrf	tblptru,c
  3834  0002CE                     	endif
  3835  0002CE                     	if	0	;tblptru may be non-zero
  3836  0002CE                     	endif
  3837  0002CE  0008               	tblrd		*
  3838  0002D0  50F5               	movf	tablat,w,c
  3839  0002D2  0A2A               	xorlw	42
  3840  0002D4  A4D8               	btfss	status,2,c
  3841  0002D6  EF6F  F001         	goto	u3521
  3842  0002DA  EF71  F001         	goto	u3520
  3843  0002DE                     u3521:
  3844  0002DE  EF8E  F001         	goto	l3715
  3845  0002E2                     u3520:
  3846  0002E2                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  3849  0002E2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3850  0002E6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3851  0002EA  2ADE               	incf	postinc2,f,c
  3852  0002EC  0E00               	movlw	0
  3853  0002EE  22DD               	addwfc	postdec2,f,c
  3854                           
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3856  0002F0  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3857  0002F4  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3858  0002F8  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  3859  0002FC  0E02               	movlw	2
  3860  0002FE  26DE               	addwf	postinc2,f,c
  3861  000300  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  3862  000304  0E00               	movlw	0
  3863  000306  22DD               	addwfc	postdec2,f,c
  3864  000308  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3865  00030C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3866  000310  CFDE F0A3          	movff	postinc2,_prec
  3867  000314  CFDD F0A4          	movff	postdec2,_prec+1
  3868                           
  3869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3870  000318  EFD3  F001         	goto	l3725
  3871  00031C                     l3715:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3875  00031C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3876  000320  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3877  000324  CFDE F00B          	movff	postinc2,atoi@s
  3878  000328  CFDD F00C          	movff	postdec2,atoi@s+1
  3879  00032C  EC09  F010         	call	_atoi	;wreg free
  3880  000330  C00B  F0A3         	movff	?_atoi,_prec
  3881  000334  C00C  F0A4         	movff	?_atoi+1,_prec+1
  3882                           
  3883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3884  000338  EFA5  F001         	goto	l3719
  3885  00033C                     l3717:
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3889  00033C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890  000340  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891  000344  2ADE               	incf	postinc2,f,c
  3892  000346  0E00               	movlw	0
  3893  000348  22DD               	addwfc	postdec2,f,c
  3894  00034A                     l3719:
  3895  00034A  0ED0               	movlw	208
  3896  00034C  6E4C               	movwf	??_vfpfcnvrt^0,c
  3897  00034E  0EFF               	movlw	255
  3898  000350  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  3899  000352  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3900  000356  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3901  00035A  CFDE FFF6          	movff	postinc2,tblptrl
  3902  00035E  CFDD FFF7          	movff	postdec2,tblptrh
  3903  000362                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3904  000362  6AF8               	clrf	tblptru,c
  3905  000364                     	endif
  3906  000364                     	if	0	;tblptru may be non-zero
  3907  000364                     	endif
  3908  000364  0008               	tblrd		*
  3909  000366  50F5               	movf	tablat,w,c
  3910  000368  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  3911  00036A  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  3912  00036C  504C               	movf	??_vfpfcnvrt^0,w,c
  3913  00036E  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3914  000370  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  3915  000372  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3916  000374  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  3917  000376  E10A               	bnz	u3530
  3918  000378  0E0A               	movlw	10
  3919  00037A  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3920  00037C  A0D8               	btfss	status,0,c
  3921  00037E  EFC3  F001         	goto	u3531
  3922  000382  EFC6  F001         	goto	u3530
  3923  000386                     u3531:
  3924  000386  0E01               	movlw	1
  3925  000388  EFC7  F001         	goto	u3540
  3926  00038C                     u3530:
  3927  00038C  0E00               	movlw	0
  3928  00038E                     u3540:
  3929  00038E  0100               	movlb	0	; () banked
  3930  000390  6F66               	movwf	_vfpfcnvrt$1314& (0+255),b
  3931  000392  6B67               	clrf	(_vfpfcnvrt$1314+1)& (0+255),b
  3932  000394                     
  3933                           ; BSR set to: 0
  3934  000394  5166               	movf	_vfpfcnvrt$1314& (0+255),w,b
  3935  000396  1167               	iorwf	(_vfpfcnvrt$1314+1)& (0+255),w,b
  3936  000398  A4D8               	btfss	status,2,c
  3937  00039A  EFD1  F001         	goto	u3551
  3938  00039E  EFD3  F001         	goto	u3550
  3939  0003A2                     u3551:
  3940  0003A2  EF9E  F001         	goto	l3717
  3941  0003A6                     u3550:
  3942  0003A6                     l3725:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3946  0003A6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3947  0003AA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3948  0003AE  CFDE FFF6          	movff	postinc2,tblptrl
  3949  0003B2  CFDD FFF7          	movff	postdec2,tblptrh
  3950  0003B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3951  0003B6  6AF8               	clrf	tblptru,c
  3952  0003B8                     	endif
  3953  0003B8                     	if	0	;tblptru may be non-zero
  3954  0003B8                     	endif
  3955  0003B8  0008               	tblrd		*
  3956  0003BA  50F5               	movf	tablat,w,c
  3957  0003BC  0A63               	xorlw	99
  3958  0003BE  A4D8               	btfss	status,2,c
  3959  0003C0  EFE4  F001         	goto	u3561
  3960  0003C4  EFE6  F001         	goto	u3560
  3961  0003C8                     u3561:
  3962  0003C8  EF0D  F002         	goto	l3733
  3963  0003CC                     u3560:
  3964  0003CC                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3967  0003CC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3968  0003D0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3969  0003D4  2ADE               	incf	postinc2,f,c
  3970  0003D6  0E00               	movlw	0
  3971  0003D8  22DD               	addwfc	postdec2,f,c
  3972                           
  3973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3974  0003DA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3975  0003DE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3976  0003E2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  3977  0003E6  0E02               	movlw	2
  3978  0003E8  26DE               	addwf	postinc2,f,c
  3979  0003EA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  3980  0003EE  0E00               	movlw	0
  3981  0003F0  22DD               	addwfc	postdec2,f,c
  3982  0003F2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3983  0003F6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3984  0003FA  50DF               	movf	indf2,w,c
  3985  0003FC  6F72               	movwf	vfpfcnvrt@c& (0+255),b
  3986  0003FE                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  3989  0003FE  C046  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  3990  000402  C047  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3991  000406  C072  F021         	movff	vfpfcnvrt@c,ctoa@c
  3992  00040A  EC37  F019         	call	_ctoa	;wreg free
  3993  00040E  C01F  F046         	movff	?_ctoa,?_vfpfcnvrt
  3994  000412  C020  F047         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3995  000416  EF77  F009         	goto	l611
  3996  00041A                     l3733:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4000  00041A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4001  00041E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4002  000422  CFDE F004          	movff	postinc2,strncmp@_l
  4003  000426  CFDD F005          	movff	postdec2,strncmp@_l+1
  4004  00042A  0ED2               	movlw	low STR_4
  4005  00042C  6E06               	movwf	strncmp@_r^0,c
  4006  00042E  0EFF               	movlw	high STR_4
  4007  000430  6E07               	movwf	(strncmp@_r+1)^0,c
  4008  000432  0E00               	movlw	0
  4009  000434  6E09               	movwf	(strncmp@n+1)^0,c
  4010  000436  0E03               	movlw	3
  4011  000438  6E08               	movwf	strncmp@n^0,c
  4012  00043A  EC9A  F016         	call	_strncmp	;wreg free
  4013  00043E  5004               	movf	?_strncmp^0,w,c
  4014  000440  1005               	iorwf	(?_strncmp+1)^0,w,c
  4015  000442  B4D8               	btfsc	status,2,c
  4016  000444  EF26  F002         	goto	u3571
  4017  000448  EF28  F002         	goto	u3570
  4018  00044C                     u3571:
  4019  00044C  EF43  F002         	goto	l3737
  4020  000450                     u3570:
  4021  000450  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4022  000454  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4023  000458  CFDE F004          	movff	postinc2,strncmp@_l
  4024  00045C  CFDD F005          	movff	postdec2,strncmp@_l+1
  4025  000460  0ED6               	movlw	low STR_8
  4026  000462  6E06               	movwf	strncmp@_r^0,c
  4027  000464  0EFF               	movlw	high STR_8
  4028  000466  6E07               	movwf	(strncmp@_r+1)^0,c
  4029  000468  0E00               	movlw	0
  4030  00046A  6E09               	movwf	(strncmp@n+1)^0,c
  4031  00046C  0E03               	movlw	3
  4032  00046E  6E08               	movwf	strncmp@n^0,c
  4033  000470  EC9A  F016         	call	_strncmp	;wreg free
  4034  000474  5004               	movf	?_strncmp^0,w,c
  4035  000476  1005               	iorwf	(?_strncmp+1)^0,w,c
  4036  000478  A4D8               	btfss	status,2,c
  4037  00047A  EF41  F002         	goto	u3581
  4038  00047E  EF43  F002         	goto	u3580
  4039  000482                     u3581:
  4040  000482  EF84  F002         	goto	l3743
  4041  000486                     u3580:
  4042  000486                     l3737:
  4043                           
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4045  000486  0E03               	movlw	3
  4046  000488  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  00048C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  000490  26DE               	addwf	postinc2,f,c
  4049  000492  0E00               	movlw	0
  4050  000494  22DD               	addwfc	postdec2,f,c
  4051                           
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4053  000496  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4054  00049A  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4055  00049E  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4056  0004A2  0E02               	movlw	2
  4057  0004A4  26DE               	addwf	postinc2,f,c
  4058  0004A6  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4059  0004AA  0E00               	movlw	0
  4060  0004AC  22DD               	addwfc	postdec2,f,c
  4061  0004AE  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4062  0004B2  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4063  0004B6  50DF               	movf	indf2,w,c
  4064  0004B8  0100               	movlb	0	; () banked
  4065  0004BA  6F68               	movwf	vfpfcnvrt@ll& (0+255),b
  4066  0004BC  0E00               	movlw	0
  4067  0004BE  BF68               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4068  0004C0  0EFF               	movlw	-1
  4069  0004C2  6F69               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4070  0004C4  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4071  0004C6  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4072  0004C8  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4073  0004CA  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4074  0004CC  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4075  0004CE  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4076  0004D0                     l3739:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4080  0004D0  C046  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  4081  0004D4  C047  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4082  0004D8  C068  F021         	movff	vfpfcnvrt@ll,dtoa@d
  4083  0004DC  C069  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4084  0004E0  C06A  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4085  0004E4  C06B  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4086  0004E8  C06C  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4087  0004EC  C06D  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4088  0004F0  C06E  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4089  0004F4  C06F  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4090  0004F8  EC3B  F00B         	call	_dtoa	;wreg free
  4091  0004FC  C01F  F046         	movff	?_dtoa,?_vfpfcnvrt
  4092  000500  C020  F047         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4093  000504  EF77  F009         	goto	l611
  4094  000508                     l3743:
  4095                           
  4096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4097  000508  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4098  00050C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4099  000510  CFDE F004          	movff	postinc2,strncmp@_l
  4100  000514  CFDD F005          	movff	postdec2,strncmp@_l+1
  4101  000518  0ED3               	movlw	low (STR_4+1)
  4102  00051A  6E06               	movwf	strncmp@_r^0,c
  4103  00051C  0EFF               	movlw	high (STR_4+1)
  4104  00051E  6E07               	movwf	(strncmp@_r+1)^0,c
  4105  000520  0E00               	movlw	0
  4106  000522  6E09               	movwf	(strncmp@n+1)^0,c
  4107  000524  0E02               	movlw	2
  4108  000526  6E08               	movwf	strncmp@n^0,c
  4109  000528  EC9A  F016         	call	_strncmp	;wreg free
  4110  00052C  5004               	movf	?_strncmp^0,w,c
  4111  00052E  1005               	iorwf	(?_strncmp+1)^0,w,c
  4112  000530  B4D8               	btfsc	status,2,c
  4113  000532  EF9D  F002         	goto	u3591
  4114  000536  EF9F  F002         	goto	u3590
  4115  00053A                     u3591:
  4116  00053A  EFBA  F002         	goto	l3747
  4117  00053E                     u3590:
  4118  00053E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4119  000542  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4120  000546  CFDE F004          	movff	postinc2,strncmp@_l
  4121  00054A  CFDD F005          	movff	postdec2,strncmp@_l+1
  4122  00054E  0ED7               	movlw	low (STR_8+1)
  4123  000550  6E06               	movwf	strncmp@_r^0,c
  4124  000552  0EFF               	movlw	high (STR_8+1)
  4125  000554  6E07               	movwf	(strncmp@_r+1)^0,c
  4126  000556  0E00               	movlw	0
  4127  000558  6E09               	movwf	(strncmp@n+1)^0,c
  4128  00055A  0E02               	movlw	2
  4129  00055C  6E08               	movwf	strncmp@n^0,c
  4130  00055E  EC9A  F016         	call	_strncmp	;wreg free
  4131  000562  5004               	movf	?_strncmp^0,w,c
  4132  000564  1005               	iorwf	(?_strncmp+1)^0,w,c
  4133  000566  A4D8               	btfss	status,2,c
  4134  000568  EFB8  F002         	goto	u3601
  4135  00056C  EFBA  F002         	goto	u3600
  4136  000570                     u3601:
  4137  000570  EFE2  F002         	goto	l3753
  4138  000574                     u3600:
  4139  000574                     l3747:
  4140                           
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4142  000574  0E02               	movlw	2
  4143  000576  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4144  00057A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4145  00057E  26DE               	addwf	postinc2,f,c
  4146  000580  0E00               	movlw	0
  4147  000582  22DD               	addwfc	postdec2,f,c
  4148                           
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4150  000584  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4151  000588  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4152  00058C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4153  000590  0E02               	movlw	2
  4154  000592  26DE               	addwf	postinc2,f,c
  4155  000594  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4156  000598  0E00               	movlw	0
  4157  00059A  22DD               	addwfc	postdec2,f,c
  4158  00059C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4159  0005A0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4160  0005A4  CFDE F068          	movff	postinc2,vfpfcnvrt@ll
  4161  0005A8  CFDD F069          	movff	postdec2,vfpfcnvrt@ll+1
  4162  0005AC  0100               	movlb	0	; () banked
  4163  0005AE  0E00               	movlw	0
  4164  0005B0  BF69               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4165  0005B2  0EFF               	movlw	-1
  4166  0005B4  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4167  0005B6  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4168  0005B8  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4169  0005BA  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4170  0005BC  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4171  0005BE  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4172  0005C0  EF68  F002         	goto	l3739
  4173  0005C4                     l3753:
  4174                           
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4176  0005C4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4177  0005C8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4178  0005CC  CFDE FFF6          	movff	postinc2,tblptrl
  4179  0005D0  CFDD FFF7          	movff	postdec2,tblptrh
  4180  0005D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4181  0005D4  6AF8               	clrf	tblptru,c
  4182  0005D6                     	endif
  4183  0005D6                     	if	0	;tblptru may be non-zero
  4184  0005D6                     	endif
  4185  0005D6  0008               	tblrd		*
  4186  0005D8  50F5               	movf	tablat,w,c
  4187  0005DA  0A64               	xorlw	100
  4188  0005DC  B4D8               	btfsc	status,2,c
  4189  0005DE  EFF3  F002         	goto	u3611
  4190  0005E2  EFF5  F002         	goto	u3610
  4191  0005E6                     u3611:
  4192  0005E6  EF08  F003         	goto	l3757
  4193  0005EA                     u3610:
  4194  0005EA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4195  0005EE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4196  0005F2  CFDE FFF6          	movff	postinc2,tblptrl
  4197  0005F6  CFDD FFF7          	movff	postdec2,tblptrh
  4198  0005FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4199  0005FA  6AF8               	clrf	tblptru,c
  4200  0005FC                     	endif
  4201  0005FC                     	if	0	;tblptru may be non-zero
  4202  0005FC                     	endif
  4203  0005FC  0008               	tblrd		*
  4204  0005FE  50F5               	movf	tablat,w,c
  4205  000600  0A69               	xorlw	105
  4206  000602  A4D8               	btfss	status,2,c
  4207  000604  EF06  F003         	goto	u3621
  4208  000608  EF08  F003         	goto	u3620
  4209  00060C                     u3621:
  4210  00060C  EF2F  F003         	goto	l3763
  4211  000610                     u3620:
  4212  000610                     l3757:
  4213                           
  4214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4215  000610  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4216  000614  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4217  000618  2ADE               	incf	postinc2,f,c
  4218  00061A  0E00               	movlw	0
  4219  00061C  22DD               	addwfc	postdec2,f,c
  4220                           
  4221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4222  00061E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4223  000622  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4224  000626  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4225  00062A  0E02               	movlw	2
  4226  00062C  26DE               	addwf	postinc2,f,c
  4227  00062E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4228  000632  0E00               	movlw	0
  4229  000634  22DD               	addwfc	postdec2,f,c
  4230  000636  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4231  00063A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4232  00063E  CFDE F068          	movff	postinc2,vfpfcnvrt@ll
  4233  000642  CFDD F069          	movff	postdec2,vfpfcnvrt@ll+1
  4234  000646  0100               	movlb	0	; () banked
  4235  000648  0E00               	movlw	0
  4236  00064A  BF69               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4237  00064C  0EFF               	movlw	-1
  4238  00064E  6F6A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4239  000650  6F6B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4240  000652  6F6C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4241  000654  6F6D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4242  000656  6F6E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4243  000658  6F6F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4244  00065A  EF68  F002         	goto	l3739
  4245  00065E                     l3763:
  4246                           
  4247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4248  00065E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4249  000662  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4250  000666  CFDE F004          	movff	postinc2,strncmp@_l
  4251  00066A  CFDD F005          	movff	postdec2,strncmp@_l+1
  4252  00066E  0EED               	movlw	low STR_22
  4253  000670  6E06               	movwf	strncmp@_r^0,c
  4254  000672  0EFF               	movlw	high STR_22
  4255  000674  6E07               	movwf	(strncmp@_r+1)^0,c
  4256  000676  0E00               	movlw	0
  4257  000678  6E09               	movwf	(strncmp@n+1)^0,c
  4258  00067A  0E02               	movlw	2
  4259  00067C  6E08               	movwf	strncmp@n^0,c
  4260  00067E  EC9A  F016         	call	_strncmp	;wreg free
  4261  000682  5004               	movf	?_strncmp^0,w,c
  4262  000684  1005               	iorwf	(?_strncmp+1)^0,w,c
  4263  000686  B4D8               	btfsc	status,2,c
  4264  000688  EF48  F003         	goto	u3631
  4265  00068C  EF4A  F003         	goto	u3630
  4266  000690                     u3631:
  4267  000690  EF65  F003         	goto	l3767
  4268  000694                     u3630:
  4269  000694  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4270  000698  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4271  00069C  CFDE F004          	movff	postinc2,strncmp@_l
  4272  0006A0  CFDD F005          	movff	postdec2,strncmp@_l+1
  4273  0006A4  0EF0               	movlw	low STR_26
  4274  0006A6  6E06               	movwf	strncmp@_r^0,c
  4275  0006A8  0EFF               	movlw	high STR_26
  4276  0006AA  6E07               	movwf	(strncmp@_r+1)^0,c
  4277  0006AC  0E00               	movlw	0
  4278  0006AE  6E09               	movwf	(strncmp@n+1)^0,c
  4279  0006B0  0E02               	movlw	2
  4280  0006B2  6E08               	movwf	strncmp@n^0,c
  4281  0006B4  EC9A  F016         	call	_strncmp	;wreg free
  4282  0006B8  5004               	movf	?_strncmp^0,w,c
  4283  0006BA  1005               	iorwf	(?_strncmp+1)^0,w,c
  4284  0006BC  A4D8               	btfss	status,2,c
  4285  0006BE  EF63  F003         	goto	u3641
  4286  0006C2  EF65  F003         	goto	u3640
  4287  0006C6                     u3641:
  4288  0006C6  EF8E  F003         	goto	l3773
  4289  0006CA                     u3640:
  4290  0006CA                     l3767:
  4291                           
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  4293  0006CA  0E02               	movlw	2
  4294  0006CC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4295  0006D0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4296  0006D4  26DE               	addwf	postinc2,f,c
  4297  0006D6  0E00               	movlw	0
  4298  0006D8  22DD               	addwfc	postdec2,f,c
  4299                           
  4300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4301  0006DA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4302  0006DE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4303  0006E2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4304  0006E6  0E02               	movlw	2
  4305  0006E8  26DE               	addwf	postinc2,f,c
  4306  0006EA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4307  0006EE  0E00               	movlw	0
  4308  0006F0  22DD               	addwfc	postdec2,f,c
  4309  0006F2  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4310  0006F6  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4311  0006FA  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4312  0006FE  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4313  000702  C04E  F068         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4314  000706  C04F  F069         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4315  00070A  0100               	movlb	0	; () banked
  4316  00070C  6B6A               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  4317  00070E  6B6B               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  4318  000710  6B6C               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  4319  000712  6B6D               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  4320  000714  6B6E               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  4321  000716  6B6F               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  4322  000718  EF68  F002         	goto	l3739
  4323  00071C                     l3773:
  4324                           
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4326  00071C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4327  000720  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4328  000724  CFDE F004          	movff	postinc2,strncmp@_l
  4329  000728  CFDD F005          	movff	postdec2,strncmp@_l+1
  4330  00072C  0EDE               	movlw	low STR_31
  4331  00072E  6E06               	movwf	strncmp@_r^0,c
  4332  000730  0EFF               	movlw	high STR_31
  4333  000732  6E07               	movwf	(strncmp@_r+1)^0,c
  4334  000734  0E00               	movlw	0
  4335  000736  6E09               	movwf	(strncmp@n+1)^0,c
  4336  000738  0E03               	movlw	3
  4337  00073A  6E08               	movwf	strncmp@n^0,c
  4338  00073C  EC9A  F016         	call	_strncmp	;wreg free
  4339  000740  5004               	movf	?_strncmp^0,w,c
  4340  000742  1005               	iorwf	(?_strncmp+1)^0,w,c
  4341  000744  A4D8               	btfss	status,2,c
  4342  000746  EFA7  F003         	goto	u3651
  4343  00074A  EFA9  F003         	goto	u3650
  4344  00074E                     u3651:
  4345  00074E  EFE9  F003         	goto	l3781
  4346  000752                     u3650:
  4347  000752                     
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4349  000752  0E03               	movlw	3
  4350  000754  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4351  000758  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4352  00075C  26DE               	addwf	postinc2,f,c
  4353  00075E  0E00               	movlw	0
  4354  000760  22DD               	addwfc	postdec2,f,c
  4355                           
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4357  000762  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4358  000766  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4359  00076A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4360  00076E  0E02               	movlw	2
  4361  000770  26DE               	addwf	postinc2,f,c
  4362  000772  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4363  000776  0E00               	movlw	0
  4364  000778  22DD               	addwfc	postdec2,f,c
  4365  00077A  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4366  00077E  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4367  000782  50DF               	movf	indf2,w,c
  4368  000784  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4369  000786  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  4370  000788  0100               	movlb	0	; () banked
  4371  00078A  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  4372  00078C  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4373  00078E  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4374  000790  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4375  000792  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4376  000794  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4377  000796  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4378  000798  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4379  00079A                     l3777:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  4383  00079A  C046  F01F         	movff	vfpfcnvrt@fp,otoa@fp
  4384  00079E  C047  F020         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4385  0007A2  C073  F021         	movff	vfpfcnvrt@llu,otoa@d
  4386  0007A6  C074  F022         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4387  0007AA  C075  F023         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4388  0007AE  C076  F024         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4389  0007B2  C077  F025         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4390  0007B6  C078  F026         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4391  0007BA  C079  F027         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4392  0007BE  C07A  F028         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4393  0007C2  EC14  F00F         	call	_otoa	;wreg free
  4394  0007C6  C01F  F046         	movff	?_otoa,?_vfpfcnvrt
  4395  0007CA  C020  F047         	movff	?_otoa+1,?_vfpfcnvrt+1
  4396  0007CE  EF77  F009         	goto	l611
  4397  0007D2                     l3781:
  4398                           
  4399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4400  0007D2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4401  0007D6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4402  0007DA  CFDE F004          	movff	postinc2,strncmp@_l
  4403  0007DE  CFDD F005          	movff	postdec2,strncmp@_l+1
  4404  0007E2  0EDF               	movlw	low (STR_31+1)
  4405  0007E4  6E06               	movwf	strncmp@_r^0,c
  4406  0007E6  0EFF               	movlw	high (STR_31+1)
  4407  0007E8  6E07               	movwf	(strncmp@_r+1)^0,c
  4408  0007EA  0E00               	movlw	0
  4409  0007EC  6E09               	movwf	(strncmp@n+1)^0,c
  4410  0007EE  0E02               	movlw	2
  4411  0007F0  6E08               	movwf	strncmp@n^0,c
  4412  0007F2  EC9A  F016         	call	_strncmp	;wreg free
  4413  0007F6  5004               	movf	?_strncmp^0,w,c
  4414  0007F8  1005               	iorwf	(?_strncmp+1)^0,w,c
  4415  0007FA  A4D8               	btfss	status,2,c
  4416  0007FC  EF02  F004         	goto	u3661
  4417  000800  EF04  F004         	goto	u3660
  4418  000804                     u3661:
  4419  000804  EF2D  F004         	goto	l3789
  4420  000808                     u3660:
  4421  000808                     
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4423  000808  0E02               	movlw	2
  4424  00080A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4425  00080E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4426  000812  26DE               	addwf	postinc2,f,c
  4427  000814  0E00               	movlw	0
  4428  000816  22DD               	addwfc	postdec2,f,c
  4429                           
  4430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4431  000818  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4432  00081C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4433  000820  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4434  000824  0E02               	movlw	2
  4435  000826  26DE               	addwf	postinc2,f,c
  4436  000828  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4437  00082C  0E00               	movlw	0
  4438  00082E  22DD               	addwfc	postdec2,f,c
  4439  000830  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4440  000834  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4441  000838  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4442  00083C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4443  000840  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4444  000844  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4445  000848  0100               	movlb	0	; () banked
  4446  00084A  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4447  00084C  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4448  00084E  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4449  000850  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4450  000852  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4451  000854  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4452  000856  EFCD  F003         	goto	l3777
  4453  00085A                     l3789:
  4454                           
  4455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  4456  00085A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4457  00085E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4458  000862  CFDE FFF6          	movff	postinc2,tblptrl
  4459  000866  CFDD FFF7          	movff	postdec2,tblptrh
  4460  00086A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4461  00086A  6AF8               	clrf	tblptru,c
  4462  00086C                     	endif
  4463  00086C                     	if	0	;tblptru may be non-zero
  4464  00086C                     	endif
  4465  00086C  0008               	tblrd		*
  4466  00086E  50F5               	movf	tablat,w,c
  4467  000870  0A6F               	xorlw	111
  4468  000872  A4D8               	btfss	status,2,c
  4469  000874  EF3E  F004         	goto	u3671
  4470  000878  EF40  F004         	goto	u3670
  4471  00087C                     u3671:
  4472  00087C  EF68  F004         	goto	l3797
  4473  000880                     u3670:
  4474  000880                     
  4475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  4476  000880  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4477  000884  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4478  000888  2ADE               	incf	postinc2,f,c
  4479  00088A  0E00               	movlw	0
  4480  00088C  22DD               	addwfc	postdec2,f,c
  4481                           
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  4483  00088E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4484  000892  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4485  000896  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4486  00089A  0E02               	movlw	2
  4487  00089C  26DE               	addwf	postinc2,f,c
  4488  00089E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4489  0008A2  0E00               	movlw	0
  4490  0008A4  22DD               	addwfc	postdec2,f,c
  4491  0008A6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4492  0008AA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4493  0008AE  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4494  0008B2  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4495  0008B6  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4496  0008BA  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4497  0008BE  0100               	movlb	0	; () banked
  4498  0008C0  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4499  0008C2  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4500  0008C4  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4501  0008C6  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4502  0008C8  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4503  0008CA  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4504  0008CC  EFCD  F003         	goto	l3777
  4505  0008D0                     l3797:
  4506                           
  4507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4508  0008D0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4509  0008D4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4510  0008D8  CFDE F004          	movff	postinc2,strncmp@_l
  4511  0008DC  CFDD F005          	movff	postdec2,strncmp@_l+1
  4512  0008E0  0EF6               	movlw	low STR_41
  4513  0008E2  6E06               	movwf	strncmp@_r^0,c
  4514  0008E4  0EFF               	movlw	high STR_41
  4515  0008E6  6E07               	movwf	(strncmp@_r+1)^0,c
  4516  0008E8  0E00               	movlw	0
  4517  0008EA  6E09               	movwf	(strncmp@n+1)^0,c
  4518  0008EC  0E02               	movlw	2
  4519  0008EE  6E08               	movwf	strncmp@n^0,c
  4520  0008F0  EC9A  F016         	call	_strncmp	;wreg free
  4521  0008F4  5004               	movf	?_strncmp^0,w,c
  4522  0008F6  1005               	iorwf	(?_strncmp+1)^0,w,c
  4523  0008F8  A4D8               	btfss	status,2,c
  4524  0008FA  EF81  F004         	goto	u3681
  4525  0008FE  EF83  F004         	goto	u3680
  4526  000902                     u3681:
  4527  000902  EFAC  F004         	goto	l3805
  4528  000906                     u3680:
  4529  000906                     
  4530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4531  000906  0E02               	movlw	2
  4532  000908  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4533  00090C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4534  000910  26DE               	addwf	postinc2,f,c
  4535  000912  0E00               	movlw	0
  4536  000914  22DD               	addwfc	postdec2,f,c
  4537                           
  4538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4539  000916  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4540  00091A  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4541  00091E  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4542  000922  0E02               	movlw	2
  4543  000924  26DE               	addwf	postinc2,f,c
  4544  000926  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4545  00092A  0E00               	movlw	0
  4546  00092C  22DD               	addwfc	postdec2,f,c
  4547  00092E  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4548  000932  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4549  000936  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4550  00093A  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4551  00093E  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4552  000942  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4553  000946  0100               	movlb	0	; () banked
  4554  000948  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4555  00094A  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4556  00094C  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4557  00094E  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4558  000950  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4559  000952  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4560  000954  EFCD  F003         	goto	l3777
  4561  000958                     l3805:
  4562                           
  4563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4564  000958  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4565  00095C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4566  000960  CFDE F004          	movff	postinc2,strncmp@_l
  4567  000964  CFDD F005          	movff	postdec2,strncmp@_l+1
  4568  000968  0EDA               	movlw	low STR_46
  4569  00096A  6E06               	movwf	strncmp@_r^0,c
  4570  00096C  0EFF               	movlw	high STR_46
  4571  00096E  6E07               	movwf	(strncmp@_r+1)^0,c
  4572  000970  0E00               	movlw	0
  4573  000972  6E09               	movwf	(strncmp@n+1)^0,c
  4574  000974  0E03               	movlw	3
  4575  000976  6E08               	movwf	strncmp@n^0,c
  4576  000978  EC9A  F016         	call	_strncmp	;wreg free
  4577  00097C  5004               	movf	?_strncmp^0,w,c
  4578  00097E  1005               	iorwf	(?_strncmp+1)^0,w,c
  4579  000980  A4D8               	btfss	status,2,c
  4580  000982  EFC5  F004         	goto	u3691
  4581  000986  EFC7  F004         	goto	u3690
  4582  00098A                     u3691:
  4583  00098A  EFEF  F004         	goto	l3815
  4584  00098E                     u3690:
  4585  00098E                     
  4586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4587  00098E  0E03               	movlw	3
  4588  000990  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4589  000994  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4590  000998  26DE               	addwf	postinc2,f,c
  4591  00099A  0E00               	movlw	0
  4592  00099C  22DD               	addwfc	postdec2,f,c
  4593                           
  4594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4595  00099E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4596  0009A2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4597  0009A6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4598  0009AA  0E02               	movlw	2
  4599  0009AC  26DE               	addwf	postinc2,f,c
  4600  0009AE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4601  0009B2  0E00               	movlw	0
  4602  0009B4  22DD               	addwfc	postdec2,f,c
  4603  0009B6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4604  0009BA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4605  0009BE  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4606  0009C2  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4607  0009C6                     
  4608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  4609  0009C6  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4610  0009CA  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4611  0009CE  C09F  FFDF         	movff	_nout,indf2
  4612  0009D2                     l3811:
  4613                           
  4614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  4615  0009D2  0E00               	movlw	0
  4616  0009D4  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  4617  0009D6  0E00               	movlw	0
  4618  0009D8  6E46               	movwf	?_vfpfcnvrt^0,c
  4619  0009DA  EF77  F009         	goto	l611
  4620  0009DE                     l3815:
  4621                           
  4622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4623  0009DE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4624  0009E2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4625  0009E6  CFDE F004          	movff	postinc2,strncmp@_l
  4626  0009EA  CFDD F005          	movff	postdec2,strncmp@_l+1
  4627  0009EE  0EDB               	movlw	low (STR_46+1)
  4628  0009F0  6E06               	movwf	strncmp@_r^0,c
  4629  0009F2  0EFF               	movlw	high (STR_46+1)
  4630  0009F4  6E07               	movwf	(strncmp@_r+1)^0,c
  4631  0009F6  0E00               	movlw	0
  4632  0009F8  6E09               	movwf	(strncmp@n+1)^0,c
  4633  0009FA  0E02               	movlw	2
  4634  0009FC  6E08               	movwf	strncmp@n^0,c
  4635  0009FE  EC9A  F016         	call	_strncmp	;wreg free
  4636  000A02  5004               	movf	?_strncmp^0,w,c
  4637  000A04  1005               	iorwf	(?_strncmp+1)^0,w,c
  4638  000A06  A4D8               	btfss	status,2,c
  4639  000A08  EF08  F005         	goto	u3701
  4640  000A0C  EF0A  F005         	goto	u3700
  4641  000A10                     u3701:
  4642  000A10  EF30  F005         	goto	l3825
  4643  000A14                     u3700:
  4644  000A14                     
  4645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4646  000A14  0E02               	movlw	2
  4647  000A16  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4648  000A1A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4649  000A1E  26DE               	addwf	postinc2,f,c
  4650  000A20  0E00               	movlw	0
  4651  000A22  22DD               	addwfc	postdec2,f,c
  4652                           
  4653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4654  000A24  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4655  000A28  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4656  000A2C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4657  000A30  0E02               	movlw	2
  4658  000A32  26DE               	addwf	postinc2,f,c
  4659  000A34  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4660  000A38  0E00               	movlw	0
  4661  000A3A  22DD               	addwfc	postdec2,f,c
  4662  000A3C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4663  000A40  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4664  000A44  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4665  000A48  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4666  000A4C                     
  4667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  4668  000A4C  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4669  000A50  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4670  000A54  C09F  FFDE         	movff	_nout,postinc2
  4671  000A58  C0A0  FFDD         	movff	_nout+1,postdec2
  4672  000A5C  EFE9  F004         	goto	l3811
  4673  000A60                     l3825:
  4674                           
  4675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  4676  000A60  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4677  000A64  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4678  000A68  CFDE FFF6          	movff	postinc2,tblptrl
  4679  000A6C  CFDD FFF7          	movff	postdec2,tblptrh
  4680  000A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4681  000A70  6AF8               	clrf	tblptru,c
  4682  000A72                     	endif
  4683  000A72                     	if	0	;tblptru may be non-zero
  4684  000A72                     	endif
  4685  000A72  0008               	tblrd		*
  4686  000A74  50F5               	movf	tablat,w,c
  4687  000A76  0A6E               	xorlw	110
  4688  000A78  A4D8               	btfss	status,2,c
  4689  000A7A  EF41  F005         	goto	u3711
  4690  000A7E  EF43  F005         	goto	u3710
  4691  000A82                     u3711:
  4692  000A82  EF68  F005         	goto	l3835
  4693  000A86                     u3710:
  4694  000A86                     
  4695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  4696  000A86  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4697  000A8A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4698  000A8E  2ADE               	incf	postinc2,f,c
  4699  000A90  0E00               	movlw	0
  4700  000A92  22DD               	addwfc	postdec2,f,c
  4701                           
  4702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4703  000A94  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4704  000A98  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4705  000A9C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4706  000AA0  0E02               	movlw	2
  4707  000AA2  26DE               	addwf	postinc2,f,c
  4708  000AA4  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4709  000AA8  0E00               	movlw	0
  4710  000AAA  22DD               	addwfc	postdec2,f,c
  4711  000AAC  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4712  000AB0  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4713  000AB4  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4714  000AB8  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4715  000ABC                     
  4716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  4717  000ABC  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4718  000AC0  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4719  000AC4  C09F  FFDE         	movff	_nout,postinc2
  4720  000AC8  C0A0  FFDD         	movff	_nout+1,postdec2
  4721  000ACC  EFE9  F004         	goto	l3811
  4722  000AD0                     l3835:
  4723                           
  4724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4725  000AD0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4726  000AD4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4727  000AD8  CFDE F004          	movff	postinc2,strncmp@_l
  4728  000ADC  CFDD F005          	movff	postdec2,strncmp@_l+1
  4729  000AE0  0EF3               	movlw	low STR_56
  4730  000AE2  6E06               	movwf	strncmp@_r^0,c
  4731  000AE4  0EFF               	movlw	high STR_56
  4732  000AE6  6E07               	movwf	(strncmp@_r+1)^0,c
  4733  000AE8  0E00               	movlw	0
  4734  000AEA  6E09               	movwf	(strncmp@n+1)^0,c
  4735  000AEC  0E02               	movlw	2
  4736  000AEE  6E08               	movwf	strncmp@n^0,c
  4737  000AF0  EC9A  F016         	call	_strncmp	;wreg free
  4738  000AF4  5004               	movf	?_strncmp^0,w,c
  4739  000AF6  1005               	iorwf	(?_strncmp+1)^0,w,c
  4740  000AF8  A4D8               	btfss	status,2,c
  4741  000AFA  EF81  F005         	goto	u3721
  4742  000AFE  EF83  F005         	goto	u3720
  4743  000B02                     u3721:
  4744  000B02  EFA9  F005         	goto	l3845
  4745  000B06                     u3720:
  4746  000B06                     
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4748  000B06  0E02               	movlw	2
  4749  000B08  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4750  000B0C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4751  000B10  26DE               	addwf	postinc2,f,c
  4752  000B12  0E00               	movlw	0
  4753  000B14  22DD               	addwfc	postdec2,f,c
  4754                           
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4756  000B16  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4757  000B1A  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4758  000B1E  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4759  000B22  0E02               	movlw	2
  4760  000B24  26DE               	addwf	postinc2,f,c
  4761  000B26  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4762  000B2A  0E00               	movlw	0
  4763  000B2C  22DD               	addwfc	postdec2,f,c
  4764  000B2E  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4765  000B32  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4766  000B36  CFDE F070          	movff	postinc2,vfpfcnvrt@vp
  4767  000B3A  CFDD F071          	movff	postdec2,vfpfcnvrt@vp+1
  4768  000B3E                     
  4769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  4770  000B3E  C070  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  4771  000B42  C071  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  4772  000B46  C09F  FFDE         	movff	_nout,postinc2
  4773  000B4A  C0A0  FFDD         	movff	_nout+1,postdec2
  4774  000B4E  EFE9  F004         	goto	l3811
  4775  000B52                     l3845:
  4776                           
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  4778  000B52  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4779  000B56  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4780  000B5A  CFDE FFF6          	movff	postinc2,tblptrl
  4781  000B5E  CFDD FFF7          	movff	postdec2,tblptrh
  4782  000B62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4783  000B62  6AF8               	clrf	tblptru,c
  4784  000B64                     	endif
  4785  000B64                     	if	0	;tblptru may be non-zero
  4786  000B64                     	endif
  4787  000B64  0008               	tblrd		*
  4788  000B66  50F5               	movf	tablat,w,c
  4789  000B68  0A70               	xorlw	112
  4790  000B6A  A4D8               	btfss	status,2,c
  4791  000B6C  EFBA  F005         	goto	u3731
  4792  000B70  EFBC  F005         	goto	u3730
  4793  000B74                     u3731:
  4794  000B74  EF00  F006         	goto	l3853
  4795  000B78                     u3730:
  4796  000B78                     
  4797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  4798  000B78  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4799  000B7C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4800  000B80  2ADE               	incf	postinc2,f,c
  4801  000B82  0E00               	movlw	0
  4802  000B84  22DD               	addwfc	postdec2,f,c
  4803                           
  4804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  4805  000B86  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4806  000B8A  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4807  000B8E  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4808  000B92  0E02               	movlw	2
  4809  000B94  26DE               	addwf	postinc2,f,c
  4810  000B96  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4811  000B9A  0E00               	movlw	0
  4812  000B9C  22DD               	addwfc	postdec2,f,c
  4813  000B9E  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4814  000BA2  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4815  000BA6  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  4816  000BAA  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  4817  000BAE  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4818  000BB2  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4819  000BB6  0100               	movlb	0	; () banked
  4820  000BB8  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4821  000BBA  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4822  000BBC  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4823  000BBE  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4824  000BC0  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4825  000BC2  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4826  000BC4                     
  4827                           ; BSR set to: 0
  4828                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  4829  000BC4  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  4830  000BC8  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4831  000BCC  C073  F021         	movff	vfpfcnvrt@llu,xtoa@d
  4832  000BD0  C074  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4833  000BD4  C075  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4834  000BD8  C076  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4835  000BDC  C077  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4836  000BE0  C078  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4837  000BE4  C079  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4838  000BE8  C07A  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4839  000BEC  0E78               	movlw	120
  4840  000BEE  6E29               	movwf	xtoa@x^0,c
  4841  000BF0  ECAA  F00C         	call	_xtoa	;wreg free
  4842  000BF4  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  4843  000BF8  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4844  000BFC  EF77  F009         	goto	l611
  4845  000C00                     l3853:
  4846                           
  4847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  4848  000C00  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4849  000C04  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4850  000C08  CFDE FFF6          	movff	postinc2,tblptrl
  4851  000C0C  CFDD FFF7          	movff	postdec2,tblptrh
  4852  000C10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4853  000C10  6AF8               	clrf	tblptru,c
  4854  000C12                     	endif
  4855  000C12                     	if	0	;tblptru may be non-zero
  4856  000C12                     	endif
  4857  000C12  0008               	tblrd		*
  4858  000C14  50F5               	movf	tablat,w,c
  4859  000C16  0A73               	xorlw	115
  4860  000C18  A4D8               	btfss	status,2,c
  4861  000C1A  EF11  F006         	goto	u3741
  4862  000C1E  EF13  F006         	goto	u3740
  4863  000C22                     u3741:
  4864  000C22  EF3E  F006         	goto	l3861
  4865  000C26                     u3740:
  4866  000C26                     
  4867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  4868  000C26  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4869  000C2A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4870  000C2E  2ADE               	incf	postinc2,f,c
  4871  000C30  0E00               	movlw	0
  4872  000C32  22DD               	addwfc	postdec2,f,c
  4873                           
  4874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4875  000C34  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4876  000C38  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4877  000C3C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4878  000C40  0E02               	movlw	2
  4879  000C42  26DE               	addwf	postinc2,f,c
  4880  000C44  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4881  000C48  0E00               	movlw	0
  4882  000C4A  22DD               	addwfc	postdec2,f,c
  4883  000C4C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4884  000C50  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4885  000C54  CFDE F060          	movff	postinc2,vfpfcnvrt@cp
  4886  000C58  CFDD F061          	movff	postdec2,vfpfcnvrt@cp+1
  4887  000C5C                     
  4888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  4889  000C5C  C046  F00D         	movff	vfpfcnvrt@fp,stoa@fp
  4890  000C60  C047  F00E         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4891  000C64  C060  F00F         	movff	vfpfcnvrt@cp,stoa@s
  4892  000C68  C061  F010         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4893  000C6C  EC9A  F011         	call	_stoa	;wreg free
  4894  000C70  C00D  F046         	movff	?_stoa,?_vfpfcnvrt
  4895  000C74  C00E  F047         	movff	?_stoa+1,?_vfpfcnvrt+1
  4896  000C78  EF77  F009         	goto	l611
  4897  000C7C                     l3861:
  4898                           
  4899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4900  000C7C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4901  000C80  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4902  000C84  CFDE F004          	movff	postinc2,strncmp@_l
  4903  000C88  CFDD F005          	movff	postdec2,strncmp@_l+1
  4904  000C8C  0EE2               	movlw	low STR_61
  4905  000C8E  6E06               	movwf	strncmp@_r^0,c
  4906  000C90  0EFF               	movlw	high STR_61
  4907  000C92  6E07               	movwf	(strncmp@_r+1)^0,c
  4908  000C94  0E00               	movlw	0
  4909  000C96  6E09               	movwf	(strncmp@n+1)^0,c
  4910  000C98  0E03               	movlw	3
  4911  000C9A  6E08               	movwf	strncmp@n^0,c
  4912  000C9C  EC9A  F016         	call	_strncmp	;wreg free
  4913  000CA0  5004               	movf	?_strncmp^0,w,c
  4914  000CA2  1005               	iorwf	(?_strncmp+1)^0,w,c
  4915  000CA4  A4D8               	btfss	status,2,c
  4916  000CA6  EF57  F006         	goto	u3751
  4917  000CAA  EF59  F006         	goto	u3750
  4918  000CAE                     u3751:
  4919  000CAE  EF99  F006         	goto	l3869
  4920  000CB2                     u3750:
  4921  000CB2                     
  4922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4923  000CB2  0E03               	movlw	3
  4924  000CB4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4925  000CB8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4926  000CBC  26DE               	addwf	postinc2,f,c
  4927  000CBE  0E00               	movlw	0
  4928  000CC0  22DD               	addwfc	postdec2,f,c
  4929                           
  4930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4931  000CC2  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4932  000CC6  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4933  000CCA  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  4934  000CCE  0E02               	movlw	2
  4935  000CD0  26DE               	addwf	postinc2,f,c
  4936  000CD2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  4937  000CD6  0E00               	movlw	0
  4938  000CD8  22DD               	addwfc	postdec2,f,c
  4939  000CDA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4940  000CDE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4941  000CE2  50DF               	movf	indf2,w,c
  4942  000CE4  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  4943  000CE6  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  4944  000CE8  0100               	movlb	0	; () banked
  4945  000CEA  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  4946  000CEC  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  4947  000CEE  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  4948  000CF0  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  4949  000CF2  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  4950  000CF4  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  4951  000CF6  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  4952  000CF8  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  4953  000CFA                     l3865:
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  4957  000CFA  C046  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  4958  000CFE  C047  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4959  000D02  C073  F021         	movff	vfpfcnvrt@llu,utoa@d
  4960  000D06  C074  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4961  000D0A  C075  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4962  000D0E  C076  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4963  000D12  C077  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4964  000D16  C078  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4965  000D1A  C079  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4966  000D1E  C07A  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4967  000D22  EC14  F00E         	call	_utoa	;wreg free
  4968  000D26  C01F  F046         	movff	?_utoa,?_vfpfcnvrt
  4969  000D2A  C020  F047         	movff	?_utoa+1,?_vfpfcnvrt+1
  4970  000D2E  EF77  F009         	goto	l611
  4971  000D32                     l3869:
  4972                           
  4973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  4974  000D32  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4975  000D36  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4976  000D3A  CFDE F004          	movff	postinc2,strncmp@_l
  4977  000D3E  CFDD F005          	movff	postdec2,strncmp@_l+1
  4978  000D42  0EE3               	movlw	low (STR_61+1)
  4979  000D44  6E06               	movwf	strncmp@_r^0,c
  4980  000D46  0EFF               	movlw	high (STR_61+1)
  4981  000D48  6E07               	movwf	(strncmp@_r+1)^0,c
  4982  000D4A  0E00               	movlw	0
  4983  000D4C  6E09               	movwf	(strncmp@n+1)^0,c
  4984  000D4E  0E02               	movlw	2
  4985  000D50  6E08               	movwf	strncmp@n^0,c
  4986  000D52  EC9A  F016         	call	_strncmp	;wreg free
  4987  000D56  5004               	movf	?_strncmp^0,w,c
  4988  000D58  1005               	iorwf	(?_strncmp+1)^0,w,c
  4989  000D5A  A4D8               	btfss	status,2,c
  4990  000D5C  EFB2  F006         	goto	u3761
  4991  000D60  EFB4  F006         	goto	u3760
  4992  000D64                     u3761:
  4993  000D64  EFDD  F006         	goto	l3877
  4994  000D68                     u3760:
  4995  000D68                     
  4996                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  4997  000D68  0E02               	movlw	2
  4998  000D6A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4999  000D6E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5000  000D72  26DE               	addwf	postinc2,f,c
  5001  000D74  0E00               	movlw	0
  5002  000D76  22DD               	addwfc	postdec2,f,c
  5003                           
  5004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5005  000D78  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5006  000D7C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5007  000D80  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5008  000D84  0E02               	movlw	2
  5009  000D86  26DE               	addwf	postinc2,f,c
  5010  000D88  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5011  000D8C  0E00               	movlw	0
  5012  000D8E  22DD               	addwfc	postdec2,f,c
  5013  000D90  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5014  000D94  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5015  000D98  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5016  000D9C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5017  000DA0  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5018  000DA4  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5019  000DA8  0100               	movlb	0	; () banked
  5020  000DAA  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5021  000DAC  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5022  000DAE  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5023  000DB0  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5024  000DB2  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5025  000DB4  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5026  000DB6  EF7D  F006         	goto	l3865
  5027  000DBA                     l3877:
  5028                           
  5029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5030  000DBA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5031  000DBE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5032  000DC2  CFDE FFF6          	movff	postinc2,tblptrl
  5033  000DC6  CFDD FFF7          	movff	postdec2,tblptrh
  5034  000DCA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5035  000DCA  6AF8               	clrf	tblptru,c
  5036  000DCC                     	endif
  5037  000DCC                     	if	0	;tblptru may be non-zero
  5038  000DCC                     	endif
  5039  000DCC  0008               	tblrd		*
  5040  000DCE  50F5               	movf	tablat,w,c
  5041  000DD0  0A75               	xorlw	117
  5042  000DD2  A4D8               	btfss	status,2,c
  5043  000DD4  EFEE  F006         	goto	u3771
  5044  000DD8  EFF0  F006         	goto	u3770
  5045  000DDC                     u3771:
  5046  000DDC  EF18  F007         	goto	l3885
  5047  000DE0                     u3770:
  5048  000DE0                     
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5050  000DE0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5051  000DE4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5052  000DE8  2ADE               	incf	postinc2,f,c
  5053  000DEA  0E00               	movlw	0
  5054  000DEC  22DD               	addwfc	postdec2,f,c
  5055                           
  5056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5057  000DEE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5058  000DF2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5059  000DF6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5060  000DFA  0E02               	movlw	2
  5061  000DFC  26DE               	addwf	postinc2,f,c
  5062  000DFE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5063  000E02  0E00               	movlw	0
  5064  000E04  22DD               	addwfc	postdec2,f,c
  5065  000E06  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5066  000E0A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5067  000E0E  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5068  000E12  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5069  000E16  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5070  000E1A  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5071  000E1E  0100               	movlb	0	; () banked
  5072  000E20  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5073  000E22  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5074  000E24  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5075  000E26  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5076  000E28  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5077  000E2A  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5078  000E2C  EF7D  F006         	goto	l3865
  5079  000E30                     l3885:
  5080                           
  5081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5082  000E30  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5083  000E34  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5084  000E38  CFDE F004          	movff	postinc2,strncmp@_l
  5085  000E3C  CFDD F005          	movff	postdec2,strncmp@_l+1
  5086  000E40  0EF9               	movlw	low STR_71
  5087  000E42  6E06               	movwf	strncmp@_r^0,c
  5088  000E44  0EFF               	movlw	high STR_71
  5089  000E46  6E07               	movwf	(strncmp@_r+1)^0,c
  5090  000E48  0E00               	movlw	0
  5091  000E4A  6E09               	movwf	(strncmp@n+1)^0,c
  5092  000E4C  0E02               	movlw	2
  5093  000E4E  6E08               	movwf	strncmp@n^0,c
  5094  000E50  EC9A  F016         	call	_strncmp	;wreg free
  5095  000E54  5004               	movf	?_strncmp^0,w,c
  5096  000E56  1005               	iorwf	(?_strncmp+1)^0,w,c
  5097  000E58  A4D8               	btfss	status,2,c
  5098  000E5A  EF31  F007         	goto	u3781
  5099  000E5E  EF33  F007         	goto	u3780
  5100  000E62                     u3781:
  5101  000E62  EF5C  F007         	goto	l3893
  5102  000E66                     u3780:
  5103  000E66                     
  5104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5105  000E66  0E02               	movlw	2
  5106  000E68  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5107  000E6C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5108  000E70  26DE               	addwf	postinc2,f,c
  5109  000E72  0E00               	movlw	0
  5110  000E74  22DD               	addwfc	postdec2,f,c
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5113  000E76  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5114  000E7A  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5115  000E7E  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5116  000E82  0E02               	movlw	2
  5117  000E84  26DE               	addwf	postinc2,f,c
  5118  000E86  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5119  000E8A  0E00               	movlw	0
  5120  000E8C  22DD               	addwfc	postdec2,f,c
  5121  000E8E  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5122  000E92  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5123  000E96  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5124  000E9A  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5125  000E9E  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5126  000EA2  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5127  000EA6  0100               	movlb	0	; () banked
  5128  000EA8  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5129  000EAA  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5130  000EAC  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5131  000EAE  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5132  000EB0  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5133  000EB2  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5134  000EB4  EF7D  F006         	goto	l3865
  5135  000EB8                     l3893:
  5136                           
  5137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5138  000EB8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5139  000EBC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5140  000EC0  CFDE F004          	movff	postinc2,strncmp@_l
  5141  000EC4  CFDD F005          	movff	postdec2,strncmp@_l+1
  5142  000EC8  0EE6               	movlw	low STR_76
  5143  000ECA  6E06               	movwf	strncmp@_r^0,c
  5144  000ECC  0EFF               	movlw	high STR_76
  5145  000ECE  6E07               	movwf	(strncmp@_r+1)^0,c
  5146  000ED0  0E00               	movlw	0
  5147  000ED2  6E09               	movwf	(strncmp@n+1)^0,c
  5148  000ED4  0E03               	movlw	3
  5149  000ED6  6E08               	movwf	strncmp@n^0,c
  5150  000ED8  EC9A  F016         	call	_strncmp	;wreg free
  5151  000EDC  5004               	movf	?_strncmp^0,w,c
  5152  000EDE  1005               	iorwf	(?_strncmp+1)^0,w,c
  5153  000EE0  B4D8               	btfsc	status,2,c
  5154  000EE2  EF75  F007         	goto	u3791
  5155  000EE6  EF77  F007         	goto	u3790
  5156  000EEA                     u3791:
  5157  000EEA  EF92  F007         	goto	l3897
  5158  000EEE                     u3790:
  5159  000EEE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5160  000EF2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5161  000EF6  CFDE F004          	movff	postinc2,strncmp@_l
  5162  000EFA  CFDD F005          	movff	postdec2,strncmp@_l+1
  5163  000EFE  0ECE               	movlw	low STR_80
  5164  000F00  6E06               	movwf	strncmp@_r^0,c
  5165  000F02  0EFF               	movlw	high STR_80
  5166  000F04  6E07               	movwf	(strncmp@_r+1)^0,c
  5167  000F06  0E00               	movlw	0
  5168  000F08  6E09               	movwf	(strncmp@n+1)^0,c
  5169  000F0A  0E03               	movlw	3
  5170  000F0C  6E08               	movwf	strncmp@n^0,c
  5171  000F0E  EC9A  F016         	call	_strncmp	;wreg free
  5172  000F12  5004               	movf	?_strncmp^0,w,c
  5173  000F14  1005               	iorwf	(?_strncmp+1)^0,w,c
  5174  000F16  A4D8               	btfss	status,2,c
  5175  000F18  EF90  F007         	goto	u3801
  5176  000F1C  EF92  F007         	goto	u3800
  5177  000F20                     u3801:
  5178  000F20  EFE8  F007         	goto	l3907
  5179  000F24                     u3800:
  5180  000F24                     l3897:
  5181                           
  5182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  5183  000F24  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5184  000F28  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5185  000F2C  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5186  000F30  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5187  000F34  0E02               	movlw	2
  5188  000F36  264C               	addwf	??_vfpfcnvrt^0,f,c
  5189  000F38  0E00               	movlw	0
  5190  000F3A  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5191  000F3C  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5192  000F40  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5193  000F44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5194  000F44  6AF8               	clrf	tblptru,c
  5195  000F46                     	endif
  5196  000F46                     	if	0	;tblptru may be non-zero
  5197  000F46                     	endif
  5198  000F46  0008               	tblrd		*
  5199  000F48  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5200  000F4C                     
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5202  000F4C  0E03               	movlw	3
  5203  000F4E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5204  000F52  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5205  000F56  26DE               	addwf	postinc2,f,c
  5206  000F58  0E00               	movlw	0
  5207  000F5A  22DD               	addwfc	postdec2,f,c
  5208  000F5C                     
  5209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5210  000F5C  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5211  000F60  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5212  000F64  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5213  000F68  0E02               	movlw	2
  5214  000F6A  26DE               	addwf	postinc2,f,c
  5215  000F6C  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5216  000F70  0E00               	movlw	0
  5217  000F72  22DD               	addwfc	postdec2,f,c
  5218  000F74  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5219  000F78  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5220  000F7C  50DF               	movf	indf2,w,c
  5221  000F7E  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  5222  000F80  504E               	movf	(??_vfpfcnvrt+2)^0,w,c
  5223  000F82  0100               	movlb	0	; () banked
  5224  000F84  6F73               	movwf	vfpfcnvrt@llu& (0+255),b
  5225  000F86  6B74               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5226  000F88  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5227  000F8A  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5228  000F8C  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5229  000F8E  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5230  000F90  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5231  000F92  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5232  000F94                     l3903:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  5236  000F94  C046  F01F         	movff	vfpfcnvrt@fp,xtoa@fp
  5237  000F98  C047  F020         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5238  000F9C  C073  F021         	movff	vfpfcnvrt@llu,xtoa@d
  5239  000FA0  C074  F022         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5240  000FA4  C075  F023         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5241  000FA8  C076  F024         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5242  000FAC  C077  F025         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5243  000FB0  C078  F026         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5244  000FB4  C079  F027         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5245  000FB8  C07A  F028         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5246  000FBC  C072  F029         	movff	vfpfcnvrt@c,xtoa@x
  5247  000FC0  ECAA  F00C         	call	_xtoa	;wreg free
  5248  000FC4  C01F  F046         	movff	?_xtoa,?_vfpfcnvrt
  5249  000FC8  C020  F047         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5250  000FCC  EF77  F009         	goto	l611
  5251  000FD0                     l3907:
  5252                           
  5253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  5254  000FD0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5255  000FD4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5256  000FD8  CFDE F004          	movff	postinc2,strncmp@_l
  5257  000FDC  CFDD F005          	movff	postdec2,strncmp@_l+1
  5258  000FE0  0EE7               	movlw	low (STR_76+1)
  5259  000FE2  6E06               	movwf	strncmp@_r^0,c
  5260  000FE4  0EFF               	movlw	high (STR_76+1)
  5261  000FE6  6E07               	movwf	(strncmp@_r+1)^0,c
  5262  000FE8  0E00               	movlw	0
  5263  000FEA  6E09               	movwf	(strncmp@n+1)^0,c
  5264  000FEC  0E02               	movlw	2
  5265  000FEE  6E08               	movwf	strncmp@n^0,c
  5266  000FF0  EC9A  F016         	call	_strncmp	;wreg free
  5267  000FF4  5004               	movf	?_strncmp^0,w,c
  5268  000FF6  1005               	iorwf	(?_strncmp+1)^0,w,c
  5269  000FF8  B4D8               	btfsc	status,2,c
  5270  000FFA  EF01  F008         	goto	u3811
  5271  000FFE  EF03  F008         	goto	u3810
  5272  001002                     u3811:
  5273  001002  EF1E  F008         	goto	l3911
  5274  001006                     u3810:
  5275  001006  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5276  00100A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5277  00100E  CFDE F004          	movff	postinc2,strncmp@_l
  5278  001012  CFDD F005          	movff	postdec2,strncmp@_l+1
  5279  001016  0ECF               	movlw	low (STR_80+1)
  5280  001018  6E06               	movwf	strncmp@_r^0,c
  5281  00101A  0EFF               	movlw	high (STR_80+1)
  5282  00101C  6E07               	movwf	(strncmp@_r+1)^0,c
  5283  00101E  0E00               	movlw	0
  5284  001020  6E09               	movwf	(strncmp@n+1)^0,c
  5285  001022  0E02               	movlw	2
  5286  001024  6E08               	movwf	strncmp@n^0,c
  5287  001026  EC9A  F016         	call	_strncmp	;wreg free
  5288  00102A  5004               	movf	?_strncmp^0,w,c
  5289  00102C  1005               	iorwf	(?_strncmp+1)^0,w,c
  5290  00102E  A4D8               	btfss	status,2,c
  5291  001030  EF1C  F008         	goto	u3821
  5292  001034  EF1E  F008         	goto	u3820
  5293  001038                     u3821:
  5294  001038  EF5B  F008         	goto	l3921
  5295  00103C                     u3820:
  5296  00103C                     l3911:
  5297                           
  5298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  5299  00103C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5300  001040  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5301  001044  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5302  001048  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5303  00104C  0E01               	movlw	1
  5304  00104E  264C               	addwf	??_vfpfcnvrt^0,f,c
  5305  001050  0E00               	movlw	0
  5306  001052  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5307  001054  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5308  001058  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5309  00105C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5310  00105C  6AF8               	clrf	tblptru,c
  5311  00105E                     	endif
  5312  00105E                     	if	0	;tblptru may be non-zero
  5313  00105E                     	endif
  5314  00105E  0008               	tblrd		*
  5315  001060  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5316  001064                     
  5317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5318  001064  0E02               	movlw	2
  5319  001066  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5320  00106A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5321  00106E  26DE               	addwf	postinc2,f,c
  5322  001070  0E00               	movlw	0
  5323  001072  22DD               	addwfc	postdec2,f,c
  5324  001074                     
  5325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5326  001074  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5327  001078  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5328  00107C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5329  001080  0E02               	movlw	2
  5330  001082  26DE               	addwf	postinc2,f,c
  5331  001084  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5332  001088  0E00               	movlw	0
  5333  00108A  22DD               	addwfc	postdec2,f,c
  5334  00108C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5335  001090  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5336  001094  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5337  001098  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5338  00109C  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5339  0010A0  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5340  0010A4  0100               	movlb	0	; () banked
  5341  0010A6  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5342  0010A8  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5343  0010AA  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5344  0010AC  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5345  0010AE  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5346  0010B0  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5347  0010B2  EFCA  F007         	goto	l3903
  5348  0010B6                     l3921:
  5349                           
  5350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5351  0010B6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5352  0010BA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5353  0010BE  CFDE FFF6          	movff	postinc2,tblptrl
  5354  0010C2  CFDD FFF7          	movff	postdec2,tblptrh
  5355  0010C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5356  0010C6  6AF8               	clrf	tblptru,c
  5357  0010C8                     	endif
  5358  0010C8                     	if	0	;tblptru may be non-zero
  5359  0010C8                     	endif
  5360  0010C8  0008               	tblrd		*
  5361  0010CA  50F5               	movf	tablat,w,c
  5362  0010CC  0A78               	xorlw	120
  5363  0010CE  B4D8               	btfsc	status,2,c
  5364  0010D0  EF6C  F008         	goto	u3831
  5365  0010D4  EF6E  F008         	goto	u3830
  5366  0010D8                     u3831:
  5367  0010D8  EF81  F008         	goto	l3925
  5368  0010DC                     u3830:
  5369  0010DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5370  0010E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5371  0010E4  CFDE FFF6          	movff	postinc2,tblptrl
  5372  0010E8  CFDD FFF7          	movff	postdec2,tblptrh
  5373  0010EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5374  0010EC  6AF8               	clrf	tblptru,c
  5375  0010EE                     	endif
  5376  0010EE                     	if	0	;tblptru may be non-zero
  5377  0010EE                     	endif
  5378  0010EE  0008               	tblrd		*
  5379  0010F0  50F5               	movf	tablat,w,c
  5380  0010F2  0A58               	xorlw	88
  5381  0010F4  A4D8               	btfss	status,2,c
  5382  0010F6  EF7F  F008         	goto	u3841
  5383  0010FA  EF81  F008         	goto	u3840
  5384  0010FE                     u3841:
  5385  0010FE  EFB5  F008         	goto	l3935
  5386  001102                     u3840:
  5387  001102                     l3925:
  5388                           
  5389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  5390  001102  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5391  001106  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5392  00110A  CFDE FFF6          	movff	postinc2,tblptrl
  5393  00110E  CFDD FFF7          	movff	postdec2,tblptrh
  5394  001112                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5395  001112  6AF8               	clrf	tblptru,c
  5396  001114                     	endif
  5397  001114                     	if	0	;tblptru may be non-zero
  5398  001114                     	endif
  5399  001114  0008               	tblrd		*
  5400  001116  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5401  00111A                     
  5402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  5403  00111A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5404  00111E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5405  001122  2ADE               	incf	postinc2,f,c
  5406  001124  0E00               	movlw	0
  5407  001126  22DD               	addwfc	postdec2,f,c
  5408  001128                     
  5409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5410  001128  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5411  00112C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5412  001130  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5413  001134  0E02               	movlw	2
  5414  001136  26DE               	addwf	postinc2,f,c
  5415  001138  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5416  00113C  0E00               	movlw	0
  5417  00113E  22DD               	addwfc	postdec2,f,c
  5418  001140  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5419  001144  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5420  001148  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5421  00114C  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5422  001150  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5423  001154  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5424  001158  0100               	movlb	0	; () banked
  5425  00115A  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5426  00115C  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5427  00115E  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5428  001160  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5429  001162  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5430  001164  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5431  001166  EFCA  F007         	goto	l3903
  5432  00116A                     l3935:
  5433                           
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  5435  00116A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5436  00116E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5437  001172  CFDE F004          	movff	postinc2,strncmp@_l
  5438  001176  CFDD F005          	movff	postdec2,strncmp@_l+1
  5439  00117A  0EFC               	movlw	low STR_94
  5440  00117C  6E06               	movwf	strncmp@_r^0,c
  5441  00117E  0EFF               	movlw	high STR_94
  5442  001180  6E07               	movwf	(strncmp@_r+1)^0,c
  5443  001182  0E00               	movlw	0
  5444  001184  6E09               	movwf	(strncmp@n+1)^0,c
  5445  001186  0E02               	movlw	2
  5446  001188  6E08               	movwf	strncmp@n^0,c
  5447  00118A  EC9A  F016         	call	_strncmp	;wreg free
  5448  00118E  5004               	movf	?_strncmp^0,w,c
  5449  001190  1005               	iorwf	(?_strncmp+1)^0,w,c
  5450  001192  B4D8               	btfsc	status,2,c
  5451  001194  EFCE  F008         	goto	u3851
  5452  001198  EFD0  F008         	goto	u3850
  5453  00119C                     u3851:
  5454  00119C  EFEB  F008         	goto	l3939
  5455  0011A0                     u3850:
  5456  0011A0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5457  0011A4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5458  0011A8  CFDE F004          	movff	postinc2,strncmp@_l
  5459  0011AC  CFDD F005          	movff	postdec2,strncmp@_l+1
  5460  0011B0  0EEA               	movlw	low STR_98
  5461  0011B2  6E06               	movwf	strncmp@_r^0,c
  5462  0011B4  0EFF               	movlw	high STR_98
  5463  0011B6  6E07               	movwf	(strncmp@_r+1)^0,c
  5464  0011B8  0E00               	movlw	0
  5465  0011BA  6E09               	movwf	(strncmp@n+1)^0,c
  5466  0011BC  0E02               	movlw	2
  5467  0011BE  6E08               	movwf	strncmp@n^0,c
  5468  0011C0  EC9A  F016         	call	_strncmp	;wreg free
  5469  0011C4  5004               	movf	?_strncmp^0,w,c
  5470  0011C6  1005               	iorwf	(?_strncmp+1)^0,w,c
  5471  0011C8  A4D8               	btfss	status,2,c
  5472  0011CA  EFE9  F008         	goto	u3861
  5473  0011CE  EFEB  F008         	goto	u3860
  5474  0011D2                     u3861:
  5475  0011D2  EF28  F009         	goto	l3949
  5476  0011D6                     u3860:
  5477  0011D6                     l3939:
  5478                           
  5479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  5480  0011D6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5481  0011DA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5482  0011DE  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  5483  0011E2  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  5484  0011E6  0E01               	movlw	1
  5485  0011E8  264C               	addwf	??_vfpfcnvrt^0,f,c
  5486  0011EA  0E00               	movlw	0
  5487  0011EC  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5488  0011EE  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5489  0011F2  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5490  0011F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5491  0011F6  6AF8               	clrf	tblptru,c
  5492  0011F8                     	endif
  5493  0011F8                     	if	0	;tblptru may be non-zero
  5494  0011F8                     	endif
  5495  0011F8  0008               	tblrd		*
  5496  0011FA  CFF5 F072          	movff	tablat,vfpfcnvrt@c
  5497  0011FE                     
  5498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5499  0011FE  0E02               	movlw	2
  5500  001200  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5501  001204  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5502  001208  26DE               	addwf	postinc2,f,c
  5503  00120A  0E00               	movlw	0
  5504  00120C  22DD               	addwfc	postdec2,f,c
  5505  00120E                     
  5506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5507  00120E  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5508  001212  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5509  001216  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  5510  00121A  0E02               	movlw	2
  5511  00121C  26DE               	addwf	postinc2,f,c
  5512  00121E  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  5513  001222  0E00               	movlw	0
  5514  001224  22DD               	addwfc	postdec2,f,c
  5515  001226  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5516  00122A  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5517  00122E  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+2
  5518  001232  CFDD F04F          	movff	postdec2,??_vfpfcnvrt+3
  5519  001236  C04E  F073         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5520  00123A  C04F  F074         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5521  00123E  0100               	movlb	0	; () banked
  5522  001240  6B75               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5523  001242  6B76               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5524  001244  6B77               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5525  001246  6B78               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5526  001248  6B79               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5527  00124A  6B7A               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5528  00124C  EFCA  F007         	goto	l3903
  5529  001250                     l3949:
  5530                           
  5531                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  5532  001250  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5533  001254  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5534  001258  CFDE FFF6          	movff	postinc2,tblptrl
  5535  00125C  CFDD FFF7          	movff	postdec2,tblptrh
  5536  001260                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5537  001260  6AF8               	clrf	tblptru,c
  5538  001262                     	endif
  5539  001262                     	if	0	;tblptru may be non-zero
  5540  001262                     	endif
  5541  001262  0008               	tblrd		*
  5542  001264  50F5               	movf	tablat,w,c
  5543  001266  0A25               	xorlw	37
  5544  001268  A4D8               	btfss	status,2,c
  5545  00126A  EF39  F009         	goto	u3871
  5546  00126E  EF3B  F009         	goto	u3870
  5547  001272                     u3871:
  5548  001272  EF52  F009         	goto	l3959
  5549  001276                     u3870:
  5550  001276                     
  5551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  5552  001276  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5553  00127A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5554  00127E  2ADE               	incf	postinc2,f,c
  5555  001280  0E00               	movlw	0
  5556  001282  22DD               	addwfc	postdec2,f,c
  5557  001284                     
  5558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  5559  001284  0E00               	movlw	0
  5560  001286  6E05               	movwf	(fputc@c+1)^0,c
  5561  001288  0E25               	movlw	37
  5562  00128A  6E04               	movwf	fputc@c^0,c
  5563  00128C  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5564  001290  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5565  001294  EC77  F017         	call	_fputc	;wreg free
  5566  001298                     l3955:
  5567                           
  5568                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  5569  001298  0E00               	movlw	0
  5570  00129A  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  5571  00129C  0E01               	movlw	1
  5572  00129E  6E46               	movwf	?_vfpfcnvrt^0,c
  5573  0012A0  EF77  F009         	goto	l611
  5574  0012A4                     l3959:
  5575                           
  5576                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  5577  0012A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5578  0012A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5579  0012AC  2ADE               	incf	postinc2,f,c
  5580  0012AE  0E00               	movlw	0
  5581  0012B0  22DD               	addwfc	postdec2,f,c
  5582  0012B2  EFE9  F004         	goto	l3811
  5583  0012B6                     l3965:
  5584                           
  5585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  5586  0012B6  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5587  0012BA  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5588  0012BE  CFDE FFF6          	movff	postinc2,tblptrl
  5589  0012C2  CFDD FFF7          	movff	postdec2,tblptrh
  5590  0012C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5591  0012C6  6AF8               	clrf	tblptru,c
  5592  0012C8                     	endif
  5593  0012C8                     	if	0	;tblptru may be non-zero
  5594  0012C8                     	endif
  5595  0012C8  0008               	tblrd		*
  5596  0012CA  50F5               	movf	tablat,w,c
  5597  0012CC  6E04               	movwf	fputc@c^0,c
  5598  0012CE  6A05               	clrf	(fputc@c+1)^0,c
  5599  0012D0  C046  F006         	movff	vfpfcnvrt@fp,fputc@fp
  5600  0012D4  C047  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5601  0012D8  EC77  F017         	call	_fputc	;wreg free
  5602  0012DC                     
  5603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  5604  0012DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5605  0012E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5606  0012E4  2ADE               	incf	postinc2,f,c
  5607  0012E6  0E00               	movlw	0
  5608  0012E8  22DD               	addwfc	postdec2,f,c
  5609  0012EA  EF4C  F009         	goto	l3955
  5610  0012EE                     l611:
  5611  0012EE  0012               	return		;funcret
  5612  0012F0                     __end_of_vfpfcnvrt:
  5613                           	opt callstack 0
  5614                           
  5615 ;; *************** function _xtoa *****************
  5616 ;; Defined at:
  5617 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5620 ;;		 -> vsnprintf@f(6), 
  5621 ;;  d               8   32[COMRAM] unsigned long long 
  5622 ;;  x               1   40[COMRAM] unsigned char 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  n               8   57[COMRAM] unsigned long long 
  5625 ;;  c               2   67[COMRAM] int 
  5626 ;;  i               2   65[COMRAM] int 
  5627 ;;  w               2   55[COMRAM] int 
  5628 ;;  p               2   53[COMRAM] int 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  2   30[COMRAM] int 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5638 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;Total ram usage:       39 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    8
  5645 ;; This function calls:
  5646 ;;		_isalpha
  5647 ;;		_isupper
  5648 ;;		_pad
  5649 ;;		_toupper
  5650 ;; This function is called by:
  5651 ;;		_vfpfcnvrt
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text5
  5656  001954                     __ptext5:
  5657                           	opt callstack 0
  5658  001954                     _xtoa:
  5659                           	opt callstack 18
  5660  001954                     
  5661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5662  001954  0100               	movlb	0	; () banked
  5663  001956  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  5664  001958  EFB0  F00C         	goto	u3121
  5665  00195C  EFB2  F00C         	goto	u3120
  5666  001960                     u3121:
  5667  001960  EFB3  F00C         	goto	l3499
  5668  001964                     u3120:
  5669  001964                     
  5670                           ; BSR set to: 0
  5671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5672  001964  9258               	bcf	_flags^0,1,c
  5673  001966                     l3499:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5677  001966  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  5678  001968  EFC0  F00C         	goto	u3130
  5679  00196C  51A4               	movf	(_prec+1)& (0+255),w,b
  5680  00196E  E106               	bnz	u3131
  5681  001970  05A3               	decf	_prec& (0+255),w,b
  5682  001972  B0D8               	btfsc	status,0,c
  5683  001974  EFBE  F00C         	goto	u3131
  5684  001978  EFC0  F00C         	goto	u3130
  5685  00197C                     u3131:
  5686  00197C  EFC6  F00C         	goto	l549
  5687  001980                     u3130:
  5688  001980                     
  5689                           ; BSR set to: 0
  5690  001980  0E00               	movlw	0
  5691  001982  6E37               	movwf	(xtoa@p+1)^0,c
  5692  001984  0E01               	movlw	1
  5693  001986  6E36               	movwf	xtoa@p^0,c
  5694  001988  EFCA  F00C         	goto	l551
  5695  00198C                     l549:
  5696                           
  5697                           ; BSR set to: 0
  5698  00198C  C0A3  F036         	movff	_prec,xtoa@p
  5699  001990  C0A4  F037         	movff	_prec+1,xtoa@p+1
  5700  001994                     l551:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5704  001994  C0A1  F038         	movff	_width,xtoa@w
  5705  001998  C0A2  F039         	movff	_width+1,xtoa@w+1
  5706                           
  5707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5708  00199C  A858               	btfss	_flags^0,4,c
  5709  00199E  EFD3  F00C         	goto	u3141
  5710  0019A2  EFD5  F00C         	goto	u3140
  5711  0019A6                     u3141:
  5712  0019A6  EFD9  F00C         	goto	l3505
  5713  0019AA                     u3140:
  5714  0019AA                     
  5715                           ; BSR set to: 0
  5716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5717  0019AA  0EFE               	movlw	254
  5718  0019AC  2638               	addwf	xtoa@w^0,f,c
  5719  0019AE  0EFF               	movlw	255
  5720  0019B0  2239               	addwfc	(xtoa@w+1)^0,f,c
  5721  0019B2                     l3505:
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5725  0019B2  C021  F03A         	movff	xtoa@d,xtoa@n
  5726  0019B6  C022  F03B         	movff	xtoa@d+1,xtoa@n+1
  5727  0019BA  C023  F03C         	movff	xtoa@d+2,xtoa@n+2
  5728  0019BE  C024  F03D         	movff	xtoa@d+3,xtoa@n+3
  5729  0019C2  C025  F03E         	movff	xtoa@d+4,xtoa@n+4
  5730  0019C6  C026  F03F         	movff	xtoa@d+5,xtoa@n+5
  5731  0019CA  C027  F040         	movff	xtoa@d+6,xtoa@n+6
  5732  0019CE  C028  F041         	movff	xtoa@d+7,xtoa@n+7
  5733  0019D2                     
  5734                           ; BSR set to: 0
  5735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5736  0019D2  0E00               	movlw	0
  5737  0019D4  6E43               	movwf	(xtoa@i+1)^0,c
  5738  0019D6  0E1F               	movlw	31
  5739  0019D8  6E42               	movwf	xtoa@i^0,c
  5740  0019DA                     
  5741                           ; BSR set to: 0
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5743  0019DA  0E00               	movlw	0
  5744  0019DC  6FCA               	movwf	(_dbuf+31)& (0+255),b
  5745                           
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5747  0019DE  EFA4  F00D         	goto	l3541
  5748  0019E2                     l3511:
  5749                           
  5750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5751  0019E2  0642               	decf	xtoa@i^0,f,c
  5752  0019E4  A0D8               	btfss	status,0,c
  5753  0019E6  0643               	decf	(xtoa@i+1)^0,f,c
  5754  0019E8                     
  5755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5756  0019E8  0E0F               	movlw	15
  5757  0019EA  143A               	andwf	xtoa@n^0,w,c
  5758  0019EC  6E44               	movwf	xtoa@c^0,c
  5759  0019EE  6A45               	clrf	(xtoa@c+1)^0,c
  5760  0019F0                     
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5762  0019F0  BE45               	btfsc	(xtoa@c+1)^0,7,c
  5763  0019F2  EF04  F00D         	goto	u3151
  5764  0019F6  5045               	movf	(xtoa@c+1)^0,w,c
  5765  0019F8  E109               	bnz	u3150
  5766  0019FA  0E0A               	movlw	10
  5767  0019FC  5C44               	subwf	xtoa@c^0,w,c
  5768  0019FE  A0D8               	btfss	status,0,c
  5769  001A00  EF04  F00D         	goto	u3151
  5770  001A04  EF06  F00D         	goto	u3150
  5771  001A08                     u3151:
  5772  001A08  EF0E  F00D         	goto	l3519
  5773  001A0C                     u3150:
  5774  001A0C  0E57               	movlw	87
  5775  001A0E  2444               	addwf	xtoa@c^0,w,c
  5776  001A10  6E44               	movwf	xtoa@c^0,c
  5777  001A12  0E00               	movlw	0
  5778  001A14  2045               	addwfc	(xtoa@c+1)^0,w,c
  5779  001A16  6E45               	movwf	(xtoa@c+1)^0,c
  5780  001A18  EF14  F00D         	goto	l558
  5781  001A1C                     l3519:
  5782  001A1C  0E30               	movlw	48
  5783  001A1E  2444               	addwf	xtoa@c^0,w,c
  5784  001A20  6E44               	movwf	xtoa@c^0,c
  5785  001A22  0E00               	movlw	0
  5786  001A24  2045               	addwfc	(xtoa@c+1)^0,w,c
  5787  001A26  6E45               	movwf	(xtoa@c+1)^0,c
  5788  001A28                     l558:
  5789  001A28  0EBF               	movlw	191
  5790  001A2A  6E2A               	movwf	??_xtoa^0,c
  5791  001A2C  0EFF               	movlw	255
  5792  001A2E  6E2B               	movwf	(??_xtoa+1)^0,c
  5793  001A30  5029               	movf	xtoa@x^0,w,c
  5794  001A32  6E2C               	movwf	(??_xtoa+2)^0,c
  5795  001A34  6A2D               	clrf	(??_xtoa+3)^0,c
  5796  001A36  502A               	movf	??_xtoa^0,w,c
  5797  001A38  262C               	addwf	(??_xtoa+2)^0,f,c
  5798  001A3A  502B               	movf	(??_xtoa+1)^0,w,c
  5799  001A3C  222D               	addwfc	(??_xtoa+3)^0,f,c
  5800  001A3E  502D               	movf	(??_xtoa+3)^0,w,c
  5801  001A40  E10A               	bnz	u3160
  5802  001A42  0E1A               	movlw	26
  5803  001A44  5C2C               	subwf	(??_xtoa+2)^0,w,c
  5804  001A46  A0D8               	btfss	status,0,c
  5805  001A48  EF28  F00D         	goto	u3161
  5806  001A4C  EF2B  F00D         	goto	u3160
  5807  001A50                     u3161:
  5808  001A50  0E01               	movlw	1
  5809  001A52  EF2C  F00D         	goto	u3170
  5810  001A56                     u3160:
  5811  001A56  0E00               	movlw	0
  5812  001A58                     u3170:
  5813  001A58  6E32               	movwf	_xtoa$1298^0,c
  5814  001A5A  6A33               	clrf	(_xtoa$1298+1)^0,c
  5815  001A5C  5032               	movf	_xtoa$1298^0,w,c
  5816  001A5E  1033               	iorwf	(_xtoa$1298+1)^0,w,c
  5817  001A60  B4D8               	btfsc	status,2,c
  5818  001A62  EF35  F00D         	goto	u3181
  5819  001A66  EF37  F00D         	goto	u3180
  5820  001A6A                     u3181:
  5821  001A6A  EF67  F00D         	goto	l3533
  5822  001A6E                     u3180:
  5823  001A6E  0E9F               	movlw	159
  5824  001A70  6E2A               	movwf	??_xtoa^0,c
  5825  001A72  0EFF               	movlw	255
  5826  001A74  6E2B               	movwf	(??_xtoa+1)^0,c
  5827  001A76  0E20               	movlw	32
  5828  001A78  1044               	iorwf	xtoa@c^0,w,c
  5829  001A7A  6E2C               	movwf	(??_xtoa+2)^0,c
  5830  001A7C  0E00               	movlw	0
  5831  001A7E  1045               	iorwf	(xtoa@c+1)^0,w,c
  5832  001A80  6E2D               	movwf	(??_xtoa+3)^0,c
  5833  001A82  502A               	movf	??_xtoa^0,w,c
  5834  001A84  262C               	addwf	(??_xtoa+2)^0,f,c
  5835  001A86  502B               	movf	(??_xtoa+1)^0,w,c
  5836  001A88  222D               	addwfc	(??_xtoa+3)^0,f,c
  5837  001A8A  502D               	movf	(??_xtoa+3)^0,w,c
  5838  001A8C  E10A               	bnz	u3190
  5839  001A8E  0E1A               	movlw	26
  5840  001A90  5C2C               	subwf	(??_xtoa+2)^0,w,c
  5841  001A92  A0D8               	btfss	status,0,c
  5842  001A94  EF4E  F00D         	goto	u3191
  5843  001A98  EF51  F00D         	goto	u3190
  5844  001A9C                     u3191:
  5845  001A9C  0E01               	movlw	1
  5846  001A9E  EF52  F00D         	goto	u3200
  5847  001AA2                     u3190:
  5848  001AA2  0E00               	movlw	0
  5849  001AA4                     u3200:
  5850  001AA4  6E34               	movwf	_xtoa$1299^0,c
  5851  001AA6  6A35               	clrf	(_xtoa$1299+1)^0,c
  5852  001AA8  5034               	movf	_xtoa$1299^0,w,c
  5853  001AAA  1035               	iorwf	(_xtoa$1299+1)^0,w,c
  5854  001AAC  B4D8               	btfsc	status,2,c
  5855  001AAE  EF5B  F00D         	goto	u3211
  5856  001AB2  EF5D  F00D         	goto	u3210
  5857  001AB6                     u3211:
  5858  001AB6  EF67  F00D         	goto	l3533
  5859  001ABA                     u3210:
  5860  001ABA                     
  5861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5862  001ABA  C044  F00A         	movff	xtoa@c,toupper@c
  5863  001ABE  C045  F00B         	movff	xtoa@c+1,toupper@c+1
  5864  001AC2  EC08  F019         	call	_toupper	;wreg free
  5865  001AC6  C00A  F044         	movff	?_toupper,xtoa@c
  5866  001ACA  C00B  F045         	movff	?_toupper+1,xtoa@c+1
  5867  001ACE                     l3533:
  5868                           
  5869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5870  001ACE  0EAB               	movlw	low _dbuf
  5871  001AD0  2442               	addwf	xtoa@i^0,w,c
  5872  001AD2  6ED9               	movwf	fsr2l,c
  5873  001AD4  0E00               	movlw	high _dbuf
  5874  001AD6  2043               	addwfc	(xtoa@i+1)^0,w,c
  5875  001AD8  6EDA               	movwf	fsr2h,c
  5876  001ADA  C044  FFDF         	movff	xtoa@c,indf2
  5877  001ADE                     
  5878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5879  001ADE  0636               	decf	xtoa@p^0,f,c
  5880  001AE0  A0D8               	btfss	status,0,c
  5881  001AE2  0637               	decf	(xtoa@p+1)^0,f,c
  5882  001AE4                     
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5884  001AE4  0638               	decf	xtoa@w^0,f,c
  5885  001AE6  A0D8               	btfss	status,0,c
  5886  001AE8  0639               	decf	(xtoa@w+1)^0,f,c
  5887  001AEA                     
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5889  001AEA  C03A  F02A         	movff	xtoa@n,??_xtoa
  5890  001AEE  C03B  F02B         	movff	xtoa@n+1,??_xtoa+1
  5891  001AF2  C03C  F02C         	movff	xtoa@n+2,??_xtoa+2
  5892  001AF6  C03D  F02D         	movff	xtoa@n+3,??_xtoa+3
  5893  001AFA  C03E  F02E         	movff	xtoa@n+4,??_xtoa+4
  5894  001AFE  C03F  F02F         	movff	xtoa@n+5,??_xtoa+5
  5895  001B02  C040  F030         	movff	xtoa@n+6,??_xtoa+6
  5896  001B06  C041  F031         	movff	xtoa@n+7,??_xtoa+7
  5897  001B0A  0E05               	movlw	5
  5898  001B0C  EF91  F00D         	goto	u3220
  5899  001B10                     u3225:
  5900  001B10  90D8               	bcf	status,0,c
  5901  001B12  3231               	rrcf	(??_xtoa+7)^0,f,c
  5902  001B14  3230               	rrcf	(??_xtoa+6)^0,f,c
  5903  001B16  322F               	rrcf	(??_xtoa+5)^0,f,c
  5904  001B18  322E               	rrcf	(??_xtoa+4)^0,f,c
  5905  001B1A  322D               	rrcf	(??_xtoa+3)^0,f,c
  5906  001B1C  322C               	rrcf	(??_xtoa+2)^0,f,c
  5907  001B1E  322B               	rrcf	(??_xtoa+1)^0,f,c
  5908  001B20  322A               	rrcf	??_xtoa^0,f,c
  5909  001B22                     u3220:
  5910  001B22  2EE8               	decfsz	wreg,f,c
  5911  001B24  EF88  F00D         	goto	u3225
  5912  001B28  C02A  F03A         	movff	??_xtoa,xtoa@n
  5913  001B2C  C02B  F03B         	movff	??_xtoa+1,xtoa@n+1
  5914  001B30  C02C  F03C         	movff	??_xtoa+2,xtoa@n+2
  5915  001B34  C02D  F03D         	movff	??_xtoa+3,xtoa@n+3
  5916  001B38  C02E  F03E         	movff	??_xtoa+4,xtoa@n+4
  5917  001B3C  C02F  F03F         	movff	??_xtoa+5,xtoa@n+5
  5918  001B40  C030  F040         	movff	??_xtoa+6,xtoa@n+6
  5919  001B44  C031  F041         	movff	??_xtoa+7,xtoa@n+7
  5920  001B48                     l3541:
  5921                           
  5922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5923  001B48  BE43               	btfsc	(xtoa@i+1)^0,7,c
  5924  001B4A  EFB0  F00D         	goto	u3231
  5925  001B4E  5043               	movf	(xtoa@i+1)^0,w,c
  5926  001B50  E109               	bnz	u3230
  5927  001B52  0E02               	movlw	2
  5928  001B54  5C42               	subwf	xtoa@i^0,w,c
  5929  001B56  A0D8               	btfss	status,0,c
  5930  001B58  EFB0  F00D         	goto	u3231
  5931  001B5C  EFB2  F00D         	goto	u3230
  5932  001B60                     u3231:
  5933  001B60  EFE2  F00D         	goto	l572
  5934  001B64                     u3230:
  5935  001B64  503A               	movf	xtoa@n^0,w,c
  5936  001B66  103B               	iorwf	(xtoa@n+1)^0,w,c
  5937  001B68  103C               	iorwf	(xtoa@n+2)^0,w,c
  5938  001B6A  103D               	iorwf	(xtoa@n+3)^0,w,c
  5939  001B6C  103E               	iorwf	(xtoa@n+4)^0,w,c
  5940  001B6E  103F               	iorwf	(xtoa@n+5)^0,w,c
  5941  001B70  1040               	iorwf	(xtoa@n+6)^0,w,c
  5942  001B72  1041               	iorwf	(xtoa@n+7)^0,w,c
  5943  001B74  A4D8               	btfss	status,2,c
  5944  001B76  EFBF  F00D         	goto	u3241
  5945  001B7A  EFC1  F00D         	goto	u3240
  5946  001B7E                     u3241:
  5947  001B7E  EFF1  F00C         	goto	l3511
  5948  001B82                     u3240:
  5949  001B82  BE37               	btfsc	(xtoa@p+1)^0,7,c
  5950  001B84  EFCE  F00D         	goto	u3250
  5951  001B88  5037               	movf	(xtoa@p+1)^0,w,c
  5952  001B8A  E106               	bnz	u3251
  5953  001B8C  0436               	decf	xtoa@p^0,w,c
  5954  001B8E  B0D8               	btfsc	status,0,c
  5955  001B90  EFCC  F00D         	goto	u3251
  5956  001B94  EFCE  F00D         	goto	u3250
  5957  001B98                     u3251:
  5958  001B98  EFF1  F00C         	goto	l3511
  5959  001B9C                     u3250:
  5960  001B9C  BE39               	btfsc	(xtoa@w+1)^0,7,c
  5961  001B9E  EFD9  F00D         	goto	u3261
  5962  001BA2  5039               	movf	(xtoa@w+1)^0,w,c
  5963  001BA4  E108               	bnz	u3260
  5964  001BA6  0438               	decf	xtoa@w^0,w,c
  5965  001BA8  A0D8               	btfss	status,0,c
  5966  001BAA  EFD9  F00D         	goto	u3261
  5967  001BAE  EFDB  F00D         	goto	u3260
  5968  001BB2                     u3261:
  5969  001BB2  EFE2  F00D         	goto	l572
  5970  001BB6                     u3260:
  5971  001BB6  B258               	btfsc	_flags^0,1,c
  5972  001BB8  EFE0  F00D         	goto	u3271
  5973  001BBC  EFE2  F00D         	goto	u3270
  5974  001BC0                     u3271:
  5975  001BC0  EFF1  F00C         	goto	l3511
  5976  001BC4                     u3270:
  5977  001BC4                     l572:
  5978                           
  5979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  5980  001BC4  A858               	btfss	_flags^0,4,c
  5981  001BC6  EFE7  F00D         	goto	u3281
  5982  001BCA  EFE9  F00D         	goto	u3280
  5983  001BCE                     u3281:
  5984  001BCE  EFFF  F00D         	goto	l3557
  5985  001BD2                     u3280:
  5986  001BD2                     
  5987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  5988  001BD2  0642               	decf	xtoa@i^0,f,c
  5989  001BD4  A0D8               	btfss	status,0,c
  5990  001BD6  0643               	decf	(xtoa@i+1)^0,f,c
  5991  001BD8                     
  5992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  5993  001BD8  0EAB               	movlw	low _dbuf
  5994  001BDA  2442               	addwf	xtoa@i^0,w,c
  5995  001BDC  6ED9               	movwf	fsr2l,c
  5996  001BDE  0E00               	movlw	high _dbuf
  5997  001BE0  2043               	addwfc	(xtoa@i+1)^0,w,c
  5998  001BE2  6EDA               	movwf	fsr2h,c
  5999  001BE4  C029  FFDF         	movff	xtoa@x,indf2
  6000  001BE8                     
  6001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6002  001BE8  0642               	decf	xtoa@i^0,f,c
  6003  001BEA  A0D8               	btfss	status,0,c
  6004  001BEC  0643               	decf	(xtoa@i+1)^0,f,c
  6005                           
  6006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6007  001BEE  0EAB               	movlw	low _dbuf
  6008  001BF0  2442               	addwf	xtoa@i^0,w,c
  6009  001BF2  6ED9               	movwf	fsr2l,c
  6010  001BF4  0E00               	movlw	high _dbuf
  6011  001BF6  2043               	addwfc	(xtoa@i+1)^0,w,c
  6012  001BF8  6EDA               	movwf	fsr2h,c
  6013  001BFA  0E30               	movlw	48
  6014  001BFC  6EDF               	movwf	indf2,c
  6015  001BFE                     l3557:
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6018  001BFE  C01F  F014         	movff	xtoa@fp,pad@fp
  6019  001C02  C020  F015         	movff	xtoa@fp+1,pad@fp+1
  6020  001C06  0EAB               	movlw	low _dbuf
  6021  001C08  2442               	addwf	xtoa@i^0,w,c
  6022  001C0A  6E16               	movwf	pad@buf^0,c
  6023  001C0C  0E00               	movlw	high _dbuf
  6024  001C0E  2043               	addwfc	(xtoa@i+1)^0,w,c
  6025  001C10  6E17               	movwf	(pad@buf+1)^0,c
  6026  001C12  C038  F018         	movff	xtoa@w,pad@p
  6027  001C16  C039  F019         	movff	xtoa@w+1,pad@p+1
  6028  001C1A  ECDC  F017         	call	_pad	;wreg free
  6029  001C1E  C014  F01F         	movff	?_pad,?_xtoa
  6030  001C22  C015  F020         	movff	?_pad+1,?_xtoa+1
  6031  001C26  0012               	return		;funcret
  6032  001C28                     __end_of_xtoa:
  6033                           	opt callstack 0
  6034                           
  6035 ;; *************** function _toupper *****************
  6036 ;; Defined at:
  6037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  c               2    9[COMRAM] int 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  2    9[COMRAM] int 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6055 ;;Total ram usage:        8 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    5
  6058 ;; This function calls:
  6059 ;;		_islower
  6060 ;; This function is called by:
  6061 ;;		_xtoa
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text6
  6066  003210                     __ptext6:
  6067                           	opt callstack 0
  6068  003210                     _toupper:
  6069                           	opt callstack 20
  6070  003210  0E9F               	movlw	159
  6071  003212  6E0C               	movwf	??_toupper^0,c
  6072  003214  0EFF               	movlw	255
  6073  003216  6E0D               	movwf	(??_toupper+1)^0,c
  6074  003218  C00A  F00E         	movff	toupper@c,??_toupper+2
  6075  00321C  C00B  F00F         	movff	toupper@c+1,??_toupper+3
  6076  003220  500C               	movf	??_toupper^0,w,c
  6077  003222  260E               	addwf	(??_toupper+2)^0,f,c
  6078  003224  500D               	movf	(??_toupper+1)^0,w,c
  6079  003226  220F               	addwfc	(??_toupper+3)^0,f,c
  6080  003228  500F               	movf	(??_toupper+3)^0,w,c
  6081  00322A  E10A               	bnz	u2420
  6082  00322C  0E1A               	movlw	26
  6083  00322E  5C0E               	subwf	(??_toupper+2)^0,w,c
  6084  003230  A0D8               	btfss	status,0,c
  6085  003232  EF1D  F019         	goto	u2421
  6086  003236  EF20  F019         	goto	u2420
  6087  00323A                     u2421:
  6088  00323A  0E01               	movlw	1
  6089  00323C  EF21  F019         	goto	u2430
  6090  003240                     u2420:
  6091  003240  0E00               	movlw	0
  6092  003242                     u2430:
  6093  003242  6E10               	movwf	_toupper$1982^0,c
  6094  003244  6A11               	clrf	(_toupper$1982+1)^0,c
  6095  003246  5010               	movf	_toupper$1982^0,w,c
  6096  003248  1011               	iorwf	(_toupper$1982+1)^0,w,c
  6097  00324A  B4D8               	btfsc	status,2,c
  6098  00324C  EF2A  F019         	goto	u2441
  6099  003250  EF2C  F019         	goto	u2440
  6100  003254                     u2441:
  6101  003254  EF32  F019         	goto	l1444
  6102  003258                     u2440:
  6103  003258  0E5F               	movlw	95
  6104  00325A  140A               	andwf	toupper@c^0,w,c
  6105  00325C  6E0A               	movwf	?_toupper^0,c
  6106  00325E  6A0B               	clrf	(?_toupper+1)^0,c
  6107  003260  EF36  F019         	goto	l1449
  6108  003264                     l1444:
  6109  003264  C00A  F00A         	movff	toupper@c,?_toupper
  6110  003268  C00B  F00B         	movff	toupper@c+1,?_toupper+1
  6111  00326C                     l1449:
  6112  00326C  0012               	return		;funcret
  6113  00326E                     __end_of_toupper:
  6114                           	opt callstack 0
  6115                           
  6116 ;; *************** function _islower *****************
  6117 ;; Defined at:
  6118 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  c               2    3[COMRAM] int 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2    3[COMRAM] int 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;Total ram usage:        6 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    4
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_toupper
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text7
  6147  003538                     __ptext7:
  6148                           	opt callstack 0
  6149  003538                     _islower:
  6150                           	opt callstack 20
  6151  003538  0E9F               	movlw	159
  6152  00353A  6E06               	movwf	??_islower^0,c
  6153  00353C  0EFF               	movlw	255
  6154  00353E  6E07               	movwf	(??_islower+1)^0,c
  6155  003540  C004  F008         	movff	islower@c,??_islower+2
  6156  003544  C005  F009         	movff	islower@c+1,??_islower+3
  6157  003548  5006               	movf	??_islower^0,w,c
  6158  00354A  2608               	addwf	(??_islower+2)^0,f,c
  6159  00354C  5007               	movf	(??_islower+1)^0,w,c
  6160  00354E  2209               	addwfc	(??_islower+3)^0,f,c
  6161  003550  5009               	movf	(??_islower+3)^0,w,c
  6162  003552  E10A               	bnz	u2300
  6163  003554  0E1A               	movlw	26
  6164  003556  5C08               	subwf	(??_islower+2)^0,w,c
  6165  003558  A0D8               	btfss	status,0,c
  6166  00355A  EFB1  F01A         	goto	u2301
  6167  00355E  EFB4  F01A         	goto	u2300
  6168  003562                     u2301:
  6169  003562  0E01               	movlw	1
  6170  003564  EFB5  F01A         	goto	u2310
  6171  003568                     u2300:
  6172  003568  0E00               	movlw	0
  6173  00356A                     u2310:
  6174  00356A  6E04               	movwf	?_islower^0,c
  6175  00356C  6A05               	clrf	(?_islower+1)^0,c
  6176  00356E  0012               	return		;funcret
  6177  003570                     __end_of_islower:
  6178                           	opt callstack 0
  6179                           
  6180 ;; *************** function _isupper *****************
  6181 ;; Defined at:
  6182 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  c               2    3[COMRAM] int 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  2    3[COMRAM] int 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;Total ram usage:        6 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    4
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_xtoa
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text8
  6211  003570                     __ptext8:
  6212                           	opt callstack 0
  6213  003570                     _isupper:
  6214                           	opt callstack 21
  6215  003570  0EBF               	movlw	191
  6216  003572  6E06               	movwf	??_isupper^0,c
  6217  003574  0EFF               	movlw	255
  6218  003576  6E07               	movwf	(??_isupper+1)^0,c
  6219  003578  C004  F008         	movff	isupper@c,??_isupper+2
  6220  00357C  C005  F009         	movff	isupper@c+1,??_isupper+3
  6221  003580  5006               	movf	??_isupper^0,w,c
  6222  003582  2608               	addwf	(??_isupper+2)^0,f,c
  6223  003584  5007               	movf	(??_isupper+1)^0,w,c
  6224  003586  2209               	addwfc	(??_isupper+3)^0,f,c
  6225  003588  5009               	movf	(??_isupper+3)^0,w,c
  6226  00358A  E10A               	bnz	u2380
  6227  00358C  0E1A               	movlw	26
  6228  00358E  5C08               	subwf	(??_isupper+2)^0,w,c
  6229  003590  A0D8               	btfss	status,0,c
  6230  003592  EFCD  F01A         	goto	u2381
  6231  003596  EFD0  F01A         	goto	u2380
  6232  00359A                     u2381:
  6233  00359A  0E01               	movlw	1
  6234  00359C  EFD1  F01A         	goto	u2390
  6235  0035A0                     u2380:
  6236  0035A0  0E00               	movlw	0
  6237  0035A2                     u2390:
  6238  0035A2  6E04               	movwf	?_isupper^0,c
  6239  0035A4  6A05               	clrf	(?_isupper+1)^0,c
  6240  0035A6  0012               	return		;funcret
  6241  0035A8                     __end_of_isupper:
  6242                           	opt callstack 0
  6243                           
  6244 ;; *************** function _isalpha *****************
  6245 ;; Defined at:
  6246 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  c               2    3[COMRAM] int 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;		None
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  2    3[COMRAM] int 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;Total ram usage:        6 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    4
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_xtoa
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text9
  6275  0034FC                     __ptext9:
  6276                           	opt callstack 0
  6277  0034FC                     _isalpha:
  6278                           	opt callstack 21
  6279  0034FC  0E9F               	movlw	159
  6280  0034FE  6E06               	movwf	??_isalpha^0,c
  6281  003500  0EFF               	movlw	255
  6282  003502  6E07               	movwf	(??_isalpha+1)^0,c
  6283  003504  0E20               	movlw	32
  6284  003506  1004               	iorwf	isalpha@c^0,w,c
  6285  003508  6E08               	movwf	(??_isalpha+2)^0,c
  6286  00350A  0E00               	movlw	0
  6287  00350C  1005               	iorwf	(isalpha@c+1)^0,w,c
  6288  00350E  6E09               	movwf	(??_isalpha+3)^0,c
  6289  003510  5006               	movf	??_isalpha^0,w,c
  6290  003512  2608               	addwf	(??_isalpha+2)^0,f,c
  6291  003514  5007               	movf	(??_isalpha+1)^0,w,c
  6292  003516  2209               	addwfc	(??_isalpha+3)^0,f,c
  6293  003518  5009               	movf	(??_isalpha+3)^0,w,c
  6294  00351A  E10A               	bnz	u2400
  6295  00351C  0E1A               	movlw	26
  6296  00351E  5C08               	subwf	(??_isalpha+2)^0,w,c
  6297  003520  A0D8               	btfss	status,0,c
  6298  003522  EF95  F01A         	goto	u2401
  6299  003526  EF98  F01A         	goto	u2400
  6300  00352A                     u2401:
  6301  00352A  0E01               	movlw	1
  6302  00352C  EF99  F01A         	goto	u2410
  6303  003530                     u2400:
  6304  003530  0E00               	movlw	0
  6305  003532                     u2410:
  6306  003532  6E04               	movwf	?_isalpha^0,c
  6307  003534  6A05               	clrf	(?_isalpha+1)^0,c
  6308  003536  0012               	return		;funcret
  6309  003538                     __end_of_isalpha:
  6310                           	opt callstack 0
  6311                           
  6312 ;; *************** function _utoa *****************
  6313 ;; Defined at:
  6314 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  6317 ;;		 -> vsnprintf@f(6), 
  6318 ;;  d               8   32[COMRAM] unsigned long long 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  n               8   52[COMRAM] unsigned long long 
  6321 ;;  i               2   60[COMRAM] int 
  6322 ;;  w               2   50[COMRAM] int 
  6323 ;;  p               2   48[COMRAM] int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2   30[COMRAM] int 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6333 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;Total ram usage:       32 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    8
  6340 ;; This function calls:
  6341 ;;		___lodiv
  6342 ;;		___lomod
  6343 ;;		_pad
  6344 ;; This function is called by:
  6345 ;;		_vfpfcnvrt
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text10
  6350  001C28                     __ptext10:
  6351                           	opt callstack 0
  6352  001C28                     _utoa:
  6353                           	opt callstack 18
  6354  001C28                     
  6355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6356  001C28  0100               	movlb	0	; () banked
  6357  001C2A  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  6358  001C2C  EF1A  F00E         	goto	u3051
  6359  001C30  EF1C  F00E         	goto	u3050
  6360  001C34                     u3051:
  6361  001C34  EF1D  F00E         	goto	l3463
  6362  001C38                     u3050:
  6363  001C38                     
  6364                           ; BSR set to: 0
  6365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6366  001C38  9258               	bcf	_flags^0,1,c
  6367  001C3A                     l3463:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6371  001C3A  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  6372  001C3C  EF2A  F00E         	goto	u3060
  6373  001C40  51A4               	movf	(_prec+1)& (0+255),w,b
  6374  001C42  E106               	bnz	u3061
  6375  001C44  05A3               	decf	_prec& (0+255),w,b
  6376  001C46  B0D8               	btfsc	status,0,c
  6377  001C48  EF28  F00E         	goto	u3061
  6378  001C4C  EF2A  F00E         	goto	u3060
  6379  001C50                     u3061:
  6380  001C50  EF30  F00E         	goto	l534
  6381  001C54                     u3060:
  6382  001C54                     
  6383                           ; BSR set to: 0
  6384  001C54  0E00               	movlw	0
  6385  001C56  6E32               	movwf	(utoa@p+1)^0,c
  6386  001C58  0E01               	movlw	1
  6387  001C5A  6E31               	movwf	utoa@p^0,c
  6388  001C5C  EF34  F00E         	goto	l536
  6389  001C60                     l534:
  6390                           
  6391                           ; BSR set to: 0
  6392  001C60  C0A3  F031         	movff	_prec,utoa@p
  6393  001C64  C0A4  F032         	movff	_prec+1,utoa@p+1
  6394  001C68                     l536:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6398  001C68  C0A1  F033         	movff	_width,utoa@w
  6399  001C6C  C0A2  F034         	movff	_width+1,utoa@w+1
  6400                           
  6401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6402  001C70  C021  F035         	movff	utoa@d,utoa@n
  6403  001C74  C022  F036         	movff	utoa@d+1,utoa@n+1
  6404  001C78  C023  F037         	movff	utoa@d+2,utoa@n+2
  6405  001C7C  C024  F038         	movff	utoa@d+3,utoa@n+3
  6406  001C80  C025  F039         	movff	utoa@d+4,utoa@n+4
  6407  001C84  C026  F03A         	movff	utoa@d+5,utoa@n+5
  6408  001C88  C027  F03B         	movff	utoa@d+6,utoa@n+6
  6409  001C8C  C028  F03C         	movff	utoa@d+7,utoa@n+7
  6410  001C90                     
  6411                           ; BSR set to: 0
  6412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6413  001C90  0E00               	movlw	0
  6414  001C92  6E3E               	movwf	(utoa@i+1)^0,c
  6415  001C94  0E1F               	movlw	31
  6416  001C96  6E3D               	movwf	utoa@i^0,c
  6417  001C98                     
  6418                           ; BSR set to: 0
  6419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6420  001C98  0E00               	movlw	0
  6421  001C9A  6FCA               	movwf	(_dbuf+31)& (0+255),b
  6422                           
  6423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6424  001C9C  EFC6  F00E         	goto	l3481
  6425  001CA0                     l3471:
  6426                           
  6427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6428  001CA0  063D               	decf	utoa@i^0,f,c
  6429  001CA2  A0D8               	btfss	status,0,c
  6430  001CA4  063E               	decf	(utoa@i+1)^0,f,c
  6431  001CA6                     
  6432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6433  001CA6  0EAB               	movlw	low _dbuf
  6434  001CA8  243D               	addwf	utoa@i^0,w,c
  6435  001CAA  6ED9               	movwf	fsr2l,c
  6436  001CAC  0E00               	movlw	high _dbuf
  6437  001CAE  203E               	addwfc	(utoa@i+1)^0,w,c
  6438  001CB0  6EDA               	movwf	fsr2h,c
  6439  001CB2  C035  F004         	movff	utoa@n,___lomod@dividend
  6440  001CB6  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  6441  001CBA  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  6442  001CBE  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  6443  001CC2  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  6444  001CC6  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  6445  001CCA  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  6446  001CCE  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  6447  001CD2  0E0A               	movlw	10
  6448  001CD4  6E0C               	movwf	___lomod@divisor^0,c
  6449  001CD6  0E00               	movlw	0
  6450  001CD8  6E0D               	movwf	(___lomod@divisor+1)^0,c
  6451  001CDA  0E00               	movlw	0
  6452  001CDC  6E0E               	movwf	(___lomod@divisor+2)^0,c
  6453  001CDE  0E00               	movlw	0
  6454  001CE0  6E0F               	movwf	(___lomod@divisor+3)^0,c
  6455  001CE2  0E00               	movlw	0
  6456  001CE4  6E10               	movwf	(___lomod@divisor+4)^0,c
  6457  001CE6  0E00               	movlw	0
  6458  001CE8  6E11               	movwf	(___lomod@divisor+5)^0,c
  6459  001CEA  0E00               	movlw	0
  6460  001CEC  6E12               	movwf	(___lomod@divisor+6)^0,c
  6461  001CEE  0E00               	movlw	0
  6462  001CF0  6E13               	movwf	(___lomod@divisor+7)^0,c
  6463  001CF2  EC0F  F017         	call	___lomod	;wreg free
  6464  001CF6  C004  F029         	movff	?___lomod,??_utoa
  6465  001CFA  C005  F02A         	movff	?___lomod+1,??_utoa+1
  6466  001CFE  C006  F02B         	movff	?___lomod+2,??_utoa+2
  6467  001D02  C007  F02C         	movff	?___lomod+3,??_utoa+3
  6468  001D06  C008  F02D         	movff	?___lomod+4,??_utoa+4
  6469  001D0A  C009  F02E         	movff	?___lomod+5,??_utoa+5
  6470  001D0E  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  6471  001D12  C00B  F030         	movff	?___lomod+7,??_utoa+7
  6472  001D16  5029               	movf	??_utoa^0,w,c
  6473  001D18  0F30               	addlw	48
  6474  001D1A  6EDF               	movwf	indf2,c
  6475  001D1C                     
  6476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6477  001D1C  0631               	decf	utoa@p^0,f,c
  6478  001D1E  A0D8               	btfss	status,0,c
  6479  001D20  0632               	decf	(utoa@p+1)^0,f,c
  6480  001D22                     
  6481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6482  001D22  0633               	decf	utoa@w^0,f,c
  6483  001D24  A0D8               	btfss	status,0,c
  6484  001D26  0634               	decf	(utoa@w+1)^0,f,c
  6485  001D28                     
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6487  001D28  C035  F004         	movff	utoa@n,___lodiv@dividend
  6488  001D2C  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  6489  001D30  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  6490  001D34  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  6491  001D38  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  6492  001D3C  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  6493  001D40  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  6494  001D44  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  6495  001D48  0E0A               	movlw	10
  6496  001D4A  6E0C               	movwf	___lodiv@divisor^0,c
  6497  001D4C  0E00               	movlw	0
  6498  001D4E  6E0D               	movwf	(___lodiv@divisor+1)^0,c
  6499  001D50  0E00               	movlw	0
  6500  001D52  6E0E               	movwf	(___lodiv@divisor+2)^0,c
  6501  001D54  0E00               	movlw	0
  6502  001D56  6E0F               	movwf	(___lodiv@divisor+3)^0,c
  6503  001D58  0E00               	movlw	0
  6504  001D5A  6E10               	movwf	(___lodiv@divisor+4)^0,c
  6505  001D5C  0E00               	movlw	0
  6506  001D5E  6E11               	movwf	(___lodiv@divisor+5)^0,c
  6507  001D60  0E00               	movlw	0
  6508  001D62  6E12               	movwf	(___lodiv@divisor+6)^0,c
  6509  001D64  0E00               	movlw	0
  6510  001D66  6E13               	movwf	(___lodiv@divisor+7)^0,c
  6511  001D68  EC22  F016         	call	___lodiv	;wreg free
  6512  001D6C  C004  F035         	movff	?___lodiv,utoa@n
  6513  001D70  C005  F036         	movff	?___lodiv+1,utoa@n+1
  6514  001D74  C006  F037         	movff	?___lodiv+2,utoa@n+2
  6515  001D78  C007  F038         	movff	?___lodiv+3,utoa@n+3
  6516  001D7C  C008  F039         	movff	?___lodiv+4,utoa@n+4
  6517  001D80  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  6518  001D84  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  6519  001D88  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  6520  001D8C                     l3481:
  6521                           
  6522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6523  001D8C  503D               	movf	utoa@i^0,w,c
  6524  001D8E  103E               	iorwf	(utoa@i+1)^0,w,c
  6525  001D90  B4D8               	btfsc	status,2,c
  6526  001D92  EFCD  F00E         	goto	u3071
  6527  001D96  EFCF  F00E         	goto	u3070
  6528  001D9A                     u3071:
  6529  001D9A  EFFF  F00E         	goto	l3491
  6530  001D9E                     u3070:
  6531  001D9E  5035               	movf	utoa@n^0,w,c
  6532  001DA0  1036               	iorwf	(utoa@n+1)^0,w,c
  6533  001DA2  1037               	iorwf	(utoa@n+2)^0,w,c
  6534  001DA4  1038               	iorwf	(utoa@n+3)^0,w,c
  6535  001DA6  1039               	iorwf	(utoa@n+4)^0,w,c
  6536  001DA8  103A               	iorwf	(utoa@n+5)^0,w,c
  6537  001DAA  103B               	iorwf	(utoa@n+6)^0,w,c
  6538  001DAC  103C               	iorwf	(utoa@n+7)^0,w,c
  6539  001DAE  A4D8               	btfss	status,2,c
  6540  001DB0  EFDC  F00E         	goto	u3081
  6541  001DB4  EFDE  F00E         	goto	u3080
  6542  001DB8                     u3081:
  6543  001DB8  EF50  F00E         	goto	l3471
  6544  001DBC                     u3080:
  6545  001DBC  BE32               	btfsc	(utoa@p+1)^0,7,c
  6546  001DBE  EFEB  F00E         	goto	u3090
  6547  001DC2  5032               	movf	(utoa@p+1)^0,w,c
  6548  001DC4  E106               	bnz	u3091
  6549  001DC6  0431               	decf	utoa@p^0,w,c
  6550  001DC8  B0D8               	btfsc	status,0,c
  6551  001DCA  EFE9  F00E         	goto	u3091
  6552  001DCE  EFEB  F00E         	goto	u3090
  6553  001DD2                     u3091:
  6554  001DD2  EF50  F00E         	goto	l3471
  6555  001DD6                     u3090:
  6556  001DD6  BE34               	btfsc	(utoa@w+1)^0,7,c
  6557  001DD8  EFF6  F00E         	goto	u3101
  6558  001DDC  5034               	movf	(utoa@w+1)^0,w,c
  6559  001DDE  E108               	bnz	u3100
  6560  001DE0  0433               	decf	utoa@w^0,w,c
  6561  001DE2  A0D8               	btfss	status,0,c
  6562  001DE4  EFF6  F00E         	goto	u3101
  6563  001DE8  EFF8  F00E         	goto	u3100
  6564  001DEC                     u3101:
  6565  001DEC  EFFF  F00E         	goto	l3491
  6566  001DF0                     u3100:
  6567  001DF0  B258               	btfsc	_flags^0,1,c
  6568  001DF2  EFFD  F00E         	goto	u3111
  6569  001DF6  EFFF  F00E         	goto	u3110
  6570  001DFA                     u3111:
  6571  001DFA  EF50  F00E         	goto	l3471
  6572  001DFE                     u3110:
  6573  001DFE                     l3491:
  6574                           
  6575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6576  001DFE  C01F  F014         	movff	utoa@fp,pad@fp
  6577  001E02  C020  F015         	movff	utoa@fp+1,pad@fp+1
  6578  001E06  0EAB               	movlw	low _dbuf
  6579  001E08  243D               	addwf	utoa@i^0,w,c
  6580  001E0A  6E16               	movwf	pad@buf^0,c
  6581  001E0C  0E00               	movlw	high _dbuf
  6582  001E0E  203E               	addwfc	(utoa@i+1)^0,w,c
  6583  001E10  6E17               	movwf	(pad@buf+1)^0,c
  6584  001E12  C033  F018         	movff	utoa@w,pad@p
  6585  001E16  C034  F019         	movff	utoa@w+1,pad@p+1
  6586  001E1A  ECDC  F017         	call	_pad	;wreg free
  6587  001E1E  C014  F01F         	movff	?_pad,?_utoa
  6588  001E22  C015  F020         	movff	?_pad+1,?_utoa+1
  6589  001E26  0012               	return		;funcret
  6590  001E28                     __end_of_utoa:
  6591                           	opt callstack 0
  6592                           
  6593 ;; *************** function ___lomod *****************
  6594 ;; Defined at:
  6595 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  dividend        8    3[COMRAM] unsigned long long 
  6598 ;;  divisor         8   11[COMRAM] unsigned long long 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  counter         1   19[COMRAM] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  8    3[COMRAM] unsigned long long 
  6603 ;; Registers used:
  6604 ;;		wreg, status,2, status,0
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6610 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6613 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;Total ram usage:       17 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    4
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_utoa
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text11
  6625  002E1E                     __ptext11:
  6626                           	opt callstack 0
  6627  002E1E                     ___lomod:
  6628                           	opt callstack 21
  6629  002E1E  500C               	movf	___lomod@divisor^0,w,c
  6630  002E20  100D               	iorwf	(___lomod@divisor+1)^0,w,c
  6631  002E22  100E               	iorwf	(___lomod@divisor+2)^0,w,c
  6632  002E24  100F               	iorwf	(___lomod@divisor+3)^0,w,c
  6633  002E26  1010               	iorwf	(___lomod@divisor+4)^0,w,c
  6634  002E28  1011               	iorwf	(___lomod@divisor+5)^0,w,c
  6635  002E2A  1012               	iorwf	(___lomod@divisor+6)^0,w,c
  6636  002E2C  1013               	iorwf	(___lomod@divisor+7)^0,w,c
  6637  002E2E  B4D8               	btfsc	status,2,c
  6638  002E30  EF1C  F017         	goto	u2641
  6639  002E34  EF1E  F017         	goto	u2640
  6640  002E38                     u2641:
  6641  002E38  EF66  F017         	goto	l1107
  6642  002E3C                     u2640:
  6643  002E3C  0E01               	movlw	1
  6644  002E3E  6E14               	movwf	___lomod@counter^0,c
  6645  002E40  EF2C  F017         	goto	l3263
  6646  002E44                     l3261:
  6647  002E44  90D8               	bcf	status,0,c
  6648  002E46  360C               	rlcf	___lomod@divisor^0,f,c
  6649  002E48  360D               	rlcf	(___lomod@divisor+1)^0,f,c
  6650  002E4A  360E               	rlcf	(___lomod@divisor+2)^0,f,c
  6651  002E4C  360F               	rlcf	(___lomod@divisor+3)^0,f,c
  6652  002E4E  3610               	rlcf	(___lomod@divisor+4)^0,f,c
  6653  002E50  3611               	rlcf	(___lomod@divisor+5)^0,f,c
  6654  002E52  3612               	rlcf	(___lomod@divisor+6)^0,f,c
  6655  002E54  3613               	rlcf	(___lomod@divisor+7)^0,f,c
  6656  002E56  2A14               	incf	___lomod@counter^0,f,c
  6657  002E58                     l3263:
  6658  002E58  AE13               	btfss	(___lomod@divisor+7)^0,7,c
  6659  002E5A  EF31  F017         	goto	u2651
  6660  002E5E  EF33  F017         	goto	u2650
  6661  002E62                     u2651:
  6662  002E62  EF22  F017         	goto	l3261
  6663  002E66                     u2650:
  6664  002E66                     l3265:
  6665  002E66  500C               	movf	___lomod@divisor^0,w,c
  6666  002E68  5C04               	subwf	___lomod@dividend^0,w,c
  6667  002E6A  500D               	movf	(___lomod@divisor+1)^0,w,c
  6668  002E6C  5805               	subwfb	(___lomod@dividend+1)^0,w,c
  6669  002E6E  500E               	movf	(___lomod@divisor+2)^0,w,c
  6670  002E70  5806               	subwfb	(___lomod@dividend+2)^0,w,c
  6671  002E72  500F               	movf	(___lomod@divisor+3)^0,w,c
  6672  002E74  5807               	subwfb	(___lomod@dividend+3)^0,w,c
  6673  002E76  5010               	movf	(___lomod@divisor+4)^0,w,c
  6674  002E78  5808               	subwfb	(___lomod@dividend+4)^0,w,c
  6675  002E7A  5011               	movf	(___lomod@divisor+5)^0,w,c
  6676  002E7C  5809               	subwfb	(___lomod@dividend+5)^0,w,c
  6677  002E7E  5012               	movf	(___lomod@divisor+6)^0,w,c
  6678  002E80  580A               	subwfb	(___lomod@dividend+6)^0,w,c
  6679  002E82  5013               	movf	(___lomod@divisor+7)^0,w,c
  6680  002E84  580B               	subwfb	(___lomod@dividend+7)^0,w,c
  6681  002E86  A0D8               	btfss	status,0,c
  6682  002E88  EF48  F017         	goto	u2661
  6683  002E8C  EF4A  F017         	goto	u2660
  6684  002E90                     u2661:
  6685  002E90  EF5A  F017         	goto	l3269
  6686  002E94                     u2660:
  6687  002E94  500C               	movf	___lomod@divisor^0,w,c
  6688  002E96  5E04               	subwf	___lomod@dividend^0,f,c
  6689  002E98  500D               	movf	(___lomod@divisor+1)^0,w,c
  6690  002E9A  5A05               	subwfb	(___lomod@dividend+1)^0,f,c
  6691  002E9C  500E               	movf	(___lomod@divisor+2)^0,w,c
  6692  002E9E  5A06               	subwfb	(___lomod@dividend+2)^0,f,c
  6693  002EA0  500F               	movf	(___lomod@divisor+3)^0,w,c
  6694  002EA2  5A07               	subwfb	(___lomod@dividend+3)^0,f,c
  6695  002EA4  5010               	movf	(___lomod@divisor+4)^0,w,c
  6696  002EA6  5A08               	subwfb	(___lomod@dividend+4)^0,f,c
  6697  002EA8  5011               	movf	(___lomod@divisor+5)^0,w,c
  6698  002EAA  5A09               	subwfb	(___lomod@dividend+5)^0,f,c
  6699  002EAC  5012               	movf	(___lomod@divisor+6)^0,w,c
  6700  002EAE  5A0A               	subwfb	(___lomod@dividend+6)^0,f,c
  6701  002EB0  5013               	movf	(___lomod@divisor+7)^0,w,c
  6702  002EB2  5A0B               	subwfb	(___lomod@dividend+7)^0,f,c
  6703  002EB4                     l3269:
  6704  002EB4  90D8               	bcf	status,0,c
  6705  002EB6  3213               	rrcf	(___lomod@divisor+7)^0,f,c
  6706  002EB8  3212               	rrcf	(___lomod@divisor+6)^0,f,c
  6707  002EBA  3211               	rrcf	(___lomod@divisor+5)^0,f,c
  6708  002EBC  3210               	rrcf	(___lomod@divisor+4)^0,f,c
  6709  002EBE  320F               	rrcf	(___lomod@divisor+3)^0,f,c
  6710  002EC0  320E               	rrcf	(___lomod@divisor+2)^0,f,c
  6711  002EC2  320D               	rrcf	(___lomod@divisor+1)^0,f,c
  6712  002EC4  320C               	rrcf	___lomod@divisor^0,f,c
  6713  002EC6  2E14               	decfsz	___lomod@counter^0,f,c
  6714  002EC8  EF33  F017         	goto	l3265
  6715  002ECC                     l1107:
  6716  002ECC  C004  F004         	movff	___lomod@dividend,?___lomod
  6717  002ED0  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  6718  002ED4  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  6719  002ED8  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  6720  002EDC  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  6721  002EE0  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  6722  002EE4  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  6723  002EE8  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  6724  002EEC  0012               	return		;funcret
  6725  002EEE                     __end_of___lomod:
  6726                           	opt callstack 0
  6727                           
  6728 ;; *************** function ___lodiv *****************
  6729 ;; Defined at:
  6730 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  dividend        8    3[COMRAM] unsigned long long 
  6733 ;;  divisor         8   11[COMRAM] unsigned long long 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  quotient        8   19[COMRAM] unsigned long long 
  6736 ;;  counter         1   27[COMRAM] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  8    3[COMRAM] unsigned long long 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6746 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6747 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;Total ram usage:       25 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    4
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_utoa
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text12
  6761  002C44                     __ptext12:
  6762                           	opt callstack 0
  6763  002C44                     ___lodiv:
  6764                           	opt callstack 21
  6765  002C44  EE20  F014         	lfsr	2,___lodiv@quotient
  6766  002C48  0E07               	movlw	7
  6767  002C4A                     u2601:
  6768  002C4A  6ADE               	clrf	postinc2,c
  6769  002C4C  06E8               	decf	wreg,f,c
  6770  002C4E  E2FD               	bc	u2601
  6771  002C50  500C               	movf	___lodiv@divisor^0,w,c
  6772  002C52  100D               	iorwf	(___lodiv@divisor+1)^0,w,c
  6773  002C54  100E               	iorwf	(___lodiv@divisor+2)^0,w,c
  6774  002C56  100F               	iorwf	(___lodiv@divisor+3)^0,w,c
  6775  002C58  1010               	iorwf	(___lodiv@divisor+4)^0,w,c
  6776  002C5A  1011               	iorwf	(___lodiv@divisor+5)^0,w,c
  6777  002C5C  1012               	iorwf	(___lodiv@divisor+6)^0,w,c
  6778  002C5E  1013               	iorwf	(___lodiv@divisor+7)^0,w,c
  6779  002C60  B4D8               	btfsc	status,2,c
  6780  002C62  EF35  F016         	goto	u2611
  6781  002C66  EF37  F016         	goto	u2610
  6782  002C6A                     u2611:
  6783  002C6A  EF89  F016         	goto	l1097
  6784  002C6E                     u2610:
  6785  002C6E  0E01               	movlw	1
  6786  002C70  6E1C               	movwf	___lodiv@counter^0,c
  6787  002C72  EF45  F016         	goto	l3243
  6788  002C76                     l3241:
  6789  002C76  90D8               	bcf	status,0,c
  6790  002C78  360C               	rlcf	___lodiv@divisor^0,f,c
  6791  002C7A  360D               	rlcf	(___lodiv@divisor+1)^0,f,c
  6792  002C7C  360E               	rlcf	(___lodiv@divisor+2)^0,f,c
  6793  002C7E  360F               	rlcf	(___lodiv@divisor+3)^0,f,c
  6794  002C80  3610               	rlcf	(___lodiv@divisor+4)^0,f,c
  6795  002C82  3611               	rlcf	(___lodiv@divisor+5)^0,f,c
  6796  002C84  3612               	rlcf	(___lodiv@divisor+6)^0,f,c
  6797  002C86  3613               	rlcf	(___lodiv@divisor+7)^0,f,c
  6798  002C88  2A1C               	incf	___lodiv@counter^0,f,c
  6799  002C8A                     l3243:
  6800  002C8A  AE13               	btfss	(___lodiv@divisor+7)^0,7,c
  6801  002C8C  EF4A  F016         	goto	u2621
  6802  002C90  EF4C  F016         	goto	u2620
  6803  002C94                     u2621:
  6804  002C94  EF3B  F016         	goto	l3241
  6805  002C98                     u2620:
  6806  002C98                     l3245:
  6807  002C98  90D8               	bcf	status,0,c
  6808  002C9A  3614               	rlcf	___lodiv@quotient^0,f,c
  6809  002C9C  3615               	rlcf	(___lodiv@quotient+1)^0,f,c
  6810  002C9E  3616               	rlcf	(___lodiv@quotient+2)^0,f,c
  6811  002CA0  3617               	rlcf	(___lodiv@quotient+3)^0,f,c
  6812  002CA2  3618               	rlcf	(___lodiv@quotient+4)^0,f,c
  6813  002CA4  3619               	rlcf	(___lodiv@quotient+5)^0,f,c
  6814  002CA6  361A               	rlcf	(___lodiv@quotient+6)^0,f,c
  6815  002CA8  361B               	rlcf	(___lodiv@quotient+7)^0,f,c
  6816  002CAA  500C               	movf	___lodiv@divisor^0,w,c
  6817  002CAC  5C04               	subwf	___lodiv@dividend^0,w,c
  6818  002CAE  500D               	movf	(___lodiv@divisor+1)^0,w,c
  6819  002CB0  5805               	subwfb	(___lodiv@dividend+1)^0,w,c
  6820  002CB2  500E               	movf	(___lodiv@divisor+2)^0,w,c
  6821  002CB4  5806               	subwfb	(___lodiv@dividend+2)^0,w,c
  6822  002CB6  500F               	movf	(___lodiv@divisor+3)^0,w,c
  6823  002CB8  5807               	subwfb	(___lodiv@dividend+3)^0,w,c
  6824  002CBA  5010               	movf	(___lodiv@divisor+4)^0,w,c
  6825  002CBC  5808               	subwfb	(___lodiv@dividend+4)^0,w,c
  6826  002CBE  5011               	movf	(___lodiv@divisor+5)^0,w,c
  6827  002CC0  5809               	subwfb	(___lodiv@dividend+5)^0,w,c
  6828  002CC2  5012               	movf	(___lodiv@divisor+6)^0,w,c
  6829  002CC4  580A               	subwfb	(___lodiv@dividend+6)^0,w,c
  6830  002CC6  5013               	movf	(___lodiv@divisor+7)^0,w,c
  6831  002CC8  580B               	subwfb	(___lodiv@dividend+7)^0,w,c
  6832  002CCA  A0D8               	btfss	status,0,c
  6833  002CCC  EF6A  F016         	goto	u2631
  6834  002CD0  EF6C  F016         	goto	u2630
  6835  002CD4                     u2631:
  6836  002CD4  EF7D  F016         	goto	l3253
  6837  002CD8                     u2630:
  6838  002CD8  500C               	movf	___lodiv@divisor^0,w,c
  6839  002CDA  5E04               	subwf	___lodiv@dividend^0,f,c
  6840  002CDC  500D               	movf	(___lodiv@divisor+1)^0,w,c
  6841  002CDE  5A05               	subwfb	(___lodiv@dividend+1)^0,f,c
  6842  002CE0  500E               	movf	(___lodiv@divisor+2)^0,w,c
  6843  002CE2  5A06               	subwfb	(___lodiv@dividend+2)^0,f,c
  6844  002CE4  500F               	movf	(___lodiv@divisor+3)^0,w,c
  6845  002CE6  5A07               	subwfb	(___lodiv@dividend+3)^0,f,c
  6846  002CE8  5010               	movf	(___lodiv@divisor+4)^0,w,c
  6847  002CEA  5A08               	subwfb	(___lodiv@dividend+4)^0,f,c
  6848  002CEC  5011               	movf	(___lodiv@divisor+5)^0,w,c
  6849  002CEE  5A09               	subwfb	(___lodiv@dividend+5)^0,f,c
  6850  002CF0  5012               	movf	(___lodiv@divisor+6)^0,w,c
  6851  002CF2  5A0A               	subwfb	(___lodiv@dividend+6)^0,f,c
  6852  002CF4  5013               	movf	(___lodiv@divisor+7)^0,w,c
  6853  002CF6  5A0B               	subwfb	(___lodiv@dividend+7)^0,f,c
  6854  002CF8  8014               	bsf	___lodiv@quotient^0,0,c
  6855  002CFA                     l3253:
  6856  002CFA  90D8               	bcf	status,0,c
  6857  002CFC  3213               	rrcf	(___lodiv@divisor+7)^0,f,c
  6858  002CFE  3212               	rrcf	(___lodiv@divisor+6)^0,f,c
  6859  002D00  3211               	rrcf	(___lodiv@divisor+5)^0,f,c
  6860  002D02  3210               	rrcf	(___lodiv@divisor+4)^0,f,c
  6861  002D04  320F               	rrcf	(___lodiv@divisor+3)^0,f,c
  6862  002D06  320E               	rrcf	(___lodiv@divisor+2)^0,f,c
  6863  002D08  320D               	rrcf	(___lodiv@divisor+1)^0,f,c
  6864  002D0A  320C               	rrcf	___lodiv@divisor^0,f,c
  6865  002D0C  2E1C               	decfsz	___lodiv@counter^0,f,c
  6866  002D0E  EF4C  F016         	goto	l3245
  6867  002D12                     l1097:
  6868  002D12  C014  F004         	movff	___lodiv@quotient,?___lodiv
  6869  002D16  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  6870  002D1A  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  6871  002D1E  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  6872  002D22  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  6873  002D26  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  6874  002D2A  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  6875  002D2E  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  6876  002D32  0012               	return		;funcret
  6877  002D34                     __end_of___lodiv:
  6878                           	opt callstack 0
  6879                           
  6880 ;; *************** function _strncmp *****************
  6881 ;; Defined at:
  6882 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  6885 ;;		 -> STR_3(17), 
  6886 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  6887 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  6888 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  6889 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  6890 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  6891 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  6892 ;;		 -> STR_6(4), 
  6893 ;;  n               2    7[COMRAM] unsigned int 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  r               2   12[COMRAM] PTR const unsigned char 
  6896 ;;		 -> STR_100(3), STR_96(3), STR_91(3), STR_87(3), 
  6897 ;;		 -> STR_82(4), STR_78(4), STR_73(3), STR_68(3), 
  6898 ;;		 -> STR_63(4), STR_58(3), STR_53(3), STR_48(4), 
  6899 ;;		 -> STR_43(3), STR_38(3), STR_33(4), STR_28(3), 
  6900 ;;		 -> STR_24(3), STR_19(3), STR_15(3), STR_10(4), 
  6901 ;;		 -> STR_6(4), 
  6902 ;;  l               2   10[COMRAM] PTR const unsigned char 
  6903 ;;		 -> STR_3(17), 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  2    3[COMRAM] int 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6913 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6916 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;Total ram usage:       11 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    4
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_vfpfcnvrt
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text13
  6928  002D34                     __ptext13:
  6929                           	opt callstack 0
  6930  002D34                     _strncmp:
  6931                           	opt callstack 22
  6932  002D34  C004  F00B         	movff	strncmp@_l,strncmp@l
  6933  002D38  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  6934  002D3C  C006  F00D         	movff	strncmp@_r,strncmp@r
  6935  002D40  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  6936  002D44  0608               	decf	strncmp@n^0,f,c
  6937  002D46  A0D8               	btfss	status,0,c
  6938  002D48  0609               	decf	(strncmp@n+1)^0,f,c
  6939  002D4A  2808               	incf	strncmp@n^0,w,c
  6940  002D4C  E106               	bnz	u3361
  6941  002D4E  2809               	incf	(strncmp@n+1)^0,w,c
  6942  002D50  A4D8               	btfss	status,2,c
  6943  002D52  EFAD  F016         	goto	u3361
  6944  002D56  EFAF  F016         	goto	u3360
  6945  002D5A                     u3361:
  6946  002D5A  EFBC  F016         	goto	l3611
  6947  002D5E                     u3360:
  6948  002D5E  0E00               	movlw	0
  6949  002D60  6E05               	movwf	(?_strncmp+1)^0,c
  6950  002D62  0E00               	movlw	0
  6951  002D64  6E04               	movwf	?_strncmp^0,c
  6952  002D66  EF0E  F017         	goto	l1434
  6953  002D6A                     l3609:
  6954  002D6A  4A0B               	infsnz	strncmp@l^0,f,c
  6955  002D6C  2A0C               	incf	(strncmp@l+1)^0,f,c
  6956  002D6E  4A0D               	infsnz	strncmp@r^0,f,c
  6957  002D70  2A0E               	incf	(strncmp@r+1)^0,f,c
  6958  002D72  0608               	decf	strncmp@n^0,f,c
  6959  002D74  A0D8               	btfss	status,0,c
  6960  002D76  0609               	decf	(strncmp@n+1)^0,f,c
  6961  002D78                     l3611:
  6962  002D78  C00B  FFF6         	movff	strncmp@l,tblptrl
  6963  002D7C  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  6964  002D80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6965  002D80  6AF8               	clrf	tblptru,c
  6966  002D82                     	endif
  6967  002D82                     	if	0	;tblptru may be non-zero
  6968  002D82                     	endif
  6969  002D82  0008               	tblrd		*
  6970  002D84  50F5               	movf	tablat,w,c
  6971  002D86  0900               	iorlw	0
  6972  002D88  B4D8               	btfsc	status,2,c
  6973  002D8A  EFC9  F016         	goto	u3371
  6974  002D8E  EFCB  F016         	goto	u3370
  6975  002D92                     u3371:
  6976  002D92  EFFA  F016         	goto	l3619
  6977  002D96                     u3370:
  6978  002D96  C00D  FFF6         	movff	strncmp@r,tblptrl
  6979  002D9A  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  6980  002D9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6981  002D9E  6AF8               	clrf	tblptru,c
  6982  002DA0                     	endif
  6983  002DA0                     	if	0	;tblptru may be non-zero
  6984  002DA0                     	endif
  6985  002DA0  0008               	tblrd		*
  6986  002DA2  50F5               	movf	tablat,w,c
  6987  002DA4  0900               	iorlw	0
  6988  002DA6  B4D8               	btfsc	status,2,c
  6989  002DA8  EFD8  F016         	goto	u3381
  6990  002DAC  EFDA  F016         	goto	u3380
  6991  002DB0                     u3381:
  6992  002DB0  EFFA  F016         	goto	l3619
  6993  002DB4                     u3380:
  6994  002DB4  5008               	movf	strncmp@n^0,w,c
  6995  002DB6  1009               	iorwf	(strncmp@n+1)^0,w,c
  6996  002DB8  B4D8               	btfsc	status,2,c
  6997  002DBA  EFE1  F016         	goto	u3391
  6998  002DBE  EFE3  F016         	goto	u3390
  6999  002DC2                     u3391:
  7000  002DC2  EFFA  F016         	goto	l3619
  7001  002DC6                     u3390:
  7002  002DC6  C00B  FFF6         	movff	strncmp@l,tblptrl
  7003  002DCA  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7004  002DCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7005  002DCE  6AF8               	clrf	tblptru,c
  7006  002DD0                     	endif
  7007  002DD0                     	if	0	;tblptru may be non-zero
  7008  002DD0                     	endif
  7009  002DD0  0008               	tblrd		*
  7010  002DD2  CFF5 F00A          	movff	tablat,??_strncmp
  7011  002DD6  C00D  FFF6         	movff	strncmp@r,tblptrl
  7012  002DDA  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7013  002DDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7014  002DDE  6AF8               	clrf	tblptru,c
  7015  002DE0                     	endif
  7016  002DE0                     	if	0	;tblptru may be non-zero
  7017  002DE0                     	endif
  7018  002DE0  0008               	tblrd		*
  7019  002DE2  50F5               	movf	tablat,w,c
  7020  002DE4  180A               	xorwf	??_strncmp^0,w,c
  7021  002DE6  B4D8               	btfsc	status,2,c
  7022  002DE8  EFF8  F016         	goto	u3401
  7023  002DEC  EFFA  F016         	goto	u3400
  7024  002DF0                     u3401:
  7025  002DF0  EFB5  F016         	goto	l3609
  7026  002DF4                     u3400:
  7027  002DF4                     l3619:
  7028  002DF4  C00B  FFF6         	movff	strncmp@l,tblptrl
  7029  002DF8  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  7030  002DFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7031  002DFC  6AF8               	clrf	tblptru,c
  7032  002DFE                     	endif
  7033  002DFE                     	if	0	;tblptru may be non-zero
  7034  002DFE                     	endif
  7035  002DFE  0008               	tblrd		*
  7036  002E00  CFF5 F00A          	movff	tablat,??_strncmp
  7037  002E04  C00D  FFF6         	movff	strncmp@r,tblptrl
  7038  002E08  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  7039  002E0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7040  002E0C  6AF8               	clrf	tblptru,c
  7041  002E0E                     	endif
  7042  002E0E                     	if	0	;tblptru may be non-zero
  7043  002E0E                     	endif
  7044  002E0E  0008               	tblrd		*
  7045  002E10  50F5               	movf	tablat,w,c
  7046  002E12  5C0A               	subwf	??_strncmp^0,w,c
  7047  002E14  6E04               	movwf	?_strncmp^0,c
  7048  002E16  6A05               	clrf	(?_strncmp+1)^0,c
  7049  002E18  A0D8               	btfss	status,0,c
  7050  002E1A  0605               	decf	(?_strncmp+1)^0,f,c
  7051  002E1C                     l1434:
  7052  002E1C  0012               	return		;funcret
  7053  002E1E                     __end_of_strncmp:
  7054                           	opt callstack 0
  7055                           
  7056 ;; *************** function _stoa *****************
  7057 ;; Defined at:
  7058 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  7061 ;;		 -> vsnprintf@f(6), 
  7062 ;;  s               2   14[COMRAM] PTR unsigned char 
  7063 ;;		 -> ?_snprintf(2), 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  nuls            7   17[COMRAM] unsigned char [7]
  7066 ;;  l               2   32[COMRAM] int 
  7067 ;;  p               2   30[COMRAM] int 
  7068 ;;  cp              2   28[COMRAM] PTR unsigned char 
  7069 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7070 ;;  w               2   26[COMRAM] int 
  7071 ;;  i               2   24[COMRAM] int 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  2   12[COMRAM] int 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7085 ;;Total ram usage:       22 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    6
  7088 ;; This function calls:
  7089 ;;		_fputc
  7090 ;;		_strlen
  7091 ;; This function is called by:
  7092 ;;		_vfpfcnvrt
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text14
  7097  002334                     __ptext14:
  7098                           	opt callstack 0
  7099  002334                     _stoa:
  7100                           	opt callstack 20
  7101  002334                     
  7102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7103  002334  EE20  F0CB         	lfsr	2,stoa@F1152
  7104  002338  EE10  F012         	lfsr	1,stoa@nuls
  7105  00233C  0E06               	movlw	6
  7106  00233E                     u2961:
  7107  00233E  CFDB FFE3          	movff	plusw2,plusw1
  7108  002342  06E8               	decf	wreg,f,c
  7109  002344  E2FC               	bc	u2961
  7110  002346                     
  7111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7112  002346  C00F  F01D         	movff	stoa@s,stoa@cp
  7113  00234A  C010  F01E         	movff	stoa@s+1,stoa@cp+1
  7114  00234E                     
  7115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7116  00234E  501D               	movf	stoa@cp^0,w,c
  7117  002350  101E               	iorwf	(stoa@cp+1)^0,w,c
  7118  002352  A4D8               	btfss	status,2,c
  7119  002354  EFAE  F011         	goto	u2971
  7120  002358  EFB0  F011         	goto	u2970
  7121  00235C                     u2971:
  7122  00235C  EFB4  F011         	goto	l3425
  7123  002360                     u2970:
  7124  002360                     
  7125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7126  002360  0E12               	movlw	low stoa@nuls
  7127  002362  6E1D               	movwf	stoa@cp^0,c
  7128  002364  0E00               	movlw	high stoa@nuls
  7129  002366  6E1E               	movwf	(stoa@cp+1)^0,c
  7130  002368                     l3425:
  7131                           
  7132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7133  002368  C01D  F004         	movff	stoa@cp,strlen@s
  7134  00236C  C01E  F005         	movff	stoa@cp+1,strlen@s+1
  7135  002370  ECF0  F01A         	call	_strlen	;wreg free
  7136  002374  C004  F021         	movff	?_strlen,stoa@l
  7137  002378  C005  F022         	movff	?_strlen+1,stoa@l+1
  7138  00237C                     
  7139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7140  00237C  C0A3  F01F         	movff	_prec,stoa@p
  7141  002380  C0A4  F020         	movff	_prec+1,stoa@p+1
  7142  002384                     
  7143                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7144  002384  BE20               	btfsc	(stoa@p+1)^0,7,c
  7145  002386  EFC7  F011         	goto	u2981
  7146  00238A  EFC9  F011         	goto	u2980
  7147  00238E                     u2981:
  7148  00238E  EFDE  F011         	goto	l515
  7149  002392                     u2980:
  7150  002392  5021               	movf	stoa@l^0,w,c
  7151  002394  5C1F               	subwf	stoa@p^0,w,c
  7152  002396  5020               	movf	(stoa@p+1)^0,w,c
  7153  002398  0A80               	xorlw	128
  7154  00239A  6E11               	movwf	??_stoa^0,c
  7155  00239C  5022               	movf	(stoa@l+1)^0,w,c
  7156  00239E  0A80               	xorlw	128
  7157  0023A0  5811               	subwfb	??_stoa^0,w,c
  7158  0023A2  A0D8               	btfss	status,0,c
  7159  0023A4  EFD6  F011         	goto	u2991
  7160  0023A8  EFD8  F011         	goto	u2990
  7161  0023AC                     u2991:
  7162  0023AC  EFDA  F011         	goto	l513
  7163  0023B0                     u2990:
  7164  0023B0  EFDE  F011         	goto	l515
  7165  0023B4                     l513:
  7166  0023B4  C01F  F021         	movff	stoa@p,stoa@l
  7167  0023B8  C020  F022         	movff	stoa@p+1,stoa@l+1
  7168  0023BC                     l515:
  7169                           
  7170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7171  0023BC  C021  F01F         	movff	stoa@l,stoa@p
  7172  0023C0  C022  F020         	movff	stoa@l+1,stoa@p+1
  7173                           
  7174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7175  0023C4  C0A1  F01B         	movff	_width,stoa@w
  7176  0023C8  C0A2  F01C         	movff	_width+1,stoa@w+1
  7177                           
  7178                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7179  0023CC  B058               	btfsc	_flags^0,0,c
  7180  0023CE  EFEB  F011         	goto	u3001
  7181  0023D2  EFED  F011         	goto	u3000
  7182  0023D6                     u3001:
  7183  0023D6  EF0A  F012         	goto	l3441
  7184  0023DA                     u3000:
  7185  0023DA  EFFB  F011         	goto	l3439
  7186  0023DE                     l3435:
  7187                           
  7188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7189  0023DE  0E00               	movlw	0
  7190  0023E0  6E05               	movwf	(fputc@c+1)^0,c
  7191  0023E2  0E20               	movlw	32
  7192  0023E4  6E04               	movwf	fputc@c^0,c
  7193  0023E6  C00D  F006         	movff	stoa@fp,fputc@fp
  7194  0023EA  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7195  0023EE  EC77  F017         	call	_fputc	;wreg free
  7196  0023F2                     
  7197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7198  0023F2  4A21               	infsnz	stoa@l^0,f,c
  7199  0023F4  2A22               	incf	(stoa@l+1)^0,f,c
  7200  0023F6                     l3439:
  7201                           
  7202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7203  0023F6  501B               	movf	stoa@w^0,w,c
  7204  0023F8  5C21               	subwf	stoa@l^0,w,c
  7205  0023FA  5022               	movf	(stoa@l+1)^0,w,c
  7206  0023FC  0A80               	xorlw	128
  7207  0023FE  6E11               	movwf	??_stoa^0,c
  7208  002400  501C               	movf	(stoa@w+1)^0,w,c
  7209  002402  0A80               	xorlw	128
  7210  002404  5811               	subwfb	??_stoa^0,w,c
  7211  002406  A0D8               	btfss	status,0,c
  7212  002408  EF08  F012         	goto	u3011
  7213  00240C  EF0A  F012         	goto	u3010
  7214  002410                     u3011:
  7215  002410  EFEF  F011         	goto	l3435
  7216  002414                     u3010:
  7217  002414                     l3441:
  7218                           
  7219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7220  002414  0E00               	movlw	0
  7221  002416  6E1A               	movwf	(stoa@i+1)^0,c
  7222  002418  0E00               	movlw	0
  7223  00241A  6E19               	movwf	stoa@i^0,c
  7224                           
  7225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7226  00241C  EF23  F012         	goto	l3449
  7227  002420                     l3443:
  7228                           
  7229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7230  002420  C01D  FFD9         	movff	stoa@cp,fsr2l
  7231  002424  C01E  FFDA         	movff	stoa@cp+1,fsr2h
  7232  002428  50DF               	movf	indf2,w,c
  7233  00242A  6E11               	movwf	??_stoa^0,c
  7234  00242C  5011               	movf	??_stoa^0,w,c
  7235  00242E  6E04               	movwf	fputc@c^0,c
  7236  002430  6A05               	clrf	(fputc@c+1)^0,c
  7237  002432  C00D  F006         	movff	stoa@fp,fputc@fp
  7238  002436  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7239  00243A  EC77  F017         	call	_fputc	;wreg free
  7240  00243E                     
  7241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7242  00243E  4A1D               	infsnz	stoa@cp^0,f,c
  7243  002440  2A1E               	incf	(stoa@cp+1)^0,f,c
  7244  002442                     
  7245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7246  002442  4A19               	infsnz	stoa@i^0,f,c
  7247  002444  2A1A               	incf	(stoa@i+1)^0,f,c
  7248  002446                     l3449:
  7249                           
  7250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7251  002446  501F               	movf	stoa@p^0,w,c
  7252  002448  5C19               	subwf	stoa@i^0,w,c
  7253  00244A  501A               	movf	(stoa@i+1)^0,w,c
  7254  00244C  0A80               	xorlw	128
  7255  00244E  6E11               	movwf	??_stoa^0,c
  7256  002450  5020               	movf	(stoa@p+1)^0,w,c
  7257  002452  0A80               	xorlw	128
  7258  002454  5811               	subwfb	??_stoa^0,w,c
  7259  002456  A0D8               	btfss	status,0,c
  7260  002458  EF30  F012         	goto	u3021
  7261  00245C  EF32  F012         	goto	u3020
  7262  002460                     u3021:
  7263  002460  EF10  F012         	goto	l3443
  7264  002464                     u3020:
  7265  002464                     
  7266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7267  002464  A058               	btfss	_flags^0,0,c
  7268  002466  EF37  F012         	goto	u3031
  7269  00246A  EF39  F012         	goto	u3030
  7270  00246E                     u3031:
  7271  00246E  EF56  F012         	goto	l525
  7272  002472                     u3030:
  7273  002472  EF47  F012         	goto	l3457
  7274  002476                     l3453:
  7275                           
  7276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7277  002476  0E00               	movlw	0
  7278  002478  6E05               	movwf	(fputc@c+1)^0,c
  7279  00247A  0E20               	movlw	32
  7280  00247C  6E04               	movwf	fputc@c^0,c
  7281  00247E  C00D  F006         	movff	stoa@fp,fputc@fp
  7282  002482  C00E  F007         	movff	stoa@fp+1,fputc@fp+1
  7283  002486  EC77  F017         	call	_fputc	;wreg free
  7284  00248A                     
  7285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7286  00248A  4A21               	infsnz	stoa@l^0,f,c
  7287  00248C  2A22               	incf	(stoa@l+1)^0,f,c
  7288  00248E                     l3457:
  7289                           
  7290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7291  00248E  501B               	movf	stoa@w^0,w,c
  7292  002490  5C21               	subwf	stoa@l^0,w,c
  7293  002492  5022               	movf	(stoa@l+1)^0,w,c
  7294  002494  0A80               	xorlw	128
  7295  002496  6E11               	movwf	??_stoa^0,c
  7296  002498  501C               	movf	(stoa@w+1)^0,w,c
  7297  00249A  0A80               	xorlw	128
  7298  00249C  5811               	subwfb	??_stoa^0,w,c
  7299  00249E  A0D8               	btfss	status,0,c
  7300  0024A0  EF54  F012         	goto	u3041
  7301  0024A4  EF56  F012         	goto	u3040
  7302  0024A8                     u3041:
  7303  0024A8  EF3B  F012         	goto	l3453
  7304  0024AC                     u3040:
  7305  0024AC                     l525:
  7306                           
  7307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7308  0024AC  C021  F00D         	movff	stoa@l,?_stoa
  7309  0024B0  C022  F00E         	movff	stoa@l+1,?_stoa+1
  7310  0024B4  0012               	return		;funcret
  7311  0024B6                     __end_of_stoa:
  7312                           	opt callstack 0
  7313                           
  7314 ;; *************** function _otoa *****************
  7315 ;; Defined at:
  7316 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7319 ;;		 -> vsnprintf@f(6), 
  7320 ;;  d               8   32[COMRAM] unsigned long long 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  n               8   54[COMRAM] unsigned long long 
  7323 ;;  i               2   62[COMRAM] int 
  7324 ;;  w               2   52[COMRAM] int 
  7325 ;;  t               2   50[COMRAM] int 
  7326 ;;  p               2   48[COMRAM] int 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  2   30[COMRAM] int 
  7329 ;; Registers used:
  7330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7336 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7337 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7338 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7339 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7340 ;;Total ram usage:       34 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    8
  7343 ;; This function calls:
  7344 ;;		_pad
  7345 ;; This function is called by:
  7346 ;;		_vfpfcnvrt
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text15
  7351  001E28                     __ptext15:
  7352                           	opt callstack 0
  7353  001E28                     _otoa:
  7354                           	opt callstack 18
  7355  001E28                     
  7356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7357  001E28  0100               	movlb	0	; () banked
  7358  001E2A  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  7359  001E2C  EF1A  F00F         	goto	u2861
  7360  001E30  EF1C  F00F         	goto	u2860
  7361  001E34                     u2861:
  7362  001E34  EF1D  F00F         	goto	l3373
  7363  001E38                     u2860:
  7364  001E38                     
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7367  001E38  9258               	bcf	_flags^0,1,c
  7368  001E3A                     l3373:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7372  001E3A  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  7373  001E3C  EF2A  F00F         	goto	u2870
  7374  001E40  51A4               	movf	(_prec+1)& (0+255),w,b
  7375  001E42  E106               	bnz	u2871
  7376  001E44  05A3               	decf	_prec& (0+255),w,b
  7377  001E46  B0D8               	btfsc	status,0,c
  7378  001E48  EF28  F00F         	goto	u2871
  7379  001E4C  EF2A  F00F         	goto	u2870
  7380  001E50                     u2871:
  7381  001E50  EF30  F00F         	goto	l495
  7382  001E54                     u2870:
  7383  001E54                     
  7384                           ; BSR set to: 0
  7385  001E54  0E00               	movlw	0
  7386  001E56  6E32               	movwf	(otoa@p+1)^0,c
  7387  001E58  0E01               	movlw	1
  7388  001E5A  6E31               	movwf	otoa@p^0,c
  7389  001E5C  EF34  F00F         	goto	l497
  7390  001E60                     l495:
  7391                           
  7392                           ; BSR set to: 0
  7393  001E60  C0A3  F031         	movff	_prec,otoa@p
  7394  001E64  C0A4  F032         	movff	_prec+1,otoa@p+1
  7395  001E68                     l497:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7399  001E68  C0A1  F035         	movff	_width,otoa@w
  7400  001E6C  C0A2  F036         	movff	_width+1,otoa@w+1
  7401                           
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7403  001E70  C021  F037         	movff	otoa@d,otoa@n
  7404  001E74  C022  F038         	movff	otoa@d+1,otoa@n+1
  7405  001E78  C023  F039         	movff	otoa@d+2,otoa@n+2
  7406  001E7C  C024  F03A         	movff	otoa@d+3,otoa@n+3
  7407  001E80  C025  F03B         	movff	otoa@d+4,otoa@n+4
  7408  001E84  C026  F03C         	movff	otoa@d+5,otoa@n+5
  7409  001E88  C027  F03D         	movff	otoa@d+6,otoa@n+6
  7410  001E8C  C028  F03E         	movff	otoa@d+7,otoa@n+7
  7411  001E90                     
  7412                           ; BSR set to: 0
  7413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7414  001E90  0E00               	movlw	0
  7415  001E92  6E40               	movwf	(otoa@i+1)^0,c
  7416  001E94  0E1F               	movlw	31
  7417  001E96  6E3F               	movwf	otoa@i^0,c
  7418  001E98                     
  7419                           ; BSR set to: 0
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7421  001E98  0E00               	movlw	0
  7422  001E9A  6FCA               	movwf	(_dbuf+31)& (0+255),b
  7423  001E9C                     
  7424                           ; BSR set to: 0
  7425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7426  001E9C  0E00               	movlw	0
  7427  001E9E  6E34               	movwf	(otoa@t+1)^0,c
  7428  001EA0  0E00               	movlw	0
  7429  001EA2  6E33               	movwf	otoa@t^0,c
  7430                           
  7431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7432  001EA4  EF99  F00F         	goto	l3395
  7433  001EA8                     l3383:
  7434                           
  7435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7436  001EA8  063F               	decf	otoa@i^0,f,c
  7437  001EAA  A0D8               	btfss	status,0,c
  7438  001EAC  0640               	decf	(otoa@i+1)^0,f,c
  7439  001EAE                     
  7440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7441  001EAE  0E07               	movlw	7
  7442  001EB0  1437               	andwf	otoa@n^0,w,c
  7443  001EB2  6E33               	movwf	otoa@t^0,c
  7444  001EB4  6A34               	clrf	(otoa@t+1)^0,c
  7445  001EB6                     
  7446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7447  001EB6  0EAB               	movlw	low _dbuf
  7448  001EB8  243F               	addwf	otoa@i^0,w,c
  7449  001EBA  6ED9               	movwf	fsr2l,c
  7450  001EBC  0E00               	movlw	high _dbuf
  7451  001EBE  2040               	addwfc	(otoa@i+1)^0,w,c
  7452  001EC0  6EDA               	movwf	fsr2h,c
  7453  001EC2  5033               	movf	otoa@t^0,w,c
  7454  001EC4  0F30               	addlw	48
  7455  001EC6  6EDF               	movwf	indf2,c
  7456  001EC8                     
  7457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7458  001EC8  0631               	decf	otoa@p^0,f,c
  7459  001ECA  A0D8               	btfss	status,0,c
  7460  001ECC  0632               	decf	(otoa@p+1)^0,f,c
  7461  001ECE                     
  7462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7463  001ECE  0635               	decf	otoa@w^0,f,c
  7464  001ED0  A0D8               	btfss	status,0,c
  7465  001ED2  0636               	decf	(otoa@w+1)^0,f,c
  7466  001ED4                     
  7467                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7468  001ED4  C037  F029         	movff	otoa@n,??_otoa
  7469  001ED8  C038  F02A         	movff	otoa@n+1,??_otoa+1
  7470  001EDC  C039  F02B         	movff	otoa@n+2,??_otoa+2
  7471  001EE0  C03A  F02C         	movff	otoa@n+3,??_otoa+3
  7472  001EE4  C03B  F02D         	movff	otoa@n+4,??_otoa+4
  7473  001EE8  C03C  F02E         	movff	otoa@n+5,??_otoa+5
  7474  001EEC  C03D  F02F         	movff	otoa@n+6,??_otoa+6
  7475  001EF0  C03E  F030         	movff	otoa@n+7,??_otoa+7
  7476  001EF4  0E04               	movlw	4
  7477  001EF6  EF86  F00F         	goto	u2880
  7478  001EFA                     u2885:
  7479  001EFA  90D8               	bcf	status,0,c
  7480  001EFC  3230               	rrcf	(??_otoa+7)^0,f,c
  7481  001EFE  322F               	rrcf	(??_otoa+6)^0,f,c
  7482  001F00  322E               	rrcf	(??_otoa+5)^0,f,c
  7483  001F02  322D               	rrcf	(??_otoa+4)^0,f,c
  7484  001F04  322C               	rrcf	(??_otoa+3)^0,f,c
  7485  001F06  322B               	rrcf	(??_otoa+2)^0,f,c
  7486  001F08  322A               	rrcf	(??_otoa+1)^0,f,c
  7487  001F0A  3229               	rrcf	??_otoa^0,f,c
  7488  001F0C                     u2880:
  7489  001F0C  2EE8               	decfsz	wreg,f,c
  7490  001F0E  EF7D  F00F         	goto	u2885
  7491  001F12  C029  F037         	movff	??_otoa,otoa@n
  7492  001F16  C02A  F038         	movff	??_otoa+1,otoa@n+1
  7493  001F1A  C02B  F039         	movff	??_otoa+2,otoa@n+2
  7494  001F1E  C02C  F03A         	movff	??_otoa+3,otoa@n+3
  7495  001F22  C02D  F03B         	movff	??_otoa+4,otoa@n+4
  7496  001F26  C02E  F03C         	movff	??_otoa+5,otoa@n+5
  7497  001F2A  C02F  F03D         	movff	??_otoa+6,otoa@n+6
  7498  001F2E  C030  F03E         	movff	??_otoa+7,otoa@n+7
  7499  001F32                     l3395:
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7502  001F32  BE40               	btfsc	(otoa@i+1)^0,7,c
  7503  001F34  EFA4  F00F         	goto	u2891
  7504  001F38  5040               	movf	(otoa@i+1)^0,w,c
  7505  001F3A  E108               	bnz	u2890
  7506  001F3C  043F               	decf	otoa@i^0,w,c
  7507  001F3E  A0D8               	btfss	status,0,c
  7508  001F40  EFA4  F00F         	goto	u2891
  7509  001F44  EFA6  F00F         	goto	u2890
  7510  001F48                     u2891:
  7511  001F48  EFD6  F00F         	goto	l504
  7512  001F4C                     u2890:
  7513  001F4C  5037               	movf	otoa@n^0,w,c
  7514  001F4E  1038               	iorwf	(otoa@n+1)^0,w,c
  7515  001F50  1039               	iorwf	(otoa@n+2)^0,w,c
  7516  001F52  103A               	iorwf	(otoa@n+3)^0,w,c
  7517  001F54  103B               	iorwf	(otoa@n+4)^0,w,c
  7518  001F56  103C               	iorwf	(otoa@n+5)^0,w,c
  7519  001F58  103D               	iorwf	(otoa@n+6)^0,w,c
  7520  001F5A  103E               	iorwf	(otoa@n+7)^0,w,c
  7521  001F5C  A4D8               	btfss	status,2,c
  7522  001F5E  EFB3  F00F         	goto	u2901
  7523  001F62  EFB5  F00F         	goto	u2900
  7524  001F66                     u2901:
  7525  001F66  EF54  F00F         	goto	l3383
  7526  001F6A                     u2900:
  7527  001F6A  BE32               	btfsc	(otoa@p+1)^0,7,c
  7528  001F6C  EFC2  F00F         	goto	u2910
  7529  001F70  5032               	movf	(otoa@p+1)^0,w,c
  7530  001F72  E106               	bnz	u2911
  7531  001F74  0431               	decf	otoa@p^0,w,c
  7532  001F76  B0D8               	btfsc	status,0,c
  7533  001F78  EFC0  F00F         	goto	u2911
  7534  001F7C  EFC2  F00F         	goto	u2910
  7535  001F80                     u2911:
  7536  001F80  EF54  F00F         	goto	l3383
  7537  001F84                     u2910:
  7538  001F84  BE36               	btfsc	(otoa@w+1)^0,7,c
  7539  001F86  EFCD  F00F         	goto	u2921
  7540  001F8A  5036               	movf	(otoa@w+1)^0,w,c
  7541  001F8C  E108               	bnz	u2920
  7542  001F8E  0435               	decf	otoa@w^0,w,c
  7543  001F90  A0D8               	btfss	status,0,c
  7544  001F92  EFCD  F00F         	goto	u2921
  7545  001F96  EFCF  F00F         	goto	u2920
  7546  001F9A                     u2921:
  7547  001F9A  EFD6  F00F         	goto	l504
  7548  001F9E                     u2920:
  7549  001F9E  B258               	btfsc	_flags^0,1,c
  7550  001FA0  EFD4  F00F         	goto	u2931
  7551  001FA4  EFD6  F00F         	goto	u2930
  7552  001FA8                     u2931:
  7553  001FA8  EF54  F00F         	goto	l3383
  7554  001FAC                     u2930:
  7555  001FAC                     l504:
  7556                           
  7557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7558  001FAC  A858               	btfss	_flags^0,4,c
  7559  001FAE  EFDB  F00F         	goto	u2941
  7560  001FB2  EFDD  F00F         	goto	u2940
  7561  001FB6                     u2941:
  7562  001FB6  EFF4  F00F         	goto	l3413
  7563  001FBA                     u2940:
  7564  001FBA  5033               	movf	otoa@t^0,w,c
  7565  001FBC  1034               	iorwf	(otoa@t+1)^0,w,c
  7566  001FBE  B4D8               	btfsc	status,2,c
  7567  001FC0  EFE4  F00F         	goto	u2951
  7568  001FC4  EFE6  F00F         	goto	u2950
  7569  001FC8                     u2951:
  7570  001FC8  EFF4  F00F         	goto	l3413
  7571  001FCC                     u2950:
  7572  001FCC                     
  7573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7574  001FCC  063F               	decf	otoa@i^0,f,c
  7575  001FCE  A0D8               	btfss	status,0,c
  7576  001FD0  0640               	decf	(otoa@i+1)^0,f,c
  7577  001FD2                     
  7578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7579  001FD2  0EAB               	movlw	low _dbuf
  7580  001FD4  243F               	addwf	otoa@i^0,w,c
  7581  001FD6  6ED9               	movwf	fsr2l,c
  7582  001FD8  0E00               	movlw	high _dbuf
  7583  001FDA  2040               	addwfc	(otoa@i+1)^0,w,c
  7584  001FDC  6EDA               	movwf	fsr2h,c
  7585  001FDE  0E30               	movlw	48
  7586  001FE0  6EDF               	movwf	indf2,c
  7587  001FE2                     
  7588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7589  001FE2  0635               	decf	otoa@w^0,f,c
  7590  001FE4  A0D8               	btfss	status,0,c
  7591  001FE6  0636               	decf	(otoa@w+1)^0,f,c
  7592  001FE8                     l3413:
  7593                           
  7594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7595  001FE8  C01F  F014         	movff	otoa@fp,pad@fp
  7596  001FEC  C020  F015         	movff	otoa@fp+1,pad@fp+1
  7597  001FF0  0EAB               	movlw	low _dbuf
  7598  001FF2  243F               	addwf	otoa@i^0,w,c
  7599  001FF4  6E16               	movwf	pad@buf^0,c
  7600  001FF6  0E00               	movlw	high _dbuf
  7601  001FF8  2040               	addwfc	(otoa@i+1)^0,w,c
  7602  001FFA  6E17               	movwf	(pad@buf+1)^0,c
  7603  001FFC  C035  F018         	movff	otoa@w,pad@p
  7604  002000  C036  F019         	movff	otoa@w+1,pad@p+1
  7605  002004  ECDC  F017         	call	_pad	;wreg free
  7606  002008  C014  F01F         	movff	?_pad,?_otoa
  7607  00200C  C015  F020         	movff	?_pad+1,?_otoa+1
  7608  002010  0012               	return		;funcret
  7609  002012                     __end_of_otoa:
  7610                           	opt callstack 0
  7611                           
  7612 ;; *************** function _dtoa *****************
  7613 ;; Defined at:
  7614 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  7617 ;;		 -> vsnprintf@f(6), 
  7618 ;;  d               8   32[COMRAM] long long 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  n               8   56[COMRAM] long long 
  7621 ;;  i               2   64[COMRAM] int 
  7622 ;;  s               2   54[COMRAM] int 
  7623 ;;  w               2   52[COMRAM] int 
  7624 ;;  p               2   50[COMRAM] int 
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  2   30[COMRAM] int 
  7627 ;; Registers used:
  7628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7634 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7635 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7636 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7637 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;Total ram usage:       36 bytes
  7639 ;; Hardware stack levels used:    1
  7640 ;; Hardware stack levels required when called:    8
  7641 ;; This function calls:
  7642 ;;		___aodiv
  7643 ;;		___aomod
  7644 ;;		_abs
  7645 ;;		_pad
  7646 ;; This function is called by:
  7647 ;;		_vfpfcnvrt
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text16
  7652  001676                     __ptext16:
  7653                           	opt callstack 0
  7654  001676                     _dtoa:
  7655                           	opt callstack 18
  7656  001676                     
  7657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7658  001676  C021  F039         	movff	dtoa@d,dtoa@n
  7659  00167A  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  7660  00167E  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  7661  001682  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  7662  001686  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  7663  00168A  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  7664  00168E  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  7665  001692  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  7666  001696                     
  7667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7668  001696  BE40               	btfsc	(dtoa@n+7)^0,7,c
  7669  001698  EF50  F00B         	goto	u2711
  7670  00169C  EF53  F00B         	goto	u2710
  7671  0016A0                     u2711:
  7672  0016A0  0E01               	movlw	1
  7673  0016A2  EF54  F00B         	goto	u2720
  7674  0016A6                     u2710:
  7675  0016A6  0E00               	movlw	0
  7676  0016A8                     u2720:
  7677  0016A8  6E37               	movwf	dtoa@s^0,c
  7678  0016AA  6A38               	clrf	(dtoa@s+1)^0,c
  7679                           
  7680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7681  0016AC  5037               	movf	dtoa@s^0,w,c
  7682  0016AE  1038               	iorwf	(dtoa@s+1)^0,w,c
  7683  0016B0  B4D8               	btfsc	status,2,c
  7684  0016B2  EF5D  F00B         	goto	u2731
  7685  0016B6  EF5F  F00B         	goto	u2730
  7686  0016BA                     u2731:
  7687  0016BA  EF6F  F00B         	goto	l3313
  7688  0016BE                     u2730:
  7689  0016BE                     
  7690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7691  0016BE  1E40               	comf	(dtoa@n+7)^0,f,c
  7692  0016C0  1E3F               	comf	(dtoa@n+6)^0,f,c
  7693  0016C2  1E3E               	comf	(dtoa@n+5)^0,f,c
  7694  0016C4  1E3D               	comf	(dtoa@n+4)^0,f,c
  7695  0016C6  1E3C               	comf	(dtoa@n+3)^0,f,c
  7696  0016C8  1E3B               	comf	(dtoa@n+2)^0,f,c
  7697  0016CA  1E3A               	comf	(dtoa@n+1)^0,f,c
  7698  0016CC  6C39               	negf	dtoa@n^0,c
  7699  0016CE  0E00               	movlw	0
  7700  0016D0  223A               	addwfc	(dtoa@n+1)^0,f,c
  7701  0016D2  223B               	addwfc	(dtoa@n+2)^0,f,c
  7702  0016D4  223C               	addwfc	(dtoa@n+3)^0,f,c
  7703  0016D6  223D               	addwfc	(dtoa@n+4)^0,f,c
  7704  0016D8  223E               	addwfc	(dtoa@n+5)^0,f,c
  7705  0016DA  223F               	addwfc	(dtoa@n+6)^0,f,c
  7706  0016DC  2240               	addwfc	(dtoa@n+7)^0,f,c
  7707  0016DE                     l3313:
  7708                           
  7709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7710  0016DE  0100               	movlb	0	; () banked
  7711  0016E0  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  7712  0016E2  EF75  F00B         	goto	u2741
  7713  0016E6  EF77  F00B         	goto	u2740
  7714  0016EA                     u2741:
  7715  0016EA  EF78  F00B         	goto	l3317
  7716  0016EE                     u2740:
  7717  0016EE                     
  7718                           ; BSR set to: 0
  7719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7720  0016EE  9258               	bcf	_flags^0,1,c
  7721  0016F0                     l3317:
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7725  0016F0  BFA4               	btfsc	(_prec+1)& (0+255),7,b
  7726  0016F2  EF85  F00B         	goto	u2750
  7727  0016F6  51A4               	movf	(_prec+1)& (0+255),w,b
  7728  0016F8  E106               	bnz	u2751
  7729  0016FA  05A3               	decf	_prec& (0+255),w,b
  7730  0016FC  B0D8               	btfsc	status,0,c
  7731  0016FE  EF83  F00B         	goto	u2751
  7732  001702  EF85  F00B         	goto	u2750
  7733  001706                     u2751:
  7734  001706  EF8B  F00B         	goto	l470
  7735  00170A                     u2750:
  7736  00170A                     
  7737                           ; BSR set to: 0
  7738  00170A  0E00               	movlw	0
  7739  00170C  6E34               	movwf	(dtoa@p+1)^0,c
  7740  00170E  0E01               	movlw	1
  7741  001710  6E33               	movwf	dtoa@p^0,c
  7742  001712  EF8F  F00B         	goto	l472
  7743  001716                     l470:
  7744                           
  7745                           ; BSR set to: 0
  7746  001716  C0A3  F033         	movff	_prec,dtoa@p
  7747  00171A  C0A4  F034         	movff	_prec+1,dtoa@p+1
  7748  00171E                     l472:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7752  00171E  C0A1  F035         	movff	_width,dtoa@w
  7753  001722  C0A2  F036         	movff	_width+1,dtoa@w+1
  7754  001726                     
  7755                           ; BSR set to: 0
  7756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7757  001726  5037               	movf	dtoa@s^0,w,c
  7758  001728  1038               	iorwf	(dtoa@s+1)^0,w,c
  7759  00172A  A4D8               	btfss	status,2,c
  7760  00172C  EF9A  F00B         	goto	u2761
  7761  001730  EF9C  F00B         	goto	u2760
  7762  001734                     u2761:
  7763  001734  EFA3  F00B         	goto	l3325
  7764  001738                     u2760:
  7765  001738                     
  7766                           ; BSR set to: 0
  7767  001738  A458               	btfss	_flags^0,2,c
  7768  00173A  EFA1  F00B         	goto	u2771
  7769  00173E  EFA3  F00B         	goto	u2770
  7770  001742                     u2771:
  7771  001742  EFA6  F00B         	goto	l3327
  7772  001746                     u2770:
  7773  001746                     l3325:
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7777  001746  0635               	decf	dtoa@w^0,f,c
  7778  001748  A0D8               	btfss	status,0,c
  7779  00174A  0636               	decf	(dtoa@w+1)^0,f,c
  7780  00174C                     l3327:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7784  00174C  0E00               	movlw	0
  7785  00174E  6E42               	movwf	(dtoa@i+1)^0,c
  7786  001750  0E1F               	movlw	31
  7787  001752  6E41               	movwf	dtoa@i^0,c
  7788  001754                     
  7789                           ; BSR set to: 0
  7790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7791  001754  0E00               	movlw	0
  7792  001756  6FCA               	movwf	(_dbuf+31)& (0+255),b
  7793                           
  7794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7795  001758  EF2A  F00C         	goto	l3341
  7796  00175C                     l3331:
  7797                           
  7798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7799  00175C  0641               	decf	dtoa@i^0,f,c
  7800  00175E  A0D8               	btfss	status,0,c
  7801  001760  0642               	decf	(dtoa@i+1)^0,f,c
  7802  001762                     
  7803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7804  001762  0EAB               	movlw	low _dbuf
  7805  001764  2441               	addwf	dtoa@i^0,w,c
  7806  001766  6ED9               	movwf	fsr2l,c
  7807  001768  0E00               	movlw	high _dbuf
  7808  00176A  2042               	addwfc	(dtoa@i+1)^0,w,c
  7809  00176C  6EDA               	movwf	fsr2h,c
  7810  00176E  C039  F004         	movff	dtoa@n,___aomod@dividend
  7811  001772  C03A  F005         	movff	dtoa@n+1,___aomod@dividend+1
  7812  001776  C03B  F006         	movff	dtoa@n+2,___aomod@dividend+2
  7813  00177A  C03C  F007         	movff	dtoa@n+3,___aomod@dividend+3
  7814  00177E  C03D  F008         	movff	dtoa@n+4,___aomod@dividend+4
  7815  001782  C03E  F009         	movff	dtoa@n+5,___aomod@dividend+5
  7816  001786  C03F  F00A         	movff	dtoa@n+6,___aomod@dividend+6
  7817  00178A  C040  F00B         	movff	dtoa@n+7,___aomod@dividend+7
  7818  00178E  0E0A               	movlw	10
  7819  001790  6E0C               	movwf	___aomod@divisor^0,c
  7820  001792  0E00               	movlw	0
  7821  001794  6E0D               	movwf	(___aomod@divisor+1)^0,c
  7822  001796  0E00               	movlw	0
  7823  001798  6E0E               	movwf	(___aomod@divisor+2)^0,c
  7824  00179A  0E00               	movlw	0
  7825  00179C  6E0F               	movwf	(___aomod@divisor+3)^0,c
  7826  00179E  0E00               	movlw	0
  7827  0017A0  6E10               	movwf	(___aomod@divisor+4)^0,c
  7828  0017A2  0E00               	movlw	0
  7829  0017A4  6E11               	movwf	(___aomod@divisor+5)^0,c
  7830  0017A6  0E00               	movlw	0
  7831  0017A8  6E12               	movwf	(___aomod@divisor+6)^0,c
  7832  0017AA  0E00               	movlw	0
  7833  0017AC  6E13               	movwf	(___aomod@divisor+7)^0,c
  7834  0017AE  ECCC  F013         	call	___aomod	;wreg free
  7835  0017B2  C004  F029         	movff	?___aomod,??_dtoa
  7836  0017B6  C005  F02A         	movff	?___aomod+1,??_dtoa+1
  7837  0017BA  C006  F02B         	movff	?___aomod+2,??_dtoa+2
  7838  0017BE  C007  F02C         	movff	?___aomod+3,??_dtoa+3
  7839  0017C2  C008  F02D         	movff	?___aomod+4,??_dtoa+4
  7840  0017C6  C009  F02E         	movff	?___aomod+5,??_dtoa+5
  7841  0017CA  C00A  F02F         	movff	?___aomod+6,??_dtoa+6
  7842  0017CE  C00B  F030         	movff	?___aomod+7,??_dtoa+7
  7843  0017D2  C029  F016         	movff	??_dtoa,abs@a
  7844  0017D6  C02B  F017         	movff	??_dtoa+2,abs@a+1
  7845  0017DA  EC5E  F01A         	call	_abs	;wreg free
  7846  0017DE  5016               	movf	?_abs^0,w,c
  7847  0017E0  0F30               	addlw	48
  7848  0017E2  6EDF               	movwf	indf2,c
  7849  0017E4                     
  7850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7851  0017E4  0633               	decf	dtoa@p^0,f,c
  7852  0017E6  A0D8               	btfss	status,0,c
  7853  0017E8  0634               	decf	(dtoa@p+1)^0,f,c
  7854  0017EA                     
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7856  0017EA  0635               	decf	dtoa@w^0,f,c
  7857  0017EC  A0D8               	btfss	status,0,c
  7858  0017EE  0636               	decf	(dtoa@w+1)^0,f,c
  7859  0017F0                     
  7860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7861  0017F0  C039  F004         	movff	dtoa@n,___aodiv@dividend
  7862  0017F4  C03A  F005         	movff	dtoa@n+1,___aodiv@dividend+1
  7863  0017F8  C03B  F006         	movff	dtoa@n+2,___aodiv@dividend+2
  7864  0017FC  C03C  F007         	movff	dtoa@n+3,___aodiv@dividend+3
  7865  001800  C03D  F008         	movff	dtoa@n+4,___aodiv@dividend+4
  7866  001804  C03E  F009         	movff	dtoa@n+5,___aodiv@dividend+5
  7867  001808  C03F  F00A         	movff	dtoa@n+6,___aodiv@dividend+6
  7868  00180C  C040  F00B         	movff	dtoa@n+7,___aodiv@dividend+7
  7869  001810  0E0A               	movlw	10
  7870  001812  6E0C               	movwf	___aodiv@divisor^0,c
  7871  001814  0E00               	movlw	0
  7872  001816  6E0D               	movwf	(___aodiv@divisor+1)^0,c
  7873  001818  0E00               	movlw	0
  7874  00181A  6E0E               	movwf	(___aodiv@divisor+2)^0,c
  7875  00181C  0E00               	movlw	0
  7876  00181E  6E0F               	movwf	(___aodiv@divisor+3)^0,c
  7877  001820  0E00               	movlw	0
  7878  001822  6E10               	movwf	(___aodiv@divisor+4)^0,c
  7879  001824  0E00               	movlw	0
  7880  001826  6E11               	movwf	(___aodiv@divisor+5)^0,c
  7881  001828  0E00               	movlw	0
  7882  00182A  6E12               	movwf	(___aodiv@divisor+6)^0,c
  7883  00182C  0E00               	movlw	0
  7884  00182E  6E13               	movwf	(___aodiv@divisor+7)^0,c
  7885  001830  ECD6  F010         	call	___aodiv	;wreg free
  7886  001834  C004  F039         	movff	?___aodiv,dtoa@n
  7887  001838  C005  F03A         	movff	?___aodiv+1,dtoa@n+1
  7888  00183C  C006  F03B         	movff	?___aodiv+2,dtoa@n+2
  7889  001840  C007  F03C         	movff	?___aodiv+3,dtoa@n+3
  7890  001844  C008  F03D         	movff	?___aodiv+4,dtoa@n+4
  7891  001848  C009  F03E         	movff	?___aodiv+5,dtoa@n+5
  7892  00184C  C00A  F03F         	movff	?___aodiv+6,dtoa@n+6
  7893  001850  C00B  F040         	movff	?___aodiv+7,dtoa@n+7
  7894  001854                     l3341:
  7895                           
  7896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7897  001854  BE42               	btfsc	(dtoa@i+1)^0,7,c
  7898  001856  EF35  F00C         	goto	u2781
  7899  00185A  5042               	movf	(dtoa@i+1)^0,w,c
  7900  00185C  E108               	bnz	u2780
  7901  00185E  0441               	decf	dtoa@i^0,w,c
  7902  001860  A0D8               	btfss	status,0,c
  7903  001862  EF35  F00C         	goto	u2781
  7904  001866  EF37  F00C         	goto	u2780
  7905  00186A                     u2781:
  7906  00186A  EF67  F00C         	goto	l3351
  7907  00186E                     u2780:
  7908  00186E  5039               	movf	dtoa@n^0,w,c
  7909  001870  103A               	iorwf	(dtoa@n+1)^0,w,c
  7910  001872  103B               	iorwf	(dtoa@n+2)^0,w,c
  7911  001874  103C               	iorwf	(dtoa@n+3)^0,w,c
  7912  001876  103D               	iorwf	(dtoa@n+4)^0,w,c
  7913  001878  103E               	iorwf	(dtoa@n+5)^0,w,c
  7914  00187A  103F               	iorwf	(dtoa@n+6)^0,w,c
  7915  00187C  1040               	iorwf	(dtoa@n+7)^0,w,c
  7916  00187E  A4D8               	btfss	status,2,c
  7917  001880  EF44  F00C         	goto	u2791
  7918  001884  EF46  F00C         	goto	u2790
  7919  001888                     u2791:
  7920  001888  EFAE  F00B         	goto	l3331
  7921  00188C                     u2790:
  7922  00188C  BE34               	btfsc	(dtoa@p+1)^0,7,c
  7923  00188E  EF53  F00C         	goto	u2800
  7924  001892  5034               	movf	(dtoa@p+1)^0,w,c
  7925  001894  E106               	bnz	u2801
  7926  001896  0433               	decf	dtoa@p^0,w,c
  7927  001898  B0D8               	btfsc	status,0,c
  7928  00189A  EF51  F00C         	goto	u2801
  7929  00189E  EF53  F00C         	goto	u2800
  7930  0018A2                     u2801:
  7931  0018A2  EFAE  F00B         	goto	l3331
  7932  0018A6                     u2800:
  7933  0018A6  BE36               	btfsc	(dtoa@w+1)^0,7,c
  7934  0018A8  EF5E  F00C         	goto	u2811
  7935  0018AC  5036               	movf	(dtoa@w+1)^0,w,c
  7936  0018AE  E108               	bnz	u2810
  7937  0018B0  0435               	decf	dtoa@w^0,w,c
  7938  0018B2  A0D8               	btfss	status,0,c
  7939  0018B4  EF5E  F00C         	goto	u2811
  7940  0018B8  EF60  F00C         	goto	u2810
  7941  0018BC                     u2811:
  7942  0018BC  EF67  F00C         	goto	l3351
  7943  0018C0                     u2810:
  7944  0018C0  B258               	btfsc	_flags^0,1,c
  7945  0018C2  EF65  F00C         	goto	u2821
  7946  0018C6  EF67  F00C         	goto	u2820
  7947  0018CA                     u2821:
  7948  0018CA  EFAE  F00B         	goto	l3331
  7949  0018CE                     u2820:
  7950  0018CE                     l3351:
  7951                           
  7952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7953  0018CE  5037               	movf	dtoa@s^0,w,c
  7954  0018D0  1038               	iorwf	(dtoa@s+1)^0,w,c
  7955  0018D2  A4D8               	btfss	status,2,c
  7956  0018D4  EF6E  F00C         	goto	u2831
  7957  0018D8  EF70  F00C         	goto	u2830
  7958  0018DC                     u2831:
  7959  0018DC  EF77  F00C         	goto	l3355
  7960  0018E0                     u2830:
  7961  0018E0  A458               	btfss	_flags^0,2,c
  7962  0018E2  EF75  F00C         	goto	u2841
  7963  0018E6  EF77  F00C         	goto	u2840
  7964  0018EA                     u2841:
  7965  0018EA  EF95  F00C         	goto	l3365
  7966  0018EE                     u2840:
  7967  0018EE                     l3355:
  7968                           
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7970  0018EE  0641               	decf	dtoa@i^0,f,c
  7971  0018F0  A0D8               	btfss	status,0,c
  7972  0018F2  0642               	decf	(dtoa@i+1)^0,f,c
  7973  0018F4                     
  7974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7975  0018F4  5037               	movf	dtoa@s^0,w,c
  7976  0018F6  1038               	iorwf	(dtoa@s+1)^0,w,c
  7977  0018F8  A4D8               	btfss	status,2,c
  7978  0018FA  EF81  F00C         	goto	u2851
  7979  0018FE  EF83  F00C         	goto	u2850
  7980  001902                     u2851:
  7981  001902  EF89  F00C         	goto	l3361
  7982  001906                     u2850:
  7983  001906  0E00               	movlw	0
  7984  001908  6E32               	movwf	(_dtoa$1262+1)^0,c
  7985  00190A  0E2B               	movlw	43
  7986  00190C  6E31               	movwf	_dtoa$1262^0,c
  7987  00190E  EF8D  F00C         	goto	l3363
  7988  001912                     l3361:
  7989  001912  0E00               	movlw	0
  7990  001914  6E32               	movwf	(_dtoa$1262+1)^0,c
  7991  001916  0E2D               	movlw	45
  7992  001918  6E31               	movwf	_dtoa$1262^0,c
  7993  00191A                     l3363:
  7994  00191A  0EAB               	movlw	low _dbuf
  7995  00191C  2441               	addwf	dtoa@i^0,w,c
  7996  00191E  6ED9               	movwf	fsr2l,c
  7997  001920  0E00               	movlw	high _dbuf
  7998  001922  2042               	addwfc	(dtoa@i+1)^0,w,c
  7999  001924  6EDA               	movwf	fsr2h,c
  8000  001926  C031  FFDF         	movff	_dtoa$1262,indf2
  8001  00192A                     l3365:
  8002                           
  8003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8004  00192A  C01F  F014         	movff	dtoa@fp,pad@fp
  8005  00192E  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  8006  001932  0EAB               	movlw	low _dbuf
  8007  001934  2441               	addwf	dtoa@i^0,w,c
  8008  001936  6E16               	movwf	pad@buf^0,c
  8009  001938  0E00               	movlw	high _dbuf
  8010  00193A  2042               	addwfc	(dtoa@i+1)^0,w,c
  8011  00193C  6E17               	movwf	(pad@buf+1)^0,c
  8012  00193E  C035  F018         	movff	dtoa@w,pad@p
  8013  001942  C036  F019         	movff	dtoa@w+1,pad@p+1
  8014  001946  ECDC  F017         	call	_pad	;wreg free
  8015  00194A  C014  F01F         	movff	?_pad,?_dtoa
  8016  00194E  C015  F020         	movff	?_pad+1,?_dtoa+1
  8017  001952  0012               	return		;funcret
  8018  001954                     __end_of_dtoa:
  8019                           	opt callstack 0
  8020                           
  8021 ;; *************** function _abs *****************
  8022 ;; Defined at:
  8023 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  8024 ;; Parameters:    Size  Location     Type
  8025 ;;  a               2   21[COMRAM] int 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  2   21[COMRAM] int 
  8030 ;; Registers used:
  8031 ;;		wreg, status,2, status,0
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8041 ;;Total ram usage:        4 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    4
  8044 ;; This function calls:
  8045 ;;		Nothing
  8046 ;; This function is called by:
  8047 ;;		_dtoa
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text17
  8052  0034BC                     __ptext17:
  8053                           	opt callstack 0
  8054  0034BC                     _abs:
  8055                           	opt callstack 21
  8056  0034BC  BE17               	btfsc	(abs@a+1)^0,7,c
  8057  0034BE  EF6B  F01A         	goto	u2370
  8058  0034C2  5017               	movf	(abs@a+1)^0,w,c
  8059  0034C4  E106               	bnz	u2371
  8060  0034C6  0416               	decf	abs@a^0,w,c
  8061  0034C8  B0D8               	btfsc	status,0,c
  8062  0034CA  EF69  F01A         	goto	u2371
  8063  0034CE  EF6B  F01A         	goto	u2370
  8064  0034D2                     u2371:
  8065  0034D2  EF79  F01A         	goto	l1334
  8066  0034D6                     u2370:
  8067  0034D6  C016  F018         	movff	abs@a,??_abs
  8068  0034DA  C017  F019         	movff	abs@a+1,??_abs+1
  8069  0034DE  1E18               	comf	??_abs^0,f,c
  8070  0034E0  1E19               	comf	(??_abs+1)^0,f,c
  8071  0034E2  4A18               	infsnz	??_abs^0,f,c
  8072  0034E4  2A19               	incf	(??_abs+1)^0,f,c
  8073  0034E6  C018  F016         	movff	??_abs,?_abs
  8074  0034EA  C019  F017         	movff	??_abs+1,?_abs+1
  8075  0034EE  EF7D  F01A         	goto	l1337
  8076  0034F2                     l1334:
  8077  0034F2  C016  F016         	movff	abs@a,?_abs
  8078  0034F6  C017  F017         	movff	abs@a+1,?_abs+1
  8079  0034FA                     l1337:
  8080  0034FA  0012               	return		;funcret
  8081  0034FC                     __end_of_abs:
  8082                           	opt callstack 0
  8083                           
  8084 ;; *************** function ___aomod *****************
  8085 ;; Defined at:
  8086 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  8087 ;; Parameters:    Size  Location     Type
  8088 ;;  dividend        8    3[COMRAM] long long 
  8089 ;;  divisor         8   11[COMRAM] long long 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;  sign            1   20[COMRAM] unsigned char 
  8092 ;;  counter         1   19[COMRAM] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  8    3[COMRAM] long long 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8102 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;Total ram usage:       18 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    4
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_dtoa
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text18
  8117  002798                     __ptext18:
  8118                           	opt callstack 0
  8119  002798                     ___aomod:
  8120                           	opt callstack 21
  8121  002798  0E00               	movlw	0
  8122  00279A  6E15               	movwf	___aomod@sign^0,c
  8123  00279C  BE0B               	btfsc	(___aomod@dividend+7)^0,7,c
  8124  00279E  EFD5  F013         	goto	u2540
  8125  0027A2  EFD3  F013         	goto	u2541
  8126  0027A6                     u2541:
  8127  0027A6  EFE7  F013         	goto	l3207
  8128  0027AA                     u2540:
  8129  0027AA  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  8130  0027AC  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  8131  0027AE  1E09               	comf	(___aomod@dividend+5)^0,f,c
  8132  0027B0  1E08               	comf	(___aomod@dividend+4)^0,f,c
  8133  0027B2  1E07               	comf	(___aomod@dividend+3)^0,f,c
  8134  0027B4  1E06               	comf	(___aomod@dividend+2)^0,f,c
  8135  0027B6  1E05               	comf	(___aomod@dividend+1)^0,f,c
  8136  0027B8  6C04               	negf	___aomod@dividend^0,c
  8137  0027BA  0E00               	movlw	0
  8138  0027BC  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  8139  0027BE  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  8140  0027C0  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  8141  0027C2  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  8142  0027C4  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  8143  0027C6  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  8144  0027C8  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  8145  0027CA  0E01               	movlw	1
  8146  0027CC  6E15               	movwf	___aomod@sign^0,c
  8147  0027CE                     l3207:
  8148  0027CE  BE13               	btfsc	(___aomod@divisor+7)^0,7,c
  8149  0027D0  EFEE  F013         	goto	u2550
  8150  0027D4  EFEC  F013         	goto	u2551
  8151  0027D8                     u2551:
  8152  0027D8  EFFE  F013         	goto	l3211
  8153  0027DC                     u2550:
  8154  0027DC  1E13               	comf	(___aomod@divisor+7)^0,f,c
  8155  0027DE  1E12               	comf	(___aomod@divisor+6)^0,f,c
  8156  0027E0  1E11               	comf	(___aomod@divisor+5)^0,f,c
  8157  0027E2  1E10               	comf	(___aomod@divisor+4)^0,f,c
  8158  0027E4  1E0F               	comf	(___aomod@divisor+3)^0,f,c
  8159  0027E6  1E0E               	comf	(___aomod@divisor+2)^0,f,c
  8160  0027E8  1E0D               	comf	(___aomod@divisor+1)^0,f,c
  8161  0027EA  6C0C               	negf	___aomod@divisor^0,c
  8162  0027EC  0E00               	movlw	0
  8163  0027EE  220D               	addwfc	(___aomod@divisor+1)^0,f,c
  8164  0027F0  220E               	addwfc	(___aomod@divisor+2)^0,f,c
  8165  0027F2  220F               	addwfc	(___aomod@divisor+3)^0,f,c
  8166  0027F4  2210               	addwfc	(___aomod@divisor+4)^0,f,c
  8167  0027F6  2211               	addwfc	(___aomod@divisor+5)^0,f,c
  8168  0027F8  2212               	addwfc	(___aomod@divisor+6)^0,f,c
  8169  0027FA  2213               	addwfc	(___aomod@divisor+7)^0,f,c
  8170  0027FC                     l3211:
  8171  0027FC  500C               	movf	___aomod@divisor^0,w,c
  8172  0027FE  100D               	iorwf	(___aomod@divisor+1)^0,w,c
  8173  002800  100E               	iorwf	(___aomod@divisor+2)^0,w,c
  8174  002802  100F               	iorwf	(___aomod@divisor+3)^0,w,c
  8175  002804  1010               	iorwf	(___aomod@divisor+4)^0,w,c
  8176  002806  1011               	iorwf	(___aomod@divisor+5)^0,w,c
  8177  002808  1012               	iorwf	(___aomod@divisor+6)^0,w,c
  8178  00280A  1013               	iorwf	(___aomod@divisor+7)^0,w,c
  8179  00280C  B4D8               	btfsc	status,2,c
  8180  00280E  EF0B  F014         	goto	u2561
  8181  002812  EF0D  F014         	goto	u2560
  8182  002816                     u2561:
  8183  002816  EF55  F014         	goto	l3227
  8184  00281A                     u2560:
  8185  00281A  0E01               	movlw	1
  8186  00281C  6E14               	movwf	___aomod@counter^0,c
  8187  00281E  EF1B  F014         	goto	l3217
  8188  002822                     l3215:
  8189  002822  90D8               	bcf	status,0,c
  8190  002824  360C               	rlcf	___aomod@divisor^0,f,c
  8191  002826  360D               	rlcf	(___aomod@divisor+1)^0,f,c
  8192  002828  360E               	rlcf	(___aomod@divisor+2)^0,f,c
  8193  00282A  360F               	rlcf	(___aomod@divisor+3)^0,f,c
  8194  00282C  3610               	rlcf	(___aomod@divisor+4)^0,f,c
  8195  00282E  3611               	rlcf	(___aomod@divisor+5)^0,f,c
  8196  002830  3612               	rlcf	(___aomod@divisor+6)^0,f,c
  8197  002832  3613               	rlcf	(___aomod@divisor+7)^0,f,c
  8198  002834  2A14               	incf	___aomod@counter^0,f,c
  8199  002836                     l3217:
  8200  002836  AE13               	btfss	(___aomod@divisor+7)^0,7,c
  8201  002838  EF20  F014         	goto	u2571
  8202  00283C  EF22  F014         	goto	u2570
  8203  002840                     u2571:
  8204  002840  EF11  F014         	goto	l3215
  8205  002844                     u2570:
  8206  002844                     l3219:
  8207  002844  500C               	movf	___aomod@divisor^0,w,c
  8208  002846  5C04               	subwf	___aomod@dividend^0,w,c
  8209  002848  500D               	movf	(___aomod@divisor+1)^0,w,c
  8210  00284A  5805               	subwfb	(___aomod@dividend+1)^0,w,c
  8211  00284C  500E               	movf	(___aomod@divisor+2)^0,w,c
  8212  00284E  5806               	subwfb	(___aomod@dividend+2)^0,w,c
  8213  002850  500F               	movf	(___aomod@divisor+3)^0,w,c
  8214  002852  5807               	subwfb	(___aomod@dividend+3)^0,w,c
  8215  002854  5010               	movf	(___aomod@divisor+4)^0,w,c
  8216  002856  5808               	subwfb	(___aomod@dividend+4)^0,w,c
  8217  002858  5011               	movf	(___aomod@divisor+5)^0,w,c
  8218  00285A  5809               	subwfb	(___aomod@dividend+5)^0,w,c
  8219  00285C  5012               	movf	(___aomod@divisor+6)^0,w,c
  8220  00285E  580A               	subwfb	(___aomod@dividend+6)^0,w,c
  8221  002860  5013               	movf	(___aomod@divisor+7)^0,w,c
  8222  002862  580B               	subwfb	(___aomod@dividend+7)^0,w,c
  8223  002864  A0D8               	btfss	status,0,c
  8224  002866  EF37  F014         	goto	u2581
  8225  00286A  EF39  F014         	goto	u2580
  8226  00286E                     u2581:
  8227  00286E  EF49  F014         	goto	l3223
  8228  002872                     u2580:
  8229  002872  500C               	movf	___aomod@divisor^0,w,c
  8230  002874  5E04               	subwf	___aomod@dividend^0,f,c
  8231  002876  500D               	movf	(___aomod@divisor+1)^0,w,c
  8232  002878  5A05               	subwfb	(___aomod@dividend+1)^0,f,c
  8233  00287A  500E               	movf	(___aomod@divisor+2)^0,w,c
  8234  00287C  5A06               	subwfb	(___aomod@dividend+2)^0,f,c
  8235  00287E  500F               	movf	(___aomod@divisor+3)^0,w,c
  8236  002880  5A07               	subwfb	(___aomod@dividend+3)^0,f,c
  8237  002882  5010               	movf	(___aomod@divisor+4)^0,w,c
  8238  002884  5A08               	subwfb	(___aomod@dividend+4)^0,f,c
  8239  002886  5011               	movf	(___aomod@divisor+5)^0,w,c
  8240  002888  5A09               	subwfb	(___aomod@dividend+5)^0,f,c
  8241  00288A  5012               	movf	(___aomod@divisor+6)^0,w,c
  8242  00288C  5A0A               	subwfb	(___aomod@dividend+6)^0,f,c
  8243  00288E  5013               	movf	(___aomod@divisor+7)^0,w,c
  8244  002890  5A0B               	subwfb	(___aomod@dividend+7)^0,f,c
  8245  002892                     l3223:
  8246  002892  90D8               	bcf	status,0,c
  8247  002894  3213               	rrcf	(___aomod@divisor+7)^0,f,c
  8248  002896  3212               	rrcf	(___aomod@divisor+6)^0,f,c
  8249  002898  3211               	rrcf	(___aomod@divisor+5)^0,f,c
  8250  00289A  3210               	rrcf	(___aomod@divisor+4)^0,f,c
  8251  00289C  320F               	rrcf	(___aomod@divisor+3)^0,f,c
  8252  00289E  320E               	rrcf	(___aomod@divisor+2)^0,f,c
  8253  0028A0  320D               	rrcf	(___aomod@divisor+1)^0,f,c
  8254  0028A2  320C               	rrcf	___aomod@divisor^0,f,c
  8255  0028A4  2E14               	decfsz	___aomod@counter^0,f,c
  8256  0028A6  EF22  F014         	goto	l3219
  8257  0028AA                     l3227:
  8258  0028AA  5015               	movf	___aomod@sign^0,w,c
  8259  0028AC  B4D8               	btfsc	status,2,c
  8260  0028AE  EF5B  F014         	goto	u2591
  8261  0028B2  EF5D  F014         	goto	u2590
  8262  0028B6                     u2591:
  8263  0028B6  EF6D  F014         	goto	l3231
  8264  0028BA                     u2590:
  8265  0028BA  1E0B               	comf	(___aomod@dividend+7)^0,f,c
  8266  0028BC  1E0A               	comf	(___aomod@dividend+6)^0,f,c
  8267  0028BE  1E09               	comf	(___aomod@dividend+5)^0,f,c
  8268  0028C0  1E08               	comf	(___aomod@dividend+4)^0,f,c
  8269  0028C2  1E07               	comf	(___aomod@dividend+3)^0,f,c
  8270  0028C4  1E06               	comf	(___aomod@dividend+2)^0,f,c
  8271  0028C6  1E05               	comf	(___aomod@dividend+1)^0,f,c
  8272  0028C8  6C04               	negf	___aomod@dividend^0,c
  8273  0028CA  0E00               	movlw	0
  8274  0028CC  2205               	addwfc	(___aomod@dividend+1)^0,f,c
  8275  0028CE  2206               	addwfc	(___aomod@dividend+2)^0,f,c
  8276  0028D0  2207               	addwfc	(___aomod@dividend+3)^0,f,c
  8277  0028D2  2208               	addwfc	(___aomod@dividend+4)^0,f,c
  8278  0028D4  2209               	addwfc	(___aomod@dividend+5)^0,f,c
  8279  0028D6  220A               	addwfc	(___aomod@dividend+6)^0,f,c
  8280  0028D8  220B               	addwfc	(___aomod@dividend+7)^0,f,c
  8281  0028DA                     l3231:
  8282  0028DA  C004  F004         	movff	___aomod@dividend,?___aomod
  8283  0028DE  C005  F005         	movff	___aomod@dividend+1,?___aomod+1
  8284  0028E2  C006  F006         	movff	___aomod@dividend+2,?___aomod+2
  8285  0028E6  C007  F007         	movff	___aomod@dividend+3,?___aomod+3
  8286  0028EA  C008  F008         	movff	___aomod@dividend+4,?___aomod+4
  8287  0028EE  C009  F009         	movff	___aomod@dividend+5,?___aomod+5
  8288  0028F2  C00A  F00A         	movff	___aomod@dividend+6,?___aomod+6
  8289  0028F6  C00B  F00B         	movff	___aomod@dividend+7,?___aomod+7
  8290  0028FA  0012               	return		;funcret
  8291  0028FC                     __end_of___aomod:
  8292                           	opt callstack 0
  8293                           
  8294 ;; *************** function ___aodiv *****************
  8295 ;; Defined at:
  8296 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  dividend        8    3[COMRAM] long long 
  8299 ;;  divisor         8   11[COMRAM] long long 
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  quotient        8   21[COMRAM] long long 
  8302 ;;  sign            1   20[COMRAM] unsigned char 
  8303 ;;  counter         1   19[COMRAM] unsigned char 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  8    3[COMRAM] long long 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8313 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8314 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8316 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8317 ;;Total ram usage:       26 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; Hardware stack levels required when called:    4
  8320 ;; This function calls:
  8321 ;;		Nothing
  8322 ;; This function is called by:
  8323 ;;		_dtoa
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text19
  8328  0021AC                     __ptext19:
  8329                           	opt callstack 0
  8330  0021AC                     ___aodiv:
  8331                           	opt callstack 21
  8332  0021AC  0E00               	movlw	0
  8333  0021AE  6E15               	movwf	___aodiv@sign^0,c
  8334  0021B0  BE13               	btfsc	(___aodiv@divisor+7)^0,7,c
  8335  0021B2  EFDF  F010         	goto	u2470
  8336  0021B6  EFDD  F010         	goto	u2471
  8337  0021BA                     u2471:
  8338  0021BA  EFF1  F010         	goto	l3163
  8339  0021BE                     u2470:
  8340  0021BE  1E13               	comf	(___aodiv@divisor+7)^0,f,c
  8341  0021C0  1E12               	comf	(___aodiv@divisor+6)^0,f,c
  8342  0021C2  1E11               	comf	(___aodiv@divisor+5)^0,f,c
  8343  0021C4  1E10               	comf	(___aodiv@divisor+4)^0,f,c
  8344  0021C6  1E0F               	comf	(___aodiv@divisor+3)^0,f,c
  8345  0021C8  1E0E               	comf	(___aodiv@divisor+2)^0,f,c
  8346  0021CA  1E0D               	comf	(___aodiv@divisor+1)^0,f,c
  8347  0021CC  6C0C               	negf	___aodiv@divisor^0,c
  8348  0021CE  0E00               	movlw	0
  8349  0021D0  220D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8350  0021D2  220E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8351  0021D4  220F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8352  0021D6  2210               	addwfc	(___aodiv@divisor+4)^0,f,c
  8353  0021D8  2211               	addwfc	(___aodiv@divisor+5)^0,f,c
  8354  0021DA  2212               	addwfc	(___aodiv@divisor+6)^0,f,c
  8355  0021DC  2213               	addwfc	(___aodiv@divisor+7)^0,f,c
  8356  0021DE  0E01               	movlw	1
  8357  0021E0  6E15               	movwf	___aodiv@sign^0,c
  8358  0021E2                     l3163:
  8359  0021E2  BE0B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8360  0021E4  EFF8  F010         	goto	u2480
  8361  0021E8  EFF6  F010         	goto	u2481
  8362  0021EC                     u2481:
  8363  0021EC  EF0A  F011         	goto	l3169
  8364  0021F0                     u2480:
  8365  0021F0  1E0B               	comf	(___aodiv@dividend+7)^0,f,c
  8366  0021F2  1E0A               	comf	(___aodiv@dividend+6)^0,f,c
  8367  0021F4  1E09               	comf	(___aodiv@dividend+5)^0,f,c
  8368  0021F6  1E08               	comf	(___aodiv@dividend+4)^0,f,c
  8369  0021F8  1E07               	comf	(___aodiv@dividend+3)^0,f,c
  8370  0021FA  1E06               	comf	(___aodiv@dividend+2)^0,f,c
  8371  0021FC  1E05               	comf	(___aodiv@dividend+1)^0,f,c
  8372  0021FE  6C04               	negf	___aodiv@dividend^0,c
  8373  002200  0E00               	movlw	0
  8374  002202  2205               	addwfc	(___aodiv@dividend+1)^0,f,c
  8375  002204  2206               	addwfc	(___aodiv@dividend+2)^0,f,c
  8376  002206  2207               	addwfc	(___aodiv@dividend+3)^0,f,c
  8377  002208  2208               	addwfc	(___aodiv@dividend+4)^0,f,c
  8378  00220A  2209               	addwfc	(___aodiv@dividend+5)^0,f,c
  8379  00220C  220A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8380  00220E  220B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8381  002210  0E01               	movlw	1
  8382  002212  1A15               	xorwf	___aodiv@sign^0,f,c
  8383  002214                     l3169:
  8384  002214  EE20  F016         	lfsr	2,___aodiv@quotient
  8385  002218  0E07               	movlw	7
  8386  00221A                     u2491:
  8387  00221A  6ADE               	clrf	postinc2,c
  8388  00221C  06E8               	decf	wreg,f,c
  8389  00221E  E2FD               	bc	u2491
  8390  002220  500C               	movf	___aodiv@divisor^0,w,c
  8391  002222  100D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8392  002224  100E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8393  002226  100F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8394  002228  1010               	iorwf	(___aodiv@divisor+4)^0,w,c
  8395  00222A  1011               	iorwf	(___aodiv@divisor+5)^0,w,c
  8396  00222C  1012               	iorwf	(___aodiv@divisor+6)^0,w,c
  8397  00222E  1013               	iorwf	(___aodiv@divisor+7)^0,w,c
  8398  002230  B4D8               	btfsc	status,2,c
  8399  002232  EF1D  F011         	goto	u2501
  8400  002236  EF1F  F011         	goto	u2500
  8401  00223A                     u2501:
  8402  00223A  EF71  F011         	goto	l3191
  8403  00223E                     u2500:
  8404  00223E  0E01               	movlw	1
  8405  002240  6E14               	movwf	___aodiv@counter^0,c
  8406  002242  EF2D  F011         	goto	l3177
  8407  002246                     l3175:
  8408  002246  90D8               	bcf	status,0,c
  8409  002248  360C               	rlcf	___aodiv@divisor^0,f,c
  8410  00224A  360D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8411  00224C  360E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8412  00224E  360F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8413  002250  3610               	rlcf	(___aodiv@divisor+4)^0,f,c
  8414  002252  3611               	rlcf	(___aodiv@divisor+5)^0,f,c
  8415  002254  3612               	rlcf	(___aodiv@divisor+6)^0,f,c
  8416  002256  3613               	rlcf	(___aodiv@divisor+7)^0,f,c
  8417  002258  2A14               	incf	___aodiv@counter^0,f,c
  8418  00225A                     l3177:
  8419  00225A  AE13               	btfss	(___aodiv@divisor+7)^0,7,c
  8420  00225C  EF32  F011         	goto	u2511
  8421  002260  EF34  F011         	goto	u2510
  8422  002264                     u2511:
  8423  002264  EF23  F011         	goto	l3175
  8424  002268                     u2510:
  8425  002268                     l3179:
  8426  002268  90D8               	bcf	status,0,c
  8427  00226A  3616               	rlcf	___aodiv@quotient^0,f,c
  8428  00226C  3617               	rlcf	(___aodiv@quotient+1)^0,f,c
  8429  00226E  3618               	rlcf	(___aodiv@quotient+2)^0,f,c
  8430  002270  3619               	rlcf	(___aodiv@quotient+3)^0,f,c
  8431  002272  361A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8432  002274  361B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8433  002276  361C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8434  002278  361D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8435  00227A  500C               	movf	___aodiv@divisor^0,w,c
  8436  00227C  5C04               	subwf	___aodiv@dividend^0,w,c
  8437  00227E  500D               	movf	(___aodiv@divisor+1)^0,w,c
  8438  002280  5805               	subwfb	(___aodiv@dividend+1)^0,w,c
  8439  002282  500E               	movf	(___aodiv@divisor+2)^0,w,c
  8440  002284  5806               	subwfb	(___aodiv@dividend+2)^0,w,c
  8441  002286  500F               	movf	(___aodiv@divisor+3)^0,w,c
  8442  002288  5807               	subwfb	(___aodiv@dividend+3)^0,w,c
  8443  00228A  5010               	movf	(___aodiv@divisor+4)^0,w,c
  8444  00228C  5808               	subwfb	(___aodiv@dividend+4)^0,w,c
  8445  00228E  5011               	movf	(___aodiv@divisor+5)^0,w,c
  8446  002290  5809               	subwfb	(___aodiv@dividend+5)^0,w,c
  8447  002292  5012               	movf	(___aodiv@divisor+6)^0,w,c
  8448  002294  580A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8449  002296  5013               	movf	(___aodiv@divisor+7)^0,w,c
  8450  002298  580B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8451  00229A  A0D8               	btfss	status,0,c
  8452  00229C  EF52  F011         	goto	u2521
  8453  0022A0  EF54  F011         	goto	u2520
  8454  0022A4                     u2521:
  8455  0022A4  EF65  F011         	goto	l3187
  8456  0022A8                     u2520:
  8457  0022A8  500C               	movf	___aodiv@divisor^0,w,c
  8458  0022AA  5E04               	subwf	___aodiv@dividend^0,f,c
  8459  0022AC  500D               	movf	(___aodiv@divisor+1)^0,w,c
  8460  0022AE  5A05               	subwfb	(___aodiv@dividend+1)^0,f,c
  8461  0022B0  500E               	movf	(___aodiv@divisor+2)^0,w,c
  8462  0022B2  5A06               	subwfb	(___aodiv@dividend+2)^0,f,c
  8463  0022B4  500F               	movf	(___aodiv@divisor+3)^0,w,c
  8464  0022B6  5A07               	subwfb	(___aodiv@dividend+3)^0,f,c
  8465  0022B8  5010               	movf	(___aodiv@divisor+4)^0,w,c
  8466  0022BA  5A08               	subwfb	(___aodiv@dividend+4)^0,f,c
  8467  0022BC  5011               	movf	(___aodiv@divisor+5)^0,w,c
  8468  0022BE  5A09               	subwfb	(___aodiv@dividend+5)^0,f,c
  8469  0022C0  5012               	movf	(___aodiv@divisor+6)^0,w,c
  8470  0022C2  5A0A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8471  0022C4  5013               	movf	(___aodiv@divisor+7)^0,w,c
  8472  0022C6  5A0B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8473  0022C8  8016               	bsf	___aodiv@quotient^0,0,c
  8474  0022CA                     l3187:
  8475  0022CA  90D8               	bcf	status,0,c
  8476  0022CC  3213               	rrcf	(___aodiv@divisor+7)^0,f,c
  8477  0022CE  3212               	rrcf	(___aodiv@divisor+6)^0,f,c
  8478  0022D0  3211               	rrcf	(___aodiv@divisor+5)^0,f,c
  8479  0022D2  3210               	rrcf	(___aodiv@divisor+4)^0,f,c
  8480  0022D4  320F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8481  0022D6  320E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8482  0022D8  320D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8483  0022DA  320C               	rrcf	___aodiv@divisor^0,f,c
  8484  0022DC  2E14               	decfsz	___aodiv@counter^0,f,c
  8485  0022DE  EF34  F011         	goto	l3179
  8486  0022E2                     l3191:
  8487  0022E2  5015               	movf	___aodiv@sign^0,w,c
  8488  0022E4  B4D8               	btfsc	status,2,c
  8489  0022E6  EF77  F011         	goto	u2531
  8490  0022EA  EF79  F011         	goto	u2530
  8491  0022EE                     u2531:
  8492  0022EE  EF89  F011         	goto	l3195
  8493  0022F2                     u2530:
  8494  0022F2  1E1D               	comf	(___aodiv@quotient+7)^0,f,c
  8495  0022F4  1E1C               	comf	(___aodiv@quotient+6)^0,f,c
  8496  0022F6  1E1B               	comf	(___aodiv@quotient+5)^0,f,c
  8497  0022F8  1E1A               	comf	(___aodiv@quotient+4)^0,f,c
  8498  0022FA  1E19               	comf	(___aodiv@quotient+3)^0,f,c
  8499  0022FC  1E18               	comf	(___aodiv@quotient+2)^0,f,c
  8500  0022FE  1E17               	comf	(___aodiv@quotient+1)^0,f,c
  8501  002300  6C16               	negf	___aodiv@quotient^0,c
  8502  002302  0E00               	movlw	0
  8503  002304  2217               	addwfc	(___aodiv@quotient+1)^0,f,c
  8504  002306  2218               	addwfc	(___aodiv@quotient+2)^0,f,c
  8505  002308  2219               	addwfc	(___aodiv@quotient+3)^0,f,c
  8506  00230A  221A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8507  00230C  221B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8508  00230E  221C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8509  002310  221D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8510  002312                     l3195:
  8511  002312  C016  F004         	movff	___aodiv@quotient,?___aodiv
  8512  002316  C017  F005         	movff	___aodiv@quotient+1,?___aodiv+1
  8513  00231A  C018  F006         	movff	___aodiv@quotient+2,?___aodiv+2
  8514  00231E  C019  F007         	movff	___aodiv@quotient+3,?___aodiv+3
  8515  002322  C01A  F008         	movff	___aodiv@quotient+4,?___aodiv+4
  8516  002326  C01B  F009         	movff	___aodiv@quotient+5,?___aodiv+5
  8517  00232A  C01C  F00A         	movff	___aodiv@quotient+6,?___aodiv+6
  8518  00232E  C01D  F00B         	movff	___aodiv@quotient+7,?___aodiv+7
  8519  002332  0012               	return		;funcret
  8520  002334                     __end_of___aodiv:
  8521                           	opt callstack 0
  8522                           
  8523 ;; *************** function _ctoa *****************
  8524 ;; Defined at:
  8525 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  8528 ;;		 -> vsnprintf@f(6), 
  8529 ;;  c               1   32[COMRAM] unsigned char 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  w               2   33[COMRAM] int 
  8532 ;;  l               2    0        int 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  2   30[COMRAM] int 
  8535 ;; Registers used:
  8536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8542 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8545 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8546 ;;Total ram usage:        5 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    8
  8549 ;; This function calls:
  8550 ;;		_pad
  8551 ;; This function is called by:
  8552 ;;		_vfpfcnvrt
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text20
  8557  00326E                     __ptext20:
  8558                           	opt callstack 0
  8559  00326E                     _ctoa:
  8560                           	opt callstack 18
  8561  00326E                     
  8562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8563  00326E  0100               	movlb	0	; () banked
  8564  003270  51A1               	movf	_width& (0+255),w,b
  8565  003272  11A2               	iorwf	(_width+1)& (0+255),w,b
  8566  003274  A4D8               	btfss	status,2,c
  8567  003276  EF3F  F019         	goto	u2701
  8568  00327A  EF41  F019         	goto	u2700
  8569  00327E                     u2701:
  8570  00327E  EF47  F019         	goto	l3297
  8571  003282                     u2700:
  8572  003282                     
  8573                           ; BSR set to: 0
  8574  003282  C0A1  F022         	movff	_width,ctoa@w
  8575  003286  C0A2  F023         	movff	_width+1,ctoa@w+1
  8576  00328A  EF4D  F019         	goto	l3299
  8577  00328E                     l3297:
  8578                           
  8579                           ; BSR set to: 0
  8580  00328E  0EFF               	movlw	255
  8581  003290  25A1               	addwf	_width& (0+255),w,b
  8582  003292  6E22               	movwf	ctoa@w^0,c
  8583  003294  0EFF               	movlw	255
  8584  003296  21A2               	addwfc	(_width+1)& (0+255),w,b
  8585  003298  6E23               	movwf	(ctoa@w+1)^0,c
  8586  00329A                     l3299:
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8590  00329A  C021  F0AB         	movff	ctoa@c,_dbuf
  8591  00329E                     
  8592                           ; BSR set to: 0
  8593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8594  00329E  0E00               	movlw	0
  8595  0032A0  6FAC               	movwf	(_dbuf+1)& (0+255),b
  8596  0032A2                     
  8597                           ; BSR set to: 0
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8599  0032A2  C01F  F014         	movff	ctoa@fp,pad@fp
  8600  0032A6  C020  F015         	movff	ctoa@fp+1,pad@fp+1
  8601  0032AA  0EAB               	movlw	low _dbuf
  8602  0032AC  6E16               	movwf	pad@buf^0,c
  8603  0032AE  0E00               	movlw	high _dbuf
  8604  0032B0  6E17               	movwf	(pad@buf+1)^0,c
  8605  0032B2  C022  F018         	movff	ctoa@w,pad@p
  8606  0032B6  C023  F019         	movff	ctoa@w+1,pad@p+1
  8607  0032BA  ECDC  F017         	call	_pad	;wreg free
  8608  0032BE  C014  F01F         	movff	?_pad,?_ctoa
  8609  0032C2  C015  F020         	movff	?_pad+1,?_ctoa+1
  8610  0032C6  0012               	return		;funcret
  8611  0032C8                     __end_of_ctoa:
  8612                           	opt callstack 0
  8613                           
  8614 ;; *************** function _pad *****************
  8615 ;; Defined at:
  8616 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  8619 ;;		 -> vsnprintf@f(6), 
  8620 ;;  buf             2   21[COMRAM] PTR unsigned char 
  8621 ;;		 -> dbuf(32), 
  8622 ;;  p               2   23[COMRAM] int 
  8623 ;; Auto vars:     Size  Location     Type
  8624 ;;  w               2   28[COMRAM] int 
  8625 ;;  i               2   26[COMRAM] int 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  2   19[COMRAM] int 
  8628 ;; Registers used:
  8629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8635 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8636 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8638 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8639 ;;Total ram usage:       11 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; Hardware stack levels required when called:    7
  8642 ;; This function calls:
  8643 ;;		_fputc
  8644 ;;		_fputs
  8645 ;;		_strlen
  8646 ;; This function is called by:
  8647 ;;		_ctoa
  8648 ;;		_dtoa
  8649 ;;		_otoa
  8650 ;;		_utoa
  8651 ;;		_xtoa
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text21
  8656  002FB8                     __ptext21:
  8657                           	opt callstack 0
  8658  002FB8                     _pad:
  8659                           	opt callstack 18
  8660  002FB8                     
  8661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8662  002FB8  A058               	btfss	_flags^0,0,c
  8663  002FBA  EFE1  F017         	goto	u2331
  8664  002FBE  EFE3  F017         	goto	u2330
  8665  002FC2                     u2331:
  8666  002FC2  EFED  F017         	goto	l3105
  8667  002FC6                     u2330:
  8668  002FC6                     
  8669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8670  002FC6  C016  F00D         	movff	pad@buf,fputs@s
  8671  002FCA  C017  F00E         	movff	pad@buf+1,fputs@s+1
  8672  002FCE  C014  F00F         	movff	pad@fp,fputs@fp
  8673  002FD2  C015  F010         	movff	pad@fp+1,fputs@fp+1
  8674  002FD6  EC1B  F01A         	call	_fputs	;wreg free
  8675  002FDA                     l3105:
  8676                           
  8677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8678  002FDA  BE19               	btfsc	(pad@p+1)^0,7,c
  8679  002FDC  EFF2  F017         	goto	u2341
  8680  002FE0  EFF4  F017         	goto	u2340
  8681  002FE4                     u2341:
  8682  002FE4  EFFA  F017         	goto	l3109
  8683  002FE8                     u2340:
  8684  002FE8  C018  F01D         	movff	pad@p,pad@w
  8685  002FEC  C019  F01E         	movff	pad@p+1,pad@w+1
  8686  002FF0  EFFE  F017         	goto	l452
  8687  002FF4                     l3109:
  8688  002FF4  0E00               	movlw	0
  8689  002FF6  6E1E               	movwf	(pad@w+1)^0,c
  8690  002FF8  0E00               	movlw	0
  8691  002FFA  6E1D               	movwf	pad@w^0,c
  8692  002FFC                     l452:
  8693                           
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8695  002FFC  0E00               	movlw	0
  8696  002FFE  6E1C               	movwf	(pad@i+1)^0,c
  8697  003000  0E00               	movlw	0
  8698  003002  6E1B               	movwf	pad@i^0,c
  8699                           
  8700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8701  003004  EF10  F018         	goto	l3115
  8702  003008                     l3111:
  8703                           
  8704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8705  003008  0E00               	movlw	0
  8706  00300A  6E05               	movwf	(fputc@c+1)^0,c
  8707  00300C  0E20               	movlw	32
  8708  00300E  6E04               	movwf	fputc@c^0,c
  8709  003010  C014  F006         	movff	pad@fp,fputc@fp
  8710  003014  C015  F007         	movff	pad@fp+1,fputc@fp+1
  8711  003018  EC77  F017         	call	_fputc	;wreg free
  8712  00301C                     
  8713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8714  00301C  4A1B               	infsnz	pad@i^0,f,c
  8715  00301E  2A1C               	incf	(pad@i+1)^0,f,c
  8716  003020                     l3115:
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8719  003020  501D               	movf	pad@w^0,w,c
  8720  003022  5C1B               	subwf	pad@i^0,w,c
  8721  003024  501C               	movf	(pad@i+1)^0,w,c
  8722  003026  0A80               	xorlw	128
  8723  003028  6E1A               	movwf	??_pad^0,c
  8724  00302A  501E               	movf	(pad@w+1)^0,w,c
  8725  00302C  0A80               	xorlw	128
  8726  00302E  581A               	subwfb	??_pad^0,w,c
  8727  003030  A0D8               	btfss	status,0,c
  8728  003032  EF1D  F018         	goto	u2351
  8729  003036  EF1F  F018         	goto	u2350
  8730  00303A                     u2351:
  8731  00303A  EF04  F018         	goto	l3111
  8732  00303E                     u2350:
  8733  00303E                     
  8734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8735  00303E  B058               	btfsc	_flags^0,0,c
  8736  003040  EF24  F018         	goto	u2361
  8737  003044  EF26  F018         	goto	u2360
  8738  003048                     u2361:
  8739  003048  EF30  F018         	goto	l3119
  8740  00304C                     u2360:
  8741  00304C                     
  8742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8743  00304C  C016  F00D         	movff	pad@buf,fputs@s
  8744  003050  C017  F00E         	movff	pad@buf+1,fputs@s+1
  8745  003054  C014  F00F         	movff	pad@fp,fputs@fp
  8746  003058  C015  F010         	movff	pad@fp+1,fputs@fp+1
  8747  00305C  EC1B  F01A         	call	_fputs	;wreg free
  8748  003060                     l3119:
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8751  003060  C016  F004         	movff	pad@buf,strlen@s
  8752  003064  C017  F005         	movff	pad@buf+1,strlen@s+1
  8753  003068  ECF0  F01A         	call	_strlen	;wreg free
  8754  00306C  501D               	movf	pad@w^0,w,c
  8755  00306E  2404               	addwf	?_strlen^0,w,c
  8756  003070  6E14               	movwf	?_pad^0,c
  8757  003072  501E               	movf	(pad@w+1)^0,w,c
  8758  003074  2005               	addwfc	(?_strlen+1)^0,w,c
  8759  003076  6E15               	movwf	(?_pad+1)^0,c
  8760  003078  0012               	return		;funcret
  8761  00307A                     __end_of_pad:
  8762                           	opt callstack 0
  8763                           
  8764 ;; *************** function _strlen *****************
  8765 ;; Defined at:
  8766 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  s               2    3[COMRAM] PTR const unsigned char 
  8769 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  a               2    5[COMRAM] PTR const unsigned char 
  8772 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  2    3[COMRAM] unsigned int 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8786 ;;Total ram usage:        4 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    4
  8789 ;; This function calls:
  8790 ;;		Nothing
  8791 ;; This function is called by:
  8792 ;;		_pad
  8793 ;;		_stoa
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text22
  8798  0035E0                     __ptext22:
  8799                           	opt callstack 0
  8800  0035E0                     _strlen:
  8801                           	opt callstack 20
  8802  0035E0  C004  F006         	movff	strlen@s,strlen@a
  8803  0035E4  C005  F007         	movff	strlen@s+1,strlen@a+1
  8804  0035E8  EFF8  F01A         	goto	l3089
  8805  0035EC                     l3087:
  8806  0035EC  4A04               	infsnz	strlen@s^0,f,c
  8807  0035EE  2A05               	incf	(strlen@s+1)^0,f,c
  8808  0035F0                     l3089:
  8809  0035F0  C004  FFD9         	movff	strlen@s,fsr2l
  8810  0035F4  C005  FFDA         	movff	strlen@s+1,fsr2h
  8811  0035F8  50DF               	movf	indf2,w,c
  8812  0035FA  A4D8               	btfss	status,2,c
  8813  0035FC  EF02  F01B         	goto	u2291
  8814  003600  EF04  F01B         	goto	u2290
  8815  003604                     u2291:
  8816  003604  EFF6  F01A         	goto	l3087
  8817  003608                     u2290:
  8818  003608  5006               	movf	strlen@a^0,w,c
  8819  00360A  5C04               	subwf	strlen@s^0,w,c
  8820  00360C  6E04               	movwf	?_strlen^0,c
  8821  00360E  5007               	movf	(strlen@a+1)^0,w,c
  8822  003610  5805               	subwfb	(strlen@s+1)^0,w,c
  8823  003612  6E05               	movwf	(?_strlen+1)^0,c
  8824  003614  0012               	return		;funcret
  8825  003616                     __end_of_strlen:
  8826                           	opt callstack 0
  8827                           
  8828 ;; *************** function _fputs *****************
  8829 ;; Defined at:
  8830 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8833 ;;		 -> dbuf(32), 
  8834 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  8835 ;;		 -> vsnprintf@f(6), 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  i               2   17[COMRAM] int 
  8838 ;;  c               1   16[COMRAM] unsigned char 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  2   12[COMRAM] int 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8849 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8851 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8852 ;;Total ram usage:        7 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    6
  8855 ;; This function calls:
  8856 ;;		_fputc
  8857 ;; This function is called by:
  8858 ;;		_pad
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text23
  8863  003436                     __ptext23:
  8864                           	opt callstack 0
  8865  003436                     _fputs:
  8866                           	opt callstack 18
  8867  003436  0E00               	movlw	0
  8868  003438  6E13               	movwf	(fputs@i+1)^0,c
  8869  00343A  0E00               	movlw	0
  8870  00343C  6E12               	movwf	fputs@i^0,c
  8871  00343E  EF2C  F01A         	goto	l3083
  8872  003442                     l3079:
  8873  003442  C011  F004         	movff	fputs@c,fputc@c
  8874  003446  6A05               	clrf	(fputc@c+1)^0,c
  8875  003448  C00F  F006         	movff	fputs@fp,fputc@fp
  8876  00344C  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  8877  003450  EC77  F017         	call	_fputc	;wreg free
  8878  003454  4A12               	infsnz	fputs@i^0,f,c
  8879  003456  2A13               	incf	(fputs@i+1)^0,f,c
  8880  003458                     l3083:
  8881  003458  5012               	movf	fputs@i^0,w,c
  8882  00345A  240D               	addwf	fputs@s^0,w,c
  8883  00345C  6ED9               	movwf	fsr2l,c
  8884  00345E  5013               	movf	(fputs@i+1)^0,w,c
  8885  003460  200E               	addwfc	(fputs@s+1)^0,w,c
  8886  003462  6EDA               	movwf	fsr2h,c
  8887  003464  50DF               	movf	indf2,w,c
  8888  003466  6E11               	movwf	fputs@c^0,c
  8889  003468  5011               	movf	fputs@c^0,w,c
  8890  00346A  A4D8               	btfss	status,2,c
  8891  00346C  EF3A  F01A         	goto	u2281
  8892  003470  EF3C  F01A         	goto	u2280
  8893  003474                     u2281:
  8894  003474  EF21  F01A         	goto	l3079
  8895  003478                     u2280:
  8896  003478  0012               	return		;funcret
  8897  00347A                     __end_of_fputs:
  8898                           	opt callstack 0
  8899                           
  8900 ;; *************** function _fputc *****************
  8901 ;; Defined at:
  8902 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  c               2    3[COMRAM] int 
  8905 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  8906 ;;		 -> vsnprintf@f(6), 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  2    3[COMRAM] int 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;Total ram usage:        9 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    5
  8925 ;; This function calls:
  8926 ;;		_putch
  8927 ;; This function is called by:
  8928 ;;		_pad
  8929 ;;		_stoa
  8930 ;;		_vfpfcnvrt
  8931 ;;		_fputs
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text24
  8936  002EEE                     __ptext24:
  8937                           	opt callstack 0
  8938  002EEE                     _fputc:
  8939                           	opt callstack 18
  8940  002EEE  5006               	movf	fputc@fp^0,w,c
  8941  002EF0  1007               	iorwf	(fputc@fp+1)^0,w,c
  8942  002EF2  B4D8               	btfsc	status,2,c
  8943  002EF4  EF7E  F017         	goto	u2241
  8944  002EF8  EF80  F017         	goto	u2240
  8945  002EFC                     u2241:
  8946  002EFC  EF89  F017         	goto	l3067
  8947  002F00                     u2240:
  8948  002F00  5006               	movf	fputc@fp^0,w,c
  8949  002F02  1007               	iorwf	(fputc@fp+1)^0,w,c
  8950  002F04  A4D8               	btfss	status,2,c
  8951  002F06  EF87  F017         	goto	u2251
  8952  002F0A  EF89  F017         	goto	u2250
  8953  002F0E                     u2251:
  8954  002F0E  EF8E  F017         	goto	l3069
  8955  002F12                     u2250:
  8956  002F12                     l3067:
  8957  002F12  5004               	movf	fputc@c^0,w,c
  8958  002F14  EC25  F01C         	call	_putch
  8959  002F18  EFDB  F017         	goto	l1406
  8960  002F1C                     l3069:
  8961  002F1C  EE20 F004          	lfsr	2,4
  8962  002F20  5006               	movf	fputc@fp^0,w,c
  8963  002F22  26D9               	addwf	fsr2l,f,c
  8964  002F24  5007               	movf	(fputc@fp+1)^0,w,c
  8965  002F26  22DA               	addwfc	fsr2h,f,c
  8966  002F28  50DE               	movf	postinc2,w,c
  8967  002F2A  10DE               	iorwf	postinc2,w,c
  8968  002F2C  B4D8               	btfsc	status,2,c
  8969  002F2E  EF9B  F017         	goto	u2261
  8970  002F32  EF9D  F017         	goto	u2260
  8971  002F36                     u2261:
  8972  002F36  EFB8  F017         	goto	l3073
  8973  002F3A                     u2260:
  8974  002F3A  EE20 F004          	lfsr	2,4
  8975  002F3E  5006               	movf	fputc@fp^0,w,c
  8976  002F40  26D9               	addwf	fsr2l,f,c
  8977  002F42  5007               	movf	(fputc@fp+1)^0,w,c
  8978  002F44  22DA               	addwfc	fsr2h,f,c
  8979  002F46  EE10 F002          	lfsr	1,2
  8980  002F4A  5006               	movf	fputc@fp^0,w,c
  8981  002F4C  26E1               	addwf	fsr1l,f,c
  8982  002F4E  5007               	movf	(fputc@fp+1)^0,w,c
  8983  002F50  22E2               	addwfc	fsr1h,f,c
  8984  002F52  50DE               	movf	postinc2,w,c
  8985  002F54  5CE6               	subwf	postinc1,w,c
  8986  002F56  50E6               	movf	postinc1,w,c
  8987  002F58  0A80               	xorlw	128
  8988  002F5A  6E0C               	movwf	(??_fputc+4)^0,c
  8989  002F5C  50DE               	movf	postinc2,w,c
  8990  002F5E  0A80               	xorlw	128
  8991  002F60  580C               	subwfb	(??_fputc+4)^0,w,c
  8992  002F62  B0D8               	btfsc	status,0,c
  8993  002F64  EFB6  F017         	goto	u2271
  8994  002F68  EFB8  F017         	goto	u2270
  8995  002F6C                     u2271:
  8996  002F6C  EFDB  F017         	goto	l1406
  8997  002F70                     u2270:
  8998  002F70                     l3073:
  8999  002F70  EE20 F002          	lfsr	2,2
  9000  002F74  5006               	movf	fputc@fp^0,w,c
  9001  002F76  26D9               	addwf	fsr2l,f,c
  9002  002F78  5007               	movf	(fputc@fp+1)^0,w,c
  9003  002F7A  22DA               	addwfc	fsr2h,f,c
  9004  002F7C  CFDE F008          	movff	postinc2,??_fputc
  9005  002F80  CFDD F009          	movff	postdec2,??_fputc+1
  9006  002F84  C006  FFD9         	movff	fputc@fp,fsr2l
  9007  002F88  C007  FFDA         	movff	fputc@fp+1,fsr2h
  9008  002F8C  CFDE F00A          	movff	postinc2,??_fputc+2
  9009  002F90  CFDD F00B          	movff	postdec2,??_fputc+3
  9010  002F94  5008               	movf	??_fputc^0,w,c
  9011  002F96  240A               	addwf	(??_fputc+2)^0,w,c
  9012  002F98  6ED9               	movwf	fsr2l,c
  9013  002F9A  5009               	movf	(??_fputc+1)^0,w,c
  9014  002F9C  200B               	addwfc	(??_fputc+3)^0,w,c
  9015  002F9E  6EDA               	movwf	fsr2h,c
  9016  002FA0  C004  FFDF         	movff	fputc@c,indf2
  9017  002FA4  EE20 F002          	lfsr	2,2
  9018  002FA8  5006               	movf	fputc@fp^0,w,c
  9019  002FAA  26D9               	addwf	fsr2l,f,c
  9020  002FAC  5007               	movf	(fputc@fp+1)^0,w,c
  9021  002FAE  22DA               	addwfc	fsr2h,f,c
  9022  002FB0  2ADE               	incf	postinc2,f,c
  9023  002FB2  0E00               	movlw	0
  9024  002FB4  22DD               	addwfc	postdec2,f,c
  9025  002FB6                     l1406:
  9026  002FB6  0012               	return		;funcret
  9027  002FB8                     __end_of_fputc:
  9028                           	opt callstack 0
  9029                           
  9030 ;; *************** function _putch *****************
  9031 ;; Defined at:
  9032 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  c               1    wreg     unsigned char 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  c               1    0[COMRAM] unsigned char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  1    wreg      void 
  9039 ;; Registers used:
  9040 ;;		wreg
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;Total ram usage:        0 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    4
  9053 ;; This function calls:
  9054 ;;		Nothing
  9055 ;; This function is called by:
  9056 ;;		_fputc
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text25
  9061  00384A                     __ptext25:
  9062                           	opt callstack 0
  9063  00384A                     _putch:
  9064                           	opt callstack 18
  9065  00384A  0012               	return		;funcret
  9066  00384C                     __end_of_putch:
  9067                           	opt callstack 0
  9068                           
  9069 ;; *************** function _atoi *****************
  9070 ;; Defined at:
  9071 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9074 ;;		 -> STR_3(17), 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  n               2   23[COMRAM] int 
  9077 ;;  neg             2   16[COMRAM] int 
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  2   10[COMRAM] int 
  9080 ;; Registers used:
  9081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9088 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9089 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9090 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;Total ram usage:       15 bytes
  9092 ;; Hardware stack levels used:    1
  9093 ;; Hardware stack levels required when called:    5
  9094 ;; This function calls:
  9095 ;;		___wmul
  9096 ;;		_isdigit
  9097 ;;		_isspace
  9098 ;; This function is called by:
  9099 ;;		_vfpfcnvrt
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text26
  9104  002012                     __ptext26:
  9105                           	opt callstack 0
  9106  002012                     _atoi:
  9107                           	opt callstack 21
  9108  002012  0E00               	movlw	0
  9109  002014  6E19               	movwf	(atoi@n+1)^0,c
  9110  002016  0E00               	movlw	0
  9111  002018  6E18               	movwf	atoi@n^0,c
  9112  00201A  0E00               	movlw	0
  9113  00201C  6E12               	movwf	(atoi@neg+1)^0,c
  9114  00201E  0E00               	movlw	0
  9115  002020  6E11               	movwf	atoi@neg^0,c
  9116  002022  EF15  F010         	goto	l3565
  9117  002026                     l3563:
  9118  002026  4A0B               	infsnz	atoi@s^0,f,c
  9119  002028  2A0C               	incf	(atoi@s+1)^0,f,c
  9120  00202A                     l3565:
  9121  00202A  0E01               	movlw	1
  9122  00202C  6E17               	movwf	_atoi$1876^0,c
  9123  00202E  C00B  FFF6         	movff	atoi@s,tblptrl
  9124  002032  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9125  002036                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9126  002036  6AF8               	clrf	tblptru,c
  9127  002038                     	endif
  9128  002038                     	if	0	;tblptru may be non-zero
  9129  002038                     	endif
  9130  002038  0008               	tblrd		*
  9131  00203A  50F5               	movf	tablat,w,c
  9132  00203C  0A20               	xorlw	32
  9133  00203E  B4D8               	btfsc	status,2,c
  9134  002040  EF24  F010         	goto	u3291
  9135  002044  EF26  F010         	goto	u3290
  9136  002048                     u3291:
  9137  002048  EF44  F010         	goto	l3573
  9138  00204C                     u3290:
  9139  00204C  0EF7               	movlw	247
  9140  00204E  6E0D               	movwf	??_atoi^0,c
  9141  002050  0EFF               	movlw	255
  9142  002052  6E0E               	movwf	(??_atoi+1)^0,c
  9143  002054  C00B  FFF6         	movff	atoi@s,tblptrl
  9144  002058  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9145  00205C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9146  00205C  6AF8               	clrf	tblptru,c
  9147  00205E                     	endif
  9148  00205E                     	if	0	;tblptru may be non-zero
  9149  00205E                     	endif
  9150  00205E  0008               	tblrd		*
  9151  002060  50F5               	movf	tablat,w,c
  9152  002062  6E0F               	movwf	(??_atoi+2)^0,c
  9153  002064  6A10               	clrf	(??_atoi+3)^0,c
  9154  002066  500D               	movf	??_atoi^0,w,c
  9155  002068  260F               	addwf	(??_atoi+2)^0,f,c
  9156  00206A  500E               	movf	(??_atoi+1)^0,w,c
  9157  00206C  2210               	addwfc	(??_atoi+3)^0,f,c
  9158  00206E  5010               	movf	(??_atoi+3)^0,w,c
  9159  002070  E109               	bnz	u3300
  9160  002072  0E05               	movlw	5
  9161  002074  5C0F               	subwf	(??_atoi+2)^0,w,c
  9162  002076  A0D8               	btfss	status,0,c
  9163  002078  EF40  F010         	goto	u3301
  9164  00207C  EF42  F010         	goto	u3300
  9165  002080                     u3301:
  9166  002080  EF44  F010         	goto	l3573
  9167  002084                     u3300:
  9168  002084  0E00               	movlw	0
  9169  002086  6E17               	movwf	_atoi$1876^0,c
  9170  002088                     l3573:
  9171  002088  C017  F013         	movff	_atoi$1876,_atoi$1875
  9172  00208C  6A14               	clrf	(_atoi$1875+1)^0,c
  9173  00208E  5013               	movf	_atoi$1875^0,w,c
  9174  002090  1014               	iorwf	(_atoi$1875+1)^0,w,c
  9175  002092  A4D8               	btfss	status,2,c
  9176  002094  EF4E  F010         	goto	u3311
  9177  002098  EF50  F010         	goto	u3310
  9178  00209C                     u3311:
  9179  00209C  EF13  F010         	goto	l3563
  9180  0020A0                     u3310:
  9181  0020A0  EF5A  F010         	goto	l3583
  9182  0020A4                     l3579:
  9183  0020A4  0E00               	movlw	0
  9184  0020A6  6E12               	movwf	(atoi@neg+1)^0,c
  9185  0020A8  0E01               	movlw	1
  9186  0020AA  6E11               	movwf	atoi@neg^0,c
  9187  0020AC                     l3581:
  9188  0020AC  4A0B               	infsnz	atoi@s^0,f,c
  9189  0020AE  2A0C               	incf	(atoi@s+1)^0,f,c
  9190  0020B0  EF91  F010         	goto	l3589
  9191  0020B4                     l3583:
  9192  0020B4  C00B  FFF6         	movff	atoi@s,tblptrl
  9193  0020B8  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9194  0020BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9195  0020BC  6AF8               	clrf	tblptru,c
  9196  0020BE                     	endif
  9197  0020BE                     	if	0	;tblptru may be non-zero
  9198  0020BE                     	endif
  9199  0020BE  0008               	tblrd		*
  9200  0020C0  50F5               	movf	tablat,w,c
  9201  0020C2  6E0D               	movwf	??_atoi^0,c
  9202  0020C4  6A0E               	clrf	(??_atoi+1)^0,c
  9203                           
  9204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9205                           ; Switch size 1, requested type "simple"
  9206                           ; Number of cases is 1, Range of values is 0 to 0
  9207                           ; switch strategies available:
  9208                           ; Name         Instructions Cycles
  9209                           ; simple_byte            4     3 (average)
  9210                           ;	Chosen strategy is simple_byte
  9211  0020C6  500E               	movf	(??_atoi+1)^0,w,c
  9212  0020C8  0A00               	xorlw	0	; case 0
  9213  0020CA  B4D8               	btfsc	status,2,c
  9214  0020CC  EF6A  F010         	goto	l4771
  9215  0020D0  EF91  F010         	goto	l3589
  9216  0020D4                     l4771:
  9217                           
  9218                           ; Switch size 1, requested type "simple"
  9219                           ; Number of cases is 2, Range of values is 43 to 45
  9220                           ; switch strategies available:
  9221                           ; Name         Instructions Cycles
  9222                           ; simple_byte            7     4 (average)
  9223                           ;	Chosen strategy is simple_byte
  9224  0020D4  500D               	movf	??_atoi^0,w,c
  9225  0020D6  0A2B               	xorlw	43	; case 43
  9226  0020D8  B4D8               	btfsc	status,2,c
  9227  0020DA  EF56  F010         	goto	l3581
  9228  0020DE  0A06               	xorlw	6	; case 45
  9229  0020E0  B4D8               	btfsc	status,2,c
  9230  0020E2  EF52  F010         	goto	l3579
  9231  0020E6  EF91  F010         	goto	l3589
  9232  0020EA                     l3585:
  9233  0020EA  C018  F004         	movff	atoi@n,___wmul@multiplier
  9234  0020EE  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  9235  0020F2  0E00               	movlw	0
  9236  0020F4  6E07               	movwf	(___wmul@multiplicand+1)^0,c
  9237  0020F6  0E0A               	movlw	10
  9238  0020F8  6E06               	movwf	___wmul@multiplicand^0,c
  9239  0020FA  EC9D  F01B         	call	___wmul	;wreg free
  9240  0020FE  C00B  FFF6         	movff	atoi@s,tblptrl
  9241  002102  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9242  002106                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9243  002106  6AF8               	clrf	tblptru,c
  9244  002108                     	endif
  9245  002108                     	if	0	;tblptru may be non-zero
  9246  002108                     	endif
  9247  002108  0008               	tblrd		*
  9248  00210A  50F5               	movf	tablat,w,c
  9249  00210C  5E04               	subwf	?___wmul^0,f,c
  9250  00210E  0E00               	movlw	0
  9251  002110  5A05               	subwfb	(?___wmul+1)^0,f,c
  9252  002112  0E30               	movlw	48
  9253  002114  2404               	addwf	?___wmul^0,w,c
  9254  002116  6E18               	movwf	atoi@n^0,c
  9255  002118  0E00               	movlw	0
  9256  00211A  2005               	addwfc	(?___wmul+1)^0,w,c
  9257  00211C  6E19               	movwf	(atoi@n+1)^0,c
  9258  00211E  EF56  F010         	goto	l3581
  9259  002122                     l3589:
  9260  002122  0ED0               	movlw	208
  9261  002124  6E0D               	movwf	??_atoi^0,c
  9262  002126  0EFF               	movlw	255
  9263  002128  6E0E               	movwf	(??_atoi+1)^0,c
  9264  00212A  C00B  FFF6         	movff	atoi@s,tblptrl
  9265  00212E  C00C  FFF7         	movff	atoi@s+1,tblptrh
  9266  002132                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9267  002132  6AF8               	clrf	tblptru,c
  9268  002134                     	endif
  9269  002134                     	if	0	;tblptru may be non-zero
  9270  002134                     	endif
  9271  002134  0008               	tblrd		*
  9272  002136  50F5               	movf	tablat,w,c
  9273  002138  6E0F               	movwf	(??_atoi+2)^0,c
  9274  00213A  6A10               	clrf	(??_atoi+3)^0,c
  9275  00213C  500D               	movf	??_atoi^0,w,c
  9276  00213E  260F               	addwf	(??_atoi+2)^0,f,c
  9277  002140  500E               	movf	(??_atoi+1)^0,w,c
  9278  002142  2210               	addwfc	(??_atoi+3)^0,f,c
  9279  002144  5010               	movf	(??_atoi+3)^0,w,c
  9280  002146  E10A               	bnz	u3320
  9281  002148  0E0A               	movlw	10
  9282  00214A  5C0F               	subwf	(??_atoi+2)^0,w,c
  9283  00214C  A0D8               	btfss	status,0,c
  9284  00214E  EFAB  F010         	goto	u3321
  9285  002152  EFAE  F010         	goto	u3320
  9286  002156                     u3321:
  9287  002156  0E01               	movlw	1
  9288  002158  EFAF  F010         	goto	u3330
  9289  00215C                     u3320:
  9290  00215C  0E00               	movlw	0
  9291  00215E                     u3330:
  9292  00215E  6E15               	movwf	_atoi$1877^0,c
  9293  002160  6A16               	clrf	(_atoi$1877+1)^0,c
  9294  002162  5015               	movf	_atoi$1877^0,w,c
  9295  002164  1016               	iorwf	(_atoi$1877+1)^0,w,c
  9296  002166  A4D8               	btfss	status,2,c
  9297  002168  EFB8  F010         	goto	u3341
  9298  00216C  EFBA  F010         	goto	u3340
  9299  002170                     u3341:
  9300  002170  EF75  F010         	goto	l3585
  9301  002174                     u3340:
  9302  002174  5011               	movf	atoi@neg^0,w,c
  9303  002176  1012               	iorwf	(atoi@neg+1)^0,w,c
  9304  002178  A4D8               	btfss	status,2,c
  9305  00217A  EFC1  F010         	goto	u3351
  9306  00217E  EFC3  F010         	goto	u3350
  9307  002182                     u3351:
  9308  002182  EFD1  F010         	goto	l1365
  9309  002186                     u3350:
  9310  002186  C018  F00D         	movff	atoi@n,??_atoi
  9311  00218A  C019  F00E         	movff	atoi@n+1,??_atoi+1
  9312  00218E  1E0D               	comf	??_atoi^0,f,c
  9313  002190  1E0E               	comf	(??_atoi+1)^0,f,c
  9314  002192  4A0D               	infsnz	??_atoi^0,f,c
  9315  002194  2A0E               	incf	(??_atoi+1)^0,f,c
  9316  002196  C00D  F00B         	movff	??_atoi,?_atoi
  9317  00219A  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  9318  00219E  EFD5  F010         	goto	l1368
  9319  0021A2                     l1365:
  9320  0021A2  C018  F00B         	movff	atoi@n,?_atoi
  9321  0021A6  C019  F00C         	movff	atoi@n+1,?_atoi+1
  9322  0021AA                     l1368:
  9323  0021AA  0012               	return		;funcret
  9324  0021AC                     __end_of_atoi:
  9325                           	opt callstack 0
  9326                           
  9327 ;; *************** function _isspace *****************
  9328 ;; Defined at:
  9329 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  c               2    3[COMRAM] int 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  2    3[COMRAM] int 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2, status,0
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;Total ram usage:        7 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; Hardware stack levels required when called:    4
  9350 ;; This function calls:
  9351 ;;		Nothing
  9352 ;; This function is called by:
  9353 ;;		_atoi
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text27
  9358  0032C8                     __ptext27:
  9359                           	opt callstack 0
  9360  0032C8                     _isspace:
  9361                           	opt callstack 21
  9362  0032C8  0E01               	movlw	1
  9363  0032CA  6E0A               	movwf	_isspace$1902^0,c
  9364  0032CC  0E20               	movlw	32
  9365  0032CE  1804               	xorwf	isspace@c^0,w,c
  9366  0032D0  1005               	iorwf	(isspace@c+1)^0,w,c
  9367  0032D2  B4D8               	btfsc	status,2,c
  9368  0032D4  EF6E  F019         	goto	u2671
  9369  0032D8  EF70  F019         	goto	u2670
  9370  0032DC                     u2671:
  9371  0032DC  EF89  F019         	goto	l3281
  9372  0032E0                     u2670:
  9373  0032E0  0EF7               	movlw	247
  9374  0032E2  6E06               	movwf	??_isspace^0,c
  9375  0032E4  0EFF               	movlw	255
  9376  0032E6  6E07               	movwf	(??_isspace+1)^0,c
  9377  0032E8  C004  F008         	movff	isspace@c,??_isspace+2
  9378  0032EC  C005  F009         	movff	isspace@c+1,??_isspace+3
  9379  0032F0  5006               	movf	??_isspace^0,w,c
  9380  0032F2  2608               	addwf	(??_isspace+2)^0,f,c
  9381  0032F4  5007               	movf	(??_isspace+1)^0,w,c
  9382  0032F6  2209               	addwfc	(??_isspace+3)^0,f,c
  9383  0032F8  5009               	movf	(??_isspace+3)^0,w,c
  9384  0032FA  E109               	bnz	u2680
  9385  0032FC  0E05               	movlw	5
  9386  0032FE  5C08               	subwf	(??_isspace+2)^0,w,c
  9387  003300  A0D8               	btfss	status,0,c
  9388  003302  EF85  F019         	goto	u2681
  9389  003306  EF87  F019         	goto	u2680
  9390  00330A                     u2681:
  9391  00330A  EF89  F019         	goto	l3281
  9392  00330E                     u2680:
  9393  00330E  0E00               	movlw	0
  9394  003310  6E0A               	movwf	_isspace$1902^0,c
  9395  003312                     l3281:
  9396  003312  C00A  F004         	movff	_isspace$1902,?_isspace
  9397  003316  6A05               	clrf	(?_isspace+1)^0,c
  9398  003318  0012               	return		;funcret
  9399  00331A                     __end_of_isspace:
  9400                           	opt callstack 0
  9401                           
  9402 ;; *************** function _isdigit *****************
  9403 ;; Defined at:
  9404 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  c               2    3[COMRAM] int 
  9407 ;; Auto vars:     Size  Location     Type
  9408 ;;		None
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  2    3[COMRAM] int 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9422 ;;Total ram usage:        6 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:    4
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_vfpfcnvrt
  9429 ;;		_atoi
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text28
  9434  0035A8                     __ptext28:
  9435                           	opt callstack 0
  9436  0035A8                     _isdigit:
  9437                           	opt callstack 22
  9438  0035A8  0ED0               	movlw	208
  9439  0035AA  6E06               	movwf	??_isdigit^0,c
  9440  0035AC  0EFF               	movlw	255
  9441  0035AE  6E07               	movwf	(??_isdigit+1)^0,c
  9442  0035B0  C004  F008         	movff	isdigit@c,??_isdigit+2
  9443  0035B4  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  9444  0035B8  5006               	movf	??_isdigit^0,w,c
  9445  0035BA  2608               	addwf	(??_isdigit+2)^0,f,c
  9446  0035BC  5007               	movf	(??_isdigit+1)^0,w,c
  9447  0035BE  2209               	addwfc	(??_isdigit+3)^0,f,c
  9448  0035C0  5009               	movf	(??_isdigit+3)^0,w,c
  9449  0035C2  E10A               	bnz	u2450
  9450  0035C4  0E0A               	movlw	10
  9451  0035C6  5C08               	subwf	(??_isdigit+2)^0,w,c
  9452  0035C8  A0D8               	btfss	status,0,c
  9453  0035CA  EFE9  F01A         	goto	u2451
  9454  0035CE  EFEC  F01A         	goto	u2450
  9455  0035D2                     u2451:
  9456  0035D2  0E01               	movlw	1
  9457  0035D4  EFED  F01A         	goto	u2460
  9458  0035D8                     u2450:
  9459  0035D8  0E00               	movlw	0
  9460  0035DA                     u2460:
  9461  0035DA  6E04               	movwf	?_isdigit^0,c
  9462  0035DC  6A05               	clrf	(?_isdigit+1)^0,c
  9463  0035DE  0012               	return		;funcret
  9464  0035E0                     __end_of_isdigit:
  9465                           	opt callstack 0
  9466                           
  9467 ;; *************** function ___wmul *****************
  9468 ;; Defined at:
  9469 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;  multiplier      2    3[COMRAM] unsigned int 
  9472 ;;  multiplicand    2    5[COMRAM] unsigned int 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;  product         2    7[COMRAM] unsigned int 
  9475 ;; Return value:  Size  Location     Type
  9476 ;;                  2    3[COMRAM] unsigned int 
  9477 ;; Registers used:
  9478 ;;		wreg, status,2, status,0, prodl, prodh
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9488 ;;Total ram usage:        6 bytes
  9489 ;; Hardware stack levels used:    1
  9490 ;; Hardware stack levels required when called:    4
  9491 ;; This function calls:
  9492 ;;		Nothing
  9493 ;; This function is called by:
  9494 ;;		_atoi
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498                           	psect	text29
  9499  00373A                     __ptext29:
  9500                           	opt callstack 0
  9501  00373A                     ___wmul:
  9502                           	opt callstack 21
  9503  00373A  5004               	movf	___wmul@multiplier^0,w,c
  9504  00373C  0206               	mulwf	___wmul@multiplicand^0,c
  9505  00373E  CFF3 F008          	movff	prodl,___wmul@product
  9506  003742  CFF4 F009          	movff	prodh,___wmul@product+1
  9507  003746  5004               	movf	___wmul@multiplier^0,w,c
  9508  003748  0207               	mulwf	(___wmul@multiplicand+1)^0,c
  9509  00374A  50F3               	movf	243,w,c
  9510  00374C  2609               	addwf	(___wmul@product+1)^0,f,c
  9511  00374E  5005               	movf	(___wmul@multiplier+1)^0,w,c
  9512  003750  0206               	mulwf	___wmul@multiplicand^0,c
  9513  003752  50F3               	movf	243,w,c
  9514  003754  2609               	addwf	(___wmul@product+1)^0,f,c
  9515  003756  C008  F004         	movff	___wmul@product,?___wmul
  9516  00375A  C009  F005         	movff	___wmul@product+1,?___wmul+1
  9517  00375E  0012               	return		;funcret
  9518  003760                     __end_of___wmul:
  9519                           	opt callstack 0
  9520                           
  9521 ;; *************** function _lcd_init *****************
  9522 ;; Defined at:
  9523 ;;		line 32 in file "lib_ili9341.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;		None
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;		None
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      void 
  9530 ;; Registers used:
  9531 ;;		wreg, status,2, status,0, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9541 ;;Total ram usage:        0 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:    9
  9544 ;; This function calls:
  9545 ;;		_lcd_fill
  9546 ;;		_lcd_send
  9547 ;;		_msDelay
  9548 ;; This function is called by:
  9549 ;;		_main
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text30
  9554  0012F0                     __ptext30:
  9555                           	opt callstack 0
  9556  0012F0                     _lcd_init:
  9557                           	opt callstack 21
  9558  0012F0                     
  9559                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
  9560  0012F0  0E01               	movlw	1
  9561  0012F2  6E05               	movwf	lcd_send@value^0,c
  9562  0012F4  0E00               	movlw	0
  9563  0012F6  ECCF  F01B         	call	_lcd_send
  9564  0012FA                     
  9565                           ;lib_ili9341.c: 36:     msDelay(150);
  9566  0012FA  0E96               	movlw	150
  9567  0012FC  EC6F  F01B         	call	_msDelay
  9568  001300                     
  9569                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
  9570  001300  0EEF               	movlw	239
  9571  001302  6E05               	movwf	lcd_send@value^0,c
  9572  001304  0E00               	movlw	0
  9573  001306  ECCF  F01B         	call	_lcd_send
  9574  00130A                     
  9575                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
  9576  00130A  0E03               	movlw	3
  9577  00130C  6E05               	movwf	lcd_send@value^0,c
  9578  00130E  0E01               	movlw	1
  9579  001310  ECCF  F01B         	call	_lcd_send
  9580  001314                     
  9581                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
  9582  001314  0E80               	movlw	128
  9583  001316  6E05               	movwf	lcd_send@value^0,c
  9584  001318  0E01               	movlw	1
  9585  00131A  ECCF  F01B         	call	_lcd_send
  9586  00131E                     
  9587                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
  9588  00131E  0E02               	movlw	2
  9589  001320  6E05               	movwf	lcd_send@value^0,c
  9590  001322  0E01               	movlw	1
  9591  001324  ECCF  F01B         	call	_lcd_send
  9592  001328                     
  9593                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
  9594  001328  0ECF               	movlw	207
  9595  00132A  6E05               	movwf	lcd_send@value^0,c
  9596  00132C  0E00               	movlw	0
  9597  00132E  ECCF  F01B         	call	_lcd_send
  9598  001332                     
  9599                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
  9600  001332  0E00               	movlw	0
  9601  001334  6E05               	movwf	lcd_send@value^0,c
  9602  001336  0E01               	movlw	1
  9603  001338  ECCF  F01B         	call	_lcd_send
  9604  00133C                     
  9605                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
  9606  00133C  0EC1               	movlw	193
  9607  00133E  6E05               	movwf	lcd_send@value^0,c
  9608  001340  0E01               	movlw	1
  9609  001342  ECCF  F01B         	call	_lcd_send
  9610  001346                     
  9611                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
  9612  001346  0E30               	movlw	48
  9613  001348  6E05               	movwf	lcd_send@value^0,c
  9614  00134A  0E01               	movlw	1
  9615  00134C  ECCF  F01B         	call	_lcd_send
  9616  001350                     
  9617                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
  9618  001350  0EED               	movlw	237
  9619  001352  6E05               	movwf	lcd_send@value^0,c
  9620  001354  0E00               	movlw	0
  9621  001356  ECCF  F01B         	call	_lcd_send
  9622  00135A                     
  9623                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
  9624  00135A  0E64               	movlw	100
  9625  00135C  6E05               	movwf	lcd_send@value^0,c
  9626  00135E  0E01               	movlw	1
  9627  001360  ECCF  F01B         	call	_lcd_send
  9628  001364                     
  9629                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
  9630  001364  0E03               	movlw	3
  9631  001366  6E05               	movwf	lcd_send@value^0,c
  9632  001368  0E01               	movlw	1
  9633  00136A  ECCF  F01B         	call	_lcd_send
  9634  00136E                     
  9635                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
  9636  00136E  0E12               	movlw	18
  9637  001370  6E05               	movwf	lcd_send@value^0,c
  9638  001372  0E01               	movlw	1
  9639  001374  ECCF  F01B         	call	_lcd_send
  9640  001378                     
  9641                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
  9642  001378  0E81               	movlw	129
  9643  00137A  6E05               	movwf	lcd_send@value^0,c
  9644  00137C  0E01               	movlw	1
  9645  00137E  ECCF  F01B         	call	_lcd_send
  9646  001382                     
  9647                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
  9648  001382  0EE8               	movlw	232
  9649  001384  6E05               	movwf	lcd_send@value^0,c
  9650  001386  0E00               	movlw	0
  9651  001388  ECCF  F01B         	call	_lcd_send
  9652  00138C                     
  9653                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
  9654  00138C  0E85               	movlw	133
  9655  00138E  6E05               	movwf	lcd_send@value^0,c
  9656  001390  0E01               	movlw	1
  9657  001392  ECCF  F01B         	call	_lcd_send
  9658  001396                     
  9659                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
  9660  001396  0E00               	movlw	0
  9661  001398  6E05               	movwf	lcd_send@value^0,c
  9662  00139A  0E01               	movlw	1
  9663  00139C  ECCF  F01B         	call	_lcd_send
  9664  0013A0                     
  9665                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
  9666  0013A0  0E78               	movlw	120
  9667  0013A2  6E05               	movwf	lcd_send@value^0,c
  9668  0013A4  0E01               	movlw	1
  9669  0013A6  ECCF  F01B         	call	_lcd_send
  9670  0013AA                     
  9671                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
  9672  0013AA  0ECB               	movlw	203
  9673  0013AC  6E05               	movwf	lcd_send@value^0,c
  9674  0013AE  0E00               	movlw	0
  9675  0013B0  ECCF  F01B         	call	_lcd_send
  9676  0013B4                     
  9677                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
  9678  0013B4  0E39               	movlw	57
  9679  0013B6  6E05               	movwf	lcd_send@value^0,c
  9680  0013B8  0E01               	movlw	1
  9681  0013BA  ECCF  F01B         	call	_lcd_send
  9682  0013BE                     
  9683                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
  9684  0013BE  0E2C               	movlw	44
  9685  0013C0  6E05               	movwf	lcd_send@value^0,c
  9686  0013C2  0E01               	movlw	1
  9687  0013C4  ECCF  F01B         	call	_lcd_send
  9688  0013C8                     
  9689                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
  9690  0013C8  0E00               	movlw	0
  9691  0013CA  6E05               	movwf	lcd_send@value^0,c
  9692  0013CC  0E01               	movlw	1
  9693  0013CE  ECCF  F01B         	call	_lcd_send
  9694  0013D2                     
  9695                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
  9696  0013D2  0E34               	movlw	52
  9697  0013D4  6E05               	movwf	lcd_send@value^0,c
  9698  0013D6  0E01               	movlw	1
  9699  0013D8  ECCF  F01B         	call	_lcd_send
  9700  0013DC                     
  9701                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
  9702  0013DC  0E02               	movlw	2
  9703  0013DE  6E05               	movwf	lcd_send@value^0,c
  9704  0013E0  0E01               	movlw	1
  9705  0013E2  ECCF  F01B         	call	_lcd_send
  9706  0013E6                     
  9707                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
  9708  0013E6  0EF7               	movlw	247
  9709  0013E8  6E05               	movwf	lcd_send@value^0,c
  9710  0013EA  0E00               	movlw	0
  9711  0013EC  ECCF  F01B         	call	_lcd_send
  9712  0013F0                     
  9713                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
  9714  0013F0  0E20               	movlw	32
  9715  0013F2  6E05               	movwf	lcd_send@value^0,c
  9716  0013F4  0E01               	movlw	1
  9717  0013F6  ECCF  F01B         	call	_lcd_send
  9718  0013FA                     
  9719                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
  9720  0013FA  0EEA               	movlw	234
  9721  0013FC  6E05               	movwf	lcd_send@value^0,c
  9722  0013FE  0E00               	movlw	0
  9723  001400  ECCF  F01B         	call	_lcd_send
  9724  001404                     
  9725                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
  9726  001404  0E00               	movlw	0
  9727  001406  6E05               	movwf	lcd_send@value^0,c
  9728  001408  0E01               	movlw	1
  9729  00140A  ECCF  F01B         	call	_lcd_send
  9730  00140E                     
  9731                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
  9732  00140E  0E00               	movlw	0
  9733  001410  6E05               	movwf	lcd_send@value^0,c
  9734  001412  0E01               	movlw	1
  9735  001414  ECCF  F01B         	call	_lcd_send
  9736  001418                     
  9737                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
  9738  001418  0EC0               	movlw	192
  9739  00141A  6E05               	movwf	lcd_send@value^0,c
  9740  00141C  0E00               	movlw	0
  9741  00141E  ECCF  F01B         	call	_lcd_send
  9742  001422                     
  9743                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
  9744  001422  0E23               	movlw	35
  9745  001424  6E05               	movwf	lcd_send@value^0,c
  9746  001426  0E01               	movlw	1
  9747  001428  ECCF  F01B         	call	_lcd_send
  9748  00142C                     
  9749                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
  9750  00142C  0EC1               	movlw	193
  9751  00142E  6E05               	movwf	lcd_send@value^0,c
  9752  001430  0E00               	movlw	0
  9753  001432  ECCF  F01B         	call	_lcd_send
  9754  001436                     
  9755                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
  9756  001436  0E10               	movlw	16
  9757  001438  6E05               	movwf	lcd_send@value^0,c
  9758  00143A  0E01               	movlw	1
  9759  00143C  ECCF  F01B         	call	_lcd_send
  9760  001440                     
  9761                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
  9762  001440  0EC5               	movlw	197
  9763  001442  6E05               	movwf	lcd_send@value^0,c
  9764  001444  0E00               	movlw	0
  9765  001446  ECCF  F01B         	call	_lcd_send
  9766  00144A                     
  9767                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
  9768  00144A  0E3E               	movlw	62
  9769  00144C  6E05               	movwf	lcd_send@value^0,c
  9770  00144E  0E01               	movlw	1
  9771  001450  ECCF  F01B         	call	_lcd_send
  9772  001454                     
  9773                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
  9774  001454  0E28               	movlw	40
  9775  001456  6E05               	movwf	lcd_send@value^0,c
  9776  001458  0E01               	movlw	1
  9777  00145A  ECCF  F01B         	call	_lcd_send
  9778  00145E                     
  9779                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
  9780  00145E  0EC7               	movlw	199
  9781  001460  6E05               	movwf	lcd_send@value^0,c
  9782  001462  0E00               	movlw	0
  9783  001464  ECCF  F01B         	call	_lcd_send
  9784  001468                     
  9785                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
  9786  001468  0E86               	movlw	134
  9787  00146A  6E05               	movwf	lcd_send@value^0,c
  9788  00146C  0E01               	movlw	1
  9789  00146E  ECCF  F01B         	call	_lcd_send
  9790  001472                     
  9791                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
  9792  001472  0E36               	movlw	54
  9793  001474  6E05               	movwf	lcd_send@value^0,c
  9794  001476  0E00               	movlw	0
  9795  001478  ECCF  F01B         	call	_lcd_send
  9796  00147C                     
  9797                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
  9798  00147C  0E48               	movlw	72
  9799  00147E  6E05               	movwf	lcd_send@value^0,c
  9800  001480  0E01               	movlw	1
  9801  001482  ECCF  F01B         	call	_lcd_send
  9802  001486                     
  9803                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
  9804  001486  0E3A               	movlw	58
  9805  001488  6E05               	movwf	lcd_send@value^0,c
  9806  00148A  0E00               	movlw	0
  9807  00148C  ECCF  F01B         	call	_lcd_send
  9808  001490                     
  9809                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
  9810  001490  0E55               	movlw	85
  9811  001492  6E05               	movwf	lcd_send@value^0,c
  9812  001494  0E01               	movlw	1
  9813  001496  ECCF  F01B         	call	_lcd_send
  9814  00149A                     
  9815                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
  9816  00149A  0EB1               	movlw	177
  9817  00149C  6E05               	movwf	lcd_send@value^0,c
  9818  00149E  0E00               	movlw	0
  9819  0014A0  ECCF  F01B         	call	_lcd_send
  9820  0014A4                     
  9821                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
  9822  0014A4  0E00               	movlw	0
  9823  0014A6  6E05               	movwf	lcd_send@value^0,c
  9824  0014A8  0E01               	movlw	1
  9825  0014AA  ECCF  F01B         	call	_lcd_send
  9826  0014AE                     
  9827                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
  9828  0014AE  0E18               	movlw	24
  9829  0014B0  6E05               	movwf	lcd_send@value^0,c
  9830  0014B2  0E01               	movlw	1
  9831  0014B4  ECCF  F01B         	call	_lcd_send
  9832  0014B8                     
  9833                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
  9834  0014B8  0EB6               	movlw	182
  9835  0014BA  6E05               	movwf	lcd_send@value^0,c
  9836  0014BC  0E00               	movlw	0
  9837  0014BE  ECCF  F01B         	call	_lcd_send
  9838  0014C2                     
  9839                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
  9840  0014C2  0E08               	movlw	8
  9841  0014C4  6E05               	movwf	lcd_send@value^0,c
  9842  0014C6  0E01               	movlw	1
  9843  0014C8  ECCF  F01B         	call	_lcd_send
  9844  0014CC                     
  9845                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
  9846  0014CC  0E82               	movlw	130
  9847  0014CE  6E05               	movwf	lcd_send@value^0,c
  9848  0014D0  0E01               	movlw	1
  9849  0014D2  ECCF  F01B         	call	_lcd_send
  9850  0014D6                     
  9851                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
  9852  0014D6  0E27               	movlw	39
  9853  0014D8  6E05               	movwf	lcd_send@value^0,c
  9854  0014DA  0E01               	movlw	1
  9855  0014DC  ECCF  F01B         	call	_lcd_send
  9856  0014E0                     
  9857                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
  9858  0014E0  0EF2               	movlw	242
  9859  0014E2  6E05               	movwf	lcd_send@value^0,c
  9860  0014E4  0E00               	movlw	0
  9861  0014E6  ECCF  F01B         	call	_lcd_send
  9862  0014EA                     
  9863                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
  9864  0014EA  0E00               	movlw	0
  9865  0014EC  6E05               	movwf	lcd_send@value^0,c
  9866  0014EE  0E01               	movlw	1
  9867  0014F0  ECCF  F01B         	call	_lcd_send
  9868  0014F4                     
  9869                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
  9870  0014F4  0E26               	movlw	38
  9871  0014F6  6E05               	movwf	lcd_send@value^0,c
  9872  0014F8  0E00               	movlw	0
  9873  0014FA  ECCF  F01B         	call	_lcd_send
  9874  0014FE                     
  9875                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
  9876  0014FE  0E01               	movlw	1
  9877  001500  6E05               	movwf	lcd_send@value^0,c
  9878  001502  0E01               	movlw	1
  9879  001504  ECCF  F01B         	call	_lcd_send
  9880  001508                     
  9881                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
  9882  001508  0EE0               	movlw	224
  9883  00150A  6E05               	movwf	lcd_send@value^0,c
  9884  00150C  0E00               	movlw	0
  9885  00150E  ECCF  F01B         	call	_lcd_send
  9886  001512                     
  9887                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
  9888  001512  0E0F               	movlw	15
  9889  001514  6E05               	movwf	lcd_send@value^0,c
  9890  001516  0E01               	movlw	1
  9891  001518  ECCF  F01B         	call	_lcd_send
  9892  00151C                     
  9893                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
  9894  00151C  0E31               	movlw	49
  9895  00151E  6E05               	movwf	lcd_send@value^0,c
  9896  001520  0E01               	movlw	1
  9897  001522  ECCF  F01B         	call	_lcd_send
  9898  001526                     
  9899                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
  9900  001526  0E2B               	movlw	43
  9901  001528  6E05               	movwf	lcd_send@value^0,c
  9902  00152A  0E01               	movlw	1
  9903  00152C  ECCF  F01B         	call	_lcd_send
  9904  001530                     
  9905                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
  9906  001530  0E0C               	movlw	12
  9907  001532  6E05               	movwf	lcd_send@value^0,c
  9908  001534  0E01               	movlw	1
  9909  001536  ECCF  F01B         	call	_lcd_send
  9910  00153A                     
  9911                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
  9912  00153A  0E0E               	movlw	14
  9913  00153C  6E05               	movwf	lcd_send@value^0,c
  9914  00153E  0E01               	movlw	1
  9915  001540  ECCF  F01B         	call	_lcd_send
  9916  001544                     
  9917                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
  9918  001544  0E08               	movlw	8
  9919  001546  6E05               	movwf	lcd_send@value^0,c
  9920  001548  0E01               	movlw	1
  9921  00154A  ECCF  F01B         	call	_lcd_send
  9922  00154E                     
  9923                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
  9924  00154E  0E4E               	movlw	78
  9925  001550  6E05               	movwf	lcd_send@value^0,c
  9926  001552  0E01               	movlw	1
  9927  001554  ECCF  F01B         	call	_lcd_send
  9928  001558                     
  9929                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
  9930  001558  0EF1               	movlw	241
  9931  00155A  6E05               	movwf	lcd_send@value^0,c
  9932  00155C  0E01               	movlw	1
  9933  00155E  ECCF  F01B         	call	_lcd_send
  9934  001562                     
  9935                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
  9936  001562  0E37               	movlw	55
  9937  001564  6E05               	movwf	lcd_send@value^0,c
  9938  001566  0E01               	movlw	1
  9939  001568  ECCF  F01B         	call	_lcd_send
  9940  00156C                     
  9941                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
  9942  00156C  0E07               	movlw	7
  9943  00156E  6E05               	movwf	lcd_send@value^0,c
  9944  001570  0E01               	movlw	1
  9945  001572  ECCF  F01B         	call	_lcd_send
  9946  001576                     
  9947                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
  9948  001576  0E10               	movlw	16
  9949  001578  6E05               	movwf	lcd_send@value^0,c
  9950  00157A  0E01               	movlw	1
  9951  00157C  ECCF  F01B         	call	_lcd_send
  9952  001580                     
  9953                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
  9954  001580  0E03               	movlw	3
  9955  001582  6E05               	movwf	lcd_send@value^0,c
  9956  001584  0E01               	movlw	1
  9957  001586  ECCF  F01B         	call	_lcd_send
  9958  00158A                     
  9959                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
  9960  00158A  0E0E               	movlw	14
  9961  00158C  6E05               	movwf	lcd_send@value^0,c
  9962  00158E  0E01               	movlw	1
  9963  001590  ECCF  F01B         	call	_lcd_send
  9964  001594                     
  9965                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
  9966  001594  0E09               	movlw	9
  9967  001596  6E05               	movwf	lcd_send@value^0,c
  9968  001598  0E01               	movlw	1
  9969  00159A  ECCF  F01B         	call	_lcd_send
  9970  00159E                     
  9971                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
  9972  00159E  0E00               	movlw	0
  9973  0015A0  6E05               	movwf	lcd_send@value^0,c
  9974  0015A2  0E01               	movlw	1
  9975  0015A4  ECCF  F01B         	call	_lcd_send
  9976  0015A8                     
  9977                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
  9978  0015A8  0EE1               	movlw	225
  9979  0015AA  6E05               	movwf	lcd_send@value^0,c
  9980  0015AC  0E00               	movlw	0
  9981  0015AE  ECCF  F01B         	call	_lcd_send
  9982  0015B2                     
  9983                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
  9984  0015B2  0E00               	movlw	0
  9985  0015B4  6E05               	movwf	lcd_send@value^0,c
  9986  0015B6  0E01               	movlw	1
  9987  0015B8  ECCF  F01B         	call	_lcd_send
  9988  0015BC                     
  9989                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
  9990  0015BC  0E0E               	movlw	14
  9991  0015BE  6E05               	movwf	lcd_send@value^0,c
  9992  0015C0  0E01               	movlw	1
  9993  0015C2  ECCF  F01B         	call	_lcd_send
  9994  0015C6                     
  9995                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
  9996  0015C6  0E14               	movlw	20
  9997  0015C8  6E05               	movwf	lcd_send@value^0,c
  9998  0015CA  0E01               	movlw	1
  9999  0015CC  ECCF  F01B         	call	_lcd_send
 10000  0015D0                     
 10001                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 10002  0015D0  0E03               	movlw	3
 10003  0015D2  6E05               	movwf	lcd_send@value^0,c
 10004  0015D4  0E01               	movlw	1
 10005  0015D6  ECCF  F01B         	call	_lcd_send
 10006  0015DA                     
 10007                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 10008  0015DA  0E11               	movlw	17
 10009  0015DC  6E05               	movwf	lcd_send@value^0,c
 10010  0015DE  0E01               	movlw	1
 10011  0015E0  ECCF  F01B         	call	_lcd_send
 10012  0015E4                     
 10013                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 10014  0015E4  0E07               	movlw	7
 10015  0015E6  6E05               	movwf	lcd_send@value^0,c
 10016  0015E8  0E01               	movlw	1
 10017  0015EA  ECCF  F01B         	call	_lcd_send
 10018  0015EE                     
 10019                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 10020  0015EE  0E31               	movlw	49
 10021  0015F0  6E05               	movwf	lcd_send@value^0,c
 10022  0015F2  0E01               	movlw	1
 10023  0015F4  ECCF  F01B         	call	_lcd_send
 10024  0015F8                     
 10025                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 10026  0015F8  0EC1               	movlw	193
 10027  0015FA  6E05               	movwf	lcd_send@value^0,c
 10028  0015FC  0E01               	movlw	1
 10029  0015FE  ECCF  F01B         	call	_lcd_send
 10030  001602                     
 10031                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 10032  001602  0E48               	movlw	72
 10033  001604  6E05               	movwf	lcd_send@value^0,c
 10034  001606  0E01               	movlw	1
 10035  001608  ECCF  F01B         	call	_lcd_send
 10036  00160C                     
 10037                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 10038  00160C  0E08               	movlw	8
 10039  00160E  6E05               	movwf	lcd_send@value^0,c
 10040  001610  0E01               	movlw	1
 10041  001612  ECCF  F01B         	call	_lcd_send
 10042  001616                     
 10043                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 10044  001616  0E0F               	movlw	15
 10045  001618  6E05               	movwf	lcd_send@value^0,c
 10046  00161A  0E01               	movlw	1
 10047  00161C  ECCF  F01B         	call	_lcd_send
 10048  001620                     
 10049                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 10050  001620  0E0C               	movlw	12
 10051  001622  6E05               	movwf	lcd_send@value^0,c
 10052  001624  0E01               	movlw	1
 10053  001626  ECCF  F01B         	call	_lcd_send
 10054  00162A                     
 10055                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 10056  00162A  0E31               	movlw	49
 10057  00162C  6E05               	movwf	lcd_send@value^0,c
 10058  00162E  0E01               	movlw	1
 10059  001630  ECCF  F01B         	call	_lcd_send
 10060  001634                     
 10061                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 10062  001634  0E36               	movlw	54
 10063  001636  6E05               	movwf	lcd_send@value^0,c
 10064  001638  0E01               	movlw	1
 10065  00163A  ECCF  F01B         	call	_lcd_send
 10066  00163E                     
 10067                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 10068  00163E  0E0F               	movlw	15
 10069  001640  6E05               	movwf	lcd_send@value^0,c
 10070  001642  0E01               	movlw	1
 10071  001644  ECCF  F01B         	call	_lcd_send
 10072  001648                     
 10073                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 10074  001648  0E11               	movlw	17
 10075  00164A  6E05               	movwf	lcd_send@value^0,c
 10076  00164C  0E00               	movlw	0
 10077  00164E  ECCF  F01B         	call	_lcd_send
 10078                           
 10079                           ;lib_ili9341.c: 123:     msDelay(120);
 10080  001652  0E78               	movlw	120
 10081  001654  EC6F  F01B         	call	_msDelay
 10082  001658                     
 10083                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 10084  001658  0E29               	movlw	41
 10085  00165A  6E05               	movwf	lcd_send@value^0,c
 10086  00165C  0E00               	movlw	0
 10087  00165E  ECCF  F01B         	call	_lcd_send
 10088  001662                     
 10089                           ;lib_ili9341.c: 125:     msDelay(120);
 10090  001662  0E78               	movlw	120
 10091  001664  EC6F  F01B         	call	_msDelay
 10092  001668                     
 10093                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 10094  001668  0E00               	movlw	0
 10095  00166A  6E0E               	movwf	(lcd_fill@bg_color+1)^0,c
 10096  00166C  0E00               	movlw	0
 10097  00166E  6E0D               	movwf	lcd_fill@bg_color^0,c
 10098  001670  EC95  F018         	call	_lcd_fill	;wreg free
 10099  001674  0012               	return		;funcret
 10100  001676                     __end_of_lcd_init:
 10101                           	opt callstack 0
 10102                           
 10103 ;; *************** function _msDelay *****************
 10104 ;; Defined at:
 10105 ;;		line 14 in file "lib_ili9341.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  ms              1    wreg     unsigned char 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  ms              1    4[COMRAM] unsigned char 
 10110 ;;  k               1    5[COMRAM] unsigned char 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		wreg, status,2, status,0
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10124 ;;Total ram usage:        3 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:    4
 10127 ;; This function calls:
 10128 ;;		Nothing
 10129 ;; This function is called by:
 10130 ;;		_lcd_init
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text31
 10135  0036DE                     __ptext31:
 10136                           	opt callstack 0
 10137  0036DE                     _msDelay:
 10138                           	opt callstack 25
 10139                           
 10140                           ;incstack = 0
 10141                           ;msDelay@ms stored from wreg
 10142  0036DE  6E05               	movwf	msDelay@ms^0,c
 10143  0036E0                     
 10144                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 10145  0036E0  0E00               	movlw	0
 10146  0036E2  6E06               	movwf	msDelay@k^0,c
 10147  0036E4  EF7C  F01B         	goto	l4059
 10148  0036E8                     l4055:
 10149                           
 10150                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 10151  0036E8  0E03               	movlw	3
 10152  0036EA  6E04               	movwf	??_msDelay^0,c
 10153  0036EC  0E98               	movlw	152
 10154  0036EE                     u4487:
 10155  0036EE  2EE8               	decfsz	wreg,f,c
 10156  0036F0  D7FE               	bra	u4487
 10157  0036F2  2E04               	decfsz	??_msDelay^0,f,c
 10158  0036F4  D7FC               	bra	u4487
 10159  0036F6                     
 10160                           ;lib_ili9341.c: 21:     }
 10161  0036F6  2A06               	incf	msDelay@k^0,f,c
 10162  0036F8                     l4059:
 10163  0036F8  5005               	movf	msDelay@ms^0,w,c
 10164  0036FA  5C06               	subwf	msDelay@k^0,w,c
 10165  0036FC  A0D8               	btfss	status,0,c
 10166  0036FE  EF83  F01B         	goto	u3951
 10167  003702  EF85  F01B         	goto	u3950
 10168  003706                     u3951:
 10169  003706  EF74  F01B         	goto	l4055
 10170  00370A                     u3950:
 10171  00370A  0012               	return		;funcret
 10172  00370C                     __end_of_msDelay:
 10173                           	opt callstack 0
 10174                           
 10175 ;; *************** function _lcd_fill *****************
 10176 ;; Defined at:
 10177 ;;		line 191 in file "lib_ili9341.c"
 10178 ;; Parameters:    Size  Location     Type
 10179 ;;  bg_color        2   12[COMRAM] unsigned short 
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;  width           2   16[COMRAM] unsigned short 
 10182 ;;  height          2   14[COMRAM] unsigned short 
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		wreg, status,2, status,0, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10196 ;;Total ram usage:        6 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    8
 10199 ;; This function calls:
 10200 ;;		_lcd_draw_pixel
 10201 ;;		_lcd_set_cursor
 10202 ;; This function is called by:
 10203 ;;		_lcd_init
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text32
 10208  00312A                     __ptext32:
 10209                           	opt callstack 0
 10210  00312A                     _lcd_fill:
 10211                           	opt callstack 21
 10212  00312A                     
 10213                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 10214  00312A  0E01               	movlw	1
 10215  00312C  6E12               	movwf	(lcd_fill@width+1)^0,c
 10216  00312E  0E40               	movlw	64
 10217  003130  6E11               	movwf	lcd_fill@width^0,c
 10218  003132  0E00               	movlw	0
 10219  003134  6E10               	movwf	(lcd_fill@height+1)^0,c
 10220  003136  0EF0               	movlw	240
 10221  003138  6E0F               	movwf	lcd_fill@height^0,c
 10222  00313A                     
 10223                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 10224  00313A  0E00               	movlw	0
 10225  00313C  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 10226  00313E  0E00               	movlw	0
 10227  003140  6E09               	movwf	lcd_set_cursor@x^0,c
 10228  003142  0E00               	movlw	0
 10229  003144  6E0C               	movwf	(lcd_set_cursor@y+1)^0,c
 10230  003146  0E00               	movlw	0
 10231  003148  6E0B               	movwf	lcd_set_cursor@y^0,c
 10232  00314A  EC3D  F01A         	call	_lcd_set_cursor	;wreg free
 10233  00314E  0900               	iorlw	0
 10234  003150  B4D8               	btfsc	status,2,c
 10235  003152  EFAD  F018         	goto	u3961
 10236  003156  EFAF  F018         	goto	u3960
 10237  00315A                     u3961:
 10238  00315A  EFC8  F018         	goto	l4073
 10239  00315E                     u3960:
 10240  00315E  EFD5  F018         	goto	l335
 10241  003162                     l4067:
 10242                           
 10243                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 10244  003162  C00D  F007         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 10245  003166  C00E  F008         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 10246  00316A  ECE7  F01B         	call	_lcd_draw_pixel	;wreg free
 10247  00316E                     l4069:
 10248                           
 10249                           ;lib_ili9341.c: 202:         while(width--)
 10250  00316E  0611               	decf	lcd_fill@width^0,f,c
 10251  003170  A0D8               	btfss	status,0,c
 10252  003172  0612               	decf	(lcd_fill@width+1)^0,f,c
 10253  003174  2811               	incf	lcd_fill@width^0,w,c
 10254  003176  E106               	bnz	u3971
 10255  003178  2812               	incf	(lcd_fill@width+1)^0,w,c
 10256  00317A  A4D8               	btfss	status,2,c
 10257  00317C  EFC2  F018         	goto	u3971
 10258  003180  EFC4  F018         	goto	u3970
 10259  003184                     u3971:
 10260  003184  EFB1  F018         	goto	l4067
 10261  003188                     u3970:
 10262  003188                     
 10263                           ;lib_ili9341.c: 206:         width = 320;
 10264  003188  0E01               	movlw	1
 10265  00318A  6E12               	movwf	(lcd_fill@width+1)^0,c
 10266  00318C  0E40               	movlw	64
 10267  00318E  6E11               	movwf	lcd_fill@width^0,c
 10268  003190                     l4073:
 10269                           
 10270                           ;lib_ili9341.c: 200:     while(height--)
 10271  003190  060F               	decf	lcd_fill@height^0,f,c
 10272  003192  A0D8               	btfss	status,0,c
 10273  003194  0610               	decf	(lcd_fill@height+1)^0,f,c
 10274  003196  280F               	incf	lcd_fill@height^0,w,c
 10275  003198  E106               	bnz	u3981
 10276  00319A  2810               	incf	(lcd_fill@height+1)^0,w,c
 10277  00319C  A4D8               	btfss	status,2,c
 10278  00319E  EFD3  F018         	goto	u3981
 10279  0031A2  EFD5  F018         	goto	u3980
 10280  0031A6                     u3981:
 10281  0031A6  EFB7  F018         	goto	l4069
 10282  0031AA                     u3980:
 10283  0031AA                     l335:
 10284  0031AA  0012               	return		;funcret
 10285  0031AC                     __end_of_lcd_fill:
 10286                           	opt callstack 0
 10287                           
 10288 ;; *************** function _lcd_draw_string *****************
 10289 ;; Defined at:
 10290 ;;		line 378 in file "lib_ili9341.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;  x               2   34[COMRAM] unsigned short 
 10293 ;;  y               2   36[COMRAM] unsigned short 
 10294 ;;  pS              2   38[COMRAM] PTR const unsigned char 
 10295 ;;		 -> string(100), STR_2(11), STR_1(33), 
 10296 ;;  fg_color        2   40[COMRAM] unsigned short 
 10297 ;;  bg_color        2   42[COMRAM] unsigned short 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  lIndex          2   50[COMRAM] unsigned short 
 10300 ;;  k               2   48[COMRAM] unsigned short 
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10310 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10311 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10313 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10314 ;;Total ram usage:       18 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; Hardware stack levels required when called:    9
 10317 ;; This function calls:
 10318 ;;		_lcd_draw_char
 10319 ;; This function is called by:
 10320 ;;		_main
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           	psect	text33
 10325  0028FC                     __ptext33:
 10326                           	opt callstack 0
 10327  0028FC                     _lcd_draw_string:
 10328                           	opt callstack 21
 10329  0028FC                     
 10330                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 10331  0028FC  EFFD  F014         	goto	l4415
 10332  002900                     l4401:
 10333                           
 10334                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 10335  002900  0E00               	movlw	0
 10336  002902  6E34               	movwf	(lcd_draw_string@lIndex+1)^0,c
 10337  002904  0E00               	movlw	0
 10338  002906  6E33               	movwf	lcd_draw_string@lIndex^0,c
 10339                           
 10340                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 10341  002908  0E00               	movlw	0
 10342  00290A  6E32               	movwf	(lcd_draw_string@k+1)^0,c
 10343  00290C  0E00               	movlw	0
 10344  00290E  6E31               	movwf	lcd_draw_string@k^0,c
 10345  002910  EFA9  F014         	goto	l4407
 10346  002914                     l4403:
 10347                           
 10348                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 10349  002914  90D8               	bcf	status,0,c
 10350  002916  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 10351  002918  6EF6               	movwf	tblptrl,c
 10352  00291A  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 10353  00291C  6EF7               	movwf	tblptrh,c
 10354  00291E  0EC1               	movlw	low _font
 10355  002920  26F6               	addwf	tblptrl,f,c
 10356  002922  0EF1               	movlw	high _font
 10357  002924  22F7               	addwfc	tblptrh,f,c
 10358  002926                     	if	1	;There are 3 active tblptr bytes
 10359  002926  6AF8               	clrf	tblptru,c
 10360  002928  0E00               	movlw	low (__mediumconst shr (0+16))
 10361  00292A  22F8               	addwfc	tblptru,f,c
 10362  00292C                     	endif
 10363  00292C  0009               	tblrd		*+
 10364  00292E  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 10365  002932  0009               	tblrd		*+
 10366  002934  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 10367  002938  90D8               	bcf	status,0,c
 10368  00293A  362D               	rlcf	??_lcd_draw_string^0,f,c
 10369  00293C  362E               	rlcf	(??_lcd_draw_string+1)^0,f,c
 10370  00293E  0E01               	movlw	1
 10371  002940  262D               	addwf	??_lcd_draw_string^0,f,c
 10372  002942  0E00               	movlw	0
 10373  002944  222E               	addwfc	(??_lcd_draw_string+1)^0,f,c
 10374  002946  502D               	movf	??_lcd_draw_string^0,w,c
 10375  002948  2633               	addwf	lcd_draw_string@lIndex^0,f,c
 10376  00294A  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 10377  00294C  2234               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 10378  00294E                     
 10379                           ;lib_ili9341.c: 388:         }
 10380  00294E  4A31               	infsnz	lcd_draw_string@k^0,f,c
 10381  002950  2A32               	incf	(lcd_draw_string@k+1)^0,f,c
 10382  002952                     l4407:
 10383  002952  0EE0               	movlw	224
 10384  002954  6E2D               	movwf	??_lcd_draw_string^0,c
 10385  002956  0EFF               	movlw	255
 10386  002958  6E2E               	movwf	(??_lcd_draw_string+1)^0,c
 10387  00295A  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10388  00295E  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10389  002962  0E00               	movlw	low (__mediumconst shr (0+16))
 10390  002964  6EF8               	movwf	tblptru,c
 10391  002966  0E0E               	movlw	(high __ramtop+-1)
 10392  002968  64F7               	cpfsgt	tblptrh,c
 10393  00296A  D003               	bra	u4227
 10394  00296C  0008               	tblrd		*
 10395  00296E  50F5               	movf	tablat,w,c
 10396  002970  D005               	bra	u4220
 10397  002972                     u4227:
 10398  002972  CFF6 FFE1          	movff	tblptrl,fsr1l
 10399  002976  CFF7 FFE2          	movff	tblptrh,fsr1h
 10400  00297A  50E7               	movf	indf1,w,c
 10401  00297C                     u4220:
 10402  00297C  6E2F               	movwf	(??_lcd_draw_string+2)^0,c
 10403  00297E  6A30               	clrf	(??_lcd_draw_string+3)^0,c
 10404  002980  502D               	movf	??_lcd_draw_string^0,w,c
 10405  002982  262F               	addwf	(??_lcd_draw_string+2)^0,f,c
 10406  002984  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 10407  002986  2230               	addwfc	(??_lcd_draw_string+3)^0,f,c
 10408  002988  502F               	movf	(??_lcd_draw_string+2)^0,w,c
 10409  00298A  5C31               	subwf	lcd_draw_string@k^0,w,c
 10410  00298C  5030               	movf	(??_lcd_draw_string+3)^0,w,c
 10411  00298E  5832               	subwfb	(lcd_draw_string@k+1)^0,w,c
 10412  002990  A0D8               	btfss	status,0,c
 10413  002992  EFCD  F014         	goto	u4231
 10414  002996  EFCF  F014         	goto	u4230
 10415  00299A                     u4231:
 10416  00299A  EF8A  F014         	goto	l4403
 10417  00299E                     u4230:
 10418  00299E                     
 10419                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 10420  00299E  C023  F00D         	movff	lcd_draw_string@x,lcd_draw_char@x
 10421  0029A2  C024  F00E         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 10422  0029A6  C025  F00F         	movff	lcd_draw_string@y,lcd_draw_char@y
 10423  0029AA  C026  F010         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 10424  0029AE  C033  F011         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 10425  0029B2  C034  F012         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 10426  0029B6  C029  F013         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 10427  0029BA  C02A  F014         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 10428  0029BE  C02B  F015         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 10429  0029C2  C02C  F016         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 10430  0029C6  EC5B  F012         	call	_lcd_draw_char	;wreg free
 10431  0029CA                     
 10432                           ;lib_ili9341.c: 392:         x += font[lIndex];
 10433  0029CA  90D8               	bcf	status,0,c
 10434  0029CC  3433               	rlcf	lcd_draw_string@lIndex^0,w,c
 10435  0029CE  6EF6               	movwf	tblptrl,c
 10436  0029D0  3434               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 10437  0029D2  6EF7               	movwf	tblptrh,c
 10438  0029D4  0EC1               	movlw	low _font
 10439  0029D6  26F6               	addwf	tblptrl,f,c
 10440  0029D8  0EF1               	movlw	high _font
 10441  0029DA  22F7               	addwfc	tblptrh,f,c
 10442  0029DC                     	if	1	;There are 3 active tblptr bytes
 10443  0029DC  6AF8               	clrf	tblptru,c
 10444  0029DE  0E00               	movlw	low (__mediumconst shr (0+16))
 10445  0029E0  22F8               	addwfc	tblptru,f,c
 10446  0029E2                     	endif
 10447  0029E2  0009               	tblrd		*+
 10448  0029E4  CFF5 F02D          	movff	tablat,??_lcd_draw_string
 10449  0029E8  0009               	tblrd		*+
 10450  0029EA  CFF5 F02E          	movff	tablat,??_lcd_draw_string+1
 10451  0029EE  502D               	movf	??_lcd_draw_string^0,w,c
 10452  0029F0  2623               	addwf	lcd_draw_string@x^0,f,c
 10453  0029F2  502E               	movf	(??_lcd_draw_string+1)^0,w,c
 10454  0029F4  2224               	addwfc	(lcd_draw_string@x+1)^0,f,c
 10455  0029F6                     
 10456                           ;lib_ili9341.c: 394:         pS++;
 10457  0029F6  4A27               	infsnz	lcd_draw_string@pS^0,f,c
 10458  0029F8  2A28               	incf	(lcd_draw_string@pS+1)^0,f,c
 10459  0029FA                     l4415:
 10460                           
 10461                           ;lib_ili9341.c: 382:     while(*pS)
 10462  0029FA  C027  FFF6         	movff	lcd_draw_string@pS,tblptrl
 10463  0029FE  C028  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 10464  002A02  0E00               	movlw	low (__mediumconst shr (0+16))
 10465  002A04  6EF8               	movwf	tblptru,c
 10466  002A06  0E0E               	movlw	(high __ramtop+-1)
 10467  002A08  64F7               	cpfsgt	tblptrh,c
 10468  002A0A  D003               	bra	u4247
 10469  002A0C  0008               	tblrd		*
 10470  002A0E  50F5               	movf	tablat,w,c
 10471  002A10  D005               	bra	u4240
 10472  002A12                     u4247:
 10473  002A12  CFF6 FFE1          	movff	tblptrl,fsr1l
 10474  002A16  CFF7 FFE2          	movff	tblptrh,fsr1h
 10475  002A1A  50E7               	movf	indf1,w,c
 10476  002A1C                     u4240:
 10477  002A1C  0900               	iorlw	0
 10478  002A1E  A4D8               	btfss	status,2,c
 10479  002A20  EF14  F015         	goto	u4251
 10480  002A24  EF16  F015         	goto	u4250
 10481  002A28                     u4251:
 10482  002A28  EF80  F014         	goto	l4401
 10483  002A2C                     u4250:
 10484  002A2C  0012               	return		;funcret
 10485  002A2E                     __end_of_lcd_draw_string:
 10486                           	opt callstack 0
 10487                           
 10488 ;; *************** function _lcd_draw_char *****************
 10489 ;; Defined at:
 10490 ;;		line 353 in file "lib_ili9341.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  x               2   12[COMRAM] unsigned short 
 10493 ;;  y               2   14[COMRAM] unsigned short 
 10494 ;;  fIndex          2   16[COMRAM] unsigned short 
 10495 ;;  fg_color        2   18[COMRAM] unsigned short 
 10496 ;;  bg_color        2   20[COMRAM] unsigned short 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;  i               1   33[COMRAM] unsigned char 
 10499 ;;  k               1   32[COMRAM] unsigned char 
 10500 ;;  j               1   31[COMRAM] unsigned char 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  1    wreg      void 
 10503 ;; Registers used:
 10504 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10510 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10511 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10512 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10513 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10514 ;;Total ram usage:       22 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:    8
 10517 ;; This function calls:
 10518 ;;		_lcd_draw_pixel
 10519 ;;		_lcd_set_cursor
 10520 ;; This function is called by:
 10521 ;;		_lcd_draw_string
 10522 ;; This function uses a non-reentrant model
 10523 ;;
 10524                           
 10525                           	psect	text34
 10526  0024B6                     __ptext34:
 10527                           	opt callstack 0
 10528  0024B6                     _lcd_draw_char:
 10529                           	opt callstack 21
 10530  0024B6                     
 10531                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 10532  0024B6  0E00               	movlw	0
 10533  0024B8  6E20               	movwf	lcd_draw_char@j^0,c
 10534  0024BA  EFFB  F012         	goto	l4111
 10535  0024BE                     l4081:
 10536                           
 10537                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 10538  0024BE  90D8               	bcf	status,0,c
 10539  0024C0  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 10540  0024C2  6EF6               	movwf	tblptrl,c
 10541  0024C4  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10542  0024C6  6EF7               	movwf	tblptrh,c
 10543  0024C8  0EC1               	movlw	low _font
 10544  0024CA  26F6               	addwf	tblptrl,f,c
 10545  0024CC  0EF1               	movlw	high _font
 10546  0024CE  22F7               	addwfc	tblptrh,f,c
 10547  0024D0                     	if	1	;There are 3 active tblptr bytes
 10548  0024D0  6AF8               	clrf	tblptru,c
 10549  0024D2  0E00               	movlw	low (__mediumconst shr (0+16))
 10550  0024D4  22F8               	addwfc	tblptru,f,c
 10551  0024D6                     	endif
 10552  0024D6  0009               	tblrd		*+
 10553  0024D8  CFF5 F017          	movff	tablat,??_lcd_draw_char
 10554  0024DC  0009               	tblrd		*+
 10555  0024DE  CFF5 F018          	movff	tablat,??_lcd_draw_char+1
 10556  0024E2  5020               	movf	lcd_draw_char@j^0,w,c
 10557  0024E4  5E17               	subwf	??_lcd_draw_char^0,f,c
 10558  0024E6  0E00               	movlw	0
 10559  0024E8  5A18               	subwfb	(??_lcd_draw_char+1)^0,f,c
 10560  0024EA  500D               	movf	lcd_draw_char@x^0,w,c
 10561  0024EC  2417               	addwf	??_lcd_draw_char^0,w,c
 10562  0024EE  6E09               	movwf	lcd_set_cursor@x^0,c
 10563  0024F0  500E               	movf	(lcd_draw_char@x+1)^0,w,c
 10564  0024F2  2018               	addwfc	(??_lcd_draw_char+1)^0,w,c
 10565  0024F4  6E0A               	movwf	(lcd_set_cursor@x+1)^0,c
 10566  0024F6  C00F  F00B         	movff	lcd_draw_char@y,lcd_set_cursor@y
 10567  0024FA  C010  F00C         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 10568  0024FE  EC3D  F01A         	call	_lcd_set_cursor	;wreg free
 10569  002502                     
 10570                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 10571  002502  0E00               	movlw	0
 10572  002504  6E21               	movwf	lcd_draw_char@k^0,c
 10573  002506                     l4089:
 10574                           
 10575                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 10576  002506  0E00               	movlw	0
 10577  002508  6E22               	movwf	lcd_draw_char@i^0,c
 10578  00250A                     l4095:
 10579                           
 10580                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 10581  00250A  5020               	movf	lcd_draw_char@j^0,w,c
 10582  00250C  6E17               	movwf	??_lcd_draw_char^0,c
 10583  00250E  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 10584  002510  90D8               	bcf	status,0,c
 10585  002512  3617               	rlcf	??_lcd_draw_char^0,f,c
 10586  002514  3618               	rlcf	(??_lcd_draw_char+1)^0,f,c
 10587  002516  90D8               	bcf	status,0,c
 10588  002518  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 10589  00251A  6EF6               	movwf	tblptrl,c
 10590  00251C  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10591  00251E  6EF7               	movwf	tblptrh,c
 10592  002520  0EC1               	movlw	low _font
 10593  002522  26F6               	addwf	tblptrl,f,c
 10594  002524  0EF1               	movlw	high _font
 10595  002526  22F7               	addwfc	tblptrh,f,c
 10596  002528                     	if	1	;There are 3 active tblptr bytes
 10597  002528  6AF8               	clrf	tblptru,c
 10598  00252A  0E00               	movlw	low (__mediumconst shr (0+16))
 10599  00252C  22F8               	addwfc	tblptru,f,c
 10600  00252E                     	endif
 10601  00252E  0009               	tblrd		*+
 10602  002530  CFF5 F019          	movff	tablat,??_lcd_draw_char+2
 10603  002534  0009               	tblrd		*+
 10604  002536  CFF5 F01A          	movff	tablat,??_lcd_draw_char+3
 10605  00253A  90D8               	bcf	status,0,c
 10606  00253C  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10607  00253E  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10608  002540  5017               	movf	??_lcd_draw_char^0,w,c
 10609  002542  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 10610  002544  5018               	movf	(??_lcd_draw_char+1)^0,w,c
 10611  002546  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10612  002548  5021               	movf	lcd_draw_char@k^0,w,c
 10613  00254A  5E19               	subwf	(??_lcd_draw_char+2)^0,f,c
 10614  00254C  0E00               	movlw	0
 10615  00254E  5A1A               	subwfb	(??_lcd_draw_char+3)^0,f,c
 10616  002550  5011               	movf	lcd_draw_char@fIndex^0,w,c
 10617  002552  2619               	addwf	(??_lcd_draw_char+2)^0,f,c
 10618  002554  5012               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 10619  002556  221A               	addwfc	(??_lcd_draw_char+3)^0,f,c
 10620  002558  90D8               	bcf	status,0,c
 10621  00255A  3619               	rlcf	(??_lcd_draw_char+2)^0,f,c
 10622  00255C  361A               	rlcf	(??_lcd_draw_char+3)^0,f,c
 10623  00255E  0EC1               	movlw	low _font
 10624  002560  2419               	addwf	(??_lcd_draw_char+2)^0,w,c
 10625  002562  6EF6               	movwf	tblptrl,c
 10626  002564  0EF1               	movlw	high _font
 10627  002566  201A               	addwfc	(??_lcd_draw_char+3)^0,w,c
 10628  002568  6EF7               	movwf	tblptrh,c
 10629  00256A                     	if	1	;There are 3 active tblptr bytes
 10630  00256A  6AF8               	clrf	tblptru,c
 10631  00256C  0E00               	movlw	low (__mediumconst shr (0+16))
 10632  00256E  22F8               	addwfc	tblptru,f,c
 10633  002570                     	endif
 10634  002570  0009               	tblrd		*+
 10635  002572  CFF5 F01B          	movff	tablat,??_lcd_draw_char+4
 10636  002576  0009               	tblrd		*+
 10637  002578  CFF5 F01C          	movff	tablat,??_lcd_draw_char+5
 10638  00257C  C022  F01D         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 10639  002580  0E80               	movlw	128
 10640  002582  6E1E               	movwf	(??_lcd_draw_char+7)^0,c
 10641  002584  0E00               	movlw	0
 10642  002586  6E1F               	movwf	(??_lcd_draw_char+8)^0,c
 10643  002588  2A1D               	incf	(??_lcd_draw_char+6)^0,f,c
 10644  00258A  EFCA  F012         	goto	u4004
 10645  00258E                     u4005:
 10646  00258E  341F               	rlcf	(??_lcd_draw_char+8)^0,w,c
 10647  002590  321F               	rrcf	(??_lcd_draw_char+8)^0,f,c
 10648  002592  321E               	rrcf	(??_lcd_draw_char+7)^0,f,c
 10649  002594                     u4004:
 10650  002594  2E1D               	decfsz	(??_lcd_draw_char+6)^0,f,c
 10651  002596  EFC7  F012         	goto	u4005
 10652  00259A  501B               	movf	(??_lcd_draw_char+4)^0,w,c
 10653  00259C  161E               	andwf	(??_lcd_draw_char+7)^0,f,c
 10654  00259E  501C               	movf	(??_lcd_draw_char+5)^0,w,c
 10655  0025A0  161F               	andwf	(??_lcd_draw_char+8)^0,f,c
 10656  0025A2  501E               	movf	(??_lcd_draw_char+7)^0,w,c
 10657  0025A4  101F               	iorwf	(??_lcd_draw_char+8)^0,w,c
 10658  0025A6  B4D8               	btfsc	status,2,c
 10659  0025A8  EFD8  F012         	goto	u4011
 10660  0025AC  EFDA  F012         	goto	u4010
 10661  0025B0                     u4011:
 10662  0025B0  EFE2  F012         	goto	l4099
 10663  0025B4                     u4010:
 10664  0025B4                     
 10665                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 10666  0025B4  C013  F007         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 10667  0025B8  C014  F008         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 10668  0025BC  ECE7  F01B         	call	_lcd_draw_pixel	;wreg free
 10669                           
 10670                           ;lib_ili9341.c: 368:                 }
 10671  0025C0  EFE8  F012         	goto	l4101
 10672  0025C4                     l4099:
 10673                           
 10674                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 10675  0025C4  C015  F007         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 10676  0025C8  C016  F008         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 10677  0025CC  ECE7  F01B         	call	_lcd_draw_pixel	;wreg free
 10678  0025D0                     l4101:
 10679                           
 10680                           ;lib_ili9341.c: 373:             }
 10681  0025D0  2A22               	incf	lcd_draw_char@i^0,f,c
 10682  0025D2  0E07               	movlw	7
 10683  0025D4  6422               	cpfsgt	lcd_draw_char@i^0,c
 10684  0025D6  EFEF  F012         	goto	u4021
 10685  0025DA  EFF1  F012         	goto	u4020
 10686  0025DE                     u4021:
 10687  0025DE  EF85  F012         	goto	l4095
 10688  0025E2                     u4020:
 10689  0025E2                     
 10690                           ;lib_ili9341.c: 374:         }
 10691  0025E2  2A21               	incf	lcd_draw_char@k^0,f,c
 10692  0025E4  0E01               	movlw	1
 10693  0025E6  6421               	cpfsgt	lcd_draw_char@k^0,c
 10694  0025E8  EFF8  F012         	goto	u4031
 10695  0025EC  EFFA  F012         	goto	u4030
 10696  0025F0                     u4031:
 10697  0025F0  EF83  F012         	goto	l4089
 10698  0025F4                     u4030:
 10699  0025F4                     
 10700                           ;lib_ili9341.c: 375:     }
 10701  0025F4  2A20               	incf	lcd_draw_char@j^0,f,c
 10702  0025F6                     l4111:
 10703  0025F6  90D8               	bcf	status,0,c
 10704  0025F8  3411               	rlcf	lcd_draw_char@fIndex^0,w,c
 10705  0025FA  6EF6               	movwf	tblptrl,c
 10706  0025FC  3412               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 10707  0025FE  6EF7               	movwf	tblptrh,c
 10708  002600  0EC1               	movlw	low _font
 10709  002602  26F6               	addwf	tblptrl,f,c
 10710  002604  0EF1               	movlw	high _font
 10711  002606  22F7               	addwfc	tblptrh,f,c
 10712  002608                     	if	1	;There are 3 active tblptr bytes
 10713  002608  6AF8               	clrf	tblptru,c
 10714  00260A  0E00               	movlw	low (__mediumconst shr (0+16))
 10715  00260C  22F8               	addwfc	tblptru,f,c
 10716  00260E                     	endif
 10717  00260E  5020               	movf	lcd_draw_char@j^0,w,c
 10718  002610  6E17               	movwf	??_lcd_draw_char^0,c
 10719  002612  6A18               	clrf	(??_lcd_draw_char+1)^0,c
 10720  002614  0009               	tblrd		*+
 10721  002616  50F5               	movf	tablat,w,c
 10722  002618  5C17               	subwf	??_lcd_draw_char^0,w,c
 10723  00261A  0009               	tblrd		*+
 10724  00261C  50F5               	movf	tablat,w,c
 10725  00261E  5818               	subwfb	(??_lcd_draw_char+1)^0,w,c
 10726  002620  A0D8               	btfss	status,0,c
 10727  002622  EF15  F013         	goto	u4041
 10728  002626  EF17  F013         	goto	u4040
 10729  00262A                     u4041:
 10730  00262A  EF5F  F012         	goto	l4081
 10731  00262E                     u4040:
 10732  00262E  0012               	return		;funcret
 10733  002630                     __end_of_lcd_draw_char:
 10734                           	opt callstack 0
 10735                           
 10736 ;; *************** function _lcd_draw_line *****************
 10737 ;; Defined at:
 10738 ;;		line 210 in file "lib_ili9341.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;  x0              2   18[COMRAM] unsigned short 
 10741 ;;  y0              2   20[COMRAM] unsigned short 
 10742 ;;  x1              2   22[COMRAM] unsigned short 
 10743 ;;  y1              2   24[COMRAM] unsigned short 
 10744 ;;  color           2   26[COMRAM] unsigned short 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;  dy              2   39[COMRAM] short 
 10747 ;;  dx              2   37[COMRAM] short 
 10748 ;;  e2              2   35[COMRAM] short 
 10749 ;;  err             2   33[COMRAM] short 
 10750 ;;  sy              2   31[COMRAM] short 
 10751 ;;  sx              2   29[COMRAM] short 
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  1    wreg      void 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2, status,0, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10761 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10764 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10765 ;;Total ram usage:       23 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    9
 10768 ;; This function calls:
 10769 ;;		_lcd_draw_pixel_at
 10770 ;; This function is called by:
 10771 ;;		_main
 10772 ;;		_lcd_draw_filled_circle
 10773 ;; This function uses a non-reentrant model
 10774 ;;
 10775                           
 10776                           	psect	text35
 10777  002630                     __ptext35:
 10778                           	opt callstack 0
 10779  002630                     _lcd_draw_line:
 10780                           	opt callstack 21
 10781  002630                     
 10782                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 10783  002630  5013               	movf	lcd_draw_line@x0^0,w,c
 10784  002632  5C17               	subwf	lcd_draw_line@x1^0,w,c
 10785  002634  6E26               	movwf	lcd_draw_line@dx^0,c
 10786  002636  5014               	movf	(lcd_draw_line@x0+1)^0,w,c
 10787  002638  5818               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 10788  00263A  6E27               	movwf	(lcd_draw_line@dx+1)^0,c
 10789  00263C  5017               	movf	lcd_draw_line@x1^0,w,c
 10790  00263E  5C13               	subwf	lcd_draw_line@x0^0,w,c
 10791  002640  5018               	movf	(lcd_draw_line@x1+1)^0,w,c
 10792  002642  5814               	subwfb	(lcd_draw_line@x0+1)^0,w,c
 10793  002644  A0D8               	btfss	status,0,c
 10794  002646  EF27  F013         	goto	u4141
 10795  00264A  EF29  F013         	goto	u4140
 10796  00264E                     u4141:
 10797  00264E  EF2D  F013         	goto	l4365
 10798  002652                     u4140:
 10799  002652  681E               	setf	lcd_draw_line@sx^0,c
 10800  002654  681F               	setf	(lcd_draw_line@sx+1)^0,c
 10801  002656  EF31  F013         	goto	l4367
 10802  00265A                     l4365:
 10803  00265A  0E00               	movlw	0
 10804  00265C  6E1F               	movwf	(lcd_draw_line@sx+1)^0,c
 10805  00265E  0E01               	movlw	1
 10806  002660  6E1E               	movwf	lcd_draw_line@sx^0,c
 10807  002662                     l4367:
 10808                           
 10809                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 10810  002662  5015               	movf	lcd_draw_line@y0^0,w,c
 10811  002664  5C19               	subwf	lcd_draw_line@y1^0,w,c
 10812  002666  6E28               	movwf	lcd_draw_line@dy^0,c
 10813  002668  5016               	movf	(lcd_draw_line@y0+1)^0,w,c
 10814  00266A  581A               	subwfb	(lcd_draw_line@y1+1)^0,w,c
 10815  00266C  6E29               	movwf	(lcd_draw_line@dy+1)^0,c
 10816  00266E  5019               	movf	lcd_draw_line@y1^0,w,c
 10817  002670  5C15               	subwf	lcd_draw_line@y0^0,w,c
 10818  002672  501A               	movf	(lcd_draw_line@y1+1)^0,w,c
 10819  002674  5816               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 10820  002676  A0D8               	btfss	status,0,c
 10821  002678  EF40  F013         	goto	u4151
 10822  00267C  EF42  F013         	goto	u4150
 10823  002680                     u4151:
 10824  002680  EF46  F013         	goto	l4373
 10825  002684                     u4150:
 10826  002684  6820               	setf	lcd_draw_line@sy^0,c
 10827  002686  6821               	setf	(lcd_draw_line@sy+1)^0,c
 10828  002688  EF4A  F013         	goto	l4375
 10829  00268C                     l4373:
 10830  00268C  0E00               	movlw	0
 10831  00268E  6E21               	movwf	(lcd_draw_line@sy+1)^0,c
 10832  002690  0E01               	movlw	1
 10833  002692  6E20               	movwf	lcd_draw_line@sy^0,c
 10834  002694                     l4375:
 10835                           
 10836                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 10837  002694  5013               	movf	lcd_draw_line@x0^0,w,c
 10838  002696  5C17               	subwf	lcd_draw_line@x1^0,w,c
 10839  002698  5014               	movf	(lcd_draw_line@x0+1)^0,w,c
 10840  00269A  5818               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 10841  00269C  B0D8               	btfsc	status,0,c
 10842  00269E  EF53  F013         	goto	u4161
 10843  0026A2  EF55  F013         	goto	u4160
 10844  0026A6                     u4161:
 10845  0026A6  EF59  F013         	goto	l4379
 10846  0026AA                     u4160:
 10847  0026AA                     
 10848                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 10849  0026AA  6C26               	negf	lcd_draw_line@dx^0,c
 10850  0026AC  1E27               	comf	(lcd_draw_line@dx+1)^0,f,c
 10851  0026AE  B0D8               	btfsc	status,0,c
 10852  0026B0  2A27               	incf	(lcd_draw_line@dx+1)^0,f,c
 10853  0026B2                     l4379:
 10854                           
 10855                           ;lib_ili9341.c: 221:     if(y1 > y0)
 10856  0026B2  5019               	movf	lcd_draw_line@y1^0,w,c
 10857  0026B4  5C15               	subwf	lcd_draw_line@y0^0,w,c
 10858  0026B6  501A               	movf	(lcd_draw_line@y1+1)^0,w,c
 10859  0026B8  5816               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 10860  0026BA  B0D8               	btfsc	status,0,c
 10861  0026BC  EF62  F013         	goto	u4171
 10862  0026C0  EF64  F013         	goto	u4170
 10863  0026C4                     u4171:
 10864  0026C4  EF68  F013         	goto	l4383
 10865  0026C8                     u4170:
 10866  0026C8                     
 10867                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 10868  0026C8  6C28               	negf	lcd_draw_line@dy^0,c
 10869  0026CA  1E29               	comf	(lcd_draw_line@dy+1)^0,f,c
 10870  0026CC  B0D8               	btfsc	status,0,c
 10871  0026CE  2A29               	incf	(lcd_draw_line@dy+1)^0,f,c
 10872  0026D0                     l4383:
 10873                           
 10874                           ;lib_ili9341.c: 226:     err = dx + dy;
 10875  0026D0  5028               	movf	lcd_draw_line@dy^0,w,c
 10876  0026D2  2426               	addwf	lcd_draw_line@dx^0,w,c
 10877  0026D4  6E22               	movwf	lcd_draw_line@err^0,c
 10878  0026D6  5029               	movf	(lcd_draw_line@dy+1)^0,w,c
 10879  0026D8  2027               	addwfc	(lcd_draw_line@dx+1)^0,w,c
 10880  0026DA  6E23               	movwf	(lcd_draw_line@err+1)^0,c
 10881  0026DC                     l4385:
 10882                           
 10883                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 10884  0026DC  C013  F00D         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 10885  0026E0  C014  F00E         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 10886  0026E4  C015  F00F         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 10887  0026E8  C016  F010         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 10888  0026EC  C01B  F011         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 10889  0026F0  C01C  F012         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 10890  0026F4  EC26  F01B         	call	_lcd_draw_pixel_at	;wreg free
 10891  0026F8                     
 10892                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 10893  0026F8  5017               	movf	lcd_draw_line@x1^0,w,c
 10894  0026FA  1813               	xorwf	lcd_draw_line@x0^0,w,c
 10895  0026FC  E107               	bnz	u4181
 10896  0026FE  5018               	movf	(lcd_draw_line@x1+1)^0,w,c
 10897  002700  1814               	xorwf	(lcd_draw_line@x0+1)^0,w,c
 10898  002702  A4D8               	btfss	status,2,c
 10899  002704  EF86  F013         	goto	u4181
 10900  002708  EF88  F013         	goto	u4180
 10901  00270C                     u4181:
 10902  00270C  EF96  F013         	goto	l4393
 10903  002710                     u4180:
 10904  002710  5019               	movf	lcd_draw_line@y1^0,w,c
 10905  002712  1815               	xorwf	lcd_draw_line@y0^0,w,c
 10906  002714  E107               	bnz	u4191
 10907  002716  501A               	movf	(lcd_draw_line@y1+1)^0,w,c
 10908  002718  1816               	xorwf	(lcd_draw_line@y0+1)^0,w,c
 10909  00271A  A4D8               	btfss	status,2,c
 10910  00271C  EF92  F013         	goto	u4191
 10911  002720  EF94  F013         	goto	u4190
 10912  002724                     u4191:
 10913  002724  EF96  F013         	goto	l4393
 10914  002728                     u4190:
 10915  002728  EFCB  F013         	goto	l360
 10916  00272C                     l4393:
 10917                           
 10918                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 10919  00272C  90D8               	bcf	status,0,c
 10920  00272E  3422               	rlcf	lcd_draw_line@err^0,w,c
 10921  002730  6E24               	movwf	lcd_draw_line@e2^0,c
 10922  002732  3423               	rlcf	(lcd_draw_line@err+1)^0,w,c
 10923  002734  6E25               	movwf	(lcd_draw_line@e2+1)^0,c
 10924                           
 10925                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 10926  002736  5028               	movf	lcd_draw_line@dy^0,w,c
 10927  002738  5C24               	subwf	lcd_draw_line@e2^0,w,c
 10928  00273A  5025               	movf	(lcd_draw_line@e2+1)^0,w,c
 10929  00273C  0A80               	xorlw	128
 10930  00273E  6E1D               	movwf	??_lcd_draw_line^0,c
 10931  002740  5029               	movf	(lcd_draw_line@dy+1)^0,w,c
 10932  002742  0A80               	xorlw	128
 10933  002744  581D               	subwfb	??_lcd_draw_line^0,w,c
 10934  002746  A0D8               	btfss	status,0,c
 10935  002748  EFA8  F013         	goto	u4201
 10936  00274C  EFAA  F013         	goto	u4200
 10937  002750                     u4201:
 10938  002750  EFB2  F013         	goto	l357
 10939  002754                     u4200:
 10940  002754                     
 10941                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 10942  002754  5028               	movf	lcd_draw_line@dy^0,w,c
 10943  002756  2622               	addwf	lcd_draw_line@err^0,f,c
 10944  002758  5029               	movf	(lcd_draw_line@dy+1)^0,w,c
 10945  00275A  2223               	addwfc	(lcd_draw_line@err+1)^0,f,c
 10946                           
 10947                           ;lib_ili9341.c: 242:             x0 += sx;
 10948  00275C  501E               	movf	lcd_draw_line@sx^0,w,c
 10949  00275E  2613               	addwf	lcd_draw_line@x0^0,f,c
 10950  002760  501F               	movf	(lcd_draw_line@sx+1)^0,w,c
 10951  002762  2214               	addwfc	(lcd_draw_line@x0+1)^0,f,c
 10952  002764                     l357:
 10953                           
 10954                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 10955  002764  5024               	movf	lcd_draw_line@e2^0,w,c
 10956  002766  5C26               	subwf	lcd_draw_line@dx^0,w,c
 10957  002768  5027               	movf	(lcd_draw_line@dx+1)^0,w,c
 10958  00276A  0A80               	xorlw	128
 10959  00276C  6E1D               	movwf	??_lcd_draw_line^0,c
 10960  00276E  5025               	movf	(lcd_draw_line@e2+1)^0,w,c
 10961  002770  0A80               	xorlw	128
 10962  002772  581D               	subwfb	??_lcd_draw_line^0,w,c
 10963  002774  A0D8               	btfss	status,0,c
 10964  002776  EFBF  F013         	goto	u4211
 10965  00277A  EFC1  F013         	goto	u4210
 10966  00277E                     u4211:
 10967  00277E  EF6E  F013         	goto	l4385
 10968  002782                     u4210:
 10969  002782                     
 10970                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 10971  002782  5026               	movf	lcd_draw_line@dx^0,w,c
 10972  002784  2622               	addwf	lcd_draw_line@err^0,f,c
 10973  002786  5027               	movf	(lcd_draw_line@dx+1)^0,w,c
 10974  002788  2223               	addwfc	(lcd_draw_line@err+1)^0,f,c
 10975                           
 10976                           ;lib_ili9341.c: 248:             y0 += sy;
 10977  00278A  5020               	movf	lcd_draw_line@sy^0,w,c
 10978  00278C  2615               	addwf	lcd_draw_line@y0^0,f,c
 10979  00278E  5021               	movf	(lcd_draw_line@sy+1)^0,w,c
 10980  002790  2216               	addwfc	(lcd_draw_line@y0+1)^0,f,c
 10981  002792  EF6E  F013         	goto	l4385
 10982  002796                     l360:
 10983  002796  0012               	return		;funcret
 10984  002798                     __end_of_lcd_draw_line:
 10985                           	opt callstack 0
 10986                           
 10987 ;; *************** function _lcd_draw_pixel_at *****************
 10988 ;; Defined at:
 10989 ;;		line 253 in file "lib_ili9341.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;  x               2   12[COMRAM] unsigned short 
 10992 ;;  y               2   14[COMRAM] unsigned short 
 10993 ;;  color           2   16[COMRAM] unsigned short 
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;		None
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  1    wreg      void 
 10998 ;; Registers used:
 10999 ;;		wreg, status,2, status,0, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11005 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11009 ;;Total ram usage:        6 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:    8
 11012 ;; This function calls:
 11013 ;;		_lcd_draw_pixel
 11014 ;;		_lcd_set_cursor
 11015 ;; This function is called by:
 11016 ;;		_lcd_draw_line
 11017 ;;		_lcd_draw_circle
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           	psect	text36
 11022  00364C                     __ptext36:
 11023                           	opt callstack 0
 11024  00364C                     _lcd_draw_pixel_at:
 11025                           	opt callstack 21
 11026  00364C                     
 11027                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 11028  00364C  C00D  F009         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 11029  003650  C00E  F00A         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 11030  003654  C00F  F00B         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 11031  003658  C010  F00C         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 11032  00365C  EC3D  F01A         	call	_lcd_set_cursor	;wreg free
 11033  003660  0900               	iorlw	0
 11034  003662  A4D8               	btfss	status,2,c
 11035  003664  EF36  F01B         	goto	u3991
 11036  003668  EF38  F01B         	goto	u3990
 11037  00366C                     u3991:
 11038  00366C  EF3E  F01B         	goto	l364
 11039  003670                     u3990:
 11040  003670                     
 11041                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 11042  003670  C011  F007         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 11043  003674  C012  F008         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 11044  003678  ECE7  F01B         	call	_lcd_draw_pixel	;wreg free
 11045  00367C                     l364:
 11046  00367C  0012               	return		;funcret
 11047  00367E                     __end_of_lcd_draw_pixel_at:
 11048                           	opt callstack 0
 11049                           
 11050 ;; *************** function _lcd_set_cursor *****************
 11051 ;; Defined at:
 11052 ;;		line 142 in file "lib_ili9341.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  x               2    8[COMRAM] unsigned short 
 11055 ;;  y               2   10[COMRAM] unsigned short 
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      unsigned char 
 11060 ;; Registers used:
 11061 ;;		wreg, status,2, status,0, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11071 ;;Total ram usage:        4 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    7
 11074 ;; This function calls:
 11075 ;;		_lcd_set_cursor_x
 11076 ;;		_lcd_set_cursor_y
 11077 ;; This function is called by:
 11078 ;;		_lcd_fill
 11079 ;;		_lcd_draw_pixel_at
 11080 ;;		_lcd_draw_char
 11081 ;;		_lcd_fill_rect
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           
 11085                           	psect	text37
 11086  00347A                     __ptext37:
 11087                           	opt callstack 0
 11088  00347A                     _lcd_set_cursor:
 11089                           	opt callstack 21
 11090  00347A                     
 11091                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 11092  00347A  C009  F007         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 11093  00347E  C00A  F008         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 11094  003482  ECB1  F019         	call	_lcd_set_cursor_x	;wreg free
 11095  003486  0900               	iorlw	0
 11096  003488  A4D8               	btfss	status,2,c
 11097  00348A  EF49  F01A         	goto	u3901
 11098  00348E  EF4B  F01A         	goto	u3900
 11099  003492                     u3901:
 11100  003492  EF59  F01A         	goto	l3997
 11101  003496                     u3900:
 11102  003496  C00B  F007         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 11103  00349A  C00C  F008         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 11104  00349E  EC8D  F019         	call	_lcd_set_cursor_y	;wreg free
 11105  0034A2  0900               	iorlw	0
 11106  0034A4  B4D8               	btfsc	status,2,c
 11107  0034A6  EF57  F01A         	goto	u3911
 11108  0034AA  EF59  F01A         	goto	u3910
 11109  0034AE                     u3911:
 11110  0034AE  EF5C  F01A         	goto	l4001
 11111  0034B2                     u3910:
 11112  0034B2                     l3997:
 11113                           
 11114                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 11115  0034B2  0E01               	movlw	1
 11116  0034B4  EF5D  F01A         	goto	l320
 11117  0034B8                     l4001:
 11118                           
 11119                           ;lib_ili9341.c: 149:     return 0;
 11120  0034B8  0E00               	movlw	0
 11121  0034BA                     l320:
 11122  0034BA  0012               	return		;funcret
 11123  0034BC                     __end_of_lcd_set_cursor:
 11124                           	opt callstack 0
 11125                           
 11126 ;; *************** function _lcd_set_cursor_y *****************
 11127 ;; Defined at:
 11128 ;;		line 168 in file "lib_ili9341.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  y               2    6[COMRAM] unsigned short 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      unsigned char 
 11135 ;; Registers used:
 11136 ;;		wreg, status,2, status,0, cstack
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11146 ;;Total ram usage:        2 bytes
 11147 ;; Hardware stack levels used:    1
 11148 ;; Hardware stack levels required when called:    6
 11149 ;; This function calls:
 11150 ;;		_lcd_send
 11151 ;; This function is called by:
 11152 ;;		_lcd_set_cursor
 11153 ;; This function uses a non-reentrant model
 11154 ;;
 11155                           
 11156                           	psect	text38
 11157  00331A                     __ptext38:
 11158                           	opt callstack 0
 11159  00331A                     _lcd_set_cursor_y:
 11160                           	opt callstack 21
 11161  00331A                     
 11162                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 11163  00331A  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 11164  00331C  E109               	bnz	u3420
 11165  00331E  0EF0               	movlw	240
 11166  003320  5C07               	subwf	lcd_set_cursor_y@y^0,w,c
 11167  003322  A0D8               	btfss	status,0,c
 11168  003324  EF96  F019         	goto	u3421
 11169  003328  EF98  F019         	goto	u3420
 11170  00332C                     u3421:
 11171  00332C  EF9B  F019         	goto	l3641
 11172  003330                     u3420:
 11173  003330                     
 11174                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 11175  003330  0E01               	movlw	1
 11176  003332  EFB0  F019         	goto	l328
 11177  003336                     l3641:
 11178                           
 11179                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 11180  003336  0E2A               	movlw	42
 11181  003338  6E05               	movwf	lcd_send@value^0,c
 11182  00333A  0E00               	movlw	0
 11183  00333C  ECCF  F01B         	call	_lcd_send
 11184                           
 11185                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 11186  003340  5008               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 11187  003342  6E05               	movwf	lcd_send@value^0,c
 11188  003344  0E01               	movlw	1
 11189  003346  ECCF  F01B         	call	_lcd_send
 11190                           
 11191                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 11192  00334A  C007  F005         	movff	lcd_set_cursor_y@y,lcd_send@value
 11193  00334E  0E01               	movlw	1
 11194  003350  ECCF  F01B         	call	_lcd_send
 11195                           
 11196                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 11197  003354  0E2C               	movlw	44
 11198  003356  6E05               	movwf	lcd_send@value^0,c
 11199  003358  0E00               	movlw	0
 11200  00335A  ECCF  F01B         	call	_lcd_send
 11201  00335E                     
 11202                           ;lib_ili9341.c: 180:     return 0;
 11203  00335E  0E00               	movlw	0
 11204  003360                     l328:
 11205  003360  0012               	return		;funcret
 11206  003362                     __end_of_lcd_set_cursor_y:
 11207                           	opt callstack 0
 11208                           
 11209 ;; *************** function _lcd_set_cursor_x *****************
 11210 ;; Defined at:
 11211 ;;		line 153 in file "lib_ili9341.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  x               2    6[COMRAM] unsigned short 
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;		None
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  1    wreg      unsigned char 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2, status,0, cstack
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11229 ;;Total ram usage:        2 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    6
 11232 ;; This function calls:
 11233 ;;		_lcd_send
 11234 ;; This function is called by:
 11235 ;;		_lcd_set_cursor
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text39
 11240  003362                     __ptext39:
 11241                           	opt callstack 0
 11242  003362                     _lcd_set_cursor_x:
 11243                           	opt callstack 21
 11244  003362                     
 11245                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 11246  003362  0E40               	movlw	64
 11247  003364  5C07               	subwf	lcd_set_cursor_x@x^0,w,c
 11248  003366  0E01               	movlw	1
 11249  003368  5808               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 11250  00336A  A0D8               	btfss	status,0,c
 11251  00336C  EFBA  F019         	goto	u3411
 11252  003370  EFBC  F019         	goto	u3410
 11253  003374                     u3411:
 11254  003374  EFBF  F019         	goto	l3629
 11255  003378                     u3410:
 11256  003378                     
 11257                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 11258  003378  0E01               	movlw	1
 11259  00337A  EFD4  F019         	goto	l324
 11260  00337E                     l3629:
 11261                           
 11262                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 11263  00337E  0E2B               	movlw	43
 11264  003380  6E05               	movwf	lcd_send@value^0,c
 11265  003382  0E00               	movlw	0
 11266  003384  ECCF  F01B         	call	_lcd_send
 11267                           
 11268                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 11269  003388  5008               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 11270  00338A  6E05               	movwf	lcd_send@value^0,c
 11271  00338C  0E01               	movlw	1
 11272  00338E  ECCF  F01B         	call	_lcd_send
 11273                           
 11274                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 11275  003392  C007  F005         	movff	lcd_set_cursor_x@x,lcd_send@value
 11276  003396  0E01               	movlw	1
 11277  003398  ECCF  F01B         	call	_lcd_send
 11278                           
 11279                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 11280  00339C  0E2C               	movlw	44
 11281  00339E  6E05               	movwf	lcd_send@value^0,c
 11282  0033A0  0E00               	movlw	0
 11283  0033A2  ECCF  F01B         	call	_lcd_send
 11284  0033A6                     
 11285                           ;lib_ili9341.c: 165:     return 0;
 11286  0033A6  0E00               	movlw	0
 11287  0033A8                     l324:
 11288  0033A8  0012               	return		;funcret
 11289  0033AA                     __end_of_lcd_set_cursor_x:
 11290                           	opt callstack 0
 11291                           
 11292 ;; *************** function _lcd_draw_pixel *****************
 11293 ;; Defined at:
 11294 ;;		line 183 in file "lib_ili9341.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;  color           2    6[COMRAM] unsigned short 
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      unsigned char 
 11301 ;; Registers used:
 11302 ;;		wreg, status,2, cstack
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;Total ram usage:        2 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:    6
 11315 ;; This function calls:
 11316 ;;		_lcd_send
 11317 ;; This function is called by:
 11318 ;;		_lcd_fill
 11319 ;;		_lcd_draw_pixel_at
 11320 ;;		_lcd_draw_char
 11321 ;;		_lcd_fill_rect
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text40
 11326  0037CE                     __ptext40:
 11327                           	opt callstack 0
 11328  0037CE                     _lcd_draw_pixel:
 11329                           	opt callstack 22
 11330  0037CE                     
 11331                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 11332  0037CE  5008               	movf	(lcd_draw_pixel@color+1)^0,w,c
 11333  0037D0  6E05               	movwf	lcd_send@value^0,c
 11334  0037D2  0E01               	movlw	1
 11335  0037D4  ECCF  F01B         	call	_lcd_send
 11336                           
 11337                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 11338  0037D8  C007  F005         	movff	lcd_draw_pixel@color,lcd_send@value
 11339  0037DC  0E01               	movlw	1
 11340  0037DE  ECCF  F01B         	call	_lcd_send
 11341  0037E2  0012               	return		;funcret
 11342  0037E4                     __end_of_lcd_draw_pixel:
 11343                           	opt callstack 0
 11344                           
 11345 ;; *************** function _lcd_send *****************
 11346 ;; Defined at:
 11347 ;;		line 132 in file "lib_ili9341.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;  dc              1    wreg     _Bool 
 11350 ;;  value           1    4[COMRAM] unsigned char 
 11351 ;; Auto vars:     Size  Location     Type
 11352 ;;  dc              1    5[COMRAM] _Bool 
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      void 
 11355 ;; Registers used:
 11356 ;;		wreg, status,2, cstack
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11362 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11366 ;;Total ram usage:        2 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; Hardware stack levels required when called:    5
 11369 ;; This function calls:
 11370 ;;		_SPI_ExchangeByte
 11371 ;; This function is called by:
 11372 ;;		_lcd_init
 11373 ;;		_lcd_set_cursor_x
 11374 ;;		_lcd_set_cursor_y
 11375 ;;		_lcd_draw_pixel
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           	psect	text41
 11380  00379E                     __ptext41:
 11381                           	opt callstack 0
 11382  00379E                     _lcd_send:
 11383                           	opt callstack 24
 11384                           
 11385                           ;incstack = 0
 11386                           ;lcd_send@dc stored from wreg
 11387  00379E  6E06               	movwf	lcd_send@dc^0,c
 11388  0037A0                     
 11389                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 11390  0037A0  B006               	btfsc	lcd_send@dc^0,0,c
 11391  0037A2  D002               	bra	u2695
 11392  0037A4  908D               	bcf	141,0,c	;volatile
 11393  0037A6  D001               	bra	u2696
 11394  0037A8                     u2695:
 11395  0037A8  808D               	bsf	141,0,c	;volatile
 11396  0037AA                     u2696:
 11397  0037AA                     
 11398                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 11399  0037AA  928D               	bcf	141,1,c	;volatile
 11400  0037AC                     
 11401                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 11402  0037AC  5005               	movf	lcd_send@value^0,w,c
 11403  0037AE  ECC2  F01B         	call	_SPI_ExchangeByte
 11404  0037B2                     
 11405                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 11406  0037B2  828D               	bsf	141,1,c	;volatile
 11407  0037B4  0012               	return		;funcret
 11408  0037B6                     __end_of_lcd_send:
 11409                           	opt callstack 0
 11410                           
 11411 ;; *************** function _SPI_ExchangeByte *****************
 11412 ;; Defined at:
 11413 ;;		line 92 in file "mcc_generated_files/spi.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;  data            1    wreg     unsigned char 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;  data            1    3[COMRAM] unsigned char 
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      unsigned char 
 11420 ;; Registers used:
 11421 ;;		wreg, status,2
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;Total ram usage:        1 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:    4
 11434 ;; This function calls:
 11435 ;;		Nothing
 11436 ;; This function is called by:
 11437 ;;		_lcd_send
 11438 ;;		_SPI_WriteBlock
 11439 ;;		_SPI_ReadBlock
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text42
 11444  003784                     __ptext42:
 11445                           	opt callstack 0
 11446  003784                     _SPI_ExchangeByte:
 11447                           	opt callstack 24
 11448                           
 11449                           ;incstack = 0
 11450                           ;SPI_ExchangeByte@data stored from wreg
 11451  003784  6E04               	movwf	SPI_ExchangeByte@data^0,c
 11452  003786                     
 11453                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 11454  003786  C004  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 11455  00378A                     l138:
 11456  00378A  A69E               	btfss	158,3,c	;volatile
 11457  00378C  EFCA  F01B         	goto	u2321
 11458  003790  EFCC  F01B         	goto	u2320
 11459  003794                     u2321:
 11460  003794  EFC5  F01B         	goto	l138
 11461  003798                     u2320:
 11462  003798                     
 11463                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 11464  003798  969E               	bcf	158,3,c	;volatile
 11465                           
 11466                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 11467  00379A  50C9               	movf	201,w,c	;volatile
 11468  00379C  0012               	return		;funcret
 11469  00379E                     __end_of_SPI_ExchangeByte:
 11470                           	opt callstack 0
 11471                           
 11472 ;; *************** function _SYSTEM_Initialize *****************
 11473 ;; Defined at:
 11474 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      void 
 11481 ;; Registers used:
 11482 ;;		wreg, status,2, status,0, cstack
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11492 ;;Total ram usage:        0 bytes
 11493 ;; Hardware stack levels used:    1
 11494 ;; Hardware stack levels required when called:    6
 11495 ;; This function calls:
 11496 ;;		_ADC_Initialize
 11497 ;;		_INTERRUPT_Initialize
 11498 ;;		_OSCILLATOR_Initialize
 11499 ;;		_PIN_MANAGER_Initialize
 11500 ;;		_SPI_Initialize
 11501 ;; This function is called by:
 11502 ;;		_main
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text43
 11507  0037E4                     __ptext43:
 11508                           	opt callstack 0
 11509  0037E4                     _SYSTEM_Initialize:
 11510                           	opt callstack 24
 11511  0037E4                     
 11512                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11513  0037E4  EC23  F01C         	call	_INTERRUPT_Initialize	;wreg free
 11514  0037E8                     
 11515                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 11516  0037E8  ECFD  F01B         	call	_SPI_Initialize	;wreg free
 11517  0037EC                     
 11518                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11519  0037EC  ECF8  F019         	call	_PIN_MANAGER_Initialize	;wreg free
 11520  0037F0                     
 11521                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11522  0037F0  EC06  F01C         	call	_OSCILLATOR_Initialize	;wreg free
 11523  0037F4                     
 11524                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 11525  0037F4  ECB0  F01B         	call	_ADC_Initialize	;wreg free
 11526  0037F8  0012               	return		;funcret
 11527  0037FA                     __end_of_SYSTEM_Initialize:
 11528                           	opt callstack 0
 11529                           
 11530 ;; *************** function _SPI_Initialize *****************
 11531 ;; Defined at:
 11532 ;;		line 62 in file "mcc_generated_files/spi.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;		None
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, status,2
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11550 ;;Total ram usage:        0 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    4
 11553 ;; This function calls:
 11554 ;;		Nothing
 11555 ;; This function is called by:
 11556 ;;		_SYSTEM_Initialize
 11557 ;; This function uses a non-reentrant model
 11558 ;;
 11559                           
 11560                           	psect	text44
 11561  0037FA                     __ptext44:
 11562                           	opt callstack 0
 11563  0037FA                     _SPI_Initialize:
 11564                           	opt callstack 25
 11565  0037FA                     
 11566                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 11567  0037FA  0E40               	movlw	64
 11568  0037FC  6EC7               	movwf	199,c	;volatile
 11569                           
 11570                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 11571  0037FE  0E00               	movlw	0
 11572  003800  6EC6               	movwf	198,c	;volatile
 11573                           
 11574                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 11575  003802  0E01               	movlw	1
 11576  003804  6EC8               	movwf	200,c	;volatile
 11577  003806                     
 11578                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 11579  003806  9694               	bcf	148,3,c	;volatile
 11580  003808                     
 11581                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 11582  003808  9AC6               	bcf	198,5,c	;volatile
 11583  00380A  0012               	return		;funcret
 11584  00380C                     __end_of_SPI_Initialize:
 11585                           	opt callstack 0
 11586                           
 11587 ;; *************** function _PIN_MANAGER_Initialize *****************
 11588 ;; Defined at:
 11589 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;		None
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;		None
 11594 ;; Return value:  Size  Location     Type
 11595 ;;                  1    wreg      void 
 11596 ;; Registers used:
 11597 ;;		wreg, status,2, status,0, cstack
 11598 ;; Tracked objects:
 11599 ;;		On entry : 0/0
 11600 ;;		On exit  : 0/0
 11601 ;;		Unchanged: 0/0
 11602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11607 ;;Total ram usage:        0 bytes
 11608 ;; Hardware stack levels used:    1
 11609 ;; Hardware stack levels required when called:    5
 11610 ;; This function calls:
 11611 ;;		_IOCB4_SetInterruptHandler
 11612 ;; This function is called by:
 11613 ;;		_SYSTEM_Initialize
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           	psect	text45
 11618  0033F0                     __ptext45:
 11619                           	opt callstack 0
 11620  0033F0                     _PIN_MANAGER_Initialize:
 11621                           	opt callstack 24
 11622  0033F0                     
 11623                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 11624  0033F0  0E00               	movlw	0
 11625  0033F2  6E8D               	movwf	141,c	;volatile
 11626                           
 11627                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11628  0033F4  0E00               	movlw	0
 11629  0033F6  6E8C               	movwf	140,c	;volatile
 11630                           
 11631                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11632  0033F8  0E00               	movlw	0
 11633  0033FA  6E89               	movwf	137,c	;volatile
 11634                           
 11635                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 11636  0033FC  0E00               	movlw	0
 11637  0033FE  6E8A               	movwf	138,c	;volatile
 11638                           
 11639                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 11640  003400  0E00               	movlw	0
 11641  003402  6E8B               	movwf	139,c	;volatile
 11642                           
 11643                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 11644  003404  0E04               	movlw	4
 11645  003406  6E96               	movwf	150,c	;volatile
 11646                           
 11647                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xCF;
 11648  003408  0ECF               	movlw	207
 11649  00340A  6E92               	movwf	146,c	;volatile
 11650  00340C                     
 11651                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 11652  00340C  6893               	setf	147,c	;volatile
 11653                           
 11654                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 11655  00340E  0ED7               	movlw	215
 11656  003410  6E94               	movwf	148,c	;volatile
 11657  003412                     
 11658                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 11659  003412  6895               	setf	149,c	;volatile
 11660                           
 11661                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8E;
 11662  003414  0E8E               	movlw	142
 11663  003416  010F               	movlb	15	; () banked
 11664  003418  6F5D               	movwf	93,b	;volatile
 11665                           
 11666                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x7D;
 11667  00341A  0E7D               	movlw	125
 11668  00341C  6F5C               	movwf	92,b	;volatile
 11669                           
 11670                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 11671  00341E  0E00               	movlw	0
 11672  003420  6F5B               	movwf	91,b	;volatile
 11673  003422                     
 11674                           ; BSR set to: 15
 11675                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 11676  003422  8EF1               	bsf	241,7,c	;volatile
 11677  003424                     
 11678                           ; BSR set to: 15
 11679                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 11680  003424  895A               	bsf	90,4,b	;volatile
 11681  003426                     
 11682                           ; BSR set to: 15
 11683                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 11684  003426  0E4C               	movlw	low _IOCB4_DefaultInterruptHandler
 11685  003428  6E04               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 11686  00342A  0E38               	movlw	high _IOCB4_DefaultInterruptHandler
 11687  00342C  6E05               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 11688  00342E  EC15  F01C         	call	_IOCB4_SetInterruptHandler	;wreg free
 11689  003432                     
 11690                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 11691  003432  86F2               	bsf	242,3,c	;volatile
 11692  003434  0012               	return		;funcret
 11693  003436                     __end_of_PIN_MANAGER_Initialize:
 11694                           	opt callstack 0
 11695                           
 11696 ;; *************** function _IOCB4_SetInterruptHandler *****************
 11697 ;; Defined at:
 11698 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 11701 ;;		 -> acende_led(1), IOCB4_DefaultInterruptHandler(1), 
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;		None
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      void 
 11706 ;; Registers used:
 11707 ;;		wreg, status,2, status,0
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11717 ;;Total ram usage:        2 bytes
 11718 ;; Hardware stack levels used:    1
 11719 ;; Hardware stack levels required when called:    4
 11720 ;; This function calls:
 11721 ;;		Nothing
 11722 ;; This function is called by:
 11723 ;;		_PIN_MANAGER_Initialize
 11724 ;;		_main
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text46
 11729  00382A                     __ptext46:
 11730                           	opt callstack 0
 11731  00382A                     _IOCB4_SetInterruptHandler:
 11732                           	opt callstack 24
 11733  00382A                     
 11734                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 11735  00382A  C004  F0D4         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 11736  00382E  C005  F0D5         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 11737  003832  0012               	return		;funcret
 11738  003834                     __end_of_IOCB4_SetInterruptHandler:
 11739                           	opt callstack 0
 11740                           
 11741 ;; *************** function _OSCILLATOR_Initialize *****************
 11742 ;; Defined at:
 11743 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;		None
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		wreg, status,2
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11761 ;;Total ram usage:        0 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    4
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_SYSTEM_Initialize
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text47
 11772  00380C                     __ptext47:
 11773                           	opt callstack 0
 11774  00380C                     _OSCILLATOR_Initialize:
 11775                           	opt callstack 25
 11776  00380C                     
 11777                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x62;
 11778  00380C  0E62               	movlw	98
 11779  00380E  6ED3               	movwf	211,c	;volatile
 11780                           
 11781                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x00;
 11782  003810  0E00               	movlw	0
 11783  003812  6ED2               	movwf	210,c	;volatile
 11784                           
 11785                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 11786  003814  0E00               	movlw	0
 11787  003816  6E9B               	movwf	155,c	;volatile
 11788                           
 11789                           ;mcc_generated_files/mcc.c: 69:     REFOCON = 0x00;
 11790  003818  0E00               	movlw	0
 11791  00381A  6E9A               	movwf	154,c	;volatile
 11792  00381C  0012               	return		;funcret
 11793  00381E                     __end_of_OSCILLATOR_Initialize:
 11794                           	opt callstack 0
 11795                           
 11796 ;; *************** function _INTERRUPT_Initialize *****************
 11797 ;; Defined at:
 11798 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;		None
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;		None
 11803 ;; Return value:  Size  Location     Type
 11804 ;;                  1    wreg      void 
 11805 ;; Registers used:
 11806 ;;		None
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11816 ;;Total ram usage:        0 bytes
 11817 ;; Hardware stack levels used:    1
 11818 ;; Hardware stack levels required when called:    4
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_SYSTEM_Initialize
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text48
 11827  003846                     __ptext48:
 11828                           	opt callstack 0
 11829  003846                     _INTERRUPT_Initialize:
 11830                           	opt callstack 25
 11831  003846                     
 11832                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 11833  003846  9ED0               	bcf	208,7,c	;volatile
 11834  003848  0012               	return		;funcret
 11835  00384A                     __end_of_INTERRUPT_Initialize:
 11836                           	opt callstack 0
 11837                           
 11838 ;; *************** function _ADC_Initialize *****************
 11839 ;; Defined at:
 11840 ;;		line 62 in file "mcc_generated_files/adc.c"
 11841 ;; Parameters:    Size  Location     Type
 11842 ;;		None
 11843 ;; Auto vars:     Size  Location     Type
 11844 ;;		None
 11845 ;; Return value:  Size  Location     Type
 11846 ;;                  1    wreg      void 
 11847 ;; Registers used:
 11848 ;;		wreg, status,2, status,0, cstack
 11849 ;; Tracked objects:
 11850 ;;		On entry : 0/0
 11851 ;;		On exit  : 0/0
 11852 ;;		Unchanged: 0/0
 11853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11858 ;;Total ram usage:        0 bytes
 11859 ;; Hardware stack levels used:    1
 11860 ;; Hardware stack levels required when called:    5
 11861 ;; This function calls:
 11862 ;;		_ADC_SetInterruptHandler
 11863 ;; This function is called by:
 11864 ;;		_SYSTEM_Initialize
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text49
 11869  003760                     __ptext49:
 11870                           	opt callstack 0
 11871  003760                     _ADC_Initialize:
 11872                           	opt callstack 24
 11873  003760                     
 11874                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
 11875  003760  0E01               	movlw	1
 11876  003762  6EC2               	movwf	194,c	;volatile
 11877                           
 11878                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 11879  003764  0E80               	movlw	128
 11880  003766  6EC1               	movwf	193,c	;volatile
 11881                           
 11882                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 11883  003768  0EA1               	movlw	161
 11884  00376A  6EC0               	movwf	192,c	;volatile
 11885                           
 11886                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 11887  00376C  0E00               	movlw	0
 11888  00376E  6EC4               	movwf	196,c	;volatile
 11889                           
 11890                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 11891  003770  0E00               	movlw	0
 11892  003772  6EC3               	movwf	195,c	;volatile
 11893  003774                     
 11894                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 11895  003774  8C9D               	bsf	157,6,c	;volatile
 11896  003776                     
 11897                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 11898  003776  0E4E               	movlw	low _ADC_DefaultInterruptHandler
 11899  003778  6E04               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
 11900  00377A  0E38               	movlw	high _ADC_DefaultInterruptHandler
 11901  00377C  6E05               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
 11902  00377E  EC1A  F01C         	call	_ADC_SetInterruptHandler	;wreg free
 11903  003782  0012               	return		;funcret
 11904  003784                     __end_of_ADC_Initialize:
 11905                           	opt callstack 0
 11906                           
 11907 ;; *************** function _ADC_SetInterruptHandler *****************
 11908 ;; Defined at:
 11909 ;;		line 150 in file "mcc_generated_files/adc.c"
 11910 ;; Parameters:    Size  Location     Type
 11911 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
 11912 ;;		 -> ADC_POT(1), ADC_DefaultInterruptHandler(1), 
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		wreg, status,2, status,0
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11928 ;;Total ram usage:        2 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    4
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_ADC_Initialize
 11935 ;;		_main
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text50
 11940  003834                     __ptext50:
 11941                           	opt callstack 0
 11942  003834                     _ADC_SetInterruptHandler:
 11943                           	opt callstack 24
 11944  003834                     
 11945                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 11946  003834  C004  F0D2         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 11947  003838  C005  F0D3         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 11948  00383C  0012               	return		;funcret
 11949  00383E                     __end_of_ADC_SetInterruptHandler:
 11950                           	opt callstack 0
 11951                           
 11952 ;; *************** function _SPI_Open *****************
 11953 ;; Defined at:
 11954 ;;		line 72 in file "mcc_generated_files/spi.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  spiUniqueCon    1    wreg     enum E353
 11957 ;; Auto vars:     Size  Location     Type
 11958 ;;  spiUniqueCon    1    4[COMRAM] enum E353
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  1    wreg      _Bool 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11970 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11972 ;;Total ram usage:        2 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    4
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_main
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text51
 11983  00307A                     __ptext51:
 11984                           	opt callstack 0
 11985  00307A                     _SPI_Open:
 11986                           	opt callstack 26
 11987                           
 11988                           ;incstack = 0
 11989                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 11990  00307A  6E05               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 11991  00307C                     
 11992                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 11993  00307C  BAC6               	btfsc	198,5,c	;volatile
 11994  00307E  EF43  F018         	goto	u4131
 11995  003082  EF45  F018         	goto	u4130
 11996  003086                     u4131:
 11997  003086  EF94  F018         	goto	l132
 11998  00308A                     u4130:
 11999  00308A                     
 12000                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 12001  00308A  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12002  00308C  0D04               	mullw	4
 12003  00308E  0E01               	movlw	1
 12004  003090  26F3               	addwf	243,f,c
 12005  003092  0E00               	movlw	0
 12006  003094  22F4               	addwfc	244,f,c
 12007  003096  0E8D               	movlw	low _spi_configuration
 12008  003098  24F3               	addwf	243,w,c
 12009  00309A  6EF6               	movwf	tblptrl,c
 12010  00309C  0EFF               	movlw	high _spi_configuration
 12011  00309E  20F4               	addwfc	244,w,c
 12012  0030A0  6EF7               	movwf	tblptrh,c
 12013  0030A2                     	if	1	;There are 3 active tblptr bytes
 12014  0030A2  6AF8               	clrf	tblptru,c
 12015  0030A4  0E00               	movlw	low (__mediumconst shr (0+16))
 12016  0030A6  22F8               	addwfc	tblptru,f,c
 12017  0030A8                     	endif
 12018  0030A8  0008               	tblrd		*
 12019  0030AA  CFF5 FFC7          	movff	tablat,4039	;volatile
 12020                           
 12021                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 12022  0030AE  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12023  0030B0  0D04               	mullw	4
 12024  0030B2  0E8D               	movlw	low _spi_configuration
 12025  0030B4  24F3               	addwf	243,w,c
 12026  0030B6  6EF6               	movwf	tblptrl,c
 12027  0030B8  0EFF               	movlw	high _spi_configuration
 12028  0030BA  20F4               	addwfc	244,w,c
 12029  0030BC  6EF7               	movwf	tblptrh,c
 12030  0030BE                     	if	1	;There are 3 active tblptr bytes
 12031  0030BE  6AF8               	clrf	tblptru,c
 12032  0030C0  0E00               	movlw	low (__mediumconst shr (0+16))
 12033  0030C2  22F8               	addwfc	tblptru,f,c
 12034  0030C4                     	endif
 12035  0030C4  0008               	tblrd		*
 12036  0030C6  CFF5 FFC6          	movff	tablat,4038	;volatile
 12037  0030CA                     
 12038                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 12039  0030CA  0E00               	movlw	0
 12040  0030CC  6EC5               	movwf	197,c	;volatile
 12041  0030CE                     
 12042                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 12043  0030CE  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12044  0030D0  0D04               	mullw	4
 12045  0030D2  0E02               	movlw	2
 12046  0030D4  26F3               	addwf	243,f,c
 12047  0030D6  0E00               	movlw	0
 12048  0030D8  22F4               	addwfc	244,f,c
 12049  0030DA  0E8D               	movlw	low _spi_configuration
 12050  0030DC  24F3               	addwf	243,w,c
 12051  0030DE  6EF6               	movwf	tblptrl,c
 12052  0030E0  0EFF               	movlw	high _spi_configuration
 12053  0030E2  20F4               	addwfc	244,w,c
 12054  0030E4  6EF7               	movwf	tblptrh,c
 12055  0030E6                     	if	1	;There are 3 active tblptr bytes
 12056  0030E6  6AF8               	clrf	tblptru,c
 12057  0030E8  0E00               	movlw	low (__mediumconst shr (0+16))
 12058  0030EA  22F8               	addwfc	tblptru,f,c
 12059  0030EC                     	endif
 12060  0030EC  0008               	tblrd		*
 12061  0030EE  CFF5 FFC8          	movff	tablat,4040	;volatile
 12062  0030F2                     
 12063                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 12064  0030F2  5005               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 12065  0030F4  0D04               	mullw	4
 12066  0030F6  0E03               	movlw	3
 12067  0030F8  26F3               	addwf	243,f,c
 12068  0030FA  0E00               	movlw	0
 12069  0030FC  22F4               	addwfc	244,f,c
 12070  0030FE  0E8D               	movlw	low _spi_configuration
 12071  003100  24F3               	addwf	243,w,c
 12072  003102  6EF6               	movwf	tblptrl,c
 12073  003104  0EFF               	movlw	high _spi_configuration
 12074  003106  20F4               	addwfc	244,w,c
 12075  003108  6EF7               	movwf	tblptrh,c
 12076  00310A                     	if	1	;There are 3 active tblptr bytes
 12077  00310A  6AF8               	clrf	tblptru,c
 12078  00310C  0E00               	movlw	low (__mediumconst shr (0+16))
 12079  00310E  22F8               	addwfc	tblptru,f,c
 12080  003110                     	endif
 12081  003110  0008               	tblrd		*
 12082  003112  CFF5 F004          	movff	tablat,??_SPI_Open
 12083  003116  4604               	rlncf	??_SPI_Open^0,f,c
 12084  003118  4604               	rlncf	??_SPI_Open^0,f,c
 12085  00311A  4604               	rlncf	??_SPI_Open^0,f,c
 12086  00311C  5094               	movf	148,w,c	;volatile
 12087  00311E  1804               	xorwf	??_SPI_Open^0,w,c
 12088  003120  0BF7               	andlw	-9
 12089  003122  1804               	xorwf	??_SPI_Open^0,w,c
 12090  003124  6E94               	movwf	148,c	;volatile
 12091  003126                     
 12092                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 12093  003126  8AC6               	bsf	198,5,c	;volatile
 12094  003128                     l132:
 12095  003128  0012               	return		;funcret
 12096  00312A                     __end_of_SPI_Open:
 12097                           	opt callstack 0
 12098                           
 12099 ;; *************** function _INTERRUPT_InterruptManager *****************
 12100 ;; Defined at:
 12101 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;		None
 12104 ;; Auto vars:     Size  Location     Type
 12105 ;;		None
 12106 ;; Return value:  Size  Location     Type
 12107 ;;                  1    wreg      void 
 12108 ;; Registers used:
 12109 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12110 ;; Tracked objects:
 12111 ;;		On entry : 0/0
 12112 ;;		On exit  : 0/0
 12113 ;;		Unchanged: 0/0
 12114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12119 ;;Total ram usage:        2 bytes
 12120 ;; Hardware stack levels used:    1
 12121 ;; Hardware stack levels required when called:    3
 12122 ;; This function calls:
 12123 ;;		_ADC_ISR
 12124 ;;		_PIN_MANAGER_IOC
 12125 ;; This function is called by:
 12126 ;;		Interrupt level 2
 12127 ;; This function uses a non-reentrant model
 12128 ;;
 12129                           
 12130                           	psect	intcode
 12131  000008                     __pintcode:
 12132                           	opt callstack 0
 12133  000008                     _INTERRUPT_InterruptManager:
 12134                           	opt callstack 18
 12135                           
 12136                           ;incstack = 0
 12137  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12138  00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
 12139  00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12140  000012                     
 12141                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.RBIE == 1 && INTCONbits.
      +                          RBIF == 1)
 12142  000012  A6F2               	btfss	242,3,c	;volatile
 12143  000014  EF0E  F000         	goto	i2u426_41
 12144  000018  EF10  F000         	goto	i2u426_40
 12145  00001C                     i2u426_41:
 12146  00001C  EF1B  F000         	goto	i2l101
 12147  000020                     i2u426_40:
 12148  000020  A0F2               	btfss	242,0,c	;volatile
 12149  000022  EF15  F000         	goto	i2u427_41
 12150  000026  EF17  F000         	goto	i2u427_40
 12151  00002A                     i2u427_41:
 12152  00002A  EF1B  F000         	goto	i2l101
 12153  00002E                     i2u427_40:
 12154  00002E                     
 12155                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         PIN_MANAGER_IOC();
 12156  00002E  ECDB  F01B         	call	_PIN_MANAGER_IOC	;wreg free
 12157                           
 12158                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 12159  000032  EF34  F000         	goto	i2l107
 12160  000036                     i2l101:
 12161  000036  ACF2               	btfss	242,6,c	;volatile
 12162  000038  EF20  F000         	goto	i2u428_41
 12163  00003C  EF22  F000         	goto	i2u428_40
 12164  000040                     i2u428_41:
 12165  000040  EF34  F000         	goto	i2l107
 12166  000044                     i2u428_40:
 12167  000044                     
 12168                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 12169  000044  AC9D               	btfss	157,6,c	;volatile
 12170  000046  EF27  F000         	goto	i2u429_41
 12171  00004A  EF29  F000         	goto	i2u429_40
 12172  00004E                     i2u429_41:
 12173  00004E  EF34  F000         	goto	i2l106
 12174  000052                     i2u429_40:
 12175  000052  AC9E               	btfss	158,6,c	;volatile
 12176  000054  EF2E  F000         	goto	i2u430_41
 12177  000058  EF30  F000         	goto	i2u430_40
 12178  00005C                     i2u430_41:
 12179  00005C  EF34  F000         	goto	i2l106
 12180  000060                     i2u430_40:
 12181  000060                     
 12182                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             ADC_ISR();
 12183  000060  EC57  F01B         	call	_ADC_ISR	;wreg free
 12184                           
 12185                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 12186  000064  EF34  F000         	goto	i2l107
 12187  000068                     i2l106:
 12188  000068                     i2l107:
 12189  000068  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12190  00006C  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12191  000070  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12192  000072  0011               	retfie		f
 12193  000074                     __end_of_INTERRUPT_InterruptManager:
 12194                           	opt callstack 0
 12195                           
 12196 ;; *************** function _PIN_MANAGER_IOC *****************
 12197 ;; Defined at:
 12198 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;		None
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;		None
 12203 ;; Return value:  Size  Location     Type
 12204 ;;                  1    wreg      void 
 12205 ;; Registers used:
 12206 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12207 ;; Tracked objects:
 12208 ;;		On entry : 0/0
 12209 ;;		On exit  : 0/0
 12210 ;;		Unchanged: 0/0
 12211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;Total ram usage:        0 bytes
 12217 ;; Hardware stack levels used:    1
 12218 ;; Hardware stack levels required when called:    2
 12219 ;; This function calls:
 12220 ;;		_IOCB4_ISR
 12221 ;; This function is called by:
 12222 ;;		_INTERRUPT_InterruptManager
 12223 ;; This function uses a non-reentrant model
 12224 ;;
 12225                           
 12226                           	psect	text53
 12227  0037B6                     __ptext53:
 12228                           	opt callstack 0
 12229  0037B6                     _PIN_MANAGER_IOC:
 12230                           	opt callstack 18
 12231  0037B6                     
 12232                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 12233  0037B6  010F               	movlb	15	; () banked
 12234  0037B8  A95A               	btfss	90,4,b	;volatile
 12235  0037BA  EFE1  F01B         	goto	i2u410_41
 12236  0037BE  EFE3  F01B         	goto	i2u410_40
 12237  0037C2                     i2u410_41:
 12238  0037C2  EFE5  F01B         	goto	i2l4149
 12239  0037C6                     i2u410_40:
 12240  0037C6                     
 12241                           ; BSR set to: 15
 12242                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 12243  0037C6  EC86  F01B         	call	_IOCB4_ISR	;wreg free
 12244  0037CA                     i2l4149:
 12245                           
 12246                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 12247  0037CA  90F2               	bcf	242,0,c	;volatile
 12248  0037CC  0012               	return		;funcret
 12249  0037CE                     __end_of_PIN_MANAGER_IOC:
 12250                           	opt callstack 0
 12251                           
 12252 ;; *************** function _IOCB4_ISR *****************
 12253 ;; Defined at:
 12254 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12272 ;;Total ram usage:        0 bytes
 12273 ;; Hardware stack levels used:    1
 12274 ;; Hardware stack levels required when called:    1
 12275 ;; This function calls:
 12276 ;;		Absolute function
 12277 ;;		_IOCB4_DefaultInterruptHandler
 12278 ;;		_acende_led
 12279 ;; This function is called by:
 12280 ;;		_PIN_MANAGER_IOC
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text54
 12285  00370C                     __ptext54:
 12286                           	opt callstack 0
 12287  00370C                     _IOCB4_ISR:
 12288                           	opt callstack 18
 12289  00370C                     
 12290                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 12291  00370C  0100               	movlb	0	; () banked
 12292  00370E  51D4               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 12293  003710  11D5               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 12294  003712  B4D8               	btfsc	status,2,c
 12295  003714  EF8E  F01B         	goto	i2u393_41
 12296  003718  EF90  F01B         	goto	i2u393_40
 12297  00371C                     i2u393_41:
 12298  00371C  EF9C  F01B         	goto	i2l51
 12299  003720                     i2u393_40:
 12300  003720                     
 12301                           ; BSR set to: 0
 12302                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 12303  003720  D802               	call	i2u394_48
 12304  003722  EF9C  F01B         	goto	i2u394_49
 12305  003726                     i2u394_48:
 12306  003726  0005               	push	
 12307  003728  6EFA               	movwf	pclath,c
 12308  00372A  51D4               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 12309  00372C  6EFD               	movwf	tosl,c
 12310  00372E  51D5               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 12311  003730  6EFE               	movwf	tosh,c
 12312  003732  6AFF               	clrf	tosu,c
 12313  003734  50FA               	movf	pclath,w,c
 12314  003736  0012               	return		;indir
 12315  003738                     i2u394_49:
 12316  003738                     i2l51:
 12317  003738  0012               	return		;funcret
 12318  00373A                     __end_of_IOCB4_ISR:
 12319                           	opt callstack 0
 12320                           
 12321 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 12322 ;; Defined at:
 12323 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 12324 ;; Parameters:    Size  Location     Type
 12325 ;;		None
 12326 ;; Auto vars:     Size  Location     Type
 12327 ;;		None
 12328 ;; Return value:  Size  Location     Type
 12329 ;;                  1    wreg      void 
 12330 ;; Registers used:
 12331 ;;		None
 12332 ;; Tracked objects:
 12333 ;;		On entry : 0/0
 12334 ;;		On exit  : 0/0
 12335 ;;		Unchanged: 0/0
 12336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12341 ;;Total ram usage:        0 bytes
 12342 ;; Hardware stack levels used:    1
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		_PIN_MANAGER_Initialize
 12347 ;;		_IOCB4_ISR
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text55
 12352  00384C                     __ptext55:
 12353                           	opt callstack 0
 12354  00384C                     _IOCB4_DefaultInterruptHandler:
 12355                           	opt callstack 18
 12356  00384C  0012               	return		;funcret
 12357  00384E                     __end_of_IOCB4_DefaultInterruptHandler:
 12358                           	opt callstack 0
 12359                           
 12360 ;; *************** function _acende_led *****************
 12361 ;; Defined at:
 12362 ;;		line 22 in file "main.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		wreg, status,2, status,0
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12380 ;;Total ram usage:        1 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		_main
 12386 ;;		_IOCB4_ISR
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text56
 12391  003616                     __ptext56:
 12392                           	opt callstack 0
 12393  003616                     _acende_led:
 12394                           	opt callstack 18
 12395  003616                     
 12396                           ;main.c: 23:     if (PORTBbits.RB4 == 0){
 12397  003616  B881               	btfsc	129,4,c	;volatile
 12398  003618  EF10  F01B         	goto	i2u388_41
 12399  00361C  EF12  F01B         	goto	i2u388_40
 12400  003620                     i2u388_41:
 12401  003620  EF25  F01B         	goto	i2l261
 12402  003624                     i2u388_40:
 12403  003624  BA89               	btfsc	137,5,c	;volatile
 12404  003626  EF17  F01B         	goto	i2u389_41
 12405  00362A  EF1A  F01B         	goto	i2u389_40
 12406  00362E                     i2u389_41:
 12407  00362E  0E01               	movlw	1
 12408  003630  EF1B  F01B         	goto	i2u389_46
 12409  003634                     i2u389_40:
 12410  003634  0E00               	movlw	0
 12411  003636                     i2u389_46:
 12412  003636  0AFF               	xorlw	255
 12413  003638  6E01               	movwf	??_acende_led^0,c
 12414  00363A  3A01               	swapf	??_acende_led^0,f,c
 12415  00363C  4601               	rlncf	??_acende_led^0,f,c
 12416  00363E  5089               	movf	137,w,c	;volatile
 12417  003640  1801               	xorwf	??_acende_led^0,w,c
 12418  003642  0BDF               	andlw	-33
 12419  003644  1801               	xorwf	??_acende_led^0,w,c
 12420  003646  6E89               	movwf	137,c	;volatile
 12421  003648                     
 12422                           ;main.c: 26:         ADCON0bits.ADON = 1;
 12423  003648  80C2               	bsf	194,0,c	;volatile
 12424  00364A                     i2l261:
 12425  00364A  0012               	return		;funcret
 12426  00364C                     __end_of_acende_led:
 12427                           	opt callstack 0
 12428                           
 12429 ;; *************** function _ADC_ISR *****************
 12430 ;; Defined at:
 12431 ;;		line 139 in file "mcc_generated_files/adc.c"
 12432 ;; Parameters:    Size  Location     Type
 12433 ;;		None
 12434 ;; Auto vars:     Size  Location     Type
 12435 ;;		None
 12436 ;; Return value:  Size  Location     Type
 12437 ;;                  1    wreg      void 
 12438 ;; Registers used:
 12439 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 12440 ;; Tracked objects:
 12441 ;;		On entry : 0/0
 12442 ;;		On exit  : 0/0
 12443 ;;		Unchanged: 0/0
 12444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12449 ;;Total ram usage:        0 bytes
 12450 ;; Hardware stack levels used:    1
 12451 ;; Hardware stack levels required when called:    1
 12452 ;; This function calls:
 12453 ;;		Absolute function
 12454 ;;		_ADC_DefaultInterruptHandler
 12455 ;;		_ADC_POT
 12456 ;; This function is called by:
 12457 ;;		_INTERRUPT_InterruptManager
 12458 ;; This function uses a non-reentrant model
 12459 ;;
 12460                           
 12461                           	psect	text57
 12462  0036AE                     __ptext57:
 12463                           	opt callstack 0
 12464  0036AE                     _ADC_ISR:
 12465                           	opt callstack 19
 12466  0036AE                     
 12467                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 12468  0036AE  9C9E               	bcf	158,6,c	;volatile
 12469  0036B0                     
 12470                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 12471  0036B0  0100               	movlb	0	; () banked
 12472  0036B2  51D2               	movf	_ADC_InterruptHandler& (0+255),w,b
 12473  0036B4  11D3               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
 12474  0036B6  B4D8               	btfsc	status,2,c
 12475  0036B8  EF60  F01B         	goto	i2u411_41
 12476  0036BC  EF62  F01B         	goto	i2u411_40
 12477  0036C0                     i2u411_41:
 12478  0036C0  EF6E  F01B         	goto	i2l217
 12479  0036C4                     i2u411_40:
 12480  0036C4                     
 12481                           ; BSR set to: 0
 12482                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 12483  0036C4  D802               	call	i2u412_48
 12484  0036C6  EF6E  F01B         	goto	i2u412_49
 12485  0036CA                     i2u412_48:
 12486  0036CA  0005               	push	
 12487  0036CC  6EFA               	movwf	pclath,c
 12488  0036CE  51D2               	movf	_ADC_InterruptHandler& (0+255),w,b
 12489  0036D0  6EFD               	movwf	tosl,c
 12490  0036D2  51D3               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
 12491  0036D4  6EFE               	movwf	tosh,c
 12492  0036D6  6AFF               	clrf	tosu,c
 12493  0036D8  50FA               	movf	pclath,w,c
 12494  0036DA  0012               	return		;indir
 12495  0036DC                     i2u412_49:
 12496  0036DC                     i2l217:
 12497  0036DC  0012               	return		;funcret
 12498  0036DE                     __end_of_ADC_ISR:
 12499                           	opt callstack 0
 12500                           
 12501 ;; *************** function _ADC_DefaultInterruptHandler *****************
 12502 ;; Defined at:
 12503 ;;		line 154 in file "mcc_generated_files/adc.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;		None
 12506 ;; Auto vars:     Size  Location     Type
 12507 ;;		None
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  1    wreg      void 
 12510 ;; Registers used:
 12511 ;;		None
 12512 ;; Tracked objects:
 12513 ;;		On entry : 0/0
 12514 ;;		On exit  : 0/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12521 ;;Total ram usage:        0 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_ADC_Initialize
 12527 ;;		_ADC_ISR
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           	psect	text58
 12532  00384E                     __ptext58:
 12533                           	opt callstack 0
 12534  00384E                     _ADC_DefaultInterruptHandler:
 12535                           	opt callstack 19
 12536  00384E  0012               	return		;funcret
 12537  003850                     __end_of_ADC_DefaultInterruptHandler:
 12538                           	opt callstack 0
 12539                           
 12540 ;; *************** function _ADC_POT *****************
 12541 ;; Defined at:
 12542 ;;		line 30 in file "main.c"
 12543 ;; Parameters:    Size  Location     Type
 12544 ;;		None
 12545 ;; Auto vars:     Size  Location     Type
 12546 ;;		None
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      void 
 12549 ;; Registers used:
 12550 ;;		wreg, status,2
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12560 ;;Total ram usage:        0 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; This function calls:
 12563 ;;		Nothing
 12564 ;; This function is called by:
 12565 ;;		_main
 12566 ;;		_ADC_ISR
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text59
 12571  00381E                     __ptext59:
 12572                           	opt callstack 0
 12573  00381E                     _ADC_POT:
 12574                           	opt callstack 19
 12575  00381E                     
 12576                           ;main.c: 32:     percentagem = 40;
 12577  00381E  0E00               	movlw	0
 12578  003820  0100               	movlb	0	; () banked
 12579  003822  6FA8               	movwf	(_percentagem+1)& (0+255),b
 12580  003824  0E28               	movlw	40
 12581  003826  6FA7               	movwf	_percentagem& (0+255),b
 12582  003828                     
 12583                           ; BSR set to: 0
 12584  003828  0012               	return		;funcret
 12585  00382A                     __end_of_ADC_POT:
 12586                           	opt callstack 0
 12587                           
 12588                           	psect	text60
 12589  000000                     __ptext60:
 12590                           	opt callstack 0
 12591  000000                     
 12592                           	psect	rparam
 12593  0000                     
 12594                           	psect	temp
 12595  00005A                     btemp:
 12596                           	opt callstack 0
 12597  00005A                     	ds	1
 12598  0000                     int$flags	set	btemp
 12599  0000                     wtemp8	set	btemp+1
 12600  0000                     ttemp5	set	btemp+1
 12601  0000                     ttemp6	set	btemp+4
 12602  0000                     ttemp7	set	btemp+8
 12603                           tosu	equ	0xFFF
 12604                           tosh	equ	0xFFE
 12605                           tosl	equ	0xFFD
 12606                           stkptr	equ	0xFFC
 12607                           pclatu	equ	0xFFB
 12608                           pclath	equ	0xFFA
 12609                           pcl	equ	0xFF9
 12610                           tblptru	equ	0xFF8
 12611                           tblptrh	equ	0xFF7
 12612                           tblptrl	equ	0xFF6
 12613                           tablat	equ	0xFF5
 12614                           prodh	equ	0xFF4
 12615                           prodl	equ	0xFF3
 12616                           indf0	equ	0xFEF
 12617                           postinc0	equ	0xFEE
 12618                           postdec0	equ	0xFED
 12619                           preinc0	equ	0xFEC
 12620                           plusw0	equ	0xFEB
 12621                           fsr0h	equ	0xFEA
 12622                           fsr0l	equ	0xFE9
 12623                           wreg	equ	0xFE8
 12624                           indf1	equ	0xFE7
 12625                           postinc1	equ	0xFE6
 12626                           postdec1	equ	0xFE5
 12627                           preinc1	equ	0xFE4
 12628                           plusw1	equ	0xFE3
 12629                           fsr1h	equ	0xFE2
 12630                           fsr1l	equ	0xFE1
 12631                           bsr	equ	0xFE0
 12632                           indf2	equ	0xFDF
 12633                           postinc2	equ	0xFDE
 12634                           postdec2	equ	0xFDD
 12635                           preinc2	equ	0xFDC
 12636                           plusw2	equ	0xFDB
 12637                           fsr2h	equ	0xFDA
 12638                           fsr2l	equ	0xFD9
 12639                           status	equ	0xFD8


Data Sizes:
    Strings     110
    Constant    3536
    Data        7
    BSS         148
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      89
    BANK0           160     61     118
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_100(CODE[3]), STR_96(CODE[3]), STR_91(CODE[3]), STR_87(CODE[3]), 
		 -> STR_82(CODE[4]), STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), 
		 -> STR_63(CODE[4]), STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), 
		 -> STR_43(CODE[3]), STR_38(CODE[3]), STR_33(CODE[4]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), STR_19(CODE[3]), STR_15(CODE[3]), STR_10(CODE[4]), 
		 -> STR_6(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S1915_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), STR_2(CODE[11]), STR_1(CODE[33]), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_POT(), ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_POT(), ADC_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_acende_led

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  134259
            _ADC_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46670
                                             49 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46113
                                             27 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45076
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44615
                                             69 COMRAM    10     4      6
                                              0 BANK0     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              9 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                             12 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             30 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             21 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              3 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              3 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             30 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             12 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   25800
                                             34 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             12 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   29702
                                             18 COMRAM    23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   26704
                                             12 COMRAM     6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              8 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              6 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              4 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     174
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                            _ADC_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                         _acende_led *
 ---------------------------------------------------------------------------------
 (13) _acende_led                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
                            _ADC_POT *
 ---------------------------------------------------------------------------------
 (12) _ADC_POT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
     _ADC_POT *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _acende_led *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      76       5       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      59       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     133       6        0.0%
DATA                 0      0     133       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 21 11:31:31 2020

                           _SPI_Initialize 37FA                                _SSPSTATbits 000FC7  
                                       l43 3434                                         l54 3832  
                                       l81 381C                                         l78 37F8  
                                       l96 3848                        ___wmul@multiplicand 0006  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
               ?_IOCB4_SetInterruptHandler 0004                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                                        l132 3128  
                                      l220 383C                                        l140 3798  
                                      l141 379C                                        l302 370A  
                                      l311 1674                                        l128 380A  
                                      l320 34BA                                        l138 378A  
                                      l314 37B4                                        l331 37E2  
                                      l324 33A8                                        l404 262E  
                                      l413 2A2C                                        l335 31AA  
                                      l328 3360                                        l360 2796  
                                      l504 1FAC                                        l513 23B4  
                                      l506 2010                                        l195 3782  
                                      l515 23BC                                        l611 12EE  
                                      l364 367C                                        l452 2FFC  
                                      l524 2464                                        l357 2764  
                                      l525 24AC                                        l470 1716  
                                      l534 1C60                                        l455 303E  
                                      l551 1994                                        l464 32C6  
                                      l472 171E                                        l544 1E26  
                                      l536 1C68                                        l457 3078  
                                      l529 24B4                                        l490 1952  
                                      l572 1BC4                                        l549 198C  
                                      l574 1C26                                        l558 1A28  
                                      l495 1E60                                        l655 3206  
                                      l656 320E                                        l497 1E68  
                                      l659 375E                                        l588 016E  
                                      l773 2332                                        l786 28FA  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
                                      _abs 34BC                                        _pad 2FB8  
                          __end_of_ADC_ISR 36DE                            __end_of_ADC_POT 382A  
          __end_of_ADC_SetInterruptHandler 383E                                        tosl 000FFD  
                                      wreg 000FE8               ?_ADC_DefaultInterruptHandler 0001  
                          ?_lcd_set_cursor 0009                         __size_of_IOCB4_ISR 002E  
                                     l1104 2D32                                       l1114 2EEC  
                                     l1107 2ECC                                       ?_abs 0016  
                                     l3101 2FB8                                       l1406 2FB6  
                                     l1414 3478                                       l1430 3614  
                                     l1334 34F2                                       l3111 3008  
                                     l3103 2FC6                                       l1424 36AC  
                                     l4001 34B8                                       l1417 384A  
                                     l3113 301C                                       l3105 2FDA  
                                     l3201 279C                                       l1337 34FA  
                                     l1097 2D12                                       l1434 2E1C  
                                     l3115 3020                                       l3107 2FE8  
                                     l3211 27FC                                       l3203 27AA  
                                     l3123 34BC                                       l1371 3536  
                                     l3131 34FC                                       l4011 31B4  
                                     l1444 3264                                       l4021 3412  
                                     l4005 37CE                                       l4101 25D0  
                                     l1365 21A2                                       l3117 304C  
                                     l3109 2FF4                                       l3301 329E  
                                     l3221 2872                                       l3213 281A  
                                     l3205 27CA                                       l3125 34D6  
                                     l3141 3258                                       l4013 31C2  
                                     l4023 3422                                       l4103 25D2  
                                     l4111 25F6                                       l3151 3756  
                                     l3071 2F3A                                       l3063 2EEE  
                                     l3119 3060                                       l3303 32A2  
                                     l3231 28DA                                       l3223 2892  
                                     l3215 2822                                       l3207 27CE  
                                     l3311 16BE                                       l1391 35A6  
                                     l3127 3570                                       l1455 356E  
                                     l3135 3210                                       l4015 31E8  
                                     l1471 2B1C                                       l1368 21AA  
                                     l4025 3424                                       l4017 33F0  
                                     l4041 3808                                       l4105 25E2  
                                     l4201 1350                                       l1377 35DE  
                                     l3145 35A8                                       l1385 3318  
                                     l3073 2F70                                       l3065 2F00  
                                     l3081 3454                                       l3161 21DE  
                                     l3225 28A4                                       l3217 2836  
                                     l3209 27DC                                       l3321 1726  
                                     l3313 16DE                                       l3401 1F84  
                                     l3241 2C76                                       l1449 326C  
                                     l4009 31AC                                       l1466 2B3C  
                                     l4035 3846                                       l4043 380C  
                                     l4027 3426                                       l4019 340C  
                                     l4107 25E4                                       l4211 1382  
                                     l4203 135A                                       l3067 2F12  
                                     l3083 3458                                       l3091 3608  
                                     l3171 2220                                       l3163 21E2  
                                     l3155 21AC                                       l3219 2844  
                                     l3227 28AA                                       l3331 175C  
                                     l3323 1738                                       l3315 16EE  
                                     l3307 1676                                       l3411 1FE2  
                                     l3403 1F9E                                       l3251 2CF8  
                                     l3243 2C8A                                       l3235 2C44  
                                     l3139 3246                                       l4045 3760  
                                     l4029 3432                                       l4037 37FA  
                                     l4109 25F4                                       l4061 312A  
                                     l4053 36E0                                       l4301 1544  
                                     l4221 13B4                                       l4213 138C  
                                     l4205 1364                                       l3149 373A  
                                     l3069 2F1C                                       l3077 3436  
                                     l3085 35E0                                       l3181 227A  
                                     l3173 223E                                       l3165 21F0  
                                     l3157 21B0                                       l3229 28BA  
                                     l3333 1762                                       l3341 1854  
                                     l3325 1746                                       l3317 16F0  
                                     l3309 1696                                       l3405 1FBA  
                                     l3413 1FE8                                       l3421 234E  
                                     l3253 2CFA                                       l3245 2C98  
                                     l3237 2C50                                       l3261 2E44  
                                     l3501 1980                                       l4047 3774  
                                     l4039 3806                                       l4151 37E4  
                                     l4071 3188                                       l4063 313A  
                                     l4055 36E8                                       l4311 1576  
                                     l4303 154E                                       l4231 13E6  
                                     l4223 13BE                                       l4215 1396  
                                     l4207 136E                                       l3079 3442  
                                     l3087 35EC                                       l3183 22A8  
                                     l3175 2246                                       l3191 22E2  
                                     l3167 2210                                       l3159 21BE  
                                     l3343 186E                                       l3351 18CE  
                                     l3335 17E4                                       l3327 174C  
                                     l3319 170A                                       l3407 1FCC  
                                     l3431 2392                                       l3423 2360  
                                     l3255 2D0C                                       l3247 2CAA  
                                     l3239 2C6E                                       l3271 2EC6  
                                     l3263 2E58                                       l3095 3538  
                                     l3511 19E2                                       l3503 19AA  
                                     l4049 3776                                       l4153 37E8  
                                     l4081 24BE                                       l4401 2900  
                                     l4073 3190                                       l4057 36F6  
                                     l4321 15A8                                       l4313 1580  
                                     l4305 1558                                       l4241 1418  
                                     l4233 13F0                                       l4225 13C8  
                                     l4217 13A0                                       l4209 1378  
                                     l3281 3312                                       l3273 32C8  
                                     l3089 35F0                                       l3193 22F2  
                                     l3185 22C8                                       l3177 225A  
                                     l3169 2214                                       l3361 1912  
                                     l3353 18E0                                       l3345 188C  
                                     l3337 17EA                                       l3329 1754  
                                     l3409 1FD2                                       l3441 2414  
                                     l3425 2368                                       l3417 2334  
                                     l3249 2CD8                                       l3265 2E66  
                                     l3257 2E1E                                       l3513 19E8  
                                     l3505 19B2                                       l4171 30CA  
                                     l4155 37EC                                       l3099 3786  
                                     l3291 37B2                                       l4075 364C  
                                     l4083 2502                                       l4411 29CA  
                                     l4403 2914                                       l4067 3162  
                                     l4059 36F8                                       l4331 15DA  
                                     l4323 15B2                                       l4315 158A  
                                     l4307 1562                                       l4251 144A  
                                     l4243 1422                                       l4235 13FA  
                                     l4227 13D2                                       l4219 13AA  
                                     l3275 32CC                                       l3195 2312  
                                     l3187 22CA                                       l3179 2268  
                                     l3363 191A                                       l3355 18EE  
                                     l3347 18A6                                       l3339 17F0  
                                     l3371 1E38                                       l3443 2420  
                                     l3435 23DE                                       l3427 237C  
                                     l3419 2346                                       l3611 2D78  
                                     l3603 2D34                                       l3267 2E94  
                                     l3259 2E3C                                       l3531 1ABA  
                                     l3523 1A5C                                       l3515 19F0  
                                     l3507 19D2                                       l4173 30CE  
                                     l4157 37F0                                       l3285 37A0  
                                     l4077 3670                                       l4413 29F6  
                                     l4405 294E                                       l4069 316E  
                                     l4341 160C                                       l4333 15E4  
                                     l4325 15BC                                       l4317 1594  
                                     l4309 156C                                       l4261 147C  
                                     l4253 1454                                       l4245 142C  
                                     l4237 1404                                       l4229 13DC  
                                     l4181 12F0                                       l3277 32E0  
                                     l3293 326E                                       l3189 22DC  
                                     l3357 18F4                                       l3365 192A  
                                     l3349 18C0                                       l3381 1E9C  
                                     l3373 1E3A                                       l3453 2476  
                                     l3445 243E                                       l3437 23F2  
                                     l3429 2384                                       l3613 2D96  
                                     l3605 2D5E                                       l3269 2EB4  
                                     l3461 1C38                                       l3525 1A6E  
                                     l3533 1ACE                                       l3517 1A0C  
                                     l3541 1B48                                       l3509 19DA  
                                     l4175 30F2                                       l4167 307C  
                                     l4159 37F4                                       l3287 37AA  
                                     l3631 33A6                                       l3623 3362  
                                     l4095 250A                                       l4079 24B6  
                                     l4407 2952                                       l4415 29FA  
                                     l4351 163E                                       l4343 1616  
                                     l4335 15EE                                       l4327 15C6  
                                     l4319 159E                                       l4271 14AE  
                                     l4263 1486                                       l4255 145E  
                                     l4247 1436                                       l4239 140E  
                                     l4191 131E                                       l4183 12FA  
                                     l3279 330E                                       l3295 3282  
                                     l3199 2798                                       l3359 1906  
                                     l3391 1ECE                                       l3383 1EA8  
                                     l3375 1E54                                       l3455 248A  
                                     l3447 2442                                       l3439 23F6  
                                     l3615 2DB4                                       l3471 1CA0  
                                     l3463 1C3A                                       l3551 1BD2  
                                     l3543 1B64                                       l3535 1ADE  
                                     l3519 1A1C                                       l3711 02BC  
                                     l3703 026E                                       l4177 3126  
                                     l4169 308A                                       l3289 37AC  
                                     l3625 3378                                       l3641 3336  
                                     l4361 2630                                       l4097 25B4  
                                     l4089 2506                                       l4409 299E  
                                     l4353 1648                                       l4345 1620  
                                     l4337 15F8                                       l4329 15D0  
                                     l4281 14E0                                       l4273 14B8  
                                     l4265 1490                                       l4257 1468  
                                     l4249 1440                                       l4193 1328  
                                     l4185 1300                                       l3561 2012  
                                     l3297 328E                                       l3393 1ED4  
                                     l3385 1EAE                                       l3377 1E90  
                                     l3369 1E28                                       l3457 248E  
                                     l3449 2446                                       l3617 2DC6  
                                     l3609 2D6A                                       l3473 1CA6  
                                     l3481 1D8C                                       l3465 1C54  
                                     l3553 1BD8                                       l3545 1B82  
                                     l3537 1AE4                                       l3529 1AA8  
                                     l3713 02E2                                       l3705 0280  
                                     l3643 335E                                       l3635 331A  
                                     l4371 2684                                       l4363 2652  
                                     l4099 25C4                                       l4355 1658  
                                     l4347 162A                                       l4339 1602  
                                     l4291 1512                                       l4283 14EA  
                                     l4275 14C2                                       l4267 149A  
                                     l4259 1472                                       l4195 1332  
                                     l4187 130A                                       l3571 2084  
                                     l3563 2026                                       l3299 329A  
                                     l3387 1EB6                                       l3395 1F32  
                                     l3379 1E98                                       l3619 2DF4  
                                     l3483 1D9E                                       l3491 1DFE  
                                     l3475 1D1C                                       l3467 1C90  
                                     l3459 1C28                                       l3555 1BE8  
                                     l3547 1B9C                                       l3539 1AEA  
                                     l3811 09D2                                       l3723 0394  
                                     l3715 031C                                       l3707 02A6  
                                     l3651 00AC                                       l3629 337E  
                                     l3637 3330                                       l4381 26C8  
                                     l4373 268C                                       l4365 265A  
                                     l4357 1662                                       l4349 1634  
                                     l4293 151C                                       l4285 14F4  
                                     l4277 14CC                                       l4269 14A4  
                                     l4197 133C                                       l4189 1314  
                                     l3581 20AC                                       l3573 2088  
                                     l3565 202A                                       l3397 1F4C  
                                     l3389 1EC8                                       l3485 1DBC  
                                     l3477 1D22                                       l3469 1C98  
                                     l3557 1BFE                                       l3549 1BB6  
                                     l3901 0F5C                                       l3805 0958  
                                     l3733 041A                                       l3717 033C  
                                     l3709 02AE                                       l3725 03A6  
                                     l3661 00E2                                       l3653 00BE  
                                     ?_pad 0014                                       l4383 26D0  
                                     l4375 2694                                       l4367 2662  
                                     l4359 1668                                       l4295 1526  
                                     l4287 14FE                                       l4279 14D6  
                                     l4199 1346                                       l3583 20B4  
                                     l3567 202E                                       l3399 1F6A  
                                     l3487 1DD6                                       l3479 1D28  
                                     l3495 1954                                       l3911 103C  
                                     l3903 0F94                                       l3807 098E  
                                     l3815 09DE                                       l3743 0508  
                                     l3735 0450                                       l3727 03CC  
                                     l3719 034A                                       l3655 00C2  
                                     l3647 0078                                       l4393 272C  
                                     l4385 26DC                                       l4377 26AA  
                                     l4369 266E                                       l4297 1530  
                                     l4289 1508                                       l3593 2162  
                                     l3585 20EA                                       l3577 208E  
                                     l3569 204C                                       l3489 1DF0  
                                     l3497 1964                                       l3913 1064  
                                     l3921 10B6                                       l3817 0A14  
                                     l3825 0A60                                       l3809 09C6  
                                     l3753 05C4                                       l3745 053E  
                                     l3737 0486                                       l3729 03FE  
                                     l3681 0106                                       l3673 00F4  
                                     l3665 00E8                                       l3657 00CE  
                                     l3649 009E                                       l4395 2754  
                                     l4387 26F8                                       l4379 26B2  
                                     l4299 153A                                       l3595 2174  
                                     l3579 20A4                                       l3499 1966  
                                     l3923 10DC                                       l3915 1074  
                                     l3907 0FD0                                       l3827 0A86  
                                     l3835 0AD0                                       l3819 0A4C  
                                     l3763 065E                                       l3755 05EA  
                                     l3747 0574                                       l3739 04D0  
                                     l3691 01DA                                       l3659 00D0  
                                     l3683 015C                                       l4651 2A52  
                                     l4643 2A2E                                       l4397 2782  
                                     l4389 2710                                       l3597 2186  
                                     l3589 2122                                       l3941 11FE  
                                     l3925 1102                                       l3909 1006  
                                     l3861 0C7C                                       l3853 0C00  
                                     l3837 0B06                                       l3845 0B52  
                                     l3829 0ABC                                       l3781 07D2  
                                     l3773 071C                                       l3765 0694  
                                     l3757 0610                                       l3693 01E8  
                                     l3685 017C                                       l3677 00FA  
                                     l3669 00EE                                       l4661 2ABC  
                                     l4653 2A70                                       l4645 2A42  
                                     l4399 28FC                                       l3951 1276  
                                     l3943 120E                                       l3927 111A  
                                     l3935 116A                                       l3871 0D68  
                                     l3863 0CB2                                       l3855 0C26  
                                     l3847 0B78                                       l3839 0B3E  
                                     l3791 0880                                       l3783 0808  
                                     l3775 0752                                       l3767 06CA  
                                     l3695 01F6                                       l3687 017E  
                                     l4663 2AD0                                       l4671 2B34  
                                     l4655 2A7C                                       l4647 2A4A  
                                     l3953 1284                                       l3937 11A0  
                                     l3929 1128                                       l3865 0CFA  
                                     l3857 0C5C                                       l3849 0BC4  
                                     l3777 079A                                       l3697 0216  
                                     l3689 01A4                                       l4665 2ADE  
                                     l4657 2A88                                       l4681 2B3E  
                                     l4771 20D4                                       l3955 1298  
                                     l3939 11D6                                       l3699 0224  
                                     l4667 2B0C                                       l4659 2A98  
                                     l4675 367E                                       l4691 2BBC  
                                     l4683 2B5A                                       l3949 1250  
                                     l3893 0EB8                                       l3885 0E30  
                                     l3877 0DBA                                       l3869 0D32  
                                     l3797 08D0                                       l3789 085A  
                                     l3965 12B6                                       l4669 2B24  
                                     l4677 3688                                       l4693 2BE8  
                                     l4685 2B60                                       l3983 382A  
                                     l3967 12DC                                       l3959 12A4  
                                     l3895 0EEE                                       l3887 0E66  
                                     l3879 0DE0                                       l3799 0906  
                                     l4695 2BEA                                       l4687 2B64  
                                     l3985 3834                                       l3993 347A  
                                     l3897 0F24                                       l4769 012E  
                                     l4697 2C10                                       l4689 2B90  
                                     l3995 3496                                       l3899 0F4C  
                                     l3997 34B2                                       STR_1 FF91  
                                     STR_2 FFC3                                       STR_3 FFB2  
                                     STR_4 FFD2                                       STR_6 FFD2  
                                     STR_8 FFD6                                       u3000 23DA  
                                     u3001 23D6                                       u3010 2414  
                                     u3011 2410                                       u3020 2464  
                                     u3100 1DF0                                       u2300 3568  
                                     u3021 2460                                       u3101 1DEC  
                                     u2301 3562                                       _LATA 000F89  
                                     u3030 2472                                       u3110 1DFE  
                                     u2310 356A                                       _LATB 000F8A  
                                     u3031 246E                                       u3111 1DFA  
                                     _LATC 000F8B                                       u2320 3798  
                                     u2240 2F00                                       u3040 24AC  
                                     u2400 3530                                       u3200 1AA4  
                                     u3120 1964                                       _LATD 000F8C  
                                     u2321 3794                                       u2241 2EFC  
                                     u3041 24A8                                       u2401 352A  
                                     u3121 1960                                       _LATE 000F8D  
                                     u4010 25B4                                       u2250 2F12  
                                     u2330 2FC6                                       u3050 1C38  
                                     u2410 3532                                       u3210 1ABA  
                                     u3130 1980                                       u4011 25B0  
                                     u2251 2F0E                                       u2331 2FC2  
                                     u3051 1C34                                       u3211 1AB6  
                                     u3131 197C                                       u4020 25E2  
                                     u4004 2594                                       u3300 2084  
                                     u2260 2F3A                                       u2340 2FE8  
                                     u2500 223E                                       u3060 1C54  
                                     u2420 3240                                       u3220 1B22  
                                     u3140 19AA                                       u4021 25DE  
                                     u4005 258E                                       u3301 2080  
                                     u2261 2F36                                       u2341 2FE4  
                                     u2501 223A                                       u3061 1C50  
                                     u2421 323A                                       u3141 19A6  
                                     u4030 25F4                                       u3310 20A0  
                                     u2270 2F70                                       u2350 303E  
                                     u2510 2268                                       u3070 1D9E  
                                     u2430 3242                                       u3230 1B64  
                                     u3150 1A0C                                       u4031 25F0  
                                     u3311 209C                                       u2271 2F6C  
                                     u2351 303A                                       u2511 2264  
                                     u3071 1D9A                                       u3231 1B60  
                                     u3151 1A08                                       u4200 2754  
                                     u4040 262E                                       u3320 215C  
                                     u2280 3478                                       u2360 304C  
                                     u2520 22A8                                       u3400 2DF4  
                                     u3080 1DBC                                       u2440 3258  
                                     u3240 1B82                                       u3160 1A56  
                                     u4201 2750                                       u4041 262A  
                                     u3321 2156                                       u2281 3474  
                                     u2361 3048                                       u2521 22A4  
                                     u3401 2DF0                                       u2601 2C4A  
                                     u3081 1DB8                                       u2441 3254  
                                     u3241 1B7E                                       u3225 1B10  
                                     u3161 1A50                                       u4130 308A  
                                     u3410 3378                                       u4210 2782  
                                     u2450 35D8                                       u3330 215E  
                                     u2290 3608                                       u2530 22F2  
                                     u2370 34D6                                       u2610 2C6E  
                                     u3090 1DD6                                       u3250 1B9C  
                                     u3170 1A58                                       u4131 3086  
                                     u3411 3374                                       u4211 277E  
                                     u2451 35D2                                       u2291 3604  
                                     u2531 22EE                                       u2371 34D2  
                                     u2611 2C6A                                       u3091 1DD2  
                                     u3251 1B98                                       u3420 3330  
                                     u4140 2652                                       u4220 297C  
                                     u2460 35DA                                       u3340 2174  
                                     u2700 3282                                       u2540 27AA  
                                     u2620 2C98                                       u2380 35A0  
                                     u3260 1BB6                                       u3180 1A6E  
                                     u3500 0280                                       u3421 332C  
                                     u4141 264E                                       u3341 2170  
                                     u2701 327E                                       u2541 27A6  
                                     u2621 2C94                                       u2381 359A  
                                     u3261 1BB2                                       u3181 1A6A  
                                     u3501 027C                                       u4150 2684  
                                     u4230 299E                                       u3350 2186  
                                     u2470 21BE                                       u2550 27DC  
                                     u2710 16A6                                       u2630 2CD8  
                                     u2390 35A2                                       u3270 1BC4  
                                     u3190 1AA2                                       u3510 02A6  
                                     u3430 009E                                       u4151 2680  
                                     u4231 299A                                       u3351 2182  
                                     u2471 21BA                                       u2551 27D8  
                                     u2711 16A0                                       u2631 2CD4  
                                     u3271 1BC0                                       u3191 1A9C  
                                     u3511 02A2                                       u3431 009A  
                                     u4160 26AA                                       u4240 2A1C  
                                     u2480 21F0                                       u2560 281A  
                                     u2800 18A6                                       u2720 16A8  
                                     u3360 2D5E                                       u2640 2E3C  
                                     u3280 1BD2                                       u3600 0574  
                                     u3520 02E2                                       u3440 016E  
                                     u4161 26A6                                       u2481 21EC  
                                     u2561 2816                                       u2801 18A2  
                                     u3361 2D5A                                       u2641 2E38  
                                     u3281 1BCE                                       u3601 0570  
                                     u3521 02DE                                       u3441 016A  
                                     u4170 26C8                                       u4250 2A2C  
                                     u3290 204C                                       u2570 2844  
                                     u2810 18C0                                       u2730 16BE  
                                     u3370 2D96                                       u2650 2E66  
                                     u3610 05EA                                       u3530 038C  
                                     u3450 017C                                       u4171 26C4  
                                     u4251 2A28                                       u4227 2972  
                                     u3291 2048                                       u2491 221A  
                                     u2571 2840                                       u2811 18BC  
                                     u2731 16BA                                       u3371 2D92  
                                     u2651 2E62                                       u3611 05E6  
                                     u3531 0386                                       u3451 0178  
                                     u4180 2710                                       u2580 2872  
                                     u2820 18CE                                       u2740 16EE  
                                     u2900 1F6A                                       u3380 2DB4  
                                     u2660 2E94                                       u3700 0A14  
                                     u3620 0610                                       u3540 038E  
                                     u3460 01A4                                       u4181 270C  
                                     u2581 286E                                       u2821 18CA  
                                     u2741 16EA                                       u2901 1F66  
                                     u3381 2DB0                                       u2661 2E90  
                                     u3701 0A10                                       u3621 060C  
                                     u3461 01A0                                       u4190 2728  
                                     u2670 32E0                                       u2590 28BA  
                                     u2830 18E0                                       u2750 170A  
                                     u2910 1F84                                       u3390 2DC6  
                                     u3710 0A86                                       u3630 0694  
                                     u3550 03A6                                       u3470 01E8  
                                     u4430 2A42                                       u4191 2724  
                                     u4247 2A12                                       u2671 32DC  
                                     u2591 28B6                                       u2831 18DC  
                                     u2751 1706                                       u2911 1F80  
                                     u3391 2DC2                                       u3711 0A82  
                                     u3631 0690                                       u3551 03A2  
                                     u3471 01E4                                       u4431 2A3E  
                                     u2680 330E                                       u2840 18EE  
                                     u2760 1738                                       u2920 1F9E  
                                     u3800 0F24                                       u3720 0B06  
                                     u3640 06CA                                       u3560 03CC  
                                     u3480 0266                                       u4440 2A70  
                                     u2681 330A                                       u2841 18EA  
                                     u2761 1734                                       u2921 1F9A  
                                     u3801 0F20                                       u3721 0B02  
                                     u3641 06C6                                       u3561 03C8  
                                     u3481 0260                                       u4441 2A6C  
                                     u2850 1906                                       u2770 1746  
                                     u2930 1FAC                                       u3810 1006  
                                     u3730 0B78                                       u3650 0752  
                                     u3570 0450                                       u3490 0268  
                                     u4450 2AD0                                       u2851 1902  
                                     u2771 1742                                       u2931 1FA8  
                                     u3811 1002                                       u3731 0B74  
                                     u3651 074E                                       u3571 044C  
                                     u4451 2ACC                                       u3900 3496  
                                     u2780 186E                                       u2940 1FBA  
                                     u2860 1E38                                       u3820 103C  
                                     u3740 0C26                                       u3660 0808  
                                     u3580 0486                                       u4460 2ADE  
                                     u3901 3492                                       u2781 186A  
                                     u2941 1FB6                                       u2861 1E34  
                                     u3821 1038                                       u3741 0C22  
                                     u3661 0804                                       u3581 0482  
                                     u4461 2ADA                                       u3910 34B2  
                                     u2790 188C                                       u2950 1FCC  
                                     u2870 1E54                                       u3830 10DC  
                                     u3750 0CB2                                       u3670 0880  
                                     u3590 053E                                       u4470 2B0C  
                                     u2695 37A8                                       u3911 34AE  
                                     u2791 1888                                       u2951 1FC8  
                                     u2871 1E50                                       u3831 10D8  
                                     u3751 0CAE                                       u3671 087C  
                                     u3591 053A                                       u4471 2B08  
                                     u2696 37AA                                       u2880 1F0C  
                                     u3840 1102                                       u3760 0D68  
                                     u3680 0906                                       u3920 3206  
                                     u2961 233E                                       u3841 10FE  
                                     u3761 0D64                                       u3681 0902  
                                     u3921 3202                                       u2890 1F4C  
                                     u2970 2360                                       u3850 11A0  
                                     u3770 0DE0                                       u3690 098E  
                                     u2891 1F48                                       u2971 235C  
                                     u3851 119C                                       u3771 0DDC  
                                     u3691 098A                                       u2980 2392  
                                     u3860 11D6                                       u3780 0E66  
                                     u2885 1EFA                                       u2981 238E  
                                     u3861 11D2                                       u3781 0E62  
                                     u3950 370A                                       u2990 23B0  
                                     u3870 1276                                       u3790 0EEE  
                                     u3951 3706                                       u4487 36EE  
                                     u2991 23AC                                       u3871 1272  
                                     u3791 0EEA                                       u3960 315E  
                                     u3961 315A                                       u3970 3188  
                                     i2l51 3738                                       u3971 3184  
                                     u3980 31AA                                       u3981 31A6  
                                     u3990 3670                                       i2l47 37CC  
                                     u3991 366C                                       i2l57 384C  
                                     _WPUB 000F5B                                       abs@a 0016  
                                     _dbuf 00AB                                       _atoi 2012  
                                     _ctoa 326E                                       _main 2B3E  
                                     _dtoa 1676                                       _font F1C1  
                                     _prec 00A3                                       _otoa 1E28  
                                     _nout 009F                                       pad@i 001B  
                                     pad@p 0018                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001D                                       fsr2l 000FD9  
                                     _stoa 2334                                       btemp 005A  
                                     _utoa 1C28                                       _xtoa 1954  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 0074                              __CFG_IESO$OFF 000000  
                   __end_of_SPI_Initialize 380C                              lcd_fill@width 0011  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_abs 0018                                      ??_pad 001A  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 381E  
                          __end_of___aodiv 2334                                      ?_atoi 000B  
                                    ?_ctoa 001F                                      ?_main 0001  
                                    ?_dtoa 001F                            __end_of___aomod 28FC  
                                    STR_10 FFD6                                      STR_22 FFED  
                                    STR_15 FFD3                                      STR_31 FFDE  
                                    STR_24 FFED                                      STR_33 FFDE  
                                    STR_41 FFF6                                      STR_26 FFF0  
                                    STR_19 FFD7                                      STR_43 FFF6  
                                    STR_28 FFF0                                      STR_53 FFDB  
                                    STR_61 FFE2                                      STR_38 FFDF  
                                    STR_46 FFDA                                      STR_63 FFE2  
                                    STR_71 FFF9                                      STR_48 FFDA  
                                    STR_56 FFF3                                      STR_80 FFCE  
                                    STR_73 FFF9                                      STR_82 FFCE  
                                    STR_58 FFF3                                      STR_91 FFCF  
                                    STR_68 FFE3                                      STR_76 FFE6  
                                    STR_78 FFE6                                      STR_94 FFFC  
                                    STR_87 FFE7                                      STR_96 FFFC  
                                    STR_98 FFEA                                      ?_otoa 001F  
        __end_of_IOCB4_SetInterruptHandler 3834                                      ?_stoa 000D  
                                    ?_utoa 001F                            __end_of___lodiv 2D34  
                                    ?_xtoa 001F                            __end_of___lomod 2EEE  
                                    i2l101 0036                                      i2l106 0068  
                                    i2l107 0068                                      i2l223 384E  
                                    i2l217 36DC                                      i2l261 364A  
                                    i2l264 3828                               vfpfcnvrt@fmt 0048  
                             vfpfcnvrt@llu 0073                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0017  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                            ??_lcd_draw_line 001D  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 370C                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 37CE                                      _flags 0058  
                                    _errno 009D                                      _fputc 2EEE  
                          __end_of_isalpha 3538                                      _fputs 3436  
                          __end_of_isdigit 35E0                                      atoi@n 0018  
                                    pad@fp 0014                                      atoi@s 000B  
                                    _width 00A1                                      ctoa@c 0021  
                                    _putch 384A                                      ctoa@w 0022  
                                    dtoa@d 0021                                      dtoa@i 0041  
                                    dtoa@n 0039                                      dtoa@p 0033  
                                    dtoa@s 0037                                      dtoa@w 0035  
                         __end_of_SPI_Open 312A                            __end_of_islower 3570  
                          __end_of_isspace 331A                            __end_of_isupper 35A8  
                                    pclath 000FFA                                      tablat 000FF5  
                                    otoa@d 0021                                      otoa@i 003F  
                                    otoa@n 0037                                      otoa@p 0031  
                                    otoa@t 0033                                      otoa@w 0035  
                                    plusw1 000FE3                                      plusw2 000FDB  
                                    stoa@i 0019                                      stoa@l 0021  
                                    stoa@p 001F                                      stoa@s 000F  
                                    stoa@w 001B                                      ttemp5 005B  
                                    ttemp6 005E                                      ttemp7 0062  
                                    utoa@d 0021                                      utoa@i 003D  
                                    utoa@n 0035                                      utoa@p 0031  
                                    utoa@w 0033                                      status 000FD8  
                                    wtemp8 005B                                      xtoa@c 0044  
                                    xtoa@d 0021                                      xtoa@i 0042  
                                    xtoa@n 003A                                      xtoa@p 0036  
                                    xtoa@w 0038                                      xtoa@x 0029  
                          __end_of_strncmp 2E1E                            __end_of_toupper 326E  
                           lcd_fill@height 000F                           ___lodiv@dividend 0004  
                          ?_SPI_Initialize 0001            ??_IOCB4_DefaultInterruptHandler 0001  
                             _toupper$1982 0010                            __initialization 33AA  
                             __end_of_atoi 21AC                               __end_of_ctoa 32C8  
                             __end_of_main 2C44                               __end_of_dtoa 1954  
                             __end_of_font FF8D                               __end_of_otoa 2012  
                             __end_of_stoa 24B6                               __end_of_utoa 1E28  
                             __end_of_xtoa 1C28                          __end_of_IOCB4_ISR 373A  
                                ??_ADC_ISR 0001                                  ??_ADC_POT 0001  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 000D  
                                   ??_ctoa 0022                                     ??_main 0058  
                                   ??_dtoa 0029                          ?_lcd_set_cursor_x 0007  
                        ?_lcd_set_cursor_y 0007                              lcd_send@value 0005  
                                   ??_otoa 0029                                     ??_stoa 0011  
                                   ??_utoa 0029                                     ??_xtoa 002A  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0009  
                       ??_lcd_set_cursor_y 0009                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0014                             lcd_draw_char@i 0022  
                           lcd_draw_char@j 0020                             lcd_draw_char@k 0021  
                 __end_of_SPI_ExchangeByte 379E                             lcd_draw_char@x 000D  
                           lcd_draw_char@y 000F                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0004                                     STR_100 FFEA  
                                   ?_fputs 000D                                     _ADRESH 000FC4  
                                   _ADRESL 000FC3                                     _ANCON0 000F5D  
                                   _ANCON1 000F5C                                     ?_putch 0001  
                          __CFG_BBSIZ$BB2K 000000                                     i2l4031 370C  
                                   i2l4033 3720                                     i2l4051 381E  
                           __CFG_WDTEN$OFF 000000                                     i2l4161 36AE  
                                   i2l4145 37B6                                     i2l4163 36B0  
                                   i2l4147 37C6                                     i2l4165 36C4  
                                   i2l4149 37CA                                     i2l4431 0052  
                                   i2l4423 0012                                     i2l4433 0060  
                                   i2l4425 0020                                     i2l4427 002E  
                                   i2l4429 0044                                     i2l3991 3648  
                                   i2l3987 3616                                     i2l3989 3624  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 0062  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                          _global_bg_color 00A5                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0009                           __end_of_lcd_fill 31AC  
                             vfprintf@cfmt 0056                           __end_of_lcd_init 1676  
     __size_of_ADC_DefaultInterruptHandler 0002           __size_of_ADC_SetInterruptHandler 000A  
                         __end_of_lcd_send 37B6                                  ??___aodiv 0014  
                                ??___aomod 0014                                     ___wmul 373A  
                           __CFG_STVREN$ON 000000                                  ??___lodiv 0014  
                                ??___lomod 0014                                     clear_0 33D0  
                                   clear_1 33DC                                     pad@buf 0016  
                                   ctoa@fp 001F                                     dtoa@fp 001F  
                                   _string 0100                                     _strlen 35E0  
                                ??_msDelay 0004                                     fputc@c 0004  
                                   fputs@c 0011                                     fputs@i 0012  
                                   fputs@s 000D                                  ??_isalpha 0006  
                                ??_isdigit 0006                                  ??_islower 0006  
                             __mediumconst F1C0                                  ??_isspace 0006  
                                   otoa@fp 001F                                     tblptrh 000FF7  
                                ??_isupper 0006                                     tblptrl 000FF6  
                                   tblptru 000FF8                                     stoa@cp 001D  
                                   stoa@fp 000D                                     putch@c 0001  
                         __end_of_vfprintf 3210                                     utoa@fp 001F  
  ADC_SetInterruptHandler@InterruptHandler 0004  IOCB4_SetInterruptHandler@InterruptHandler 0004  
                         ?_PIN_MANAGER_IOC 0001                           __end_of_snprintf 36AE  
                                   xtoa@fp 001F                                  ??_strncmp 000A  
                                ??_toupper 000C              __size_of_INTERRUPT_Initialize 0004  
                        _SYSTEM_Initialize 37E4                                 __accesstop 0060  
                 __size_of_lcd_draw_string 0132                    __end_of__initialization 33E6  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                           __pcstackCOMRAM 0001                               __pidataBANK0 383E  
                      ??_SYSTEM_Initialize 0006                              __end_of_fputc 2FB8  
                            __end_of_fputs 347A      __end_of_IOCB4_DefaultInterruptHandler 384E  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 384C  
                            __end_of_putch 384C                                  ?_SPI_Open 0001  
                               _acende_led 3616                ??_IOCB4_SetInterruptHandler 0006  
                         ??_lcd_set_cursor 000D                                    ??_fputc 0008  
                __end_of_SYSTEM_Initialize 37FA                                    ??_fputs 0011  
                                  ??_putch 0004                                 __pbssBANK0 009D  
                               __pbssBANK1 0100                            __CFG_PLLCFG$OFF 000000  
                                  ?___wmul 0004                                    _ADC_ISR 36AE  
                                  _ADC_POT 381E                                 ??_SPI_Open 0004  
                          lcd_draw_line@e2 0024                            lcd_draw_line@x0 0013  
                          lcd_draw_line@x1 0017                            lcd_draw_line@y0 0015  
                          lcd_draw_line@y1 0019                    __size_of_ADC_Initialize 0024  
                          lcd_draw_line@dx 0026                            lcd_draw_line@dy 0028  
                          lcd_draw_line@sx 001E                            lcd_draw_line@sy 0020  
                                  ?_strlen 0004                           __CFG_CANMX$PORTB 000000  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 1278                                    _OSCTUNE 000F9B  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000D                                  ?_lcd_init 0001  
                                ?_lcd_send 0005                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0004                           ??_SPI_Initialize 0004  
                _IOCB4_SetInterruptHandler 382A                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 00D2                                    __Hparam 0000  
                  _ADC_SetInterruptHandler 3834                                    __Lparam 0000  
                       __size_of_vsnprintf 0110                          ??_lcd_draw_string 002D  
                                  ___aodiv 21AC                                    ___aomod 2798  
                          __size_of___wmul 0026                                    ___lodiv 2C44  
                                  ___lomod 2E1E                                  ?_vfprintf 0050  
                                ?_snprintf 0091                                    __pcinit 33AA  
                                  __ramtop 0F00                                ?_acende_led 0001  
                                  __ptext0 2B3E                                    __ptext1 367E  
                                  __ptext2 2A2E                                    __ptext3 31AC  
                                  __ptext4 0078                                    __ptext5 1954  
                                  __ptext6 3210                                    __ptext7 3538  
                                  __ptext8 3570                                    __ptext9 34FC  
                                  _msDelay 36DE                                  _IOCB4_ISR 370C  
                          __size_of_strlen 0036                                 fp__ADC_POT 0000  
                    _OSCILLATOR_Initialize 380C                               __size_of_abs 0040  
                             __size_of_pad 00C2                                    _isalpha 34FC  
                                  _isdigit 35A8                                    _islower 3538  
                 ??_PIN_MANAGER_Initialize 0006                                    _isspace 32C8  
                        __CFG_MSSPMSK$MSK7 000000                                    _isupper 3570  
                                  atoi@neg 0011                      __end_of_lcd_draw_char 2630  
                    __end_of_lcd_draw_line 2798                 __size_of_SYSTEM_Initialize 0016  
                               ??_lcd_fill 000F                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 0013                                 ??_lcd_send 0006  
                                  _strncmp 2D34                                    _toupper 3210  
                     end_of_initialization 33E6                         ??_SPI_ExchangeByte 0004  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0006                                    fputs@fp 000F  
                      lcd_draw_char@fIndex 0011                          __end_of_vfpfcnvrt 12F0  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 0011                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 000D                                 ??_vfprintf 0056  
                               ??_snprintf 0058                                    strlen@a 0006  
                                  strlen@s 0004                          lcd_draw_string@pS 0027  
                                _PORTBbits 000F81                          _spi_configuration FF8D  
                               ?_IOCB4_ISR 0001                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 3850                _ADC_DefaultInterruptHandler 384E  
                                _TRISCbits 000F94                          __end_of_vsnprintf 2B3E  
            ??_ADC_DefaultInterruptHandler 0001                                 lcd_send@dc 0006  
                ??_ADC_SetInterruptHandler 0006                        __size_of_acende_led 0036  
             __end_of_INTERRUPT_Initialize 384A                       SPI_ExchangeByte@data 0004  
                __end_of_spi_configuration FF91                                vfpfcnvrt@ap 004A  
                              vfpfcnvrt@cp 0060                                vfpfcnvrt@fp 0046  
                              vfpfcnvrt@ll 0068                             __end_of___wmul 3760  
                              vfpfcnvrt@vp 0070                             _ADC_Initialize 3760  
                   ?_OSCILLATOR_Initialize 0001                          __size_of_SPI_Open 00B0  
                           __end_of_strlen 3616                        start_initialization 33AA  
                          ___lodiv@divisor 000C                            ___lodiv@counter 001C  
                        _lcd_draw_pixel_at 364C            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 34FC                                __end_of_pad 307A  
                       ?_lcd_draw_pixel_at 000D                             _codigo_digital 00A9  
                      ??_lcd_draw_pixel_at 0013                   __size_of_PIN_MANAGER_IOC 0018  
           SPI_Open@spiUniqueConfiguration 0005                                vfprintf@fmt 0052  
                                 ??___wmul 0008                     __end_of_ADC_Initialize 3784  
                              __pdataBANK0 00CB                                   ?_ADC_ISR 0001  
                                 ?_ADC_POT 0001                                   ??_strlen 0006  
                              ??_IOCB4_ISR 0002                    __size_of_lcd_draw_pixel 0016  
                __end_of_lcd_draw_pixel_at 367E                               vsnprintf@cnt 0089  
                             vsnprintf@fmt 007F                                __pbssCOMRAM 0058  
                            __pcstackBANK0 0060                           ___aodiv@dividend 0004  
                              snprintf@fmt 0095                            _lcd_draw_string 28FC  
                         _lcd_set_cursor_x 3362                           _lcd_set_cursor_y 331A  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$1875 0013  
                                _atoi$1876 0017                                  _atoi$1877 0015  
                                __pnvBANK0 00D2                     _PIN_MANAGER_Initialize 33F0  
                                _dtoa$1262 0031                                  __pintcode 0008  
                            __pmediumconst F1C0                                   ?___aodiv 0004  
                                 ?___aomod 0004                           ___aodiv@quotient 0016  
                                 ?___lodiv 0004                                   ?___lomod 0004  
                          ?_ADC_Initialize 0001                               ??_acende_led 0001  
             ??_INTERRUPT_InterruptManager 0002                          __size_of_vfprintf 0064  
                        __size_of_snprintf 0030                                   ?_msDelay 0001  
                          ___lomod@divisor 000C                            ___lomod@counter 0014  
                                 ?_isalpha 0004                                   ?_isdigit 0004  
                                 ?_islower 0004                                   ?_isspace 0004  
                                 ?_isupper 0004                           lcd_draw_line@err 0022  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0004                                   ?_toupper 000A  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 3846  
                  __size_of_lcd_set_cursor 0042                             ___wmul@product 0008  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                         __end_of_acende_led 364C  
                                 _PIE1bits 000F9D                            lcd_set_cursor@x 0009  
                          lcd_set_cursor@y 000B        __size_of_INTERRUPT_InterruptManager 006C  
                                 i2u410_40 37C6                                   i2u410_41 37C2  
                                 i2u411_40 36C4                                   i2u411_41 36C0  
                                 i2u412_48 36CA                                   i2u412_49 36DC  
                                 i2u430_40 0060                                   i2u430_41 005C  
                                 _PIR1bits 000F9E                                   i2u426_40 0020  
                                 i2u426_41 001C                                   i2u427_40 002E  
                                 i2u427_41 002A                                   i2u428_40 0044  
                                 i2u428_41 0040                                   i2u429_40 0052  
                                 i2u429_41 004E                                   i2u393_40 3720  
                                 i2u393_41 371C                      lcd_draw_string@lIndex 0033  
                                 i2u394_48 3726                                   i2u394_49 3738  
                                 i2u388_40 3624                                   i2u388_41 3620  
                                 i2u389_40 3634                                   i2u389_41 362E  
                                 i2u389_46 3636                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A             fp__ADC_DefaultInterruptHandler 0000  
                         lcd_draw_string@k 0031                           lcd_draw_string@x 0023  
                         lcd_draw_string@y 0025                          ??_PIN_MANAGER_IOC 0002  
                                _vfpfcnvrt 0078                                  _xtoa$1298 0032  
                                _xtoa$1299 0034                                   _SPI_Open 307A  
                         __size_of_ADC_ISR 0030                           __size_of_ADC_POT 000C  
                               _ADCON0bits 000FC2                          ___wmul@multiplier 0004  
                         __CFG_SOSCSEL$DIG 000000                 __size_of_lcd_draw_pixel_at 0032  
                  __end_of_lcd_draw_string 2A2E                               _isspace$1902 000A  
                                msDelay@ms 0005                                 vfpfcnvrt@c 0072  
                              _INTCON2bits 000FF1                                  copy_data0 33BE  
                    ?_INTERRUPT_Initialize 0001                                  _vsnprintf 2A2E  
                      lcd_draw_pixel@color 0007                                   __Hrparam 0000  
                               vfprintf@ap 0054                                   __Lrparam 0000  
                               vfprintf@fp 0050                         __CFG_BOREN$SBORDIS 000000  
                  __size_of_SPI_Initialize 0012                    ??_OSCILLATOR_Initialize 0004  
                   __size_of_lcd_draw_char 017A                           __size_of___aodiv 0188  
                   __size_of_lcd_draw_line 0168                           __size_of___aomod 0164  
                              vsnprintf@ap 0081                           __size_of___lodiv 00F0  
                         __size_of___lomod 00D0                                 ?_vfpfcnvrt 0046  
                               snprintf@ap 009B                            ___aodiv@divisor 000C  
                          ___aodiv@counter 0014                     _IOCB4_InterruptHandler 00D4  
                           _lcd_draw_pixel 37CE                           __size_of_msDelay 002E  
                       lcd_draw_line@color 001B                           __size_of_isalpha 003C  
                         __size_of_isdigit 0038           fp__IOCB4_DefaultInterruptHandler 0000  
           ?_IOCB4_DefaultInterruptHandler 0001                           __size_of_islower 0038  
                         __size_of_isspace 0052                                   __ptext10 1C28  
                                 __ptext11 2E1E                                   __ptext20 326E  
                                 __ptext12 2C44                                   __ptext21 2FB8  
                                 __ptext13 2D34                                   __ptext30 12F0  
                                 __ptext22 35E0                                   __ptext14 2334  
                                 __ptext31 36DE                                   __ptext23 3436  
                                 __ptext15 1E28                                   __ptext40 37CE  
                                 __ptext32 312A                                   __ptext24 2EEE  
                                 __ptext16 1676                                   __ptext41 379E  
                                 __ptext33 28FC                                   __ptext25 384A  
                                 __ptext17 34BC                                   __ptext50 3834  
                                 __ptext42 3784                                   __ptext34 24B6  
                                 __ptext26 2012                                   __ptext18 2798  
                                 __ptext51 307A                                   __ptext43 37E4  
                                 __ptext35 2630                                   __ptext27 32C8  
                                 __ptext19 21AC                                   __ptext60 0000  
                                 __ptext44 37FA                                   __ptext36 364C  
                                 __ptext28 35A8                                   __ptext53 37B6  
                                 __ptext45 33F0                                   __ptext37 347A  
                                 __ptext29 373A                                   __ptext54 370C  
                                 __ptext46 382A                                   __ptext38 331A  
                                 __ptext55 384C                                   __ptext47 380C  
                                 __ptext39 3362                                   __ptext56 3616  
                                 __ptext48 3846                                   __ptext57 36AE  
                                 __ptext49 3760                                   __ptext58 384E  
                                 __ptext59 381E                           __size_of_isupper 0038  
                                 _lcd_fill 312A                                   _lcd_init 12F0  
                                 _lcd_send 379E                           __size_of_strncmp 00EA  
                         __size_of_toupper 005E                                 ?_vsnprintf 007B  
                            __size_of_atoi 019A                              __size_of_ctoa 005A  
                            __size_of_main 0106                              __size_of_dtoa 02DE  
                            __size_of_otoa 01EA                              __size_of_stoa 0182  
                            __size_of_utoa 0200                              __size_of_xtoa 02D4  
                                stoa@F1152 00CB                      lcd_draw_char@bg_color 0015  
                                 int$flags 005A                                   _vfprintf 31AC  
                    lcd_draw_char@fg_color 0013         __end_of_INTERRUPT_InterruptManager 0074  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 37E4  
                                 _snprintf 367E                                _percentagem 00A7  
                 __end_of_lcd_set_cursor_x 33AA                   __end_of_lcd_set_cursor_y 3362  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0006  
                         ___aomod@dividend 0004                             _vfpfcnvrt$1313 0064  
                           _vfpfcnvrt$1314 0066                                 _INTCONbits 000FF2  
                            fp__acende_led 0000                           ?_lcd_draw_string 0023  
                                 isalpha@c 0004                                   isdigit@c 0004  
                   ??_INTERRUPT_Initialize 0004                         lcd_draw_pixel_at@x 000D  
                       lcd_draw_pixel_at@y 000F                                 vsnprintf@f 008B  
                               vsnprintf@n 007D                                 vsnprintf@s 007B  
                 ?_ADC_SetInterruptHandler 0004                              _lcd_draw_char 24B6  
                                snprintf@n 0093                                  snprintf@s 0091  
                            _lcd_draw_line 2630                                   intlevel2 0000  
                           _lcd_set_cursor 347A                          lcd_set_cursor_x@x 0007  
                        lcd_set_cursor_y@y 0007                                   islower@c 0004  
                                 isspace@c 0004                    ?_PIN_MANAGER_Initialize 0001  
                                 isupper@c 0004                                  strncmp@_l 0004  
                                strncmp@_r 0006                           ??_ADC_Initialize 0006  
                         _SPI_ExchangeByte 3784                    lcd_draw_string@bg_color 002B  
                       __CFG_WDTPS$1048576 000000                            ___aomod@divisor 000C  
                  lcd_draw_string@fg_color 0029                            ?_lcd_draw_pixel 0007  
                              ??_vfpfcnvrt 004C                                   stoa@nuls 0012  
                          ___aomod@counter 0014                             _vsnprintf$2014 0087  
                                 strncmp@l 000B                                   strncmp@n 0008  
                                 strncmp@r 000D                                   toupper@c 000A  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 34BC  
                           ?_lcd_draw_char 000D                             ?_lcd_draw_line 0013  
                             ___aodiv@sign 0015             __end_of_PIN_MANAGER_Initialize 3436  
                              ??_vsnprintf 0083                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 37B6                               ___aomod@sign 0015  
