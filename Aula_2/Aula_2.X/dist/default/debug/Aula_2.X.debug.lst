

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 28 11:22:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   118                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   119  0000                     
   120                           ; Version 2.10
   121                           ; Generated 31/07/2019 GMT
   122                           ; 
   123                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F46K80 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155                           	psect	idataBANK1
   156  006352                     __pidataBANK1:
   157                           	opt callstack 0
   158                           
   159                           ;initializer for stoa@F1174
   160  006352  28                 	db	40
   161  006353  6E                 	db	110
   162  006354  75                 	db	117
   163  006355  6C                 	db	108
   164  006356  6C                 	db	108
   165  006357  29                 	db	41
   166  006358  00                 	db	0
   167                           
   168                           	psect	mediumconst
   169  00F192                     __pmediumconst:
   170                           	opt callstack 0
   171  00F192  00                 	db	0
   172  00F193                     _font:
   173                           	opt callstack 0
   174  00F193  0004               	dw	4
   175  00F195  0000               	dw	0
   176  00F197  0000               	dw	0
   177  00F199  0000               	dw	0
   178  00F19B  0000               	dw	0
   179  00F19D  0000               	dw	0
   180  00F19F  0000               	dw	0
   181  00F1A1  0000               	dw	0
   182  00F1A3  0000               	dw	0
   183  00F1A5  0003               	dw	3
   184  00F1A7  0000               	dw	0
   185  00F1A9  0000               	dw	0
   186  00F1AB  00FE               	dw	254
   187  00F1AD  001B               	dw	27
   188  00F1AF  0000               	dw	0
   189  00F1B1  0000               	dw	0
   190  00F1B3  0005               	dw	5
   191  00F1B5  001E               	dw	30
   192  00F1B7  0000               	dw	0
   193  00F1B9  0000               	dw	0
   194  00F1BB  0000               	dw	0
   195  00F1BD  0000               	dw	0
   196  00F1BF  0000               	dw	0
   197  00F1C1  001E               	dw	30
   198  00F1C3  0000               	dw	0
   199  00F1C5  0000               	dw	0
   200  00F1C7  0000               	dw	0
   201  00F1C9  000B               	dw	11
   202  00F1CB  0000               	dw	0
   203  00F1CD  0000               	dw	0
   204  00F1CF  0010               	dw	16
   205  00F1D1  0001               	dw	1
   206  00F1D3  0010               	dw	16
   207  00F1D5  001D               	dw	29
   208  00F1D7  00F0               	dw	240
   209  00F1D9  0003               	dw	3
   210  00F1DB  001E               	dw	30
   211  00F1DD  0001               	dw	1
   212  00F1DF  0010               	dw	16
   213  00F1E1  0001               	dw	1
   214  00F1E3  0010               	dw	16
   215  00F1E5  001D               	dw	29
   216  00F1E7  00F0               	dw	240
   217  00F1E9  0003               	dw	3
   218  00F1EB  001E               	dw	30
   219  00F1ED  0001               	dw	1
   220  00F1EF  0010               	dw	16
   221  00F1F1  0001               	dw	1
   222  00F1F3  0000               	dw	0
   223  00F1F5  0000               	dw	0
   224  00F1F7  0009               	dw	9
   225  00F1F9  0000               	dw	0
   226  00F1FB  0004               	dw	4
   227  00F1FD  001C               	dw	28
   228  00F1FF  0008               	dw	8
   229  00F201  0022               	dw	34
   230  00F203  0010               	dw	16
   231  00F205  0042               	dw	66
   232  00F207  0010               	dw	16
   233  00F209  00FF               	dw	255
   234  00F20B  007F               	dw	127
   235  00F20D  0042               	dw	66
   236  00F20F  0010               	dw	16
   237  00F211  0084               	dw	132
   238  00F213  0010               	dw	16
   239  00F215  0000               	dw	0
   240  00F217  000F               	dw	15
   241  00F219  0000               	dw	0
   242  00F21B  0000               	dw	0
   243  00F21D  000C               	dw	12
   244  00F21F  001C               	dw	28
   245  00F221  0000               	dw	0
   246  00F223  0022               	dw	34
   247  00F225  0010               	dw	16
   248  00F227  0022               	dw	34
   249  00F229  0008               	dw	8
   250  00F22B  0022               	dw	34
   251  00F22D  0006               	dw	6
   252  00F22F  001C               	dw	28
   253  00F231  0001               	dw	1
   254  00F233  00C0               	dw	192
   255  00F235  0000               	dw	0
   256  00F237  0020               	dw	32
   257  00F239  000E               	dw	14
   258  00F23B  0018               	dw	24
   259  00F23D  0011               	dw	17
   260  00F23F  0004               	dw	4
   261  00F241  0011               	dw	17
   262  00F243  0002               	dw	2
   263  00F245  0011               	dw	17
   264  00F247  0000               	dw	0
   265  00F249  000E               	dw	14
   266  00F24B  0000               	dw	0
   267  00F24D  0000               	dw	0
   268  00F24F  000B               	dw	11
   269  00F251  0000               	dw	0
   270  00F253  0000               	dw	0
   271  00F255  0000               	dw	0
   272  00F257  000E               	dw	14
   273  00F259  001C               	dw	28
   274  00F25B  0011               	dw	17
   275  00F25D  00A2               	dw	162
   276  00F25F  0010               	dw	16
   277  00F261  00C2               	dw	194
   278  00F263  0010               	dw	16
   279  00F265  0022               	dw	34
   280  00F267  0011               	dw	17
   281  00F269  001C               	dw	28
   282  00F26B  000A               	dw	10
   283  00F26D  0000               	dw	0
   284  00F26F  000C               	dw	12
   285  00F271  0000               	dw	0
   286  00F273  000C               	dw	12
   287  00F275  0000               	dw	0
   288  00F277  0012               	dw	18
   289  00F279  0000               	dw	0
   290  00F27B  0000               	dw	0
   291  00F27D  0003               	dw	3
   292  00F27F  0000               	dw	0
   293  00F281  0000               	dw	0
   294  00F283  001E               	dw	30
   295  00F285  0000               	dw	0
   296  00F287  0000               	dw	0
   297  00F289  0000               	dw	0
   298  00F28B  0006               	dw	6
   299  00F28D  0000               	dw	0
   300  00F28F  0000               	dw	0
   301  00F291  0000               	dw	0
   302  00F293  0000               	dw	0
   303  00F295  00E0               	dw	224
   304  00F297  001F               	dw	31
   305  00F299  001C               	dw	28
   306  00F29B  0060               	dw	96
   307  00F29D  0002               	dw	2
   308  00F29F  0080               	dw	128
   309  00F2A1  0000               	dw	0
   310  00F2A3  0000               	dw	0
   311  00F2A5  0004               	dw	4
   312  00F2A7  0000               	dw	0
   313  00F2A9  0000               	dw	0
   314  00F2AB  0006               	dw	6
   315  00F2AD  00C0               	dw	192
   316  00F2AF  00F8               	dw	248
   317  00F2B1  003F               	dw	63
   318  00F2B3  0000               	dw	0
   319  00F2B5  0000               	dw	0
   320  00F2B7  0006               	dw	6
   321  00F2B9  0024               	dw	36
   322  00F2BB  0000               	dw	0
   323  00F2BD  0018               	dw	24
   324  00F2BF  0000               	dw	0
   325  00F2C1  007E               	dw	126
   326  00F2C3  0000               	dw	0
   327  00F2C5  0018               	dw	24
   328  00F2C7  0000               	dw	0
   329  00F2C9  0024               	dw	36
   330  00F2CB  0000               	dw	0
   331  00F2CD  0000               	dw	0
   332  00F2CF  0000               	dw	0
   333  00F2D1  0009               	dw	9
   334  00F2D3  0000               	dw	0
   335  00F2D5  0000               	dw	0
   336  00F2D7  0080               	dw	128
   337  00F2D9  0000               	dw	0
   338  00F2DB  0080               	dw	128
   339  00F2DD  0000               	dw	0
   340  00F2DF  0080               	dw	128
   341  00F2E1  0000               	dw	0
   342  00F2E3  00F0               	dw	240
   343  00F2E5  0007               	dw	7
   344  00F2E7  0080               	dw	128
   345  00F2E9  0000               	dw	0
   346  00F2EB  0080               	dw	128
   347  00F2ED  0000               	dw	0
   348  00F2EF  0080               	dw	128
   349  00F2F1  0000               	dw	0
   350  00F2F3  0000               	dw	0
   351  00F2F5  0000               	dw	0
   352  00F2F7  0004               	dw	4
   353  00F2F9  0000               	dw	0
   354  00F2FB  0000               	dw	0
   355  00F2FD  0000               	dw	0
   356  00F2FF  0060               	dw	96
   357  00F301  0000               	dw	0
   358  00F303  0018               	dw	24
   359  00F305  0000               	dw	0
   360  00F307  0000               	dw	0
   361  00F309  0005               	dw	5
   362  00F30B  0000               	dw	0
   363  00F30D  0001               	dw	1
   364  00F30F  0000               	dw	0
   365  00F311  0001               	dw	1
   366  00F313  0000               	dw	0
   367  00F315  0001               	dw	1
   368  00F317  0000               	dw	0
   369  00F319  0001               	dw	1
   370  00F31B  0000               	dw	0
   371  00F31D  0000               	dw	0
   372  00F31F  0004               	dw	4
   373  00F321  0000               	dw	0
   374  00F323  0000               	dw	0
   375  00F325  0000               	dw	0
   376  00F327  0018               	dw	24
   377  00F329  0000               	dw	0
   378  00F32B  0018               	dw	24
   379  00F32D  0000               	dw	0
   380  00F32F  0000               	dw	0
   381  00F331  0008               	dw	8
   382  00F333  0000               	dw	0
   383  00F335  0000               	dw	0
   384  00F337  0000               	dw	0
   385  00F339  0040               	dw	64
   386  00F33B  0000               	dw	0
   387  00F33D  0038               	dw	56
   388  00F33F  0000               	dw	0
   389  00F341  0007               	dw	7
   390  00F343  00E0               	dw	224
   391  00F345  0000               	dw	0
   392  00F347  001C               	dw	28
   393  00F349  0000               	dw	0
   394  00F34B  0002               	dw	2
   395  00F34D  0000               	dw	0
   396  00F34F  0000               	dw	0
   397  00F351  0000               	dw	0
   398  00F353  0009               	dw	9
   399  00F355  00F8               	dw	248
   400  00F357  0007               	dw	7
   401  00F359  0004               	dw	4
   402  00F35B  0008               	dw	8
   403  00F35D  0002               	dw	2
   404  00F35F  0010               	dw	16
   405  00F361  0002               	dw	2
   406  00F363  0010               	dw	16
   407  00F365  0002               	dw	2
   408  00F367  0010               	dw	16
   409  00F369  0002               	dw	2
   410  00F36B  0010               	dw	16
   411  00F36D  0004               	dw	4
   412  00F36F  0008               	dw	8
   413  00F371  00F8               	dw	248
   414  00F373  0007               	dw	7
   415  00F375  0000               	dw	0
   416  00F377  0000               	dw	0
   417  00F379  0006               	dw	6
   418  00F37B  0000               	dw	0
   419  00F37D  0000               	dw	0
   420  00F37F  0000               	dw	0
   421  00F381  0000               	dw	0
   422  00F383  0002               	dw	2
   423  00F385  0000               	dw	0
   424  00F387  0002               	dw	2
   425  00F389  0000               	dw	0
   426  00F38B  00FE               	dw	254
   427  00F38D  001F               	dw	31
   428  00F38F  0000               	dw	0
   429  00F391  0000               	dw	0
   430  00F393  0009               	dw	9
   431  00F395  0018               	dw	24
   432  00F397  0010               	dw	16
   433  00F399  0004               	dw	4
   434  00F39B  0018               	dw	24
   435  00F39D  0002               	dw	2
   436  00F39F  0014               	dw	20
   437  00F3A1  0002               	dw	2
   438  00F3A3  0012               	dw	18
   439  00F3A5  0002               	dw	2
   440  00F3A7  0011               	dw	17
   441  00F3A9  0082               	dw	130
   442  00F3AB  0010               	dw	16
   443  00F3AD  0044               	dw	68
   444  00F3AF  0010               	dw	16
   445  00F3B1  0038               	dw	56
   446  00F3B3  0010               	dw	16
   447  00F3B5  0000               	dw	0
   448  00F3B7  0000               	dw	0
   449  00F3B9  0009               	dw	9
   450  00F3BB  0008               	dw	8
   451  00F3BD  000C               	dw	12
   452  00F3BF  0004               	dw	4
   453  00F3C1  0010               	dw	16
   454  00F3C3  0002               	dw	2
   455  00F3C5  0010               	dw	16
   456  00F3C7  0042               	dw	66
   457  00F3C9  0010               	dw	16
   458  00F3CB  0042               	dw	66
   459  00F3CD  0010               	dw	16
   460  00F3CF  0044               	dw	68
   461  00F3D1  0010               	dw	16
   462  00F3D3  00B8               	dw	184
   463  00F3D5  0008               	dw	8
   464  00F3D7  0000               	dw	0
   465  00F3D9  0007               	dw	7
   466  00F3DB  0000               	dw	0
   467  00F3DD  0000               	dw	0
   468  00F3DF  0009               	dw	9
   469  00F3E1  0000               	dw	0
   470  00F3E3  0002               	dw	2
   471  00F3E5  0000               	dw	0
   472  00F3E7  0003               	dw	3
   473  00F3E9  0080               	dw	128
   474  00F3EB  0002               	dw	2
   475  00F3ED  0060               	dw	96
   476  00F3EF  0002               	dw	2
   477  00F3F1  0010               	dw	16
   478  00F3F3  0002               	dw	2
   479  00F3F5  0008               	dw	8
   480  00F3F7  0002               	dw	2
   481  00F3F9  00FE               	dw	254
   482  00F3FB  001F               	dw	31
   483  00F3FD  0000               	dw	0
   484  00F3FF  0002               	dw	2
   485  00F401  0000               	dw	0
   486  00F403  0000               	dw	0
   487  00F405  0009               	dw	9
   488  00F407  0000               	dw	0
   489  00F409  0004               	dw	4
   490  00F40B  0070               	dw	112
   491  00F40D  0008               	dw	8
   492  00F40F  002E               	dw	46
   493  00F411  0010               	dw	16
   494  00F413  0022               	dw	34
   495  00F415  0010               	dw	16
   496  00F417  0022               	dw	34
   497  00F419  0010               	dw	16
   498  00F41B  0022               	dw	34
   499  00F41D  0010               	dw	16
   500  00F41F  0042               	dw	66
   501  00F421  0008               	dw	8
   502  00F423  0082               	dw	130
   503  00F425  0007               	dw	7
   504  00F427  0000               	dw	0
   505  00F429  0000               	dw	0
   506  00F42B  0009               	dw	9
   507  00F42D  0000               	dw	0
   508  00F42F  0000               	dw	0
   509  00F431  0000               	dw	0
   510  00F433  0007               	dw	7
   511  00F435  00C0               	dw	192
   512  00F437  0008               	dw	8
   513  00F439  0060               	dw	96
   514  00F43B  0010               	dw	16
   515  00F43D  0058               	dw	88
   516  00F43F  0010               	dw	16
   517  00F441  0044               	dw	68
   518  00F443  0010               	dw	16
   519  00F445  0082               	dw	130
   520  00F447  0008               	dw	8
   521  00F449  0000               	dw	0
   522  00F44B  0007               	dw	7
   523  00F44D  0000               	dw	0
   524  00F44F  0000               	dw	0
   525  00F451  0009               	dw	9
   526  00F453  0000               	dw	0
   527  00F455  0000               	dw	0
   528  00F457  0002               	dw	2
   529  00F459  0010               	dw	16
   530  00F45B  0002               	dw	2
   531  00F45D  000C               	dw	12
   532  00F45F  0002               	dw	2
   533  00F461  0003               	dw	3
   534  00F463  00C2               	dw	194
   535  00F465  0000               	dw	0
   536  00F467  0032               	dw	50
   537  00F469  0000               	dw	0
   538  00F46B  000E               	dw	14
   539  00F46D  0000               	dw	0
   540  00F46F  0002               	dw	2
   541  00F471  0000               	dw	0
   542  00F473  0000               	dw	0
   543  00F475  0000               	dw	0
   544  00F477  0009               	dw	9
   545  00F479  0000               	dw	0
   546  00F47B  0007               	dw	7
   547  00F47D  0098               	dw	152
   548  00F47F  0008               	dw	8
   549  00F481  0064               	dw	100
   550  00F483  0010               	dw	16
   551  00F485  0042               	dw	66
   552  00F487  0010               	dw	16
   553  00F489  0042               	dw	66
   554  00F48B  0010               	dw	16
   555  00F48D  0064               	dw	100
   556  00F48F  0010               	dw	16
   557  00F491  0098               	dw	152
   558  00F493  0008               	dw	8
   559  00F495  0000               	dw	0
   560  00F497  0007               	dw	7
   561  00F499  0000               	dw	0
   562  00F49B  0000               	dw	0
   563  00F49D  0009               	dw	9
   564  00F49F  0000               	dw	0
   565  00F4A1  0000               	dw	0
   566  00F4A3  0038               	dw	56
   567  00F4A5  0000               	dw	0
   568  00F4A7  0044               	dw	68
   569  00F4A9  0010               	dw	16
   570  00F4AB  0082               	dw	130
   571  00F4AD  0008               	dw	8
   572  00F4AF  0082               	dw	130
   573  00F4B1  0004               	dw	4
   574  00F4B3  0082               	dw	130
   575  00F4B5  0003               	dw	3
   576  00F4B7  0084               	dw	132
   577  00F4B9  0000               	dw	0
   578  00F4BB  0078               	dw	120
   579  00F4BD  0000               	dw	0
   580  00F4BF  0000               	dw	0
   581  00F4C1  0000               	dw	0
   582  00F4C3  0004               	dw	4
   583  00F4C5  0000               	dw	0
   584  00F4C7  0000               	dw	0
   585  00F4C9  0030               	dw	48
   586  00F4CB  0018               	dw	24
   587  00F4CD  0030               	dw	48
   588  00F4CF  0018               	dw	24
   589  00F4D1  0000               	dw	0
   590  00F4D3  0000               	dw	0
   591  00F4D5  0004               	dw	4
   592  00F4D7  0000               	dw	0
   593  00F4D9  0000               	dw	0
   594  00F4DB  0030               	dw	48
   595  00F4DD  0060               	dw	96
   596  00F4DF  0030               	dw	48
   597  00F4E1  0018               	dw	24
   598  00F4E3  0000               	dw	0
   599  00F4E5  0000               	dw	0
   600  00F4E7  000A               	dw	10
   601  00F4E9  0000               	dw	0
   602  00F4EB  0000               	dw	0
   603  00F4ED  0080               	dw	128
   604  00F4EF  0000               	dw	0
   605  00F4F1  0080               	dw	128
   606  00F4F3  0000               	dw	0
   607  00F4F5  0040               	dw	64
   608  00F4F7  0001               	dw	1
   609  00F4F9  0020               	dw	32
   610  00F4FB  0002               	dw	2
   611  00F4FD  0020               	dw	32
   612  00F4FF  0002               	dw	2
   613  00F501  0010               	dw	16
   614  00F503  0004               	dw	4
   615  00F505  0010               	dw	16
   616  00F507  0004               	dw	4
   617  00F509  0008               	dw	8
   618  00F50B  0008               	dw	8
   619  00F50D  0000               	dw	0
   620  00F50F  0000               	dw	0
   621  00F511  000A               	dw	10
   622  00F513  0000               	dw	0
   623  00F515  0000               	dw	0
   624  00F517  0020               	dw	32
   625  00F519  0001               	dw	1
   626  00F51B  0020               	dw	32
   627  00F51D  0001               	dw	1
   628  00F51F  0020               	dw	32
   629  00F521  0001               	dw	1
   630  00F523  0020               	dw	32
   631  00F525  0001               	dw	1
   632  00F527  0020               	dw	32
   633  00F529  0001               	dw	1
   634  00F52B  0020               	dw	32
   635  00F52D  0001               	dw	1
   636  00F52F  0020               	dw	32
   637  00F531  0001               	dw	1
   638  00F533  0020               	dw	32
   639  00F535  0001               	dw	1
   640  00F537  0000               	dw	0
   641  00F539  0000               	dw	0
   642  00F53B  000A               	dw	10
   643  00F53D  0000               	dw	0
   644  00F53F  0000               	dw	0
   645  00F541  0008               	dw	8
   646  00F543  0008               	dw	8
   647  00F545  0010               	dw	16
   648  00F547  0004               	dw	4
   649  00F549  0010               	dw	16
   650  00F54B  0004               	dw	4
   651  00F54D  0020               	dw	32
   652  00F54F  0002               	dw	2
   653  00F551  0020               	dw	32
   654  00F553  0002               	dw	2
   655  00F555  0040               	dw	64
   656  00F557  0001               	dw	1
   657  00F559  0080               	dw	128
   658  00F55B  0000               	dw	0
   659  00F55D  0080               	dw	128
   660  00F55F  0000               	dw	0
   661  00F561  0000               	dw	0
   662  00F563  0000               	dw	0
   663  00F565  0008               	dw	8
   664  00F567  0000               	dw	0
   665  00F569  0000               	dw	0
   666  00F56B  000C               	dw	12
   667  00F56D  0000               	dw	0
   668  00F56F  0082               	dw	130
   669  00F571  0001               	dw	1
   670  00F573  0042               	dw	66
   671  00F575  0002               	dw	2
   672  00F577  0022               	dw	34
   673  00F579  001A               	dw	26
   674  00F57B  0022               	dw	34
   675  00F57D  001A               	dw	26
   676  00F57F  009C               	dw	156
   677  00F581  0001               	dw	1
   678  00F583  0000               	dw	0
   679  00F585  0000               	dw	0
   680  00F587  000E               	dw	14
   681  00F589  0000               	dw	0
   682  00F58B  0000               	dw	0
   683  00F58D  00F0               	dw	240
   684  00F58F  0003               	dw	3
   685  00F591  0008               	dw	8
   686  00F593  0004               	dw	4
   687  00F595  0004               	dw	4
   688  00F597  0008               	dw	8
   689  00F599  00C2               	dw	194
   690  00F59B  0011               	dw	17
   691  00F59D  0022               	dw	34
   692  00F59F  0012               	dw	18
   693  00F5A1  0012               	dw	18
   694  00F5A3  0012               	dw	18
   695  00F5A5  0012               	dw	18
   696  00F5A7  0012               	dw	18
   697  00F5A9  00E2               	dw	226
   698  00F5AB  0011               	dw	17
   699  00F5AD  0012               	dw	18
   700  00F5AF  0012               	dw	18
   701  00F5B1  0004               	dw	4
   702  00F5B3  0012               	dw	18
   703  00F5B5  0008               	dw	8
   704  00F5B7  0009               	dw	9
   705  00F5B9  00F0               	dw	240
   706  00F5BB  0004               	dw	4
   707  00F5BD  0000               	dw	0
   708  00F5BF  0000               	dw	0
   709  00F5C1  000D               	dw	13
   710  00F5C3  0000               	dw	0
   711  00F5C5  0000               	dw	0
   712  00F5C7  0000               	dw	0
   713  00F5C9  0010               	dw	16
   714  00F5CB  0000               	dw	0
   715  00F5CD  000E               	dw	14
   716  00F5CF  0080               	dw	128
   717  00F5D1  0001               	dw	1
   718  00F5D3  0060               	dw	96
   719  00F5D5  0001               	dw	1
   720  00F5D7  001C               	dw	28
   721  00F5D9  0001               	dw	1
   722  00F5DB  0002               	dw	2
   723  00F5DD  0001               	dw	1
   724  00F5DF  001C               	dw	28
   725  00F5E1  0001               	dw	1
   726  00F5E3  0060               	dw	96
   727  00F5E5  0001               	dw	1
   728  00F5E7  0080               	dw	128
   729  00F5E9  0001               	dw	1
   730  00F5EB  0000               	dw	0
   731  00F5ED  000E               	dw	14
   732  00F5EF  0000               	dw	0
   733  00F5F1  0010               	dw	16
   734  00F5F3  0000               	dw	0
   735  00F5F5  0000               	dw	0
   736  00F5F7  0009               	dw	9
   737  00F5F9  0000               	dw	0
   738  00F5FB  0000               	dw	0
   739  00F5FD  0000               	dw	0
   740  00F5FF  0000               	dw	0
   741  00F601  00FE               	dw	254
   742  00F603  001F               	dw	31
   743  00F605  0042               	dw	66
   744  00F607  0010               	dw	16
   745  00F609  0042               	dw	66
   746  00F60B  0010               	dw	16
   747  00F60D  0064               	dw	100
   748  00F60F  0010               	dw	16
   749  00F611  0098               	dw	152
   750  00F613  0008               	dw	8
   751  00F615  0000               	dw	0
   752  00F617  0007               	dw	7
   753  00F619  0000               	dw	0
   754  00F61B  0000               	dw	0
   755  00F61D  000D               	dw	13
   756  00F61F  0000               	dw	0
   757  00F621  0000               	dw	0
   758  00F623  00F0               	dw	240
   759  00F625  0003               	dw	3
   760  00F627  0008               	dw	8
   761  00F629  0004               	dw	4
   762  00F62B  0004               	dw	4
   763  00F62D  0008               	dw	8
   764  00F62F  0002               	dw	2
   765  00F631  0010               	dw	16
   766  00F633  0002               	dw	2
   767  00F635  0010               	dw	16
   768  00F637  0002               	dw	2
   769  00F639  0010               	dw	16
   770  00F63B  0002               	dw	2
   771  00F63D  0010               	dw	16
   772  00F63F  0002               	dw	2
   773  00F641  0010               	dw	16
   774  00F643  0004               	dw	4
   775  00F645  0008               	dw	8
   776  00F647  0004               	dw	4
   777  00F649  0008               	dw	8
   778  00F64B  0008               	dw	8
   779  00F64D  0004               	dw	4
   780  00F64F  0000               	dw	0
   781  00F651  0000               	dw	0
   782  00F653  000C               	dw	12
   783  00F655  0000               	dw	0
   784  00F657  0000               	dw	0
   785  00F659  0000               	dw	0
   786  00F65B  0000               	dw	0
   787  00F65D  00FE               	dw	254
   788  00F65F  001F               	dw	31
   789  00F661  0002               	dw	2
   790  00F663  0010               	dw	16
   791  00F665  0002               	dw	2
   792  00F667  0010               	dw	16
   793  00F669  0002               	dw	2
   794  00F66B  0010               	dw	16
   795  00F66D  0002               	dw	2
   796  00F66F  0010               	dw	16
   797  00F671  0002               	dw	2
   798  00F673  0010               	dw	16
   799  00F675  0004               	dw	4
   800  00F677  0008               	dw	8
   801  00F679  0008               	dw	8
   802  00F67B  0004               	dw	4
   803  00F67D  00F0               	dw	240
   804  00F67F  0003               	dw	3
   805  00F681  0000               	dw	0
   806  00F683  0000               	dw	0
   807  00F685  0009               	dw	9
   808  00F687  0000               	dw	0
   809  00F689  0000               	dw	0
   810  00F68B  0000               	dw	0
   811  00F68D  0000               	dw	0
   812  00F68F  00FE               	dw	254
   813  00F691  001F               	dw	31
   814  00F693  0042               	dw	66
   815  00F695  0010               	dw	16
   816  00F697  0042               	dw	66
   817  00F699  0010               	dw	16
   818  00F69B  0042               	dw	66
   819  00F69D  0010               	dw	16
   820  00F69F  0042               	dw	66
   821  00F6A1  0010               	dw	16
   822  00F6A3  0042               	dw	66
   823  00F6A5  0010               	dw	16
   824  00F6A7  0000               	dw	0
   825  00F6A9  0000               	dw	0
   826  00F6AB  0008               	dw	8
   827  00F6AD  0000               	dw	0
   828  00F6AF  0000               	dw	0
   829  00F6B1  0000               	dw	0
   830  00F6B3  0000               	dw	0
   831  00F6B5  00FE               	dw	254
   832  00F6B7  001F               	dw	31
   833  00F6B9  0042               	dw	66
   834  00F6BB  0000               	dw	0
   835  00F6BD  0042               	dw	66
   836  00F6BF  0000               	dw	0
   837  00F6C1  0042               	dw	66
   838  00F6C3  0000               	dw	0
   839  00F6C5  0042               	dw	66
   840  00F6C7  0000               	dw	0
   841  00F6C9  0000               	dw	0
   842  00F6CB  0000               	dw	0
   843  00F6CD  000E               	dw	14
   844  00F6CF  0000               	dw	0
   845  00F6D1  0000               	dw	0
   846  00F6D3  00F0               	dw	240
   847  00F6D5  0003               	dw	3
   848  00F6D7  0008               	dw	8
   849  00F6D9  0004               	dw	4
   850  00F6DB  0004               	dw	4
   851  00F6DD  0008               	dw	8
   852  00F6DF  0002               	dw	2
   853  00F6E1  0010               	dw	16
   854  00F6E3  0002               	dw	2
   855  00F6E5  0010               	dw	16
   856  00F6E7  0002               	dw	2
   857  00F6E9  0010               	dw	16
   858  00F6EB  0002               	dw	2
   859  00F6ED  0010               	dw	16
   860  00F6EF  0082               	dw	130
   861  00F6F1  0010               	dw	16
   862  00F6F3  0084               	dw	132
   863  00F6F5  0010               	dw	16
   864  00F6F7  0084               	dw	132
   865  00F6F9  0008               	dw	8
   866  00F6FB  0088               	dw	136
   867  00F6FD  0004               	dw	4
   868  00F6FF  0080               	dw	128
   869  00F701  0003               	dw	3
   870  00F703  0000               	dw	0
   871  00F705  0000               	dw	0
   872  00F707  000A               	dw	10
   873  00F709  0000               	dw	0
   874  00F70B  0000               	dw	0
   875  00F70D  0000               	dw	0
   876  00F70F  0000               	dw	0
   877  00F711  00FE               	dw	254
   878  00F713  001F               	dw	31
   879  00F715  0040               	dw	64
   880  00F717  0000               	dw	0
   881  00F719  0040               	dw	64
   882  00F71B  0000               	dw	0
   883  00F71D  0040               	dw	64
   884  00F71F  0000               	dw	0
   885  00F721  0040               	dw	64
   886  00F723  0000               	dw	0
   887  00F725  0040               	dw	64
   888  00F727  0000               	dw	0
   889  00F729  00FE               	dw	254
   890  00F72B  001F               	dw	31
   891  00F72D  0000               	dw	0
   892  00F72F  0000               	dw	0
   893  00F731  0004               	dw	4
   894  00F733  0000               	dw	0
   895  00F735  0000               	dw	0
   896  00F737  0000               	dw	0
   897  00F739  0000               	dw	0
   898  00F73B  00FE               	dw	254
   899  00F73D  001F               	dw	31
   900  00F73F  0000               	dw	0
   901  00F741  0000               	dw	0
   902  00F743  0007               	dw	7
   903  00F745  0000               	dw	0
   904  00F747  0000               	dw	0
   905  00F749  0000               	dw	0
   906  00F74B  0008               	dw	8
   907  00F74D  0000               	dw	0
   908  00F74F  0010               	dw	16
   909  00F751  0000               	dw	0
   910  00F753  0010               	dw	16
   911  00F755  0000               	dw	0
   912  00F757  0008               	dw	8
   913  00F759  00FE               	dw	254
   914  00F75B  0007               	dw	7
   915  00F75D  0000               	dw	0
   916  00F75F  0000               	dw	0
   917  00F761  0009               	dw	9
   918  00F763  0000               	dw	0
   919  00F765  0000               	dw	0
   920  00F767  0000               	dw	0
   921  00F769  0000               	dw	0
   922  00F76B  00FE               	dw	254
   923  00F76D  001F               	dw	31
   924  00F76F  0060               	dw	96
   925  00F771  0000               	dw	0
   926  00F773  0090               	dw	144
   927  00F775  0001               	dw	1
   928  00F777  0008               	dw	8
   929  00F779  0002               	dw	2
   930  00F77B  0004               	dw	4
   931  00F77D  000C               	dw	12
   932  00F77F  0002               	dw	2
   933  00F781  0010               	dw	16
   934  00F783  0000               	dw	0
   935  00F785  0000               	dw	0
   936  00F787  0008               	dw	8
   937  00F789  0000               	dw	0
   938  00F78B  0000               	dw	0
   939  00F78D  0000               	dw	0
   940  00F78F  0000               	dw	0
   941  00F791  00FE               	dw	254
   942  00F793  001F               	dw	31
   943  00F795  0000               	dw	0
   944  00F797  0010               	dw	16
   945  00F799  0000               	dw	0
   946  00F79B  0010               	dw	16
   947  00F79D  0000               	dw	0
   948  00F79F  0010               	dw	16
   949  00F7A1  0000               	dw	0
   950  00F7A3  0010               	dw	16
   951  00F7A5  0000               	dw	0
   952  00F7A7  0000               	dw	0
   953  00F7A9  000F               	dw	15
   954  00F7AB  0000               	dw	0
   955  00F7AD  0000               	dw	0
   956  00F7AF  0000               	dw	0
   957  00F7B1  001C               	dw	28
   958  00F7B3  00F8               	dw	248
   959  00F7B5  0003               	dw	3
   960  00F7B7  0006               	dw	6
   961  00F7B9  0000               	dw	0
   962  00F7BB  0038               	dw	56
   963  00F7BD  0000               	dw	0
   964  00F7BF  00C0               	dw	192
   965  00F7C1  0001               	dw	1
   966  00F7C3  0000               	dw	0
   967  00F7C5  000E               	dw	14
   968  00F7C7  0000               	dw	0
   969  00F7C9  0010               	dw	16
   970  00F7CB  0000               	dw	0
   971  00F7CD  000E               	dw	14
   972  00F7CF  00C0               	dw	192
   973  00F7D1  0001               	dw	1
   974  00F7D3  0038               	dw	56
   975  00F7D5  0000               	dw	0
   976  00F7D7  0006               	dw	6
   977  00F7D9  0000               	dw	0
   978  00F7DB  00F8               	dw	248
   979  00F7DD  0003               	dw	3
   980  00F7DF  0000               	dw	0
   981  00F7E1  001C               	dw	28
   982  00F7E3  0000               	dw	0
   983  00F7E5  0000               	dw	0
   984  00F7E7  000B               	dw	11
   985  00F7E9  0000               	dw	0
   986  00F7EB  0000               	dw	0
   987  00F7ED  0000               	dw	0
   988  00F7EF  0000               	dw	0
   989  00F7F1  00FE               	dw	254
   990  00F7F3  001F               	dw	31
   991  00F7F5  0008               	dw	8
   992  00F7F7  0000               	dw	0
   993  00F7F9  0030               	dw	48
   994  00F7FB  0000               	dw	0
   995  00F7FD  0040               	dw	64
   996  00F7FF  0000               	dw	0
   997  00F801  0080               	dw	128
   998  00F803  0000               	dw	0
   999  00F805  0000               	dw	0
  1000  00F807  0003               	dw	3
  1001  00F809  0000               	dw	0
  1002  00F80B  0004               	dw	4
  1003  00F80D  00FE               	dw	254
  1004  00F80F  001F               	dw	31
  1005  00F811  0000               	dw	0
  1006  00F813  0000               	dw	0
  1007  00F815  000E               	dw	14
  1008  00F817  0000               	dw	0
  1009  00F819  0000               	dw	0
  1010  00F81B  00F0               	dw	240
  1011  00F81D  0003               	dw	3
  1012  00F81F  0008               	dw	8
  1013  00F821  0004               	dw	4
  1014  00F823  0004               	dw	4
  1015  00F825  0008               	dw	8
  1016  00F827  0002               	dw	2
  1017  00F829  0010               	dw	16
  1018  00F82B  0002               	dw	2
  1019  00F82D  0010               	dw	16
  1020  00F82F  0002               	dw	2
  1021  00F831  0010               	dw	16
  1022  00F833  0002               	dw	2
  1023  00F835  0010               	dw	16
  1024  00F837  0002               	dw	2
  1025  00F839  0010               	dw	16
  1026  00F83B  0002               	dw	2
  1027  00F83D  0010               	dw	16
  1028  00F83F  0004               	dw	4
  1029  00F841  0008               	dw	8
  1030  00F843  0008               	dw	8
  1031  00F845  0004               	dw	4
  1032  00F847  00F0               	dw	240
  1033  00F849  0003               	dw	3
  1034  00F84B  0000               	dw	0
  1035  00F84D  0000               	dw	0
  1036  00F84F  0009               	dw	9
  1037  00F851  0000               	dw	0
  1038  00F853  0000               	dw	0
  1039  00F855  0000               	dw	0
  1040  00F857  0000               	dw	0
  1041  00F859  00FE               	dw	254
  1042  00F85B  001F               	dw	31
  1043  00F85D  0042               	dw	66
  1044  00F85F  0000               	dw	0
  1045  00F861  0042               	dw	66
  1046  00F863  0000               	dw	0
  1047  00F865  0042               	dw	66
  1048  00F867  0000               	dw	0
  1049  00F869  0024               	dw	36
  1050  00F86B  0000               	dw	0
  1051  00F86D  0018               	dw	24
  1052  00F86F  0000               	dw	0
  1053  00F871  0000               	dw	0
  1054  00F873  0000               	dw	0
  1055  00F875  000E               	dw	14
  1056  00F877  0000               	dw	0
  1057  00F879  0000               	dw	0
  1058  00F87B  00F0               	dw	240
  1059  00F87D  0003               	dw	3
  1060  00F87F  0008               	dw	8
  1061  00F881  0004               	dw	4
  1062  00F883  0004               	dw	4
  1063  00F885  0008               	dw	8
  1064  00F887  0002               	dw	2
  1065  00F889  0010               	dw	16
  1066  00F88B  0002               	dw	2
  1067  00F88D  0010               	dw	16
  1068  00F88F  0002               	dw	2
  1069  00F891  0010               	dw	16
  1070  00F893  0002               	dw	2
  1071  00F895  0011               	dw	17
  1072  00F897  0002               	dw	2
  1073  00F899  0012               	dw	18
  1074  00F89B  0002               	dw	2
  1075  00F89D  000C               	dw	12
  1076  00F89F  0004               	dw	4
  1077  00F8A1  0008               	dw	8
  1078  00F8A3  0008               	dw	8
  1079  00F8A5  0016               	dw	22
  1080  00F8A7  00F0               	dw	240
  1081  00F8A9  0021               	dw	33
  1082  00F8AB  0000               	dw	0
  1083  00F8AD  0000               	dw	0
  1084  00F8AF  000A               	dw	10
  1085  00F8B1  0000               	dw	0
  1086  00F8B3  0000               	dw	0
  1087  00F8B5  0000               	dw	0
  1088  00F8B7  0000               	dw	0
  1089  00F8B9  00FE               	dw	254
  1090  00F8BB  001F               	dw	31
  1091  00F8BD  0042               	dw	66
  1092  00F8BF  0000               	dw	0
  1093  00F8C1  00C2               	dw	194
  1094  00F8C3  0000               	dw	0
  1095  00F8C5  0042               	dw	66
  1096  00F8C7  0001               	dw	1
  1097  00F8C9  0042               	dw	66
  1098  00F8CB  0006               	dw	6
  1099  00F8CD  0024               	dw	36
  1100  00F8CF  0008               	dw	8
  1101  00F8D1  0018               	dw	24
  1102  00F8D3  0010               	dw	16
  1103  00F8D5  0000               	dw	0
  1104  00F8D7  0000               	dw	0
  1105  00F8D9  0008               	dw	8
  1106  00F8DB  0000               	dw	0
  1107  00F8DD  0004               	dw	4
  1108  00F8DF  0018               	dw	24
  1109  00F8E1  0008               	dw	8
  1110  00F8E3  0024               	dw	36
  1111  00F8E5  0010               	dw	16
  1112  00F8E7  0042               	dw	66
  1113  00F8E9  0010               	dw	16
  1114  00F8EB  0042               	dw	66
  1115  00F8ED  0010               	dw	16
  1116  00F8EF  0084               	dw	132
  1117  00F8F1  0008               	dw	8
  1118  00F8F3  0008               	dw	8
  1119  00F8F5  0007               	dw	7
  1120  00F8F7  0000               	dw	0
  1121  00F8F9  0000               	dw	0
  1122  00F8FB  0008               	dw	8
  1123  00F8FD  0002               	dw	2
  1124  00F8FF  0000               	dw	0
  1125  00F901  0002               	dw	2
  1126  00F903  0000               	dw	0
  1127  00F905  0002               	dw	2
  1128  00F907  0000               	dw	0
  1129  00F909  00FE               	dw	254
  1130  00F90B  001F               	dw	31
  1131  00F90D  0002               	dw	2
  1132  00F90F  0000               	dw	0
  1133  00F911  0002               	dw	2
  1134  00F913  0000               	dw	0
  1135  00F915  0002               	dw	2
  1136  00F917  0000               	dw	0
  1137  00F919  0000               	dw	0
  1138  00F91B  0000               	dw	0
  1139  00F91D  000A               	dw	10
  1140  00F91F  0000               	dw	0
  1141  00F921  0000               	dw	0
  1142  00F923  0000               	dw	0
  1143  00F925  0000               	dw	0
  1144  00F927  00FE               	dw	254
  1145  00F929  0007               	dw	7
  1146  00F92B  0000               	dw	0
  1147  00F92D  0008               	dw	8
  1148  00F92F  0000               	dw	0
  1149  00F931  0010               	dw	16
  1150  00F933  0000               	dw	0
  1151  00F935  0010               	dw	16
  1152  00F937  0000               	dw	0
  1153  00F939  0010               	dw	16
  1154  00F93B  0000               	dw	0
  1155  00F93D  0008               	dw	8
  1156  00F93F  00FE               	dw	254
  1157  00F941  0007               	dw	7
  1158  00F943  0000               	dw	0
  1159  00F945  0000               	dw	0
  1160  00F947  000C               	dw	12
  1161  00F949  0002               	dw	2
  1162  00F94B  0000               	dw	0
  1163  00F94D  001C               	dw	28
  1164  00F94F  0000               	dw	0
  1165  00F951  0060               	dw	96
  1166  00F953  0000               	dw	0
  1167  00F955  0080               	dw	128
  1168  00F957  0001               	dw	1
  1169  00F959  0000               	dw	0
  1170  00F95B  000E               	dw	14
  1171  00F95D  0000               	dw	0
  1172  00F95F  0010               	dw	16
  1173  00F961  0000               	dw	0
  1174  00F963  000E               	dw	14
  1175  00F965  0080               	dw	128
  1176  00F967  0001               	dw	1
  1177  00F969  0060               	dw	96
  1178  00F96B  0000               	dw	0
  1179  00F96D  001C               	dw	28
  1180  00F96F  0000               	dw	0
  1181  00F971  0002               	dw	2
  1182  00F973  0000               	dw	0
  1183  00F975  0000               	dw	0
  1184  00F977  0000               	dw	0
  1185  00F979  000F               	dw	15
  1186  00F97B  0000               	dw	0
  1187  00F97D  0000               	dw	0
  1188  00F97F  0006               	dw	6
  1189  00F981  0000               	dw	0
  1190  00F983  0078               	dw	120
  1191  00F985  0000               	dw	0
  1192  00F987  0080               	dw	128
  1193  00F989  0007               	dw	7
  1194  00F98B  0000               	dw	0
  1195  00F98D  0018               	dw	24
  1196  00F98F  0080               	dw	128
  1197  00F991  0007               	dw	7
  1198  00F993  0078               	dw	120
  1199  00F995  0000               	dw	0
  1200  00F997  0006               	dw	6
  1201  00F999  0000               	dw	0
  1202  00F99B  0078               	dw	120
  1203  00F99D  0000               	dw	0
  1204  00F99F  0080               	dw	128
  1205  00F9A1  0007               	dw	7
  1206  00F9A3  0000               	dw	0
  1207  00F9A5  0018               	dw	24
  1208  00F9A7  0080               	dw	128
  1209  00F9A9  0007               	dw	7
  1210  00F9AB  0078               	dw	120
  1211  00F9AD  0000               	dw	0
  1212  00F9AF  0006               	dw	6
  1213  00F9B1  0000               	dw	0
  1214  00F9B3  0000               	dw	0
  1215  00F9B5  0000               	dw	0
  1216  00F9B7  0009               	dw	9
  1217  00F9B9  0000               	dw	0
  1218  00F9BB  0000               	dw	0
  1219  00F9BD  0006               	dw	6
  1220  00F9BF  0018               	dw	24
  1221  00F9C1  0008               	dw	8
  1222  00F9C3  0004               	dw	4
  1223  00F9C5  0030               	dw	48
  1224  00F9C7  0003               	dw	3
  1225  00F9C9  00C0               	dw	192
  1226  00F9CB  0000               	dw	0
  1227  00F9CD  0030               	dw	48
  1228  00F9CF  0003               	dw	3
  1229  00F9D1  0008               	dw	8
  1230  00F9D3  0004               	dw	4
  1231  00F9D5  0006               	dw	6
  1232  00F9D7  0018               	dw	24
  1233  00F9D9  0000               	dw	0
  1234  00F9DB  0000               	dw	0
  1235  00F9DD  000B               	dw	11
  1236  00F9DF  0000               	dw	0
  1237  00F9E1  0000               	dw	0
  1238  00F9E3  0002               	dw	2
  1239  00F9E5  0000               	dw	0
  1240  00F9E7  0004               	dw	4
  1241  00F9E9  0000               	dw	0
  1242  00F9EB  0018               	dw	24
  1243  00F9ED  0000               	dw	0
  1244  00F9EF  0060               	dw	96
  1245  00F9F1  0000               	dw	0
  1246  00F9F3  0080               	dw	128
  1247  00F9F5  001F               	dw	31
  1248  00F9F7  0060               	dw	96
  1249  00F9F9  0000               	dw	0
  1250  00F9FB  0018               	dw	24
  1251  00F9FD  0000               	dw	0
  1252  00F9FF  0004               	dw	4
  1253  00FA01  0000               	dw	0
  1254  00FA03  0002               	dw	2
  1255  00FA05  0000               	dw	0
  1256  00FA07  0000               	dw	0
  1257  00FA09  0000               	dw	0
  1258  00FA0B  0008               	dw	8
  1259  00FA0D  0002               	dw	2
  1260  00FA0F  0010               	dw	16
  1261  00FA11  0002               	dw	2
  1262  00FA13  001C               	dw	28
  1263  00FA15  0002               	dw	2
  1264  00FA17  0013               	dw	19
  1265  00FA19  00C2               	dw	194
  1266  00FA1B  0010               	dw	16
  1267  00FA1D  0032               	dw	50
  1268  00FA1F  0010               	dw	16
  1269  00FA21  000E               	dw	14
  1270  00FA23  0010               	dw	16
  1271  00FA25  0002               	dw	2
  1272  00FA27  0010               	dw	16
  1273  00FA29  0000               	dw	0
  1274  00FA2B  0000               	dw	0
  1275  00FA2D  0006               	dw	6
  1276  00FA2F  0000               	dw	0
  1277  00FA31  0000               	dw	0
  1278  00FA33  0000               	dw	0
  1279  00FA35  0000               	dw	0
  1280  00FA37  00FE               	dw	254
  1281  00FA39  00FF               	dw	255
  1282  00FA3B  0002               	dw	2
  1283  00FA3D  0080               	dw	128
  1284  00FA3F  0002               	dw	2
  1285  00FA41  0080               	dw	128
  1286  00FA43  0000               	dw	0
  1287  00FA45  0000               	dw	0
  1288  00FA47  000A               	dw	10
  1289  00FA49  0002               	dw	2
  1290  00FA4B  0000               	dw	0
  1291  00FA4D  000C               	dw	12
  1292  00FA4F  0000               	dw	0
  1293  00FA51  0010               	dw	16
  1294  00FA53  0000               	dw	0
  1295  00FA55  0060               	dw	96
  1296  00FA57  0000               	dw	0
  1297  00FA59  0080               	dw	128
  1298  00FA5B  0001               	dw	1
  1299  00FA5D  0000               	dw	0
  1300  00FA5F  0006               	dw	6
  1301  00FA61  0000               	dw	0
  1302  00FA63  0008               	dw	8
  1303  00FA65  0000               	dw	0
  1304  00FA67  0030               	dw	48
  1305  00FA69  0000               	dw	0
  1306  00FA6B  0040               	dw	64
  1307  00FA6D  0000               	dw	0
  1308  00FA6F  0000               	dw	0
  1309  00FA71  0005               	dw	5
  1310  00FA73  0000               	dw	0
  1311  00FA75  0000               	dw	0
  1312  00FA77  0002               	dw	2
  1313  00FA79  0080               	dw	128
  1314  00FA7B  0002               	dw	2
  1315  00FA7D  0080               	dw	128
  1316  00FA7F  00FE               	dw	254
  1317  00FA81  00FF               	dw	255
  1318  00FA83  0000               	dw	0
  1319  00FA85  0000               	dw	0
  1320  00FA87  000B               	dw	11
  1321  00FA89  0000               	dw	0
  1322  00FA8B  0000               	dw	0
  1323  00FA8D  0000               	dw	0
  1324  00FA8F  0002               	dw	2
  1325  00FA91  0080               	dw	128
  1326  00FA93  0001               	dw	1
  1327  00FA95  0070               	dw	112
  1328  00FA97  0000               	dw	0
  1329  00FA99  000C               	dw	12
  1330  00FA9B  0000               	dw	0
  1331  00FA9D  0002               	dw	2
  1332  00FA9F  0000               	dw	0
  1333  00FAA1  000C               	dw	12
  1334  00FAA3  0000               	dw	0
  1335  00FAA5  0070               	dw	112
  1336  00FAA7  0000               	dw	0
  1337  00FAA9  0080               	dw	128
  1338  00FAAB  0001               	dw	1
  1339  00FAAD  0000               	dw	0
  1340  00FAAF  0002               	dw	2
  1341  00FAB1  0000               	dw	0
  1342  00FAB3  0000               	dw	0
  1343  00FAB5  0009               	dw	9
  1344  00FAB7  0000               	dw	0
  1345  00FAB9  0040               	dw	64
  1346  00FABB  0000               	dw	0
  1347  00FABD  0040               	dw	64
  1348  00FABF  0000               	dw	0
  1349  00FAC1  0040               	dw	64
  1350  00FAC3  0000               	dw	0
  1351  00FAC5  0040               	dw	64
  1352  00FAC7  0000               	dw	0
  1353  00FAC9  0040               	dw	64
  1354  00FACB  0000               	dw	0
  1355  00FACD  0040               	dw	64
  1356  00FACF  0000               	dw	0
  1357  00FAD1  0040               	dw	64
  1358  00FAD3  0000               	dw	0
  1359  00FAD5  0040               	dw	64
  1360  00FAD7  0000               	dw	0
  1361  00FAD9  0000               	dw	0
  1362  00FADB  0005               	dw	5
  1363  00FADD  0000               	dw	0
  1364  00FADF  0000               	dw	0
  1365  00FAE1  0000               	dw	0
  1366  00FAE3  0000               	dw	0
  1367  00FAE5  0002               	dw	2
  1368  00FAE7  0000               	dw	0
  1369  00FAE9  0004               	dw	4
  1370  00FAEB  0000               	dw	0
  1371  00FAED  0000               	dw	0
  1372  00FAEF  0000               	dw	0
  1373  00FAF1  000B               	dw	11
  1374  00FAF3  0000               	dw	0
  1375  00FAF5  0000               	dw	0
  1376  00FAF7  00C0               	dw	192
  1377  00FAF9  0007               	dw	7
  1378  00FAFB  0020               	dw	32
  1379  00FAFD  0008               	dw	8
  1380  00FAFF  0010               	dw	16
  1381  00FB01  0010               	dw	16
  1382  00FB03  0010               	dw	16
  1383  00FB05  0010               	dw	16
  1384  00FB07  0010               	dw	16
  1385  00FB09  0010               	dw	16
  1386  00FB0B  0010               	dw	16
  1387  00FB0D  0010               	dw	16
  1388  00FB0F  0010               	dw	16
  1389  00FB11  0010               	dw	16
  1390  00FB13  0020               	dw	32
  1391  00FB15  0008               	dw	8
  1392  00FB17  00F0               	dw	240
  1393  00FB19  001F               	dw	31
  1394  00FB1B  0000               	dw	0
  1395  00FB1D  0000               	dw	0
  1396  00FB1F  000B               	dw	11
  1397  00FB21  0000               	dw	0
  1398  00FB23  0000               	dw	0
  1399  00FB25  00FE               	dw	254
  1400  00FB27  001F               	dw	31
  1401  00FB29  0020               	dw	32
  1402  00FB2B  0008               	dw	8
  1403  00FB2D  0010               	dw	16
  1404  00FB2F  0010               	dw	16
  1405  00FB31  0010               	dw	16
  1406  00FB33  0010               	dw	16
  1407  00FB35  0010               	dw	16
  1408  00FB37  0010               	dw	16
  1409  00FB39  0010               	dw	16
  1410  00FB3B  0010               	dw	16
  1411  00FB3D  0010               	dw	16
  1412  00FB3F  0010               	dw	16
  1413  00FB41  0020               	dw	32
  1414  00FB43  0008               	dw	8
  1415  00FB45  00C0               	dw	192
  1416  00FB47  0007               	dw	7
  1417  00FB49  0000               	dw	0
  1418  00FB4B  0000               	dw	0
  1419  00FB4D  000A               	dw	10
  1420  00FB4F  0000               	dw	0
  1421  00FB51  0000               	dw	0
  1422  00FB53  00C0               	dw	192
  1423  00FB55  0007               	dw	7
  1424  00FB57  0020               	dw	32
  1425  00FB59  0008               	dw	8
  1426  00FB5B  0010               	dw	16
  1427  00FB5D  0010               	dw	16
  1428  00FB5F  0010               	dw	16
  1429  00FB61  0010               	dw	16
  1430  00FB63  0010               	dw	16
  1431  00FB65  0010               	dw	16
  1432  00FB67  0010               	dw	16
  1433  00FB69  0010               	dw	16
  1434  00FB6B  0020               	dw	32
  1435  00FB6D  0008               	dw	8
  1436  00FB6F  0040               	dw	64
  1437  00FB71  0004               	dw	4
  1438  00FB73  0000               	dw	0
  1439  00FB75  0000               	dw	0
  1440  00FB77  000B               	dw	11
  1441  00FB79  0000               	dw	0
  1442  00FB7B  0000               	dw	0
  1443  00FB7D  00C0               	dw	192
  1444  00FB7F  0007               	dw	7
  1445  00FB81  0020               	dw	32
  1446  00FB83  0008               	dw	8
  1447  00FB85  0010               	dw	16
  1448  00FB87  0010               	dw	16
  1449  00FB89  0010               	dw	16
  1450  00FB8B  0010               	dw	16
  1451  00FB8D  0010               	dw	16
  1452  00FB8F  0010               	dw	16
  1453  00FB91  0010               	dw	16
  1454  00FB93  0010               	dw	16
  1455  00FB95  0010               	dw	16
  1456  00FB97  0010               	dw	16
  1457  00FB99  0020               	dw	32
  1458  00FB9B  0008               	dw	8
  1459  00FB9D  00FE               	dw	254
  1460  00FB9F  001F               	dw	31
  1461  00FBA1  0000               	dw	0
  1462  00FBA3  0000               	dw	0
  1463  00FBA5  000A               	dw	10
  1464  00FBA7  0000               	dw	0
  1465  00FBA9  0000               	dw	0
  1466  00FBAB  00C0               	dw	192
  1467  00FBAD  0007               	dw	7
  1468  00FBAF  0020               	dw	32
  1469  00FBB1  0009               	dw	9
  1470  00FBB3  0010               	dw	16
  1471  00FBB5  0011               	dw	17
  1472  00FBB7  0010               	dw	16
  1473  00FBB9  0011               	dw	17
  1474  00FBBB  0010               	dw	16
  1475  00FBBD  0011               	dw	17
  1476  00FBBF  0010               	dw	16
  1477  00FBC1  0011               	dw	17
  1478  00FBC3  0020               	dw	32
  1479  00FBC5  0009               	dw	9
  1480  00FBC7  00C0               	dw	192
  1481  00FBC9  0005               	dw	5
  1482  00FBCB  0000               	dw	0
  1483  00FBCD  0000               	dw	0
  1484  00FBCF  0006               	dw	6
  1485  00FBD1  0000               	dw	0
  1486  00FBD3  0000               	dw	0
  1487  00FBD5  0010               	dw	16
  1488  00FBD7  0000               	dw	0
  1489  00FBD9  00FC               	dw	252
  1490  00FBDB  001F               	dw	31
  1491  00FBDD  0012               	dw	18
  1492  00FBDF  0000               	dw	0
  1493  00FBE1  0012               	dw	18
  1494  00FBE3  0000               	dw	0
  1495  00FBE5  0000               	dw	0
  1496  00FBE7  0000               	dw	0
  1497  00FBE9  000B               	dw	11
  1498  00FBEB  0000               	dw	0
  1499  00FBED  0000               	dw	0
  1500  00FBEF  00C0               	dw	192
  1501  00FBF1  0027               	dw	39
  1502  00FBF3  0020               	dw	32
  1503  00FBF5  0048               	dw	72
  1504  00FBF7  0010               	dw	16
  1505  00FBF9  0090               	dw	144
  1506  00FBFB  0010               	dw	16
  1507  00FBFD  0090               	dw	144
  1508  00FBFF  0010               	dw	16
  1509  00FC01  0090               	dw	144
  1510  00FC03  0010               	dw	16
  1511  00FC05  0090               	dw	144
  1512  00FC07  0010               	dw	16
  1513  00FC09  0090               	dw	144
  1514  00FC0B  0020               	dw	32
  1515  00FC0D  0048               	dw	72
  1516  00FC0F  00F0               	dw	240
  1517  00FC11  003F               	dw	63
  1518  00FC13  0000               	dw	0
  1519  00FC15  0000               	dw	0
  1520  00FC17  000A               	dw	10
  1521  00FC19  0000               	dw	0
  1522  00FC1B  0000               	dw	0
  1523  00FC1D  00FE               	dw	254
  1524  00FC1F  001F               	dw	31
  1525  00FC21  0020               	dw	32
  1526  00FC23  0000               	dw	0
  1527  00FC25  0010               	dw	16
  1528  00FC27  0000               	dw	0
  1529  00FC29  0010               	dw	16
  1530  00FC2B  0000               	dw	0
  1531  00FC2D  0010               	dw	16
  1532  00FC2F  0000               	dw	0
  1533  00FC31  0010               	dw	16
  1534  00FC33  0000               	dw	0
  1535  00FC35  0020               	dw	32
  1536  00FC37  0000               	dw	0
  1537  00FC39  00C0               	dw	192
  1538  00FC3B  001F               	dw	31
  1539  00FC3D  0000               	dw	0
  1540  00FC3F  0000               	dw	0
  1541  00FC41  0003               	dw	3
  1542  00FC43  0000               	dw	0
  1543  00FC45  0000               	dw	0
  1544  00FC47  00F6               	dw	246
  1545  00FC49  001F               	dw	31
  1546  00FC4B  0000               	dw	0
  1547  00FC4D  0000               	dw	0
  1548  00FC4F  0003               	dw	3
  1549  00FC51  0000               	dw	0
  1550  00FC53  0080               	dw	128
  1551  00FC55  00F6               	dw	246
  1552  00FC57  007F               	dw	127
  1553  00FC59  0000               	dw	0
  1554  00FC5B  0000               	dw	0
  1555  00FC5D  0008               	dw	8
  1556  00FC5F  0000               	dw	0
  1557  00FC61  0000               	dw	0
  1558  00FC63  00FE               	dw	254
  1559  00FC65  001F               	dw	31
  1560  00FC67  0000               	dw	0
  1561  00FC69  0001               	dw	1
  1562  00FC6B  0080               	dw	128
  1563  00FC6D  0002               	dw	2
  1564  00FC6F  0040               	dw	64
  1565  00FC71  0004               	dw	4
  1566  00FC73  0020               	dw	32
  1567  00FC75  0008               	dw	8
  1568  00FC77  0010               	dw	16
  1569  00FC79  0010               	dw	16
  1570  00FC7B  0000               	dw	0
  1571  00FC7D  0000               	dw	0
  1572  00FC7F  0003               	dw	3
  1573  00FC81  0000               	dw	0
  1574  00FC83  0000               	dw	0
  1575  00FC85  00FE               	dw	254
  1576  00FC87  001F               	dw	31
  1577  00FC89  0000               	dw	0
  1578  00FC8B  0000               	dw	0
  1579  00FC8D  000F               	dw	15
  1580  00FC8F  0000               	dw	0
  1581  00FC91  0000               	dw	0
  1582  00FC93  00F0               	dw	240
  1583  00FC95  001F               	dw	31
  1584  00FC97  0020               	dw	32
  1585  00FC99  0000               	dw	0
  1586  00FC9B  0010               	dw	16
  1587  00FC9D  0000               	dw	0
  1588  00FC9F  0010               	dw	16
  1589  00FCA1  0000               	dw	0
  1590  00FCA3  0010               	dw	16
  1591  00FCA5  0000               	dw	0
  1592  00FCA7  0020               	dw	32
  1593  00FCA9  0000               	dw	0
  1594  00FCAB  00C0               	dw	192
  1595  00FCAD  001F               	dw	31
  1596  00FCAF  0020               	dw	32
  1597  00FCB1  0000               	dw	0
  1598  00FCB3  0010               	dw	16
  1599  00FCB5  0000               	dw	0
  1600  00FCB7  0010               	dw	16
  1601  00FCB9  0000               	dw	0
  1602  00FCBB  0010               	dw	16
  1603  00FCBD  0000               	dw	0
  1604  00FCBF  0020               	dw	32
  1605  00FCC1  0000               	dw	0
  1606  00FCC3  00C0               	dw	192
  1607  00FCC5  001F               	dw	31
  1608  00FCC7  0000               	dw	0
  1609  00FCC9  0000               	dw	0
  1610  00FCCB  000A               	dw	10
  1611  00FCCD  0000               	dw	0
  1612  00FCCF  0000               	dw	0
  1613  00FCD1  00F0               	dw	240
  1614  00FCD3  001F               	dw	31
  1615  00FCD5  0020               	dw	32
  1616  00FCD7  0000               	dw	0
  1617  00FCD9  0010               	dw	16
  1618  00FCDB  0000               	dw	0
  1619  00FCDD  0010               	dw	16
  1620  00FCDF  0000               	dw	0
  1621  00FCE1  0010               	dw	16
  1622  00FCE3  0000               	dw	0
  1623  00FCE5  0010               	dw	16
  1624  00FCE7  0000               	dw	0
  1625  00FCE9  0020               	dw	32
  1626  00FCEB  0000               	dw	0
  1627  00FCED  00C0               	dw	192
  1628  00FCEF  001F               	dw	31
  1629  00FCF1  0000               	dw	0
  1630  00FCF3  0000               	dw	0
  1631  00FCF5  000A               	dw	10
  1632  00FCF7  0000               	dw	0
  1633  00FCF9  0000               	dw	0
  1634  00FCFB  00C0               	dw	192
  1635  00FCFD  0007               	dw	7
  1636  00FCFF  0020               	dw	32
  1637  00FD01  0008               	dw	8
  1638  00FD03  0010               	dw	16
  1639  00FD05  0010               	dw	16
  1640  00FD07  0010               	dw	16
  1641  00FD09  0010               	dw	16
  1642  00FD0B  0010               	dw	16
  1643  00FD0D  0010               	dw	16
  1644  00FD0F  0010               	dw	16
  1645  00FD11  0010               	dw	16
  1646  00FD13  0020               	dw	32
  1647  00FD15  0008               	dw	8
  1648  00FD17  00C0               	dw	192
  1649  00FD19  0007               	dw	7
  1650  00FD1B  0000               	dw	0
  1651  00FD1D  0000               	dw	0
  1652  00FD1F  000B               	dw	11
  1653  00FD21  0000               	dw	0
  1654  00FD23  0000               	dw	0
  1655  00FD25  00F0               	dw	240
  1656  00FD27  00FF               	dw	255
  1657  00FD29  0020               	dw	32
  1658  00FD2B  0008               	dw	8
  1659  00FD2D  0010               	dw	16
  1660  00FD2F  0010               	dw	16
  1661  00FD31  0010               	dw	16
  1662  00FD33  0010               	dw	16
  1663  00FD35  0010               	dw	16
  1664  00FD37  0010               	dw	16
  1665  00FD39  0010               	dw	16
  1666  00FD3B  0010               	dw	16
  1667  00FD3D  0010               	dw	16
  1668  00FD3F  0010               	dw	16
  1669  00FD41  0020               	dw	32
  1670  00FD43  0008               	dw	8
  1671  00FD45  00C0               	dw	192
  1672  00FD47  0007               	dw	7
  1673  00FD49  0000               	dw	0
  1674  00FD4B  0000               	dw	0
  1675  00FD4D  000B               	dw	11
  1676  00FD4F  0000               	dw	0
  1677  00FD51  0000               	dw	0
  1678  00FD53  00C0               	dw	192
  1679  00FD55  0007               	dw	7
  1680  00FD57  0020               	dw	32
  1681  00FD59  0008               	dw	8
  1682  00FD5B  0010               	dw	16
  1683  00FD5D  0010               	dw	16
  1684  00FD5F  0010               	dw	16
  1685  00FD61  0010               	dw	16
  1686  00FD63  0010               	dw	16
  1687  00FD65  0010               	dw	16
  1688  00FD67  0010               	dw	16
  1689  00FD69  0010               	dw	16
  1690  00FD6B  0010               	dw	16
  1691  00FD6D  0010               	dw	16
  1692  00FD6F  0020               	dw	32
  1693  00FD71  0008               	dw	8
  1694  00FD73  00F0               	dw	240
  1695  00FD75  00FF               	dw	255
  1696  00FD77  0000               	dw	0
  1697  00FD79  0000               	dw	0
  1698  00FD7B  0006               	dw	6
  1699  00FD7D  0000               	dw	0
  1700  00FD7F  0000               	dw	0
  1701  00FD81  00F0               	dw	240
  1702  00FD83  001F               	dw	31
  1703  00FD85  0020               	dw	32
  1704  00FD87  0000               	dw	0
  1705  00FD89  0010               	dw	16
  1706  00FD8B  0000               	dw	0
  1707  00FD8D  0010               	dw	16
  1708  00FD8F  0000               	dw	0
  1709  00FD91  0000               	dw	0
  1710  00FD93  0000               	dw	0
  1711  00FD95  0006               	dw	6
  1712  00FD97  0060               	dw	96
  1713  00FD99  0008               	dw	8
  1714  00FD9B  0090               	dw	144
  1715  00FD9D  0010               	dw	16
  1716  00FD9F  0010               	dw	16
  1717  00FDA1  0011               	dw	17
  1718  00FDA3  0010               	dw	16
  1719  00FDA5  0011               	dw	17
  1720  00FDA7  0020               	dw	32
  1721  00FDA9  000E               	dw	14
  1722  00FDAB  0000               	dw	0
  1723  00FDAD  0000               	dw	0
  1724  00FDAF  0007               	dw	7
  1725  00FDB1  0000               	dw	0
  1726  00FDB3  0000               	dw	0
  1727  00FDB5  0010               	dw	16
  1728  00FDB7  0000               	dw	0
  1729  00FDB9  0010               	dw	16
  1730  00FDBB  0000               	dw	0
  1731  00FDBD  00FE               	dw	254
  1732  00FDBF  001F               	dw	31
  1733  00FDC1  0010               	dw	16
  1734  00FDC3  0000               	dw	0
  1735  00FDC5  0010               	dw	16
  1736  00FDC7  0000               	dw	0
  1737  00FDC9  0000               	dw	0
  1738  00FDCB  0000               	dw	0
  1739  00FDCD  000A               	dw	10
  1740  00FDCF  0000               	dw	0
  1741  00FDD1  0000               	dw	0
  1742  00FDD3  00F0               	dw	240
  1743  00FDD5  0007               	dw	7
  1744  00FDD7  0000               	dw	0
  1745  00FDD9  0008               	dw	8
  1746  00FDDB  0000               	dw	0
  1747  00FDDD  0010               	dw	16
  1748  00FDDF  0000               	dw	0
  1749  00FDE1  0010               	dw	16
  1750  00FDE3  0000               	dw	0
  1751  00FDE5  0010               	dw	16
  1752  00FDE7  0000               	dw	0
  1753  00FDE9  0010               	dw	16
  1754  00FDEB  0000               	dw	0
  1755  00FDED  0008               	dw	8
  1756  00FDEF  00F0               	dw	240
  1757  00FDF1  0007               	dw	7
  1758  00FDF3  0000               	dw	0
  1759  00FDF5  0000               	dw	0
  1760  00FDF7  000A               	dw	10
  1761  00FDF9  0010               	dw	16
  1762  00FDFB  0000               	dw	0
  1763  00FDFD  0060               	dw	96
  1764  00FDFF  0000               	dw	0
  1765  00FE01  0080               	dw	128
  1766  00FE03  0003               	dw	3
  1767  00FE05  0000               	dw	0
  1768  00FE07  000C               	dw	12
  1769  00FE09  0000               	dw	0
  1770  00FE0B  0010               	dw	16
  1771  00FE0D  0000               	dw	0
  1772  00FE0F  000C               	dw	12
  1773  00FE11  0080               	dw	128
  1774  00FE13  0003               	dw	3
  1775  00FE15  0060               	dw	96
  1776  00FE17  0000               	dw	0
  1777  00FE19  0010               	dw	16
  1778  00FE1B  0000               	dw	0
  1779  00FE1D  0000               	dw	0
  1780  00FE1F  0000               	dw	0
  1781  00FE21  000E               	dw	14
  1782  00FE23  0010               	dw	16
  1783  00FE25  0000               	dw	0
  1784  00FE27  00E0               	dw	224
  1785  00FE29  0000               	dw	0
  1786  00FE2B  0000               	dw	0
  1787  00FE2D  0007               	dw	7
  1788  00FE2F  0000               	dw	0
  1789  00FE31  0018               	dw	24
  1790  00FE33  0000               	dw	0
  1791  00FE35  0007               	dw	7
  1792  00FE37  00E0               	dw	224
  1793  00FE39  0000               	dw	0
  1794  00FE3B  0010               	dw	16
  1795  00FE3D  0000               	dw	0
  1796  00FE3F  00E0               	dw	224
  1797  00FE41  0000               	dw	0
  1798  00FE43  0000               	dw	0
  1799  00FE45  0007               	dw	7
  1800  00FE47  0000               	dw	0
  1801  00FE49  0018               	dw	24
  1802  00FE4B  0000               	dw	0
  1803  00FE4D  0007               	dw	7
  1804  00FE4F  00E0               	dw	224
  1805  00FE51  0000               	dw	0
  1806  00FE53  0010               	dw	16
  1807  00FE55  0000               	dw	0
  1808  00FE57  0000               	dw	0
  1809  00FE59  0000               	dw	0
  1810  00FE5B  0009               	dw	9
  1811  00FE5D  0010               	dw	16
  1812  00FE5F  0010               	dw	16
  1813  00FE61  0020               	dw	32
  1814  00FE63  0008               	dw	8
  1815  00FE65  0040               	dw	64
  1816  00FE67  0004               	dw	4
  1817  00FE69  0080               	dw	128
  1818  00FE6B  0003               	dw	3
  1819  00FE6D  0080               	dw	128
  1820  00FE6F  0003               	dw	3
  1821  00FE71  0040               	dw	64
  1822  00FE73  0004               	dw	4
  1823  00FE75  0020               	dw	32
  1824  00FE77  0008               	dw	8
  1825  00FE79  0010               	dw	16
  1826  00FE7B  0010               	dw	16
  1827  00FE7D  0000               	dw	0
  1828  00FE7F  0000               	dw	0
  1829  00FE81  0009               	dw	9
  1830  00FE83  0010               	dw	16
  1831  00FE85  0000               	dw	0
  1832  00FE87  00E0               	dw	224
  1833  00FE89  0000               	dw	0
  1834  00FE8B  0000               	dw	0
  1835  00FE8D  0083               	dw	131
  1836  00FE8F  0000               	dw	0
  1837  00FE91  007C               	dw	124
  1838  00FE93  0000               	dw	0
  1839  00FE95  000C               	dw	12
  1840  00FE97  0000               	dw	0
  1841  00FE99  0003               	dw	3
  1842  00FE9B  00E0               	dw	224
  1843  00FE9D  0000               	dw	0
  1844  00FE9F  0010               	dw	16
  1845  00FEA1  0000               	dw	0
  1846  00FEA3  0000               	dw	0
  1847  00FEA5  0000               	dw	0
  1848  00FEA7  0008               	dw	8
  1849  00FEA9  0010               	dw	16
  1850  00FEAB  0010               	dw	16
  1851  00FEAD  0010               	dw	16
  1852  00FEAF  0018               	dw	24
  1853  00FEB1  0010               	dw	16
  1854  00FEB3  0016               	dw	22
  1855  00FEB5  0010               	dw	16
  1856  00FEB7  0011               	dw	17
  1857  00FEB9  00D0               	dw	208
  1858  00FEBB  0010               	dw	16
  1859  00FEBD  0030               	dw	48
  1860  00FEBF  0010               	dw	16
  1861  00FEC1  0010               	dw	16
  1862  00FEC3  0010               	dw	16
  1863  00FEC5  0000               	dw	0
  1864  00FEC7  0000               	dw	0
  1865  00FEC9  0007               	dw	7
  1866  00FECB  0000               	dw	0
  1867  00FECD  0000               	dw	0
  1868  00FECF  0000               	dw	0
  1869  00FED1  0001               	dw	1
  1870  00FED3  0080               	dw	128
  1871  00FED5  0002               	dw	2
  1872  00FED7  00FC               	dw	252
  1873  00FED9  007E               	dw	126
  1874  00FEDB  0002               	dw	2
  1875  00FEDD  0080               	dw	128
  1876  00FEDF  0002               	dw	2
  1877  00FEE1  0080               	dw	128
  1878  00FEE3  0000               	dw	0
  1879  00FEE5  0000               	dw	0
  1880  00FEE7  0007               	dw	7
  1881  00FEE9  0000               	dw	0
  1882  00FEEB  0000               	dw	0
  1883  00FEED  0000               	dw	0
  1884  00FEEF  0000               	dw	0
  1885  00FEF1  0000               	dw	0
  1886  00FEF3  0000               	dw	0
  1887  00FEF5  0000               	dw	0
  1888  00FEF7  0000               	dw	0
  1889  00FEF9  0000               	dw	0
  1890  00FEFB  0000               	dw	0
  1891  00FEFD  00FE               	dw	254
  1892  00FEFF  00FF               	dw	255
  1893  00FF01  0000               	dw	0
  1894  00FF03  0000               	dw	0
  1895  00FF05  0006               	dw	6
  1896  00FF07  0002               	dw	2
  1897  00FF09  0080               	dw	128
  1898  00FF0B  0002               	dw	2
  1899  00FF0D  0080               	dw	128
  1900  00FF0F  00FC               	dw	252
  1901  00FF11  007E               	dw	126
  1902  00FF13  0080               	dw	128
  1903  00FF15  0002               	dw	2
  1904  00FF17  0000               	dw	0
  1905  00FF19  0001               	dw	1
  1906  00FF1B  0000               	dw	0
  1907  00FF1D  0000               	dw	0
  1908  00FF1F  000A               	dw	10
  1909  00FF21  0000               	dw	0
  1910  00FF23  0000               	dw	0
  1911  00FF25  0080               	dw	128
  1912  00FF27  0000               	dw	0
  1913  00FF29  0040               	dw	64
  1914  00FF2B  0000               	dw	0
  1915  00FF2D  0040               	dw	64
  1916  00FF2F  0000               	dw	0
  1917  00FF31  0040               	dw	64
  1918  00FF33  0000               	dw	0
  1919  00FF35  0080               	dw	128
  1920  00FF37  0000               	dw	0
  1921  00FF39  0080               	dw	128
  1922  00FF3B  0000               	dw	0
  1923  00FF3D  0080               	dw	128
  1924  00FF3F  0000               	dw	0
  1925  00FF41  0040               	dw	64
  1926  00FF43  0000               	dw	0
  1927  00FF45  0000               	dw	0
  1928  00FF47  0000               	dw	0
  1929  00FF49  0005               	dw	5
  1930  00FF4B  00FF               	dw	255
  1931  00FF4D  000F               	dw	15
  1932  00FF4F  0001               	dw	1
  1933  00FF51  0008               	dw	8
  1934  00FF53  0001               	dw	1
  1935  00FF55  0008               	dw	8
  1936  00FF57  00FF               	dw	255
  1937  00FF59  000F               	dw	15
  1938  00FF5B  0000               	dw	0
  1939  00FF5D  0000               	dw	0
  1940  00FF5F                     __end_of_font:
  1941                           	opt callstack 0
  1942  00FF5F                     _spi_configuration:
  1943                           	opt callstack 0
  1944  00FF5F  00                 	db	0
  1945  00FF60  40                 	db	64
  1946  00FF61  01                 	db	1
  1947  00FF62  00                 	db	0
  1948  00FF63                     __end_of_spi_configuration:
  1949                           	opt callstack 0
  1950  00FF63                     STR_1:
  1951  00FF63  58                 	db	88	;'X'
  1952  00FF64  43                 	db	67	;'C'
  1953  00FF65  38                 	db	56	;'8'
  1954  00FF66  20                 	db	32
  1955  00FF67  2D                 	db	45
  1956  00FF68  20                 	db	32
  1957  00FF69  42                 	db	66	;'B'
  1958  00FF6A  69                 	db	105	;'i'
  1959  00FF6B  62                 	db	98	;'b'
  1960  00FF6C  6C                 	db	108	;'l'
  1961  00FF6D  69                 	db	105	;'i'
  1962  00FF6E  6F                 	db	111	;'o'
  1963  00FF6F  74                 	db	116	;'t'
  1964  00FF70  65                 	db	101	;'e'
  1965  00FF71  63                 	db	99	;'c'
  1966  00FF72  61                 	db	97	;'a'
  1967  00FF73  20                 	db	32
  1968  00FF74  2D                 	db	45
  1969  00FF75  20                 	db	32
  1970  00FF76  4C                 	db	76	;'L'
  1971  00FF77  43                 	db	67	;'C'
  1972  00FF78  44                 	db	68	;'D'
  1973  00FF79  20                 	db	32
  1974  00FF7A  2D                 	db	45
  1975  00FF7B  20                 	db	32
  1976  00FF7C  49                 	db	73	;'I'
  1977  00FF7D  4C                 	db	76	;'L'
  1978  00FF7E  49                 	db	73	;'I'
  1979  00FF7F  39                 	db	57	;'9'
  1980  00FF80  33                 	db	51	;'3'
  1981  00FF81  34                 	db	52	;'4'
  1982  00FF82  31                 	db	49	;'1'
  1983  00FF83  00                 	db	0
  1984  00FF84                     STR_4:
  1985  00FF84  70                 	db	112	;'p'
  1986  00FF85  65                 	db	101	;'e'
  1987  00FF86  72                 	db	114	;'r'
  1988  00FF87  63                 	db	99	;'c'
  1989  00FF88  65                 	db	101	;'e'
  1990  00FF89  6E                 	db	110	;'n'
  1991  00FF8A  74                 	db	116	;'t'
  1992  00FF8B  61                 	db	97	;'a'
  1993  00FF8C  67                 	db	103	;'g'
  1994  00FF8D  65                 	db	101	;'e'
  1995  00FF8E  6D                 	db	109	;'m'
  1996  00FF8F  20                 	db	32
  1997  00FF90  3D                 	db	61	;'='
  1998  00FF91  20                 	db	32
  1999  00FF92  25                 	db	37
  2000  00FF93  2E                 	db	46
  2001  00FF94  66                 	db	102	;'f'
  2002  00FF95  20                 	db	32
  2003  00FF96  20                 	db	32
  2004  00FF97  00                 	db	0
  2005  00FF98                     STR_3:
  2006  00FF98  52                 	db	82	;'R'
  2007  00FF99  50                 	db	80	;'P'
  2008  00FF9A  4D                 	db	77	;'M'
  2009  00FF9B  3D                 	db	61	;'='
  2010  00FF9C  20                 	db	32
  2011  00FF9D  25                 	db	37
  2012  00FF9E  64                 	db	100	;'d'
  2013  00FF9F  20                 	db	32
  2014  00FFA0  20                 	db	32
  2015  00FFA1  20                 	db	32
  2016  00FFA2  20                 	db	32
  2017  00FFA3  20                 	db	32
  2018  00FFA4  20                 	db	32
  2019  00FFA5  00                 	db	0
  2020  00FFA6                     STR_2:
  2021  00FFA6  50                 	db	80	;'P'
  2022  00FFA7  49                 	db	73	;'I'
  2023  00FFA8  43                 	db	67	;'C'
  2024  00FFA9  20                 	db	32
  2025  00FFAA  2D                 	db	45
  2026  00FFAB  20                 	db	32
  2027  00FFAC  53                 	db	83	;'S'
  2028  00FFAD  45                 	db	69	;'E'
  2029  00FFAE  45                 	db	69	;'E'
  2030  00FFAF  56                 	db	86	;'V'
  2031  00FFB0  00                 	db	0
  2032  00FFB1                     STR_5:
  2033  00FFB1  54                 	db	84	;'T'
  2034  00FFB2  45                 	db	69	;'E'
  2035  00FFB3  53                 	db	83	;'S'
  2036  00FFB4  54                 	db	84	;'T'
  2037  00FFB5  45                 	db	69	;'E'
  2038  00FFB6  20                 	db	32
  2039  00FFB7  25                 	db	37
  2040  00FFB8  64                 	db	100	;'d'
  2041  00FFB9  00                 	db	0
  2042  00FFBA                     STR_6:
  2043  00FFBA  49                 	db	73	;'I'
  2044  00FFBB  4E                 	db	78	;'N'
  2045  00FFBC  46                 	db	70	;'F'
  2046  00FFBD  00                 	db	0
  2047  00FFBE                     STR_10:
  2048  00FFBE  4E                 	db	78	;'N'
  2049  00FFBF  41                 	db	65	;'A'
  2050  00FFC0  4E                 	db	78	;'N'
  2051  00FFC1  00                 	db	0
  2052  00FFC2                     STR_95:
  2053  00FFC2  68                 	db	104	;'h'
  2054  00FFC3  68                 	db	104	;'h'
  2055  00FFC4  58                 	db	88	;'X'
  2056  00FFC5  00                 	db	0
  2057  00FFC6                     STR_14:
  2058  00FFC6  68                 	db	104	;'h'
  2059  00FFC7  68                 	db	104	;'h'
  2060  00FFC8  64                 	db	100	;'d'
  2061  00FFC9  00                 	db	0
  2062  00FFCA                     STR_7:
  2063  00FFCA  69                 	db	105	;'i'
  2064  00FFCB  6E                 	db	110	;'n'
  2065  00FFCC  66                 	db	102	;'f'
  2066  00FFCD  00                 	db	0
  2067  00FFCE                     STR_18:
  2068  00FFCE  68                 	db	104	;'h'
  2069  00FFCF  68                 	db	104	;'h'
  2070  00FFD0  69                 	db	105	;'i'
  2071  00FFD1  00                 	db	0
  2072  00FFD2                     STR_11:
  2073  00FFD2  6E                 	db	110	;'n'
  2074  00FFD3  61                 	db	97	;'a'
  2075  00FFD4  6E                 	db	110	;'n'
  2076  00FFD5  00                 	db	0
  2077  00FFD6                     STR_61:
  2078  00FFD6  68                 	db	104	;'h'
  2079  00FFD7  68                 	db	104	;'h'
  2080  00FFD8  6E                 	db	110	;'n'
  2081  00FFD9  00                 	db	0
  2082  00FFDA                     STR_46:
  2083  00FFDA  68                 	db	104	;'h'
  2084  00FFDB  68                 	db	104	;'h'
  2085  00FFDC  6F                 	db	111	;'o'
  2086  00FFDD  00                 	db	0
  2087  00FFDE                     STR_76:
  2088  00FFDE  68                 	db	104	;'h'
  2089  00FFDF  68                 	db	104	;'h'
  2090  00FFE0  75                 	db	117	;'u'
  2091  00FFE1  00                 	db	0
  2092  00FFE2                     STR_91:
  2093  00FFE2  68                 	db	104	;'h'
  2094  00FFE3  68                 	db	104	;'h'
  2095  00FFE4  78                 	db	120	;'x'
  2096  00FFE5  00                 	db	0
  2097  00FFE6                     STR_113:
  2098  00FFE6  7A                 	db	122	;'z'
  2099  00FFE7  58                 	db	88	;'X'
  2100  00FFE8  00                 	db	0
  2101  00FFE9                     STR_32:
  2102  00FFE9  7A                 	db	122	;'z'
  2103  00FFEA  64                 	db	100	;'d'
  2104  00FFEB  00                 	db	0
  2105  00FFEC                     STR_41:
  2106  00FFEC  6C                 	db	108	;'l'
  2107  00FFED  66                 	db	102	;'f'
  2108  00FFEE  00                 	db	0
  2109  00FFEF                     STR_36:
  2110  00FFEF  7A                 	db	122	;'z'
  2111  00FFF0  69                 	db	105	;'i'
  2112  00FFF1  00                 	db	0
  2113  00FFF2                     STR_71:
  2114  00FFF2  7A                 	db	122	;'z'
  2115  00FFF3  6E                 	db	110	;'n'
  2116  00FFF4  00                 	db	0
  2117  00FFF5                     STR_56:
  2118  00FFF5  7A                 	db	122	;'z'
  2119  00FFF6  6F                 	db	111	;'o'
  2120  00FFF7  00                 	db	0
  2121  00FFF8                     STR_86:
  2122  00FFF8  7A                 	db	122	;'z'
  2123  00FFF9  75                 	db	117	;'u'
  2124  00FFFA  00                 	db	0
  2125  00FFFB                     STR_109:
  2126  00FFFB  7A                 	db	122	;'z'
  2127  00FFFC  78                 	db	120	;'x'
  2128  00FFFD  00                 	db	0
  2129  0000                     
  2130                           ; #config settings
  2131  00FFFE  00                 	db	0	; dummy byte at the end
  2132  0000                     
  2133                           	psect	nvCOMRAM
  2134  00004D                     __pnvCOMRAM:
  2135                           	opt callstack 0
  2136  00004D                     _timer0ReloadVal:
  2137                           	opt callstack 0
  2138  00004D                     	ds	2
  2139                           
  2140                           	psect	nvBANK0
  2141  0000FA                     __pnvBANK0:
  2142                           	opt callstack 0
  2143  0000FA                     _IOCB4_InterruptHandler:
  2144                           	opt callstack 0
  2145  0000FA                     	ds	2
  2146                           
  2147                           	psect	nvBANK1
  2148  0001D0                     __pnvBANK1:
  2149                           	opt callstack 0
  2150  0001D0                     _timer1ReloadVal:
  2151                           	opt callstack 0
  2152  0001D0                     	ds	2
  2153  0001D2                     _TMR2_InterruptHandler:
  2154                           	opt callstack 0
  2155  0001D2                     	ds	2
  2156  0001D4                     _INT0_InterruptHandler:
  2157                           	opt callstack 0
  2158  0001D4                     	ds	2
  2159  0001D6                     _ADC_InterruptHandler:
  2160                           	opt callstack 0
  2161  0001D6                     	ds	2
  2162  0000                     _IOCBbits	set	3930
  2163  0000                     _WPUB	set	3931
  2164  0000                     _ANCON1	set	3932
  2165  0000                     _ANCON0	set	3933
  2166  0000                     _T1GCONbits	set	4010
  2167  0000                     _T1CONbits	set	4045
  2168  0000                     _T1CON	set	4045
  2169  0000                     _TMR1L	set	4046
  2170  0000                     _TMR1H	set	4047
  2171  0000                     _T1GCON	set	4010
  2172  0000                     _LATEbits	set	3981
  2173  0000                     _SSPSTATbits	set	4039
  2174  0000                     _LATAbits	set	3977
  2175  0000                     _PORTBbits	set	3969
  2176  0000                     _T2CONbits	set	4042
  2177  0000                     _T2CON	set	4042
  2178  0000                     _TMR2	set	4044
  2179  0000                     _PR2	set	4043
  2180  0000                     _T0CON	set	4053
  2181  0000                     _TMR0L	set	4054
  2182  0000                     _TMR0H	set	4055
  2183  0000                     _T0CONbits	set	4053
  2184  0000                     _ADCON0bits	set	4034
  2185  0000                     _ADRESL	set	4035
  2186  0000                     _ADRESH	set	4036
  2187  0000                     _ADCON2	set	4032
  2188  0000                     _ADCON1	set	4033
  2189  0000                     _ADCON0	set	4034
  2190  0000                     _SSPBUF	set	4041
  2191  0000                     _SSPCON2	set	4037
  2192  0000                     _SSPCON1bits	set	4038
  2193  0000                     _TRISCbits	set	3988
  2194  0000                     _SSPADD	set	4040
  2195  0000                     _SSPCON1	set	4038
  2196  0000                     _SSPSTAT	set	4039
  2197  0000                     _PIR1bits	set	3998
  2198  0000                     _PIE1bits	set	3997
  2199  0000                     _RCONbits	set	4048
  2200  0000                     _REFOCON	set	3994
  2201  0000                     _OSCTUNE	set	3995
  2202  0000                     _OSCCON2	set	4050
  2203  0000                     _OSCCON	set	4051
  2204  0000                     _INTCONbits	set	4082
  2205  0000                     _INTCON2bits	set	4081
  2206  0000                     _TRISD	set	3989
  2207  0000                     _TRISC	set	3988
  2208  0000                     _TRISB	set	3987
  2209  0000                     _TRISA	set	3986
  2210  0000                     _TRISE	set	3990
  2211  0000                     _LATC	set	3979
  2212  0000                     _LATB	set	3978
  2213  0000                     _LATA	set	3977
  2214  0000                     _LATD	set	3980
  2215  0000                     _LATE	set	3981
  2216                           
  2217                           	psect	cinit
  2218  005B6A                     __pcinit:
  2219                           	opt callstack 0
  2220  005B6A                     start_initialization:
  2221                           	opt callstack 0
  2222  005B6A                     __initialization:
  2223                           	opt callstack 0
  2224                           
  2225                           ; Initialize objects allocated to BANK1 (7 bytes)
  2226                           ; load TBLPTR registers with __pidataBANK1
  2227  005B6A  0E52               	movlw	low __pidataBANK1
  2228  005B6C  6EF6               	movwf	tblptrl,c
  2229  005B6E  0E63               	movlw	high __pidataBANK1
  2230  005B70  6EF7               	movwf	tblptrh,c
  2231  005B72  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2232  005B74  6EF8               	movwf	tblptru,c
  2233  005B76  EE01  F0D8         	lfsr	0,__pdataBANK1
  2234  005B7A  EE10 F007          	lfsr	1,7
  2235  005B7E                     copy_data0:
  2236  005B7E  0009               	tblrd		*+
  2237  005B80  CFF5 FFEE          	movff	tablat,postinc0
  2238  005B84  50E5               	movf	postdec1,w,c
  2239  005B86  50E1               	movf	fsr1l,w,c
  2240  005B88  E1FA               	bnz	copy_data0
  2241                           
  2242                           ; Clear objects allocated to BANK2 (200 bytes)
  2243  005B8A  EE02  F000         	lfsr	0,__pbssBANK2
  2244  005B8E  0EC8               	movlw	200
  2245  005B90                     clear_0:
  2246  005B90  6AEE               	clrf	postinc0,c
  2247  005B92  06E8               	decf	wreg,f,c
  2248  005B94  E1FD               	bnz	clear_0
  2249                           
  2250                           ; Clear objects allocated to BANK1 (188 bytes)
  2251  005B96  EE01  F000         	lfsr	0,__pbssBANK1
  2252  005B9A  0EBC               	movlw	188
  2253  005B9C                     clear_1:
  2254  005B9C  6AEE               	clrf	postinc0,c
  2255  005B9E  06E8               	decf	wreg,f,c
  2256  005BA0  E1FD               	bnz	clear_1
  2257                           
  2258                           ; Clear objects allocated to BANK0 (12 bytes)
  2259  005BA2  EE00  F0EE         	lfsr	0,__pbssBANK0
  2260  005BA6  0E0C               	movlw	12
  2261  005BA8                     clear_2:
  2262  005BA8  6AEE               	clrf	postinc0,c
  2263  005BAA  06E8               	decf	wreg,f,c
  2264  005BAC  E1FD               	bnz	clear_2
  2265                           
  2266                           ; Clear objects allocated to COMRAM (14 bytes)
  2267  005BAE  EE00  F03F         	lfsr	0,__pbssCOMRAM
  2268  005BB2  0E0E               	movlw	14
  2269  005BB4                     clear_3:
  2270  005BB4  6AEE               	clrf	postinc0,c
  2271  005BB6  06E8               	decf	wreg,f,c
  2272  005BB8  E1FD               	bnz	clear_3
  2273  005BBA                     end_of_initialization:
  2274                           	opt callstack 0
  2275  005BBA                     __end_of__initialization:
  2276                           	opt callstack 0
  2277  005BBA  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2278  005BBC  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2279  005BBE  0100               	movlb	0
  2280  005BC0  EF93  F01B         	goto	_main	;jump to C main() function
  2281                           
  2282                           	psect	bssCOMRAM
  2283  00003F                     __pbssCOMRAM:
  2284                           	opt callstack 0
  2285  00003F                     _percentagem:
  2286                           	opt callstack 0
  2287  00003F                     	ds	4
  2288  000043                     _width:
  2289                           	opt callstack 0
  2290  000043                     	ds	2
  2291  000045                     _prec:
  2292                           	opt callstack 0
  2293  000045                     	ds	2
  2294  000047                     _flags:
  2295                           	opt callstack 0
  2296  000047                     	ds	2
  2297  000049                     _global_bg_color:
  2298                           	opt callstack 0
  2299  000049                     	ds	2
  2300  00004B                     TMR2_ISR@CountCallBack:
  2301                           	opt callstack 0
  2302  00004B                     	ds	2
  2303                           
  2304                           	psect	bssBANK0
  2305  0000EE                     __pbssBANK0:
  2306                           	opt callstack 0
  2307  0000EE                     _errno:
  2308                           	opt callstack 0
  2309  0000EE                     	ds	2
  2310  0000F0                     _nout:
  2311                           	opt callstack 0
  2312  0000F0                     	ds	2
  2313  0000F2                     _teste:
  2314                           	opt callstack 0
  2315  0000F2                     	ds	2
  2316  0000F4                     _rpm:
  2317                           	opt callstack 0
  2318  0000F4                     	ds	2
  2319  0000F6                     _codigo_digital:
  2320                           	opt callstack 0
  2321  0000F6                     	ds	2
  2322  0000F8                     _ticks:
  2323                           	opt callstack 0
  2324  0000F8                     	ds	2
  2325                           
  2326                           	psect	bssBANK1
  2327  000100                     __pbssBANK1:
  2328                           	opt callstack 0
  2329  000100                     floorf@F524:
  2330                           	opt callstack 0
  2331  000100                     	ds	4
  2332  000104                     ___fpclassifyf@F463:
  2333                           	opt callstack 0
  2334  000104                     	ds	4
  2335  000108                     _string:
  2336                           	opt callstack 0
  2337  000108                     	ds	100
  2338  00016C                     _dbuf:
  2339                           	opt callstack 0
  2340  00016C                     	ds	80
  2341                           
  2342                           	psect	dataBANK1
  2343  0001D8                     __pdataBANK1:
  2344                           	opt callstack 0
  2345  0001D8                     stoa@F1174:
  2346                           	opt callstack 0
  2347  0001D8                     	ds	7
  2348                           
  2349                           	psect	bssBANK2
  2350  000200                     __pbssBANK2:
  2351                           	opt callstack 0
  2352  000200                     _steste:
  2353                           	opt callstack 0
  2354  000200                     	ds	100
  2355  000264                     _string_rpm:
  2356                           	opt callstack 0
  2357  000264                     	ds	100
  2358                           
  2359                           	psect	cstackBANK1
  2360  0001BC                     __pcstackBANK1:
  2361                           	opt callstack 0
  2362  0001BC                     _vsnprintf$2535:
  2363                           	opt callstack 0
  2364                           
  2365                           ; 2 bytes @ 0x0
  2366  0001BC                     	ds	2
  2367  0001BE                     vsnprintf@cnt:
  2368                           	opt callstack 0
  2369                           
  2370                           ; 2 bytes @ 0x2
  2371  0001BE                     	ds	2
  2372  0001C0                     vsnprintf@f:
  2373                           	opt callstack 0
  2374                           
  2375                           ; 6 bytes @ 0x4
  2376  0001C0                     	ds	6
  2377  0001C6                     ?_snprintf:
  2378                           	opt callstack 0
  2379  0001C6                     snprintf@s:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 2 bytes @ 0xA
  2383  0001C6                     	ds	2
  2384  0001C8                     snprintf@n:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 2 bytes @ 0xC
  2388  0001C8                     	ds	2
  2389  0001CA                     snprintf@fmt:
  2390                           	opt callstack 0
  2391                           
  2392                           ; 2 bytes @ 0xE
  2393  0001CA                     	ds	6
  2394                           
  2395                           	psect	cstackBANK0
  2396  000060                     __pcstackBANK0:
  2397                           	opt callstack 0
  2398  000060                     ??___flge:
  2399  000060                     lcd_draw_string@k:
  2400                           	opt callstack 0
  2401  000060                     _dtoa$1697:
  2402                           	opt callstack 0
  2403  000060                     otoa@p:
  2404                           	opt callstack 0
  2405  000060                     utoa@p:
  2406                           	opt callstack 0
  2407  000060                     _xtoa$1767:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x0
  2411  000060                     	ds	2
  2412  000062                     lcd_draw_string@lIndex:
  2413                           	opt callstack 0
  2414  000062                     dtoa@p:
  2415                           	opt callstack 0
  2416  000062                     otoa@t:
  2417                           	opt callstack 0
  2418  000062                     utoa@w:
  2419                           	opt callstack 0
  2420  000062                     _xtoa$1768:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x2
  2424  000062                     	ds	2
  2425  000064                     ?_efgtoa:
  2426                           	opt callstack 0
  2427  000064                     dtoa@w:
  2428                           	opt callstack 0
  2429  000064                     efgtoa@fp:
  2430                           	opt callstack 0
  2431  000064                     otoa@w:
  2432                           	opt callstack 0
  2433  000064                     xtoa@p:
  2434                           	opt callstack 0
  2435  000064                     utoa@n:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 8 bytes @ 0x4
  2439  000064                     	ds	2
  2440  000066                     dtoa@s:
  2441                           	opt callstack 0
  2442  000066                     xtoa@w:
  2443                           	opt callstack 0
  2444  000066                     efgtoa@f:
  2445                           	opt callstack 0
  2446  000066                     otoa@n:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 8 bytes @ 0x6
  2450  000066                     	ds	2
  2451  000068                     dtoa@n:
  2452                           	opt callstack 0
  2453  000068                     xtoa@n:
  2454                           	opt callstack 0
  2455                           
  2456                           ; 8 bytes @ 0x8
  2457  000068                     	ds	2
  2458  00006A                     efgtoa@c:
  2459                           	opt callstack 0
  2460                           
  2461                           ; 1 bytes @ 0xA
  2462  00006A                     	ds	1
  2463  00006B                     ??_efgtoa:
  2464                           
  2465                           ; 1 bytes @ 0xB
  2466  00006B                     	ds	1
  2467  00006C                     utoa@i:
  2468                           	opt callstack 0
  2469                           
  2470                           ; 2 bytes @ 0xC
  2471  00006C                     	ds	2
  2472  00006E                     otoa@i:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 2 bytes @ 0xE
  2476  00006E                     	ds	2
  2477  000070                     dtoa@i:
  2478                           	opt callstack 0
  2479  000070                     xtoa@i:
  2480                           	opt callstack 0
  2481  000070                     efgtoa@ou:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x10
  2485  000070                     	ds	2
  2486  000072                     xtoa@c:
  2487                           	opt callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x12
  2490  000072                     	ds	2
  2491  000074                     _efgtoa$1720:
  2492                           	opt callstack 0
  2493                           
  2494                           ; 2 bytes @ 0x14
  2495  000074                     	ds	2
  2496  000076                     _efgtoa$1721:
  2497                           	opt callstack 0
  2498                           
  2499                           ; 2 bytes @ 0x16
  2500  000076                     	ds	2
  2501  000078                     _efgtoa$1725:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 2 bytes @ 0x18
  2505  000078                     	ds	2
  2506  00007A                     _efgtoa$1729:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 2 bytes @ 0x1A
  2510  00007A                     	ds	2
  2511  00007C                     _efgtoa$1730:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x1C
  2515  00007C                     	ds	2
  2516  00007E                     _efgtoa$1731:
  2517                           	opt callstack 0
  2518                           
  2519                           ; 2 bytes @ 0x1E
  2520  00007E                     	ds	2
  2521  000080                     efgtoa@t:
  2522                           	opt callstack 0
  2523                           
  2524                           ; 2 bytes @ 0x20
  2525  000080                     	ds	2
  2526  000082                     efgtoa@pp:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 2 bytes @ 0x22
  2530  000082                     	ds	2
  2531  000084                     efgtoa@m:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 2 bytes @ 0x24
  2535  000084                     	ds	2
  2536  000086                     efgtoa@ne:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x26
  2540  000086                     	ds	2
  2541  000088                     efgtoa@d:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 2 bytes @ 0x28
  2545  000088                     	ds	2
  2546  00008A                     efgtoa@sign:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x2A
  2550  00008A                     	ds	2
  2551  00008C                     efgtoa@p:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x2C
  2555  00008C                     	ds	2
  2556  00008E                     efgtoa@nmode:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 1 bytes @ 0x2E
  2560  00008E                     	ds	1
  2561  00008F                     efgtoa@w:
  2562                           	opt callstack 0
  2563                           
  2564                           ; 2 bytes @ 0x2F
  2565  00008F                     	ds	2
  2566  000091                     efgtoa@mode:
  2567                           	opt callstack 0
  2568                           
  2569                           ; 1 bytes @ 0x31
  2570  000091                     	ds	1
  2571  000092                     efgtoa@h:
  2572                           	opt callstack 0
  2573                           
  2574                           ; 4 bytes @ 0x32
  2575  000092                     	ds	4
  2576  000096                     efgtoa@l:
  2577                           	opt callstack 0
  2578                           
  2579                           ; 4 bytes @ 0x36
  2580  000096                     	ds	4
  2581  00009A                     efgtoa@i:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 2 bytes @ 0x3A
  2585  00009A                     	ds	2
  2586  00009C                     efgtoa@g:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 4 bytes @ 0x3C
  2590  00009C                     	ds	4
  2591  0000A0                     efgtoa@e:
  2592                           	opt callstack 0
  2593                           
  2594                           ; 2 bytes @ 0x40
  2595  0000A0                     	ds	2
  2596  0000A2                     efgtoa@n:
  2597                           	opt callstack 0
  2598                           
  2599                           ; 2 bytes @ 0x42
  2600  0000A2                     	ds	2
  2601  0000A4                     efgtoa@u:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 4 bytes @ 0x44
  2605  0000A4                     	ds	4
  2606  0000A8                     ?_vfpfcnvrt:
  2607                           	opt callstack 0
  2608  0000A8                     vfpfcnvrt@fp:
  2609                           	opt callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x48
  2612  0000A8                     	ds	2
  2613  0000AA                     vfpfcnvrt@fmt:
  2614                           	opt callstack 0
  2615                           
  2616                           ; 2 bytes @ 0x4A
  2617  0000AA                     	ds	2
  2618  0000AC                     vfpfcnvrt@ap:
  2619                           	opt callstack 0
  2620                           
  2621                           ; 2 bytes @ 0x4C
  2622  0000AC                     	ds	2
  2623  0000AE                     ??_vfpfcnvrt:
  2624                           
  2625                           ; 1 bytes @ 0x4E
  2626  0000AE                     	ds	4
  2627  0000B2                     vfpfcnvrt@cp:
  2628                           	opt callstack 0
  2629                           
  2630                           ; 2 bytes @ 0x52
  2631  0000B2                     	ds	2
  2632  0000B4                     vfpfcnvrt@done:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 2 bytes @ 0x54
  2636  0000B4                     	ds	2
  2637  0000B6                     _vfpfcnvrt$1782:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 2 bytes @ 0x56
  2641  0000B6                     	ds	2
  2642  0000B8                     _vfpfcnvrt$1783:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x58
  2646  0000B8                     	ds	2
  2647  0000BA                     _vfpfcnvrt$1804:
  2648                           	opt callstack 0
  2649                           
  2650                           ; 2 bytes @ 0x5A
  2651  0000BA                     	ds	2
  2652  0000BC                     vfpfcnvrt@f:
  2653                           	opt callstack 0
  2654                           
  2655                           ; 4 bytes @ 0x5C
  2656  0000BC                     	ds	4
  2657  0000C0                     vfpfcnvrt@ct:
  2658                           	opt callstack 0
  2659                           
  2660                           ; 3 bytes @ 0x60
  2661  0000C0                     	ds	3
  2662  0000C3                     vfpfcnvrt@ll:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 8 bytes @ 0x63
  2666  0000C3                     	ds	8
  2667  0000CB                     vfpfcnvrt@vp:
  2668                           	opt callstack 0
  2669                           
  2670                           ; 2 bytes @ 0x6B
  2671  0000CB                     	ds	2
  2672  0000CD                     vfpfcnvrt@c:
  2673                           	opt callstack 0
  2674                           
  2675                           ; 1 bytes @ 0x6D
  2676  0000CD                     	ds	1
  2677  0000CE                     vfpfcnvrt@llu:
  2678                           	opt callstack 0
  2679                           
  2680                           ; 8 bytes @ 0x6E
  2681  0000CE                     	ds	8
  2682  0000D6                     ?_vfprintf:
  2683                           	opt callstack 0
  2684  0000D6                     vfprintf@fp:
  2685                           	opt callstack 0
  2686                           
  2687                           ; 2 bytes @ 0x76
  2688  0000D6                     	ds	2
  2689  0000D8                     vfprintf@fmt:
  2690                           	opt callstack 0
  2691                           
  2692                           ; 2 bytes @ 0x78
  2693  0000D8                     	ds	2
  2694  0000DA                     vfprintf@ap:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 2 bytes @ 0x7A
  2698  0000DA                     	ds	2
  2699  0000DC                     vfprintf@cfmt:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 2 bytes @ 0x7C
  2703  0000DC                     	ds	2
  2704  0000DE                     ?_vsnprintf:
  2705                           	opt callstack 0
  2706  0000DE                     vsnprintf@s:
  2707                           	opt callstack 0
  2708                           
  2709                           ; 2 bytes @ 0x7E
  2710  0000DE                     	ds	2
  2711  0000E0                     vsnprintf@n:
  2712                           	opt callstack 0
  2713                           
  2714                           ; 2 bytes @ 0x80
  2715  0000E0                     	ds	2
  2716  0000E2                     vsnprintf@fmt:
  2717                           	opt callstack 0
  2718                           
  2719                           ; 2 bytes @ 0x82
  2720  0000E2                     	ds	2
  2721  0000E4                     vsnprintf@ap:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x84
  2725  0000E4                     	ds	2
  2726  0000E6                     ??_vsnprintf:
  2727                           
  2728                           ; 1 bytes @ 0x86
  2729  0000E6                     	ds	6
  2730  0000EC                     snprintf@ap:
  2731                           	opt callstack 0
  2732                           
  2733                           ; 2 bytes @ 0x8C
  2734  0000EC                     	ds	2
  2735                           
  2736                           	psect	cstackCOMRAM
  2737  000001                     __pcstackCOMRAM:
  2738                           	opt callstack 0
  2739  000001                     ?_TMR0_ReadTimer:
  2740                           	opt callstack 0
  2741  000001                     TMR0_WriteTimer@timerVal:
  2742                           	opt callstack 0
  2743  000001                     i2___flge@ff1:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 4 bytes @ 0x0
  2747  000001                     	ds	2
  2748  000003                     ??_TMR0_ReadTimer:
  2749  000003                     
  2750                           ; 1 bytes @ 0x2
  2751  000003                     	ds	2
  2752  000005                     TMR0_ReadTimer@readVal:
  2753                           	opt callstack 0
  2754  000005                     i2___flge@ff2:
  2755                           	opt callstack 0
  2756                           
  2757                           ; 4 bytes @ 0x4
  2758  000005                     	ds	2
  2759  000007                     TMR0_ReadTimer@readValLow:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 1 bytes @ 0x6
  2763  000007                     	ds	1
  2764  000008                     TMR0_ReadTimer@readValHigh:
  2765                           	opt callstack 0
  2766                           
  2767                           ; 1 bytes @ 0x7
  2768  000008                     	ds	1
  2769  000009                     ??i2___flge:
  2770                           
  2771                           ; 1 bytes @ 0x8
  2772  000009                     	ds	4
  2773  00000D                     ??_acende_led:
  2774                           
  2775                           ; 1 bytes @ 0xC
  2776  00000D                     	ds	1
  2777  00000E                     ??_INTERRUPT_InterruptManager:
  2778                           
  2779                           ; 1 bytes @ 0xD
  2780  00000E                     	ds	2
  2781  000010                     ??_TMR1_Initialize:
  2782  000010                     ??_TMR0_Initialize:
  2783  000010                     ??_SPI_Open:
  2784  000010                     ??_msDelay:
  2785  000010                     ?_strlen:
  2786                           	opt callstack 0
  2787  000010                     ?___fpclassifyf:
  2788                           	opt callstack 0
  2789  000010                     ?_isupper:
  2790                           	opt callstack 0
  2791  000010                     ?_isalpha:
  2792                           	opt callstack 0
  2793  000010                     ?_isdigit:
  2794                           	opt callstack 0
  2795  000010                     ?_strncmp:
  2796                           	opt callstack 0
  2797  000010                     ?_isspace:
  2798                           	opt callstack 0
  2799  000010                     ?_islower:
  2800                           	opt callstack 0
  2801  000010                     ?_ADC_GetConversion:
  2802                           	opt callstack 0
  2803  000010                     ?___wmul:
  2804                           	opt callstack 0
  2805  000010                     ?___awdiv:
  2806                           	opt callstack 0
  2807  000010                     ?___awmod:
  2808                           	opt callstack 0
  2809  000010                     ?___fladd:
  2810                           	opt callstack 0
  2811  000010                     ?___fldiv:
  2812                           	opt callstack 0
  2813  000010                     ?___aldiv:
  2814                           	opt callstack 0
  2815  000010                     ?___flneg:
  2816                           	opt callstack 0
  2817  000010                     ?___fltol:
  2818                           	opt callstack 0
  2819  000010                     ?___xxtofl:
  2820                           	opt callstack 0
  2821  000010                     ?___aodiv:
  2822                           	opt callstack 0
  2823  000010                     ?___aomod:
  2824                           	opt callstack 0
  2825  000010                     ?___lodiv:
  2826                           	opt callstack 0
  2827  000010                     ?___lomod:
  2828                           	opt callstack 0
  2829  000010                     SPI_ExchangeByte@data:
  2830                           	opt callstack 0
  2831  000010                     IOCB4_SetInterruptHandler@InterruptHandler:
  2832                           	opt callstack 0
  2833  000010                     ADC_SetInterruptHandler@InterruptHandler:
  2834                           	opt callstack 0
  2835  000010                     INT0_SetInterruptHandler@InterruptHandler:
  2836                           	opt callstack 0
  2837  000010                     TMR2_SetInterruptHandler@InterruptHandler:
  2838                           	opt callstack 0
  2839  000010                     ___wmul@multiplier:
  2840                           	opt callstack 0
  2841  000010                     ___awdiv@dividend:
  2842                           	opt callstack 0
  2843  000010                     ___awmod@dividend:
  2844                           	opt callstack 0
  2845  000010                     isalpha@c:
  2846                           	opt callstack 0
  2847  000010                     isdigit@c:
  2848                           	opt callstack 0
  2849  000010                     isspace@c:
  2850                           	opt callstack 0
  2851  000010                     isupper@c:
  2852                           	opt callstack 0
  2853  000010                     fputc@c:
  2854                           	opt callstack 0
  2855  000010                     strcpy@dest:
  2856                           	opt callstack 0
  2857  000010                     strlen@s:
  2858                           	opt callstack 0
  2859  000010                     strncmp@_l:
  2860                           	opt callstack 0
  2861  000010                     islower@c:
  2862                           	opt callstack 0
  2863  000010                     ___aldiv@dividend:
  2864                           	opt callstack 0
  2865  000010                     ___fleq@ff1:
  2866                           	opt callstack 0
  2867  000010                     ___flneg@f1:
  2868                           	opt callstack 0
  2869  000010                     ___fltol@f1:
  2870                           	opt callstack 0
  2871  000010                     ___fladd@b:
  2872                           	opt callstack 0
  2873  000010                     ___fldiv@b:
  2874                           	opt callstack 0
  2875  000010                     ___xxtofl@val:
  2876                           	opt callstack 0
  2877  000010                     ___fpclassifyf@x:
  2878                           	opt callstack 0
  2879  000010                     ___aodiv@dividend:
  2880                           	opt callstack 0
  2881  000010                     ___aomod@dividend:
  2882                           	opt callstack 0
  2883  000010                     ___lodiv@dividend:
  2884                           	opt callstack 0
  2885  000010                     ___lomod@dividend:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 8 bytes @ 0xF
  2889  000010                     	ds	1
  2890  000011                     SPI_Open@spiUniqueConfiguration:
  2891                           	opt callstack 0
  2892  000011                     msDelay@ms:
  2893                           	opt callstack 0
  2894  000011                     lcd_send@value:
  2895                           	opt callstack 0
  2896                           
  2897                           ; 1 bytes @ 0x10
  2898  000011                     	ds	1
  2899  000012                     ??_isupper:
  2900  000012                     ??_isalpha:
  2901  000012                     ??_isdigit:
  2902  000012                     ??_isspace:
  2903  000012                     ??_islower:
  2904  000012                     ??_ADC_GetConversion:
  2905  000012                     msDelay@k:
  2906                           	opt callstack 0
  2907  000012                     lcd_send@dc:
  2908                           	opt callstack 0
  2909  000012                     ___wmul@multiplicand:
  2910                           	opt callstack 0
  2911  000012                     ___awdiv@divisor:
  2912                           	opt callstack 0
  2913  000012                     ___awmod@divisor:
  2914                           	opt callstack 0
  2915  000012                     fputc@fp:
  2916                           	opt callstack 0
  2917  000012                     strcpy@src:
  2918                           	opt callstack 0
  2919  000012                     strlen@a:
  2920                           	opt callstack 0
  2921  000012                     strncmp@_r:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 2 bytes @ 0x11
  2925  000012                     	ds	1
  2926  000013                     lcd_set_cursor_x@x:
  2927                           	opt callstack 0
  2928  000013                     lcd_set_cursor_y@y:
  2929                           	opt callstack 0
  2930  000013                     lcd_draw_pixel@color:
  2931                           	opt callstack 0
  2932                           
  2933                           ; 2 bytes @ 0x12
  2934  000013                     	ds	1
  2935  000014                     ??_fputc:
  2936  000014                     ??___fpclassifyf:
  2937  000014                     ??_strcpy:
  2938  000014                     ??___fltol:
  2939  000014                     ??___xxtofl:
  2940  000014                     ADC_GetConversion@channel:
  2941                           	opt callstack 0
  2942  000014                     ___awdiv@counter:
  2943                           	opt callstack 0
  2944  000014                     ___awmod@counter:
  2945                           	opt callstack 0
  2946  000014                     ___wmul@product:
  2947                           	opt callstack 0
  2948  000014                     strncmp@n:
  2949                           	opt callstack 0
  2950  000014                     ___aldiv@divisor:
  2951                           	opt callstack 0
  2952  000014                     ___fleq@ff2:
  2953                           	opt callstack 0
  2954  000014                     ___fladd@a:
  2955                           	opt callstack 0
  2956  000014                     ___fldiv@a:
  2957                           	opt callstack 0
  2958                           
  2959                           ; 4 bytes @ 0x13
  2960  000014                     	ds	1
  2961  000015                     ___awdiv@sign:
  2962                           	opt callstack 0
  2963  000015                     ___awmod@sign:
  2964                           	opt callstack 0
  2965  000015                     lcd_set_cursor@x:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 2 bytes @ 0x14
  2969  000015                     	ds	1
  2970  000016                     ??_strncmp:
  2971  000016                     ?_tolower:
  2972                           	opt callstack 0
  2973  000016                     ?_toupper:
  2974                           	opt callstack 0
  2975  000016                     _isspace$2405:
  2976                           	opt callstack 0
  2977  000016                     ___awdiv@quotient:
  2978                           	opt callstack 0
  2979  000016                     strcpy@s:
  2980                           	opt callstack 0
  2981  000016                     tolower@c:
  2982                           	opt callstack 0
  2983  000016                     toupper@c:
  2984                           	opt callstack 0
  2985                           
  2986                           ; 2 bytes @ 0x15
  2987  000016                     	ds	1
  2988  000017                     ?_atoi:
  2989                           	opt callstack 0
  2990  000017                     lcd_set_cursor@y:
  2991                           	opt callstack 0
  2992  000017                     atoi@s:
  2993                           	opt callstack 0
  2994  000017                     strncmp@l:
  2995                           	opt callstack 0
  2996                           
  2997                           ; 2 bytes @ 0x16
  2998  000017                     	ds	1
  2999  000018                     ??_tolower:
  3000  000018                     ??_toupper:
  3001  000018                     ??___fladd:
  3002  000018                     ??___fldiv:
  3003  000018                     ??___fleq:
  3004  000018                     ___aldiv@counter:
  3005                           	opt callstack 0
  3006  000018                     ___fltol@sign1:
  3007                           	opt callstack 0
  3008  000018                     ___xxtofl@sign:
  3009                           	opt callstack 0
  3010  000018                     ___fpclassifyf@e:
  3011                           	opt callstack 0
  3012  000018                     strcpy@d:
  3013                           	opt callstack 0
  3014  000018                     ___aodiv@divisor:
  3015                           	opt callstack 0
  3016  000018                     ___aomod@divisor:
  3017                           	opt callstack 0
  3018  000018                     ___lodiv@divisor:
  3019                           	opt callstack 0
  3020  000018                     ___lomod@divisor:
  3021                           	opt callstack 0
  3022                           
  3023                           ; 8 bytes @ 0x17
  3024  000018                     	ds	1
  3025  000019                     ??_atoi:
  3026  000019                     ?_stoa:
  3027                           	opt callstack 0
  3028  000019                     ___aldiv@sign:
  3029                           	opt callstack 0
  3030  000019                     ___fltol@exp1:
  3031                           	opt callstack 0
  3032  000019                     ___xxtofl@exp:
  3033                           	opt callstack 0
  3034  000019                     lcd_fill@bg_color:
  3035                           	opt callstack 0
  3036  000019                     lcd_draw_pixel_at@x:
  3037                           	opt callstack 0
  3038  000019                     lcd_draw_char@x:
  3039                           	opt callstack 0
  3040  000019                     stoa@fp:
  3041                           	opt callstack 0
  3042  000019                     fputs@s:
  3043                           	opt callstack 0
  3044  000019                     strncmp@r:
  3045                           	opt callstack 0
  3046                           
  3047                           ; 2 bytes @ 0x18
  3048  000019                     	ds	1
  3049  00001A                     ___aldiv@quotient:
  3050                           	opt callstack 0
  3051  00001A                     ___xxtofl@arg:
  3052                           	opt callstack 0
  3053  00001A                     ___fpclassifyf@u:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 4 bytes @ 0x19
  3057  00001A                     	ds	1
  3058  00001B                     lcd_fill@height:
  3059                           	opt callstack 0
  3060  00001B                     lcd_draw_pixel_at@y:
  3061                           	opt callstack 0
  3062  00001B                     lcd_draw_char@y:
  3063                           	opt callstack 0
  3064  00001B                     stoa@s:
  3065                           	opt callstack 0
  3066  00001B                     fputs@fp:
  3067                           	opt callstack 0
  3068                           
  3069                           ; 2 bytes @ 0x1A
  3070  00001B                     	ds	1
  3071  00001C                     ___fladd@signs:
  3072                           	opt callstack 0
  3073  00001C                     _tolower$2488:
  3074                           	opt callstack 0
  3075  00001C                     _toupper$2503:
  3076                           	opt callstack 0
  3077  00001C                     ___fldiv@rem:
  3078                           	opt callstack 0
  3079                           
  3080                           ; 4 bytes @ 0x1B
  3081  00001C                     	ds	1
  3082  00001D                     ??_stoa:
  3083  00001D                     ___fladd@aexp:
  3084                           	opt callstack 0
  3085  00001D                     fputs@c:
  3086                           	opt callstack 0
  3087  00001D                     lcd_fill@width:
  3088                           	opt callstack 0
  3089  00001D                     lcd_draw_pixel_at@color:
  3090                           	opt callstack 0
  3091  00001D                     lcd_draw_char@fIndex:
  3092                           	opt callstack 0
  3093  00001D                     atoi@neg:
  3094                           	opt callstack 0
  3095                           
  3096                           ; 2 bytes @ 0x1C
  3097  00001D                     	ds	1
  3098  00001E                     ?___flmul:
  3099                           	opt callstack 0
  3100  00001E                     ___fladd@bexp:
  3101                           	opt callstack 0
  3102  00001E                     fputs@i:
  3103                           	opt callstack 0
  3104  00001E                     ___flmul@b:
  3105                           	opt callstack 0
  3106  00001E                     stoa@nuls:
  3107                           	opt callstack 0
  3108                           
  3109                           ; 7 bytes @ 0x1D
  3110  00001E                     	ds	1
  3111  00001F                     ___fladd@grs:
  3112                           	opt callstack 0
  3113  00001F                     lcd_draw_line@x0:
  3114                           	opt callstack 0
  3115  00001F                     lcd_draw_char@fg_color:
  3116                           	opt callstack 0
  3117  00001F                     _atoi$2365:
  3118                           	opt callstack 0
  3119                           
  3120                           ; 2 bytes @ 0x1E
  3121  00001F                     	ds	1
  3122  000020                     ?_pad:
  3123                           	opt callstack 0
  3124  000020                     ___aodiv@counter:
  3125                           	opt callstack 0
  3126  000020                     ___aomod@counter:
  3127                           	opt callstack 0
  3128  000020                     ___lomod@counter:
  3129                           	opt callstack 0
  3130  000020                     ___fldiv@sign:
  3131                           	opt callstack 0
  3132  000020                     pad@fp:
  3133                           	opt callstack 0
  3134  000020                     ___lodiv@quotient:
  3135                           	opt callstack 0
  3136                           
  3137                           ; 8 bytes @ 0x1F
  3138  000020                     	ds	1
  3139  000021                     ___aodiv@sign:
  3140                           	opt callstack 0
  3141  000021                     ___aomod@sign:
  3142                           	opt callstack 0
  3143  000021                     lcd_draw_line@y0:
  3144                           	opt callstack 0
  3145  000021                     lcd_draw_char@bg_color:
  3146                           	opt callstack 0
  3147  000021                     ___fldiv@new_exp:
  3148                           	opt callstack 0
  3149  000021                     _atoi$2367:
  3150                           	opt callstack 0
  3151                           
  3152                           ; 2 bytes @ 0x20
  3153  000021                     	ds	1
  3154  000022                     ?_abs:
  3155                           	opt callstack 0
  3156  000022                     pad@buf:
  3157                           	opt callstack 0
  3158  000022                     abs@a:
  3159                           	opt callstack 0
  3160  000022                     ___flmul@a:
  3161                           	opt callstack 0
  3162  000022                     ___aodiv@quotient:
  3163                           	opt callstack 0
  3164                           
  3165                           ; 8 bytes @ 0x21
  3166  000022                     	ds	1
  3167  000023                     ??_lcd_draw_char:
  3168  000023                     _atoi$2366:
  3169                           	opt callstack 0
  3170  000023                     lcd_draw_line@x1:
  3171                           	opt callstack 0
  3172  000023                     ___fldiv@grs:
  3173                           	opt callstack 0
  3174                           
  3175                           ; 4 bytes @ 0x22
  3176  000023                     	ds	1
  3177  000024                     ??_abs:
  3178  000024                     pad@p:
  3179                           	opt callstack 0
  3180  000024                     atoi@n:
  3181                           	opt callstack 0
  3182                           
  3183                           ; 2 bytes @ 0x23
  3184  000024                     	ds	1
  3185  000025                     lcd_draw_line@y1:
  3186                           	opt callstack 0
  3187  000025                     stoa@i:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 2 bytes @ 0x24
  3191  000025                     	ds	1
  3192  000026                     ??___flmul:
  3193  000026                     ??_pad:
  3194                           
  3195                           ; 1 bytes @ 0x25
  3196  000026                     	ds	1
  3197  000027                     ___fldiv@bexp:
  3198                           	opt callstack 0
  3199  000027                     lcd_draw_line@color:
  3200                           	opt callstack 0
  3201  000027                     pad@i:
  3202                           	opt callstack 0
  3203  000027                     stoa@w:
  3204                           	opt callstack 0
  3205                           
  3206                           ; 2 bytes @ 0x26
  3207  000027                     	ds	1
  3208  000028                     ___lodiv@counter:
  3209                           	opt callstack 0
  3210  000028                     ___fldiv@aexp:
  3211                           	opt callstack 0
  3212                           
  3213                           ; 1 bytes @ 0x27
  3214  000028                     	ds	1
  3215  000029                     ??_lcd_draw_line:
  3216  000029                     ?_floorf:
  3217                           	opt callstack 0
  3218  000029                     pad@w:
  3219                           	opt callstack 0
  3220  000029                     stoa@cp:
  3221                           	opt callstack 0
  3222  000029                     floorf@x:
  3223                           	opt callstack 0
  3224                           
  3225                           ; 4 bytes @ 0x28
  3226  000029                     	ds	1
  3227  00002A                     ___flmul@sign:
  3228                           	opt callstack 0
  3229  00002A                     lcd_draw_line@sx:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x29
  3233  00002A                     	ds	1
  3234  00002B                     ?_ctoa:
  3235                           	opt callstack 0
  3236  00002B                     ?_dtoa:
  3237                           	opt callstack 0
  3238  00002B                     ?_otoa:
  3239                           	opt callstack 0
  3240  00002B                     ?_utoa:
  3241                           	opt callstack 0
  3242  00002B                     ?_xtoa:
  3243                           	opt callstack 0
  3244  00002B                     ___flmul@aexp:
  3245                           	opt callstack 0
  3246  00002B                     ctoa@fp:
  3247                           	opt callstack 0
  3248  00002B                     dtoa@fp:
  3249                           	opt callstack 0
  3250  00002B                     otoa@fp:
  3251                           	opt callstack 0
  3252  00002B                     stoa@p:
  3253                           	opt callstack 0
  3254  00002B                     utoa@fp:
  3255                           	opt callstack 0
  3256  00002B                     xtoa@fp:
  3257                           	opt callstack 0
  3258                           
  3259                           ; 2 bytes @ 0x2A
  3260  00002B                     	ds	1
  3261  00002C                     lcd_draw_char@j:
  3262                           	opt callstack 0
  3263  00002C                     lcd_draw_line@sy:
  3264                           	opt callstack 0
  3265  00002C                     ___flmul@grs:
  3266                           	opt callstack 0
  3267                           
  3268                           ; 4 bytes @ 0x2B
  3269  00002C                     	ds	1
  3270  00002D                     ??_floorf:
  3271  00002D                     lcd_draw_char@k:
  3272                           	opt callstack 0
  3273  00002D                     ctoa@c:
  3274                           	opt callstack 0
  3275  00002D                     stoa@l:
  3276                           	opt callstack 0
  3277  00002D                     dtoa@d:
  3278                           	opt callstack 0
  3279  00002D                     otoa@d:
  3280                           	opt callstack 0
  3281  00002D                     utoa@d:
  3282                           	opt callstack 0
  3283  00002D                     xtoa@d:
  3284                           	opt callstack 0
  3285                           
  3286                           ; 8 bytes @ 0x2C
  3287  00002D                     	ds	1
  3288  00002E                     lcd_draw_char@i:
  3289                           	opt callstack 0
  3290  00002E                     lcd_draw_line@err:
  3291                           	opt callstack 0
  3292  00002E                     ctoa@w:
  3293                           	opt callstack 0
  3294                           
  3295                           ; 2 bytes @ 0x2D
  3296  00002E                     	ds	1
  3297  00002F                     lcd_draw_string@x:
  3298                           	opt callstack 0
  3299                           
  3300                           ; 2 bytes @ 0x2E
  3301  00002F                     	ds	1
  3302  000030                     ___flmul@bexp:
  3303                           	opt callstack 0
  3304  000030                     lcd_draw_line@e2:
  3305                           	opt callstack 0
  3306                           
  3307                           ; 2 bytes @ 0x2F
  3308  000030                     	ds	1
  3309  000031                     lcd_draw_string@y:
  3310                           	opt callstack 0
  3311  000031                     ___flmul@prod:
  3312                           	opt callstack 0
  3313                           
  3314                           ; 4 bytes @ 0x30
  3315  000031                     	ds	1
  3316  000032                     lcd_draw_line@dx:
  3317                           	opt callstack 0
  3318                           
  3319                           ; 2 bytes @ 0x31
  3320  000032                     	ds	1
  3321  000033                     lcd_draw_string@pS:
  3322                           	opt callstack 0
  3323  000033                     floorf@m:
  3324                           	opt callstack 0
  3325                           
  3326                           ; 4 bytes @ 0x32
  3327  000033                     	ds	1
  3328  000034                     lcd_draw_line@dy:
  3329                           	opt callstack 0
  3330                           
  3331                           ; 2 bytes @ 0x33
  3332  000034                     	ds	1
  3333  000035                     ??_dtoa:
  3334  000035                     ??_otoa:
  3335  000035                     ??_utoa:
  3336  000035                     xtoa@x:
  3337                           	opt callstack 0
  3338  000035                     lcd_draw_string@fg_color:
  3339                           	opt callstack 0
  3340  000035                     ___flmul@temp:
  3341                           	opt callstack 0
  3342                           
  3343                           ; 2 bytes @ 0x34
  3344  000035                     	ds	1
  3345  000036                     ??_xtoa:
  3346                           
  3347                           ; 1 bytes @ 0x35
  3348  000036                     	ds	1
  3349  000037                     ?___flsub:
  3350                           	opt callstack 0
  3351  000037                     lcd_draw_string@bg_color:
  3352                           	opt callstack 0
  3353  000037                     floorf@e:
  3354                           	opt callstack 0
  3355  000037                     ___flge@ff1:
  3356                           	opt callstack 0
  3357  000037                     ___flsub@b:
  3358                           	opt callstack 0
  3359                           
  3360                           ; 4 bytes @ 0x36
  3361  000037                     	ds	2
  3362  000039                     ??_lcd_draw_string:
  3363  000039                     floorf@u:
  3364                           	opt callstack 0
  3365                           
  3366                           ; 4 bytes @ 0x38
  3367  000039                     	ds	2
  3368  00003B                     ___flge@ff2:
  3369                           	opt callstack 0
  3370  00003B                     ___flsub@a:
  3371                           	opt callstack 0
  3372                           
  3373                           ; 4 bytes @ 0x3A
  3374  00003B                     	ds	4
  3375  00003F                     
  3376                           ; 1 bytes @ 0x3E
  3377 ;;
  3378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3379 ;;
  3380 ;; *************** function _main *****************
  3381 ;; Defined at:
  3382 ;;		line 55 in file "main.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels required when called:   14
  3402 ;; This function calls:
  3403 ;;		_ADC_GetConversion
  3404 ;;		_INT0_SetInterruptHandler
  3405 ;;		_IOCB4_SetInterruptHandler
  3406 ;;		_SPI_Open
  3407 ;;		_SYSTEM_Initialize
  3408 ;;		_TMR2_SetInterruptHandler
  3409 ;;		___aldiv
  3410 ;;		___flge
  3411 ;;		___flmul
  3412 ;;		___xxtofl
  3413 ;;		_lcd_draw_line
  3414 ;;		_lcd_draw_string
  3415 ;;		_lcd_init
  3416 ;;		_snprintf
  3417 ;; This function is called by:
  3418 ;;		Startup code after reset
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text0
  3423  003726                     __ptext0:
  3424                           	opt callstack 0
  3425  003726                     _main:
  3426                           	opt callstack 17
  3427  003726                     
  3428                           ;main.c: 58:     SYSTEM_Initialize();
  3429  003726  ECE6  F030         	call	_SYSTEM_Initialize	;wreg free
  3430                           
  3431                           ;main.c: 64:     IOCB4_SetInterruptHandler(acende_led);
  3432  00372A  0E82               	movlw	low _acende_led
  3433  00372C  6E10               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
  3434  00372E  0E59               	movlw	high _acende_led
  3435  003730  6E11               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
  3436  003732  EC91  F031         	call	_IOCB4_SetInterruptHandler	;wreg free
  3437                           
  3438                           ;main.c: 65:     INT0_SetInterruptHandler(pulso_encoder);
  3439  003736  0E16               	movlw	low _pulso_encoder
  3440  003738  6E10               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3441  00373A  0E62               	movlw	high _pulso_encoder
  3442  00373C  6E11               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3443  00373E  EC96  F031         	call	_INT0_SetInterruptHandler	;wreg free
  3444                           
  3445                           ;main.c: 66:     TMR2_SetInterruptHandler(led_inter);
  3446  003742  0E0C               	movlw	low _led_inter
  3447  003744  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  3448  003746  0E63               	movlw	high _led_inter
  3449  003748  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  3450  00374A  EC8C  F031         	call	_TMR2_SetInterruptHandler	;wreg free
  3451  00374E                     
  3452                           ;main.c: 67:     SPI_Open(SPI_DEFAULT);
  3453  00374E  0E00               	movlw	0
  3454  003750  ECD3  F02B         	call	_SPI_Open
  3455  003754                     
  3456                           ;main.c: 69:     lcd_init ();
  3457  003754  ECEF  F016         	call	_lcd_init	;wreg free
  3458  003758                     
  3459                           ;main.c: 71:     lcd_draw_line(40,150,280,150,0xFFE0);
  3460  003758  0E00               	movlw	0
  3461  00375A  6E20               	movwf	(lcd_draw_line@x0+1)^0,c
  3462  00375C  0E28               	movlw	40
  3463  00375E  6E1F               	movwf	lcd_draw_line@x0^0,c
  3464  003760  0E00               	movlw	0
  3465  003762  6E22               	movwf	(lcd_draw_line@y0+1)^0,c
  3466  003764  0E96               	movlw	150
  3467  003766  6E21               	movwf	lcd_draw_line@y0^0,c
  3468  003768  0E01               	movlw	1
  3469  00376A  6E24               	movwf	(lcd_draw_line@x1+1)^0,c
  3470  00376C  0E18               	movlw	24
  3471  00376E  6E23               	movwf	lcd_draw_line@x1^0,c
  3472  003770  0E00               	movlw	0
  3473  003772  6E26               	movwf	(lcd_draw_line@y1+1)^0,c
  3474  003774  0E96               	movlw	150
  3475  003776  6E25               	movwf	lcd_draw_line@y1^0,c
  3476  003778  0EFF               	movlw	255
  3477  00377A  6E28               	movwf	(lcd_draw_line@color+1)^0,c
  3478  00377C  0EE0               	movlw	224
  3479  00377E  6E27               	movwf	lcd_draw_line@color^0,c
  3480  003780  ECB8  F023         	call	_lcd_draw_line	;wreg free
  3481  003784                     
  3482                           ;main.c: 73:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  3483  003784  0E00               	movlw	0
  3484  003786  6E30               	movwf	(lcd_draw_string@x+1)^0,c
  3485  003788  0E2D               	movlw	45
  3486  00378A  6E2F               	movwf	lcd_draw_string@x^0,c
  3487  00378C  0E00               	movlw	0
  3488  00378E  6E32               	movwf	(lcd_draw_string@y+1)^0,c
  3489  003790  0E9B               	movlw	155
  3490  003792  6E31               	movwf	lcd_draw_string@y^0,c
  3491  003794  0E63               	movlw	low STR_1
  3492  003796  6E33               	movwf	lcd_draw_string@pS^0,c
  3493  003798  0EFF               	movlw	high STR_1
  3494  00379A  6E34               	movwf	(lcd_draw_string@pS+1)^0,c
  3495  00379C  0E00               	movlw	0
  3496  00379E  6E36               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3497  0037A0  0E1F               	movlw	31
  3498  0037A2  6E35               	movwf	lcd_draw_string@fg_color^0,c
  3499  0037A4  0E00               	movlw	0
  3500  0037A6  6E38               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3501  0037A8  0E00               	movlw	0
  3502  0037AA  6E37               	movwf	lcd_draw_string@bg_color^0,c
  3503  0037AC  EC1E  F025         	call	_lcd_draw_string	;wreg free
  3504  0037B0                     
  3505                           ;main.c: 75:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  3506  0037B0  0E00               	movlw	0
  3507  0037B2  6E30               	movwf	(lcd_draw_string@x+1)^0,c
  3508  0037B4  0E78               	movlw	120
  3509  0037B6  6E2F               	movwf	lcd_draw_string@x^0,c
  3510  0037B8  0E00               	movlw	0
  3511  0037BA  6E32               	movwf	(lcd_draw_string@y+1)^0,c
  3512  0037BC  0E78               	movlw	120
  3513  0037BE  6E31               	movwf	lcd_draw_string@y^0,c
  3514  0037C0  0EA6               	movlw	low STR_2
  3515  0037C2  6E33               	movwf	lcd_draw_string@pS^0,c
  3516  0037C4  0EFF               	movlw	high STR_2
  3517  0037C6  6E34               	movwf	(lcd_draw_string@pS+1)^0,c
  3518  0037C8  0E04               	movlw	4
  3519  0037CA  6E36               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3520  0037CC  0E00               	movlw	0
  3521  0037CE  6E35               	movwf	lcd_draw_string@fg_color^0,c
  3522  0037D0  0E00               	movlw	0
  3523  0037D2  6E38               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3524  0037D4  0E00               	movlw	0
  3525  0037D6  6E37               	movwf	lcd_draw_string@bg_color^0,c
  3526  0037D8  EC1E  F025         	call	_lcd_draw_string	;wreg free
  3527  0037DC                     
  3528                           ;main.c: 79:     (INTCONbits.GIE = 1);
  3529  0037DC  8EF2               	bsf	242,7,c	;volatile
  3530  0037DE                     l9980:
  3531                           
  3532                           ;main.c: 92:     {;main.c: 93:         codigo_digital = ADC_GetConversion(POT);
  3533  0037DE  0E00               	movlw	0
  3534  0037E0  EC47  F02F         	call	_ADC_GetConversion
  3535  0037E4  C010  F0F6         	movff	?_ADC_GetConversion,_codigo_digital
  3536  0037E8  C011  F0F7         	movff	?_ADC_GetConversion+1,_codigo_digital+1
  3537  0037EC                     
  3538                           ;main.c: 94:         percentagem = codigo_digital*0.0244200244200244;
  3539  0037EC  C0F6  F010         	movff	_codigo_digital,___xxtofl@val
  3540  0037F0  C0F7  F011         	movff	_codigo_digital+1,___xxtofl@val+1
  3541  0037F4  6A12               	clrf	(___xxtofl@val+2)^0,c
  3542  0037F6  6A13               	clrf	(___xxtofl@val+3)^0,c
  3543  0037F8  0E00               	movlw	0
  3544  0037FA  ECCF  F01F         	call	___xxtofl
  3545  0037FE  C010  F01E         	movff	?___xxtofl,___flmul@b
  3546  003802  C011  F01F         	movff	?___xxtofl+1,___flmul@b+1
  3547  003806  C012  F020         	movff	?___xxtofl+2,___flmul@b+2
  3548  00380A  C013  F021         	movff	?___xxtofl+3,___flmul@b+3
  3549  00380E  0E81               	movlw	129
  3550  003810  6E22               	movwf	___flmul@a^0,c
  3551  003812  0E0C               	movlw	12
  3552  003814  6E23               	movwf	(___flmul@a+1)^0,c
  3553  003816  0EC8               	movlw	200
  3554  003818  6E24               	movwf	(___flmul@a+2)^0,c
  3555  00381A  0E3C               	movlw	60
  3556  00381C  6E25               	movwf	(___flmul@a+3)^0,c
  3557  00381E  EC0D  F013         	call	___flmul	;wreg free
  3558  003822  C01E  F03F         	movff	?___flmul,_percentagem
  3559  003826  C01F  F040         	movff	?___flmul+1,_percentagem+1
  3560  00382A  C020  F041         	movff	?___flmul+2,_percentagem+2
  3561  00382E  C021  F042         	movff	?___flmul+3,_percentagem+3
  3562  003832                     
  3563                           ;main.c: 95:         rpm=4687500/ticks;
  3564  003832  0E8C               	movlw	140
  3565  003834  6E10               	movwf	___aldiv@dividend^0,c
  3566  003836  0E86               	movlw	134
  3567  003838  6E11               	movwf	(___aldiv@dividend+1)^0,c
  3568  00383A  0E47               	movlw	71
  3569  00383C  6E12               	movwf	(___aldiv@dividend+2)^0,c
  3570  00383E  0E00               	movlw	0
  3571  003840  6E13               	movwf	(___aldiv@dividend+3)^0,c
  3572  003842  C0F8  F014         	movff	_ticks,___aldiv@divisor
  3573  003846  C0F9  F015         	movff	_ticks+1,___aldiv@divisor+1
  3574  00384A  6A16               	clrf	(___aldiv@divisor+2)^0,c
  3575  00384C  6A17               	clrf	(___aldiv@divisor+3)^0,c
  3576  00384E  ECE6  F026         	call	___aldiv	;wreg free
  3577  003852  C010  F0F4         	movff	?___aldiv,_rpm
  3578  003856  C011  F0F5         	movff	?___aldiv+1,_rpm+1
  3579  00385A                     
  3580                           ;main.c: 97:         if(percentagem >= 80){
  3581  00385A  C03F  F037         	movff	_percentagem,___flge@ff1
  3582  00385E  C040  F038         	movff	_percentagem+1,___flge@ff1+1
  3583  003862  C041  F039         	movff	_percentagem+2,___flge@ff1+2
  3584  003866  C042  F03A         	movff	_percentagem+3,___flge@ff1+3
  3585  00386A  0E00               	movlw	0
  3586  00386C  6E3B               	movwf	___flge@ff2^0,c
  3587  00386E  0E00               	movlw	0
  3588  003870  6E3C               	movwf	(___flge@ff2+1)^0,c
  3589  003872  0EA0               	movlw	160
  3590  003874  6E3D               	movwf	(___flge@ff2+2)^0,c
  3591  003876  0E42               	movlw	66
  3592  003878  6E3E               	movwf	(___flge@ff2+3)^0,c
  3593  00387A  ECEF  F027         	call	___flge	;wreg free
  3594  00387E  A0D8               	btfss	status,0,c
  3595  003880  EF44  F01C         	goto	u12811
  3596  003884  EF46  F01C         	goto	u12810
  3597  003888                     u12811:
  3598  003888  EF47  F01C         	goto	l9988
  3599  00388C                     u12810:
  3600  00388C  8C89               	bsf	137,6,c	;volatile
  3601  00388E                     l9988:
  3602                           
  3603                           ;main.c: 101:         snprintf(string_rpm,sizeof(string_rpm),"RPM= %d      ",rpm);
  3604  00388E  0E64               	movlw	low _string_rpm
  3605  003890  0101               	movlb	1	; () banked
  3606  003892  6FC6               	movwf	snprintf@s& (0+255),b
  3607  003894  0E02               	movlw	high _string_rpm
  3608  003896  6FC7               	movwf	(snprintf@s+1)& (0+255),b
  3609  003898  0E00               	movlw	0
  3610  00389A  6FC9               	movwf	(snprintf@n+1)& (0+255),b
  3611  00389C  0E64               	movlw	100
  3612  00389E  6FC8               	movwf	snprintf@n& (0+255),b
  3613  0038A0  0E98               	movlw	low STR_3
  3614  0038A2  6FCA               	movwf	snprintf@fmt& (0+255),b
  3615  0038A4  0EFF               	movlw	high STR_3
  3616  0038A6  6FCB               	movwf	(snprintf@fmt+1)& (0+255),b
  3617  0038A8  C0F4  F1CC         	movff	_rpm,?_snprintf+6
  3618  0038AC  C0F5  F1CD         	movff	_rpm+1,?_snprintf+7
  3619  0038B0  EC08  F030         	call	_snprintf	;wreg free
  3620  0038B4                     
  3621                           ;main.c: 102:         lcd_draw_string (40,10,string_rpm,0x0400,0x0000);
  3622  0038B4  0E00               	movlw	0
  3623  0038B6  6E30               	movwf	(lcd_draw_string@x+1)^0,c
  3624  0038B8  0E28               	movlw	40
  3625  0038BA  6E2F               	movwf	lcd_draw_string@x^0,c
  3626  0038BC  0E00               	movlw	0
  3627  0038BE  6E32               	movwf	(lcd_draw_string@y+1)^0,c
  3628  0038C0  0E0A               	movlw	10
  3629  0038C2  6E31               	movwf	lcd_draw_string@y^0,c
  3630  0038C4  0E64               	movlw	low _string_rpm
  3631  0038C6  6E33               	movwf	lcd_draw_string@pS^0,c
  3632  0038C8  0E02               	movlw	high _string_rpm
  3633  0038CA  6E34               	movwf	(lcd_draw_string@pS+1)^0,c
  3634  0038CC  0E04               	movlw	4
  3635  0038CE  6E36               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3636  0038D0  0E00               	movlw	0
  3637  0038D2  6E35               	movwf	lcd_draw_string@fg_color^0,c
  3638  0038D4  0E00               	movlw	0
  3639  0038D6  6E38               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3640  0038D8  0E00               	movlw	0
  3641  0038DA  6E37               	movwf	lcd_draw_string@bg_color^0,c
  3642  0038DC  EC1E  F025         	call	_lcd_draw_string	;wreg free
  3643  0038E0                     
  3644                           ;main.c: 104:         snprintf(string,sizeof(string),"percentagem = %.f  ",percentagem);
  3645  0038E0  0E08               	movlw	low _string
  3646  0038E2  0101               	movlb	1	; () banked
  3647  0038E4  6FC6               	movwf	snprintf@s& (0+255),b
  3648  0038E6  0E01               	movlw	high _string
  3649  0038E8  6FC7               	movwf	(snprintf@s+1)& (0+255),b
  3650  0038EA  0E00               	movlw	0
  3651  0038EC  6FC9               	movwf	(snprintf@n+1)& (0+255),b
  3652  0038EE  0E64               	movlw	100
  3653  0038F0  6FC8               	movwf	snprintf@n& (0+255),b
  3654  0038F2  0E84               	movlw	low STR_4
  3655  0038F4  6FCA               	movwf	snprintf@fmt& (0+255),b
  3656  0038F6  0EFF               	movlw	high STR_4
  3657  0038F8  6FCB               	movwf	(snprintf@fmt+1)& (0+255),b
  3658  0038FA  C03F  F1CC         	movff	_percentagem,?_snprintf+6
  3659  0038FE  C040  F1CD         	movff	_percentagem+1,?_snprintf+7
  3660  003902  C041  F1CE         	movff	_percentagem+2,?_snprintf+8
  3661  003906  C042  F1CF         	movff	_percentagem+3,?_snprintf+9
  3662  00390A  EC08  F030         	call	_snprintf	;wreg free
  3663                           
  3664                           ;main.c: 105:         lcd_draw_string (150,10,string,0x0400,0x0000);
  3665  00390E  0E00               	movlw	0
  3666  003910  6E30               	movwf	(lcd_draw_string@x+1)^0,c
  3667  003912  0E96               	movlw	150
  3668  003914  6E2F               	movwf	lcd_draw_string@x^0,c
  3669  003916  0E00               	movlw	0
  3670  003918  6E32               	movwf	(lcd_draw_string@y+1)^0,c
  3671  00391A  0E0A               	movlw	10
  3672  00391C  6E31               	movwf	lcd_draw_string@y^0,c
  3673  00391E  0E08               	movlw	low _string
  3674  003920  6E33               	movwf	lcd_draw_string@pS^0,c
  3675  003922  0E01               	movlw	high _string
  3676  003924  6E34               	movwf	(lcd_draw_string@pS+1)^0,c
  3677  003926  0E04               	movlw	4
  3678  003928  6E36               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3679  00392A  0E00               	movlw	0
  3680  00392C  6E35               	movwf	lcd_draw_string@fg_color^0,c
  3681  00392E  0E00               	movlw	0
  3682  003930  6E38               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3683  003932  0E00               	movlw	0
  3684  003934  6E37               	movwf	lcd_draw_string@bg_color^0,c
  3685  003936  EC1E  F025         	call	_lcd_draw_string	;wreg free
  3686  00393A                     
  3687                           ;main.c: 107:         snprintf(steste,sizeof(steste),"TESTE %d",teste);
  3688  00393A  0E00               	movlw	low _steste
  3689  00393C  0101               	movlb	1	; () banked
  3690  00393E  6FC6               	movwf	snprintf@s& (0+255),b
  3691  003940  0E02               	movlw	high _steste
  3692  003942  6FC7               	movwf	(snprintf@s+1)& (0+255),b
  3693  003944  0E00               	movlw	0
  3694  003946  6FC9               	movwf	(snprintf@n+1)& (0+255),b
  3695  003948  0E64               	movlw	100
  3696  00394A  6FC8               	movwf	snprintf@n& (0+255),b
  3697  00394C  0EB1               	movlw	low STR_5
  3698  00394E  6FCA               	movwf	snprintf@fmt& (0+255),b
  3699  003950  0EFF               	movlw	high STR_5
  3700  003952  6FCB               	movwf	(snprintf@fmt+1)& (0+255),b
  3701  003954  C0F2  F1CC         	movff	_teste,?_snprintf+6
  3702  003958  C0F3  F1CD         	movff	_teste+1,?_snprintf+7
  3703  00395C  EC08  F030         	call	_snprintf	;wreg free
  3704  003960                     
  3705                           ;main.c: 108:         lcd_draw_string (40,50,steste,0x0400,0x0000);
  3706  003960  0E00               	movlw	0
  3707  003962  6E30               	movwf	(lcd_draw_string@x+1)^0,c
  3708  003964  0E28               	movlw	40
  3709  003966  6E2F               	movwf	lcd_draw_string@x^0,c
  3710  003968  0E00               	movlw	0
  3711  00396A  6E32               	movwf	(lcd_draw_string@y+1)^0,c
  3712  00396C  0E32               	movlw	50
  3713  00396E  6E31               	movwf	lcd_draw_string@y^0,c
  3714  003970  0E00               	movlw	low _steste
  3715  003972  6E33               	movwf	lcd_draw_string@pS^0,c
  3716  003974  0E02               	movlw	high _steste
  3717  003976  6E34               	movwf	(lcd_draw_string@pS+1)^0,c
  3718  003978  0E04               	movlw	4
  3719  00397A  6E36               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3720  00397C  0E00               	movlw	0
  3721  00397E  6E35               	movwf	lcd_draw_string@fg_color^0,c
  3722  003980  0E00               	movlw	0
  3723  003982  6E38               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3724  003984  0E00               	movlw	0
  3725  003986  6E37               	movwf	lcd_draw_string@bg_color^0,c
  3726  003988  EC1E  F025         	call	_lcd_draw_string	;wreg free
  3727  00398C  EFEF  F01B         	goto	l9980
  3728  003990  EF5E  F000         	goto	start
  3729  003994                     __end_of_main:
  3730                           	opt callstack 0
  3731                           
  3732 ;; *************** function _snprintf *****************
  3733 ;; Defined at:
  3734 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  s               2   10[BANK1 ] PTR unsigned char 
  3737 ;;		 -> steste(100), string(100), string_rpm(100), 
  3738 ;;  n               2   12[BANK1 ] unsigned int 
  3739 ;;  fmt             2   14[BANK1 ] PTR const unsigned char 
  3740 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  ap              2  140[BANK0 ] PTR void [1]
  3743 ;;		 -> ?_snprintf(2), 
  3744 ;;  ret             2    0        int 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  2   10[BANK1 ] int 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3754 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3757 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3758 ;;Total ram usage:       14 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:   13
  3761 ;; This function calls:
  3762 ;;		_vsnprintf
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text1
  3769  006010                     __ptext1:
  3770                           	opt callstack 0
  3771  006010                     _snprintf:
  3772                           	opt callstack 17
  3773  006010  0ECC               	movlw	low (?_snprintf+6)
  3774  006012  0100               	movlb	0	; () banked
  3775  006014  6FEC               	movwf	snprintf@ap& (0+255),b
  3776  006016  0E01               	movlw	high (?_snprintf+6)
  3777  006018  6FED               	movwf	(snprintf@ap+1)& (0+255),b
  3778  00601A                     
  3779                           ; BSR set to: 0
  3780  00601A  C1C6  F0DE         	movff	snprintf@s,vsnprintf@s
  3781  00601E  C1C7  F0DF         	movff	snprintf@s+1,vsnprintf@s+1
  3782  006022  C1C8  F0E0         	movff	snprintf@n,vsnprintf@n
  3783  006026  C1C9  F0E1         	movff	snprintf@n+1,vsnprintf@n+1
  3784  00602A  C1CA  F0E2         	movff	snprintf@fmt,vsnprintf@fmt
  3785  00602E  C1CB  F0E3         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3786  006032  0EEC               	movlw	low snprintf@ap
  3787  006034  6FE4               	movwf	vsnprintf@ap& (0+255),b
  3788  006036  0E00               	movlw	high snprintf@ap
  3789  006038  6FE5               	movwf	(vsnprintf@ap+1)& (0+255),b
  3790  00603A  ECBA  F025         	call	_vsnprintf	;wreg free
  3791  00603E  0012               	return		;funcret
  3792  006040                     __end_of_snprintf:
  3793                           	opt callstack 0
  3794                           
  3795 ;; *************** function _vsnprintf *****************
  3796 ;; Defined at:
  3797 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  s               2  126[BANK0 ] PTR unsigned char 
  3800 ;;		 -> steste(100), string(100), string_rpm(100), 
  3801 ;;  n               2  128[BANK0 ] unsigned int 
  3802 ;;  fmt             2  130[BANK0 ] PTR const unsigned char 
  3803 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3804 ;;  ap              2  132[BANK0 ] PTR PTR void 
  3805 ;;		 -> snprintf@ap(2), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  f               6    4[BANK1 ] struct _IO_FILE
  3808 ;;  cnt             2    2[BANK1 ] int 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  2  126[BANK0 ] int 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3818 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3819 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Totals:         0      12      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;Total ram usage:       22 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:   12
  3825 ;; This function calls:
  3826 ;;		_vfprintf
  3827 ;; This function is called by:
  3828 ;;		_snprintf
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text2
  3833  004B74                     __ptext2:
  3834                           	opt callstack 0
  3835  004B74                     _vsnprintf:
  3836                           	opt callstack 17
  3837  004B74  0E80               	movlw	128
  3838  004B76  0100               	movlb	0	; () banked
  3839  004B78  5DE1               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3840  004B7A  A0D8               	btfss	status,0,c
  3841  004B7C  EFC2  F025         	goto	u12621
  3842  004B80  EFC4  F025         	goto	u12620
  3843  004B84                     u12621:
  3844  004B84  EFCC  F025         	goto	l9684
  3845  004B88                     u12620:
  3846  004B88                     
  3847                           ; BSR set to: 0
  3848  004B88  0E00               	movlw	0
  3849  004B8A  6FEF               	movwf	(_errno+1)& (0+255),b
  3850  004B8C  0E4B               	movlw	75
  3851  004B8E  6FEE               	movwf	_errno& (0+255),b
  3852  004B90                     
  3853                           ; BSR set to: 0
  3854  004B90  69DE               	setf	?_vsnprintf& (0+255),b
  3855  004B92  69DF               	setf	(?_vsnprintf+1)& (0+255),b
  3856  004B94  EF52  F026         	goto	l1819
  3857  004B98                     l9684:
  3858                           
  3859                           ; BSR set to: 0
  3860  004B98  C0DE  F1C0         	movff	vsnprintf@s,vsnprintf@f
  3861  004B9C  C0DF  F1C1         	movff	vsnprintf@s+1,vsnprintf@f+1
  3862  004BA0  51E1               	movf	(vsnprintf@n+1)& (0+255),w,b
  3863  004BA2  E109               	bnz	u12630
  3864  004BA4  0E02               	movlw	2
  3865  004BA6  5DE0               	subwf	vsnprintf@n& (0+255),w,b
  3866  004BA8  A0D8               	btfss	status,0,c
  3867  004BAA  EFD9  F025         	goto	u12631
  3868  004BAE  EFDB  F025         	goto	u12630
  3869  004BB2                     u12631:
  3870  004BB2  EFEA  F025         	goto	l9690
  3871  004BB6                     u12630:
  3872  004BB6                     
  3873                           ; BSR set to: 0
  3874  004BB6  0EFF               	movlw	255
  3875  004BB8  25E0               	addwf	vsnprintf@n& (0+255),w,b
  3876  004BBA  0101               	movlb	1	; () banked
  3877  004BBC  6FC4               	movwf	(vsnprintf@f+4)& (0+255),b
  3878  004BBE  0EFF               	movlw	255
  3879  004BC0  0100               	movlb	0	; () banked
  3880  004BC2  21E1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3881  004BC4  0101               	movlb	1	; () banked
  3882  004BC6  6FC5               	movwf	(vsnprintf@f+5)& (0+255),b
  3883  004BC8                     
  3884                           ; BSR set to: 1
  3885  004BC8  0E00               	movlw	0
  3886  004BCA  6FC3               	movwf	(vsnprintf@f+3)& (0+255),b
  3887  004BCC  0E00               	movlw	0
  3888  004BCE  6FC2               	movwf	(vsnprintf@f+2)& (0+255),b
  3889  004BD0  EFF3  F025         	goto	l9692
  3890  004BD4                     l9690:
  3891                           
  3892                           ; BSR set to: 0
  3893  004BD4  0E00               	movlw	0
  3894  004BD6  0101               	movlb	1	; () banked
  3895  004BD8  6FC5               	movwf	(vsnprintf@f+5)& (0+255),b
  3896  004BDA  0E01               	movlw	1
  3897  004BDC  6FC4               	movwf	(vsnprintf@f+4)& (0+255),b
  3898  004BDE  0E00               	movlw	0
  3899  004BE0  6FC3               	movwf	(vsnprintf@f+3)& (0+255),b
  3900  004BE2  0E01               	movlw	1
  3901  004BE4  6FC2               	movwf	(vsnprintf@f+2)& (0+255),b
  3902  004BE6                     l9692:
  3903                           
  3904                           ; BSR set to: 1
  3905  004BE6  0EC0               	movlw	low vsnprintf@f
  3906  004BE8  0100               	movlb	0	; () banked
  3907  004BEA  6FD6               	movwf	vfprintf@fp& (0+255),b
  3908  004BEC  0E01               	movlw	high vsnprintf@f
  3909  004BEE  6FD7               	movwf	(vfprintf@fp+1)& (0+255),b
  3910  004BF0  C0E2  F0D8         	movff	vsnprintf@fmt,vfprintf@fmt
  3911  004BF4  C0E3  F0D9         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3912  004BF8  C0E4  F0DA         	movff	vsnprintf@ap,vfprintf@ap
  3913  004BFC  C0E5  F0DB         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3914  004C00  ECF5  F02C         	call	_vfprintf	;wreg free
  3915  004C04  C0D6  F1BE         	movff	?_vfprintf,vsnprintf@cnt
  3916  004C08  C0D7  F1BF         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3917  004C0C  0100               	movlb	0	; () banked
  3918  004C0E  51E0               	movf	vsnprintf@n& (0+255),w,b
  3919  004C10  11E1               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3920  004C12  B4D8               	btfsc	status,2,c
  3921  004C14  EF0E  F026         	goto	u12641
  3922  004C18  EF10  F026         	goto	u12640
  3923  004C1C                     u12641:
  3924  004C1C  EF4E  F026         	goto	l9704
  3925  004C20                     u12640:
  3926  004C20                     
  3927                           ; BSR set to: 0
  3928  004C20  0101               	movlb	1	; () banked
  3929  004C22  BFBF               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3930  004C24  EF16  F026         	goto	u12651
  3931  004C28  EF18  F026         	goto	u12650
  3932  004C2C                     u12651:
  3933  004C2C  EF4E  F026         	goto	l9704
  3934  004C30                     u12650:
  3935  004C30                     
  3936                           ; BSR set to: 1
  3937  004C30  0EFF               	movlw	255
  3938  004C32  0100               	movlb	0	; () banked
  3939  004C34  6FE6               	movwf	??_vsnprintf& (0+255),b
  3940  004C36  0EFF               	movlw	255
  3941  004C38  6FE7               	movwf	(??_vsnprintf+1)& (0+255),b
  3942  004C3A  C0E0  F0E8         	movff	vsnprintf@n,??_vsnprintf+2
  3943  004C3E  C0E1  F0E9         	movff	vsnprintf@n+1,??_vsnprintf+3
  3944  004C42  51E6               	movf	??_vsnprintf& (0+255),w,b
  3945  004C44  27E8               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3946  004C46  51E7               	movf	(??_vsnprintf+1)& (0+255),w,b
  3947  004C48  23E9               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3948  004C4A  51E8               	movf	(??_vsnprintf+2)& (0+255),w,b
  3949  004C4C  0101               	movlb	1	; () banked
  3950  004C4E  5DBE               	subwf	vsnprintf@cnt& (0+255),w,b
  3951  004C50  0100               	movlb	0	; () banked
  3952  004C52  51E9               	movf	(??_vsnprintf+3)& (0+255),w,b
  3953  004C54  0101               	movlb	1	; () banked
  3954  004C56  59BF               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3955  004C58  A0D8               	btfss	status,0,c
  3956  004C5A  EF31  F026         	goto	u12661
  3957  004C5E  EF33  F026         	goto	u12660
  3958  004C62                     u12661:
  3959  004C62  EF3F  F026         	goto	l1824
  3960  004C66                     u12660:
  3961  004C66                     
  3962                           ; BSR set to: 1
  3963  004C66  0EFF               	movlw	255
  3964  004C68  0100               	movlb	0	; () banked
  3965  004C6A  25E0               	addwf	vsnprintf@n& (0+255),w,b
  3966  004C6C  0101               	movlb	1	; () banked
  3967  004C6E  6FBC               	movwf	_vsnprintf$2535& (0+255),b
  3968  004C70  0EFF               	movlw	255
  3969  004C72  0100               	movlb	0	; () banked
  3970  004C74  21E1               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3971  004C76  0101               	movlb	1	; () banked
  3972  004C78  6FBD               	movwf	(_vsnprintf$2535+1)& (0+255),b
  3973  004C7A  EF43  F026         	goto	l9702
  3974  004C7E                     l1824:
  3975                           
  3976                           ; BSR set to: 1
  3977  004C7E  C1BE  F1BC         	movff	vsnprintf@cnt,_vsnprintf$2535
  3978  004C82  C1BF  F1BD         	movff	vsnprintf@cnt+1,_vsnprintf$2535+1
  3979  004C86                     l9702:
  3980                           
  3981                           ; BSR set to: 1
  3982  004C86  51BC               	movf	_vsnprintf$2535& (0+255),w,b
  3983  004C88  0100               	movlb	0	; () banked
  3984  004C8A  25DE               	addwf	vsnprintf@s& (0+255),w,b
  3985  004C8C  6ED9               	movwf	fsr2l,c
  3986  004C8E  0101               	movlb	1	; () banked
  3987  004C90  51BD               	movf	(_vsnprintf$2535+1)& (0+255),w,b
  3988  004C92  0100               	movlb	0	; () banked
  3989  004C94  21DF               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3990  004C96  6EDA               	movwf	fsr2h,c
  3991  004C98  0E00               	movlw	0
  3992  004C9A  6EDF               	movwf	indf2,c
  3993  004C9C                     l9704:
  3994  004C9C  C1BE  F0DE         	movff	vsnprintf@cnt,?_vsnprintf
  3995  004CA0  C1BF  F0DF         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3996  004CA4                     l1819:
  3997  004CA4  0012               	return		;funcret
  3998  004CA6                     __end_of_vsnprintf:
  3999                           	opt callstack 0
  4000                           
  4001 ;; *************** function _vfprintf *****************
  4002 ;; Defined at:
  4003 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  fp              2  118[BANK0 ] PTR struct _IO_FILE
  4006 ;;		 -> vsnprintf@f(6), 
  4007 ;;  fmt             2  120[BANK0 ] PTR const unsigned char 
  4008 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  4009 ;;  ap              2  122[BANK0 ] PTR PTR void 
  4010 ;;		 -> snprintf@ap(2), 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  cfmt            2  124[BANK0 ] PTR unsigned char 
  4013 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  2  118[BANK0 ] int 
  4016 ;; Registers used:
  4017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4023 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;Total ram usage:        8 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:   11
  4030 ;; This function calls:
  4031 ;;		_vfpfcnvrt
  4032 ;; This function is called by:
  4033 ;;		_vsnprintf
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text3
  4038  0059EA                     __ptext3:
  4039                           	opt callstack 0
  4040  0059EA                     _vfprintf:
  4041                           	opt callstack 17
  4042  0059EA                     
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4044  0059EA  C0D8  F0DC         	movff	vfprintf@fmt,vfprintf@cfmt
  4045  0059EE  C0D9  F0DD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4046  0059F2                     
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4048  0059F2  0E00               	movlw	0
  4049  0059F4  0100               	movlb	0	; () banked
  4050  0059F6  6FF1               	movwf	(_nout+1)& (0+255),b
  4051  0059F8  0E00               	movlw	0
  4052  0059FA  6FF0               	movwf	_nout& (0+255),b
  4053                           
  4054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4055  0059FC  EF13  F02D         	goto	l9622
  4056  005A00                     l9620:
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4060  005A00  C0D6  F0A8         	movff	vfprintf@fp,vfpfcnvrt@fp
  4061  005A04  C0D7  F0A9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4062  005A08  0EDC               	movlw	low vfprintf@cfmt
  4063  005A0A  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
  4064  005A0C  0E00               	movlw	high vfprintf@cfmt
  4065  005A0E  6FAB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4066  005A10  C0DA  F0AC         	movff	vfprintf@ap,vfpfcnvrt@ap
  4067  005A14  C0DB  F0AD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4068  005A18  EC60  F000         	call	_vfpfcnvrt	;wreg free
  4069  005A1C  0100               	movlb	0	; () banked
  4070  005A1E  51A8               	movf	?_vfpfcnvrt& (0+255),w,b
  4071  005A20  27F0               	addwf	_nout& (0+255),f,b
  4072  005A22  51A9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4073  005A24  23F1               	addwfc	(_nout+1)& (0+255),f,b
  4074  005A26                     l9622:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4078  005A26  C0DC  FFF6         	movff	vfprintf@cfmt,tblptrl
  4079  005A2A  C0DD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4080  005A2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4081  005A2E  6AF8               	clrf	tblptru,c
  4082  005A30                     	endif
  4083  005A30                     	if	0	;tblptru may be non-zero
  4084  005A30                     	endif
  4085  005A30  0008               	tblrd		*
  4086  005A32  50F5               	movf	tablat,w,c
  4087  005A34  0900               	iorlw	0
  4088  005A36  A4D8               	btfss	status,2,c
  4089  005A38  EF20  F02D         	goto	u12521
  4090  005A3C  EF22  F02D         	goto	u12520
  4091  005A40                     u12521:
  4092  005A40  EF00  F02D         	goto	l9620
  4093  005A44                     u12520:
  4094  005A44                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4097  005A44  C0F0  F0D6         	movff	_nout,?_vfprintf
  4098  005A48  C0F1  F0D7         	movff	_nout+1,?_vfprintf+1
  4099  005A4C                     
  4100                           ; BSR set to: 0
  4101  005A4C  0012               	return		;funcret
  4102  005A4E                     __end_of_vfprintf:
  4103                           	opt callstack 0
  4104                           
  4105 ;; *************** function _vfpfcnvrt *****************
  4106 ;; Defined at:
  4107 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  4110 ;;		 -> vsnprintf@f(6), 
  4111 ;;  fmt             2   74[BANK0 ] PTR PTR unsigned char 
  4112 ;;		 -> vfprintf@cfmt(2), 
  4113 ;;  ap              2   76[BANK0 ] PTR PTR void 
  4114 ;;		 -> snprintf@ap(2), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  llu             8  110[BANK0 ] unsigned long long 
  4117 ;;  ll              8   99[BANK0 ] long long 
  4118 ;;  f               4   92[BANK0 ] long long 
  4119 ;;  ct              3   96[BANK0 ] unsigned char [3]
  4120 ;;  vp              2  107[BANK0 ] PTR void 
  4121 ;;		 -> ?_snprintf(2), ticks(2), 
  4122 ;;  done            2   84[BANK0 ] int 
  4123 ;;  cp              2   82[BANK0 ] PTR unsigned char 
  4124 ;;		 -> ?_snprintf(2), ticks(2), 
  4125 ;;  i               2    0        int 
  4126 ;;  c               1  109[BANK0 ] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2   72[BANK0 ] int 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4136 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4137 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4138 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4139 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;Total ram usage:       46 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:   10
  4143 ;; This function calls:
  4144 ;;		_atoi
  4145 ;;		_ctoa
  4146 ;;		_dtoa
  4147 ;;		_efgtoa
  4148 ;;		_fputc
  4149 ;;		_isdigit
  4150 ;;		_isupper
  4151 ;;		_otoa
  4152 ;;		_stoa
  4153 ;;		_strncmp
  4154 ;;		_tolower
  4155 ;;		_utoa
  4156 ;;		_xtoa
  4157 ;; This function is called by:
  4158 ;;		_vfprintf
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text4
  4163  0000C0                     __ptext4:
  4164                           	opt callstack 0
  4165  0000C0                     _vfpfcnvrt:
  4166                           	opt callstack 17
  4167  0000C0                     
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4169  0000C0  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4170  0000C4  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4171  0000C8  CFDE FFF6          	movff	postinc2,tblptrl
  4172  0000CC  CFDD FFF7          	movff	postdec2,tblptrh
  4173  0000D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4174  0000D0  6AF8               	clrf	tblptru,c
  4175  0000D2                     	endif
  4176  0000D2                     	if	0	;tblptru may be non-zero
  4177  0000D2                     	endif
  4178  0000D2  0008               	tblrd		*
  4179  0000D4  50F5               	movf	tablat,w,c
  4180  0000D6  0A25               	xorlw	37
  4181  0000D8  A4D8               	btfss	status,2,c
  4182  0000DA  EF71  F000         	goto	u11981
  4183  0000DE  EF73  F000         	goto	u11980
  4184  0000E2                     u11981:
  4185  0000E2  EFB7  F00A         	goto	l9584
  4186  0000E6                     u11980:
  4187  0000E6                     
  4188                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4189  0000E6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4190  0000EA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4191  0000EE  2ADE               	incf	postinc2,f,c
  4192  0000F0  0E00               	movlw	0
  4193  0000F2  22DD               	addwfc	postdec2,f,c
  4194  0000F4                     
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4196  0000F4  0E00               	movlw	0
  4197  0000F6  6E44               	movwf	(_width+1)^0,c
  4198  0000F8  0E00               	movlw	0
  4199  0000FA  6E43               	movwf	_width^0,c
  4200  0000FC  C043  F047         	movff	_width,_flags
  4201  000100  C044  F048         	movff	_width+1,_flags+1
  4202  000104                     
  4203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4204  000104  6845               	setf	_prec^0,c
  4205  000106  6846               	setf	(_prec+1)^0,c
  4206  000108                     
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4208  000108  0E00               	movlw	0
  4209  00010A  0100               	movlb	0	; () banked
  4210  00010C  6FB5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4211  00010E  0E00               	movlw	0
  4212  000110  6FB4               	movwf	vfpfcnvrt@done& (0+255),b
  4213                           
  4214                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4215  000112  EFD2  F000         	goto	l9264
  4216  000116                     l9238:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4220  000116  8047               	bsf	_flags^0,0,c
  4221  000118                     l9240:
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4225  000118  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4226  00011C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4227  000120  2ADE               	incf	postinc2,f,c
  4228  000122  0E00               	movlw	0
  4229  000124  22DD               	addwfc	postdec2,f,c
  4230                           
  4231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4232  000126  EFD2  F000         	goto	l9264
  4233  00012A                     l9242:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4237  00012A  8247               	bsf	_flags^0,1,c
  4238  00012C  EF8C  F000         	goto	l9240
  4239  000130                     l9246:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4243  000130  8447               	bsf	_flags^0,2,c
  4244  000132  EF8C  F000         	goto	l9240
  4245  000136                     l9250:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4249  000136  8647               	bsf	_flags^0,3,c
  4250  000138  EF8C  F000         	goto	l9240
  4251  00013C                     l9254:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4255  00013C  8847               	bsf	_flags^0,4,c
  4256  00013E  EF8C  F000         	goto	l9240
  4257  000142                     l9258:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4261  000142  0E00               	movlw	0
  4262  000144  6FB5               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4263  000146  0E01               	movlw	1
  4264  000148  6FB4               	movwf	vfpfcnvrt@done& (0+255),b
  4265                           
  4266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4267  00014A  EFD2  F000         	goto	l9264
  4268  00014E                     l9262:
  4269                           
  4270                           ; BSR set to: 0
  4271  00014E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4272  000152  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4273  000156  CFDE FFF6          	movff	postinc2,tblptrl
  4274  00015A  CFDD FFF7          	movff	postdec2,tblptrh
  4275  00015E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4276  00015E  6AF8               	clrf	tblptru,c
  4277  000160                     	endif
  4278  000160                     	if	0	;tblptru may be non-zero
  4279  000160                     	endif
  4280  000160  0008               	tblrd		*
  4281  000162  50F5               	movf	tablat,w,c
  4282  000164  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  4283  000166  6BAF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4284                           
  4285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4286                           ; Switch size 1, requested type "simple"
  4287                           ; Number of cases is 1, Range of values is 0 to 0
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte            4     3 (average)
  4291                           ;	Chosen strategy is simple_byte
  4292  000168  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4293  00016A  0A00               	xorlw	0	; case 0
  4294  00016C  B4D8               	btfsc	status,2,c
  4295  00016E  EFBB  F000         	goto	l10162
  4296  000172  EFA1  F000         	goto	l9258
  4297  000176                     l10162:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ; Switch size 1, requested type "simple"
  4301                           ; Number of cases is 5, Range of values is 32 to 48
  4302                           ; switch strategies available:
  4303                           ; Name         Instructions Cycles
  4304                           ; simple_byte           16     9 (average)
  4305                           ;	Chosen strategy is simple_byte
  4306  000176  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  4307  000178  0A20               	xorlw	32	; case 32
  4308  00017A  B4D8               	btfsc	status,2,c
  4309  00017C  EF9B  F000         	goto	l9250
  4310  000180  0A03               	xorlw	3	; case 35
  4311  000182  B4D8               	btfsc	status,2,c
  4312  000184  EF9E  F000         	goto	l9254
  4313  000188  0A08               	xorlw	8	; case 43
  4314  00018A  B4D8               	btfsc	status,2,c
  4315  00018C  EF98  F000         	goto	l9246
  4316  000190  0A06               	xorlw	6	; case 45
  4317  000192  B4D8               	btfsc	status,2,c
  4318  000194  EF8B  F000         	goto	l9238
  4319  000198  0A1D               	xorlw	29	; case 48
  4320  00019A  B4D8               	btfsc	status,2,c
  4321  00019C  EF95  F000         	goto	l9242
  4322  0001A0  EFA1  F000         	goto	l9258
  4323  0001A4                     l9264:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4327  0001A4  51B4               	movf	vfpfcnvrt@done& (0+255),w,b
  4328  0001A6  11B5               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4329  0001A8  B4D8               	btfsc	status,2,c
  4330  0001AA  EFD9  F000         	goto	u11991
  4331  0001AE  EFDB  F000         	goto	u11990
  4332  0001B2                     u11991:
  4333  0001B2  EFA7  F000         	goto	l9262
  4334  0001B6                     u11990:
  4335  0001B6                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4338  0001B6  A047               	btfss	_flags^0,0,c
  4339  0001B8  EFE0  F000         	goto	u12001
  4340  0001BC  EFE2  F000         	goto	u12000
  4341  0001C0                     u12001:
  4342  0001C0  EFE3  F000         	goto	l9268
  4343  0001C4                     u12000:
  4344  0001C4                     
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4347  0001C4  9247               	bcf	_flags^0,1,c
  4348  0001C6                     l9268:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4352  0001C6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4353  0001CA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4354  0001CE  CFDE FFF6          	movff	postinc2,tblptrl
  4355  0001D2  CFDD FFF7          	movff	postdec2,tblptrh
  4356  0001D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4357  0001D6  6AF8               	clrf	tblptru,c
  4358  0001D8                     	endif
  4359  0001D8                     	if	0	;tblptru may be non-zero
  4360  0001D8                     	endif
  4361  0001D8  0008               	tblrd		*
  4362  0001DA  50F5               	movf	tablat,w,c
  4363  0001DC  0A2A               	xorlw	42
  4364  0001DE  A4D8               	btfss	status,2,c
  4365  0001E0  EFF4  F000         	goto	u12011
  4366  0001E4  EFF6  F000         	goto	u12010
  4367  0001E8                     u12011:
  4368  0001E8  EF1F  F001         	goto	l9276
  4369  0001EC                     u12010:
  4370  0001EC                     
  4371                           ; BSR set to: 0
  4372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4373  0001EC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4374  0001F0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4375  0001F4  2ADE               	incf	postinc2,f,c
  4376  0001F6  0E00               	movlw	0
  4377  0001F8  22DD               	addwfc	postdec2,f,c
  4378                           
  4379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4380  0001FA  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4381  0001FE  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4382  000202  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  4383  000206  0E02               	movlw	2
  4384  000208  26DE               	addwf	postinc2,f,c
  4385  00020A  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  4386  00020E  0E00               	movlw	0
  4387  000210  22DD               	addwfc	postdec2,f,c
  4388  000212  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4389  000216  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4390  00021A  CFDE F043          	movff	postinc2,_width
  4391  00021E  CFDD F044          	movff	postdec2,_width+1
  4392  000222                     
  4393                           ; BSR set to: 0
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4395  000222  BE44               	btfsc	(_width+1)^0,7,c
  4396  000224  EF18  F001         	goto	u12020
  4397  000228  EF16  F001         	goto	u12021
  4398  00022C                     u12021:
  4399  00022C  EF64  F001         	goto	l9286
  4400  000230                     u12020:
  4401  000230                     
  4402                           ; BSR set to: 0
  4403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4404  000230  8047               	bsf	_flags^0,0,c
  4405                           
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4407  000232  6C43               	negf	_width^0,c
  4408  000234  1E44               	comf	(_width+1)^0,f,c
  4409  000236  B0D8               	btfsc	status,0,c
  4410  000238  2A44               	incf	(_width+1)^0,f,c
  4411  00023A  EF64  F001         	goto	l9286
  4412  00023E                     l9276:
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4416  00023E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4417  000242  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4418  000246  CFDE F017          	movff	postinc2,atoi@s
  4419  00024A  CFDD F018          	movff	postdec2,atoi@s+1
  4420  00024E  ECA9  F020         	call	_atoi	;wreg free
  4421  000252  C017  F043         	movff	?_atoi,_width
  4422  000256  C018  F044         	movff	?_atoi+1,_width+1
  4423                           
  4424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4425  00025A  EF36  F001         	goto	l9280
  4426  00025E                     l9278:
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4430  00025E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4431  000262  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4432  000266  2ADE               	incf	postinc2,f,c
  4433  000268  0E00               	movlw	0
  4434  00026A  22DD               	addwfc	postdec2,f,c
  4435  00026C                     l9280:
  4436  00026C  0ED0               	movlw	208
  4437  00026E  0100               	movlb	0	; () banked
  4438  000270  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  4439  000272  0EFF               	movlw	255
  4440  000274  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4441  000276  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4442  00027A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4443  00027E  CFDE FFF6          	movff	postinc2,tblptrl
  4444  000282  CFDD FFF7          	movff	postdec2,tblptrh
  4445  000286                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4446  000286  6AF8               	clrf	tblptru,c
  4447  000288                     	endif
  4448  000288                     	if	0	;tblptru may be non-zero
  4449  000288                     	endif
  4450  000288  0008               	tblrd		*
  4451  00028A  50F5               	movf	tablat,w,c
  4452  00028C  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4453  00028E  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4454  000290  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  4455  000292  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4456  000294  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4457  000296  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4458  000298  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4459  00029A  E10A               	bnz	u12030
  4460  00029C  0E0A               	movlw	10
  4461  00029E  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4462  0002A0  A0D8               	btfss	status,0,c
  4463  0002A2  EF55  F001         	goto	u12031
  4464  0002A6  EF58  F001         	goto	u12030
  4465  0002AA                     u12031:
  4466  0002AA  0E01               	movlw	1
  4467  0002AC  EF59  F001         	goto	u12040
  4468  0002B0                     u12030:
  4469  0002B0  0E00               	movlw	0
  4470  0002B2                     u12040:
  4471  0002B2  6FB6               	movwf	_vfpfcnvrt$1782& (0+255),b
  4472  0002B4  6BB7               	clrf	(_vfpfcnvrt$1782+1)& (0+255),b
  4473  0002B6                     
  4474                           ; BSR set to: 0
  4475  0002B6  51B6               	movf	_vfpfcnvrt$1782& (0+255),w,b
  4476  0002B8  11B7               	iorwf	(_vfpfcnvrt$1782+1)& (0+255),w,b
  4477  0002BA  A4D8               	btfss	status,2,c
  4478  0002BC  EF62  F001         	goto	u12051
  4479  0002C0  EF64  F001         	goto	u12050
  4480  0002C4                     u12051:
  4481  0002C4  EF2F  F001         	goto	l9278
  4482  0002C8                     u12050:
  4483  0002C8                     l9286:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4487  0002C8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4488  0002CC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4489  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4490  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4491  0002D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4492  0002D8  6AF8               	clrf	tblptru,c
  4493  0002DA                     	endif
  4494  0002DA                     	if	0	;tblptru may be non-zero
  4495  0002DA                     	endif
  4496  0002DA  0008               	tblrd		*
  4497  0002DC  50F5               	movf	tablat,w,c
  4498  0002DE  0A2E               	xorlw	46
  4499  0002E0  A4D8               	btfss	status,2,c
  4500  0002E2  EF75  F001         	goto	u12061
  4501  0002E6  EF77  F001         	goto	u12060
  4502  0002EA                     u12061:
  4503  0002EA  EFF7  F001         	goto	l9306
  4504  0002EE                     u12060:
  4505  0002EE                     
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4508  0002EE  0E00               	movlw	0
  4509  0002F0  6E46               	movwf	(_prec+1)^0,c
  4510  0002F2  0E00               	movlw	0
  4511  0002F4  6E45               	movwf	_prec^0,c
  4512  0002F6                     
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4515  0002F6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4516  0002FA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4517  0002FE  2ADE               	incf	postinc2,f,c
  4518  000300  0E00               	movlw	0
  4519  000302  22DD               	addwfc	postdec2,f,c
  4520  000304                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4523  000304  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4524  000308  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4525  00030C  CFDE FFF6          	movff	postinc2,tblptrl
  4526  000310  CFDD FFF7          	movff	postdec2,tblptrh
  4527  000314                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4528  000314  6AF8               	clrf	tblptru,c
  4529  000316                     	endif
  4530  000316                     	if	0	;tblptru may be non-zero
  4531  000316                     	endif
  4532  000316  0008               	tblrd		*
  4533  000318  50F5               	movf	tablat,w,c
  4534  00031A  0A2A               	xorlw	42
  4535  00031C  A4D8               	btfss	status,2,c
  4536  00031E  EF93  F001         	goto	u12071
  4537  000322  EF95  F001         	goto	u12070
  4538  000326                     u12071:
  4539  000326  EFB2  F001         	goto	l9296
  4540  00032A                     u12070:
  4541  00032A                     
  4542                           ; BSR set to: 0
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4544  00032A  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4545  00032E  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4546  000332  2ADE               	incf	postinc2,f,c
  4547  000334  0E00               	movlw	0
  4548  000336  22DD               	addwfc	postdec2,f,c
  4549                           
  4550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4551  000338  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4552  00033C  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4553  000340  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  4554  000344  0E02               	movlw	2
  4555  000346  26DE               	addwf	postinc2,f,c
  4556  000348  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  4557  00034C  0E00               	movlw	0
  4558  00034E  22DD               	addwfc	postdec2,f,c
  4559  000350  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4560  000354  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4561  000358  CFDE F045          	movff	postinc2,_prec
  4562  00035C  CFDD F046          	movff	postdec2,_prec+1
  4563                           
  4564                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4565  000360  EFF7  F001         	goto	l9306
  4566  000364                     l9296:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4570  000364  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4571  000368  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4572  00036C  CFDE F017          	movff	postinc2,atoi@s
  4573  000370  CFDD F018          	movff	postdec2,atoi@s+1
  4574  000374  ECA9  F020         	call	_atoi	;wreg free
  4575  000378  C017  F045         	movff	?_atoi,_prec
  4576  00037C  C018  F046         	movff	?_atoi+1,_prec+1
  4577                           
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4579  000380  EFC9  F001         	goto	l9300
  4580  000384                     l9298:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4584  000384  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4585  000388  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4586  00038C  2ADE               	incf	postinc2,f,c
  4587  00038E  0E00               	movlw	0
  4588  000390  22DD               	addwfc	postdec2,f,c
  4589  000392                     l9300:
  4590  000392  0ED0               	movlw	208
  4591  000394  0100               	movlb	0	; () banked
  4592  000396  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  4593  000398  0EFF               	movlw	255
  4594  00039A  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4595  00039C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4596  0003A0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4597  0003A4  CFDE FFF6          	movff	postinc2,tblptrl
  4598  0003A8  CFDD FFF7          	movff	postdec2,tblptrh
  4599  0003AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4600  0003AC  6AF8               	clrf	tblptru,c
  4601  0003AE                     	endif
  4602  0003AE                     	if	0	;tblptru may be non-zero
  4603  0003AE                     	endif
  4604  0003AE  0008               	tblrd		*
  4605  0003B0  50F5               	movf	tablat,w,c
  4606  0003B2  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4607  0003B4  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4608  0003B6  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  4609  0003B8  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4610  0003BA  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4611  0003BC  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4612  0003BE  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4613  0003C0  E10A               	bnz	u12080
  4614  0003C2  0E0A               	movlw	10
  4615  0003C4  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4616  0003C6  A0D8               	btfss	status,0,c
  4617  0003C8  EFE8  F001         	goto	u12081
  4618  0003CC  EFEB  F001         	goto	u12080
  4619  0003D0                     u12081:
  4620  0003D0  0E01               	movlw	1
  4621  0003D2  EFEC  F001         	goto	u12090
  4622  0003D6                     u12080:
  4623  0003D6  0E00               	movlw	0
  4624  0003D8                     u12090:
  4625  0003D8  6FB8               	movwf	_vfpfcnvrt$1783& (0+255),b
  4626  0003DA  6BB9               	clrf	(_vfpfcnvrt$1783+1)& (0+255),b
  4627  0003DC                     
  4628                           ; BSR set to: 0
  4629  0003DC  51B8               	movf	_vfpfcnvrt$1783& (0+255),w,b
  4630  0003DE  11B9               	iorwf	(_vfpfcnvrt$1783+1)& (0+255),w,b
  4631  0003E0  A4D8               	btfss	status,2,c
  4632  0003E2  EFF5  F001         	goto	u12101
  4633  0003E6  EFF7  F001         	goto	u12100
  4634  0003EA                     u12101:
  4635  0003EA  EFC2  F001         	goto	l9298
  4636  0003EE                     u12100:
  4637  0003EE                     l9306:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4641  0003EE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4642  0003F2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4643  0003F6  CFDE FFF6          	movff	postinc2,tblptrl
  4644  0003FA  CFDD FFF7          	movff	postdec2,tblptrh
  4645  0003FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4646  0003FE  6AF8               	clrf	tblptru,c
  4647  000400                     	endif
  4648  000400                     	if	0	;tblptru may be non-zero
  4649  000400                     	endif
  4650  000400  0008               	tblrd		*
  4651  000402  50F5               	movf	tablat,w,c
  4652  000404  6E16               	movwf	tolower@c^0,c
  4653  000406  6A17               	clrf	(tolower@c+1)^0,c
  4654  000408  EC27  F02D         	call	_tolower	;wreg free
  4655  00040C  5016               	movf	?_tolower^0,w,c
  4656  00040E  0100               	movlb	0	; () banked
  4657  000410  6FC0               	movwf	vfpfcnvrt@ct& (0+255),b
  4658  000412                     
  4659                           ; BSR set to: 0
  4660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4661  000412  51C0               	movf	vfpfcnvrt@ct& (0+255),w,b
  4662  000414  B4D8               	btfsc	status,2,c
  4663  000416  EF0F  F002         	goto	u12111
  4664  00041A  EF11  F002         	goto	u12110
  4665  00041E                     u12111:
  4666  00041E  EF4D  F002         	goto	l9316
  4667  000422                     u12110:
  4668  000422                     
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4671  000422  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4672  000426  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4673  00042A  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  4674  00042E  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  4675  000432  0E01               	movlw	1
  4676  000434  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4677  000436  0E00               	movlw	0
  4678  000438  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4679  00043A  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4680  00043E  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4681  000442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4682  000442  6AF8               	clrf	tblptru,c
  4683  000444                     	endif
  4684  000444                     	if	0	;tblptru may be non-zero
  4685  000444                     	endif
  4686  000444  0008               	tblrd		*
  4687  000446  50F5               	movf	tablat,w,c
  4688  000448  6E16               	movwf	tolower@c^0,c
  4689  00044A  6A17               	clrf	(tolower@c+1)^0,c
  4690  00044C  EC27  F02D         	call	_tolower	;wreg free
  4691  000450  5016               	movf	?_tolower^0,w,c
  4692  000452  0100               	movlb	0	; () banked
  4693  000454  6FC1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4694  000456                     
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4697  000456  51C1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4698  000458  B4D8               	btfsc	status,2,c
  4699  00045A  EF31  F002         	goto	u12121
  4700  00045E  EF33  F002         	goto	u12120
  4701  000462                     u12121:
  4702  000462  EF4D  F002         	goto	l9316
  4703  000466                     u12120:
  4704  000466                     
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4707  000466  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4708  00046A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4709  00046E  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  4710  000472  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  4711  000476  0E02               	movlw	2
  4712  000478  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4713  00047A  0E00               	movlw	0
  4714  00047C  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4715  00047E  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4716  000482  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4717  000486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4718  000486  6AF8               	clrf	tblptru,c
  4719  000488                     	endif
  4720  000488                     	if	0	;tblptru may be non-zero
  4721  000488                     	endif
  4722  000488  0008               	tblrd		*
  4723  00048A  50F5               	movf	tablat,w,c
  4724  00048C  6E16               	movwf	tolower@c^0,c
  4725  00048E  6A17               	clrf	(tolower@c+1)^0,c
  4726  000490  EC27  F02D         	call	_tolower	;wreg free
  4727  000494  5016               	movf	?_tolower^0,w,c
  4728  000496  0100               	movlb	0	; () banked
  4729  000498  6FC2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4730  00049A                     l9316:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4734  00049A  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4735  00049E  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4736  0004A2  CFDE FFF6          	movff	postinc2,tblptrl
  4737  0004A6  CFDD FFF7          	movff	postdec2,tblptrh
  4738  0004AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4739  0004AA  6AF8               	clrf	tblptru,c
  4740  0004AC                     	endif
  4741  0004AC                     	if	0	;tblptru may be non-zero
  4742  0004AC                     	endif
  4743  0004AC  0008               	tblrd		*
  4744  0004AE  50F5               	movf	tablat,w,c
  4745  0004B0  0A63               	xorlw	99
  4746  0004B2  A4D8               	btfss	status,2,c
  4747  0004B4  EF5E  F002         	goto	u12131
  4748  0004B8  EF60  F002         	goto	u12130
  4749  0004BC                     u12131:
  4750  0004BC  EF87  F002         	goto	l9324
  4751  0004C0                     u12130:
  4752  0004C0                     
  4753                           ; BSR set to: 0
  4754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4755  0004C0  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4756  0004C4  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4757  0004C8  2ADE               	incf	postinc2,f,c
  4758  0004CA  0E00               	movlw	0
  4759  0004CC  22DD               	addwfc	postdec2,f,c
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4762  0004CE  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4763  0004D2  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4764  0004D6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  4765  0004DA  0E02               	movlw	2
  4766  0004DC  26DE               	addwf	postinc2,f,c
  4767  0004DE  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  4768  0004E2  0E00               	movlw	0
  4769  0004E4  22DD               	addwfc	postdec2,f,c
  4770  0004E6  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4771  0004EA  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4772  0004EE  50DF               	movf	indf2,w,c
  4773  0004F0  6FCD               	movwf	vfpfcnvrt@c& (0+255),b
  4774  0004F2                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4777  0004F2  C0A8  F02B         	movff	vfpfcnvrt@fp,ctoa@fp
  4778  0004F6  C0A9  F02C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4779  0004FA  C0CD  F02D         	movff	vfpfcnvrt@c,ctoa@c
  4780  0004FE  ECE2  F02D         	call	_ctoa	;wreg free
  4781  000502  C02B  F0A8         	movff	?_ctoa,?_vfpfcnvrt
  4782  000506  C02C  F0A9         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4783  00050A  EFD3  F00A         	goto	l913
  4784  00050E                     l9324:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4788  00050E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4789  000512  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4790  000516  CFDE F010          	movff	postinc2,strncmp@_l
  4791  00051A  CFDD F011          	movff	postdec2,strncmp@_l+1
  4792  00051E  0EC6               	movlw	low STR_14
  4793  000520  6E12               	movwf	strncmp@_r^0,c
  4794  000522  0EFF               	movlw	high STR_14
  4795  000524  6E13               	movwf	(strncmp@_r+1)^0,c
  4796  000526  0E00               	movlw	0
  4797  000528  6E15               	movwf	(strncmp@n+1)^0,c
  4798  00052A  0E03               	movlw	3
  4799  00052C  6E14               	movwf	strncmp@n^0,c
  4800  00052E  EC53  F026         	call	_strncmp	;wreg free
  4801  000532  5010               	movf	?_strncmp^0,w,c
  4802  000534  1011               	iorwf	(?_strncmp+1)^0,w,c
  4803  000536  B4D8               	btfsc	status,2,c
  4804  000538  EFA0  F002         	goto	u12141
  4805  00053C  EFA2  F002         	goto	u12140
  4806  000540                     u12141:
  4807  000540  EFBD  F002         	goto	l9328
  4808  000544                     u12140:
  4809  000544  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4810  000548  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4811  00054C  CFDE F010          	movff	postinc2,strncmp@_l
  4812  000550  CFDD F011          	movff	postdec2,strncmp@_l+1
  4813  000554  0ECE               	movlw	low STR_18
  4814  000556  6E12               	movwf	strncmp@_r^0,c
  4815  000558  0EFF               	movlw	high STR_18
  4816  00055A  6E13               	movwf	(strncmp@_r+1)^0,c
  4817  00055C  0E00               	movlw	0
  4818  00055E  6E15               	movwf	(strncmp@n+1)^0,c
  4819  000560  0E03               	movlw	3
  4820  000562  6E14               	movwf	strncmp@n^0,c
  4821  000564  EC53  F026         	call	_strncmp	;wreg free
  4822  000568  5010               	movf	?_strncmp^0,w,c
  4823  00056A  1011               	iorwf	(?_strncmp+1)^0,w,c
  4824  00056C  A4D8               	btfss	status,2,c
  4825  00056E  EFBB  F002         	goto	u12151
  4826  000572  EFBD  F002         	goto	u12150
  4827  000576                     u12151:
  4828  000576  EFFE  F002         	goto	l9334
  4829  00057A                     u12150:
  4830  00057A                     l9328:
  4831                           
  4832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4833  00057A  0E03               	movlw	3
  4834  00057C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4835  000580  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4836  000584  26DE               	addwf	postinc2,f,c
  4837  000586  0E00               	movlw	0
  4838  000588  22DD               	addwfc	postdec2,f,c
  4839                           
  4840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4841  00058A  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4842  00058E  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4843  000592  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  4844  000596  0E02               	movlw	2
  4845  000598  26DE               	addwf	postinc2,f,c
  4846  00059A  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  4847  00059E  0E00               	movlw	0
  4848  0005A0  22DD               	addwfc	postdec2,f,c
  4849  0005A2  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4850  0005A6  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4851  0005AA  50DF               	movf	indf2,w,c
  4852  0005AC  0100               	movlb	0	; () banked
  4853  0005AE  6FC3               	movwf	vfpfcnvrt@ll& (0+255),b
  4854  0005B0  0E00               	movlw	0
  4855  0005B2  BFC3               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4856  0005B4  0EFF               	movlw	-1
  4857  0005B6  6FC4               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4858  0005B8  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4859  0005BA  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4860  0005BC  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4861  0005BE  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4862  0005C0  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4863  0005C2  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4864  0005C4                     l9330:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4868  0005C4  C0A8  F02B         	movff	vfpfcnvrt@fp,dtoa@fp
  4869  0005C8  C0A9  F02C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4870  0005CC  C0C3  F02D         	movff	vfpfcnvrt@ll,dtoa@d
  4871  0005D0  C0C4  F02E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4872  0005D4  C0C5  F02F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4873  0005D8  C0C6  F030         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4874  0005DC  C0C7  F031         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4875  0005E0  C0C8  F032         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4876  0005E4  C0C9  F033         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4877  0005E8  C0CA  F034         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4878  0005EC  ECB2  F018         	call	_dtoa	;wreg free
  4879  0005F0  C02B  F0A8         	movff	?_dtoa,?_vfpfcnvrt
  4880  0005F4  C02C  F0A9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4881  0005F8  EFD3  F00A         	goto	l913
  4882  0005FC                     l9334:
  4883                           
  4884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4885  0005FC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4886  000600  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4887  000604  CFDE F010          	movff	postinc2,strncmp@_l
  4888  000608  CFDD F011          	movff	postdec2,strncmp@_l+1
  4889  00060C  0EC7               	movlw	low (STR_14+1)
  4890  00060E  6E12               	movwf	strncmp@_r^0,c
  4891  000610  0EFF               	movlw	high (STR_14+1)
  4892  000612  6E13               	movwf	(strncmp@_r+1)^0,c
  4893  000614  0E00               	movlw	0
  4894  000616  6E15               	movwf	(strncmp@n+1)^0,c
  4895  000618  0E02               	movlw	2
  4896  00061A  6E14               	movwf	strncmp@n^0,c
  4897  00061C  EC53  F026         	call	_strncmp	;wreg free
  4898  000620  5010               	movf	?_strncmp^0,w,c
  4899  000622  1011               	iorwf	(?_strncmp+1)^0,w,c
  4900  000624  B4D8               	btfsc	status,2,c
  4901  000626  EF17  F003         	goto	u12161
  4902  00062A  EF19  F003         	goto	u12160
  4903  00062E                     u12161:
  4904  00062E  EF34  F003         	goto	l9338
  4905  000632                     u12160:
  4906  000632  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4907  000636  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4908  00063A  CFDE F010          	movff	postinc2,strncmp@_l
  4909  00063E  CFDD F011          	movff	postdec2,strncmp@_l+1
  4910  000642  0ECF               	movlw	low (STR_18+1)
  4911  000644  6E12               	movwf	strncmp@_r^0,c
  4912  000646  0EFF               	movlw	high (STR_18+1)
  4913  000648  6E13               	movwf	(strncmp@_r+1)^0,c
  4914  00064A  0E00               	movlw	0
  4915  00064C  6E15               	movwf	(strncmp@n+1)^0,c
  4916  00064E  0E02               	movlw	2
  4917  000650  6E14               	movwf	strncmp@n^0,c
  4918  000652  EC53  F026         	call	_strncmp	;wreg free
  4919  000656  5010               	movf	?_strncmp^0,w,c
  4920  000658  1011               	iorwf	(?_strncmp+1)^0,w,c
  4921  00065A  A4D8               	btfss	status,2,c
  4922  00065C  EF32  F003         	goto	u12171
  4923  000660  EF34  F003         	goto	u12170
  4924  000664                     u12171:
  4925  000664  EF5C  F003         	goto	l9344
  4926  000668                     u12170:
  4927  000668                     l9338:
  4928                           
  4929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4930  000668  0E02               	movlw	2
  4931  00066A  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4932  00066E  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4933  000672  26DE               	addwf	postinc2,f,c
  4934  000674  0E00               	movlw	0
  4935  000676  22DD               	addwfc	postdec2,f,c
  4936                           
  4937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4938  000678  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4939  00067C  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4940  000680  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  4941  000684  0E02               	movlw	2
  4942  000686  26DE               	addwf	postinc2,f,c
  4943  000688  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  4944  00068C  0E00               	movlw	0
  4945  00068E  22DD               	addwfc	postdec2,f,c
  4946  000690  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4947  000694  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4948  000698  CFDE F0C3          	movff	postinc2,vfpfcnvrt@ll
  4949  00069C  CFDD F0C4          	movff	postdec2,vfpfcnvrt@ll+1
  4950  0006A0  0100               	movlb	0	; () banked
  4951  0006A2  0E00               	movlw	0
  4952  0006A4  BFC4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4953  0006A6  0EFF               	movlw	-1
  4954  0006A8  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4955  0006AA  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4956  0006AC  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4957  0006AE  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4958  0006B0  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4959  0006B2  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4960  0006B4  EFE2  F002         	goto	l9330
  4961  0006B8                     l9344:
  4962                           
  4963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4964  0006B8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4965  0006BC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4966  0006C0  CFDE FFF6          	movff	postinc2,tblptrl
  4967  0006C4  CFDD FFF7          	movff	postdec2,tblptrh
  4968  0006C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4969  0006C8  6AF8               	clrf	tblptru,c
  4970  0006CA                     	endif
  4971  0006CA                     	if	0	;tblptru may be non-zero
  4972  0006CA                     	endif
  4973  0006CA  0008               	tblrd		*
  4974  0006CC  50F5               	movf	tablat,w,c
  4975  0006CE  0A64               	xorlw	100
  4976  0006D0  B4D8               	btfsc	status,2,c
  4977  0006D2  EF6D  F003         	goto	u12181
  4978  0006D6  EF6F  F003         	goto	u12180
  4979  0006DA                     u12181:
  4980  0006DA  EF82  F003         	goto	l9348
  4981  0006DE                     u12180:
  4982  0006DE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4983  0006E2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4984  0006E6  CFDE FFF6          	movff	postinc2,tblptrl
  4985  0006EA  CFDD FFF7          	movff	postdec2,tblptrh
  4986  0006EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4987  0006EE  6AF8               	clrf	tblptru,c
  4988  0006F0                     	endif
  4989  0006F0                     	if	0	;tblptru may be non-zero
  4990  0006F0                     	endif
  4991  0006F0  0008               	tblrd		*
  4992  0006F2  50F5               	movf	tablat,w,c
  4993  0006F4  0A69               	xorlw	105
  4994  0006F6  A4D8               	btfss	status,2,c
  4995  0006F8  EF80  F003         	goto	u12191
  4996  0006FC  EF82  F003         	goto	u12190
  4997  000700                     u12191:
  4998  000700  EFA9  F003         	goto	l9354
  4999  000704                     u12190:
  5000  000704                     l9348:
  5001                           
  5002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  5003  000704  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5004  000708  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5005  00070C  2ADE               	incf	postinc2,f,c
  5006  00070E  0E00               	movlw	0
  5007  000710  22DD               	addwfc	postdec2,f,c
  5008                           
  5009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5010  000712  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5011  000716  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5012  00071A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5013  00071E  0E02               	movlw	2
  5014  000720  26DE               	addwf	postinc2,f,c
  5015  000722  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5016  000726  0E00               	movlw	0
  5017  000728  22DD               	addwfc	postdec2,f,c
  5018  00072A  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5019  00072E  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5020  000732  CFDE F0C3          	movff	postinc2,vfpfcnvrt@ll
  5021  000736  CFDD F0C4          	movff	postdec2,vfpfcnvrt@ll+1
  5022  00073A  0100               	movlb	0	; () banked
  5023  00073C  0E00               	movlw	0
  5024  00073E  BFC4               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  5025  000740  0EFF               	movlw	-1
  5026  000742  6FC5               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  5027  000744  6FC6               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  5028  000746  6FC7               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  5029  000748  6FC8               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  5030  00074A  6FC9               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  5031  00074C  6FCA               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  5032  00074E  EFE2  F002         	goto	l9330
  5033  000752                     l9354:
  5034                           
  5035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  5036  000752  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5037  000756  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5038  00075A  CFDE F010          	movff	postinc2,strncmp@_l
  5039  00075E  CFDD F011          	movff	postdec2,strncmp@_l+1
  5040  000762  0EE9               	movlw	low STR_32
  5041  000764  6E12               	movwf	strncmp@_r^0,c
  5042  000766  0EFF               	movlw	high STR_32
  5043  000768  6E13               	movwf	(strncmp@_r+1)^0,c
  5044  00076A  0E00               	movlw	0
  5045  00076C  6E15               	movwf	(strncmp@n+1)^0,c
  5046  00076E  0E02               	movlw	2
  5047  000770  6E14               	movwf	strncmp@n^0,c
  5048  000772  EC53  F026         	call	_strncmp	;wreg free
  5049  000776  5010               	movf	?_strncmp^0,w,c
  5050  000778  1011               	iorwf	(?_strncmp+1)^0,w,c
  5051  00077A  B4D8               	btfsc	status,2,c
  5052  00077C  EFC2  F003         	goto	u12201
  5053  000780  EFC4  F003         	goto	u12200
  5054  000784                     u12201:
  5055  000784  EFDF  F003         	goto	l9358
  5056  000788                     u12200:
  5057  000788  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5058  00078C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5059  000790  CFDE F010          	movff	postinc2,strncmp@_l
  5060  000794  CFDD F011          	movff	postdec2,strncmp@_l+1
  5061  000798  0EEF               	movlw	low STR_36
  5062  00079A  6E12               	movwf	strncmp@_r^0,c
  5063  00079C  0EFF               	movlw	high STR_36
  5064  00079E  6E13               	movwf	(strncmp@_r+1)^0,c
  5065  0007A0  0E00               	movlw	0
  5066  0007A2  6E15               	movwf	(strncmp@n+1)^0,c
  5067  0007A4  0E02               	movlw	2
  5068  0007A6  6E14               	movwf	strncmp@n^0,c
  5069  0007A8  EC53  F026         	call	_strncmp	;wreg free
  5070  0007AC  5010               	movf	?_strncmp^0,w,c
  5071  0007AE  1011               	iorwf	(?_strncmp+1)^0,w,c
  5072  0007B0  A4D8               	btfss	status,2,c
  5073  0007B2  EFDD  F003         	goto	u12211
  5074  0007B6  EFDF  F003         	goto	u12210
  5075  0007BA                     u12211:
  5076  0007BA  EF08  F004         	goto	l9364
  5077  0007BE                     u12210:
  5078  0007BE                     l9358:
  5079                           
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5081  0007BE  0E02               	movlw	2
  5082  0007C0  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5083  0007C4  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5084  0007C8  26DE               	addwf	postinc2,f,c
  5085  0007CA  0E00               	movlw	0
  5086  0007CC  22DD               	addwfc	postdec2,f,c
  5087                           
  5088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5089  0007CE  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5090  0007D2  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5091  0007D6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5092  0007DA  0E02               	movlw	2
  5093  0007DC  26DE               	addwf	postinc2,f,c
  5094  0007DE  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5095  0007E2  0E00               	movlw	0
  5096  0007E4  22DD               	addwfc	postdec2,f,c
  5097  0007E6  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5098  0007EA  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5099  0007EE  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  5100  0007F2  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  5101  0007F6  C0B0  F0C3         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5102  0007FA  C0B1  F0C4         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5103  0007FE  0100               	movlb	0	; () banked
  5104  000800  6BC5               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5105  000802  6BC6               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5106  000804  6BC7               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5107  000806  6BC8               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5108  000808  6BC9               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5109  00080A  6BCA               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5110  00080C  EFE2  F002         	goto	l9330
  5111  000810                     l9364:
  5112                           
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5114  000810  0E66               	movlw	102
  5115  000812  0100               	movlb	0	; () banked
  5116  000814  19C0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5117  000816  A4D8               	btfss	status,2,c
  5118  000818  EF10  F004         	goto	u12221
  5119  00081C  EF12  F004         	goto	u12220
  5120  000820                     u12221:
  5121  000820  EF53  F004         	goto	l9376
  5122  000824                     u12220:
  5123  000824                     
  5124                           ; BSR set to: 0
  5125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5126  000824  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5127  000828  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5128  00082C  CFDE FFF6          	movff	postinc2,tblptrl
  5129  000830  CFDD FFF7          	movff	postdec2,tblptrh
  5130  000834                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5131  000834  6AF8               	clrf	tblptru,c
  5132  000836                     	endif
  5133  000836                     	if	0	;tblptru may be non-zero
  5134  000836                     	endif
  5135  000836  0008               	tblrd		*
  5136  000838  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  5137  00083C                     
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5140  00083C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5141  000840  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5142  000844  2ADE               	incf	postinc2,f,c
  5143  000846  0E00               	movlw	0
  5144  000848  22DD               	addwfc	postdec2,f,c
  5145  00084A                     
  5146                           ; BSR set to: 0
  5147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5148  00084A  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5149  00084E  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5150  000852  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5151  000856  0E04               	movlw	4
  5152  000858  26DE               	addwf	postinc2,f,c
  5153  00085A  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5154  00085E  0E00               	movlw	0
  5155  000860  22DD               	addwfc	postdec2,f,c
  5156  000862  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5157  000866  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5158  00086A  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5159  00086E  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5160  000872  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5161  000876  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5162  00087A                     l9372:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5166  00087A  C0A8  F064         	movff	vfpfcnvrt@fp,efgtoa@fp
  5167  00087E  C0A9  F065         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5168  000882  C0BC  F066         	movff	vfpfcnvrt@f,efgtoa@f
  5169  000886  C0BD  F067         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5170  00088A  C0BE  F068         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5171  00088E  C0BF  F069         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5172  000892  C0CD  F06A         	movff	vfpfcnvrt@c,efgtoa@c
  5173  000896  ECD4  F00A         	call	_efgtoa	;wreg free
  5174  00089A  C064  F0A8         	movff	?_efgtoa,?_vfpfcnvrt
  5175  00089E  C065  F0A9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5176  0008A2  EFD3  F00A         	goto	l913
  5177  0008A6                     l9376:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5181  0008A6  0EC0               	movlw	low vfpfcnvrt@ct
  5182  0008A8  6E10               	movwf	strncmp@_l^0,c
  5183  0008AA  0E00               	movlw	high vfpfcnvrt@ct
  5184  0008AC  6E11               	movwf	(strncmp@_l+1)^0,c
  5185  0008AE  0EEC               	movlw	low STR_41
  5186  0008B0  6E12               	movwf	strncmp@_r^0,c
  5187  0008B2  0EFF               	movlw	high STR_41
  5188  0008B4  6E13               	movwf	(strncmp@_r+1)^0,c
  5189  0008B6  0E00               	movlw	0
  5190  0008B8  6E15               	movwf	(strncmp@n+1)^0,c
  5191  0008BA  0E02               	movlw	2
  5192  0008BC  6E14               	movwf	strncmp@n^0,c
  5193  0008BE  EC53  F026         	call	_strncmp	;wreg free
  5194  0008C2  5010               	movf	?_strncmp^0,w,c
  5195  0008C4  1011               	iorwf	(?_strncmp+1)^0,w,c
  5196  0008C6  A4D8               	btfss	status,2,c
  5197  0008C8  EF68  F004         	goto	u12231
  5198  0008CC  EF6A  F004         	goto	u12230
  5199  0008D0                     u12231:
  5200  0008D0  EFE8  F004         	goto	l9392
  5201  0008D4                     u12230:
  5202  0008D4                     
  5203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5204  0008D4  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5205  0008D8  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5206  0008DC  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  5207  0008E0  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  5208  0008E4  0E01               	movlw	1
  5209  0008E6  0100               	movlb	0	; () banked
  5210  0008E8  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  5211  0008EA  0E00               	movlw	0
  5212  0008EC  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5213  0008EE  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5214  0008F2  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5215  0008F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5216  0008F6  6AF8               	clrf	tblptru,c
  5217  0008F8                     	endif
  5218  0008F8                     	if	0	;tblptru may be non-zero
  5219  0008F8                     	endif
  5220  0008F8  0008               	tblrd		*
  5221  0008FA  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  5222  0008FE  0EBF               	movlw	191
  5223  000900  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  5224  000902  0EFF               	movlw	255
  5225  000904  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5226  000906  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5227  00090A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5228  00090E  CFDE FFF6          	movff	postinc2,tblptrl
  5229  000912  CFDD FFF7          	movff	postdec2,tblptrh
  5230  000916                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5231  000916  6AF8               	clrf	tblptru,c
  5232  000918                     	endif
  5233  000918                     	if	0	;tblptru may be non-zero
  5234  000918                     	endif
  5235  000918  0008               	tblrd		*
  5236  00091A  50F5               	movf	tablat,w,c
  5237  00091C  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5238  00091E  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5239  000920  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  5240  000922  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5241  000924  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5242  000926  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5243  000928  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5244  00092A  E10A               	bnz	u12240
  5245  00092C  0E1A               	movlw	26
  5246  00092E  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5247  000930  A0D8               	btfss	status,0,c
  5248  000932  EF9D  F004         	goto	u12241
  5249  000936  EFA0  F004         	goto	u12240
  5250  00093A                     u12241:
  5251  00093A  0E01               	movlw	1
  5252  00093C  EFA1  F004         	goto	u12250
  5253  000940                     u12240:
  5254  000940  0E00               	movlw	0
  5255  000942                     u12250:
  5256  000942  6FBA               	movwf	_vfpfcnvrt$1804& (0+255),b
  5257  000944  6BBB               	clrf	(_vfpfcnvrt$1804+1)& (0+255),b
  5258  000946                     
  5259                           ; BSR set to: 0
  5260  000946  51BA               	movf	_vfpfcnvrt$1804& (0+255),w,b
  5261  000948  11BB               	iorwf	(_vfpfcnvrt$1804+1)& (0+255),w,b
  5262  00094A  B4D8               	btfsc	status,2,c
  5263  00094C  EFAA  F004         	goto	u12261
  5264  000950  EFAC  F004         	goto	u12260
  5265  000954                     u12261:
  5266  000954  EFC6  F004         	goto	l9386
  5267  000958                     u12260:
  5268  000958                     
  5269                           ; BSR set to: 0
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5271  000958  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5272  00095C  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5273  000960  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5274  000964  0E04               	movlw	4
  5275  000966  26DE               	addwf	postinc2,f,c
  5276  000968  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5277  00096C  0E00               	movlw	0
  5278  00096E  22DD               	addwfc	postdec2,f,c
  5279  000970  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5280  000974  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5281  000978  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5282  00097C  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5283  000980  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5284  000984  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5285                           
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5287  000988  EFDE  F004         	goto	l933
  5288  00098C                     l9386:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5292  00098C  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5293  000990  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5294  000994  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5295  000998  0E04               	movlw	4
  5296  00099A  26DE               	addwf	postinc2,f,c
  5297  00099C  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5298  0009A0  0E00               	movlw	0
  5299  0009A2  22DD               	addwfc	postdec2,f,c
  5300  0009A4  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5301  0009A8  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5302  0009AC  CFDE F0BC          	movff	postinc2,vfpfcnvrt@f
  5303  0009B0  CFDE F0BD          	movff	postinc2,vfpfcnvrt@f+1
  5304  0009B4  CFDE F0BE          	movff	postinc2,vfpfcnvrt@f+2
  5305  0009B8  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f+3
  5306  0009BC                     l933:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5310  0009BC  0E02               	movlw	2
  5311  0009BE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5312  0009C2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5313  0009C6  26DE               	addwf	postinc2,f,c
  5314  0009C8  0E00               	movlw	0
  5315  0009CA  22DD               	addwfc	postdec2,f,c
  5316  0009CC  EF3D  F004         	goto	l9372
  5317  0009D0                     l9392:
  5318                           
  5319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5320  0009D0  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5321  0009D4  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5322  0009D8  CFDE F010          	movff	postinc2,strncmp@_l
  5323  0009DC  CFDD F011          	movff	postdec2,strncmp@_l+1
  5324  0009E0  0EDA               	movlw	low STR_46
  5325  0009E2  6E12               	movwf	strncmp@_r^0,c
  5326  0009E4  0EFF               	movlw	high STR_46
  5327  0009E6  6E13               	movwf	(strncmp@_r+1)^0,c
  5328  0009E8  0E00               	movlw	0
  5329  0009EA  6E15               	movwf	(strncmp@n+1)^0,c
  5330  0009EC  0E03               	movlw	3
  5331  0009EE  6E14               	movwf	strncmp@n^0,c
  5332  0009F0  EC53  F026         	call	_strncmp	;wreg free
  5333  0009F4  5010               	movf	?_strncmp^0,w,c
  5334  0009F6  1011               	iorwf	(?_strncmp+1)^0,w,c
  5335  0009F8  A4D8               	btfss	status,2,c
  5336  0009FA  EF01  F005         	goto	u12271
  5337  0009FE  EF03  F005         	goto	u12270
  5338  000A02                     u12271:
  5339  000A02  EF43  F005         	goto	l9400
  5340  000A06                     u12270:
  5341  000A06                     
  5342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5343  000A06  0E03               	movlw	3
  5344  000A08  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5345  000A0C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5346  000A10  26DE               	addwf	postinc2,f,c
  5347  000A12  0E00               	movlw	0
  5348  000A14  22DD               	addwfc	postdec2,f,c
  5349                           
  5350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5351  000A16  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5352  000A1A  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5353  000A1E  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5354  000A22  0E02               	movlw	2
  5355  000A24  26DE               	addwf	postinc2,f,c
  5356  000A26  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5357  000A2A  0E00               	movlw	0
  5358  000A2C  22DD               	addwfc	postdec2,f,c
  5359  000A2E  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5360  000A32  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5361  000A36  50DF               	movf	indf2,w,c
  5362  000A38  0100               	movlb	0	; () banked
  5363  000A3A  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5364  000A3C  51B0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5365  000A3E  6FCE               	movwf	vfpfcnvrt@llu& (0+255),b
  5366  000A40  6BCF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5367  000A42  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5368  000A44  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5369  000A46  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5370  000A48  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5371  000A4A  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5372  000A4C  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5373  000A4E                     l9396:
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5377  000A4E  C0A8  F02B         	movff	vfpfcnvrt@fp,otoa@fp
  5378  000A52  C0A9  F02C         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5379  000A56  C0CE  F02D         	movff	vfpfcnvrt@llu,otoa@d
  5380  000A5A  C0CF  F02E         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5381  000A5E  C0D0  F02F         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5382  000A62  C0D1  F030         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5383  000A66  C0D2  F031         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5384  000A6A  C0D3  F032         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5385  000A6E  C0D4  F033         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5386  000A72  C0D5  F034         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5387  000A76  ECD7  F01E         	call	_otoa	;wreg free
  5388  000A7A  C02B  F0A8         	movff	?_otoa,?_vfpfcnvrt
  5389  000A7E  C02C  F0A9         	movff	?_otoa+1,?_vfpfcnvrt+1
  5390  000A82  EFD3  F00A         	goto	l913
  5391  000A86                     l9400:
  5392                           
  5393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5394  000A86  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5395  000A8A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5396  000A8E  CFDE F010          	movff	postinc2,strncmp@_l
  5397  000A92  CFDD F011          	movff	postdec2,strncmp@_l+1
  5398  000A96  0EDB               	movlw	low (STR_46+1)
  5399  000A98  6E12               	movwf	strncmp@_r^0,c
  5400  000A9A  0EFF               	movlw	high (STR_46+1)
  5401  000A9C  6E13               	movwf	(strncmp@_r+1)^0,c
  5402  000A9E  0E00               	movlw	0
  5403  000AA0  6E15               	movwf	(strncmp@n+1)^0,c
  5404  000AA2  0E02               	movlw	2
  5405  000AA4  6E14               	movwf	strncmp@n^0,c
  5406  000AA6  EC53  F026         	call	_strncmp	;wreg free
  5407  000AAA  5010               	movf	?_strncmp^0,w,c
  5408  000AAC  1011               	iorwf	(?_strncmp+1)^0,w,c
  5409  000AAE  A4D8               	btfss	status,2,c
  5410  000AB0  EF5C  F005         	goto	u12281
  5411  000AB4  EF5E  F005         	goto	u12280
  5412  000AB8                     u12281:
  5413  000AB8  EF87  F005         	goto	l9408
  5414  000ABC                     u12280:
  5415  000ABC                     
  5416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5417  000ABC  0E02               	movlw	2
  5418  000ABE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5419  000AC2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5420  000AC6  26DE               	addwf	postinc2,f,c
  5421  000AC8  0E00               	movlw	0
  5422  000ACA  22DD               	addwfc	postdec2,f,c
  5423                           
  5424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5425  000ACC  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5426  000AD0  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5427  000AD4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5428  000AD8  0E02               	movlw	2
  5429  000ADA  26DE               	addwf	postinc2,f,c
  5430  000ADC  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5431  000AE0  0E00               	movlw	0
  5432  000AE2  22DD               	addwfc	postdec2,f,c
  5433  000AE4  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5434  000AE8  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5435  000AEC  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  5436  000AF0  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  5437  000AF4  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5438  000AF8  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5439  000AFC  0100               	movlb	0	; () banked
  5440  000AFE  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5441  000B00  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5442  000B02  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5443  000B04  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5444  000B06  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5445  000B08  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5446  000B0A  EF27  F005         	goto	l9396
  5447  000B0E                     l9408:
  5448                           
  5449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5450  000B0E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5451  000B12  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5452  000B16  CFDE FFF6          	movff	postinc2,tblptrl
  5453  000B1A  CFDD FFF7          	movff	postdec2,tblptrh
  5454  000B1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5455  000B1E  6AF8               	clrf	tblptru,c
  5456  000B20                     	endif
  5457  000B20                     	if	0	;tblptru may be non-zero
  5458  000B20                     	endif
  5459  000B20  0008               	tblrd		*
  5460  000B22  50F5               	movf	tablat,w,c
  5461  000B24  0A6F               	xorlw	111
  5462  000B26  A4D8               	btfss	status,2,c
  5463  000B28  EF98  F005         	goto	u12291
  5464  000B2C  EF9A  F005         	goto	u12290
  5465  000B30                     u12291:
  5466  000B30  EFC2  F005         	goto	l9416
  5467  000B34                     u12290:
  5468  000B34                     
  5469                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5470  000B34  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5471  000B38  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5472  000B3C  2ADE               	incf	postinc2,f,c
  5473  000B3E  0E00               	movlw	0
  5474  000B40  22DD               	addwfc	postdec2,f,c
  5475                           
  5476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5477  000B42  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5478  000B46  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5479  000B4A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5480  000B4E  0E02               	movlw	2
  5481  000B50  26DE               	addwf	postinc2,f,c
  5482  000B52  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5483  000B56  0E00               	movlw	0
  5484  000B58  22DD               	addwfc	postdec2,f,c
  5485  000B5A  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5486  000B5E  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5487  000B62  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  5488  000B66  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  5489  000B6A  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5490  000B6E  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5491  000B72  0100               	movlb	0	; () banked
  5492  000B74  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5493  000B76  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5494  000B78  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5495  000B7A  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5496  000B7C  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5497  000B7E  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5498  000B80  EF27  F005         	goto	l9396
  5499  000B84                     l9416:
  5500                           
  5501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5502  000B84  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5503  000B88  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5504  000B8C  CFDE F010          	movff	postinc2,strncmp@_l
  5505  000B90  CFDD F011          	movff	postdec2,strncmp@_l+1
  5506  000B94  0EF5               	movlw	low STR_56
  5507  000B96  6E12               	movwf	strncmp@_r^0,c
  5508  000B98  0EFF               	movlw	high STR_56
  5509  000B9A  6E13               	movwf	(strncmp@_r+1)^0,c
  5510  000B9C  0E00               	movlw	0
  5511  000B9E  6E15               	movwf	(strncmp@n+1)^0,c
  5512  000BA0  0E02               	movlw	2
  5513  000BA2  6E14               	movwf	strncmp@n^0,c
  5514  000BA4  EC53  F026         	call	_strncmp	;wreg free
  5515  000BA8  5010               	movf	?_strncmp^0,w,c
  5516  000BAA  1011               	iorwf	(?_strncmp+1)^0,w,c
  5517  000BAC  A4D8               	btfss	status,2,c
  5518  000BAE  EFDB  F005         	goto	u12301
  5519  000BB2  EFDD  F005         	goto	u12300
  5520  000BB6                     u12301:
  5521  000BB6  EF06  F006         	goto	l9424
  5522  000BBA                     u12300:
  5523  000BBA                     
  5524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5525  000BBA  0E02               	movlw	2
  5526  000BBC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5527  000BC0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5528  000BC4  26DE               	addwf	postinc2,f,c
  5529  000BC6  0E00               	movlw	0
  5530  000BC8  22DD               	addwfc	postdec2,f,c
  5531                           
  5532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5533  000BCA  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5534  000BCE  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5535  000BD2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5536  000BD6  0E02               	movlw	2
  5537  000BD8  26DE               	addwf	postinc2,f,c
  5538  000BDA  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5539  000BDE  0E00               	movlw	0
  5540  000BE0  22DD               	addwfc	postdec2,f,c
  5541  000BE2  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5542  000BE6  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5543  000BEA  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  5544  000BEE  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  5545  000BF2  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5546  000BF6  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5547  000BFA  0100               	movlb	0	; () banked
  5548  000BFC  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5549  000BFE  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5550  000C00  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5551  000C02  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5552  000C04  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5553  000C06  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5554  000C08  EF27  F005         	goto	l9396
  5555  000C0C                     l9424:
  5556                           
  5557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5558  000C0C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5559  000C10  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5560  000C14  CFDE F010          	movff	postinc2,strncmp@_l
  5561  000C18  CFDD F011          	movff	postdec2,strncmp@_l+1
  5562  000C1C  0ED6               	movlw	low STR_61
  5563  000C1E  6E12               	movwf	strncmp@_r^0,c
  5564  000C20  0EFF               	movlw	high STR_61
  5565  000C22  6E13               	movwf	(strncmp@_r+1)^0,c
  5566  000C24  0E00               	movlw	0
  5567  000C26  6E15               	movwf	(strncmp@n+1)^0,c
  5568  000C28  0E03               	movlw	3
  5569  000C2A  6E14               	movwf	strncmp@n^0,c
  5570  000C2C  EC53  F026         	call	_strncmp	;wreg free
  5571  000C30  5010               	movf	?_strncmp^0,w,c
  5572  000C32  1011               	iorwf	(?_strncmp+1)^0,w,c
  5573  000C34  A4D8               	btfss	status,2,c
  5574  000C36  EF1F  F006         	goto	u12311
  5575  000C3A  EF21  F006         	goto	u12310
  5576  000C3E                     u12311:
  5577  000C3E  EF4A  F006         	goto	l9434
  5578  000C42                     u12310:
  5579  000C42                     
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5581  000C42  0E03               	movlw	3
  5582  000C44  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5583  000C48  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5584  000C4C  26DE               	addwf	postinc2,f,c
  5585  000C4E  0E00               	movlw	0
  5586  000C50  22DD               	addwfc	postdec2,f,c
  5587                           
  5588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5589  000C52  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5590  000C56  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5591  000C5A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5592  000C5E  0E02               	movlw	2
  5593  000C60  26DE               	addwf	postinc2,f,c
  5594  000C62  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5595  000C66  0E00               	movlw	0
  5596  000C68  22DD               	addwfc	postdec2,f,c
  5597  000C6A  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5598  000C6E  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5599  000C72  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  5600  000C76  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  5601  000C7A                     
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5603  000C7A  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5604  000C7E  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5605  000C82  C0F0  FFDF         	movff	_nout,indf2
  5606  000C86                     l9430:
  5607                           
  5608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5609  000C86  0E00               	movlw	0
  5610  000C88  0100               	movlb	0	; () banked
  5611  000C8A  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5612  000C8C  0E00               	movlw	0
  5613  000C8E  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
  5614  000C90  EFD3  F00A         	goto	l913
  5615  000C94                     l9434:
  5616                           
  5617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5618  000C94  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5619  000C98  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5620  000C9C  CFDE F010          	movff	postinc2,strncmp@_l
  5621  000CA0  CFDD F011          	movff	postdec2,strncmp@_l+1
  5622  000CA4  0ED7               	movlw	low (STR_61+1)
  5623  000CA6  6E12               	movwf	strncmp@_r^0,c
  5624  000CA8  0EFF               	movlw	high (STR_61+1)
  5625  000CAA  6E13               	movwf	(strncmp@_r+1)^0,c
  5626  000CAC  0E00               	movlw	0
  5627  000CAE  6E15               	movwf	(strncmp@n+1)^0,c
  5628  000CB0  0E02               	movlw	2
  5629  000CB2  6E14               	movwf	strncmp@n^0,c
  5630  000CB4  EC53  F026         	call	_strncmp	;wreg free
  5631  000CB8  5010               	movf	?_strncmp^0,w,c
  5632  000CBA  1011               	iorwf	(?_strncmp+1)^0,w,c
  5633  000CBC  A4D8               	btfss	status,2,c
  5634  000CBE  EF63  F006         	goto	u12321
  5635  000CC2  EF65  F006         	goto	u12320
  5636  000CC6                     u12321:
  5637  000CC6  EF8B  F006         	goto	l9444
  5638  000CCA                     u12320:
  5639  000CCA                     
  5640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5641  000CCA  0E02               	movlw	2
  5642  000CCC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5643  000CD0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5644  000CD4  26DE               	addwf	postinc2,f,c
  5645  000CD6  0E00               	movlw	0
  5646  000CD8  22DD               	addwfc	postdec2,f,c
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5649  000CDA  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5650  000CDE  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5651  000CE2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5652  000CE6  0E02               	movlw	2
  5653  000CE8  26DE               	addwf	postinc2,f,c
  5654  000CEA  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5655  000CEE  0E00               	movlw	0
  5656  000CF0  22DD               	addwfc	postdec2,f,c
  5657  000CF2  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5658  000CF6  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5659  000CFA  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  5660  000CFE  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  5661  000D02                     
  5662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5663  000D02  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5664  000D06  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5665  000D0A  C0F0  FFDE         	movff	_nout,postinc2
  5666  000D0E  C0F1  FFDD         	movff	_nout+1,postdec2
  5667  000D12  EF43  F006         	goto	l9430
  5668  000D16                     l9444:
  5669                           
  5670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5671  000D16  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5672  000D1A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5673  000D1E  CFDE FFF6          	movff	postinc2,tblptrl
  5674  000D22  CFDD FFF7          	movff	postdec2,tblptrh
  5675  000D26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5676  000D26  6AF8               	clrf	tblptru,c
  5677  000D28                     	endif
  5678  000D28                     	if	0	;tblptru may be non-zero
  5679  000D28                     	endif
  5680  000D28  0008               	tblrd		*
  5681  000D2A  50F5               	movf	tablat,w,c
  5682  000D2C  0A6E               	xorlw	110
  5683  000D2E  A4D8               	btfss	status,2,c
  5684  000D30  EF9C  F006         	goto	u12331
  5685  000D34  EF9E  F006         	goto	u12330
  5686  000D38                     u12331:
  5687  000D38  EFC3  F006         	goto	l9454
  5688  000D3C                     u12330:
  5689  000D3C                     
  5690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5691  000D3C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5692  000D40  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5693  000D44  2ADE               	incf	postinc2,f,c
  5694  000D46  0E00               	movlw	0
  5695  000D48  22DD               	addwfc	postdec2,f,c
  5696                           
  5697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5698  000D4A  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5699  000D4E  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5700  000D52  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5701  000D56  0E02               	movlw	2
  5702  000D58  26DE               	addwf	postinc2,f,c
  5703  000D5A  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5704  000D5E  0E00               	movlw	0
  5705  000D60  22DD               	addwfc	postdec2,f,c
  5706  000D62  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5707  000D66  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5708  000D6A  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  5709  000D6E  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  5710  000D72                     
  5711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5712  000D72  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5713  000D76  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5714  000D7A  C0F0  FFDE         	movff	_nout,postinc2
  5715  000D7E  C0F1  FFDD         	movff	_nout+1,postdec2
  5716  000D82  EF43  F006         	goto	l9430
  5717  000D86                     l9454:
  5718                           
  5719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5720  000D86  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5721  000D8A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5722  000D8E  CFDE F010          	movff	postinc2,strncmp@_l
  5723  000D92  CFDD F011          	movff	postdec2,strncmp@_l+1
  5724  000D96  0EF2               	movlw	low STR_71
  5725  000D98  6E12               	movwf	strncmp@_r^0,c
  5726  000D9A  0EFF               	movlw	high STR_71
  5727  000D9C  6E13               	movwf	(strncmp@_r+1)^0,c
  5728  000D9E  0E00               	movlw	0
  5729  000DA0  6E15               	movwf	(strncmp@n+1)^0,c
  5730  000DA2  0E02               	movlw	2
  5731  000DA4  6E14               	movwf	strncmp@n^0,c
  5732  000DA6  EC53  F026         	call	_strncmp	;wreg free
  5733  000DAA  5010               	movf	?_strncmp^0,w,c
  5734  000DAC  1011               	iorwf	(?_strncmp+1)^0,w,c
  5735  000DAE  A4D8               	btfss	status,2,c
  5736  000DB0  EFDC  F006         	goto	u12341
  5737  000DB4  EFDE  F006         	goto	u12340
  5738  000DB8                     u12341:
  5739  000DB8  EF04  F007         	goto	l9464
  5740  000DBC                     u12340:
  5741  000DBC                     
  5742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5743  000DBC  0E02               	movlw	2
  5744  000DBE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5745  000DC2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5746  000DC6  26DE               	addwf	postinc2,f,c
  5747  000DC8  0E00               	movlw	0
  5748  000DCA  22DD               	addwfc	postdec2,f,c
  5749                           
  5750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5751  000DCC  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5752  000DD0  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5753  000DD4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5754  000DD8  0E02               	movlw	2
  5755  000DDA  26DE               	addwf	postinc2,f,c
  5756  000DDC  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5757  000DE0  0E00               	movlw	0
  5758  000DE2  22DD               	addwfc	postdec2,f,c
  5759  000DE4  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5760  000DE8  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5761  000DEC  CFDE F0CB          	movff	postinc2,vfpfcnvrt@vp
  5762  000DF0  CFDD F0CC          	movff	postdec2,vfpfcnvrt@vp+1
  5763  000DF4                     
  5764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5765  000DF4  C0CB  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5766  000DF8  C0CC  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5767  000DFC  C0F0  FFDE         	movff	_nout,postinc2
  5768  000E00  C0F1  FFDD         	movff	_nout+1,postdec2
  5769  000E04  EF43  F006         	goto	l9430
  5770  000E08                     l9464:
  5771                           
  5772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5773  000E08  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5774  000E0C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5775  000E10  CFDE FFF6          	movff	postinc2,tblptrl
  5776  000E14  CFDD FFF7          	movff	postdec2,tblptrh
  5777  000E18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5778  000E18  6AF8               	clrf	tblptru,c
  5779  000E1A                     	endif
  5780  000E1A                     	if	0	;tblptru may be non-zero
  5781  000E1A                     	endif
  5782  000E1A  0008               	tblrd		*
  5783  000E1C  50F5               	movf	tablat,w,c
  5784  000E1E  0A70               	xorlw	112
  5785  000E20  A4D8               	btfss	status,2,c
  5786  000E22  EF15  F007         	goto	u12351
  5787  000E26  EF17  F007         	goto	u12350
  5788  000E2A                     u12351:
  5789  000E2A  EF5B  F007         	goto	l9472
  5790  000E2E                     u12350:
  5791  000E2E                     
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5793  000E2E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5794  000E32  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5795  000E36  2ADE               	incf	postinc2,f,c
  5796  000E38  0E00               	movlw	0
  5797  000E3A  22DD               	addwfc	postdec2,f,c
  5798                           
  5799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5800  000E3C  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5801  000E40  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5802  000E44  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5803  000E48  0E02               	movlw	2
  5804  000E4A  26DE               	addwf	postinc2,f,c
  5805  000E4C  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5806  000E50  0E00               	movlw	0
  5807  000E52  22DD               	addwfc	postdec2,f,c
  5808  000E54  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5809  000E58  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5810  000E5C  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  5811  000E60  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  5812  000E64  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5813  000E68  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5814  000E6C  0100               	movlb	0	; () banked
  5815  000E6E  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5816  000E70  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5817  000E72  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5818  000E74  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5819  000E76  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5820  000E78  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5821  000E7A                     
  5822                           ; BSR set to: 0
  5823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5824  000E7A  C0A8  F02B         	movff	vfpfcnvrt@fp,xtoa@fp
  5825  000E7E  C0A9  F02C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5826  000E82  C0CE  F02D         	movff	vfpfcnvrt@llu,xtoa@d
  5827  000E86  C0CF  F02E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5828  000E8A  C0D0  F02F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5829  000E8E  C0D1  F030         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5830  000E92  C0D2  F031         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5831  000E96  C0D3  F032         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5832  000E9A  C0D4  F033         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5833  000E9E  C0D5  F034         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5834  000EA2  0E78               	movlw	120
  5835  000EA4  6E35               	movwf	xtoa@x^0,c
  5836  000EA6  EC24  F01A         	call	_xtoa	;wreg free
  5837  000EAA  C02B  F0A8         	movff	?_xtoa,?_vfpfcnvrt
  5838  000EAE  C02C  F0A9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5839  000EB2  EFD3  F00A         	goto	l913
  5840  000EB6                     l9472:
  5841                           
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5843  000EB6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5844  000EBA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5845  000EBE  CFDE FFF6          	movff	postinc2,tblptrl
  5846  000EC2  CFDD FFF7          	movff	postdec2,tblptrh
  5847  000EC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5848  000EC6  6AF8               	clrf	tblptru,c
  5849  000EC8                     	endif
  5850  000EC8                     	if	0	;tblptru may be non-zero
  5851  000EC8                     	endif
  5852  000EC8  0008               	tblrd		*
  5853  000ECA  50F5               	movf	tablat,w,c
  5854  000ECC  0A73               	xorlw	115
  5855  000ECE  A4D8               	btfss	status,2,c
  5856  000ED0  EF6C  F007         	goto	u12361
  5857  000ED4  EF6E  F007         	goto	u12360
  5858  000ED8                     u12361:
  5859  000ED8  EF99  F007         	goto	l9480
  5860  000EDC                     u12360:
  5861  000EDC                     
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5863  000EDC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5864  000EE0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5865  000EE4  2ADE               	incf	postinc2,f,c
  5866  000EE6  0E00               	movlw	0
  5867  000EE8  22DD               	addwfc	postdec2,f,c
  5868                           
  5869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5870  000EEA  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5871  000EEE  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5872  000EF2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5873  000EF6  0E02               	movlw	2
  5874  000EF8  26DE               	addwf	postinc2,f,c
  5875  000EFA  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5876  000EFE  0E00               	movlw	0
  5877  000F00  22DD               	addwfc	postdec2,f,c
  5878  000F02  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5879  000F06  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5880  000F0A  CFDE F0B2          	movff	postinc2,vfpfcnvrt@cp
  5881  000F0E  CFDD F0B3          	movff	postdec2,vfpfcnvrt@cp+1
  5882  000F12                     
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5884  000F12  C0A8  F019         	movff	vfpfcnvrt@fp,stoa@fp
  5885  000F16  C0A9  F01A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5886  000F1A  C0B2  F01B         	movff	vfpfcnvrt@cp,stoa@s
  5887  000F1E  C0B3  F01C         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5888  000F22  EC3A  F022         	call	_stoa	;wreg free
  5889  000F26  C019  F0A8         	movff	?_stoa,?_vfpfcnvrt
  5890  000F2A  C01A  F0A9         	movff	?_stoa+1,?_vfpfcnvrt+1
  5891  000F2E  EFD3  F00A         	goto	l913
  5892  000F32                     l9480:
  5893                           
  5894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5895  000F32  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5896  000F36  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5897  000F3A  CFDE F010          	movff	postinc2,strncmp@_l
  5898  000F3E  CFDD F011          	movff	postdec2,strncmp@_l+1
  5899  000F42  0EDE               	movlw	low STR_76
  5900  000F44  6E12               	movwf	strncmp@_r^0,c
  5901  000F46  0EFF               	movlw	high STR_76
  5902  000F48  6E13               	movwf	(strncmp@_r+1)^0,c
  5903  000F4A  0E00               	movlw	0
  5904  000F4C  6E15               	movwf	(strncmp@n+1)^0,c
  5905  000F4E  0E03               	movlw	3
  5906  000F50  6E14               	movwf	strncmp@n^0,c
  5907  000F52  EC53  F026         	call	_strncmp	;wreg free
  5908  000F56  5010               	movf	?_strncmp^0,w,c
  5909  000F58  1011               	iorwf	(?_strncmp+1)^0,w,c
  5910  000F5A  A4D8               	btfss	status,2,c
  5911  000F5C  EFB2  F007         	goto	u12371
  5912  000F60  EFB4  F007         	goto	u12370
  5913  000F64                     u12371:
  5914  000F64  EFF4  F007         	goto	l9488
  5915  000F68                     u12370:
  5916  000F68                     
  5917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5918  000F68  0E03               	movlw	3
  5919  000F6A  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5920  000F6E  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5921  000F72  26DE               	addwf	postinc2,f,c
  5922  000F74  0E00               	movlw	0
  5923  000F76  22DD               	addwfc	postdec2,f,c
  5924                           
  5925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5926  000F78  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5927  000F7C  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5928  000F80  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  5929  000F84  0E02               	movlw	2
  5930  000F86  26DE               	addwf	postinc2,f,c
  5931  000F88  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  5932  000F8C  0E00               	movlw	0
  5933  000F8E  22DD               	addwfc	postdec2,f,c
  5934  000F90  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5935  000F94  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5936  000F98  50DF               	movf	indf2,w,c
  5937  000F9A  0100               	movlb	0	; () banked
  5938  000F9C  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5939  000F9E  51B0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5940  000FA0  6FCE               	movwf	vfpfcnvrt@llu& (0+255),b
  5941  000FA2  6BCF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5942  000FA4  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5943  000FA6  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5944  000FA8  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5945  000FAA  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5946  000FAC  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5947  000FAE  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5948  000FB0                     l9484:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5952  000FB0  C0A8  F02B         	movff	vfpfcnvrt@fp,utoa@fp
  5953  000FB4  C0A9  F02C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5954  000FB8  C0CE  F02D         	movff	vfpfcnvrt@llu,utoa@d
  5955  000FBC  C0CF  F02E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5956  000FC0  C0D0  F02F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5957  000FC4  C0D1  F030         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5958  000FC8  C0D2  F031         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5959  000FCC  C0D3  F032         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5960  000FD0  C0D4  F033         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5961  000FD4  C0D5  F034         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5962  000FD8  ECD3  F01D         	call	_utoa	;wreg free
  5963  000FDC  C02B  F0A8         	movff	?_utoa,?_vfpfcnvrt
  5964  000FE0  C02C  F0A9         	movff	?_utoa+1,?_vfpfcnvrt+1
  5965  000FE4  EFD3  F00A         	goto	l913
  5966  000FE8                     l9488:
  5967                           
  5968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5969  000FE8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5970  000FEC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5971  000FF0  CFDE F010          	movff	postinc2,strncmp@_l
  5972  000FF4  CFDD F011          	movff	postdec2,strncmp@_l+1
  5973  000FF8  0EDF               	movlw	low (STR_76+1)
  5974  000FFA  6E12               	movwf	strncmp@_r^0,c
  5975  000FFC  0EFF               	movlw	high (STR_76+1)
  5976  000FFE  6E13               	movwf	(strncmp@_r+1)^0,c
  5977  001000  0E00               	movlw	0
  5978  001002  6E15               	movwf	(strncmp@n+1)^0,c
  5979  001004  0E02               	movlw	2
  5980  001006  6E14               	movwf	strncmp@n^0,c
  5981  001008  EC53  F026         	call	_strncmp	;wreg free
  5982  00100C  5010               	movf	?_strncmp^0,w,c
  5983  00100E  1011               	iorwf	(?_strncmp+1)^0,w,c
  5984  001010  A4D8               	btfss	status,2,c
  5985  001012  EF0D  F008         	goto	u12381
  5986  001016  EF0F  F008         	goto	u12380
  5987  00101A                     u12381:
  5988  00101A  EF38  F008         	goto	l9496
  5989  00101E                     u12380:
  5990  00101E                     
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5992  00101E  0E02               	movlw	2
  5993  001020  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5994  001024  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5995  001028  26DE               	addwf	postinc2,f,c
  5996  00102A  0E00               	movlw	0
  5997  00102C  22DD               	addwfc	postdec2,f,c
  5998                           
  5999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6000  00102E  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6001  001032  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6002  001036  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6003  00103A  0E02               	movlw	2
  6004  00103C  26DE               	addwf	postinc2,f,c
  6005  00103E  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6006  001042  0E00               	movlw	0
  6007  001044  22DD               	addwfc	postdec2,f,c
  6008  001046  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6009  00104A  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6010  00104E  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  6011  001052  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  6012  001056  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6013  00105A  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6014  00105E  0100               	movlb	0	; () banked
  6015  001060  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6016  001062  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6017  001064  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6018  001066  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6019  001068  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6020  00106A  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6021  00106C  EFD8  F007         	goto	l9484
  6022  001070                     l9496:
  6023                           
  6024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6025  001070  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6026  001074  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6027  001078  CFDE FFF6          	movff	postinc2,tblptrl
  6028  00107C  CFDD FFF7          	movff	postdec2,tblptrh
  6029  001080                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6030  001080  6AF8               	clrf	tblptru,c
  6031  001082                     	endif
  6032  001082                     	if	0	;tblptru may be non-zero
  6033  001082                     	endif
  6034  001082  0008               	tblrd		*
  6035  001084  50F5               	movf	tablat,w,c
  6036  001086  0A75               	xorlw	117
  6037  001088  A4D8               	btfss	status,2,c
  6038  00108A  EF49  F008         	goto	u12391
  6039  00108E  EF4B  F008         	goto	u12390
  6040  001092                     u12391:
  6041  001092  EF73  F008         	goto	l9504
  6042  001096                     u12390:
  6043  001096                     
  6044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6045  001096  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6046  00109A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6047  00109E  2ADE               	incf	postinc2,f,c
  6048  0010A0  0E00               	movlw	0
  6049  0010A2  22DD               	addwfc	postdec2,f,c
  6050                           
  6051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6052  0010A4  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6053  0010A8  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6054  0010AC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6055  0010B0  0E02               	movlw	2
  6056  0010B2  26DE               	addwf	postinc2,f,c
  6057  0010B4  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6058  0010B8  0E00               	movlw	0
  6059  0010BA  22DD               	addwfc	postdec2,f,c
  6060  0010BC  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6061  0010C0  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6062  0010C4  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  6063  0010C8  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  6064  0010CC  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6065  0010D0  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6066  0010D4  0100               	movlb	0	; () banked
  6067  0010D6  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6068  0010D8  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6069  0010DA  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6070  0010DC  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6071  0010DE  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6072  0010E0  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6073  0010E2  EFD8  F007         	goto	l9484
  6074  0010E6                     l9504:
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6077  0010E6  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6078  0010EA  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6079  0010EE  CFDE F010          	movff	postinc2,strncmp@_l
  6080  0010F2  CFDD F011          	movff	postdec2,strncmp@_l+1
  6081  0010F6  0EF8               	movlw	low STR_86
  6082  0010F8  6E12               	movwf	strncmp@_r^0,c
  6083  0010FA  0EFF               	movlw	high STR_86
  6084  0010FC  6E13               	movwf	(strncmp@_r+1)^0,c
  6085  0010FE  0E00               	movlw	0
  6086  001100  6E15               	movwf	(strncmp@n+1)^0,c
  6087  001102  0E02               	movlw	2
  6088  001104  6E14               	movwf	strncmp@n^0,c
  6089  001106  EC53  F026         	call	_strncmp	;wreg free
  6090  00110A  5010               	movf	?_strncmp^0,w,c
  6091  00110C  1011               	iorwf	(?_strncmp+1)^0,w,c
  6092  00110E  A4D8               	btfss	status,2,c
  6093  001110  EF8C  F008         	goto	u12401
  6094  001114  EF8E  F008         	goto	u12400
  6095  001118                     u12401:
  6096  001118  EFB7  F008         	goto	l9512
  6097  00111C                     u12400:
  6098  00111C                     
  6099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6100  00111C  0E02               	movlw	2
  6101  00111E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6102  001122  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6103  001126  26DE               	addwf	postinc2,f,c
  6104  001128  0E00               	movlw	0
  6105  00112A  22DD               	addwfc	postdec2,f,c
  6106                           
  6107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6108  00112C  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6109  001130  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6110  001134  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6111  001138  0E02               	movlw	2
  6112  00113A  26DE               	addwf	postinc2,f,c
  6113  00113C  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6114  001140  0E00               	movlw	0
  6115  001142  22DD               	addwfc	postdec2,f,c
  6116  001144  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6117  001148  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6118  00114C  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  6119  001150  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  6120  001154  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6121  001158  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6122  00115C  0100               	movlb	0	; () banked
  6123  00115E  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6124  001160  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6125  001162  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6126  001164  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6127  001166  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6128  001168  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6129  00116A  EFD8  F007         	goto	l9484
  6130  00116E                     l9512:
  6131                           
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6133  00116E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6134  001172  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6135  001176  CFDE F010          	movff	postinc2,strncmp@_l
  6136  00117A  CFDD F011          	movff	postdec2,strncmp@_l+1
  6137  00117E  0EE2               	movlw	low STR_91
  6138  001180  6E12               	movwf	strncmp@_r^0,c
  6139  001182  0EFF               	movlw	high STR_91
  6140  001184  6E13               	movwf	(strncmp@_r+1)^0,c
  6141  001186  0E00               	movlw	0
  6142  001188  6E15               	movwf	(strncmp@n+1)^0,c
  6143  00118A  0E03               	movlw	3
  6144  00118C  6E14               	movwf	strncmp@n^0,c
  6145  00118E  EC53  F026         	call	_strncmp	;wreg free
  6146  001192  5010               	movf	?_strncmp^0,w,c
  6147  001194  1011               	iorwf	(?_strncmp+1)^0,w,c
  6148  001196  B4D8               	btfsc	status,2,c
  6149  001198  EFD0  F008         	goto	u12411
  6150  00119C  EFD2  F008         	goto	u12410
  6151  0011A0                     u12411:
  6152  0011A0  EFED  F008         	goto	l9516
  6153  0011A4                     u12410:
  6154  0011A4  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6155  0011A8  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6156  0011AC  CFDE F010          	movff	postinc2,strncmp@_l
  6157  0011B0  CFDD F011          	movff	postdec2,strncmp@_l+1
  6158  0011B4  0EC2               	movlw	low STR_95
  6159  0011B6  6E12               	movwf	strncmp@_r^0,c
  6160  0011B8  0EFF               	movlw	high STR_95
  6161  0011BA  6E13               	movwf	(strncmp@_r+1)^0,c
  6162  0011BC  0E00               	movlw	0
  6163  0011BE  6E15               	movwf	(strncmp@n+1)^0,c
  6164  0011C0  0E03               	movlw	3
  6165  0011C2  6E14               	movwf	strncmp@n^0,c
  6166  0011C4  EC53  F026         	call	_strncmp	;wreg free
  6167  0011C8  5010               	movf	?_strncmp^0,w,c
  6168  0011CA  1011               	iorwf	(?_strncmp+1)^0,w,c
  6169  0011CC  A4D8               	btfss	status,2,c
  6170  0011CE  EFEB  F008         	goto	u12421
  6171  0011D2  EFED  F008         	goto	u12420
  6172  0011D6                     u12421:
  6173  0011D6  EF43  F009         	goto	l9526
  6174  0011DA                     u12420:
  6175  0011DA                     l9516:
  6176                           
  6177                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6178  0011DA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6179  0011DE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6180  0011E2  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  6181  0011E6  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  6182  0011EA  0E02               	movlw	2
  6183  0011EC  0100               	movlb	0	; () banked
  6184  0011EE  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6185  0011F0  0E00               	movlw	0
  6186  0011F2  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6187  0011F4  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6188  0011F8  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6189  0011FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6190  0011FC  6AF8               	clrf	tblptru,c
  6191  0011FE                     	endif
  6192  0011FE                     	if	0	;tblptru may be non-zero
  6193  0011FE                     	endif
  6194  0011FE  0008               	tblrd		*
  6195  001200  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  6196  001204                     
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6199  001204  0E03               	movlw	3
  6200  001206  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6201  00120A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6202  00120E  26DE               	addwf	postinc2,f,c
  6203  001210  0E00               	movlw	0
  6204  001212  22DD               	addwfc	postdec2,f,c
  6205  001214                     
  6206                           ; BSR set to: 0
  6207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6208  001214  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6209  001218  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6210  00121C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6211  001220  0E02               	movlw	2
  6212  001222  26DE               	addwf	postinc2,f,c
  6213  001224  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6214  001228  0E00               	movlw	0
  6215  00122A  22DD               	addwfc	postdec2,f,c
  6216  00122C  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6217  001230  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6218  001234  50DF               	movf	indf2,w,c
  6219  001236  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6220  001238  51B0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6221  00123A  6FCE               	movwf	vfpfcnvrt@llu& (0+255),b
  6222  00123C  6BCF               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6223  00123E  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6224  001240  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6225  001242  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6226  001244  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6227  001246  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6228  001248  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6229  00124A                     l9522:
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6233  00124A  C0A8  F02B         	movff	vfpfcnvrt@fp,xtoa@fp
  6234  00124E  C0A9  F02C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6235  001252  C0CE  F02D         	movff	vfpfcnvrt@llu,xtoa@d
  6236  001256  C0CF  F02E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6237  00125A  C0D0  F02F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6238  00125E  C0D1  F030         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6239  001262  C0D2  F031         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6240  001266  C0D3  F032         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6241  00126A  C0D4  F033         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6242  00126E  C0D5  F034         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6243  001272  C0CD  F035         	movff	vfpfcnvrt@c,xtoa@x
  6244  001276  EC24  F01A         	call	_xtoa	;wreg free
  6245  00127A  C02B  F0A8         	movff	?_xtoa,?_vfpfcnvrt
  6246  00127E  C02C  F0A9         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6247  001282  EFD3  F00A         	goto	l913
  6248  001286                     l9526:
  6249                           
  6250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6251  001286  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6252  00128A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6253  00128E  CFDE F010          	movff	postinc2,strncmp@_l
  6254  001292  CFDD F011          	movff	postdec2,strncmp@_l+1
  6255  001296  0EE3               	movlw	low (STR_91+1)
  6256  001298  6E12               	movwf	strncmp@_r^0,c
  6257  00129A  0EFF               	movlw	high (STR_91+1)
  6258  00129C  6E13               	movwf	(strncmp@_r+1)^0,c
  6259  00129E  0E00               	movlw	0
  6260  0012A0  6E15               	movwf	(strncmp@n+1)^0,c
  6261  0012A2  0E02               	movlw	2
  6262  0012A4  6E14               	movwf	strncmp@n^0,c
  6263  0012A6  EC53  F026         	call	_strncmp	;wreg free
  6264  0012AA  5010               	movf	?_strncmp^0,w,c
  6265  0012AC  1011               	iorwf	(?_strncmp+1)^0,w,c
  6266  0012AE  B4D8               	btfsc	status,2,c
  6267  0012B0  EF5C  F009         	goto	u12431
  6268  0012B4  EF5E  F009         	goto	u12430
  6269  0012B8                     u12431:
  6270  0012B8  EF79  F009         	goto	l9530
  6271  0012BC                     u12430:
  6272  0012BC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6273  0012C0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6274  0012C4  CFDE F010          	movff	postinc2,strncmp@_l
  6275  0012C8  CFDD F011          	movff	postdec2,strncmp@_l+1
  6276  0012CC  0EC3               	movlw	low (STR_95+1)
  6277  0012CE  6E12               	movwf	strncmp@_r^0,c
  6278  0012D0  0EFF               	movlw	high (STR_95+1)
  6279  0012D2  6E13               	movwf	(strncmp@_r+1)^0,c
  6280  0012D4  0E00               	movlw	0
  6281  0012D6  6E15               	movwf	(strncmp@n+1)^0,c
  6282  0012D8  0E02               	movlw	2
  6283  0012DA  6E14               	movwf	strncmp@n^0,c
  6284  0012DC  EC53  F026         	call	_strncmp	;wreg free
  6285  0012E0  5010               	movf	?_strncmp^0,w,c
  6286  0012E2  1011               	iorwf	(?_strncmp+1)^0,w,c
  6287  0012E4  A4D8               	btfss	status,2,c
  6288  0012E6  EF77  F009         	goto	u12441
  6289  0012EA  EF79  F009         	goto	u12440
  6290  0012EE                     u12441:
  6291  0012EE  EFB6  F009         	goto	l9540
  6292  0012F2                     u12440:
  6293  0012F2                     l9530:
  6294                           
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6296  0012F2  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6297  0012F6  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6298  0012FA  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  6299  0012FE  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  6300  001302  0E01               	movlw	1
  6301  001304  0100               	movlb	0	; () banked
  6302  001306  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6303  001308  0E00               	movlw	0
  6304  00130A  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6305  00130C  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6306  001310  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6307  001314                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6308  001314  6AF8               	clrf	tblptru,c
  6309  001316                     	endif
  6310  001316                     	if	0	;tblptru may be non-zero
  6311  001316                     	endif
  6312  001316  0008               	tblrd		*
  6313  001318  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  6314  00131C                     
  6315                           ; BSR set to: 0
  6316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6317  00131C  0E02               	movlw	2
  6318  00131E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6319  001322  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6320  001326  26DE               	addwf	postinc2,f,c
  6321  001328  0E00               	movlw	0
  6322  00132A  22DD               	addwfc	postdec2,f,c
  6323  00132C                     
  6324                           ; BSR set to: 0
  6325                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6326  00132C  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6327  001330  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6328  001334  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6329  001338  0E02               	movlw	2
  6330  00133A  26DE               	addwf	postinc2,f,c
  6331  00133C  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6332  001340  0E00               	movlw	0
  6333  001342  22DD               	addwfc	postdec2,f,c
  6334  001344  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6335  001348  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6336  00134C  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  6337  001350  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  6338  001354  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6339  001358  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6340  00135C  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6341  00135E  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6342  001360  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6343  001362  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6344  001364  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6345  001366  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6346  001368  EF25  F009         	goto	l9522
  6347  00136C                     l9540:
  6348                           
  6349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6350  00136C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6351  001370  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6352  001374  CFDE FFF6          	movff	postinc2,tblptrl
  6353  001378  CFDD FFF7          	movff	postdec2,tblptrh
  6354  00137C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6355  00137C  6AF8               	clrf	tblptru,c
  6356  00137E                     	endif
  6357  00137E                     	if	0	;tblptru may be non-zero
  6358  00137E                     	endif
  6359  00137E  0008               	tblrd		*
  6360  001380  50F5               	movf	tablat,w,c
  6361  001382  0A78               	xorlw	120
  6362  001384  B4D8               	btfsc	status,2,c
  6363  001386  EFC7  F009         	goto	u12451
  6364  00138A  EFC9  F009         	goto	u12450
  6365  00138E                     u12451:
  6366  00138E  EFDC  F009         	goto	l9544
  6367  001392                     u12450:
  6368  001392  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6369  001396  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6370  00139A  CFDE FFF6          	movff	postinc2,tblptrl
  6371  00139E  CFDD FFF7          	movff	postdec2,tblptrh
  6372  0013A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6373  0013A2  6AF8               	clrf	tblptru,c
  6374  0013A4                     	endif
  6375  0013A4                     	if	0	;tblptru may be non-zero
  6376  0013A4                     	endif
  6377  0013A4  0008               	tblrd		*
  6378  0013A6  50F5               	movf	tablat,w,c
  6379  0013A8  0A58               	xorlw	88
  6380  0013AA  A4D8               	btfss	status,2,c
  6381  0013AC  EFDA  F009         	goto	u12461
  6382  0013B0  EFDC  F009         	goto	u12460
  6383  0013B4                     u12461:
  6384  0013B4  EF10  F00A         	goto	l9554
  6385  0013B8                     u12460:
  6386  0013B8                     l9544:
  6387                           
  6388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6389  0013B8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6390  0013BC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6391  0013C0  CFDE FFF6          	movff	postinc2,tblptrl
  6392  0013C4  CFDD FFF7          	movff	postdec2,tblptrh
  6393  0013C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6394  0013C8  6AF8               	clrf	tblptru,c
  6395  0013CA                     	endif
  6396  0013CA                     	if	0	;tblptru may be non-zero
  6397  0013CA                     	endif
  6398  0013CA  0008               	tblrd		*
  6399  0013CC  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  6400  0013D0                     
  6401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6402  0013D0  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6403  0013D4  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6404  0013D8  2ADE               	incf	postinc2,f,c
  6405  0013DA  0E00               	movlw	0
  6406  0013DC  22DD               	addwfc	postdec2,f,c
  6407  0013DE                     
  6408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6409  0013DE  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6410  0013E2  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6411  0013E6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6412  0013EA  0E02               	movlw	2
  6413  0013EC  26DE               	addwf	postinc2,f,c
  6414  0013EE  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6415  0013F2  0E00               	movlw	0
  6416  0013F4  22DD               	addwfc	postdec2,f,c
  6417  0013F6  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6418  0013FA  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6419  0013FE  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  6420  001402  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  6421  001406  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6422  00140A  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6423  00140E  0100               	movlb	0	; () banked
  6424  001410  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6425  001412  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6426  001414  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6427  001416  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6428  001418  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6429  00141A  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6430  00141C  EF25  F009         	goto	l9522
  6431  001420                     l9554:
  6432                           
  6433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6434  001420  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6435  001424  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6436  001428  CFDE F010          	movff	postinc2,strncmp@_l
  6437  00142C  CFDD F011          	movff	postdec2,strncmp@_l+1
  6438  001430  0EFB               	movlw	low STR_109
  6439  001432  6E12               	movwf	strncmp@_r^0,c
  6440  001434  0EFF               	movlw	high STR_109
  6441  001436  6E13               	movwf	(strncmp@_r+1)^0,c
  6442  001438  0E00               	movlw	0
  6443  00143A  6E15               	movwf	(strncmp@n+1)^0,c
  6444  00143C  0E02               	movlw	2
  6445  00143E  6E14               	movwf	strncmp@n^0,c
  6446  001440  EC53  F026         	call	_strncmp	;wreg free
  6447  001444  5010               	movf	?_strncmp^0,w,c
  6448  001446  1011               	iorwf	(?_strncmp+1)^0,w,c
  6449  001448  B4D8               	btfsc	status,2,c
  6450  00144A  EF29  F00A         	goto	u12471
  6451  00144E  EF2B  F00A         	goto	u12470
  6452  001452                     u12471:
  6453  001452  EF46  F00A         	goto	l9558
  6454  001456                     u12470:
  6455  001456  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6456  00145A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6457  00145E  CFDE F010          	movff	postinc2,strncmp@_l
  6458  001462  CFDD F011          	movff	postdec2,strncmp@_l+1
  6459  001466  0EE6               	movlw	low STR_113
  6460  001468  6E12               	movwf	strncmp@_r^0,c
  6461  00146A  0EFF               	movlw	high STR_113
  6462  00146C  6E13               	movwf	(strncmp@_r+1)^0,c
  6463  00146E  0E00               	movlw	0
  6464  001470  6E15               	movwf	(strncmp@n+1)^0,c
  6465  001472  0E02               	movlw	2
  6466  001474  6E14               	movwf	strncmp@n^0,c
  6467  001476  EC53  F026         	call	_strncmp	;wreg free
  6468  00147A  5010               	movf	?_strncmp^0,w,c
  6469  00147C  1011               	iorwf	(?_strncmp+1)^0,w,c
  6470  00147E  A4D8               	btfss	status,2,c
  6471  001480  EF44  F00A         	goto	u12481
  6472  001484  EF46  F00A         	goto	u12480
  6473  001488                     u12481:
  6474  001488  EF83  F00A         	goto	l9568
  6475  00148C                     u12480:
  6476  00148C                     l9558:
  6477                           
  6478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6479  00148C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6480  001490  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6481  001494  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  6482  001498  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  6483  00149C  0E01               	movlw	1
  6484  00149E  0100               	movlb	0	; () banked
  6485  0014A0  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  6486  0014A2  0E00               	movlw	0
  6487  0014A4  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6488  0014A6  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6489  0014AA  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6490  0014AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6491  0014AE  6AF8               	clrf	tblptru,c
  6492  0014B0                     	endif
  6493  0014B0                     	if	0	;tblptru may be non-zero
  6494  0014B0                     	endif
  6495  0014B0  0008               	tblrd		*
  6496  0014B2  CFF5 F0CD          	movff	tablat,vfpfcnvrt@c
  6497  0014B6                     
  6498                           ; BSR set to: 0
  6499                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6500  0014B6  0E02               	movlw	2
  6501  0014B8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6502  0014BC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6503  0014C0  26DE               	addwf	postinc2,f,c
  6504  0014C2  0E00               	movlw	0
  6505  0014C4  22DD               	addwfc	postdec2,f,c
  6506  0014C6                     
  6507                           ; BSR set to: 0
  6508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6509  0014C6  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6510  0014CA  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6511  0014CE  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  6512  0014D2  0E02               	movlw	2
  6513  0014D4  26DE               	addwf	postinc2,f,c
  6514  0014D6  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  6515  0014DA  0E00               	movlw	0
  6516  0014DC  22DD               	addwfc	postdec2,f,c
  6517  0014DE  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6518  0014E2  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6519  0014E6  CFDE F0B0          	movff	postinc2,??_vfpfcnvrt+2
  6520  0014EA  CFDD F0B1          	movff	postdec2,??_vfpfcnvrt+3
  6521  0014EE  C0B0  F0CE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6522  0014F2  C0B1  F0CF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6523  0014F6  6BD0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6524  0014F8  6BD1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6525  0014FA  6BD2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6526  0014FC  6BD3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6527  0014FE  6BD4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6528  001500  6BD5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6529  001502  EF25  F009         	goto	l9522
  6530  001506                     l9568:
  6531                           
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6533  001506  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6534  00150A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6535  00150E  CFDE FFF6          	movff	postinc2,tblptrl
  6536  001512  CFDD FFF7          	movff	postdec2,tblptrh
  6537  001516                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6538  001516  6AF8               	clrf	tblptru,c
  6539  001518                     	endif
  6540  001518                     	if	0	;tblptru may be non-zero
  6541  001518                     	endif
  6542  001518  0008               	tblrd		*
  6543  00151A  50F5               	movf	tablat,w,c
  6544  00151C  0A25               	xorlw	37
  6545  00151E  A4D8               	btfss	status,2,c
  6546  001520  EF94  F00A         	goto	u12491
  6547  001524  EF96  F00A         	goto	u12490
  6548  001528                     u12491:
  6549  001528  EFAE  F00A         	goto	l9578
  6550  00152C                     u12490:
  6551  00152C                     
  6552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6553  00152C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6554  001530  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6555  001534  2ADE               	incf	postinc2,f,c
  6556  001536  0E00               	movlw	0
  6557  001538  22DD               	addwfc	postdec2,f,c
  6558  00153A                     
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6560  00153A  0E00               	movlw	0
  6561  00153C  6E11               	movwf	(fputc@c+1)^0,c
  6562  00153E  0E25               	movlw	37
  6563  001540  6E10               	movwf	fputc@c^0,c
  6564  001542  C0A8  F012         	movff	vfpfcnvrt@fp,fputc@fp
  6565  001546  C0A9  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6566  00154A  EC53  F02A         	call	_fputc	;wreg free
  6567  00154E                     l9574:
  6568                           
  6569                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6570  00154E  0E00               	movlw	0
  6571  001550  0100               	movlb	0	; () banked
  6572  001552  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6573  001554  0E01               	movlw	1
  6574  001556  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
  6575  001558  EFD3  F00A         	goto	l913
  6576  00155C                     l9578:
  6577                           
  6578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6579  00155C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6580  001560  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6581  001564  2ADE               	incf	postinc2,f,c
  6582  001566  0E00               	movlw	0
  6583  001568  22DD               	addwfc	postdec2,f,c
  6584  00156A  EF43  F006         	goto	l9430
  6585  00156E                     l9584:
  6586                           
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6588  00156E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6589  001572  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6590  001576  CFDE FFF6          	movff	postinc2,tblptrl
  6591  00157A  CFDD FFF7          	movff	postdec2,tblptrh
  6592  00157E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6593  00157E  6AF8               	clrf	tblptru,c
  6594  001580                     	endif
  6595  001580                     	if	0	;tblptru may be non-zero
  6596  001580                     	endif
  6597  001580  0008               	tblrd		*
  6598  001582  50F5               	movf	tablat,w,c
  6599  001584  6E10               	movwf	fputc@c^0,c
  6600  001586  6A11               	clrf	(fputc@c+1)^0,c
  6601  001588  C0A8  F012         	movff	vfpfcnvrt@fp,fputc@fp
  6602  00158C  C0A9  F013         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6603  001590  EC53  F02A         	call	_fputc	;wreg free
  6604  001594                     
  6605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6606  001594  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6607  001598  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6608  00159C  2ADE               	incf	postinc2,f,c
  6609  00159E  0E00               	movlw	0
  6610  0015A0  22DD               	addwfc	postdec2,f,c
  6611  0015A2  EFA7  F00A         	goto	l9574
  6612  0015A6                     l913:
  6613  0015A6  0012               	return		;funcret
  6614  0015A8                     __end_of_vfpfcnvrt:
  6615                           	opt callstack 0
  6616                           
  6617 ;; *************** function _xtoa *****************
  6618 ;; Defined at:
  6619 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  6622 ;;		 -> vsnprintf@f(6), 
  6623 ;;  d               8   44[COMRAM] unsigned long long 
  6624 ;;  x               1   52[COMRAM] unsigned char 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  n               8    8[BANK0 ] unsigned long long 
  6627 ;;  c               2   18[BANK0 ] int 
  6628 ;;  i               2   16[BANK0 ] int 
  6629 ;;  w               2    6[BANK0 ] int 
  6630 ;;  p               2    4[BANK0 ] int 
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  2   42[COMRAM] int 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6640 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6643 ;;      Totals:        19      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6644 ;;Total ram usage:       39 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    9
  6647 ;; This function calls:
  6648 ;;		_isalpha
  6649 ;;		_isupper
  6650 ;;		_pad
  6651 ;;		_toupper
  6652 ;; This function is called by:
  6653 ;;		_vfpfcnvrt
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text5
  6658  003448                     __ptext5:
  6659                           	opt callstack 0
  6660  003448                     _xtoa:
  6661                           	opt callstack 17
  6662  003448                     
  6663                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6664  003448  BE46               	btfsc	(_prec+1)^0,7,c
  6665  00344A  EF29  F01A         	goto	u11651
  6666  00344E  EF2B  F01A         	goto	u11650
  6667  003452                     u11651:
  6668  003452  EF2C  F01A         	goto	l9080
  6669  003456                     u11650:
  6670  003456                     
  6671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6672  003456  9247               	bcf	_flags^0,1,c
  6673  003458                     l9080:
  6674                           
  6675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6676  003458  BE46               	btfsc	(_prec+1)^0,7,c
  6677  00345A  EF39  F01A         	goto	u11660
  6678  00345E  5046               	movf	(_prec+1)^0,w,c
  6679  003460  E106               	bnz	u11661
  6680  003462  0445               	decf	_prec^0,w,c
  6681  003464  B0D8               	btfsc	status,0,c
  6682  003466  EF37  F01A         	goto	u11661
  6683  00346A  EF39  F01A         	goto	u11660
  6684  00346E                     u11661:
  6685  00346E  EF40  F01A         	goto	l849
  6686  003472                     u11660:
  6687  003472  0E00               	movlw	0
  6688  003474  0100               	movlb	0	; () banked
  6689  003476  6F65               	movwf	(xtoa@p+1)& (0+255),b
  6690  003478  0E01               	movlw	1
  6691  00347A  6F64               	movwf	xtoa@p& (0+255),b
  6692  00347C  EF44  F01A         	goto	l851
  6693  003480                     l849:
  6694  003480  C045  F064         	movff	_prec,xtoa@p
  6695  003484  C046  F065         	movff	_prec+1,xtoa@p+1
  6696  003488                     l851:
  6697                           
  6698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6699  003488  C043  F066         	movff	_width,xtoa@w
  6700  00348C  C044  F067         	movff	_width+1,xtoa@w+1
  6701                           
  6702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6703  003490  A847               	btfss	_flags^0,4,c
  6704  003492  EF4D  F01A         	goto	u11671
  6705  003496  EF4F  F01A         	goto	u11670
  6706  00349A                     u11671:
  6707  00349A  EF54  F01A         	goto	l9086
  6708  00349E                     u11670:
  6709  00349E                     
  6710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6711  00349E  0100               	movlb	0	; () banked
  6712  0034A0  0EFE               	movlw	254
  6713  0034A2  2766               	addwf	xtoa@w& (0+255),f,b
  6714  0034A4  0EFF               	movlw	255
  6715  0034A6  2367               	addwfc	(xtoa@w+1)& (0+255),f,b
  6716  0034A8                     l9086:
  6717                           
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6719  0034A8  C02D  F068         	movff	xtoa@d,xtoa@n
  6720  0034AC  C02E  F069         	movff	xtoa@d+1,xtoa@n+1
  6721  0034B0  C02F  F06A         	movff	xtoa@d+2,xtoa@n+2
  6722  0034B4  C030  F06B         	movff	xtoa@d+3,xtoa@n+3
  6723  0034B8  C031  F06C         	movff	xtoa@d+4,xtoa@n+4
  6724  0034BC  C032  F06D         	movff	xtoa@d+5,xtoa@n+5
  6725  0034C0  C033  F06E         	movff	xtoa@d+6,xtoa@n+6
  6726  0034C4  C034  F06F         	movff	xtoa@d+7,xtoa@n+7
  6727  0034C8                     
  6728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6729  0034C8  0E00               	movlw	0
  6730  0034CA  0100               	movlb	0	; () banked
  6731  0034CC  6F71               	movwf	(xtoa@i+1)& (0+255),b
  6732  0034CE  0E4F               	movlw	79
  6733  0034D0  6F70               	movwf	xtoa@i& (0+255),b
  6734  0034D2                     
  6735                           ; BSR set to: 0
  6736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6737  0034D2  0E00               	movlw	0
  6738  0034D4  0101               	movlb	1	; () banked
  6739  0034D6  6FBB               	movwf	(_dbuf+79)& (0+255),b
  6740                           
  6741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6742  0034D8  EF22  F01B         	goto	l9122
  6743  0034DC                     l9092:
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6747  0034DC  0770               	decf	xtoa@i& (0+255),f,b
  6748  0034DE  A0D8               	btfss	status,0,c
  6749  0034E0  0771               	decf	(xtoa@i+1)& (0+255),f,b
  6750  0034E2                     
  6751                           ; BSR set to: 0
  6752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6753  0034E2  0E0F               	movlw	15
  6754  0034E4  1568               	andwf	xtoa@n& (0+255),w,b
  6755  0034E6  6F72               	movwf	xtoa@c& (0+255),b
  6756  0034E8  6B73               	clrf	(xtoa@c+1)& (0+255),b
  6757  0034EA                     
  6758                           ; BSR set to: 0
  6759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6760  0034EA  BF73               	btfsc	(xtoa@c+1)& (0+255),7,b
  6761  0034EC  EF81  F01A         	goto	u11681
  6762  0034F0  5173               	movf	(xtoa@c+1)& (0+255),w,b
  6763  0034F2  E109               	bnz	u11680
  6764  0034F4  0E0A               	movlw	10
  6765  0034F6  5D72               	subwf	xtoa@c& (0+255),w,b
  6766  0034F8  A0D8               	btfss	status,0,c
  6767  0034FA  EF81  F01A         	goto	u11681
  6768  0034FE  EF83  F01A         	goto	u11680
  6769  003502                     u11681:
  6770  003502  EF8B  F01A         	goto	l9100
  6771  003506                     u11680:
  6772  003506                     
  6773                           ; BSR set to: 0
  6774  003506  0E57               	movlw	87
  6775  003508  2572               	addwf	xtoa@c& (0+255),w,b
  6776  00350A  6F72               	movwf	xtoa@c& (0+255),b
  6777  00350C  0E00               	movlw	0
  6778  00350E  2173               	addwfc	(xtoa@c+1)& (0+255),w,b
  6779  003510  6F73               	movwf	(xtoa@c+1)& (0+255),b
  6780  003512  EF91  F01A         	goto	l858
  6781  003516                     l9100:
  6782                           
  6783                           ; BSR set to: 0
  6784  003516  0E30               	movlw	48
  6785  003518  2572               	addwf	xtoa@c& (0+255),w,b
  6786  00351A  6F72               	movwf	xtoa@c& (0+255),b
  6787  00351C  0E00               	movlw	0
  6788  00351E  2173               	addwfc	(xtoa@c+1)& (0+255),w,b
  6789  003520  6F73               	movwf	(xtoa@c+1)& (0+255),b
  6790  003522                     l858:
  6791                           
  6792                           ; BSR set to: 0
  6793  003522  0EBF               	movlw	191
  6794  003524  6E36               	movwf	??_xtoa^0,c
  6795  003526  0EFF               	movlw	255
  6796  003528  6E37               	movwf	(??_xtoa+1)^0,c
  6797  00352A  5035               	movf	xtoa@x^0,w,c
  6798  00352C  6E38               	movwf	(??_xtoa+2)^0,c
  6799  00352E  6A39               	clrf	(??_xtoa+3)^0,c
  6800  003530  5036               	movf	??_xtoa^0,w,c
  6801  003532  2638               	addwf	(??_xtoa+2)^0,f,c
  6802  003534  5037               	movf	(??_xtoa+1)^0,w,c
  6803  003536  2239               	addwfc	(??_xtoa+3)^0,f,c
  6804  003538  5039               	movf	(??_xtoa+3)^0,w,c
  6805  00353A  E10A               	bnz	u11690
  6806  00353C  0E1A               	movlw	26
  6807  00353E  5C38               	subwf	(??_xtoa+2)^0,w,c
  6808  003540  A0D8               	btfss	status,0,c
  6809  003542  EFA5  F01A         	goto	u11691
  6810  003546  EFA8  F01A         	goto	u11690
  6811  00354A                     u11691:
  6812  00354A  0E01               	movlw	1
  6813  00354C  EFA9  F01A         	goto	u11700
  6814  003550                     u11690:
  6815  003550  0E00               	movlw	0
  6816  003552                     u11700:
  6817  003552  6F60               	movwf	_xtoa$1767& (0+255),b
  6818  003554  6B61               	clrf	(_xtoa$1767+1)& (0+255),b
  6819  003556                     
  6820                           ; BSR set to: 0
  6821  003556  5160               	movf	_xtoa$1767& (0+255),w,b
  6822  003558  1161               	iorwf	(_xtoa$1767+1)& (0+255),w,b
  6823  00355A  B4D8               	btfsc	status,2,c
  6824  00355C  EFB2  F01A         	goto	u11711
  6825  003560  EFB4  F01A         	goto	u11710
  6826  003564                     u11711:
  6827  003564  EFE4  F01A         	goto	l9114
  6828  003568                     u11710:
  6829  003568                     
  6830                           ; BSR set to: 0
  6831  003568  0E9F               	movlw	159
  6832  00356A  6E36               	movwf	??_xtoa^0,c
  6833  00356C  0EFF               	movlw	255
  6834  00356E  6E37               	movwf	(??_xtoa+1)^0,c
  6835  003570  0E20               	movlw	32
  6836  003572  1172               	iorwf	xtoa@c& (0+255),w,b
  6837  003574  6E38               	movwf	(??_xtoa+2)^0,c
  6838  003576  0E00               	movlw	0
  6839  003578  1173               	iorwf	(xtoa@c+1)& (0+255),w,b
  6840  00357A  6E39               	movwf	(??_xtoa+3)^0,c
  6841  00357C  5036               	movf	??_xtoa^0,w,c
  6842  00357E  2638               	addwf	(??_xtoa+2)^0,f,c
  6843  003580  5037               	movf	(??_xtoa+1)^0,w,c
  6844  003582  2239               	addwfc	(??_xtoa+3)^0,f,c
  6845  003584  5039               	movf	(??_xtoa+3)^0,w,c
  6846  003586  E10A               	bnz	u11720
  6847  003588  0E1A               	movlw	26
  6848  00358A  5C38               	subwf	(??_xtoa+2)^0,w,c
  6849  00358C  A0D8               	btfss	status,0,c
  6850  00358E  EFCB  F01A         	goto	u11721
  6851  003592  EFCE  F01A         	goto	u11720
  6852  003596                     u11721:
  6853  003596  0E01               	movlw	1
  6854  003598  EFCF  F01A         	goto	u11730
  6855  00359C                     u11720:
  6856  00359C  0E00               	movlw	0
  6857  00359E                     u11730:
  6858  00359E  6F62               	movwf	_xtoa$1768& (0+255),b
  6859  0035A0  6B63               	clrf	(_xtoa$1768+1)& (0+255),b
  6860  0035A2                     
  6861                           ; BSR set to: 0
  6862  0035A2  5162               	movf	_xtoa$1768& (0+255),w,b
  6863  0035A4  1163               	iorwf	(_xtoa$1768+1)& (0+255),w,b
  6864  0035A6  B4D8               	btfsc	status,2,c
  6865  0035A8  EFD8  F01A         	goto	u11741
  6866  0035AC  EFDA  F01A         	goto	u11740
  6867  0035B0                     u11741:
  6868  0035B0  EFE4  F01A         	goto	l9114
  6869  0035B4                     u11740:
  6870  0035B4                     
  6871                           ; BSR set to: 0
  6872                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6873  0035B4  C072  F016         	movff	xtoa@c,toupper@c
  6874  0035B8  C073  F017         	movff	xtoa@c+1,toupper@c+1
  6875  0035BC  EC57  F02D         	call	_toupper	;wreg free
  6876  0035C0  C016  F072         	movff	?_toupper,xtoa@c
  6877  0035C4  C017  F073         	movff	?_toupper+1,xtoa@c+1
  6878  0035C8                     l9114:
  6879                           
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6881  0035C8  0E6C               	movlw	low _dbuf
  6882  0035CA  0100               	movlb	0	; () banked
  6883  0035CC  2570               	addwf	xtoa@i& (0+255),w,b
  6884  0035CE  6ED9               	movwf	fsr2l,c
  6885  0035D0  0E01               	movlw	high _dbuf
  6886  0035D2  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  6887  0035D4  6EDA               	movwf	fsr2h,c
  6888  0035D6  C072  FFDF         	movff	xtoa@c,indf2
  6889  0035DA                     
  6890                           ; BSR set to: 0
  6891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6892  0035DA  0764               	decf	xtoa@p& (0+255),f,b
  6893  0035DC  A0D8               	btfss	status,0,c
  6894  0035DE  0765               	decf	(xtoa@p+1)& (0+255),f,b
  6895  0035E0                     
  6896                           ; BSR set to: 0
  6897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6898  0035E0  0766               	decf	xtoa@w& (0+255),f,b
  6899  0035E2  A0D8               	btfss	status,0,c
  6900  0035E4  0767               	decf	(xtoa@w+1)& (0+255),f,b
  6901  0035E6                     
  6902                           ; BSR set to: 0
  6903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6904  0035E6  C068  F036         	movff	xtoa@n,??_xtoa
  6905  0035EA  C069  F037         	movff	xtoa@n+1,??_xtoa+1
  6906  0035EE  C06A  F038         	movff	xtoa@n+2,??_xtoa+2
  6907  0035F2  C06B  F039         	movff	xtoa@n+3,??_xtoa+3
  6908  0035F6  C06C  F03A         	movff	xtoa@n+4,??_xtoa+4
  6909  0035FA  C06D  F03B         	movff	xtoa@n+5,??_xtoa+5
  6910  0035FE  C06E  F03C         	movff	xtoa@n+6,??_xtoa+6
  6911  003602  C06F  F03D         	movff	xtoa@n+7,??_xtoa+7
  6912  003606  0E05               	movlw	5
  6913  003608  EF0F  F01B         	goto	u11750
  6914  00360C                     u11755:
  6915  00360C  90D8               	bcf	status,0,c
  6916  00360E  323D               	rrcf	(??_xtoa+7)^0,f,c
  6917  003610  323C               	rrcf	(??_xtoa+6)^0,f,c
  6918  003612  323B               	rrcf	(??_xtoa+5)^0,f,c
  6919  003614  323A               	rrcf	(??_xtoa+4)^0,f,c
  6920  003616  3239               	rrcf	(??_xtoa+3)^0,f,c
  6921  003618  3238               	rrcf	(??_xtoa+2)^0,f,c
  6922  00361A  3237               	rrcf	(??_xtoa+1)^0,f,c
  6923  00361C  3236               	rrcf	??_xtoa^0,f,c
  6924  00361E                     u11750:
  6925  00361E  2EE8               	decfsz	wreg,f,c
  6926  003620  EF06  F01B         	goto	u11755
  6927  003624  C036  F068         	movff	??_xtoa,xtoa@n
  6928  003628  C037  F069         	movff	??_xtoa+1,xtoa@n+1
  6929  00362C  C038  F06A         	movff	??_xtoa+2,xtoa@n+2
  6930  003630  C039  F06B         	movff	??_xtoa+3,xtoa@n+3
  6931  003634  C03A  F06C         	movff	??_xtoa+4,xtoa@n+4
  6932  003638  C03B  F06D         	movff	??_xtoa+5,xtoa@n+5
  6933  00363C  C03C  F06E         	movff	??_xtoa+6,xtoa@n+6
  6934  003640  C03D  F06F         	movff	??_xtoa+7,xtoa@n+7
  6935  003644                     l9122:
  6936                           
  6937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6938  003644  0100               	movlb	0	; () banked
  6939  003646  BF71               	btfsc	(xtoa@i+1)& (0+255),7,b
  6940  003648  EF2F  F01B         	goto	u11761
  6941  00364C  5171               	movf	(xtoa@i+1)& (0+255),w,b
  6942  00364E  E109               	bnz	u11760
  6943  003650  0E02               	movlw	2
  6944  003652  5D70               	subwf	xtoa@i& (0+255),w,b
  6945  003654  A0D8               	btfss	status,0,c
  6946  003656  EF2F  F01B         	goto	u11761
  6947  00365A  EF31  F01B         	goto	u11760
  6948  00365E                     u11761:
  6949  00365E  EF61  F01B         	goto	l872
  6950  003662                     u11760:
  6951  003662                     
  6952                           ; BSR set to: 0
  6953  003662  5168               	movf	xtoa@n& (0+255),w,b
  6954  003664  1169               	iorwf	(xtoa@n+1)& (0+255),w,b
  6955  003666  116A               	iorwf	(xtoa@n+2)& (0+255),w,b
  6956  003668  116B               	iorwf	(xtoa@n+3)& (0+255),w,b
  6957  00366A  116C               	iorwf	(xtoa@n+4)& (0+255),w,b
  6958  00366C  116D               	iorwf	(xtoa@n+5)& (0+255),w,b
  6959  00366E  116E               	iorwf	(xtoa@n+6)& (0+255),w,b
  6960  003670  116F               	iorwf	(xtoa@n+7)& (0+255),w,b
  6961  003672  A4D8               	btfss	status,2,c
  6962  003674  EF3E  F01B         	goto	u11771
  6963  003678  EF40  F01B         	goto	u11770
  6964  00367C                     u11771:
  6965  00367C  EF6E  F01A         	goto	l9092
  6966  003680                     u11770:
  6967  003680                     
  6968                           ; BSR set to: 0
  6969  003680  BF65               	btfsc	(xtoa@p+1)& (0+255),7,b
  6970  003682  EF4D  F01B         	goto	u11780
  6971  003686  5165               	movf	(xtoa@p+1)& (0+255),w,b
  6972  003688  E106               	bnz	u11781
  6973  00368A  0564               	decf	xtoa@p& (0+255),w,b
  6974  00368C  B0D8               	btfsc	status,0,c
  6975  00368E  EF4B  F01B         	goto	u11781
  6976  003692  EF4D  F01B         	goto	u11780
  6977  003696                     u11781:
  6978  003696  EF6E  F01A         	goto	l9092
  6979  00369A                     u11780:
  6980  00369A                     
  6981                           ; BSR set to: 0
  6982  00369A  BF67               	btfsc	(xtoa@w+1)& (0+255),7,b
  6983  00369C  EF58  F01B         	goto	u11791
  6984  0036A0  5167               	movf	(xtoa@w+1)& (0+255),w,b
  6985  0036A2  E108               	bnz	u11790
  6986  0036A4  0566               	decf	xtoa@w& (0+255),w,b
  6987  0036A6  A0D8               	btfss	status,0,c
  6988  0036A8  EF58  F01B         	goto	u11791
  6989  0036AC  EF5A  F01B         	goto	u11790
  6990  0036B0                     u11791:
  6991  0036B0  EF61  F01B         	goto	l872
  6992  0036B4                     u11790:
  6993  0036B4                     
  6994                           ; BSR set to: 0
  6995  0036B4  B247               	btfsc	_flags^0,1,c
  6996  0036B6  EF5F  F01B         	goto	u11801
  6997  0036BA  EF61  F01B         	goto	u11800
  6998  0036BE                     u11801:
  6999  0036BE  EF6E  F01A         	goto	l9092
  7000  0036C2                     u11800:
  7001  0036C2                     l872:
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7005  0036C2  A847               	btfss	_flags^0,4,c
  7006  0036C4  EF66  F01B         	goto	u11811
  7007  0036C8  EF68  F01B         	goto	u11810
  7008  0036CC                     u11811:
  7009  0036CC  EF7E  F01B         	goto	l9138
  7010  0036D0                     u11810:
  7011  0036D0                     
  7012                           ; BSR set to: 0
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7014  0036D0  0770               	decf	xtoa@i& (0+255),f,b
  7015  0036D2  A0D8               	btfss	status,0,c
  7016  0036D4  0771               	decf	(xtoa@i+1)& (0+255),f,b
  7017  0036D6                     
  7018                           ; BSR set to: 0
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7020  0036D6  0E6C               	movlw	low _dbuf
  7021  0036D8  2570               	addwf	xtoa@i& (0+255),w,b
  7022  0036DA  6ED9               	movwf	fsr2l,c
  7023  0036DC  0E01               	movlw	high _dbuf
  7024  0036DE  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  7025  0036E0  6EDA               	movwf	fsr2h,c
  7026  0036E2  C035  FFDF         	movff	xtoa@x,indf2
  7027  0036E6                     
  7028                           ; BSR set to: 0
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7030  0036E6  0770               	decf	xtoa@i& (0+255),f,b
  7031  0036E8  A0D8               	btfss	status,0,c
  7032  0036EA  0771               	decf	(xtoa@i+1)& (0+255),f,b
  7033                           
  7034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7035  0036EC  0E6C               	movlw	low _dbuf
  7036  0036EE  2570               	addwf	xtoa@i& (0+255),w,b
  7037  0036F0  6ED9               	movwf	fsr2l,c
  7038  0036F2  0E01               	movlw	high _dbuf
  7039  0036F4  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  7040  0036F6  6EDA               	movwf	fsr2h,c
  7041  0036F8  0E30               	movlw	48
  7042  0036FA  6EDF               	movwf	indf2,c
  7043  0036FC                     l9138:
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7047  0036FC  C02B  F020         	movff	xtoa@fp,pad@fp
  7048  003700  C02C  F021         	movff	xtoa@fp+1,pad@fp+1
  7049  003704  0E6C               	movlw	low _dbuf
  7050  003706  2570               	addwf	xtoa@i& (0+255),w,b
  7051  003708  6E22               	movwf	pad@buf^0,c
  7052  00370A  0E01               	movlw	high _dbuf
  7053  00370C  2171               	addwfc	(xtoa@i+1)& (0+255),w,b
  7054  00370E  6E23               	movwf	(pad@buf+1)^0,c
  7055  003710  C066  F024         	movff	xtoa@w,pad@p
  7056  003714  C067  F025         	movff	xtoa@w+1,pad@p+1
  7057  003718  EC1A  F02B         	call	_pad	;wreg free
  7058  00371C  C020  F02B         	movff	?_pad,?_xtoa
  7059  003720  C021  F02C         	movff	?_pad+1,?_xtoa+1
  7060  003724  0012               	return		;funcret
  7061  003726                     __end_of_xtoa:
  7062                           	opt callstack 0
  7063                           
  7064 ;; *************** function _toupper *****************
  7065 ;; Defined at:
  7066 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  c               2   21[COMRAM] int 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  2   21[COMRAM] int 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7084 ;;Total ram usage:        8 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    6
  7087 ;; This function calls:
  7088 ;;		_islower
  7089 ;; This function is called by:
  7090 ;;		_xtoa
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text6
  7095  005AAE                     __ptext6:
  7096                           	opt callstack 0
  7097  005AAE                     _toupper:
  7098                           	opt callstack 19
  7099  005AAE  0E9F               	movlw	159
  7100  005AB0  6E18               	movwf	??_toupper^0,c
  7101  005AB2  0EFF               	movlw	255
  7102  005AB4  6E19               	movwf	(??_toupper+1)^0,c
  7103  005AB6  C016  F01A         	movff	toupper@c,??_toupper+2
  7104  005ABA  C017  F01B         	movff	toupper@c+1,??_toupper+3
  7105  005ABE  5018               	movf	??_toupper^0,w,c
  7106  005AC0  261A               	addwf	(??_toupper+2)^0,f,c
  7107  005AC2  5019               	movf	(??_toupper+1)^0,w,c
  7108  005AC4  221B               	addwfc	(??_toupper+3)^0,f,c
  7109  005AC6  501B               	movf	(??_toupper+3)^0,w,c
  7110  005AC8  E10A               	bnz	u9730
  7111  005ACA  0E1A               	movlw	26
  7112  005ACC  5C1A               	subwf	(??_toupper+2)^0,w,c
  7113  005ACE  A0D8               	btfss	status,0,c
  7114  005AD0  EF6C  F02D         	goto	u9731
  7115  005AD4  EF6F  F02D         	goto	u9730
  7116  005AD8                     u9731:
  7117  005AD8  0E01               	movlw	1
  7118  005ADA  EF70  F02D         	goto	u9740
  7119  005ADE                     u9730:
  7120  005ADE  0E00               	movlw	0
  7121  005AE0                     u9740:
  7122  005AE0  6E1C               	movwf	_toupper$2503^0,c
  7123  005AE2  6A1D               	clrf	(_toupper$2503+1)^0,c
  7124  005AE4  501C               	movf	_toupper$2503^0,w,c
  7125  005AE6  101D               	iorwf	(_toupper$2503+1)^0,w,c
  7126  005AE8  B4D8               	btfsc	status,2,c
  7127  005AEA  EF79  F02D         	goto	u9751
  7128  005AEE  EF7B  F02D         	goto	u9750
  7129  005AF2                     u9751:
  7130  005AF2  EF81  F02D         	goto	l1797
  7131  005AF6                     u9750:
  7132  005AF6  0E5F               	movlw	95
  7133  005AF8  1416               	andwf	toupper@c^0,w,c
  7134  005AFA  6E16               	movwf	?_toupper^0,c
  7135  005AFC  6A17               	clrf	(?_toupper+1)^0,c
  7136  005AFE  EF85  F02D         	goto	l1802
  7137  005B02                     l1797:
  7138  005B02  C016  F016         	movff	toupper@c,?_toupper
  7139  005B06  C017  F017         	movff	toupper@c+1,?_toupper+1
  7140  005B0A                     l1802:
  7141  005B0A  0012               	return		;funcret
  7142  005B0C                     __end_of_toupper:
  7143                           	opt callstack 0
  7144                           
  7145 ;; *************** function _islower *****************
  7146 ;; Defined at:
  7147 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  c               2   15[COMRAM] int 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  2   15[COMRAM] int 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2, status,0
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;Total ram usage:        6 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    5
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_toupper
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text7
  7176  005EC8                     __ptext7:
  7177                           	opt callstack 0
  7178  005EC8                     _islower:
  7179                           	opt callstack 19
  7180  005EC8  0E9F               	movlw	159
  7181  005ECA  6E12               	movwf	??_islower^0,c
  7182  005ECC  0EFF               	movlw	255
  7183  005ECE  6E13               	movwf	(??_islower+1)^0,c
  7184  005ED0  C010  F014         	movff	islower@c,??_islower+2
  7185  005ED4  C011  F015         	movff	islower@c+1,??_islower+3
  7186  005ED8  5012               	movf	??_islower^0,w,c
  7187  005EDA  2614               	addwf	(??_islower+2)^0,f,c
  7188  005EDC  5013               	movf	(??_islower+1)^0,w,c
  7189  005EDE  2215               	addwfc	(??_islower+3)^0,f,c
  7190  005EE0  5015               	movf	(??_islower+3)^0,w,c
  7191  005EE2  E10A               	bnz	u9410
  7192  005EE4  0E1A               	movlw	26
  7193  005EE6  5C14               	subwf	(??_islower+2)^0,w,c
  7194  005EE8  A0D8               	btfss	status,0,c
  7195  005EEA  EF79  F02F         	goto	u9411
  7196  005EEE  EF7C  F02F         	goto	u9410
  7197  005EF2                     u9411:
  7198  005EF2  0E01               	movlw	1
  7199  005EF4  EF7D  F02F         	goto	u9420
  7200  005EF8                     u9410:
  7201  005EF8  0E00               	movlw	0
  7202  005EFA                     u9420:
  7203  005EFA  6E10               	movwf	?_islower^0,c
  7204  005EFC  6A11               	clrf	(?_islower+1)^0,c
  7205  005EFE  0012               	return		;funcret
  7206  005F00                     __end_of_islower:
  7207                           	opt callstack 0
  7208                           
  7209 ;; *************** function _isalpha *****************
  7210 ;; Defined at:
  7211 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  c               2   15[COMRAM] int 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  2   15[COMRAM] int 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;Total ram usage:        6 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    5
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_xtoa
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text8
  7240  005E52                     __ptext8:
  7241                           	opt callstack 0
  7242  005E52                     _isalpha:
  7243                           	opt callstack 20
  7244  005E52  0E9F               	movlw	159
  7245  005E54  6E12               	movwf	??_isalpha^0,c
  7246  005E56  0EFF               	movlw	255
  7247  005E58  6E13               	movwf	(??_isalpha+1)^0,c
  7248  005E5A  0E20               	movlw	32
  7249  005E5C  1010               	iorwf	isalpha@c^0,w,c
  7250  005E5E  6E14               	movwf	(??_isalpha+2)^0,c
  7251  005E60  0E00               	movlw	0
  7252  005E62  1011               	iorwf	(isalpha@c+1)^0,w,c
  7253  005E64  6E15               	movwf	(??_isalpha+3)^0,c
  7254  005E66  5012               	movf	??_isalpha^0,w,c
  7255  005E68  2614               	addwf	(??_isalpha+2)^0,f,c
  7256  005E6A  5013               	movf	(??_isalpha+1)^0,w,c
  7257  005E6C  2215               	addwfc	(??_isalpha+3)^0,f,c
  7258  005E6E  5015               	movf	(??_isalpha+3)^0,w,c
  7259  005E70  E10A               	bnz	u9710
  7260  005E72  0E1A               	movlw	26
  7261  005E74  5C14               	subwf	(??_isalpha+2)^0,w,c
  7262  005E76  A0D8               	btfss	status,0,c
  7263  005E78  EF40  F02F         	goto	u9711
  7264  005E7C  EF43  F02F         	goto	u9710
  7265  005E80                     u9711:
  7266  005E80  0E01               	movlw	1
  7267  005E82  EF44  F02F         	goto	u9720
  7268  005E86                     u9710:
  7269  005E86  0E00               	movlw	0
  7270  005E88                     u9720:
  7271  005E88  6E10               	movwf	?_isalpha^0,c
  7272  005E8A  6A11               	clrf	(?_isalpha+1)^0,c
  7273  005E8C  0012               	return		;funcret
  7274  005E8E                     __end_of_isalpha:
  7275                           	opt callstack 0
  7276                           
  7277 ;; *************** function _utoa *****************
  7278 ;; Defined at:
  7279 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  7282 ;;		 -> vsnprintf@f(6), 
  7283 ;;  d               8   44[COMRAM] unsigned long long 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  n               8    4[BANK0 ] unsigned long long 
  7286 ;;  i               2   12[BANK0 ] int 
  7287 ;;  w               2    2[BANK0 ] int 
  7288 ;;  p               2    0[BANK0 ] int 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  2   42[COMRAM] int 
  7291 ;; Registers used:
  7292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7298 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Totals:        18      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;Total ram usage:       32 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    9
  7305 ;; This function calls:
  7306 ;;		___lodiv
  7307 ;;		___lomod
  7308 ;;		_pad
  7309 ;; This function is called by:
  7310 ;;		_vfpfcnvrt
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text9
  7315  003BA6                     __ptext9:
  7316                           	opt callstack 0
  7317  003BA6                     _utoa:
  7318                           	opt callstack 17
  7319  003BA6                     
  7320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7321  003BA6  BE46               	btfsc	(_prec+1)^0,7,c
  7322  003BA8  EFD8  F01D         	goto	u11581
  7323  003BAC  EFDA  F01D         	goto	u11580
  7324  003BB0                     u11581:
  7325  003BB0  EFDB  F01D         	goto	l9044
  7326  003BB4                     u11580:
  7327  003BB4                     
  7328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7329  003BB4  9247               	bcf	_flags^0,1,c
  7330  003BB6                     l9044:
  7331                           
  7332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7333  003BB6  BE46               	btfsc	(_prec+1)^0,7,c
  7334  003BB8  EFE8  F01D         	goto	u11590
  7335  003BBC  5046               	movf	(_prec+1)^0,w,c
  7336  003BBE  E106               	bnz	u11591
  7337  003BC0  0445               	decf	_prec^0,w,c
  7338  003BC2  B0D8               	btfsc	status,0,c
  7339  003BC4  EFE6  F01D         	goto	u11591
  7340  003BC8  EFE8  F01D         	goto	u11590
  7341  003BCC                     u11591:
  7342  003BCC  EFEF  F01D         	goto	l834
  7343  003BD0                     u11590:
  7344  003BD0  0E00               	movlw	0
  7345  003BD2  0100               	movlb	0	; () banked
  7346  003BD4  6F61               	movwf	(utoa@p+1)& (0+255),b
  7347  003BD6  0E01               	movlw	1
  7348  003BD8  6F60               	movwf	utoa@p& (0+255),b
  7349  003BDA  EFF3  F01D         	goto	l836
  7350  003BDE                     l834:
  7351  003BDE  C045  F060         	movff	_prec,utoa@p
  7352  003BE2  C046  F061         	movff	_prec+1,utoa@p+1
  7353  003BE6                     l836:
  7354                           
  7355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7356  003BE6  C043  F062         	movff	_width,utoa@w
  7357  003BEA  C044  F063         	movff	_width+1,utoa@w+1
  7358                           
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7360  003BEE  C02D  F064         	movff	utoa@d,utoa@n
  7361  003BF2  C02E  F065         	movff	utoa@d+1,utoa@n+1
  7362  003BF6  C02F  F066         	movff	utoa@d+2,utoa@n+2
  7363  003BFA  C030  F067         	movff	utoa@d+3,utoa@n+3
  7364  003BFE  C031  F068         	movff	utoa@d+4,utoa@n+4
  7365  003C02  C032  F069         	movff	utoa@d+5,utoa@n+5
  7366  003C06  C033  F06A         	movff	utoa@d+6,utoa@n+6
  7367  003C0A  C034  F06B         	movff	utoa@d+7,utoa@n+7
  7368  003C0E                     
  7369                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7370  003C0E  0E00               	movlw	0
  7371  003C10  0100               	movlb	0	; () banked
  7372  003C12  6F6D               	movwf	(utoa@i+1)& (0+255),b
  7373  003C14  0E4F               	movlw	79
  7374  003C16  6F6C               	movwf	utoa@i& (0+255),b
  7375  003C18                     
  7376                           ; BSR set to: 0
  7377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7378  003C18  0E00               	movlw	0
  7379  003C1A  0101               	movlb	1	; () banked
  7380  003C1C  6FBB               	movwf	(_dbuf+79)& (0+255),b
  7381                           
  7382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7383  003C1E  EF88  F01E         	goto	l9062
  7384  003C22                     l9052:
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7388  003C22  076C               	decf	utoa@i& (0+255),f,b
  7389  003C24  A0D8               	btfss	status,0,c
  7390  003C26  076D               	decf	(utoa@i+1)& (0+255),f,b
  7391  003C28                     
  7392                           ; BSR set to: 0
  7393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7394  003C28  0E6C               	movlw	low _dbuf
  7395  003C2A  256C               	addwf	utoa@i& (0+255),w,b
  7396  003C2C  6ED9               	movwf	fsr2l,c
  7397  003C2E  0E01               	movlw	high _dbuf
  7398  003C30  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  7399  003C32  6EDA               	movwf	fsr2h,c
  7400  003C34  C064  F010         	movff	utoa@n,___lomod@dividend
  7401  003C38  C065  F011         	movff	utoa@n+1,___lomod@dividend+1
  7402  003C3C  C066  F012         	movff	utoa@n+2,___lomod@dividend+2
  7403  003C40  C067  F013         	movff	utoa@n+3,___lomod@dividend+3
  7404  003C44  C068  F014         	movff	utoa@n+4,___lomod@dividend+4
  7405  003C48  C069  F015         	movff	utoa@n+5,___lomod@dividend+5
  7406  003C4C  C06A  F016         	movff	utoa@n+6,___lomod@dividend+6
  7407  003C50  C06B  F017         	movff	utoa@n+7,___lomod@dividend+7
  7408  003C54  0E0A               	movlw	10
  7409  003C56  6E18               	movwf	___lomod@divisor^0,c
  7410  003C58  0E00               	movlw	0
  7411  003C5A  6E19               	movwf	(___lomod@divisor+1)^0,c
  7412  003C5C  0E00               	movlw	0
  7413  003C5E  6E1A               	movwf	(___lomod@divisor+2)^0,c
  7414  003C60  0E00               	movlw	0
  7415  003C62  6E1B               	movwf	(___lomod@divisor+3)^0,c
  7416  003C64  0E00               	movlw	0
  7417  003C66  6E1C               	movwf	(___lomod@divisor+4)^0,c
  7418  003C68  0E00               	movlw	0
  7419  003C6A  6E1D               	movwf	(___lomod@divisor+5)^0,c
  7420  003C6C  0E00               	movlw	0
  7421  003C6E  6E1E               	movwf	(___lomod@divisor+6)^0,c
  7422  003C70  0E00               	movlw	0
  7423  003C72  6E1F               	movwf	(___lomod@divisor+7)^0,c
  7424  003C74  ECEB  F029         	call	___lomod	;wreg free
  7425  003C78  C010  F035         	movff	?___lomod,??_utoa
  7426  003C7C  C011  F036         	movff	?___lomod+1,??_utoa+1
  7427  003C80  C012  F037         	movff	?___lomod+2,??_utoa+2
  7428  003C84  C013  F038         	movff	?___lomod+3,??_utoa+3
  7429  003C88  C014  F039         	movff	?___lomod+4,??_utoa+4
  7430  003C8C  C015  F03A         	movff	?___lomod+5,??_utoa+5
  7431  003C90  C016  F03B         	movff	?___lomod+6,??_utoa+6
  7432  003C94  C017  F03C         	movff	?___lomod+7,??_utoa+7
  7433  003C98  5035               	movf	??_utoa^0,w,c
  7434  003C9A  0F30               	addlw	48
  7435  003C9C  6EDF               	movwf	indf2,c
  7436  003C9E                     
  7437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7438  003C9E  0100               	movlb	0	; () banked
  7439  003CA0  0760               	decf	utoa@p& (0+255),f,b
  7440  003CA2  A0D8               	btfss	status,0,c
  7441  003CA4  0761               	decf	(utoa@p+1)& (0+255),f,b
  7442  003CA6                     
  7443                           ; BSR set to: 0
  7444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7445  003CA6  0762               	decf	utoa@w& (0+255),f,b
  7446  003CA8  A0D8               	btfss	status,0,c
  7447  003CAA  0763               	decf	(utoa@w+1)& (0+255),f,b
  7448  003CAC                     
  7449                           ; BSR set to: 0
  7450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7451  003CAC  C064  F010         	movff	utoa@n,___lodiv@dividend
  7452  003CB0  C065  F011         	movff	utoa@n+1,___lodiv@dividend+1
  7453  003CB4  C066  F012         	movff	utoa@n+2,___lodiv@dividend+2
  7454  003CB8  C067  F013         	movff	utoa@n+3,___lodiv@dividend+3
  7455  003CBC  C068  F014         	movff	utoa@n+4,___lodiv@dividend+4
  7456  003CC0  C069  F015         	movff	utoa@n+5,___lodiv@dividend+5
  7457  003CC4  C06A  F016         	movff	utoa@n+6,___lodiv@dividend+6
  7458  003CC8  C06B  F017         	movff	utoa@n+7,___lodiv@dividend+7
  7459  003CCC  0E0A               	movlw	10
  7460  003CCE  6E18               	movwf	___lodiv@divisor^0,c
  7461  003CD0  0E00               	movlw	0
  7462  003CD2  6E19               	movwf	(___lodiv@divisor+1)^0,c
  7463  003CD4  0E00               	movlw	0
  7464  003CD6  6E1A               	movwf	(___lodiv@divisor+2)^0,c
  7465  003CD8  0E00               	movlw	0
  7466  003CDA  6E1B               	movwf	(___lodiv@divisor+3)^0,c
  7467  003CDC  0E00               	movlw	0
  7468  003CDE  6E1C               	movwf	(___lodiv@divisor+4)^0,c
  7469  003CE0  0E00               	movlw	0
  7470  003CE2  6E1D               	movwf	(___lodiv@divisor+5)^0,c
  7471  003CE4  0E00               	movlw	0
  7472  003CE6  6E1E               	movwf	(___lodiv@divisor+6)^0,c
  7473  003CE8  0E00               	movlw	0
  7474  003CEA  6E1F               	movwf	(___lodiv@divisor+7)^0,c
  7475  003CEC  EC73  F029         	call	___lodiv	;wreg free
  7476  003CF0  C010  F064         	movff	?___lodiv,utoa@n
  7477  003CF4  C011  F065         	movff	?___lodiv+1,utoa@n+1
  7478  003CF8  C012  F066         	movff	?___lodiv+2,utoa@n+2
  7479  003CFC  C013  F067         	movff	?___lodiv+3,utoa@n+3
  7480  003D00  C014  F068         	movff	?___lodiv+4,utoa@n+4
  7481  003D04  C015  F069         	movff	?___lodiv+5,utoa@n+5
  7482  003D08  C016  F06A         	movff	?___lodiv+6,utoa@n+6
  7483  003D0C  C017  F06B         	movff	?___lodiv+7,utoa@n+7
  7484  003D10                     l9062:
  7485                           
  7486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7487  003D10  0100               	movlb	0	; () banked
  7488  003D12  516C               	movf	utoa@i& (0+255),w,b
  7489  003D14  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  7490  003D16  B4D8               	btfsc	status,2,c
  7491  003D18  EF90  F01E         	goto	u11601
  7492  003D1C  EF92  F01E         	goto	u11600
  7493  003D20                     u11601:
  7494  003D20  EFC2  F01E         	goto	l9072
  7495  003D24                     u11600:
  7496  003D24                     
  7497                           ; BSR set to: 0
  7498  003D24  5164               	movf	utoa@n& (0+255),w,b
  7499  003D26  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  7500  003D28  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  7501  003D2A  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  7502  003D2C  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  7503  003D2E  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  7504  003D30  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  7505  003D32  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  7506  003D34  A4D8               	btfss	status,2,c
  7507  003D36  EF9F  F01E         	goto	u11611
  7508  003D3A  EFA1  F01E         	goto	u11610
  7509  003D3E                     u11611:
  7510  003D3E  EF11  F01E         	goto	l9052
  7511  003D42                     u11610:
  7512  003D42                     
  7513                           ; BSR set to: 0
  7514  003D42  BF61               	btfsc	(utoa@p+1)& (0+255),7,b
  7515  003D44  EFAE  F01E         	goto	u11620
  7516  003D48  5161               	movf	(utoa@p+1)& (0+255),w,b
  7517  003D4A  E106               	bnz	u11621
  7518  003D4C  0560               	decf	utoa@p& (0+255),w,b
  7519  003D4E  B0D8               	btfsc	status,0,c
  7520  003D50  EFAC  F01E         	goto	u11621
  7521  003D54  EFAE  F01E         	goto	u11620
  7522  003D58                     u11621:
  7523  003D58  EF11  F01E         	goto	l9052
  7524  003D5C                     u11620:
  7525  003D5C                     
  7526                           ; BSR set to: 0
  7527  003D5C  BF63               	btfsc	(utoa@w+1)& (0+255),7,b
  7528  003D5E  EFB9  F01E         	goto	u11631
  7529  003D62  5163               	movf	(utoa@w+1)& (0+255),w,b
  7530  003D64  E108               	bnz	u11630
  7531  003D66  0562               	decf	utoa@w& (0+255),w,b
  7532  003D68  A0D8               	btfss	status,0,c
  7533  003D6A  EFB9  F01E         	goto	u11631
  7534  003D6E  EFBB  F01E         	goto	u11630
  7535  003D72                     u11631:
  7536  003D72  EFC2  F01E         	goto	l9072
  7537  003D76                     u11630:
  7538  003D76                     
  7539                           ; BSR set to: 0
  7540  003D76  B247               	btfsc	_flags^0,1,c
  7541  003D78  EFC0  F01E         	goto	u11641
  7542  003D7C  EFC2  F01E         	goto	u11640
  7543  003D80                     u11641:
  7544  003D80  EF11  F01E         	goto	l9052
  7545  003D84                     u11640:
  7546  003D84                     l9072:
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7550  003D84  C02B  F020         	movff	utoa@fp,pad@fp
  7551  003D88  C02C  F021         	movff	utoa@fp+1,pad@fp+1
  7552  003D8C  0E6C               	movlw	low _dbuf
  7553  003D8E  256C               	addwf	utoa@i& (0+255),w,b
  7554  003D90  6E22               	movwf	pad@buf^0,c
  7555  003D92  0E01               	movlw	high _dbuf
  7556  003D94  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  7557  003D96  6E23               	movwf	(pad@buf+1)^0,c
  7558  003D98  C062  F024         	movff	utoa@w,pad@p
  7559  003D9C  C063  F025         	movff	utoa@w+1,pad@p+1
  7560  003DA0  EC1A  F02B         	call	_pad	;wreg free
  7561  003DA4  C020  F02B         	movff	?_pad,?_utoa
  7562  003DA8  C021  F02C         	movff	?_pad+1,?_utoa+1
  7563  003DAC  0012               	return		;funcret
  7564  003DAE                     __end_of_utoa:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function ___lomod *****************
  7568 ;; Defined at:
  7569 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  dividend        8   15[COMRAM] unsigned long long 
  7572 ;;  divisor         8   23[COMRAM] unsigned long long 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  counter         1   31[COMRAM] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  8   15[COMRAM] unsigned long long 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7584 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7587 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;Total ram usage:       17 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    5
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_utoa
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text10
  7599  0053D6                     __ptext10:
  7600                           	opt callstack 0
  7601  0053D6                     ___lomod:
  7602                           	opt callstack 20
  7603  0053D6  5018               	movf	___lomod@divisor^0,w,c
  7604  0053D8  1019               	iorwf	(___lomod@divisor+1)^0,w,c
  7605  0053DA  101A               	iorwf	(___lomod@divisor+2)^0,w,c
  7606  0053DC  101B               	iorwf	(___lomod@divisor+3)^0,w,c
  7607  0053DE  101C               	iorwf	(___lomod@divisor+4)^0,w,c
  7608  0053E0  101D               	iorwf	(___lomod@divisor+5)^0,w,c
  7609  0053E2  101E               	iorwf	(___lomod@divisor+6)^0,w,c
  7610  0053E4  101F               	iorwf	(___lomod@divisor+7)^0,w,c
  7611  0053E6  B4D8               	btfsc	status,2,c
  7612  0053E8  EFF8  F029         	goto	u10651
  7613  0053EC  EFFA  F029         	goto	u10650
  7614  0053F0                     u10651:
  7615  0053F0  EF42  F02A         	goto	l1417
  7616  0053F4                     u10650:
  7617  0053F4  0E01               	movlw	1
  7618  0053F6  6E20               	movwf	___lomod@counter^0,c
  7619  0053F8  EF08  F02A         	goto	l8546
  7620  0053FC                     l8544:
  7621  0053FC  90D8               	bcf	status,0,c
  7622  0053FE  3618               	rlcf	___lomod@divisor^0,f,c
  7623  005400  3619               	rlcf	(___lomod@divisor+1)^0,f,c
  7624  005402  361A               	rlcf	(___lomod@divisor+2)^0,f,c
  7625  005404  361B               	rlcf	(___lomod@divisor+3)^0,f,c
  7626  005406  361C               	rlcf	(___lomod@divisor+4)^0,f,c
  7627  005408  361D               	rlcf	(___lomod@divisor+5)^0,f,c
  7628  00540A  361E               	rlcf	(___lomod@divisor+6)^0,f,c
  7629  00540C  361F               	rlcf	(___lomod@divisor+7)^0,f,c
  7630  00540E  2A20               	incf	___lomod@counter^0,f,c
  7631  005410                     l8546:
  7632  005410  AE1F               	btfss	(___lomod@divisor+7)^0,7,c
  7633  005412  EF0D  F02A         	goto	u10661
  7634  005416  EF0F  F02A         	goto	u10660
  7635  00541A                     u10661:
  7636  00541A  EFFE  F029         	goto	l8544
  7637  00541E                     u10660:
  7638  00541E                     l8548:
  7639  00541E  5018               	movf	___lomod@divisor^0,w,c
  7640  005420  5C10               	subwf	___lomod@dividend^0,w,c
  7641  005422  5019               	movf	(___lomod@divisor+1)^0,w,c
  7642  005424  5811               	subwfb	(___lomod@dividend+1)^0,w,c
  7643  005426  501A               	movf	(___lomod@divisor+2)^0,w,c
  7644  005428  5812               	subwfb	(___lomod@dividend+2)^0,w,c
  7645  00542A  501B               	movf	(___lomod@divisor+3)^0,w,c
  7646  00542C  5813               	subwfb	(___lomod@dividend+3)^0,w,c
  7647  00542E  501C               	movf	(___lomod@divisor+4)^0,w,c
  7648  005430  5814               	subwfb	(___lomod@dividend+4)^0,w,c
  7649  005432  501D               	movf	(___lomod@divisor+5)^0,w,c
  7650  005434  5815               	subwfb	(___lomod@dividend+5)^0,w,c
  7651  005436  501E               	movf	(___lomod@divisor+6)^0,w,c
  7652  005438  5816               	subwfb	(___lomod@dividend+6)^0,w,c
  7653  00543A  501F               	movf	(___lomod@divisor+7)^0,w,c
  7654  00543C  5817               	subwfb	(___lomod@dividend+7)^0,w,c
  7655  00543E  A0D8               	btfss	status,0,c
  7656  005440  EF24  F02A         	goto	u10671
  7657  005444  EF26  F02A         	goto	u10670
  7658  005448                     u10671:
  7659  005448  EF36  F02A         	goto	l8552
  7660  00544C                     u10670:
  7661  00544C  5018               	movf	___lomod@divisor^0,w,c
  7662  00544E  5E10               	subwf	___lomod@dividend^0,f,c
  7663  005450  5019               	movf	(___lomod@divisor+1)^0,w,c
  7664  005452  5A11               	subwfb	(___lomod@dividend+1)^0,f,c
  7665  005454  501A               	movf	(___lomod@divisor+2)^0,w,c
  7666  005456  5A12               	subwfb	(___lomod@dividend+2)^0,f,c
  7667  005458  501B               	movf	(___lomod@divisor+3)^0,w,c
  7668  00545A  5A13               	subwfb	(___lomod@dividend+3)^0,f,c
  7669  00545C  501C               	movf	(___lomod@divisor+4)^0,w,c
  7670  00545E  5A14               	subwfb	(___lomod@dividend+4)^0,f,c
  7671  005460  501D               	movf	(___lomod@divisor+5)^0,w,c
  7672  005462  5A15               	subwfb	(___lomod@dividend+5)^0,f,c
  7673  005464  501E               	movf	(___lomod@divisor+6)^0,w,c
  7674  005466  5A16               	subwfb	(___lomod@dividend+6)^0,f,c
  7675  005468  501F               	movf	(___lomod@divisor+7)^0,w,c
  7676  00546A  5A17               	subwfb	(___lomod@dividend+7)^0,f,c
  7677  00546C                     l8552:
  7678  00546C  90D8               	bcf	status,0,c
  7679  00546E  321F               	rrcf	(___lomod@divisor+7)^0,f,c
  7680  005470  321E               	rrcf	(___lomod@divisor+6)^0,f,c
  7681  005472  321D               	rrcf	(___lomod@divisor+5)^0,f,c
  7682  005474  321C               	rrcf	(___lomod@divisor+4)^0,f,c
  7683  005476  321B               	rrcf	(___lomod@divisor+3)^0,f,c
  7684  005478  321A               	rrcf	(___lomod@divisor+2)^0,f,c
  7685  00547A  3219               	rrcf	(___lomod@divisor+1)^0,f,c
  7686  00547C  3218               	rrcf	___lomod@divisor^0,f,c
  7687  00547E  2E20               	decfsz	___lomod@counter^0,f,c
  7688  005480  EF0F  F02A         	goto	l8548
  7689  005484                     l1417:
  7690  005484  C010  F010         	movff	___lomod@dividend,?___lomod
  7691  005488  C011  F011         	movff	___lomod@dividend+1,?___lomod+1
  7692  00548C  C012  F012         	movff	___lomod@dividend+2,?___lomod+2
  7693  005490  C013  F013         	movff	___lomod@dividend+3,?___lomod+3
  7694  005494  C014  F014         	movff	___lomod@dividend+4,?___lomod+4
  7695  005498  C015  F015         	movff	___lomod@dividend+5,?___lomod+5
  7696  00549C  C016  F016         	movff	___lomod@dividend+6,?___lomod+6
  7697  0054A0  C017  F017         	movff	___lomod@dividend+7,?___lomod+7
  7698  0054A4  0012               	return		;funcret
  7699  0054A6                     __end_of___lomod:
  7700                           	opt callstack 0
  7701                           
  7702 ;; *************** function ___lodiv *****************
  7703 ;; Defined at:
  7704 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  dividend        8   15[COMRAM] unsigned long long 
  7707 ;;  divisor         8   23[COMRAM] unsigned long long 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  quotient        8   31[COMRAM] unsigned long long 
  7710 ;;  counter         1   39[COMRAM] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  8   15[COMRAM] unsigned long long 
  7713 ;; Registers used:
  7714 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7720 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;Total ram usage:       25 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    5
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_utoa
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text11
  7735  0052E6                     __ptext11:
  7736                           	opt callstack 0
  7737  0052E6                     ___lodiv:
  7738                           	opt callstack 20
  7739  0052E6  EE20  F020         	lfsr	2,___lodiv@quotient
  7740  0052EA  0E07               	movlw	7
  7741  0052EC                     u10611:
  7742  0052EC  6ADE               	clrf	postinc2,c
  7743  0052EE  06E8               	decf	wreg,f,c
  7744  0052F0  E2FD               	bc	u10611
  7745  0052F2  5018               	movf	___lodiv@divisor^0,w,c
  7746  0052F4  1019               	iorwf	(___lodiv@divisor+1)^0,w,c
  7747  0052F6  101A               	iorwf	(___lodiv@divisor+2)^0,w,c
  7748  0052F8  101B               	iorwf	(___lodiv@divisor+3)^0,w,c
  7749  0052FA  101C               	iorwf	(___lodiv@divisor+4)^0,w,c
  7750  0052FC  101D               	iorwf	(___lodiv@divisor+5)^0,w,c
  7751  0052FE  101E               	iorwf	(___lodiv@divisor+6)^0,w,c
  7752  005300  101F               	iorwf	(___lodiv@divisor+7)^0,w,c
  7753  005302  B4D8               	btfsc	status,2,c
  7754  005304  EF86  F029         	goto	u10621
  7755  005308  EF88  F029         	goto	u10620
  7756  00530C                     u10621:
  7757  00530C  EFDA  F029         	goto	l1407
  7758  005310                     u10620:
  7759  005310  0E01               	movlw	1
  7760  005312  6E28               	movwf	___lodiv@counter^0,c
  7761  005314  EF96  F029         	goto	l8526
  7762  005318                     l8524:
  7763  005318  90D8               	bcf	status,0,c
  7764  00531A  3618               	rlcf	___lodiv@divisor^0,f,c
  7765  00531C  3619               	rlcf	(___lodiv@divisor+1)^0,f,c
  7766  00531E  361A               	rlcf	(___lodiv@divisor+2)^0,f,c
  7767  005320  361B               	rlcf	(___lodiv@divisor+3)^0,f,c
  7768  005322  361C               	rlcf	(___lodiv@divisor+4)^0,f,c
  7769  005324  361D               	rlcf	(___lodiv@divisor+5)^0,f,c
  7770  005326  361E               	rlcf	(___lodiv@divisor+6)^0,f,c
  7771  005328  361F               	rlcf	(___lodiv@divisor+7)^0,f,c
  7772  00532A  2A28               	incf	___lodiv@counter^0,f,c
  7773  00532C                     l8526:
  7774  00532C  AE1F               	btfss	(___lodiv@divisor+7)^0,7,c
  7775  00532E  EF9B  F029         	goto	u10631
  7776  005332  EF9D  F029         	goto	u10630
  7777  005336                     u10631:
  7778  005336  EF8C  F029         	goto	l8524
  7779  00533A                     u10630:
  7780  00533A                     l8528:
  7781  00533A  90D8               	bcf	status,0,c
  7782  00533C  3620               	rlcf	___lodiv@quotient^0,f,c
  7783  00533E  3621               	rlcf	(___lodiv@quotient+1)^0,f,c
  7784  005340  3622               	rlcf	(___lodiv@quotient+2)^0,f,c
  7785  005342  3623               	rlcf	(___lodiv@quotient+3)^0,f,c
  7786  005344  3624               	rlcf	(___lodiv@quotient+4)^0,f,c
  7787  005346  3625               	rlcf	(___lodiv@quotient+5)^0,f,c
  7788  005348  3626               	rlcf	(___lodiv@quotient+6)^0,f,c
  7789  00534A  3627               	rlcf	(___lodiv@quotient+7)^0,f,c
  7790  00534C  5018               	movf	___lodiv@divisor^0,w,c
  7791  00534E  5C10               	subwf	___lodiv@dividend^0,w,c
  7792  005350  5019               	movf	(___lodiv@divisor+1)^0,w,c
  7793  005352  5811               	subwfb	(___lodiv@dividend+1)^0,w,c
  7794  005354  501A               	movf	(___lodiv@divisor+2)^0,w,c
  7795  005356  5812               	subwfb	(___lodiv@dividend+2)^0,w,c
  7796  005358  501B               	movf	(___lodiv@divisor+3)^0,w,c
  7797  00535A  5813               	subwfb	(___lodiv@dividend+3)^0,w,c
  7798  00535C  501C               	movf	(___lodiv@divisor+4)^0,w,c
  7799  00535E  5814               	subwfb	(___lodiv@dividend+4)^0,w,c
  7800  005360  501D               	movf	(___lodiv@divisor+5)^0,w,c
  7801  005362  5815               	subwfb	(___lodiv@dividend+5)^0,w,c
  7802  005364  501E               	movf	(___lodiv@divisor+6)^0,w,c
  7803  005366  5816               	subwfb	(___lodiv@dividend+6)^0,w,c
  7804  005368  501F               	movf	(___lodiv@divisor+7)^0,w,c
  7805  00536A  5817               	subwfb	(___lodiv@dividend+7)^0,w,c
  7806  00536C  A0D8               	btfss	status,0,c
  7807  00536E  EFBB  F029         	goto	u10641
  7808  005372  EFBD  F029         	goto	u10640
  7809  005376                     u10641:
  7810  005376  EFCE  F029         	goto	l8536
  7811  00537A                     u10640:
  7812  00537A  5018               	movf	___lodiv@divisor^0,w,c
  7813  00537C  5E10               	subwf	___lodiv@dividend^0,f,c
  7814  00537E  5019               	movf	(___lodiv@divisor+1)^0,w,c
  7815  005380  5A11               	subwfb	(___lodiv@dividend+1)^0,f,c
  7816  005382  501A               	movf	(___lodiv@divisor+2)^0,w,c
  7817  005384  5A12               	subwfb	(___lodiv@dividend+2)^0,f,c
  7818  005386  501B               	movf	(___lodiv@divisor+3)^0,w,c
  7819  005388  5A13               	subwfb	(___lodiv@dividend+3)^0,f,c
  7820  00538A  501C               	movf	(___lodiv@divisor+4)^0,w,c
  7821  00538C  5A14               	subwfb	(___lodiv@dividend+4)^0,f,c
  7822  00538E  501D               	movf	(___lodiv@divisor+5)^0,w,c
  7823  005390  5A15               	subwfb	(___lodiv@dividend+5)^0,f,c
  7824  005392  501E               	movf	(___lodiv@divisor+6)^0,w,c
  7825  005394  5A16               	subwfb	(___lodiv@dividend+6)^0,f,c
  7826  005396  501F               	movf	(___lodiv@divisor+7)^0,w,c
  7827  005398  5A17               	subwfb	(___lodiv@dividend+7)^0,f,c
  7828  00539A  8020               	bsf	___lodiv@quotient^0,0,c
  7829  00539C                     l8536:
  7830  00539C  90D8               	bcf	status,0,c
  7831  00539E  321F               	rrcf	(___lodiv@divisor+7)^0,f,c
  7832  0053A0  321E               	rrcf	(___lodiv@divisor+6)^0,f,c
  7833  0053A2  321D               	rrcf	(___lodiv@divisor+5)^0,f,c
  7834  0053A4  321C               	rrcf	(___lodiv@divisor+4)^0,f,c
  7835  0053A6  321B               	rrcf	(___lodiv@divisor+3)^0,f,c
  7836  0053A8  321A               	rrcf	(___lodiv@divisor+2)^0,f,c
  7837  0053AA  3219               	rrcf	(___lodiv@divisor+1)^0,f,c
  7838  0053AC  3218               	rrcf	___lodiv@divisor^0,f,c
  7839  0053AE  2E28               	decfsz	___lodiv@counter^0,f,c
  7840  0053B0  EF9D  F029         	goto	l8528
  7841  0053B4                     l1407:
  7842  0053B4  C020  F010         	movff	___lodiv@quotient,?___lodiv
  7843  0053B8  C021  F011         	movff	___lodiv@quotient+1,?___lodiv+1
  7844  0053BC  C022  F012         	movff	___lodiv@quotient+2,?___lodiv+2
  7845  0053C0  C023  F013         	movff	___lodiv@quotient+3,?___lodiv+3
  7846  0053C4  C024  F014         	movff	___lodiv@quotient+4,?___lodiv+4
  7847  0053C8  C025  F015         	movff	___lodiv@quotient+5,?___lodiv+5
  7848  0053CC  C026  F016         	movff	___lodiv@quotient+6,?___lodiv+6
  7849  0053D0  C027  F017         	movff	___lodiv@quotient+7,?___lodiv+7
  7850  0053D4  0012               	return		;funcret
  7851  0053D6                     __end_of___lodiv:
  7852                           	opt callstack 0
  7853                           
  7854 ;; *************** function _strncmp *****************
  7855 ;; Defined at:
  7856 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  _l              2   15[COMRAM] PTR const unsigned char 
  7859 ;;		 -> vfpfcnvrt@ct(3), STR_5(9), STR_4(20), STR_3(14), 
  7860 ;;  _r              2   17[COMRAM] PTR const unsigned char 
  7861 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7862 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7863 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7864 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7865 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  7866 ;;		 -> STR_20(4), STR_16(4), 
  7867 ;;  n               2   19[COMRAM] unsigned int 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  r               2   24[COMRAM] PTR const unsigned char 
  7870 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7871 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7872 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7873 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7874 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  7875 ;;		 -> STR_20(4), STR_16(4), 
  7876 ;;  l               2   22[COMRAM] PTR const unsigned char 
  7877 ;;		 -> vfpfcnvrt@ct(3), STR_5(9), STR_4(20), STR_3(14), 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  2   15[COMRAM] int 
  7880 ;; Registers used:
  7881 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7887 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7888 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7890 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7891 ;;Total ram usage:       11 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    5
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_vfpfcnvrt
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text12
  7902  004CA6                     __ptext12:
  7903                           	opt callstack 0
  7904  004CA6                     _strncmp:
  7905                           	opt callstack 21
  7906  004CA6  C010  F017         	movff	strncmp@_l,strncmp@l
  7907  004CAA  C011  F018         	movff	strncmp@_l+1,strncmp@l+1
  7908  004CAE  C012  F019         	movff	strncmp@_r,strncmp@r
  7909  004CB2  C013  F01A         	movff	strncmp@_r+1,strncmp@r+1
  7910  004CB6  0614               	decf	strncmp@n^0,f,c
  7911  004CB8  A0D8               	btfss	status,0,c
  7912  004CBA  0615               	decf	(strncmp@n+1)^0,f,c
  7913  004CBC  2814               	incf	strncmp@n^0,w,c
  7914  004CBE  E106               	bnz	u11891
  7915  004CC0  2815               	incf	(strncmp@n+1)^0,w,c
  7916  004CC2  A4D8               	btfss	status,2,c
  7917  004CC4  EF66  F026         	goto	u11891
  7918  004CC8  EF68  F026         	goto	u11890
  7919  004CCC                     u11891:
  7920  004CCC  EF75  F026         	goto	l9192
  7921  004CD0                     u11890:
  7922  004CD0  0E00               	movlw	0
  7923  004CD2  6E11               	movwf	(?_strncmp+1)^0,c
  7924  004CD4  0E00               	movlw	0
  7925  004CD6  6E10               	movwf	?_strncmp^0,c
  7926  004CD8  EFE5  F026         	goto	l1774
  7927  004CDC                     l9190:
  7928  004CDC  4A17               	infsnz	strncmp@l^0,f,c
  7929  004CDE  2A18               	incf	(strncmp@l+1)^0,f,c
  7930  004CE0  4A19               	infsnz	strncmp@r^0,f,c
  7931  004CE2  2A1A               	incf	(strncmp@r+1)^0,f,c
  7932  004CE4  0614               	decf	strncmp@n^0,f,c
  7933  004CE6  A0D8               	btfss	status,0,c
  7934  004CE8  0615               	decf	(strncmp@n+1)^0,f,c
  7935  004CEA                     l9192:
  7936  004CEA  C017  FFF6         	movff	strncmp@l,tblptrl
  7937  004CEE  C018  FFF7         	movff	strncmp@l+1,tblptrh
  7938  004CF2  0E00               	movlw	low (__mediumconst shr (0+16))
  7939  004CF4  6EF8               	movwf	tblptru,c
  7940  004CF6  0E0E               	movlw	(high __ramtop+-1)
  7941  004CF8  64F7               	cpfsgt	tblptrh,c
  7942  004CFA  D003               	bra	u11907
  7943  004CFC  0008               	tblrd		*
  7944  004CFE  50F5               	movf	tablat,w,c
  7945  004D00  D005               	bra	u11900
  7946  004D02                     u11907:
  7947  004D02  CFF6 FFE1          	movff	tblptrl,fsr1l
  7948  004D06  CFF7 FFE2          	movff	tblptrh,fsr1h
  7949  004D0A  50E7               	movf	indf1,w,c
  7950  004D0C                     u11900:
  7951  004D0C  0900               	iorlw	0
  7952  004D0E  B4D8               	btfsc	status,2,c
  7953  004D10  EF8C  F026         	goto	u11911
  7954  004D14  EF8E  F026         	goto	u11910
  7955  004D18                     u11911:
  7956  004D18  EFC7  F026         	goto	l9200
  7957  004D1C                     u11910:
  7958  004D1C  C019  FFF6         	movff	strncmp@r,tblptrl
  7959  004D20  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  7960  004D24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7961  004D24  6AF8               	clrf	tblptru,c
  7962  004D26                     	endif
  7963  004D26                     	if	0	;tblptru may be non-zero
  7964  004D26                     	endif
  7965  004D26  0008               	tblrd		*
  7966  004D28  50F5               	movf	tablat,w,c
  7967  004D2A  0900               	iorlw	0
  7968  004D2C  B4D8               	btfsc	status,2,c
  7969  004D2E  EF9B  F026         	goto	u11921
  7970  004D32  EF9D  F026         	goto	u11920
  7971  004D36                     u11921:
  7972  004D36  EFC7  F026         	goto	l9200
  7973  004D3A                     u11920:
  7974  004D3A  5014               	movf	strncmp@n^0,w,c
  7975  004D3C  1015               	iorwf	(strncmp@n+1)^0,w,c
  7976  004D3E  B4D8               	btfsc	status,2,c
  7977  004D40  EFA4  F026         	goto	u11931
  7978  004D44  EFA6  F026         	goto	u11930
  7979  004D48                     u11931:
  7980  004D48  EFC7  F026         	goto	l9200
  7981  004D4C                     u11930:
  7982  004D4C  C019  FFF6         	movff	strncmp@r,tblptrl
  7983  004D50  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  7984  004D54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7985  004D54  6AF8               	clrf	tblptru,c
  7986  004D56                     	endif
  7987  004D56                     	if	0	;tblptru may be non-zero
  7988  004D56                     	endif
  7989  004D56  0008               	tblrd		*
  7990  004D58  CFF5 F016          	movff	tablat,??_strncmp
  7991  004D5C  C017  FFF6         	movff	strncmp@l,tblptrl
  7992  004D60  C018  FFF7         	movff	strncmp@l+1,tblptrh
  7993  004D64  0E00               	movlw	low (__mediumconst shr (0+16))
  7994  004D66  6EF8               	movwf	tblptru,c
  7995  004D68  0E0E               	movlw	(high __ramtop+-1)
  7996  004D6A  64F7               	cpfsgt	tblptrh,c
  7997  004D6C  D003               	bra	u11947
  7998  004D6E  0008               	tblrd		*
  7999  004D70  50F5               	movf	tablat,w,c
  8000  004D72  D005               	bra	u11945
  8001  004D74                     u11947:
  8002  004D74  CFF6 FFE1          	movff	tblptrl,fsr1l
  8003  004D78  CFF7 FFE2          	movff	tblptrh,fsr1h
  8004  004D7C  50E7               	movf	indf1,w,c
  8005  004D7E                     u11945:
  8006  004D7E  1816               	xorwf	??_strncmp^0,w,c
  8007  004D80  B4D8               	btfsc	status,2,c
  8008  004D82  EFC5  F026         	goto	u11941
  8009  004D86  EFC7  F026         	goto	u11940
  8010  004D8A                     u11941:
  8011  004D8A  EF6E  F026         	goto	l9190
  8012  004D8E                     u11940:
  8013  004D8E                     l9200:
  8014  004D8E  C017  FFF6         	movff	strncmp@l,tblptrl
  8015  004D92  C018  FFF7         	movff	strncmp@l+1,tblptrh
  8016  004D96  0E00               	movlw	low (__mediumconst shr (0+16))
  8017  004D98  6EF8               	movwf	tblptru,c
  8018  004D9A  0E0E               	movlw	(high __ramtop+-1)
  8019  004D9C  64F7               	cpfsgt	tblptrh,c
  8020  004D9E  D003               	bra	u11957
  8021  004DA0  0008               	tblrd		*
  8022  004DA2  50F5               	movf	tablat,w,c
  8023  004DA4  D005               	bra	u11950
  8024  004DA6                     u11957:
  8025  004DA6  CFF6 FFE1          	movff	tblptrl,fsr1l
  8026  004DAA  CFF7 FFE2          	movff	tblptrh,fsr1h
  8027  004DAE  50E7               	movf	indf1,w,c
  8028  004DB0                     u11950:
  8029  004DB0  6E16               	movwf	??_strncmp^0,c
  8030  004DB2  C019  FFF6         	movff	strncmp@r,tblptrl
  8031  004DB6  C01A  FFF7         	movff	strncmp@r+1,tblptrh
  8032  004DBA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8033  004DBA  6AF8               	clrf	tblptru,c
  8034  004DBC                     	endif
  8035  004DBC                     	if	0	;tblptru may be non-zero
  8036  004DBC                     	endif
  8037  004DBC  0008               	tblrd		*
  8038  004DBE  50F5               	movf	tablat,w,c
  8039  004DC0  5C16               	subwf	??_strncmp^0,w,c
  8040  004DC2  6E10               	movwf	?_strncmp^0,c
  8041  004DC4  6A11               	clrf	(?_strncmp+1)^0,c
  8042  004DC6  A0D8               	btfss	status,0,c
  8043  004DC8  0611               	decf	(?_strncmp+1)^0,f,c
  8044  004DCA                     l1774:
  8045  004DCA  0012               	return		;funcret
  8046  004DCC                     __end_of_strncmp:
  8047                           	opt callstack 0
  8048                           
  8049 ;; *************** function _stoa *****************
  8050 ;; Defined at:
  8051 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  8054 ;;		 -> vsnprintf@f(6), 
  8055 ;;  s               2   26[COMRAM] PTR unsigned char 
  8056 ;;		 -> ?_snprintf(2), ticks(2), 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;  nuls            7   29[COMRAM] unsigned char [7]
  8059 ;;  l               2   44[COMRAM] int 
  8060 ;;  p               2   42[COMRAM] int 
  8061 ;;  cp              2   40[COMRAM] PTR unsigned char 
  8062 ;;		 -> ?_snprintf(2), stoa@nuls(7), ticks(2), 
  8063 ;;  w               2   38[COMRAM] int 
  8064 ;;  i               2   36[COMRAM] int 
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  2   24[COMRAM] int 
  8067 ;; Registers used:
  8068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8077 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8078 ;;Total ram usage:       22 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    7
  8081 ;; This function calls:
  8082 ;;		_fputc
  8083 ;;		_strlen
  8084 ;; This function is called by:
  8085 ;;		_vfpfcnvrt
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text13
  8090  004474                     __ptext13:
  8091                           	opt callstack 0
  8092  004474                     _stoa:
  8093                           	opt callstack 19
  8094  004474                     
  8095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8096  004474  EE21  F0D8         	lfsr	2,stoa@F1174
  8097  004478  EE10  F01E         	lfsr	1,stoa@nuls
  8098  00447C  0E06               	movlw	6
  8099  00447E                     u11491:
  8100  00447E  CFDB FFE3          	movff	plusw2,plusw1
  8101  004482  06E8               	decf	wreg,f,c
  8102  004484  E2FC               	bc	u11491
  8103  004486                     
  8104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8105  004486  C01B  F029         	movff	stoa@s,stoa@cp
  8106  00448A  C01C  F02A         	movff	stoa@s+1,stoa@cp+1
  8107  00448E                     
  8108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8109  00448E  5029               	movf	stoa@cp^0,w,c
  8110  004490  102A               	iorwf	(stoa@cp+1)^0,w,c
  8111  004492  A4D8               	btfss	status,2,c
  8112  004494  EF4E  F022         	goto	u11501
  8113  004498  EF50  F022         	goto	u11500
  8114  00449C                     u11501:
  8115  00449C  EF54  F022         	goto	l9006
  8116  0044A0                     u11500:
  8117  0044A0                     
  8118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8119  0044A0  0E1E               	movlw	low stoa@nuls
  8120  0044A2  6E29               	movwf	stoa@cp^0,c
  8121  0044A4  0E00               	movlw	high stoa@nuls
  8122  0044A6  6E2A               	movwf	(stoa@cp+1)^0,c
  8123  0044A8                     l9006:
  8124                           
  8125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8126  0044A8  C029  F010         	movff	stoa@cp,strlen@s
  8127  0044AC  C02A  F011         	movff	stoa@cp+1,strlen@s+1
  8128  0044B0  ECD4  F02F         	call	_strlen	;wreg free
  8129  0044B4  C010  F02D         	movff	?_strlen,stoa@l
  8130  0044B8  C011  F02E         	movff	?_strlen+1,stoa@l+1
  8131  0044BC                     
  8132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8133  0044BC  C045  F02B         	movff	_prec,stoa@p
  8134  0044C0  C046  F02C         	movff	_prec+1,stoa@p+1
  8135  0044C4                     
  8136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8137  0044C4  BE2C               	btfsc	(stoa@p+1)^0,7,c
  8138  0044C6  EF67  F022         	goto	u11511
  8139  0044CA  EF69  F022         	goto	u11510
  8140  0044CE                     u11511:
  8141  0044CE  EF7E  F022         	goto	l815
  8142  0044D2                     u11510:
  8143  0044D2  502D               	movf	stoa@l^0,w,c
  8144  0044D4  5C2B               	subwf	stoa@p^0,w,c
  8145  0044D6  502C               	movf	(stoa@p+1)^0,w,c
  8146  0044D8  0A80               	xorlw	128
  8147  0044DA  6E1D               	movwf	??_stoa^0,c
  8148  0044DC  502E               	movf	(stoa@l+1)^0,w,c
  8149  0044DE  0A80               	xorlw	128
  8150  0044E0  581D               	subwfb	??_stoa^0,w,c
  8151  0044E2  A0D8               	btfss	status,0,c
  8152  0044E4  EF76  F022         	goto	u11521
  8153  0044E8  EF78  F022         	goto	u11520
  8154  0044EC                     u11521:
  8155  0044EC  EF7A  F022         	goto	l813
  8156  0044F0                     u11520:
  8157  0044F0  EF7E  F022         	goto	l815
  8158  0044F4                     l813:
  8159  0044F4  C02B  F02D         	movff	stoa@p,stoa@l
  8160  0044F8  C02C  F02E         	movff	stoa@p+1,stoa@l+1
  8161  0044FC                     l815:
  8162                           
  8163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8164  0044FC  C02D  F02B         	movff	stoa@l,stoa@p
  8165  004500  C02E  F02C         	movff	stoa@l+1,stoa@p+1
  8166                           
  8167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8168  004504  C043  F027         	movff	_width,stoa@w
  8169  004508  C044  F028         	movff	_width+1,stoa@w+1
  8170                           
  8171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8172  00450C  B047               	btfsc	_flags^0,0,c
  8173  00450E  EF8B  F022         	goto	u11531
  8174  004512  EF8D  F022         	goto	u11530
  8175  004516                     u11531:
  8176  004516  EFAA  F022         	goto	l9022
  8177  00451A                     u11530:
  8178  00451A  EF9B  F022         	goto	l9020
  8179  00451E                     l9016:
  8180                           
  8181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8182  00451E  0E00               	movlw	0
  8183  004520  6E11               	movwf	(fputc@c+1)^0,c
  8184  004522  0E20               	movlw	32
  8185  004524  6E10               	movwf	fputc@c^0,c
  8186  004526  C019  F012         	movff	stoa@fp,fputc@fp
  8187  00452A  C01A  F013         	movff	stoa@fp+1,fputc@fp+1
  8188  00452E  EC53  F02A         	call	_fputc	;wreg free
  8189  004532                     
  8190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8191  004532  4A2D               	infsnz	stoa@l^0,f,c
  8192  004534  2A2E               	incf	(stoa@l+1)^0,f,c
  8193  004536                     l9020:
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8196  004536  5027               	movf	stoa@w^0,w,c
  8197  004538  5C2D               	subwf	stoa@l^0,w,c
  8198  00453A  502E               	movf	(stoa@l+1)^0,w,c
  8199  00453C  0A80               	xorlw	128
  8200  00453E  6E1D               	movwf	??_stoa^0,c
  8201  004540  5028               	movf	(stoa@w+1)^0,w,c
  8202  004542  0A80               	xorlw	128
  8203  004544  581D               	subwfb	??_stoa^0,w,c
  8204  004546  A0D8               	btfss	status,0,c
  8205  004548  EFA8  F022         	goto	u11541
  8206  00454C  EFAA  F022         	goto	u11540
  8207  004550                     u11541:
  8208  004550  EF8F  F022         	goto	l9016
  8209  004554                     u11540:
  8210  004554                     l9022:
  8211                           
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8213  004554  0E00               	movlw	0
  8214  004556  6E26               	movwf	(stoa@i+1)^0,c
  8215  004558  0E00               	movlw	0
  8216  00455A  6E25               	movwf	stoa@i^0,c
  8217                           
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8219  00455C  EFC3  F022         	goto	l9030
  8220  004560                     l9024:
  8221                           
  8222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8223  004560  C029  FFD9         	movff	stoa@cp,fsr2l
  8224  004564  C02A  FFDA         	movff	stoa@cp+1,fsr2h
  8225  004568  50DF               	movf	indf2,w,c
  8226  00456A  6E1D               	movwf	??_stoa^0,c
  8227  00456C  501D               	movf	??_stoa^0,w,c
  8228  00456E  6E10               	movwf	fputc@c^0,c
  8229  004570  6A11               	clrf	(fputc@c+1)^0,c
  8230  004572  C019  F012         	movff	stoa@fp,fputc@fp
  8231  004576  C01A  F013         	movff	stoa@fp+1,fputc@fp+1
  8232  00457A  EC53  F02A         	call	_fputc	;wreg free
  8233  00457E                     
  8234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8235  00457E  4A29               	infsnz	stoa@cp^0,f,c
  8236  004580  2A2A               	incf	(stoa@cp+1)^0,f,c
  8237  004582                     
  8238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8239  004582  4A25               	infsnz	stoa@i^0,f,c
  8240  004584  2A26               	incf	(stoa@i+1)^0,f,c
  8241  004586                     l9030:
  8242                           
  8243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8244  004586  502B               	movf	stoa@p^0,w,c
  8245  004588  5C25               	subwf	stoa@i^0,w,c
  8246  00458A  5026               	movf	(stoa@i+1)^0,w,c
  8247  00458C  0A80               	xorlw	128
  8248  00458E  6E1D               	movwf	??_stoa^0,c
  8249  004590  502C               	movf	(stoa@p+1)^0,w,c
  8250  004592  0A80               	xorlw	128
  8251  004594  581D               	subwfb	??_stoa^0,w,c
  8252  004596  A0D8               	btfss	status,0,c
  8253  004598  EFD0  F022         	goto	u11551
  8254  00459C  EFD2  F022         	goto	u11550
  8255  0045A0                     u11551:
  8256  0045A0  EFB0  F022         	goto	l9024
  8257  0045A4                     u11550:
  8258  0045A4                     
  8259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8260  0045A4  A047               	btfss	_flags^0,0,c
  8261  0045A6  EFD7  F022         	goto	u11561
  8262  0045AA  EFD9  F022         	goto	u11560
  8263  0045AE                     u11561:
  8264  0045AE  EFF6  F022         	goto	l825
  8265  0045B2                     u11560:
  8266  0045B2  EFE7  F022         	goto	l9038
  8267  0045B6                     l9034:
  8268                           
  8269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8270  0045B6  0E00               	movlw	0
  8271  0045B8  6E11               	movwf	(fputc@c+1)^0,c
  8272  0045BA  0E20               	movlw	32
  8273  0045BC  6E10               	movwf	fputc@c^0,c
  8274  0045BE  C019  F012         	movff	stoa@fp,fputc@fp
  8275  0045C2  C01A  F013         	movff	stoa@fp+1,fputc@fp+1
  8276  0045C6  EC53  F02A         	call	_fputc	;wreg free
  8277  0045CA                     
  8278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8279  0045CA  4A2D               	infsnz	stoa@l^0,f,c
  8280  0045CC  2A2E               	incf	(stoa@l+1)^0,f,c
  8281  0045CE                     l9038:
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8284  0045CE  5027               	movf	stoa@w^0,w,c
  8285  0045D0  5C2D               	subwf	stoa@l^0,w,c
  8286  0045D2  502E               	movf	(stoa@l+1)^0,w,c
  8287  0045D4  0A80               	xorlw	128
  8288  0045D6  6E1D               	movwf	??_stoa^0,c
  8289  0045D8  5028               	movf	(stoa@w+1)^0,w,c
  8290  0045DA  0A80               	xorlw	128
  8291  0045DC  581D               	subwfb	??_stoa^0,w,c
  8292  0045DE  A0D8               	btfss	status,0,c
  8293  0045E0  EFF4  F022         	goto	u11571
  8294  0045E4  EFF6  F022         	goto	u11570
  8295  0045E8                     u11571:
  8296  0045E8  EFDB  F022         	goto	l9034
  8297  0045EC                     u11570:
  8298  0045EC                     l825:
  8299                           
  8300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8301  0045EC  C02D  F019         	movff	stoa@l,?_stoa
  8302  0045F0  C02E  F01A         	movff	stoa@l+1,?_stoa+1
  8303  0045F4  0012               	return		;funcret
  8304  0045F6                     __end_of_stoa:
  8305                           	opt callstack 0
  8306                           
  8307 ;; *************** function _otoa *****************
  8308 ;; Defined at:
  8309 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
  8312 ;;		 -> vsnprintf@f(6), 
  8313 ;;  d               8   44[COMRAM] unsigned long long 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;  n               8    6[BANK0 ] unsigned long long 
  8316 ;;  i               2   14[BANK0 ] int 
  8317 ;;  w               2    4[BANK0 ] int 
  8318 ;;  t               2    2[BANK0 ] int 
  8319 ;;  p               2    0[BANK0 ] int 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  2   42[COMRAM] int 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:        18      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:       34 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    9
  8336 ;; This function calls:
  8337 ;;		_pad
  8338 ;; This function is called by:
  8339 ;;		_vfpfcnvrt
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text14
  8344  003DAE                     __ptext14:
  8345                           	opt callstack 0
  8346  003DAE                     _otoa:
  8347                           	opt callstack 17
  8348  003DAE                     
  8349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8350  003DAE  BE46               	btfsc	(_prec+1)^0,7,c
  8351  003DB0  EFDC  F01E         	goto	u11391
  8352  003DB4  EFDE  F01E         	goto	u11390
  8353  003DB8                     u11391:
  8354  003DB8  EFDF  F01E         	goto	l8954
  8355  003DBC                     u11390:
  8356  003DBC                     
  8357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8358  003DBC  9247               	bcf	_flags^0,1,c
  8359  003DBE                     l8954:
  8360                           
  8361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8362  003DBE  BE46               	btfsc	(_prec+1)^0,7,c
  8363  003DC0  EFEC  F01E         	goto	u11400
  8364  003DC4  5046               	movf	(_prec+1)^0,w,c
  8365  003DC6  E106               	bnz	u11401
  8366  003DC8  0445               	decf	_prec^0,w,c
  8367  003DCA  B0D8               	btfsc	status,0,c
  8368  003DCC  EFEA  F01E         	goto	u11401
  8369  003DD0  EFEC  F01E         	goto	u11400
  8370  003DD4                     u11401:
  8371  003DD4  EFF3  F01E         	goto	l795
  8372  003DD8                     u11400:
  8373  003DD8  0E00               	movlw	0
  8374  003DDA  0100               	movlb	0	; () banked
  8375  003DDC  6F61               	movwf	(otoa@p+1)& (0+255),b
  8376  003DDE  0E01               	movlw	1
  8377  003DE0  6F60               	movwf	otoa@p& (0+255),b
  8378  003DE2  EFF7  F01E         	goto	l797
  8379  003DE6                     l795:
  8380  003DE6  C045  F060         	movff	_prec,otoa@p
  8381  003DEA  C046  F061         	movff	_prec+1,otoa@p+1
  8382  003DEE                     l797:
  8383                           
  8384                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8385  003DEE  C043  F064         	movff	_width,otoa@w
  8386  003DF2  C044  F065         	movff	_width+1,otoa@w+1
  8387                           
  8388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8389  003DF6  C02D  F066         	movff	otoa@d,otoa@n
  8390  003DFA  C02E  F067         	movff	otoa@d+1,otoa@n+1
  8391  003DFE  C02F  F068         	movff	otoa@d+2,otoa@n+2
  8392  003E02  C030  F069         	movff	otoa@d+3,otoa@n+3
  8393  003E06  C031  F06A         	movff	otoa@d+4,otoa@n+4
  8394  003E0A  C032  F06B         	movff	otoa@d+5,otoa@n+5
  8395  003E0E  C033  F06C         	movff	otoa@d+6,otoa@n+6
  8396  003E12  C034  F06D         	movff	otoa@d+7,otoa@n+7
  8397  003E16                     
  8398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8399  003E16  0E00               	movlw	0
  8400  003E18  0100               	movlb	0	; () banked
  8401  003E1A  6F6F               	movwf	(otoa@i+1)& (0+255),b
  8402  003E1C  0E4F               	movlw	79
  8403  003E1E  6F6E               	movwf	otoa@i& (0+255),b
  8404  003E20                     
  8405                           ; BSR set to: 0
  8406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8407  003E20  0E00               	movlw	0
  8408  003E22  0101               	movlb	1	; () banked
  8409  003E24  6FBB               	movwf	(_dbuf+79)& (0+255),b
  8410  003E26                     
  8411                           ; BSR set to: 1
  8412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8413  003E26  0E00               	movlw	0
  8414  003E28  0100               	movlb	0	; () banked
  8415  003E2A  6F63               	movwf	(otoa@t+1)& (0+255),b
  8416  003E2C  0E00               	movlw	0
  8417  003E2E  6F62               	movwf	otoa@t& (0+255),b
  8418                           
  8419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8420  003E30  EF5F  F01F         	goto	l8976
  8421  003E34                     l8964:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8425  003E34  076E               	decf	otoa@i& (0+255),f,b
  8426  003E36  A0D8               	btfss	status,0,c
  8427  003E38  076F               	decf	(otoa@i+1)& (0+255),f,b
  8428  003E3A                     
  8429                           ; BSR set to: 0
  8430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8431  003E3A  0E07               	movlw	7
  8432  003E3C  1566               	andwf	otoa@n& (0+255),w,b
  8433  003E3E  6F62               	movwf	otoa@t& (0+255),b
  8434  003E40  6B63               	clrf	(otoa@t+1)& (0+255),b
  8435  003E42                     
  8436                           ; BSR set to: 0
  8437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8438  003E42  0E6C               	movlw	low _dbuf
  8439  003E44  256E               	addwf	otoa@i& (0+255),w,b
  8440  003E46  6ED9               	movwf	fsr2l,c
  8441  003E48  0E01               	movlw	high _dbuf
  8442  003E4A  216F               	addwfc	(otoa@i+1)& (0+255),w,b
  8443  003E4C  6EDA               	movwf	fsr2h,c
  8444  003E4E  5162               	movf	otoa@t& (0+255),w,b
  8445  003E50  0F30               	addlw	48
  8446  003E52  6EDF               	movwf	indf2,c
  8447  003E54                     
  8448                           ; BSR set to: 0
  8449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8450  003E54  0760               	decf	otoa@p& (0+255),f,b
  8451  003E56  A0D8               	btfss	status,0,c
  8452  003E58  0761               	decf	(otoa@p+1)& (0+255),f,b
  8453  003E5A                     
  8454                           ; BSR set to: 0
  8455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8456  003E5A  0764               	decf	otoa@w& (0+255),f,b
  8457  003E5C  A0D8               	btfss	status,0,c
  8458  003E5E  0765               	decf	(otoa@w+1)& (0+255),f,b
  8459  003E60                     
  8460                           ; BSR set to: 0
  8461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8462  003E60  C066  F035         	movff	otoa@n,??_otoa
  8463  003E64  C067  F036         	movff	otoa@n+1,??_otoa+1
  8464  003E68  C068  F037         	movff	otoa@n+2,??_otoa+2
  8465  003E6C  C069  F038         	movff	otoa@n+3,??_otoa+3
  8466  003E70  C06A  F039         	movff	otoa@n+4,??_otoa+4
  8467  003E74  C06B  F03A         	movff	otoa@n+5,??_otoa+5
  8468  003E78  C06C  F03B         	movff	otoa@n+6,??_otoa+6
  8469  003E7C  C06D  F03C         	movff	otoa@n+7,??_otoa+7
  8470  003E80  0E04               	movlw	4
  8471  003E82  EF4C  F01F         	goto	u11410
  8472  003E86                     u11415:
  8473  003E86  90D8               	bcf	status,0,c
  8474  003E88  323C               	rrcf	(??_otoa+7)^0,f,c
  8475  003E8A  323B               	rrcf	(??_otoa+6)^0,f,c
  8476  003E8C  323A               	rrcf	(??_otoa+5)^0,f,c
  8477  003E8E  3239               	rrcf	(??_otoa+4)^0,f,c
  8478  003E90  3238               	rrcf	(??_otoa+3)^0,f,c
  8479  003E92  3237               	rrcf	(??_otoa+2)^0,f,c
  8480  003E94  3236               	rrcf	(??_otoa+1)^0,f,c
  8481  003E96  3235               	rrcf	??_otoa^0,f,c
  8482  003E98                     u11410:
  8483  003E98  2EE8               	decfsz	wreg,f,c
  8484  003E9A  EF43  F01F         	goto	u11415
  8485  003E9E  C035  F066         	movff	??_otoa,otoa@n
  8486  003EA2  C036  F067         	movff	??_otoa+1,otoa@n+1
  8487  003EA6  C037  F068         	movff	??_otoa+2,otoa@n+2
  8488  003EAA  C038  F069         	movff	??_otoa+3,otoa@n+3
  8489  003EAE  C039  F06A         	movff	??_otoa+4,otoa@n+4
  8490  003EB2  C03A  F06B         	movff	??_otoa+5,otoa@n+5
  8491  003EB6  C03B  F06C         	movff	??_otoa+6,otoa@n+6
  8492  003EBA  C03C  F06D         	movff	??_otoa+7,otoa@n+7
  8493  003EBE                     l8976:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8497  003EBE  BF6F               	btfsc	(otoa@i+1)& (0+255),7,b
  8498  003EC0  EF6A  F01F         	goto	u11421
  8499  003EC4  516F               	movf	(otoa@i+1)& (0+255),w,b
  8500  003EC6  E108               	bnz	u11420
  8501  003EC8  056E               	decf	otoa@i& (0+255),w,b
  8502  003ECA  A0D8               	btfss	status,0,c
  8503  003ECC  EF6A  F01F         	goto	u11421
  8504  003ED0  EF6C  F01F         	goto	u11420
  8505  003ED4                     u11421:
  8506  003ED4  EF9C  F01F         	goto	l804
  8507  003ED8                     u11420:
  8508  003ED8                     
  8509                           ; BSR set to: 0
  8510  003ED8  5166               	movf	otoa@n& (0+255),w,b
  8511  003EDA  1167               	iorwf	(otoa@n+1)& (0+255),w,b
  8512  003EDC  1168               	iorwf	(otoa@n+2)& (0+255),w,b
  8513  003EDE  1169               	iorwf	(otoa@n+3)& (0+255),w,b
  8514  003EE0  116A               	iorwf	(otoa@n+4)& (0+255),w,b
  8515  003EE2  116B               	iorwf	(otoa@n+5)& (0+255),w,b
  8516  003EE4  116C               	iorwf	(otoa@n+6)& (0+255),w,b
  8517  003EE6  116D               	iorwf	(otoa@n+7)& (0+255),w,b
  8518  003EE8  A4D8               	btfss	status,2,c
  8519  003EEA  EF79  F01F         	goto	u11431
  8520  003EEE  EF7B  F01F         	goto	u11430
  8521  003EF2                     u11431:
  8522  003EF2  EF1A  F01F         	goto	l8964
  8523  003EF6                     u11430:
  8524  003EF6                     
  8525                           ; BSR set to: 0
  8526  003EF6  BF61               	btfsc	(otoa@p+1)& (0+255),7,b
  8527  003EF8  EF88  F01F         	goto	u11440
  8528  003EFC  5161               	movf	(otoa@p+1)& (0+255),w,b
  8529  003EFE  E106               	bnz	u11441
  8530  003F00  0560               	decf	otoa@p& (0+255),w,b
  8531  003F02  B0D8               	btfsc	status,0,c
  8532  003F04  EF86  F01F         	goto	u11441
  8533  003F08  EF88  F01F         	goto	u11440
  8534  003F0C                     u11441:
  8535  003F0C  EF1A  F01F         	goto	l8964
  8536  003F10                     u11440:
  8537  003F10                     
  8538                           ; BSR set to: 0
  8539  003F10  BF65               	btfsc	(otoa@w+1)& (0+255),7,b
  8540  003F12  EF93  F01F         	goto	u11451
  8541  003F16  5165               	movf	(otoa@w+1)& (0+255),w,b
  8542  003F18  E108               	bnz	u11450
  8543  003F1A  0564               	decf	otoa@w& (0+255),w,b
  8544  003F1C  A0D8               	btfss	status,0,c
  8545  003F1E  EF93  F01F         	goto	u11451
  8546  003F22  EF95  F01F         	goto	u11450
  8547  003F26                     u11451:
  8548  003F26  EF9C  F01F         	goto	l804
  8549  003F2A                     u11450:
  8550  003F2A                     
  8551                           ; BSR set to: 0
  8552  003F2A  B247               	btfsc	_flags^0,1,c
  8553  003F2C  EF9A  F01F         	goto	u11461
  8554  003F30  EF9C  F01F         	goto	u11460
  8555  003F34                     u11461:
  8556  003F34  EF1A  F01F         	goto	l8964
  8557  003F38                     u11460:
  8558  003F38                     l804:
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8562  003F38  A847               	btfss	_flags^0,4,c
  8563  003F3A  EFA1  F01F         	goto	u11471
  8564  003F3E  EFA3  F01F         	goto	u11470
  8565  003F42                     u11471:
  8566  003F42  EFBA  F01F         	goto	l8994
  8567  003F46                     u11470:
  8568  003F46                     
  8569                           ; BSR set to: 0
  8570  003F46  5162               	movf	otoa@t& (0+255),w,b
  8571  003F48  1163               	iorwf	(otoa@t+1)& (0+255),w,b
  8572  003F4A  B4D8               	btfsc	status,2,c
  8573  003F4C  EFAA  F01F         	goto	u11481
  8574  003F50  EFAC  F01F         	goto	u11480
  8575  003F54                     u11481:
  8576  003F54  EFBA  F01F         	goto	l8994
  8577  003F58                     u11480:
  8578  003F58                     
  8579                           ; BSR set to: 0
  8580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8581  003F58  076E               	decf	otoa@i& (0+255),f,b
  8582  003F5A  A0D8               	btfss	status,0,c
  8583  003F5C  076F               	decf	(otoa@i+1)& (0+255),f,b
  8584  003F5E                     
  8585                           ; BSR set to: 0
  8586                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8587  003F5E  0E6C               	movlw	low _dbuf
  8588  003F60  256E               	addwf	otoa@i& (0+255),w,b
  8589  003F62  6ED9               	movwf	fsr2l,c
  8590  003F64  0E01               	movlw	high _dbuf
  8591  003F66  216F               	addwfc	(otoa@i+1)& (0+255),w,b
  8592  003F68  6EDA               	movwf	fsr2h,c
  8593  003F6A  0E30               	movlw	48
  8594  003F6C  6EDF               	movwf	indf2,c
  8595  003F6E                     
  8596                           ; BSR set to: 0
  8597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8598  003F6E  0764               	decf	otoa@w& (0+255),f,b
  8599  003F70  A0D8               	btfss	status,0,c
  8600  003F72  0765               	decf	(otoa@w+1)& (0+255),f,b
  8601  003F74                     l8994:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8605  003F74  C02B  F020         	movff	otoa@fp,pad@fp
  8606  003F78  C02C  F021         	movff	otoa@fp+1,pad@fp+1
  8607  003F7C  0E6C               	movlw	low _dbuf
  8608  003F7E  256E               	addwf	otoa@i& (0+255),w,b
  8609  003F80  6E22               	movwf	pad@buf^0,c
  8610  003F82  0E01               	movlw	high _dbuf
  8611  003F84  216F               	addwfc	(otoa@i+1)& (0+255),w,b
  8612  003F86  6E23               	movwf	(pad@buf+1)^0,c
  8613  003F88  C064  F024         	movff	otoa@w,pad@p
  8614  003F8C  C065  F025         	movff	otoa@w+1,pad@p+1
  8615  003F90  EC1A  F02B         	call	_pad	;wreg free
  8616  003F94  C020  F02B         	movff	?_pad,?_otoa
  8617  003F98  C021  F02C         	movff	?_pad+1,?_otoa+1
  8618  003F9C  0012               	return		;funcret
  8619  003F9E                     __end_of_otoa:
  8620                           	opt callstack 0
  8621                           
  8622 ;; *************** function _efgtoa *****************
  8623 ;; Defined at:
  8624 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  fp              2    4[BANK0 ] PTR struct _IO_FILE
  8627 ;;		 -> vsnprintf@f(6), 
  8628 ;;  f               4    6[BANK0 ] PTR struct _IO_FILE
  8629 ;;  c               1   10[BANK0 ] unsigned char 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  u               4   68[BANK0 ] unsigned char 
  8632 ;;  g               4   60[BANK0 ] unsigned char 
  8633 ;;  l               4   54[BANK0 ] unsigned char 
  8634 ;;  h               4   50[BANK0 ] unsigned char 
  8635 ;;  ou              4   16[BANK0 ] unsigned char 
  8636 ;;  n               2   66[BANK0 ] int 
  8637 ;;  e               2   64[BANK0 ] int 
  8638 ;;  i               2   58[BANK0 ] int 
  8639 ;;  w               2   47[BANK0 ] int 
  8640 ;;  p               2   44[BANK0 ] int 
  8641 ;;  sign            2   42[BANK0 ] int 
  8642 ;;  d               2   40[BANK0 ] int 
  8643 ;;  ne              2   38[BANK0 ] int 
  8644 ;;  m               2   36[BANK0 ] int 
  8645 ;;  pp              2   34[BANK0 ] int 
  8646 ;;  t               2   32[BANK0 ] int 
  8647 ;;  mode            1   49[BANK0 ] unsigned char 
  8648 ;;  nmode           1   46[BANK0 ] unsigned char 
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  2    4[BANK0 ] int 
  8651 ;; Registers used:
  8652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8658 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8659 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8660 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8661 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8662 ;;Total ram usage:       68 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    9
  8665 ;; This function calls:
  8666 ;;		___awdiv
  8667 ;;		___awmod
  8668 ;;		___fladd
  8669 ;;		___fldiv
  8670 ;;		___fleq
  8671 ;;		___flge
  8672 ;;		___flmul
  8673 ;;		___flneg
  8674 ;;		___flsub
  8675 ;;		___fltol
  8676 ;;		___fpclassifyf
  8677 ;;		_floorf
  8678 ;;		_isupper
  8679 ;;		_pad
  8680 ;;		_strcpy
  8681 ;;		_tolower
  8682 ;; This function is called by:
  8683 ;;		_vfpfcnvrt
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text15
  8688  0015A8                     __ptext15:
  8689                           	opt callstack 0
  8690  0015A8                     _efgtoa:
  8691                           	opt callstack 17
  8692  0015A8                     
  8693                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8694  0015A8  0E00               	movlw	0
  8695  0015AA  0100               	movlb	0	; () banked
  8696  0015AC  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  8697  0015AE  0E00               	movlw	0
  8698  0015B0  6F8A               	movwf	efgtoa@sign& (0+255),b
  8699  0015B2                     
  8700                           ; BSR set to: 0
  8701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8702  0015B2  C066  F09C         	movff	efgtoa@f,efgtoa@g
  8703  0015B6  C067  F09D         	movff	efgtoa@f+1,efgtoa@g+1
  8704  0015BA  C068  F09E         	movff	efgtoa@f+2,efgtoa@g+2
  8705  0015BE  C069  F09F         	movff	efgtoa@f+3,efgtoa@g+3
  8706  0015C2                     
  8707                           ; BSR set to: 0
  8708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8709  0015C2  BF9F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8710  0015C4  EFE8  F00A         	goto	u10870
  8711  0015C8  EFE6  F00A         	goto	u10871
  8712  0015CC                     u10871:
  8713  0015CC  EFFE  F00A         	goto	l8662
  8714  0015D0                     u10870:
  8715  0015D0                     
  8716                           ; BSR set to: 0
  8717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8718  0015D0  0E00               	movlw	0
  8719  0015D2  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  8720  0015D4  0E01               	movlw	1
  8721  0015D6  6F8A               	movwf	efgtoa@sign& (0+255),b
  8722  0015D8                     
  8723                           ; BSR set to: 0
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8725  0015D8  C09C  F010         	movff	efgtoa@g,___flneg@f1
  8726  0015DC  C09D  F011         	movff	efgtoa@g+1,___flneg@f1+1
  8727  0015E0  C09E  F012         	movff	efgtoa@g+2,___flneg@f1+2
  8728  0015E4  C09F  F013         	movff	efgtoa@g+3,___flneg@f1+3
  8729  0015E8  EC9C  F02F         	call	___flneg	;wreg free
  8730  0015EC  C010  F09C         	movff	?___flneg,efgtoa@g
  8731  0015F0  C011  F09D         	movff	?___flneg+1,efgtoa@g+1
  8732  0015F4  C012  F09E         	movff	?___flneg+2,efgtoa@g+2
  8733  0015F8  C013  F09F         	movff	?___flneg+3,efgtoa@g+3
  8734  0015FC                     l8662:
  8735                           
  8736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8737  0015FC  0E00               	movlw	0
  8738  0015FE  0100               	movlb	0	; () banked
  8739  001600  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  8740  001602  0E00               	movlw	0
  8741  001604  6FA2               	movwf	efgtoa@n& (0+255),b
  8742  001606                     
  8743                           ; BSR set to: 0
  8744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8745  001606  C043  F08F         	movff	_width,efgtoa@w
  8746  00160A  C044  F090         	movff	_width+1,efgtoa@w+1
  8747  00160E                     
  8748                           ; BSR set to: 0
  8749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8750  00160E  518A               	movf	efgtoa@sign& (0+255),w,b
  8751  001610  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8752  001612  A4D8               	btfss	status,2,c
  8753  001614  EF0E  F00B         	goto	u10881
  8754  001618  EF10  F00B         	goto	u10880
  8755  00161C                     u10881:
  8756  00161C  EF17  F00B         	goto	l8670
  8757  001620                     u10880:
  8758  001620                     
  8759                           ; BSR set to: 0
  8760  001620  A447               	btfss	_flags^0,2,c
  8761  001622  EF15  F00B         	goto	u10891
  8762  001626  EF17  F00B         	goto	u10890
  8763  00162A                     u10891:
  8764  00162A  EF31  F00B         	goto	l8682
  8765  00162E                     u10890:
  8766  00162E                     l8670:
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8770  00162E  518A               	movf	efgtoa@sign& (0+255),w,b
  8771  001630  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8772  001632  A4D8               	btfss	status,2,c
  8773  001634  EF1E  F00B         	goto	u10901
  8774  001638  EF20  F00B         	goto	u10900
  8775  00163C                     u10901:
  8776  00163C  EF26  F00B         	goto	l8674
  8777  001640                     u10900:
  8778  001640                     
  8779                           ; BSR set to: 0
  8780  001640  0E00               	movlw	0
  8781  001642  6F75               	movwf	(_efgtoa$1720+1)& (0+255),b
  8782  001644  0E2B               	movlw	43
  8783  001646  6F74               	movwf	_efgtoa$1720& (0+255),b
  8784  001648  EF2A  F00B         	goto	l8676
  8785  00164C                     l8674:
  8786                           
  8787                           ; BSR set to: 0
  8788  00164C  0E00               	movlw	0
  8789  00164E  6F75               	movwf	(_efgtoa$1720+1)& (0+255),b
  8790  001650  0E2D               	movlw	45
  8791  001652  6F74               	movwf	_efgtoa$1720& (0+255),b
  8792  001654                     l8676:
  8793                           
  8794                           ; BSR set to: 0
  8795  001654  C074  F16C         	movff	_efgtoa$1720,_dbuf
  8796  001658                     
  8797                           ; BSR set to: 0
  8798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8799  001658  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  8800  00165A  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  8801  00165C                     
  8802                           ; BSR set to: 0
  8803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8804  00165C  078F               	decf	efgtoa@w& (0+255),f,b
  8805  00165E  A0D8               	btfss	status,0,c
  8806  001660  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  8807  001662                     l8682:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8811  001662  C09C  F010         	movff	efgtoa@g,___fpclassifyf@x
  8812  001666  C09D  F011         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8813  00166A  C09E  F012         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8814  00166E  C09F  F013         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8815  001672  ECF4  F028         	call	___fpclassifyf	;wreg free
  8816  001676  0410               	decf	?___fpclassifyf^0,w,c
  8817  001678  1011               	iorwf	(?___fpclassifyf+1)^0,w,c
  8818  00167A  A4D8               	btfss	status,2,c
  8819  00167C  EF42  F00B         	goto	u10911
  8820  001680  EF44  F00B         	goto	u10910
  8821  001684                     u10911:
  8822  001684  EF9B  F00B         	goto	l8700
  8823  001688                     u10910:
  8824  001688  0EBF               	movlw	191
  8825  00168A  0100               	movlb	0	; () banked
  8826  00168C  6F6B               	movwf	??_efgtoa& (0+255),b
  8827  00168E  0EFF               	movlw	255
  8828  001690  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  8829  001692  516A               	movf	efgtoa@c& (0+255),w,b
  8830  001694  6F6D               	movwf	(??_efgtoa+2)& (0+255),b
  8831  001696  6B6E               	clrf	(??_efgtoa+3)& (0+255),b
  8832  001698  516B               	movf	??_efgtoa& (0+255),w,b
  8833  00169A  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  8834  00169C  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  8835  00169E  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8836  0016A0  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  8837  0016A2  E10A               	bnz	u10920
  8838  0016A4  0E1A               	movlw	26
  8839  0016A6  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  8840  0016A8  A0D8               	btfss	status,0,c
  8841  0016AA  EF59  F00B         	goto	u10921
  8842  0016AE  EF5C  F00B         	goto	u10920
  8843  0016B2                     u10921:
  8844  0016B2  0E01               	movlw	1
  8845  0016B4  EF5D  F00B         	goto	u10930
  8846  0016B8                     u10920:
  8847  0016B8  0E00               	movlw	0
  8848  0016BA                     u10930:
  8849  0016BA  6F76               	movwf	_efgtoa$1721& (0+255),b
  8850  0016BC  6B77               	clrf	(_efgtoa$1721+1)& (0+255),b
  8851  0016BE                     
  8852                           ; BSR set to: 0
  8853  0016BE  5176               	movf	_efgtoa$1721& (0+255),w,b
  8854  0016C0  1177               	iorwf	(_efgtoa$1721+1)& (0+255),w,b
  8855  0016C2  B4D8               	btfsc	status,2,c
  8856  0016C4  EF66  F00B         	goto	u10941
  8857  0016C8  EF68  F00B         	goto	u10940
  8858  0016CC                     u10941:
  8859  0016CC  EF76  F00B         	goto	l8692
  8860  0016D0                     u10940:
  8861  0016D0                     
  8862                           ; BSR set to: 0
  8863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8864  0016D0  0E6C               	movlw	low _dbuf
  8865  0016D2  25A2               	addwf	efgtoa@n& (0+255),w,b
  8866  0016D4  6E10               	movwf	strcpy@dest^0,c
  8867  0016D6  0E01               	movlw	high _dbuf
  8868  0016D8  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8869  0016DA  6E11               	movwf	(strcpy@dest+1)^0,c
  8870  0016DC  0EBA               	movlw	low STR_6
  8871  0016DE  6E12               	movwf	strcpy@src^0,c
  8872  0016E0  0EFF               	movlw	high STR_6
  8873  0016E2  6E13               	movwf	(strcpy@src+1)^0,c
  8874  0016E4  EC86  F02D         	call	_strcpy	;wreg free
  8875                           
  8876                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8877  0016E8  EF82  F00B         	goto	l8694
  8878  0016EC                     l8692:
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8882  0016EC  0E6C               	movlw	low _dbuf
  8883  0016EE  25A2               	addwf	efgtoa@n& (0+255),w,b
  8884  0016F0  6E10               	movwf	strcpy@dest^0,c
  8885  0016F2  0E01               	movlw	high _dbuf
  8886  0016F4  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8887  0016F6  6E11               	movwf	(strcpy@dest+1)^0,c
  8888  0016F8  0ECA               	movlw	low STR_7
  8889  0016FA  6E12               	movwf	strcpy@src^0,c
  8890  0016FC  0EFF               	movlw	high STR_7
  8891  0016FE  6E13               	movwf	(strcpy@src+1)^0,c
  8892  001700  EC86  F02D         	call	_strcpy	;wreg free
  8893  001704                     l8694:
  8894                           
  8895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8896  001704  0100               	movlb	0	; () banked
  8897  001706  0EFD               	movlw	253
  8898  001708  278F               	addwf	efgtoa@w& (0+255),f,b
  8899  00170A  0EFF               	movlw	255
  8900  00170C  2390               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8901  00170E                     l8696:
  8902                           
  8903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8904  00170E  C064  F020         	movff	efgtoa@fp,pad@fp
  8905  001712  C065  F021         	movff	efgtoa@fp+1,pad@fp+1
  8906  001716  0E6C               	movlw	low _dbuf
  8907  001718  6E22               	movwf	pad@buf^0,c
  8908  00171A  0E01               	movlw	high _dbuf
  8909  00171C  6E23               	movwf	(pad@buf+1)^0,c
  8910  00171E  C08F  F024         	movff	efgtoa@w,pad@p
  8911  001722  C090  F025         	movff	efgtoa@w+1,pad@p+1
  8912  001726  EC1A  F02B         	call	_pad	;wreg free
  8913  00172A  C020  F064         	movff	?_pad,?_efgtoa
  8914  00172E  C021  F065         	movff	?_pad+1,?_efgtoa+1
  8915  001732  EFAC  F010         	goto	l717
  8916  001736                     l8700:
  8917                           
  8918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8919  001736  C09C  F010         	movff	efgtoa@g,___fpclassifyf@x
  8920  00173A  C09D  F011         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8921  00173E  C09E  F012         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8922  001742  C09F  F013         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8923  001746  ECF4  F028         	call	___fpclassifyf	;wreg free
  8924  00174A  5010               	movf	?___fpclassifyf^0,w,c
  8925  00174C  1011               	iorwf	(?___fpclassifyf+1)^0,w,c
  8926  00174E  A4D8               	btfss	status,2,c
  8927  001750  EFAC  F00B         	goto	u10951
  8928  001754  EFAE  F00B         	goto	u10950
  8929  001758                     u10951:
  8930  001758  EFEE  F00B         	goto	l8718
  8931  00175C                     u10950:
  8932  00175C  0EBF               	movlw	191
  8933  00175E  0100               	movlb	0	; () banked
  8934  001760  6F6B               	movwf	??_efgtoa& (0+255),b
  8935  001762  0EFF               	movlw	255
  8936  001764  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  8937  001766  516A               	movf	efgtoa@c& (0+255),w,b
  8938  001768  6F6D               	movwf	(??_efgtoa+2)& (0+255),b
  8939  00176A  6B6E               	clrf	(??_efgtoa+3)& (0+255),b
  8940  00176C  516B               	movf	??_efgtoa& (0+255),w,b
  8941  00176E  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  8942  001770  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  8943  001772  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8944  001774  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  8945  001776  E10A               	bnz	u10960
  8946  001778  0E1A               	movlw	26
  8947  00177A  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  8948  00177C  A0D8               	btfss	status,0,c
  8949  00177E  EFC3  F00B         	goto	u10961
  8950  001782  EFC6  F00B         	goto	u10960
  8951  001786                     u10961:
  8952  001786  0E01               	movlw	1
  8953  001788  EFC7  F00B         	goto	u10970
  8954  00178C                     u10960:
  8955  00178C  0E00               	movlw	0
  8956  00178E                     u10970:
  8957  00178E  6F78               	movwf	_efgtoa$1725& (0+255),b
  8958  001790  6B79               	clrf	(_efgtoa$1725+1)& (0+255),b
  8959  001792                     
  8960                           ; BSR set to: 0
  8961  001792  5178               	movf	_efgtoa$1725& (0+255),w,b
  8962  001794  1179               	iorwf	(_efgtoa$1725+1)& (0+255),w,b
  8963  001796  B4D8               	btfsc	status,2,c
  8964  001798  EFD0  F00B         	goto	u10981
  8965  00179C  EFD2  F00B         	goto	u10980
  8966  0017A0                     u10981:
  8967  0017A0  EFE0  F00B         	goto	l8710
  8968  0017A4                     u10980:
  8969  0017A4                     
  8970                           ; BSR set to: 0
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8972  0017A4  0E6C               	movlw	low _dbuf
  8973  0017A6  25A2               	addwf	efgtoa@n& (0+255),w,b
  8974  0017A8  6E10               	movwf	strcpy@dest^0,c
  8975  0017AA  0E01               	movlw	high _dbuf
  8976  0017AC  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8977  0017AE  6E11               	movwf	(strcpy@dest+1)^0,c
  8978  0017B0  0EBE               	movlw	low STR_10
  8979  0017B2  6E12               	movwf	strcpy@src^0,c
  8980  0017B4  0EFF               	movlw	high STR_10
  8981  0017B6  6E13               	movwf	(strcpy@src+1)^0,c
  8982  0017B8  EC86  F02D         	call	_strcpy	;wreg free
  8983                           
  8984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8985  0017BC  EF82  F00B         	goto	l8694
  8986  0017C0                     l8710:
  8987                           
  8988                           ; BSR set to: 0
  8989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8990  0017C0  0E6C               	movlw	low _dbuf
  8991  0017C2  25A2               	addwf	efgtoa@n& (0+255),w,b
  8992  0017C4  6E10               	movwf	strcpy@dest^0,c
  8993  0017C6  0E01               	movlw	high _dbuf
  8994  0017C8  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8995  0017CA  6E11               	movwf	(strcpy@dest+1)^0,c
  8996  0017CC  0ED2               	movlw	low STR_11
  8997  0017CE  6E12               	movwf	strcpy@src^0,c
  8998  0017D0  0EFF               	movlw	high STR_11
  8999  0017D2  6E13               	movwf	(strcpy@src+1)^0,c
  9000  0017D4  EC86  F02D         	call	_strcpy	;wreg free
  9001  0017D8  EF82  F00B         	goto	l8694
  9002  0017DC                     l8718:
  9003                           
  9004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9005  0017DC  0E00               	movlw	0
  9006  0017DE  0100               	movlb	0	; () banked
  9007  0017E0  6FA4               	movwf	efgtoa@u& (0+255),b
  9008  0017E2  0E00               	movlw	0
  9009  0017E4  6FA5               	movwf	(efgtoa@u+1)& (0+255),b
  9010  0017E6  0E80               	movlw	128
  9011  0017E8  6FA6               	movwf	(efgtoa@u+2)& (0+255),b
  9012  0017EA  0E3F               	movlw	63
  9013  0017EC  6FA7               	movwf	(efgtoa@u+3)& (0+255),b
  9014                           
  9015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9016  0017EE  0E00               	movlw	0
  9017  0017F0  6FA1               	movwf	(efgtoa@e+1)& (0+255),b
  9018  0017F2  0E00               	movlw	0
  9019  0017F4  6FA0               	movwf	efgtoa@e& (0+255),b
  9020  0017F6                     
  9021                           ; BSR set to: 0
  9022                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9023  0017F6  C09C  F010         	movff	efgtoa@g,___fleq@ff1
  9024  0017FA  C09D  F011         	movff	efgtoa@g+1,___fleq@ff1+1
  9025  0017FE  C09E  F012         	movff	efgtoa@g+2,___fleq@ff1+2
  9026  001802  C09F  F013         	movff	efgtoa@g+3,___fleq@ff1+3
  9027  001806  0E00               	movlw	0
  9028  001808  6E14               	movwf	___fleq@ff2^0,c
  9029  00180A  0E00               	movlw	0
  9030  00180C  6E15               	movwf	(___fleq@ff2+1)^0,c
  9031  00180E  0E00               	movlw	0
  9032  001810  6E16               	movwf	(___fleq@ff2+2)^0,c
  9033  001812  0E00               	movlw	0
  9034  001814  6E17               	movwf	(___fleq@ff2+3)^0,c
  9035  001816  EC2B  F02C         	call	___fleq	;wreg free
  9036  00181A  B0D8               	btfsc	status,0,c
  9037  00181C  EF12  F00C         	goto	u10991
  9038  001820  EF14  F00C         	goto	u10990
  9039  001824                     u10991:
  9040  001824  EF97  F00C         	goto	l8736
  9041  001828                     u10990:
  9042  001828  EF33  F00C         	goto	l8728
  9043  00182C                     l8724:
  9044                           
  9045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9046  00182C  C0A4  F01E         	movff	efgtoa@u,___flmul@b
  9047  001830  C0A5  F01F         	movff	efgtoa@u+1,___flmul@b+1
  9048  001834  C0A6  F020         	movff	efgtoa@u+2,___flmul@b+2
  9049  001838  C0A7  F021         	movff	efgtoa@u+3,___flmul@b+3
  9050  00183C  0E00               	movlw	0
  9051  00183E  6E22               	movwf	___flmul@a^0,c
  9052  001840  0E00               	movlw	0
  9053  001842  6E23               	movwf	(___flmul@a+1)^0,c
  9054  001844  0E20               	movlw	32
  9055  001846  6E24               	movwf	(___flmul@a+2)^0,c
  9056  001848  0E41               	movlw	65
  9057  00184A  6E25               	movwf	(___flmul@a+3)^0,c
  9058  00184C  EC0D  F013         	call	___flmul	;wreg free
  9059  001850  C01E  F0A4         	movff	?___flmul,efgtoa@u
  9060  001854  C01F  F0A5         	movff	?___flmul+1,efgtoa@u+1
  9061  001858  C020  F0A6         	movff	?___flmul+2,efgtoa@u+2
  9062  00185C  C021  F0A7         	movff	?___flmul+3,efgtoa@u+3
  9063  001860                     
  9064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9065  001860  0100               	movlb	0	; () banked
  9066  001862  4BA0               	infsnz	efgtoa@e& (0+255),f,b
  9067  001864  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
  9068  001866                     l8728:
  9069                           
  9070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9071  001866  C09C  F037         	movff	efgtoa@g,___flge@ff1
  9072  00186A  C09D  F038         	movff	efgtoa@g+1,___flge@ff1+1
  9073  00186E  C09E  F039         	movff	efgtoa@g+2,___flge@ff1+2
  9074  001872  C09F  F03A         	movff	efgtoa@g+3,___flge@ff1+3
  9075  001876  0E00               	movlw	0
  9076  001878  6E22               	movwf	___flmul@a^0,c
  9077  00187A  0E00               	movlw	0
  9078  00187C  6E23               	movwf	(___flmul@a+1)^0,c
  9079  00187E  0E20               	movlw	32
  9080  001880  6E24               	movwf	(___flmul@a+2)^0,c
  9081  001882  0E41               	movlw	65
  9082  001884  6E25               	movwf	(___flmul@a+3)^0,c
  9083  001886  C0A4  F01E         	movff	efgtoa@u,___flmul@b
  9084  00188A  C0A5  F01F         	movff	efgtoa@u+1,___flmul@b+1
  9085  00188E  C0A6  F020         	movff	efgtoa@u+2,___flmul@b+2
  9086  001892  C0A7  F021         	movff	efgtoa@u+3,___flmul@b+3
  9087  001896  EC0D  F013         	call	___flmul	;wreg free
  9088  00189A  C01E  F03B         	movff	?___flmul,___flge@ff2
  9089  00189E  C01F  F03C         	movff	?___flmul+1,___flge@ff2+1
  9090  0018A2  C020  F03D         	movff	?___flmul+2,___flge@ff2+2
  9091  0018A6  C021  F03E         	movff	?___flmul+3,___flge@ff2+3
  9092  0018AA  ECEF  F027         	call	___flge	;wreg free
  9093  0018AE  B0D8               	btfsc	status,0,c
  9094  0018B0  EF5C  F00C         	goto	u11001
  9095  0018B4  EF5E  F00C         	goto	u11000
  9096  0018B8                     u11001:
  9097  0018B8  EF16  F00C         	goto	l8724
  9098  0018BC                     u11000:
  9099  0018BC  EF7E  F00C         	goto	l8734
  9100  0018C0                     l8730:
  9101                           
  9102                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9103  0018C0  C0A4  F010         	movff	efgtoa@u,___fldiv@b
  9104  0018C4  C0A5  F011         	movff	efgtoa@u+1,___fldiv@b+1
  9105  0018C8  C0A6  F012         	movff	efgtoa@u+2,___fldiv@b+2
  9106  0018CC  C0A7  F013         	movff	efgtoa@u+3,___fldiv@b+3
  9107  0018D0  0E00               	movlw	0
  9108  0018D2  6E14               	movwf	___fldiv@a^0,c
  9109  0018D4  0E00               	movlw	0
  9110  0018D6  6E15               	movwf	(___fldiv@a+1)^0,c
  9111  0018D8  0E20               	movlw	32
  9112  0018DA  6E16               	movwf	(___fldiv@a+2)^0,c
  9113  0018DC  0E41               	movlw	65
  9114  0018DE  6E17               	movwf	(___fldiv@a+3)^0,c
  9115  0018E0  EC22  F015         	call	___fldiv	;wreg free
  9116  0018E4  C010  F0A4         	movff	?___fldiv,efgtoa@u
  9117  0018E8  C011  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  9118  0018EC  C012  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  9119  0018F0  C013  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  9120  0018F4                     
  9121                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9122  0018F4  0100               	movlb	0	; () banked
  9123  0018F6  07A0               	decf	efgtoa@e& (0+255),f,b
  9124  0018F8  A0D8               	btfss	status,0,c
  9125  0018FA  07A1               	decf	(efgtoa@e+1)& (0+255),f,b
  9126  0018FC                     l8734:
  9127                           
  9128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9129  0018FC  C09C  F037         	movff	efgtoa@g,___flge@ff1
  9130  001900  C09D  F038         	movff	efgtoa@g+1,___flge@ff1+1
  9131  001904  C09E  F039         	movff	efgtoa@g+2,___flge@ff1+2
  9132  001908  C09F  F03A         	movff	efgtoa@g+3,___flge@ff1+3
  9133  00190C  C0A4  F03B         	movff	efgtoa@u,___flge@ff2
  9134  001910  C0A5  F03C         	movff	efgtoa@u+1,___flge@ff2+1
  9135  001914  C0A6  F03D         	movff	efgtoa@u+2,___flge@ff2+2
  9136  001918  C0A7  F03E         	movff	efgtoa@u+3,___flge@ff2+3
  9137  00191C  ECEF  F027         	call	___flge	;wreg free
  9138  001920  A0D8               	btfss	status,0,c
  9139  001922  EF95  F00C         	goto	u11011
  9140  001926  EF97  F00C         	goto	u11010
  9141  00192A                     u11011:
  9142  00192A  EF60  F00C         	goto	l8730
  9143  00192E                     u11010:
  9144  00192E                     l8736:
  9145                           
  9146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9147  00192E  C06A  F016         	movff	efgtoa@c,tolower@c
  9148  001932  6A17               	clrf	(tolower@c+1)^0,c
  9149  001934  EC27  F02D         	call	_tolower	;wreg free
  9150  001938  5016               	movf	?_tolower^0,w,c
  9151  00193A  0100               	movlb	0	; () banked
  9152  00193C  6F91               	movwf	efgtoa@mode& (0+255),b
  9153  00193E                     
  9154                           ; BSR set to: 0
  9155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9156  00193E  C091  F08E         	movff	efgtoa@mode,efgtoa@nmode
  9157  001942                     
  9158                           ; BSR set to: 0
  9159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9160  001942  0E67               	movlw	103
  9161  001944  1991               	xorwf	efgtoa@mode& (0+255),w,b
  9162  001946  A4D8               	btfss	status,2,c
  9163  001948  EFA8  F00C         	goto	u11021
  9164  00194C  EFAA  F00C         	goto	u11020
  9165  001950                     u11021:
  9166  001950  EFD0  F00C         	goto	l8750
  9167  001954                     u11020:
  9168  001954                     
  9169                           ; BSR set to: 0
  9170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9171  001954  5045               	movf	_prec^0,w,c
  9172  001956  1046               	iorwf	(_prec+1)^0,w,c
  9173  001958  A4D8               	btfss	status,2,c
  9174  00195A  EFB1  F00C         	goto	u11031
  9175  00195E  EFB3  F00C         	goto	u11030
  9176  001962                     u11031:
  9177  001962  EFB7  F00C         	goto	l8746
  9178  001966                     u11030:
  9179  001966                     
  9180                           ; BSR set to: 0
  9181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9182  001966  0E00               	movlw	0
  9183  001968  6E46               	movwf	(_prec+1)^0,c
  9184  00196A  0E01               	movlw	1
  9185  00196C  6E45               	movwf	_prec^0,c
  9186  00196E                     l8746:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9190  00196E  BE46               	btfsc	(_prec+1)^0,7,c
  9191  001970  EFC4  F00C         	goto	u11040
  9192  001974  5046               	movf	(_prec+1)^0,w,c
  9193  001976  E106               	bnz	u11041
  9194  001978  0445               	decf	_prec^0,w,c
  9195  00197A  B0D8               	btfsc	status,0,c
  9196  00197C  EFC2  F00C         	goto	u11041
  9197  001980  EFC4  F00C         	goto	u11040
  9198  001984                     u11041:
  9199  001984  EFCA  F00C         	goto	l735
  9200  001988                     u11040:
  9201  001988                     l8748:
  9202                           
  9203                           ; BSR set to: 0
  9204  001988  0E00               	movlw	0
  9205  00198A  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  9206  00198C  0E06               	movlw	6
  9207  00198E  6F8C               	movwf	efgtoa@p& (0+255),b
  9208  001990  EFD9  F00C         	goto	l8756
  9209  001994                     l735:
  9210                           
  9211                           ; BSR set to: 0
  9212  001994  C045  F08C         	movff	_prec,efgtoa@p
  9213  001998  C046  F08D         	movff	_prec+1,efgtoa@p+1
  9214  00199C  EFD9  F00C         	goto	l8756
  9215  0019A0                     l8750:
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9219  0019A0  BE46               	btfsc	(_prec+1)^0,7,c
  9220  0019A2  EFD5  F00C         	goto	u11051
  9221  0019A6  EFD7  F00C         	goto	u11050
  9222  0019AA                     u11051:
  9223  0019AA  EFC4  F00C         	goto	l8748
  9224  0019AE                     u11050:
  9225  0019AE  EFCA  F00C         	goto	l735
  9226  0019B2                     l8756:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9230  0019B2  0E67               	movlw	103
  9231  0019B4  1991               	xorwf	efgtoa@mode& (0+255),w,b
  9232  0019B6  A4D8               	btfss	status,2,c
  9233  0019B8  EFE0  F00C         	goto	u11061
  9234  0019BC  EFE2  F00C         	goto	u11060
  9235  0019C0                     u11061:
  9236  0019C0  EF11  F00D         	goto	l8766
  9237  0019C4                     u11060:
  9238  0019C4                     
  9239                           ; BSR set to: 0
  9240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9241  0019C4  AFA1               	btfss	(efgtoa@e+1)& (0+255),7,b
  9242  0019C6  EFF0  F00C         	goto	u11070
  9243  0019CA  0EFC               	movlw	252
  9244  0019CC  5DA0               	subwf	efgtoa@e& (0+255),w,b
  9245  0019CE  0EFF               	movlw	255
  9246  0019D0  59A1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9247  0019D2  A0D8               	btfss	status,0,c
  9248  0019D4  EFEE  F00C         	goto	u11071
  9249  0019D8  EFF0  F00C         	goto	u11070
  9250  0019DC                     u11071:
  9251  0019DC  EF0F  F00D         	goto	l8764
  9252  0019E0                     u11070:
  9253  0019E0                     
  9254                           ; BSR set to: 0
  9255  0019E0  0EFF               	movlw	255
  9256  0019E2  6F6B               	movwf	??_efgtoa& (0+255),b
  9257  0019E4  0EFF               	movlw	255
  9258  0019E6  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
  9259  0019E8  C08C  F06D         	movff	efgtoa@p,??_efgtoa+2
  9260  0019EC  C08D  F06E         	movff	efgtoa@p+1,??_efgtoa+3
  9261  0019F0  516B               	movf	??_efgtoa& (0+255),w,b
  9262  0019F2  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
  9263  0019F4  516C               	movf	(??_efgtoa+1)& (0+255),w,b
  9264  0019F6  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9265  0019F8  51A0               	movf	efgtoa@e& (0+255),w,b
  9266  0019FA  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
  9267  0019FC  516E               	movf	(??_efgtoa+3)& (0+255),w,b
  9268  0019FE  0A80               	xorlw	128
  9269  001A00  6F6F               	movwf	(??_efgtoa+4)& (0+255),b
  9270  001A02  51A1               	movf	(efgtoa@e+1)& (0+255),w,b
  9271  001A04  0A80               	xorlw	128
  9272  001A06  596F               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9273  001A08  A0D8               	btfss	status,0,c
  9274  001A0A  EF09  F00D         	goto	u11081
  9275  001A0E  EF0B  F00D         	goto	u11080
  9276  001A12                     u11081:
  9277  001A12  EF0F  F00D         	goto	l8764
  9278  001A16                     u11080:
  9279  001A16                     
  9280                           ; BSR set to: 0
  9281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9282  001A16  0E66               	movlw	102
  9283  001A18  6F8E               	movwf	efgtoa@nmode& (0+255),b
  9284                           
  9285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9286  001A1A  EF11  F00D         	goto	l8766
  9287  001A1E                     l8764:
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9291  001A1E  0E65               	movlw	101
  9292  001A20  6F8E               	movwf	efgtoa@nmode& (0+255),b
  9293  001A22                     l8766:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9297  001A22  C08C  F084         	movff	efgtoa@p,efgtoa@m
  9298  001A26  C08D  F085         	movff	efgtoa@p+1,efgtoa@m+1
  9299  001A2A                     
  9300                           ; BSR set to: 0
  9301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9302  001A2A  0E67               	movlw	103
  9303  001A2C  1991               	xorwf	efgtoa@mode& (0+255),w,b
  9304  001A2E  A4D8               	btfss	status,2,c
  9305  001A30  EF1C  F00D         	goto	u11091
  9306  001A34  EF1E  F00D         	goto	u11090
  9307  001A38                     u11091:
  9308  001A38  EF2E  F00D         	goto	l8774
  9309  001A3C                     u11090:
  9310  001A3C                     
  9311                           ; BSR set to: 0
  9312  001A3C  0E66               	movlw	102
  9313  001A3E  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  9314  001A40  A4D8               	btfss	status,2,c
  9315  001A42  EF25  F00D         	goto	u11101
  9316  001A46  EF27  F00D         	goto	u11100
  9317  001A4A                     u11101:
  9318  001A4A  EF30  F00D         	goto	l8776
  9319  001A4E                     u11100:
  9320  001A4E                     
  9321                           ; BSR set to: 0
  9322  001A4E  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9323  001A50  EF2E  F00D         	goto	u11110
  9324  001A54  EF2C  F00D         	goto	u11111
  9325  001A58                     u11111:
  9326  001A58  EF30  F00D         	goto	l8776
  9327  001A5C                     u11110:
  9328  001A5C                     l8774:
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9332  001A5C  4B84               	infsnz	efgtoa@m& (0+255),f,b
  9333  001A5E  2B85               	incf	(efgtoa@m+1)& (0+255),f,b
  9334  001A60                     l8776:
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9338  001A60  0E66               	movlw	102
  9339  001A62  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  9340  001A64  A4D8               	btfss	status,2,c
  9341  001A66  EF37  F00D         	goto	u11121
  9342  001A6A  EF39  F00D         	goto	u11120
  9343  001A6E                     u11121:
  9344  001A6E  EF59  F00D         	goto	l8786
  9345  001A72                     u11120:
  9346  001A72                     
  9347                           ; BSR set to: 0
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9349  001A72  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9350  001A74  EF40  F00D         	goto	u11130
  9351  001A78  EF3E  F00D         	goto	u11131
  9352  001A7C                     u11131:
  9353  001A7C  EF4C  F00D         	goto	l8782
  9354  001A80                     u11130:
  9355  001A80                     
  9356                           ; BSR set to: 0
  9357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9358  001A80  0E00               	movlw	0
  9359  001A82  6FA4               	movwf	efgtoa@u& (0+255),b
  9360  001A84  0E00               	movlw	0
  9361  001A86  6FA5               	movwf	(efgtoa@u+1)& (0+255),b
  9362  001A88  0E80               	movlw	128
  9363  001A8A  6FA6               	movwf	(efgtoa@u+2)& (0+255),b
  9364  001A8C  0E3F               	movlw	63
  9365  001A8E  6FA7               	movwf	(efgtoa@u+3)& (0+255),b
  9366                           
  9367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9368  001A90  0E00               	movlw	0
  9369  001A92  6FA1               	movwf	(efgtoa@e+1)& (0+255),b
  9370  001A94  0E00               	movlw	0
  9371  001A96  6FA0               	movwf	efgtoa@e& (0+255),b
  9372  001A98                     l8782:
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9376  001A98  0E67               	movlw	103
  9377  001A9A  1991               	xorwf	efgtoa@mode& (0+255),w,b
  9378  001A9C  B4D8               	btfsc	status,2,c
  9379  001A9E  EF53  F00D         	goto	u11141
  9380  001AA2  EF55  F00D         	goto	u11140
  9381  001AA6                     u11141:
  9382  001AA6  EF59  F00D         	goto	l8786
  9383  001AAA                     u11140:
  9384  001AAA                     
  9385                           ; BSR set to: 0
  9386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9387  001AAA  51A0               	movf	efgtoa@e& (0+255),w,b
  9388  001AAC  2784               	addwf	efgtoa@m& (0+255),f,b
  9389  001AAE  51A1               	movf	(efgtoa@e+1)& (0+255),w,b
  9390  001AB0  2385               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9391  001AB2                     l8786:
  9392                           
  9393                           ; BSR set to: 0
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9395  001AB2  0E00               	movlw	0
  9396  001AB4  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  9397  001AB6  0E00               	movlw	0
  9398  001AB8  6F9A               	movwf	efgtoa@i& (0+255),b
  9399  001ABA                     
  9400                           ; BSR set to: 0
  9401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9402  001ABA  C09C  F092         	movff	efgtoa@g,efgtoa@h
  9403  001ABE  C09D  F093         	movff	efgtoa@g+1,efgtoa@h+1
  9404  001AC2  C09E  F094         	movff	efgtoa@g+2,efgtoa@h+2
  9405  001AC6  C09F  F095         	movff	efgtoa@g+3,efgtoa@h+3
  9406  001ACA                     
  9407                           ; BSR set to: 0
  9408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9409  001ACA  C0A4  F070         	movff	efgtoa@u,efgtoa@ou
  9410  001ACE  C0A5  F071         	movff	efgtoa@u+1,efgtoa@ou+1
  9411  001AD2  C0A6  F072         	movff	efgtoa@u+2,efgtoa@ou+2
  9412  001AD6  C0A7  F073         	movff	efgtoa@u+3,efgtoa@ou+3
  9413                           
  9414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9415  001ADA  EFEA  F00D         	goto	l8800
  9416  001ADE                     l8792:
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9420  001ADE  C092  F010         	movff	efgtoa@h,___fldiv@b
  9421  001AE2  C093  F011         	movff	efgtoa@h+1,___fldiv@b+1
  9422  001AE6  C094  F012         	movff	efgtoa@h+2,___fldiv@b+2
  9423  001AEA  C095  F013         	movff	efgtoa@h+3,___fldiv@b+3
  9424  001AEE  C0A4  F014         	movff	efgtoa@u,___fldiv@a
  9425  001AF2  C0A5  F015         	movff	efgtoa@u+1,___fldiv@a+1
  9426  001AF6  C0A6  F016         	movff	efgtoa@u+2,___fldiv@a+2
  9427  001AFA  C0A7  F017         	movff	efgtoa@u+3,___fldiv@a+3
  9428  001AFE  EC22  F015         	call	___fldiv	;wreg free
  9429  001B02  C010  F029         	movff	?___fldiv,floorf@x
  9430  001B06  C011  F02A         	movff	?___fldiv+1,floorf@x+1
  9431  001B0A  C012  F02B         	movff	?___fldiv+2,floorf@x+2
  9432  001B0E  C013  F02C         	movff	?___fldiv+3,floorf@x+3
  9433  001B12  ECCA  F01C         	call	_floorf	;wreg free
  9434  001B16  C029  F096         	movff	?_floorf,efgtoa@l
  9435  001B1A  C02A  F097         	movff	?_floorf+1,efgtoa@l+1
  9436  001B1E  C02B  F098         	movff	?_floorf+2,efgtoa@l+2
  9437  001B22  C02C  F099         	movff	?_floorf+3,efgtoa@l+3
  9438                           
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9440  001B26  C096  F010         	movff	efgtoa@l,___fltol@f1
  9441  001B2A  C097  F011         	movff	efgtoa@l+1,___fltol@f1+1
  9442  001B2E  C098  F012         	movff	efgtoa@l+2,___fltol@f1+2
  9443  001B32  C099  F013         	movff	efgtoa@l+3,___fltol@f1+3
  9444  001B36  EC6C  F027         	call	___fltol	;wreg free
  9445  001B3A  C010  F088         	movff	?___fltol,efgtoa@d
  9446  001B3E  C011  F089         	movff	?___fltol+1,efgtoa@d+1
  9447  001B42                     
  9448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9449  001B42  C092  F037         	movff	efgtoa@h,___flsub@b
  9450  001B46  C093  F038         	movff	efgtoa@h+1,___flsub@b+1
  9451  001B4A  C094  F039         	movff	efgtoa@h+2,___flsub@b+2
  9452  001B4E  C095  F03A         	movff	efgtoa@h+3,___flsub@b+3
  9453  001B52  C0A4  F022         	movff	efgtoa@u,___flmul@a
  9454  001B56  C0A5  F023         	movff	efgtoa@u+1,___flmul@a+1
  9455  001B5A  C0A6  F024         	movff	efgtoa@u+2,___flmul@a+2
  9456  001B5E  C0A7  F025         	movff	efgtoa@u+3,___flmul@a+3
  9457  001B62  C096  F01E         	movff	efgtoa@l,___flmul@b
  9458  001B66  C097  F01F         	movff	efgtoa@l+1,___flmul@b+1
  9459  001B6A  C098  F020         	movff	efgtoa@l+2,___flmul@b+2
  9460  001B6E  C099  F021         	movff	efgtoa@l+3,___flmul@b+3
  9461  001B72  EC0D  F013         	call	___flmul	;wreg free
  9462  001B76  C01E  F03B         	movff	?___flmul,___flsub@a
  9463  001B7A  C01F  F03C         	movff	?___flmul+1,___flsub@a+1
  9464  001B7E  C020  F03D         	movff	?___flmul+2,___flsub@a+2
  9465  001B82  C021  F03E         	movff	?___flmul+3,___flsub@a+3
  9466  001B86  EC80  F02E         	call	___flsub	;wreg free
  9467  001B8A  C037  F092         	movff	?___flsub,efgtoa@h
  9468  001B8E  C038  F093         	movff	?___flsub+1,efgtoa@h+1
  9469  001B92  C039  F094         	movff	?___flsub+2,efgtoa@h+2
  9470  001B96  C03A  F095         	movff	?___flsub+3,efgtoa@h+3
  9471  001B9A                     
  9472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9473  001B9A  C0A4  F010         	movff	efgtoa@u,___fldiv@b
  9474  001B9E  C0A5  F011         	movff	efgtoa@u+1,___fldiv@b+1
  9475  001BA2  C0A6  F012         	movff	efgtoa@u+2,___fldiv@b+2
  9476  001BA6  C0A7  F013         	movff	efgtoa@u+3,___fldiv@b+3
  9477  001BAA  0E00               	movlw	0
  9478  001BAC  6E14               	movwf	___fldiv@a^0,c
  9479  001BAE  0E00               	movlw	0
  9480  001BB0  6E15               	movwf	(___fldiv@a+1)^0,c
  9481  001BB2  0E20               	movlw	32
  9482  001BB4  6E16               	movwf	(___fldiv@a+2)^0,c
  9483  001BB6  0E41               	movlw	65
  9484  001BB8  6E17               	movwf	(___fldiv@a+3)^0,c
  9485  001BBA  EC22  F015         	call	___fldiv	;wreg free
  9486  001BBE  C010  F0A4         	movff	?___fldiv,efgtoa@u
  9487  001BC2  C011  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  9488  001BC6  C012  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  9489  001BCA  C013  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  9490  001BCE                     
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9492  001BCE  0100               	movlb	0	; () banked
  9493  001BD0  4B9A               	infsnz	efgtoa@i& (0+255),f,b
  9494  001BD2  2B9B               	incf	(efgtoa@i+1)& (0+255),f,b
  9495  001BD4                     l8800:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9499  001BD4  5184               	movf	efgtoa@m& (0+255),w,b
  9500  001BD6  5D9A               	subwf	efgtoa@i& (0+255),w,b
  9501  001BD8  519B               	movf	(efgtoa@i+1)& (0+255),w,b
  9502  001BDA  0A80               	xorlw	128
  9503  001BDC  6F6B               	movwf	??_efgtoa& (0+255),b
  9504  001BDE  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  9505  001BE0  0A80               	xorlw	128
  9506  001BE2  596B               	subwfb	??_efgtoa& (0+255),w,b
  9507  001BE4  A0D8               	btfss	status,0,c
  9508  001BE6  EFF7  F00D         	goto	u11151
  9509  001BEA  EFF9  F00D         	goto	u11150
  9510  001BEE                     u11151:
  9511  001BEE  EF6F  F00D         	goto	l8792
  9512  001BF2                     u11150:
  9513  001BF2                     
  9514                           ; BSR set to: 0
  9515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9516  001BF2  C0A4  F01E         	movff	efgtoa@u,___flmul@b
  9517  001BF6  C0A5  F01F         	movff	efgtoa@u+1,___flmul@b+1
  9518  001BFA  C0A6  F020         	movff	efgtoa@u+2,___flmul@b+2
  9519  001BFE  C0A7  F021         	movff	efgtoa@u+3,___flmul@b+3
  9520  001C02  0E00               	movlw	0
  9521  001C04  6E22               	movwf	___flmul@a^0,c
  9522  001C06  0E00               	movlw	0
  9523  001C08  6E23               	movwf	(___flmul@a+1)^0,c
  9524  001C0A  0EA0               	movlw	160
  9525  001C0C  6E24               	movwf	(___flmul@a+2)^0,c
  9526  001C0E  0E40               	movlw	64
  9527  001C10  6E25               	movwf	(___flmul@a+3)^0,c
  9528  001C12  EC0D  F013         	call	___flmul	;wreg free
  9529  001C16  C01E  F096         	movff	?___flmul,efgtoa@l
  9530  001C1A  C01F  F097         	movff	?___flmul+1,efgtoa@l+1
  9531  001C1E  C020  F098         	movff	?___flmul+2,efgtoa@l+2
  9532  001C22  C021  F099         	movff	?___flmul+3,efgtoa@l+3
  9533  001C26                     
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9535  001C26  C092  F037         	movff	efgtoa@h,___flge@ff1
  9536  001C2A  C093  F038         	movff	efgtoa@h+1,___flge@ff1+1
  9537  001C2E  C094  F039         	movff	efgtoa@h+2,___flge@ff1+2
  9538  001C32  C095  F03A         	movff	efgtoa@h+3,___flge@ff1+3
  9539  001C36  C096  F03B         	movff	efgtoa@l,___flge@ff2
  9540  001C3A  C097  F03C         	movff	efgtoa@l+1,___flge@ff2+1
  9541  001C3E  C098  F03D         	movff	efgtoa@l+2,___flge@ff2+2
  9542  001C42  C099  F03E         	movff	efgtoa@l+3,___flge@ff2+3
  9543  001C46  ECEF  F027         	call	___flge	;wreg free
  9544  001C4A  B0D8               	btfsc	status,0,c
  9545  001C4C  EF2A  F00E         	goto	u11161
  9546  001C50  EF2C  F00E         	goto	u11160
  9547  001C54                     u11161:
  9548  001C54  EF37  F00E         	goto	l8808
  9549  001C58                     u11160:
  9550  001C58                     
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9552  001C58  0E00               	movlw	0
  9553  001C5A  0100               	movlb	0	; () banked
  9554  001C5C  6F96               	movwf	efgtoa@l& (0+255),b
  9555  001C5E  0E00               	movlw	0
  9556  001C60  6F97               	movwf	(efgtoa@l+1)& (0+255),b
  9557  001C62  0E00               	movlw	0
  9558  001C64  6F98               	movwf	(efgtoa@l+2)& (0+255),b
  9559  001C66  0E00               	movlw	0
  9560  001C68  6F99               	movwf	(efgtoa@l+3)& (0+255),b
  9561                           
  9562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9563  001C6A  EF60  F00E         	goto	l8814
  9564  001C6E                     l8808:
  9565                           
  9566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9567  001C6E  C092  F010         	movff	efgtoa@h,___fleq@ff1
  9568  001C72  C093  F011         	movff	efgtoa@h+1,___fleq@ff1+1
  9569  001C76  C094  F012         	movff	efgtoa@h+2,___fleq@ff1+2
  9570  001C7A  C095  F013         	movff	efgtoa@h+3,___fleq@ff1+3
  9571  001C7E  C096  F014         	movff	efgtoa@l,___fleq@ff2
  9572  001C82  C097  F015         	movff	efgtoa@l+1,___fleq@ff2+1
  9573  001C86  C098  F016         	movff	efgtoa@l+2,___fleq@ff2+2
  9574  001C8A  C099  F017         	movff	efgtoa@l+3,___fleq@ff2+3
  9575  001C8E  EC2B  F02C         	call	___fleq	;wreg free
  9576  001C92  A0D8               	btfss	status,0,c
  9577  001C94  EF4E  F00E         	goto	u11171
  9578  001C98  EF50  F00E         	goto	u11170
  9579  001C9C                     u11171:
  9580  001C9C  EF60  F00E         	goto	l8814
  9581  001CA0                     u11170:
  9582  001CA0  0100               	movlb	0	; () banked
  9583  001CA2  B188               	btfsc	efgtoa@d& (0+255),0,b
  9584  001CA4  EF56  F00E         	goto	u11181
  9585  001CA8  EF58  F00E         	goto	u11180
  9586  001CAC                     u11181:
  9587  001CAC  EF60  F00E         	goto	l8814
  9588  001CB0                     u11180:
  9589  001CB0                     
  9590                           ; BSR set to: 0
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9592  001CB0  0E00               	movlw	0
  9593  001CB2  6F96               	movwf	efgtoa@l& (0+255),b
  9594  001CB4  0E00               	movlw	0
  9595  001CB6  6F97               	movwf	(efgtoa@l+1)& (0+255),b
  9596  001CB8  0E00               	movlw	0
  9597  001CBA  6F98               	movwf	(efgtoa@l+2)& (0+255),b
  9598  001CBC  0E00               	movlw	0
  9599  001CBE  6F99               	movwf	(efgtoa@l+3)& (0+255),b
  9600  001CC0                     l8814:
  9601                           
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9603  001CC0  C09C  F010         	movff	efgtoa@g,___fladd@b
  9604  001CC4  C09D  F011         	movff	efgtoa@g+1,___fladd@b+1
  9605  001CC8  C09E  F012         	movff	efgtoa@g+2,___fladd@b+2
  9606  001CCC  C09F  F013         	movff	efgtoa@g+3,___fladd@b+3
  9607  001CD0  C096  F014         	movff	efgtoa@l,___fladd@a
  9608  001CD4  C097  F015         	movff	efgtoa@l+1,___fladd@a+1
  9609  001CD8  C098  F016         	movff	efgtoa@l+2,___fladd@a+2
  9610  001CDC  C099  F017         	movff	efgtoa@l+3,___fladd@a+3
  9611  001CE0  ECAD  F010         	call	___fladd	;wreg free
  9612  001CE4  C010  F092         	movff	?___fladd,efgtoa@h
  9613  001CE8  C011  F093         	movff	?___fladd+1,efgtoa@h+1
  9614  001CEC  C012  F094         	movff	?___fladd+2,efgtoa@h+2
  9615  001CF0  C013  F095         	movff	?___fladd+3,efgtoa@h+3
  9616  001CF4                     
  9617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9618  001CF4  C070  F0A4         	movff	efgtoa@ou,efgtoa@u
  9619  001CF8  C071  F0A5         	movff	efgtoa@ou+1,efgtoa@u+1
  9620  001CFC  C072  F0A6         	movff	efgtoa@ou+2,efgtoa@u+2
  9621  001D00  C073  F0A7         	movff	efgtoa@ou+3,efgtoa@u+3
  9622  001D04                     
  9623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9624  001D04  0E65               	movlw	101
  9625  001D06  0100               	movlb	0	; () banked
  9626  001D08  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  9627  001D0A  B4D8               	btfsc	status,2,c
  9628  001D0C  EF8A  F00E         	goto	u11191
  9629  001D10  EF8C  F00E         	goto	u11190
  9630  001D14                     u11191:
  9631  001D14  EF92  F00E         	goto	l8822
  9632  001D18                     u11190:
  9633  001D18                     
  9634                           ; BSR set to: 0
  9635  001D18  C0A0  F086         	movff	efgtoa@e,efgtoa@ne
  9636  001D1C  C0A1  F087         	movff	efgtoa@e+1,efgtoa@ne+1
  9637  001D20  EF96  F00E         	goto	l761
  9638  001D24                     l8822:
  9639                           
  9640                           ; BSR set to: 0
  9641  001D24  0E00               	movlw	0
  9642  001D26  6F87               	movwf	(efgtoa@ne+1)& (0+255),b
  9643  001D28  0E00               	movlw	0
  9644  001D2A  6F86               	movwf	efgtoa@ne& (0+255),b
  9645  001D2C                     l761:
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9649  001D2C  0E00               	movlw	0
  9650  001D2E  6F83               	movwf	(efgtoa@pp+1)& (0+255),b
  9651  001D30  0E00               	movlw	0
  9652  001D32  6F82               	movwf	efgtoa@pp& (0+255),b
  9653                           
  9654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9655  001D34  0E00               	movlw	0
  9656  001D36  6F81               	movwf	(efgtoa@t+1)& (0+255),b
  9657  001D38  0E00               	movlw	0
  9658  001D3A  6F80               	movwf	efgtoa@t& (0+255),b
  9659                           
  9660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9661  001D3C  0E00               	movlw	0
  9662  001D3E  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  9663  001D40  0E00               	movlw	0
  9664  001D42  6F9A               	movwf	efgtoa@i& (0+255),b
  9665                           
  9666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9667  001D44  EF92  F00F         	goto	l8872
  9668  001D48                     l8824:
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9672  001D48  C092  F010         	movff	efgtoa@h,___fldiv@b
  9673  001D4C  C093  F011         	movff	efgtoa@h+1,___fldiv@b+1
  9674  001D50  C094  F012         	movff	efgtoa@h+2,___fldiv@b+2
  9675  001D54  C095  F013         	movff	efgtoa@h+3,___fldiv@b+3
  9676  001D58  C0A4  F014         	movff	efgtoa@u,___fldiv@a
  9677  001D5C  C0A5  F015         	movff	efgtoa@u+1,___fldiv@a+1
  9678  001D60  C0A6  F016         	movff	efgtoa@u+2,___fldiv@a+2
  9679  001D64  C0A7  F017         	movff	efgtoa@u+3,___fldiv@a+3
  9680  001D68  EC22  F015         	call	___fldiv	;wreg free
  9681  001D6C  C010  F029         	movff	?___fldiv,floorf@x
  9682  001D70  C011  F02A         	movff	?___fldiv+1,floorf@x+1
  9683  001D74  C012  F02B         	movff	?___fldiv+2,floorf@x+2
  9684  001D78  C013  F02C         	movff	?___fldiv+3,floorf@x+3
  9685  001D7C  ECCA  F01C         	call	_floorf	;wreg free
  9686  001D80  C029  F096         	movff	?_floorf,efgtoa@l
  9687  001D84  C02A  F097         	movff	?_floorf+1,efgtoa@l+1
  9688  001D88  C02B  F098         	movff	?_floorf+2,efgtoa@l+2
  9689  001D8C  C02C  F099         	movff	?_floorf+3,efgtoa@l+3
  9690                           
  9691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9692  001D90  C096  F010         	movff	efgtoa@l,___fltol@f1
  9693  001D94  C097  F011         	movff	efgtoa@l+1,___fltol@f1+1
  9694  001D98  C098  F012         	movff	efgtoa@l+2,___fltol@f1+2
  9695  001D9C  C099  F013         	movff	efgtoa@l+3,___fltol@f1+3
  9696  001DA0  EC6C  F027         	call	___fltol	;wreg free
  9697  001DA4  C010  F088         	movff	?___fltol,efgtoa@d
  9698  001DA8  C011  F089         	movff	?___fltol+1,efgtoa@d+1
  9699  001DAC                     
  9700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9701  001DAC  B847               	btfsc	_flags^0,4,c
  9702  001DAE  EFDB  F00E         	goto	u11201
  9703  001DB2  EFDD  F00E         	goto	u11200
  9704  001DB6                     u11201:
  9705  001DB6  EFFB  F00E         	goto	l8836
  9706  001DBA                     u11200:
  9707  001DBA  0100               	movlb	0	; () banked
  9708  001DBC  5188               	movf	efgtoa@d& (0+255),w,b
  9709  001DBE  1189               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9710  001DC0  A4D8               	btfss	status,2,c
  9711  001DC2  EFE5  F00E         	goto	u11211
  9712  001DC6  EFE7  F00E         	goto	u11210
  9713  001DCA                     u11211:
  9714  001DCA  EFFB  F00E         	goto	l8836
  9715  001DCE                     u11210:
  9716  001DCE                     
  9717                           ; BSR set to: 0
  9718  001DCE  0E67               	movlw	103
  9719  001DD0  1991               	xorwf	efgtoa@mode& (0+255),w,b
  9720  001DD2  A4D8               	btfss	status,2,c
  9721  001DD4  EFEE  F00E         	goto	u11221
  9722  001DD8  EFF0  F00E         	goto	u11220
  9723  001DDC                     u11221:
  9724  001DDC  EFFB  F00E         	goto	l8836
  9725  001DE0                     u11220:
  9726  001DE0                     
  9727                           ; BSR set to: 0
  9728  001DE0  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9729  001DE2  EFF7  F00E         	goto	u11230
  9730  001DE6  EFF5  F00E         	goto	u11231
  9731  001DEA                     u11231:
  9732  001DEA  EFFB  F00E         	goto	l8836
  9733  001DEE                     u11230:
  9734  001DEE                     
  9735                           ; BSR set to: 0
  9736                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9737  001DEE  4B80               	infsnz	efgtoa@t& (0+255),f,b
  9738  001DF0  2B81               	incf	(efgtoa@t+1)& (0+255),f,b
  9739                           
  9740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9741  001DF2  EF46  F00F         	goto	l8864
  9742  001DF6                     l8836:
  9743                           
  9744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9745  001DF6  0100               	movlb	0	; () banked
  9746  001DF8  5182               	movf	efgtoa@pp& (0+255),w,b
  9747  001DFA  1183               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9748  001DFC  A4D8               	btfss	status,2,c
  9749  001DFE  EF03  F00F         	goto	u11241
  9750  001E02  EF05  F00F         	goto	u11240
  9751  001E06                     u11241:
  9752  001E06  EF2F  F00F         	goto	l8856
  9753  001E0A                     u11240:
  9754  001E0A                     
  9755                           ; BSR set to: 0
  9756  001E0A  BF87               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9757  001E0C  EF0C  F00F         	goto	u11250
  9758  001E10  EF0A  F00F         	goto	u11251
  9759  001E14                     u11251:
  9760  001E14  EF2F  F00F         	goto	l8856
  9761  001E18                     u11250:
  9762  001E18                     
  9763                           ; BSR set to: 0
  9764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9765  001E18  0E6C               	movlw	low _dbuf
  9766  001E1A  25A2               	addwf	efgtoa@n& (0+255),w,b
  9767  001E1C  6ED9               	movwf	fsr2l,c
  9768  001E1E  0E01               	movlw	high _dbuf
  9769  001E20  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9770  001E22  6EDA               	movwf	fsr2h,c
  9771  001E24  0E2E               	movlw	46
  9772  001E26  6EDF               	movwf	indf2,c
  9773  001E28                     
  9774                           ; BSR set to: 0
  9775  001E28  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  9776  001E2A  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  9777  001E2C                     
  9778                           ; BSR set to: 0
  9779                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9780  001E2C  078F               	decf	efgtoa@w& (0+255),f,b
  9781  001E2E  A0D8               	btfss	status,0,c
  9782  001E30  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  9783  001E32                     
  9784                           ; BSR set to: 0
  9785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9786  001E32  0E00               	movlw	0
  9787  001E34  6F83               	movwf	(efgtoa@pp+1)& (0+255),b
  9788  001E36  0E01               	movlw	1
  9789  001E38  6F82               	movwf	efgtoa@pp& (0+255),b
  9790  001E3A  EF2F  F00F         	goto	l8856
  9791  001E3E                     l8848:
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9795  001E3E  0E6C               	movlw	low _dbuf
  9796  001E40  25A2               	addwf	efgtoa@n& (0+255),w,b
  9797  001E42  6ED9               	movwf	fsr2l,c
  9798  001E44  0E01               	movlw	high _dbuf
  9799  001E46  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9800  001E48  6EDA               	movwf	fsr2h,c
  9801  001E4A  0E30               	movlw	48
  9802  001E4C  6EDF               	movwf	indf2,c
  9803  001E4E                     
  9804                           ; BSR set to: 0
  9805  001E4E  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  9806  001E50  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  9807  001E52                     
  9808                           ; BSR set to: 0
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9810  001E52  078F               	decf	efgtoa@w& (0+255),f,b
  9811  001E54  A0D8               	btfss	status,0,c
  9812  001E56  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  9813  001E58                     
  9814                           ; BSR set to: 0
  9815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9816  001E58  0780               	decf	efgtoa@t& (0+255),f,b
  9817  001E5A  A0D8               	btfss	status,0,c
  9818  001E5C  0781               	decf	(efgtoa@t+1)& (0+255),f,b
  9819  001E5E                     l8856:
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9823  001E5E  5180               	movf	efgtoa@t& (0+255),w,b
  9824  001E60  1181               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9825  001E62  A4D8               	btfss	status,2,c
  9826  001E64  EF36  F00F         	goto	u11261
  9827  001E68  EF38  F00F         	goto	u11260
  9828  001E6C                     u11261:
  9829  001E6C  EF1F  F00F         	goto	l8848
  9830  001E70                     u11260:
  9831  001E70                     
  9832                           ; BSR set to: 0
  9833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9834  001E70  0E6C               	movlw	low _dbuf
  9835  001E72  25A2               	addwf	efgtoa@n& (0+255),w,b
  9836  001E74  6ED9               	movwf	fsr2l,c
  9837  001E76  0E01               	movlw	high _dbuf
  9838  001E78  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9839  001E7A  6EDA               	movwf	fsr2h,c
  9840  001E7C  5188               	movf	efgtoa@d& (0+255),w,b
  9841  001E7E  0F30               	addlw	48
  9842  001E80  6EDF               	movwf	indf2,c
  9843  001E82                     
  9844                           ; BSR set to: 0
  9845  001E82  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  9846  001E84  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  9847  001E86                     
  9848                           ; BSR set to: 0
  9849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9850  001E86  078F               	decf	efgtoa@w& (0+255),f,b
  9851  001E88  A0D8               	btfss	status,0,c
  9852  001E8A  0790               	decf	(efgtoa@w+1)& (0+255),f,b
  9853  001E8C                     l8864:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9857  001E8C  C092  F037         	movff	efgtoa@h,___flsub@b
  9858  001E90  C093  F038         	movff	efgtoa@h+1,___flsub@b+1
  9859  001E94  C094  F039         	movff	efgtoa@h+2,___flsub@b+2
  9860  001E98  C095  F03A         	movff	efgtoa@h+3,___flsub@b+3
  9861  001E9C  C0A4  F022         	movff	efgtoa@u,___flmul@a
  9862  001EA0  C0A5  F023         	movff	efgtoa@u+1,___flmul@a+1
  9863  001EA4  C0A6  F024         	movff	efgtoa@u+2,___flmul@a+2
  9864  001EA8  C0A7  F025         	movff	efgtoa@u+3,___flmul@a+3
  9865  001EAC  C096  F01E         	movff	efgtoa@l,___flmul@b
  9866  001EB0  C097  F01F         	movff	efgtoa@l+1,___flmul@b+1
  9867  001EB4  C098  F020         	movff	efgtoa@l+2,___flmul@b+2
  9868  001EB8  C099  F021         	movff	efgtoa@l+3,___flmul@b+3
  9869  001EBC  EC0D  F013         	call	___flmul	;wreg free
  9870  001EC0  C01E  F03B         	movff	?___flmul,___flsub@a
  9871  001EC4  C01F  F03C         	movff	?___flmul+1,___flsub@a+1
  9872  001EC8  C020  F03D         	movff	?___flmul+2,___flsub@a+2
  9873  001ECC  C021  F03E         	movff	?___flmul+3,___flsub@a+3
  9874  001ED0  EC80  F02E         	call	___flsub	;wreg free
  9875  001ED4  C037  F092         	movff	?___flsub,efgtoa@h
  9876  001ED8  C038  F093         	movff	?___flsub+1,efgtoa@h+1
  9877  001EDC  C039  F094         	movff	?___flsub+2,efgtoa@h+2
  9878  001EE0  C03A  F095         	movff	?___flsub+3,efgtoa@h+3
  9879  001EE4                     
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9881  001EE4  C0A4  F010         	movff	efgtoa@u,___fldiv@b
  9882  001EE8  C0A5  F011         	movff	efgtoa@u+1,___fldiv@b+1
  9883  001EEC  C0A6  F012         	movff	efgtoa@u+2,___fldiv@b+2
  9884  001EF0  C0A7  F013         	movff	efgtoa@u+3,___fldiv@b+3
  9885  001EF4  0E00               	movlw	0
  9886  001EF6  6E14               	movwf	___fldiv@a^0,c
  9887  001EF8  0E00               	movlw	0
  9888  001EFA  6E15               	movwf	(___fldiv@a+1)^0,c
  9889  001EFC  0E20               	movlw	32
  9890  001EFE  6E16               	movwf	(___fldiv@a+2)^0,c
  9891  001F00  0E41               	movlw	65
  9892  001F02  6E17               	movwf	(___fldiv@a+3)^0,c
  9893  001F04  EC22  F015         	call	___fldiv	;wreg free
  9894  001F08  C010  F0A4         	movff	?___fldiv,efgtoa@u
  9895  001F0C  C011  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  9896  001F10  C012  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  9897  001F14  C013  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  9898  001F18                     
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9900  001F18  0100               	movlb	0	; () banked
  9901  001F1A  0786               	decf	efgtoa@ne& (0+255),f,b
  9902  001F1C  A0D8               	btfss	status,0,c
  9903  001F1E  0787               	decf	(efgtoa@ne+1)& (0+255),f,b
  9904  001F20                     
  9905                           ; BSR set to: 0
  9906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9907  001F20  4B9A               	infsnz	efgtoa@i& (0+255),f,b
  9908  001F22  2B9B               	incf	(efgtoa@i+1)& (0+255),f,b
  9909  001F24                     l8872:
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9913  001F24  5184               	movf	efgtoa@m& (0+255),w,b
  9914  001F26  5D9A               	subwf	efgtoa@i& (0+255),w,b
  9915  001F28  519B               	movf	(efgtoa@i+1)& (0+255),w,b
  9916  001F2A  0A80               	xorlw	128
  9917  001F2C  6F6B               	movwf	??_efgtoa& (0+255),b
  9918  001F2E  5185               	movf	(efgtoa@m+1)& (0+255),w,b
  9919  001F30  0A80               	xorlw	128
  9920  001F32  596B               	subwfb	??_efgtoa& (0+255),w,b
  9921  001F34  B0D8               	btfsc	status,0,c
  9922  001F36  EF9F  F00F         	goto	u11271
  9923  001F3A  EFA1  F00F         	goto	u11270
  9924  001F3E                     u11271:
  9925  001F3E  EFAF  F00F         	goto	l8876
  9926  001F42                     u11270:
  9927  001F42                     
  9928                           ; BSR set to: 0
  9929  001F42  BFA3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9930  001F44  EFAD  F00F         	goto	u11281
  9931  001F48  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  9932  001F4A  E109               	bnz	u11280
  9933  001F4C  0E4B               	movlw	75
  9934  001F4E  5DA2               	subwf	efgtoa@n& (0+255),w,b
  9935  001F50  A0D8               	btfss	status,0,c
  9936  001F52  EFAD  F00F         	goto	u11281
  9937  001F56  EFAF  F00F         	goto	u11280
  9938  001F5A                     u11281:
  9939  001F5A  EFA4  F00E         	goto	l8824
  9940  001F5E                     u11280:
  9941  001F5E                     l8876:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9945  001F5E  5182               	movf	efgtoa@pp& (0+255),w,b
  9946  001F60  1183               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9947  001F62  A4D8               	btfss	status,2,c
  9948  001F64  EFB6  F00F         	goto	u11291
  9949  001F68  EFB8  F00F         	goto	u11290
  9950  001F6C                     u11291:
  9951  001F6C  EFC9  F00F         	goto	l8884
  9952  001F70                     u11290:
  9953  001F70                     
  9954                           ; BSR set to: 0
  9955  001F70  A847               	btfss	_flags^0,4,c
  9956  001F72  EFBD  F00F         	goto	u11301
  9957  001F76  EFBF  F00F         	goto	u11300
  9958  001F7A                     u11301:
  9959  001F7A  EFC9  F00F         	goto	l8884
  9960  001F7E                     u11300:
  9961  001F7E                     
  9962                           ; BSR set to: 0
  9963                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9964  001F7E  0E6C               	movlw	low _dbuf
  9965  001F80  25A2               	addwf	efgtoa@n& (0+255),w,b
  9966  001F82  6ED9               	movwf	fsr2l,c
  9967  001F84  0E01               	movlw	high _dbuf
  9968  001F86  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9969  001F88  6EDA               	movwf	fsr2h,c
  9970  001F8A  0E2E               	movlw	46
  9971  001F8C  6EDF               	movwf	indf2,c
  9972  001F8E                     
  9973                           ; BSR set to: 0
  9974  001F8E  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  9975  001F90  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  9976  001F92                     l8884:
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9980  001F92  0E6C               	movlw	low _dbuf
  9981  001F94  25A2               	addwf	efgtoa@n& (0+255),w,b
  9982  001F96  6ED9               	movwf	fsr2l,c
  9983  001F98  0E01               	movlw	high _dbuf
  9984  001F9A  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9985  001F9C  6EDA               	movwf	fsr2h,c
  9986  001F9E  0E00               	movlw	0
  9987  001FA0  6EDF               	movwf	indf2,c
  9988  001FA2                     
  9989                           ; BSR set to: 0
  9990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9991  001FA2  0E65               	movlw	101
  9992  001FA4  198E               	xorwf	efgtoa@nmode& (0+255),w,b
  9993  001FA6  A4D8               	btfss	status,2,c
  9994  001FA8  EFD8  F00F         	goto	u11311
  9995  001FAC  EFDA  F00F         	goto	u11310
  9996  001FB0                     u11311:
  9997  001FB0  EF87  F00B         	goto	l8696
  9998  001FB4                     u11310:
  9999  001FB4                     
 10000                           ; BSR set to: 0
 10001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10002  001FB4  0E00               	movlw	0
 10003  001FB6  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
 10004  001FB8  0E4F               	movlw	79
 10005  001FBA  6F9A               	movwf	efgtoa@i& (0+255),b
 10006  001FBC                     
 10007                           ; BSR set to: 0
 10008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10009  001FBC  0E6C               	movlw	low _dbuf
 10010  001FBE  259A               	addwf	efgtoa@i& (0+255),w,b
 10011  001FC0  6ED9               	movwf	fsr2l,c
 10012  001FC2  0E01               	movlw	high _dbuf
 10013  001FC4  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10014  001FC6  6EDA               	movwf	fsr2h,c
 10015  001FC8  0E00               	movlw	0
 10016  001FCA  6EDF               	movwf	indf2,c
 10017  001FCC                     
 10018                           ; BSR set to: 0
 10019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10020  001FCC  0E00               	movlw	0
 10021  001FCE  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
 10022  001FD0  0E00               	movlw	0
 10023  001FD2  6F8A               	movwf	efgtoa@sign& (0+255),b
 10024  001FD4                     
 10025                           ; BSR set to: 0
 10026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10027  001FD4  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10028  001FD6  EFF1  F00F         	goto	u11320
 10029  001FDA  EFEF  F00F         	goto	u11321
 10030  001FDE                     u11321:
 10031  001FDE  EFF9  F00F         	goto	l8900
 10032  001FE2                     u11320:
 10033  001FE2                     
 10034                           ; BSR set to: 0
 10035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10036  001FE2  0E00               	movlw	0
 10037  001FE4  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
 10038  001FE6  0E01               	movlw	1
 10039  001FE8  6F8A               	movwf	efgtoa@sign& (0+255),b
 10040  001FEA                     
 10041                           ; BSR set to: 0
 10042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10043  001FEA  6DA0               	negf	efgtoa@e& (0+255),b
 10044  001FEC  1FA1               	comf	(efgtoa@e+1)& (0+255),f,b
 10045  001FEE  B0D8               	btfsc	status,0,c
 10046  001FF0  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
 10047  001FF2                     l8900:
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10051  001FF2  0E00               	movlw	0
 10052  001FF4  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
 10053  001FF6  0E02               	movlw	2
 10054  001FF8  6F8C               	movwf	efgtoa@p& (0+255),b
 10055                           
 10056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10057  001FFA  EF2A  F010         	goto	l8912
 10058  001FFE                     l8902:
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10062  001FFE  079A               	decf	efgtoa@i& (0+255),f,b
 10063  002000  A0D8               	btfss	status,0,c
 10064  002002  079B               	decf	(efgtoa@i+1)& (0+255),f,b
 10065  002004                     
 10066                           ; BSR set to: 0
 10067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10068  002004  0E6C               	movlw	low _dbuf
 10069  002006  259A               	addwf	efgtoa@i& (0+255),w,b
 10070  002008  6ED9               	movwf	fsr2l,c
 10071  00200A  0E01               	movlw	high _dbuf
 10072  00200C  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10073  00200E  6EDA               	movwf	fsr2h,c
 10074  002010  C0A0  F010         	movff	efgtoa@e,___awmod@dividend
 10075  002014  C0A1  F011         	movff	efgtoa@e+1,___awmod@dividend+1
 10076  002018  0E00               	movlw	0
 10077  00201A  6E13               	movwf	(___awmod@divisor+1)^0,c
 10078  00201C  0E0A               	movlw	10
 10079  00201E  6E12               	movwf	___awmod@divisor^0,c
 10080  002020  EC7B  F02B         	call	___awmod	;wreg free
 10081  002024  5010               	movf	?___awmod^0,w,c
 10082  002026  0F30               	addlw	48
 10083  002028  6EDF               	movwf	indf2,c
 10084  00202A                     
 10085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10086  00202A  C0A0  F010         	movff	efgtoa@e,___awdiv@dividend
 10087  00202E  C0A1  F011         	movff	efgtoa@e+1,___awdiv@dividend+1
 10088  002032  0E00               	movlw	0
 10089  002034  6E13               	movwf	(___awdiv@divisor+1)^0,c
 10090  002036  0E0A               	movlw	10
 10091  002038  6E12               	movwf	___awdiv@divisor^0,c
 10092  00203A  ECB8  F02A         	call	___awdiv	;wreg free
 10093  00203E  C010  F0A0         	movff	?___awdiv,efgtoa@e
 10094  002042  C011  F0A1         	movff	?___awdiv+1,efgtoa@e+1
 10095  002046                     
 10096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10097  002046  0100               	movlb	0	; () banked
 10098  002048  078C               	decf	efgtoa@p& (0+255),f,b
 10099  00204A  A0D8               	btfss	status,0,c
 10100  00204C  078D               	decf	(efgtoa@p+1)& (0+255),f,b
 10101  00204E                     
 10102                           ; BSR set to: 0
 10103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10104  00204E  078F               	decf	efgtoa@w& (0+255),f,b
 10105  002050  A0D8               	btfss	status,0,c
 10106  002052  0790               	decf	(efgtoa@w+1)& (0+255),f,b
 10107  002054                     l8912:
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10111  002054  51A0               	movf	efgtoa@e& (0+255),w,b
 10112  002056  11A1               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10113  002058  A4D8               	btfss	status,2,c
 10114  00205A  EF31  F010         	goto	u11331
 10115  00205E  EF33  F010         	goto	u11330
 10116  002062                     u11331:
 10117  002062  EFFF  F00F         	goto	l8902
 10118  002066                     u11330:
 10119  002066                     
 10120                           ; BSR set to: 0
 10121  002066  BF8D               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10122  002068  EF40  F010         	goto	u11340
 10123  00206C  518D               	movf	(efgtoa@p+1)& (0+255),w,b
 10124  00206E  E106               	bnz	u11341
 10125  002070  058C               	decf	efgtoa@p& (0+255),w,b
 10126  002072  B0D8               	btfsc	status,0,c
 10127  002074  EF3E  F010         	goto	u11341
 10128  002078  EF40  F010         	goto	u11340
 10129  00207C                     u11341:
 10130  00207C  EFFF  F00F         	goto	l8902
 10131  002080                     u11340:
 10132  002080                     
 10133                           ; BSR set to: 0
 10134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10135  002080  079A               	decf	efgtoa@i& (0+255),f,b
 10136  002082  A0D8               	btfss	status,0,c
 10137  002084  079B               	decf	(efgtoa@i+1)& (0+255),f,b
 10138  002086                     
 10139                           ; BSR set to: 0
 10140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10141  002086  518A               	movf	efgtoa@sign& (0+255),w,b
 10142  002088  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10143  00208A  A4D8               	btfss	status,2,c
 10144  00208C  EF4A  F010         	goto	u11351
 10145  002090  EF4C  F010         	goto	u11350
 10146  002094                     u11351:
 10147  002094  EF52  F010         	goto	l8922
 10148  002098                     u11350:
 10149  002098                     
 10150                           ; BSR set to: 0
 10151  002098  0E00               	movlw	0
 10152  00209A  6F7B               	movwf	(_efgtoa$1729+1)& (0+255),b
 10153  00209C  0E2B               	movlw	43
 10154  00209E  6F7A               	movwf	_efgtoa$1729& (0+255),b
 10155  0020A0  EF56  F010         	goto	l8924
 10156  0020A4                     l8922:
 10157                           
 10158                           ; BSR set to: 0
 10159  0020A4  0E00               	movlw	0
 10160  0020A6  6F7B               	movwf	(_efgtoa$1729+1)& (0+255),b
 10161  0020A8  0E2D               	movlw	45
 10162  0020AA  6F7A               	movwf	_efgtoa$1729& (0+255),b
 10163  0020AC                     l8924:
 10164                           
 10165                           ; BSR set to: 0
 10166  0020AC  0E6C               	movlw	low _dbuf
 10167  0020AE  259A               	addwf	efgtoa@i& (0+255),w,b
 10168  0020B0  6ED9               	movwf	fsr2l,c
 10169  0020B2  0E01               	movlw	high _dbuf
 10170  0020B4  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10171  0020B6  6EDA               	movwf	fsr2h,c
 10172  0020B8  C07A  FFDF         	movff	_efgtoa$1729,indf2
 10173  0020BC                     
 10174                           ; BSR set to: 0
 10175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10176  0020BC  078F               	decf	efgtoa@w& (0+255),f,b
 10177  0020BE  A0D8               	btfss	status,0,c
 10178  0020C0  0790               	decf	(efgtoa@w+1)& (0+255),f,b
 10179  0020C2                     
 10180                           ; BSR set to: 0
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10182  0020C2  079A               	decf	efgtoa@i& (0+255),f,b
 10183  0020C4  A0D8               	btfss	status,0,c
 10184  0020C6  079B               	decf	(efgtoa@i+1)& (0+255),f,b
 10185  0020C8                     
 10186                           ; BSR set to: 0
 10187  0020C8  0EBF               	movlw	191
 10188  0020CA  6F6B               	movwf	??_efgtoa& (0+255),b
 10189  0020CC  0EFF               	movlw	255
 10190  0020CE  6F6C               	movwf	(??_efgtoa+1)& (0+255),b
 10191  0020D0  516A               	movf	efgtoa@c& (0+255),w,b
 10192  0020D2  6F6D               	movwf	(??_efgtoa+2)& (0+255),b
 10193  0020D4  6B6E               	clrf	(??_efgtoa+3)& (0+255),b
 10194  0020D6  516B               	movf	??_efgtoa& (0+255),w,b
 10195  0020D8  276D               	addwf	(??_efgtoa+2)& (0+255),f,b
 10196  0020DA  516C               	movf	(??_efgtoa+1)& (0+255),w,b
 10197  0020DC  236E               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10198  0020DE  516E               	movf	(??_efgtoa+3)& (0+255),w,b
 10199  0020E0  E10A               	bnz	u11360
 10200  0020E2  0E1A               	movlw	26
 10201  0020E4  5D6D               	subwf	(??_efgtoa+2)& (0+255),w,b
 10202  0020E6  A0D8               	btfss	status,0,c
 10203  0020E8  EF78  F010         	goto	u11361
 10204  0020EC  EF7B  F010         	goto	u11360
 10205  0020F0                     u11361:
 10206  0020F0  0E01               	movlw	1
 10207  0020F2  EF7C  F010         	goto	u11370
 10208  0020F6                     u11360:
 10209  0020F6  0E00               	movlw	0
 10210  0020F8                     u11370:
 10211  0020F8  6F7E               	movwf	_efgtoa$1731& (0+255),b
 10212  0020FA  6B7F               	clrf	(_efgtoa$1731+1)& (0+255),b
 10213  0020FC                     
 10214                           ; BSR set to: 0
 10215  0020FC  517E               	movf	_efgtoa$1731& (0+255),w,b
 10216  0020FE  117F               	iorwf	(_efgtoa$1731+1)& (0+255),w,b
 10217  002100  A4D8               	btfss	status,2,c
 10218  002102  EF85  F010         	goto	u11381
 10219  002106  EF87  F010         	goto	u11380
 10220  00210A                     u11381:
 10221  00210A  EF8D  F010         	goto	l8938
 10222  00210E                     u11380:
 10223  00210E                     
 10224                           ; BSR set to: 0
 10225  00210E  0E00               	movlw	0
 10226  002110  6F7D               	movwf	(_efgtoa$1730+1)& (0+255),b
 10227  002112  0E65               	movlw	101
 10228  002114  6F7C               	movwf	_efgtoa$1730& (0+255),b
 10229  002116  EF91  F010         	goto	l8940
 10230  00211A                     l8938:
 10231                           
 10232                           ; BSR set to: 0
 10233  00211A  0E00               	movlw	0
 10234  00211C  6F7D               	movwf	(_efgtoa$1730+1)& (0+255),b
 10235  00211E  0E45               	movlw	69
 10236  002120  6F7C               	movwf	_efgtoa$1730& (0+255),b
 10237  002122                     l8940:
 10238                           
 10239                           ; BSR set to: 0
 10240  002122  0E6C               	movlw	low _dbuf
 10241  002124  259A               	addwf	efgtoa@i& (0+255),w,b
 10242  002126  6ED9               	movwf	fsr2l,c
 10243  002128  0E01               	movlw	high _dbuf
 10244  00212A  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10245  00212C  6EDA               	movwf	fsr2h,c
 10246  00212E  C07C  FFDF         	movff	_efgtoa$1730,indf2
 10247  002132                     
 10248                           ; BSR set to: 0
 10249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10250  002132  078F               	decf	efgtoa@w& (0+255),f,b
 10251  002134  A0D8               	btfss	status,0,c
 10252  002136  0790               	decf	(efgtoa@w+1)& (0+255),f,b
 10253  002138                     
 10254                           ; BSR set to: 0
 10255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10256  002138  0E6C               	movlw	low _dbuf
 10257  00213A  25A2               	addwf	efgtoa@n& (0+255),w,b
 10258  00213C  6E10               	movwf	strcpy@dest^0,c
 10259  00213E  0E01               	movlw	high _dbuf
 10260  002140  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10261  002142  6E11               	movwf	(strcpy@dest+1)^0,c
 10262  002144  0E6C               	movlw	low _dbuf
 10263  002146  259A               	addwf	efgtoa@i& (0+255),w,b
 10264  002148  6E12               	movwf	strcpy@src^0,c
 10265  00214A  0E01               	movlw	high _dbuf
 10266  00214C  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10267  00214E  6E13               	movwf	(strcpy@src+1)^0,c
 10268  002150  EC86  F02D         	call	_strcpy	;wreg free
 10269  002154  EF87  F00B         	goto	l8696
 10270  002158                     l717:
 10271  002158  0012               	return		;funcret
 10272  00215A                     __end_of_efgtoa:
 10273                           	opt callstack 0
 10274                           
 10275 ;; *************** function _tolower *****************
 10276 ;; Defined at:
 10277 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  c               2   21[COMRAM] int 
 10280 ;; Auto vars:     Size  Location     Type
 10281 ;;		None
 10282 ;; Return value:  Size  Location     Type
 10283 ;;                  2   21[COMRAM] int 
 10284 ;; Registers used:
 10285 ;;		wreg, status,2, status,0
 10286 ;; Tracked objects:
 10287 ;;		On entry : 0/0
 10288 ;;		On exit  : 0/0
 10289 ;;		Unchanged: 0/0
 10290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10294 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10295 ;;Total ram usage:        8 bytes
 10296 ;; Hardware stack levels used:    1
 10297 ;; Hardware stack levels required when called:    6
 10298 ;; This function calls:
 10299 ;;		_isupper
 10300 ;; This function is called by:
 10301 ;;		_efgtoa
 10302 ;;		_vfpfcnvrt
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text16
 10307  005A4E                     __ptext16:
 10308                           	opt callstack 0
 10309  005A4E                     _tolower:
 10310                           	opt callstack 20
 10311  005A4E  0EBF               	movlw	191
 10312  005A50  6E18               	movwf	??_tolower^0,c
 10313  005A52  0EFF               	movlw	255
 10314  005A54  6E19               	movwf	(??_tolower+1)^0,c
 10315  005A56  C016  F01A         	movff	tolower@c,??_tolower+2
 10316  005A5A  C017  F01B         	movff	tolower@c+1,??_tolower+3
 10317  005A5E  5018               	movf	??_tolower^0,w,c
 10318  005A60  261A               	addwf	(??_tolower+2)^0,f,c
 10319  005A62  5019               	movf	(??_tolower+1)^0,w,c
 10320  005A64  221B               	addwfc	(??_tolower+3)^0,f,c
 10321  005A66  501B               	movf	(??_tolower+3)^0,w,c
 10322  005A68  E10A               	bnz	u9580
 10323  005A6A  0E1A               	movlw	26
 10324  005A6C  5C1A               	subwf	(??_tolower+2)^0,w,c
 10325  005A6E  A0D8               	btfss	status,0,c
 10326  005A70  EF3C  F02D         	goto	u9581
 10327  005A74  EF3F  F02D         	goto	u9580
 10328  005A78                     u9581:
 10329  005A78  0E01               	movlw	1
 10330  005A7A  EF40  F02D         	goto	u9590
 10331  005A7E                     u9580:
 10332  005A7E  0E00               	movlw	0
 10333  005A80                     u9590:
 10334  005A80  6E1C               	movwf	_tolower$2488^0,c
 10335  005A82  6A1D               	clrf	(_tolower$2488+1)^0,c
 10336  005A84  501C               	movf	_tolower$2488^0,w,c
 10337  005A86  101D               	iorwf	(_tolower$2488+1)^0,w,c
 10338  005A88  B4D8               	btfsc	status,2,c
 10339  005A8A  EF49  F02D         	goto	u9601
 10340  005A8E  EF4B  F02D         	goto	u9600
 10341  005A92                     u9601:
 10342  005A92  EF52  F02D         	goto	l1784
 10343  005A96                     u9600:
 10344  005A96  0E20               	movlw	32
 10345  005A98  1016               	iorwf	tolower@c^0,w,c
 10346  005A9A  6E16               	movwf	?_tolower^0,c
 10347  005A9C  5017               	movf	(tolower@c+1)^0,w,c
 10348  005A9E  6E17               	movwf	(?_tolower+1)^0,c
 10349  005AA0  EF56  F02D         	goto	l1789
 10350  005AA4                     l1784:
 10351  005AA4  C016  F016         	movff	tolower@c,?_tolower
 10352  005AA8  C017  F017         	movff	tolower@c+1,?_tolower+1
 10353  005AAC                     l1789:
 10354  005AAC  0012               	return		;funcret
 10355  005AAE                     __end_of_tolower:
 10356                           	opt callstack 0
 10357                           
 10358 ;; *************** function _isupper *****************
 10359 ;; Defined at:
 10360 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;  c               2   15[COMRAM] int 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  2   15[COMRAM] int 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10378 ;;Total ram usage:        6 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    5
 10381 ;; This function calls:
 10382 ;;		Nothing
 10383 ;; This function is called by:
 10384 ;;		_efgtoa
 10385 ;;		_xtoa
 10386 ;;		_vfpfcnvrt
 10387 ;;		_tolower
 10388 ;; This function uses a non-reentrant model
 10389 ;;
 10390                           
 10391                           	psect	text17
 10392  005F00                     __ptext17:
 10393                           	opt callstack 0
 10394  005F00                     _isupper:
 10395                           	opt callstack 20
 10396  005F00  0EBF               	movlw	191
 10397  005F02  6E12               	movwf	??_isupper^0,c
 10398  005F04  0EFF               	movlw	255
 10399  005F06  6E13               	movwf	(??_isupper+1)^0,c
 10400  005F08  C010  F014         	movff	isupper@c,??_isupper+2
 10401  005F0C  C011  F015         	movff	isupper@c+1,??_isupper+3
 10402  005F10  5012               	movf	??_isupper^0,w,c
 10403  005F12  2614               	addwf	(??_isupper+2)^0,f,c
 10404  005F14  5013               	movf	(??_isupper+1)^0,w,c
 10405  005F16  2215               	addwfc	(??_isupper+3)^0,f,c
 10406  005F18  5015               	movf	(??_isupper+3)^0,w,c
 10407  005F1A  E10A               	bnz	u9000
 10408  005F1C  0E1A               	movlw	26
 10409  005F1E  5C14               	subwf	(??_isupper+2)^0,w,c
 10410  005F20  A0D8               	btfss	status,0,c
 10411  005F22  EF95  F02F         	goto	u9001
 10412  005F26  EF98  F02F         	goto	u9000
 10413  005F2A                     u9001:
 10414  005F2A  0E01               	movlw	1
 10415  005F2C  EF99  F02F         	goto	u9010
 10416  005F30                     u9000:
 10417  005F30  0E00               	movlw	0
 10418  005F32                     u9010:
 10419  005F32  6E10               	movwf	?_isupper^0,c
 10420  005F34  6A11               	clrf	(?_isupper+1)^0,c
 10421  005F36  0012               	return		;funcret
 10422  005F38                     __end_of_isupper:
 10423                           	opt callstack 0
 10424                           
 10425 ;; *************** function _strcpy *****************
 10426 ;; Defined at:
 10427 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  dest            2   15[COMRAM] PTR unsigned char 
 10430 ;;		 -> dbuf(80), 
 10431 ;;  src             2   17[COMRAM] PTR const unsigned char 
 10432 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
 10433 ;;		 -> dbuf(80), 
 10434 ;; Auto vars:     Size  Location     Type
 10435 ;;  d               2   23[COMRAM] PTR unsigned char 
 10436 ;;		 -> dbuf(80), 
 10437 ;;  s               2   21[COMRAM] PTR const unsigned char 
 10438 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
 10439 ;;		 -> dbuf(80), 
 10440 ;; Return value:  Size  Location     Type
 10441 ;;                  2   15[COMRAM] PTR unsigned char 
 10442 ;; Registers used:
 10443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10444 ;; Tracked objects:
 10445 ;;		On entry : 0/0
 10446 ;;		On exit  : 0/0
 10447 ;;		Unchanged: 0/0
 10448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10452 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10453 ;;Total ram usage:       10 bytes
 10454 ;; Hardware stack levels used:    1
 10455 ;; Hardware stack levels required when called:    5
 10456 ;; This function calls:
 10457 ;;		Nothing
 10458 ;; This function is called by:
 10459 ;;		_efgtoa
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text18
 10464  005B0C                     __ptext18:
 10465                           	opt callstack 0
 10466  005B0C                     _strcpy:
 10467                           	opt callstack 20
 10468  005B0C  C012  F016         	movff	strcpy@src,strcpy@s
 10469  005B10  C013  F017         	movff	strcpy@src+1,strcpy@s+1
 10470  005B14  C010  F018         	movff	strcpy@dest,strcpy@d
 10471  005B18  C011  F019         	movff	strcpy@dest+1,strcpy@d+1
 10472  005B1C                     l7930:
 10473  005B1C  5016               	movf	strcpy@s^0,w,c
 10474  005B1E  6E14               	movwf	??_strcpy^0,c
 10475  005B20  5017               	movf	(strcpy@s+1)^0,w,c
 10476  005B22  6E15               	movwf	(??_strcpy+1)^0,c
 10477  005B24  4A16               	infsnz	strcpy@s^0,f,c
 10478  005B26  2A17               	incf	(strcpy@s+1)^0,f,c
 10479  005B28  C014  FFF6         	movff	??_strcpy,tblptrl
 10480  005B2C  C015  FFF7         	movff	??_strcpy+1,tblptrh
 10481  005B30  0E00               	movlw	low (__mediumconst shr (0+16))
 10482  005B32  6EF8               	movwf	tblptru,c
 10483  005B34  C018  FFD9         	movff	strcpy@d,fsr2l
 10484  005B38  C019  FFDA         	movff	strcpy@d+1,fsr2h
 10485  005B3C  4A18               	infsnz	strcpy@d^0,f,c
 10486  005B3E  2A19               	incf	(strcpy@d+1)^0,f,c
 10487  005B40  0E0E               	movlw	(high __ramtop+-1)
 10488  005B42  64F7               	cpfsgt	tblptrh,c
 10489  005B44  D003               	bra	u9567
 10490  005B46  0008               	tblrd		*
 10491  005B48  50F5               	movf	tablat,w,c
 10492  005B4A  D005               	bra	u9560
 10493  005B4C                     u9567:
 10494  005B4C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10495  005B50  CFF7 FFE2          	movff	tblptrh,fsr1h
 10496  005B54  50E7               	movf	indf1,w,c
 10497  005B56                     u9560:
 10498  005B56  6EDF               	movwf	indf2,c
 10499  005B58  50DF               	movf	indf2,w,c
 10500  005B5A  A4D8               	btfss	status,2,c
 10501  005B5C  EFB2  F02D         	goto	u9571
 10502  005B60  EFB4  F02D         	goto	u9570
 10503  005B64                     u9571:
 10504  005B64  EF8E  F02D         	goto	l7930
 10505  005B68                     u9570:
 10506  005B68  0012               	return		;funcret
 10507  005B6A                     __end_of_strcpy:
 10508                           	opt callstack 0
 10509                           
 10510 ;; *************** function _floorf *****************
 10511 ;; Defined at:
 10512 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  x               4   40[COMRAM] float 
 10515 ;; Auto vars:     Size  Location     Type
 10516 ;;  u               4   56[COMRAM] struct .
 10517 ;;  m               4   50[COMRAM] unsigned long 
 10518 ;;  e               2   54[COMRAM] int 
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  4   40[COMRAM] float 
 10521 ;; Registers used:
 10522 ;;		wreg, status,2, status,0
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10529 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10530 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10531 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10532 ;;Total ram usage:       20 bytes
 10533 ;; Hardware stack levels used:    1
 10534 ;; Hardware stack levels required when called:    5
 10535 ;; This function calls:
 10536 ;;		Nothing
 10537 ;; This function is called by:
 10538 ;;		_efgtoa
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text19
 10543  003994                     __ptext19:
 10544                           	opt callstack 0
 10545  003994                     _floorf:
 10546                           	opt callstack 20
 10547  003994  C100  F039         	movff	floorf@F524,floorf@u
 10548  003998  C101  F03A         	movff	floorf@F524+1,floorf@u+1
 10549  00399C  C102  F03B         	movff	floorf@F524+2,floorf@u+2
 10550  0039A0  C103  F03C         	movff	floorf@F524+3,floorf@u+3
 10551  0039A4  C029  F039         	movff	floorf@x,floorf@u
 10552  0039A8  C02A  F03A         	movff	floorf@x+1,floorf@u+1
 10553  0039AC  C02B  F03B         	movff	floorf@x+2,floorf@u+2
 10554  0039B0  C02C  F03C         	movff	floorf@x+3,floorf@u+3
 10555  0039B4  0E81               	movlw	129
 10556  0039B6  6E2D               	movwf	??_floorf^0,c
 10557  0039B8  0EFF               	movlw	255
 10558  0039BA  6E2E               	movwf	(??_floorf+1)^0,c
 10559  0039BC  C039  F02F         	movff	floorf@u,??_floorf+2
 10560  0039C0  C03A  F030         	movff	floorf@u+1,??_floorf+3
 10561  0039C4  C03B  F031         	movff	floorf@u+2,??_floorf+4
 10562  0039C8  C03C  F032         	movff	floorf@u+3,??_floorf+5
 10563  0039CC  0E18               	movlw	24
 10564  0039CE  EFEE  F01C         	goto	u9610
 10565  0039D2                     u9615:
 10566  0039D2  90D8               	bcf	status,0,c
 10567  0039D4  3232               	rrcf	(??_floorf+5)^0,f,c
 10568  0039D6  3231               	rrcf	(??_floorf+4)^0,f,c
 10569  0039D8  3230               	rrcf	(??_floorf+3)^0,f,c
 10570  0039DA  322F               	rrcf	(??_floorf+2)^0,f,c
 10571  0039DC                     u9610:
 10572  0039DC  2EE8               	decfsz	wreg,f,c
 10573  0039DE  EFE9  F01C         	goto	u9615
 10574  0039E2  502F               	movf	(??_floorf+2)^0,w,c
 10575  0039E4  242D               	addwf	??_floorf^0,w,c
 10576  0039E6  6E37               	movwf	floorf@e^0,c
 10577  0039E8  0E00               	movlw	0
 10578  0039EA  202E               	addwfc	(??_floorf+1)^0,w,c
 10579  0039EC  6E38               	movwf	(floorf@e+1)^0,c
 10580  0039EE  BE38               	btfsc	(floorf@e+1)^0,7,c
 10581  0039F0  EF03  F01D         	goto	u9621
 10582  0039F4  5038               	movf	(floorf@e+1)^0,w,c
 10583  0039F6  E109               	bnz	u9620
 10584  0039F8  0E17               	movlw	23
 10585  0039FA  5C37               	subwf	floorf@e^0,w,c
 10586  0039FC  A0D8               	btfss	status,0,c
 10587  0039FE  EF03  F01D         	goto	u9621
 10588  003A02  EF05  F01D         	goto	u9620
 10589  003A06                     u9621:
 10590  003A06  EF0F  F01D         	goto	l7948
 10591  003A0A                     u9620:
 10592  003A0A                     l7946:
 10593  003A0A  C029  F029         	movff	floorf@x,?_floorf
 10594  003A0E  C02A  F02A         	movff	floorf@x+1,?_floorf+1
 10595  003A12  C02B  F02B         	movff	floorf@x+2,?_floorf+2
 10596  003A16  C02C  F02C         	movff	floorf@x+3,?_floorf+3
 10597  003A1A  EFD2  F01D         	goto	l1695
 10598  003A1E                     l7948:
 10599  003A1E  BE38               	btfsc	(floorf@e+1)^0,7,c
 10600  003A20  EF14  F01D         	goto	u9631
 10601  003A24  EF16  F01D         	goto	u9630
 10602  003A28                     u9631:
 10603  003A28  EF86  F01D         	goto	l7958
 10604  003A2C                     u9630:
 10605  003A2C  C037  F02D         	movff	floorf@e,??_floorf
 10606  003A30  0EFF               	movlw	255
 10607  003A32  6E2E               	movwf	(??_floorf+1)^0,c
 10608  003A34  0EFF               	movlw	255
 10609  003A36  6E2F               	movwf	(??_floorf+2)^0,c
 10610  003A38  0E7F               	movlw	127
 10611  003A3A  6E30               	movwf	(??_floorf+3)^0,c
 10612  003A3C  0E00               	movlw	0
 10613  003A3E  6E31               	movwf	(??_floorf+4)^0,c
 10614  003A40                     u9645:
 10615  003A40  662D               	tstfsz	??_floorf^0,c
 10616  003A42  EF25  F01D         	goto	u9646
 10617  003A46  EF2D  F01D         	goto	u9647
 10618  003A4A                     u9646:
 10619  003A4A  3431               	rlcf	(??_floorf+4)^0,w,c
 10620  003A4C  3231               	rrcf	(??_floorf+4)^0,f,c
 10621  003A4E  3230               	rrcf	(??_floorf+3)^0,f,c
 10622  003A50  322F               	rrcf	(??_floorf+2)^0,f,c
 10623  003A52  322E               	rrcf	(??_floorf+1)^0,f,c
 10624  003A54  2E2D               	decfsz	??_floorf^0,f,c
 10625  003A56  EF20  F01D         	goto	u9645
 10626  003A5A                     u9647:
 10627  003A5A  C02E  F033         	movff	??_floorf+1,floorf@m
 10628  003A5E  C02F  F034         	movff	??_floorf+2,floorf@m+1
 10629  003A62  C030  F035         	movff	??_floorf+3,floorf@m+2
 10630  003A66  C031  F036         	movff	??_floorf+4,floorf@m+3
 10631  003A6A  5033               	movf	floorf@m^0,w,c
 10632  003A6C  1439               	andwf	floorf@u^0,w,c
 10633  003A6E  6E2D               	movwf	??_floorf^0,c
 10634  003A70  5034               	movf	(floorf@m+1)^0,w,c
 10635  003A72  143A               	andwf	(floorf@u+1)^0,w,c
 10636  003A74  6E2E               	movwf	(??_floorf+1)^0,c
 10637  003A76  5035               	movf	(floorf@m+2)^0,w,c
 10638  003A78  143B               	andwf	(floorf@u+2)^0,w,c
 10639  003A7A  6E2F               	movwf	(??_floorf+2)^0,c
 10640  003A7C  5036               	movf	(floorf@m+3)^0,w,c
 10641  003A7E  143C               	andwf	(floorf@u+3)^0,w,c
 10642  003A80  6E30               	movwf	(??_floorf+3)^0,c
 10643  003A82  502D               	movf	??_floorf^0,w,c
 10644  003A84  102E               	iorwf	(??_floorf+1)^0,w,c
 10645  003A86  102F               	iorwf	(??_floorf+2)^0,w,c
 10646  003A88  1030               	iorwf	(??_floorf+3)^0,w,c
 10647  003A8A  A4D8               	btfss	status,2,c
 10648  003A8C  EF4A  F01D         	goto	u9651
 10649  003A90  EF4C  F01D         	goto	u9650
 10650  003A94                     u9651:
 10651  003A94  EF4E  F01D         	goto	l7954
 10652  003A98                     u9650:
 10653  003A98  EF05  F01D         	goto	l7946
 10654  003A9C                     l7954:
 10655  003A9C  C039  F02D         	movff	floorf@u,??_floorf
 10656  003AA0  C03A  F02E         	movff	floorf@u+1,??_floorf+1
 10657  003AA4  C03B  F02F         	movff	floorf@u+2,??_floorf+2
 10658  003AA8  C03C  F030         	movff	floorf@u+3,??_floorf+3
 10659  003AAC  0E20               	movlw	32
 10660  003AAE  EF5E  F01D         	goto	u9660
 10661  003AB2                     u9665:
 10662  003AB2  90D8               	bcf	status,0,c
 10663  003AB4  3230               	rrcf	(??_floorf+3)^0,f,c
 10664  003AB6  322F               	rrcf	(??_floorf+2)^0,f,c
 10665  003AB8  322E               	rrcf	(??_floorf+1)^0,f,c
 10666  003ABA  322D               	rrcf	??_floorf^0,f,c
 10667  003ABC                     u9660:
 10668  003ABC  2EE8               	decfsz	wreg,f,c
 10669  003ABE  EF59  F01D         	goto	u9665
 10670  003AC2  502D               	movf	??_floorf^0,w,c
 10671  003AC4  102E               	iorwf	(??_floorf+1)^0,w,c
 10672  003AC6  102F               	iorwf	(??_floorf+2)^0,w,c
 10673  003AC8  1030               	iorwf	(??_floorf+3)^0,w,c
 10674  003ACA  B4D8               	btfsc	status,2,c
 10675  003ACC  EF6A  F01D         	goto	u9671
 10676  003AD0  EF6C  F01D         	goto	u9670
 10677  003AD4                     u9671:
 10678  003AD4  EF74  F01D         	goto	l1698
 10679  003AD8                     u9670:
 10680  003AD8  5033               	movf	floorf@m^0,w,c
 10681  003ADA  2639               	addwf	floorf@u^0,f,c
 10682  003ADC  5034               	movf	(floorf@m+1)^0,w,c
 10683  003ADE  223A               	addwfc	(floorf@u+1)^0,f,c
 10684  003AE0  5035               	movf	(floorf@m+2)^0,w,c
 10685  003AE2  223B               	addwfc	(floorf@u+2)^0,f,c
 10686  003AE4  5036               	movf	(floorf@m+3)^0,w,c
 10687  003AE6  223C               	addwfc	(floorf@u+3)^0,f,c
 10688  003AE8                     l1698:
 10689  003AE8  1C33               	comf	floorf@m^0,w,c
 10690  003AEA  6E2D               	movwf	??_floorf^0,c
 10691  003AEC  1C34               	comf	(floorf@m+1)^0,w,c
 10692  003AEE  6E2E               	movwf	(??_floorf+1)^0,c
 10693  003AF0  1C35               	comf	(floorf@m+2)^0,w,c
 10694  003AF2  6E2F               	movwf	(??_floorf+2)^0,c
 10695  003AF4  1C36               	comf	(floorf@m+3)^0,w,c
 10696  003AF6  6E30               	movwf	(??_floorf+3)^0,c
 10697  003AF8  502D               	movf	??_floorf^0,w,c
 10698  003AFA  1639               	andwf	floorf@u^0,f,c
 10699  003AFC  502E               	movf	(??_floorf+1)^0,w,c
 10700  003AFE  163A               	andwf	(floorf@u+1)^0,f,c
 10701  003B00  502F               	movf	(??_floorf+2)^0,w,c
 10702  003B02  163B               	andwf	(floorf@u+2)^0,f,c
 10703  003B04  5030               	movf	(??_floorf+3)^0,w,c
 10704  003B06  163C               	andwf	(floorf@u+3)^0,f,c
 10705  003B08  EFCA  F01D         	goto	l7966
 10706  003B0C                     l7958:
 10707  003B0C  C039  F02D         	movff	floorf@u,??_floorf
 10708  003B10  C03A  F02E         	movff	floorf@u+1,??_floorf+1
 10709  003B14  C03B  F02F         	movff	floorf@u+2,??_floorf+2
 10710  003B18  C03C  F030         	movff	floorf@u+3,??_floorf+3
 10711  003B1C  0E20               	movlw	32
 10712  003B1E  EF96  F01D         	goto	u9680
 10713  003B22                     u9685:
 10714  003B22  90D8               	bcf	status,0,c
 10715  003B24  3230               	rrcf	(??_floorf+3)^0,f,c
 10716  003B26  322F               	rrcf	(??_floorf+2)^0,f,c
 10717  003B28  322E               	rrcf	(??_floorf+1)^0,f,c
 10718  003B2A  322D               	rrcf	??_floorf^0,f,c
 10719  003B2C                     u9680:
 10720  003B2C  2EE8               	decfsz	wreg,f,c
 10721  003B2E  EF91  F01D         	goto	u9685
 10722  003B32  502D               	movf	??_floorf^0,w,c
 10723  003B34  102E               	iorwf	(??_floorf+1)^0,w,c
 10724  003B36  102F               	iorwf	(??_floorf+2)^0,w,c
 10725  003B38  1030               	iorwf	(??_floorf+3)^0,w,c
 10726  003B3A  A4D8               	btfss	status,2,c
 10727  003B3C  EFA2  F01D         	goto	u9691
 10728  003B40  EFA4  F01D         	goto	u9690
 10729  003B44                     u9691:
 10730  003B44  EFAE  F01D         	goto	l7962
 10731  003B48                     u9690:
 10732  003B48  0E00               	movlw	0
 10733  003B4A  6E39               	movwf	floorf@u^0,c
 10734  003B4C  0E00               	movlw	0
 10735  003B4E  6E3A               	movwf	(floorf@u+1)^0,c
 10736  003B50  0E00               	movlw	0
 10737  003B52  6E3B               	movwf	(floorf@u+2)^0,c
 10738  003B54  0E00               	movlw	0
 10739  003B56  6E3C               	movwf	(floorf@u+3)^0,c
 10740  003B58  EFCA  F01D         	goto	l7966
 10741  003B5C                     l7962:
 10742  003B5C  90D8               	bcf	status,0,c
 10743  003B5E  3439               	rlcf	floorf@u^0,w,c
 10744  003B60  6E2D               	movwf	??_floorf^0,c
 10745  003B62  343A               	rlcf	(floorf@u+1)^0,w,c
 10746  003B64  6E2E               	movwf	(??_floorf+1)^0,c
 10747  003B66  343B               	rlcf	(floorf@u+2)^0,w,c
 10748  003B68  6E2F               	movwf	(??_floorf+2)^0,c
 10749  003B6A  343C               	rlcf	(floorf@u+3)^0,w,c
 10750  003B6C  6E30               	movwf	(??_floorf+3)^0,c
 10751  003B6E  502D               	movf	??_floorf^0,w,c
 10752  003B70  102E               	iorwf	(??_floorf+1)^0,w,c
 10753  003B72  102F               	iorwf	(??_floorf+2)^0,w,c
 10754  003B74  1030               	iorwf	(??_floorf+3)^0,w,c
 10755  003B76  B4D8               	btfsc	status,2,c
 10756  003B78  EFC0  F01D         	goto	u9701
 10757  003B7C  EFC2  F01D         	goto	u9700
 10758  003B80                     u9701:
 10759  003B80  EFCA  F01D         	goto	l7966
 10760  003B84                     u9700:
 10761  003B84  0E00               	movlw	0
 10762  003B86  6E39               	movwf	floorf@u^0,c
 10763  003B88  0E00               	movlw	0
 10764  003B8A  6E3A               	movwf	(floorf@u+1)^0,c
 10765  003B8C  0E80               	movlw	128
 10766  003B8E  6E3B               	movwf	(floorf@u+2)^0,c
 10767  003B90  0EBF               	movlw	191
 10768  003B92  6E3C               	movwf	(floorf@u+3)^0,c
 10769  003B94                     l7966:
 10770  003B94  C039  F029         	movff	floorf@u,?_floorf
 10771  003B98  C03A  F02A         	movff	floorf@u+1,?_floorf+1
 10772  003B9C  C03B  F02B         	movff	floorf@u+2,?_floorf+2
 10773  003BA0  C03C  F02C         	movff	floorf@u+3,?_floorf+3
 10774  003BA4                     l1695:
 10775  003BA4  0012               	return		;funcret
 10776  003BA6                     __end_of_floorf:
 10777                           	opt callstack 0
 10778                           
 10779 ;; *************** function ___fpclassifyf *****************
 10780 ;; Defined at:
 10781 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  x               4   15[COMRAM] float 
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;  u               4   25[COMRAM] struct .
 10786 ;;  e               2   23[COMRAM] int 
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  2   15[COMRAM] int 
 10789 ;; Registers used:
 10790 ;;		wreg, status,2, status,0
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10797 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10799 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10800 ;;Total ram usage:       14 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    5
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_efgtoa
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text20
 10811  0051E8                     __ptext20:
 10812                           	opt callstack 0
 10813  0051E8                     ___fpclassifyf:
 10814                           	opt callstack 20
 10815  0051E8  C104  F01A         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10816  0051EC  C105  F01B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10817  0051F0  C106  F01C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10818  0051F4  C107  F01D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10819  0051F8  C010  F01A         	movff	___fpclassifyf@x,___fpclassifyf@u
 10820  0051FC  C011  F01B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10821  005200  C012  F01C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10822  005204  C013  F01D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10823  005208  C01A  F014         	movff	___fpclassifyf@u,??___fpclassifyf
 10824  00520C  C01B  F015         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10825  005210  C01C  F016         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10826  005214  C01D  F017         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10827  005218  0E18               	movlw	24
 10828  00521A  EF14  F029         	goto	u9490
 10829  00521E                     u9495:
 10830  00521E  90D8               	bcf	status,0,c
 10831  005220  3217               	rrcf	(??___fpclassifyf+3)^0,f,c
 10832  005222  3216               	rrcf	(??___fpclassifyf+2)^0,f,c
 10833  005224  3215               	rrcf	(??___fpclassifyf+1)^0,f,c
 10834  005226  3214               	rrcf	??___fpclassifyf^0,f,c
 10835  005228                     u9490:
 10836  005228  2EE8               	decfsz	wreg,f,c
 10837  00522A  EF0F  F029         	goto	u9495
 10838  00522E  5014               	movf	??___fpclassifyf^0,w,c
 10839  005230  6E18               	movwf	___fpclassifyf@e^0,c
 10840  005232  6A19               	clrf	(___fpclassifyf@e+1)^0,c
 10841  005234  5018               	movf	___fpclassifyf@e^0,w,c
 10842  005236  1019               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10843  005238  A4D8               	btfss	status,2,c
 10844  00523A  EF21  F029         	goto	u9501
 10845  00523E  EF23  F029         	goto	u9500
 10846  005242                     u9501:
 10847  005242  EF43  F029         	goto	l7918
 10848  005246                     u9500:
 10849  005246  90D8               	bcf	status,0,c
 10850  005248  341A               	rlcf	___fpclassifyf@u^0,w,c
 10851  00524A  6E14               	movwf	??___fpclassifyf^0,c
 10852  00524C  341B               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10853  00524E  6E15               	movwf	(??___fpclassifyf+1)^0,c
 10854  005250  341C               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10855  005252  6E16               	movwf	(??___fpclassifyf+2)^0,c
 10856  005254  341D               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10857  005256  6E17               	movwf	(??___fpclassifyf+3)^0,c
 10858  005258  5014               	movf	??___fpclassifyf^0,w,c
 10859  00525A  1015               	iorwf	(??___fpclassifyf+1)^0,w,c
 10860  00525C  1016               	iorwf	(??___fpclassifyf+2)^0,w,c
 10861  00525E  1017               	iorwf	(??___fpclassifyf+3)^0,w,c
 10862  005260  A4D8               	btfss	status,2,c
 10863  005262  EF35  F029         	goto	u9511
 10864  005266  EF37  F029         	goto	u9510
 10865  00526A                     u9511:
 10866  00526A  EF3D  F029         	goto	l7914
 10867  00526E                     u9510:
 10868  00526E  0E00               	movlw	0
 10869  005270  6E11               	movwf	(?___fpclassifyf+1)^0,c
 10870  005272  0E02               	movlw	2
 10871  005274  6E10               	movwf	?___fpclassifyf^0,c
 10872  005276  EF72  F029         	goto	l1650
 10873  00527A                     l7914:
 10874  00527A  0E00               	movlw	0
 10875  00527C  6E11               	movwf	(?___fpclassifyf+1)^0,c
 10876  00527E  0E03               	movlw	3
 10877  005280  6E10               	movwf	?___fpclassifyf^0,c
 10878  005282  EF72  F029         	goto	l1650
 10879  005286                     l7918:
 10880  005286  2818               	incf	___fpclassifyf@e^0,w,c
 10881  005288  1019               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10882  00528A  A4D8               	btfss	status,2,c
 10883  00528C  EF4A  F029         	goto	u9521
 10884  005290  EF4C  F029         	goto	u9520
 10885  005294                     u9521:
 10886  005294  EF6E  F029         	goto	l7924
 10887  005298                     u9520:
 10888  005298  C01A  F014         	movff	___fpclassifyf@u,??___fpclassifyf
 10889  00529C  C01B  F015         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10890  0052A0  C01C  F016         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10891  0052A4  C01D  F017         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10892  0052A8  0E09               	movlw	9
 10893  0052AA                     u9535:
 10894  0052AA  90D8               	bcf	status,0,c
 10895  0052AC  3614               	rlcf	??___fpclassifyf^0,f,c
 10896  0052AE  3615               	rlcf	(??___fpclassifyf+1)^0,f,c
 10897  0052B0  3616               	rlcf	(??___fpclassifyf+2)^0,f,c
 10898  0052B2  3617               	rlcf	(??___fpclassifyf+3)^0,f,c
 10899  0052B4  2EE8               	decfsz	wreg,f,c
 10900  0052B6  EF55  F029         	goto	u9535
 10901  0052BA  5014               	movf	??___fpclassifyf^0,w,c
 10902  0052BC  1015               	iorwf	(??___fpclassifyf+1)^0,w,c
 10903  0052BE  1016               	iorwf	(??___fpclassifyf+2)^0,w,c
 10904  0052C0  1017               	iorwf	(??___fpclassifyf+3)^0,w,c
 10905  0052C2  B4D8               	btfsc	status,2,c
 10906  0052C4  EF66  F029         	goto	u9541
 10907  0052C8  EF69  F029         	goto	u9540
 10908  0052CC                     u9541:
 10909  0052CC  0E01               	movlw	1
 10910  0052CE  EF6A  F029         	goto	u9550
 10911  0052D2                     u9540:
 10912  0052D2  0E00               	movlw	0
 10913  0052D4                     u9550:
 10914  0052D4  6E10               	movwf	?___fpclassifyf^0,c
 10915  0052D6  6A11               	clrf	(?___fpclassifyf+1)^0,c
 10916  0052D8  EF72  F029         	goto	l1650
 10917  0052DC                     l7924:
 10918  0052DC  0E00               	movlw	0
 10919  0052DE  6E11               	movwf	(?___fpclassifyf+1)^0,c
 10920  0052E0  0E04               	movlw	4
 10921  0052E2  6E10               	movwf	?___fpclassifyf^0,c
 10922  0052E4                     l1650:
 10923  0052E4  0012               	return		;funcret
 10924  0052E6                     __end_of___fpclassifyf:
 10925                           	opt callstack 0
 10926                           
 10927 ;; *************** function ___fltol *****************
 10928 ;; Defined at:
 10929 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;  f1              4   15[COMRAM] int 
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;  exp1            1   24[COMRAM] unsigned char 
 10934 ;;  sign1           1   23[COMRAM] unsigned char 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  4   15[COMRAM] long 
 10937 ;; Registers used:
 10938 ;;		wreg, status,2, status,0
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10947 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10948 ;;Total ram usage:       10 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    5
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_efgtoa
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text21
 10959  004ED8                     __ptext21:
 10960                           	opt callstack 0
 10961  004ED8                     ___fltol:
 10962                           	opt callstack 20
 10963  004ED8  3412               	rlcf	(___fltol@f1+2)^0,w,c
 10964  004EDA  3413               	rlcf	(___fltol@f1+3)^0,w,c
 10965  004EDC  6E19               	movwf	___fltol@exp1^0,c
 10966  004EDE  5019               	movf	___fltol@exp1^0,w,c
 10967  004EE0  A4D8               	btfss	status,2,c
 10968  004EE2  EF75  F027         	goto	u10541
 10969  004EE6  EF77  F027         	goto	u10540
 10970  004EEA                     u10541:
 10971  004EEA  EF81  F027         	goto	l8480
 10972  004EEE                     u10540:
 10973  004EEE                     l8476:
 10974  004EEE  0E00               	movlw	0
 10975  004EF0  6E10               	movwf	?___fltol^0,c
 10976  004EF2  0E00               	movlw	0
 10977  004EF4  6E11               	movwf	(?___fltol+1)^0,c
 10978  004EF6  0E00               	movlw	0
 10979  004EF8  6E12               	movwf	(?___fltol+2)^0,c
 10980  004EFA  0E00               	movlw	0
 10981  004EFC  6E13               	movwf	(?___fltol+3)^0,c
 10982  004EFE  EFEE  F027         	goto	l1266
 10983  004F02                     l8480:
 10984  004F02  C010  F014         	movff	___fltol@f1,??___fltol
 10985  004F06  C011  F015         	movff	___fltol@f1+1,??___fltol+1
 10986  004F0A  C012  F016         	movff	___fltol@f1+2,??___fltol+2
 10987  004F0E  C013  F017         	movff	___fltol@f1+3,??___fltol+3
 10988  004F12  0E20               	movlw	32
 10989  004F14  EF91  F027         	goto	u10550
 10990  004F18                     u10555:
 10991  004F18  90D8               	bcf	status,0,c
 10992  004F1A  3217               	rrcf	(??___fltol+3)^0,f,c
 10993  004F1C  3216               	rrcf	(??___fltol+2)^0,f,c
 10994  004F1E  3215               	rrcf	(??___fltol+1)^0,f,c
 10995  004F20  3214               	rrcf	??___fltol^0,f,c
 10996  004F22                     u10550:
 10997  004F22  2EE8               	decfsz	wreg,f,c
 10998  004F24  EF8C  F027         	goto	u10555
 10999  004F28  5014               	movf	??___fltol^0,w,c
 11000  004F2A  6E18               	movwf	___fltol@sign1^0,c
 11001  004F2C  8E12               	bsf	(___fltol@f1+2)^0,7,c
 11002  004F2E  0EFF               	movlw	255
 11003  004F30  1610               	andwf	___fltol@f1^0,f,c
 11004  004F32  0EFF               	movlw	255
 11005  004F34  1611               	andwf	(___fltol@f1+1)^0,f,c
 11006  004F36  0EFF               	movlw	255
 11007  004F38  1612               	andwf	(___fltol@f1+2)^0,f,c
 11008  004F3A  0E00               	movlw	0
 11009  004F3C  1613               	andwf	(___fltol@f1+3)^0,f,c
 11010  004F3E  0E96               	movlw	150
 11011  004F40  5E19               	subwf	___fltol@exp1^0,f,c
 11012  004F42  BE19               	btfsc	___fltol@exp1^0,7,c
 11013  004F44  EFA8  F027         	goto	u10560
 11014  004F48  EFA6  F027         	goto	u10561
 11015  004F4C                     u10561:
 11016  004F4C  EFBE  F027         	goto	l8500
 11017  004F50                     u10560:
 11018  004F50  5019               	movf	___fltol@exp1^0,w,c
 11019  004F52  0A80               	xorlw	128
 11020  004F54  0F97               	addlw	151
 11021  004F56  B0D8               	btfsc	status,0,c
 11022  004F58  EFB0  F027         	goto	u10571
 11023  004F5C  EFB2  F027         	goto	u10570
 11024  004F60                     u10571:
 11025  004F60  EFB4  F027         	goto	l8496
 11026  004F64                     u10570:
 11027  004F64  EF77  F027         	goto	l8476
 11028  004F68                     l8496:
 11029  004F68  90D8               	bcf	status,0,c
 11030  004F6A  3213               	rrcf	(___fltol@f1+3)^0,f,c
 11031  004F6C  3212               	rrcf	(___fltol@f1+2)^0,f,c
 11032  004F6E  3211               	rrcf	(___fltol@f1+1)^0,f,c
 11033  004F70  3210               	rrcf	___fltol@f1^0,f,c
 11034  004F72  3E19               	incfsz	___fltol@exp1^0,f,c
 11035  004F74  EFB4  F027         	goto	l8496
 11036  004F78  EFD6  F027         	goto	l8510
 11037  004F7C                     l8500:
 11038  004F7C  0E1F               	movlw	31
 11039  004F7E  6419               	cpfsgt	___fltol@exp1^0,c
 11040  004F80  EFC4  F027         	goto	u10581
 11041  004F84  EFC6  F027         	goto	u10580
 11042  004F88                     u10581:
 11043  004F88  EFCE  F027         	goto	l8508
 11044  004F8C                     u10580:
 11045  004F8C  EF77  F027         	goto	l8476
 11046  004F90                     l8506:
 11047  004F90  90D8               	bcf	status,0,c
 11048  004F92  3610               	rlcf	___fltol@f1^0,f,c
 11049  004F94  3611               	rlcf	(___fltol@f1+1)^0,f,c
 11050  004F96  3612               	rlcf	(___fltol@f1+2)^0,f,c
 11051  004F98  3613               	rlcf	(___fltol@f1+3)^0,f,c
 11052  004F9A  0619               	decf	___fltol@exp1^0,f,c
 11053  004F9C                     l8508:
 11054  004F9C  5019               	movf	___fltol@exp1^0,w,c
 11055  004F9E  A4D8               	btfss	status,2,c
 11056  004FA0  EFD4  F027         	goto	u10591
 11057  004FA4  EFD6  F027         	goto	u10590
 11058  004FA8                     u10591:
 11059  004FA8  EFC8  F027         	goto	l8506
 11060  004FAC                     u10590:
 11061  004FAC                     l8510:
 11062  004FAC  5018               	movf	___fltol@sign1^0,w,c
 11063  004FAE  B4D8               	btfsc	status,2,c
 11064  004FB0  EFDC  F027         	goto	u10601
 11065  004FB4  EFDE  F027         	goto	u10600
 11066  004FB8                     u10601:
 11067  004FB8  EFE6  F027         	goto	l8514
 11068  004FBC                     u10600:
 11069  004FBC  1E13               	comf	(___fltol@f1+3)^0,f,c
 11070  004FBE  1E12               	comf	(___fltol@f1+2)^0,f,c
 11071  004FC0  1E11               	comf	(___fltol@f1+1)^0,f,c
 11072  004FC2  6C10               	negf	___fltol@f1^0,c
 11073  004FC4  0E00               	movlw	0
 11074  004FC6  2211               	addwfc	(___fltol@f1+1)^0,f,c
 11075  004FC8  2212               	addwfc	(___fltol@f1+2)^0,f,c
 11076  004FCA  2213               	addwfc	(___fltol@f1+3)^0,f,c
 11077  004FCC                     l8514:
 11078  004FCC  C010  F010         	movff	___fltol@f1,?___fltol
 11079  004FD0  C011  F011         	movff	___fltol@f1+1,?___fltol+1
 11080  004FD4  C012  F012         	movff	___fltol@f1+2,?___fltol+2
 11081  004FD8  C013  F013         	movff	___fltol@f1+3,?___fltol+3
 11082  004FDC                     l1266:
 11083  004FDC  0012               	return		;funcret
 11084  004FDE                     __end_of___fltol:
 11085                           	opt callstack 0
 11086                           
 11087 ;; *************** function ___flsub *****************
 11088 ;; Defined at:
 11089 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  b               4   54[COMRAM] long 
 11092 ;;  a               4   58[COMRAM] long 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  4   54[COMRAM] long 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0, cstack
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        8 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:    6
 11111 ;; This function calls:
 11112 ;;		___fladd
 11113 ;; This function is called by:
 11114 ;;		_efgtoa
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           	psect	text22
 11119  005D00                     __ptext22:
 11120                           	opt callstack 0
 11121  005D00                     ___flsub:
 11122                           	opt callstack 19
 11123  005D00  0E00               	movlw	0
 11124  005D02  1A3B               	xorwf	___flsub@a^0,f,c
 11125  005D04  0E00               	movlw	0
 11126  005D06  1A3C               	xorwf	(___flsub@a+1)^0,f,c
 11127  005D08  0E00               	movlw	0
 11128  005D0A  1A3D               	xorwf	(___flsub@a+2)^0,f,c
 11129  005D0C  0E80               	movlw	128
 11130  005D0E  1A3E               	xorwf	(___flsub@a+3)^0,f,c
 11131  005D10  C037  F010         	movff	___flsub@b,___fladd@b
 11132  005D14  C038  F011         	movff	___flsub@b+1,___fladd@b+1
 11133  005D18  C039  F012         	movff	___flsub@b+2,___fladd@b+2
 11134  005D1C  C03A  F013         	movff	___flsub@b+3,___fladd@b+3
 11135  005D20  C03B  F014         	movff	___flsub@a,___fladd@a
 11136  005D24  C03C  F015         	movff	___flsub@a+1,___fladd@a+1
 11137  005D28  C03D  F016         	movff	___flsub@a+2,___fladd@a+2
 11138  005D2C  C03E  F017         	movff	___flsub@a+3,___fladd@a+3
 11139  005D30  ECAD  F010         	call	___fladd	;wreg free
 11140  005D34  C010  F037         	movff	?___fladd,?___flsub
 11141  005D38  C011  F038         	movff	?___fladd+1,?___flsub+1
 11142  005D3C  C012  F039         	movff	?___fladd+2,?___flsub+2
 11143  005D40  C013  F03A         	movff	?___fladd+3,?___flsub+3
 11144  005D44  0012               	return		;funcret
 11145  005D46                     __end_of___flsub:
 11146                           	opt callstack 0
 11147                           
 11148 ;; *************** function ___fladd *****************
 11149 ;; Defined at:
 11150 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  b               4   15[COMRAM] long 
 11153 ;;  a               4   19[COMRAM] long 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  grs             1   30[COMRAM] unsigned char 
 11156 ;;  bexp            1   29[COMRAM] unsigned char 
 11157 ;;  aexp            1   28[COMRAM] unsigned char 
 11158 ;;  signs           1   27[COMRAM] unsigned char 
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  4   15[COMRAM] unsigned char 
 11161 ;; Registers used:
 11162 ;;		wreg, status,2, status,0
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11168 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11169 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11171 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11172 ;;Total ram usage:       16 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    5
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		_efgtoa
 11179 ;;		___flsub
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text23
 11184  00215A                     __ptext23:
 11185                           	opt callstack 0
 11186  00215A                     ___fladd:
 11187                           	opt callstack 19
 11188  00215A  5013               	movf	(___fladd@b+3)^0,w,c
 11189  00215C  0B80               	andlw	128
 11190  00215E  6E1C               	movwf	___fladd@signs^0,c
 11191  002160  5013               	movf	(___fladd@b+3)^0,w,c
 11192  002162  2413               	addwf	(___fladd@b+3)^0,w,c
 11193  002164  6E1E               	movwf	___fladd@bexp^0,c
 11194  002166  AE12               	btfss	(___fladd@b+2)^0,7,c
 11195  002168  EFB8  F010         	goto	u9021
 11196  00216C  EFBA  F010         	goto	u9020
 11197  002170                     u9021:
 11198  002170  EFBB  F010         	goto	l7678
 11199  002174                     u9020:
 11200  002174  801E               	bsf	___fladd@bexp^0,0,c
 11201  002176                     l7678:
 11202  002176  501E               	movf	___fladd@bexp^0,w,c
 11203  002178  B4D8               	btfsc	status,2,c
 11204  00217A  EFC1  F010         	goto	u9031
 11205  00217E  EFC3  F010         	goto	u9030
 11206  002182                     u9031:
 11207  002182  EFD8  F010         	goto	l7688
 11208  002186                     u9030:
 11209  002186  281E               	incf	___fladd@bexp^0,w,c
 11210  002188  A4D8               	btfss	status,2,c
 11211  00218A  EFC9  F010         	goto	u9041
 11212  00218E  EFCB  F010         	goto	u9040
 11213  002192                     u9041:
 11214  002192  EFD3  F010         	goto	l7684
 11215  002196                     u9040:
 11216  002196  0E00               	movlw	0
 11217  002198  6E10               	movwf	___fladd@b^0,c
 11218  00219A  0E00               	movlw	0
 11219  00219C  6E11               	movwf	(___fladd@b+1)^0,c
 11220  00219E  0E00               	movlw	0
 11221  0021A0  6E12               	movwf	(___fladd@b+2)^0,c
 11222  0021A2  0E00               	movlw	0
 11223  0021A4  6E13               	movwf	(___fladd@b+3)^0,c
 11224  0021A6                     l7684:
 11225  0021A6  8E12               	bsf	(___fladd@b+2)^0,7,c
 11226  0021A8  0E00               	movlw	0
 11227  0021AA  6E13               	movwf	(___fladd@b+3)^0,c
 11228  0021AC  EFE0  F010         	goto	l7690
 11229  0021B0                     l7688:
 11230  0021B0  0E00               	movlw	0
 11231  0021B2  6E10               	movwf	___fladd@b^0,c
 11232  0021B4  0E00               	movlw	0
 11233  0021B6  6E11               	movwf	(___fladd@b+1)^0,c
 11234  0021B8  0E00               	movlw	0
 11235  0021BA  6E12               	movwf	(___fladd@b+2)^0,c
 11236  0021BC  0E00               	movlw	0
 11237  0021BE  6E13               	movwf	(___fladd@b+3)^0,c
 11238  0021C0                     l7690:
 11239  0021C0  5017               	movf	(___fladd@a+3)^0,w,c
 11240  0021C2  0B80               	andlw	128
 11241  0021C4  6E1D               	movwf	___fladd@aexp^0,c
 11242  0021C6  501C               	movf	___fladd@signs^0,w,c
 11243  0021C8  181D               	xorwf	___fladd@aexp^0,w,c
 11244  0021CA  B4D8               	btfsc	status,2,c
 11245  0021CC  EFEA  F010         	goto	u9051
 11246  0021D0  EFEC  F010         	goto	u9050
 11247  0021D4                     u9051:
 11248  0021D4  EFED  F010         	goto	l7696
 11249  0021D8                     u9050:
 11250  0021D8  8C1C               	bsf	___fladd@signs^0,6,c
 11251  0021DA                     l7696:
 11252  0021DA  5017               	movf	(___fladd@a+3)^0,w,c
 11253  0021DC  2417               	addwf	(___fladd@a+3)^0,w,c
 11254  0021DE  6E1D               	movwf	___fladd@aexp^0,c
 11255  0021E0  AE16               	btfss	(___fladd@a+2)^0,7,c
 11256  0021E2  EFF5  F010         	goto	u9061
 11257  0021E6  EFF7  F010         	goto	u9060
 11258  0021EA                     u9061:
 11259  0021EA  EFF8  F010         	goto	l7702
 11260  0021EE                     u9060:
 11261  0021EE  801D               	bsf	___fladd@aexp^0,0,c
 11262  0021F0                     l7702:
 11263  0021F0  501D               	movf	___fladd@aexp^0,w,c
 11264  0021F2  B4D8               	btfsc	status,2,c
 11265  0021F4  EFFE  F010         	goto	u9071
 11266  0021F8  EF00  F011         	goto	u9070
 11267  0021FC                     u9071:
 11268  0021FC  EF15  F011         	goto	l7712
 11269  002200                     u9070:
 11270  002200  281D               	incf	___fladd@aexp^0,w,c
 11271  002202  A4D8               	btfss	status,2,c
 11272  002204  EF06  F011         	goto	u9081
 11273  002208  EF08  F011         	goto	u9080
 11274  00220C                     u9081:
 11275  00220C  EF10  F011         	goto	l7708
 11276  002210                     u9080:
 11277  002210  0E00               	movlw	0
 11278  002212  6E14               	movwf	___fladd@a^0,c
 11279  002214  0E00               	movlw	0
 11280  002216  6E15               	movwf	(___fladd@a+1)^0,c
 11281  002218  0E00               	movlw	0
 11282  00221A  6E16               	movwf	(___fladd@a+2)^0,c
 11283  00221C  0E00               	movlw	0
 11284  00221E  6E17               	movwf	(___fladd@a+3)^0,c
 11285  002220                     l7708:
 11286  002220  8E16               	bsf	(___fladd@a+2)^0,7,c
 11287  002222  0E00               	movlw	0
 11288  002224  6E17               	movwf	(___fladd@a+3)^0,c
 11289  002226  EF1D  F011         	goto	l7714
 11290  00222A                     l7712:
 11291  00222A  0E00               	movlw	0
 11292  00222C  6E14               	movwf	___fladd@a^0,c
 11293  00222E  0E00               	movlw	0
 11294  002230  6E15               	movwf	(___fladd@a+1)^0,c
 11295  002232  0E00               	movlw	0
 11296  002234  6E16               	movwf	(___fladd@a+2)^0,c
 11297  002236  0E00               	movlw	0
 11298  002238  6E17               	movwf	(___fladd@a+3)^0,c
 11299  00223A                     l7714:
 11300  00223A  501E               	movf	___fladd@bexp^0,w,c
 11301  00223C  5C1D               	subwf	___fladd@aexp^0,w,c
 11302  00223E  B0D8               	btfsc	status,0,c
 11303  002240  EF24  F011         	goto	u9091
 11304  002244  EF26  F011         	goto	u9090
 11305  002248                     u9091:
 11306  002248  EF4D  F011         	goto	l7750
 11307  00224C                     u9090:
 11308  00224C  AC1C               	btfss	___fladd@signs^0,6,c
 11309  00224E  EF2B  F011         	goto	u9101
 11310  002252  EF2D  F011         	goto	u9100
 11311  002256                     u9101:
 11312  002256  EF2F  F011         	goto	l7720
 11313  00225A                     u9100:
 11314  00225A  0E80               	movlw	128
 11315  00225C  1A1C               	xorwf	___fladd@signs^0,f,c
 11316  00225E                     l7720:
 11317  00225E  C01E  F01F         	movff	___fladd@bexp,___fladd@grs
 11318  002262  C01D  F01E         	movff	___fladd@aexp,___fladd@bexp
 11319  002266  C01F  F01D         	movff	___fladd@grs,___fladd@aexp
 11320  00226A  C010  F01F         	movff	___fladd@b,___fladd@grs
 11321  00226E  C014  F010         	movff	___fladd@a,___fladd@b
 11322  002272  C01F  F014         	movff	___fladd@grs,___fladd@a
 11323  002276  C011  F01F         	movff	___fladd@b+1,___fladd@grs
 11324  00227A  C015  F011         	movff	___fladd@a+1,___fladd@b+1
 11325  00227E  C01F  F015         	movff	___fladd@grs,___fladd@a+1
 11326  002282  C012  F01F         	movff	___fladd@b+2,___fladd@grs
 11327  002286  C016  F012         	movff	___fladd@a+2,___fladd@b+2
 11328  00228A  C01F  F016         	movff	___fladd@grs,___fladd@a+2
 11329  00228E  C013  F01F         	movff	___fladd@b+3,___fladd@grs
 11330  002292  C017  F013         	movff	___fladd@a+3,___fladd@b+3
 11331  002296  C01F  F017         	movff	___fladd@grs,___fladd@a+3
 11332  00229A                     l7750:
 11333  00229A  0E00               	movlw	0
 11334  00229C  6E1F               	movwf	___fladd@grs^0,c
 11335  00229E  501E               	movf	___fladd@bexp^0,w,c
 11336  0022A0  C01D  F018         	movff	___fladd@aexp,??___fladd
 11337  0022A4  6A19               	clrf	(??___fladd+1)^0,c
 11338  0022A6  5E18               	subwf	??___fladd^0,f,c
 11339  0022A8  0E00               	movlw	0
 11340  0022AA  5A19               	subwfb	(??___fladd+1)^0,f,c
 11341  0022AC  BE19               	btfsc	(??___fladd+1)^0,7,c
 11342  0022AE  EF62  F011         	goto	u9111
 11343  0022B2  5019               	movf	(??___fladd+1)^0,w,c
 11344  0022B4  E109               	bnz	u9110
 11345  0022B6  0E1A               	movlw	26
 11346  0022B8  5C18               	subwf	??___fladd^0,w,c
 11347  0022BA  A0D8               	btfss	status,0,c
 11348  0022BC  EF62  F011         	goto	u9111
 11349  0022C0  EF64  F011         	goto	u9110
 11350  0022C4                     u9111:
 11351  0022C4  EF9B  F011         	goto	l1498
 11352  0022C8                     u9110:
 11353  0022C8  5010               	movf	___fladd@b^0,w,c
 11354  0022CA  1011               	iorwf	(___fladd@b+1)^0,w,c
 11355  0022CC  1012               	iorwf	(___fladd@b+2)^0,w,c
 11356  0022CE  1013               	iorwf	(___fladd@b+3)^0,w,c
 11357  0022D0  A4D8               	btfss	status,2,c
 11358  0022D2  EF6D  F011         	goto	u9121
 11359  0022D6  EF70  F011         	goto	u9120
 11360  0022DA                     u9121:
 11361  0022DA  0E01               	movlw	1
 11362  0022DC  EF71  F011         	goto	u9130
 11363  0022E0                     u9120:
 11364  0022E0  0E00               	movlw	0
 11365  0022E2                     u9130:
 11366  0022E2  6E1F               	movwf	___fladd@grs^0,c
 11367  0022E4  0E00               	movlw	0
 11368  0022E6  6E10               	movwf	___fladd@b^0,c
 11369  0022E8  0E00               	movlw	0
 11370  0022EA  6E11               	movwf	(___fladd@b+1)^0,c
 11371  0022EC  0E00               	movlw	0
 11372  0022EE  6E12               	movwf	(___fladd@b+2)^0,c
 11373  0022F0  0E00               	movlw	0
 11374  0022F2  6E13               	movwf	(___fladd@b+3)^0,c
 11375  0022F4  C01D  F01E         	movff	___fladd@aexp,___fladd@bexp
 11376  0022F8  EFA4  F011         	goto	l1497
 11377  0022FC                     l1499:
 11378  0022FC  A01F               	btfss	___fladd@grs^0,0,c
 11379  0022FE  EF83  F011         	goto	u9141
 11380  002302  EF85  F011         	goto	u9140
 11381  002306                     u9141:
 11382  002306  EF8B  F011         	goto	l7762
 11383  00230A                     u9140:
 11384  00230A  90D8               	bcf	status,0,c
 11385  00230C  301F               	rrcf	___fladd@grs^0,w,c
 11386  00230E  0901               	iorlw	1
 11387  002310  6E1F               	movwf	___fladd@grs^0,c
 11388  002312  EF8D  F011         	goto	l7764
 11389  002316                     l7762:
 11390  002316  90D8               	bcf	status,0,c
 11391  002318  321F               	rrcf	___fladd@grs^0,f,c
 11392  00231A                     l7764:
 11393  00231A  A010               	btfss	___fladd@b^0,0,c
 11394  00231C  EF92  F011         	goto	u9151
 11395  002320  EF94  F011         	goto	u9150
 11396  002324                     u9151:
 11397  002324  EF95  F011         	goto	l7768
 11398  002328                     u9150:
 11399  002328  8E1F               	bsf	___fladd@grs^0,7,c
 11400  00232A                     l7768:
 11401  00232A  3413               	rlcf	(___fladd@b+3)^0,w,c
 11402  00232C  3213               	rrcf	(___fladd@b+3)^0,f,c
 11403  00232E  3212               	rrcf	(___fladd@b+2)^0,f,c
 11404  002330  3211               	rrcf	(___fladd@b+1)^0,f,c
 11405  002332  3210               	rrcf	___fladd@b^0,f,c
 11406  002334  2A1E               	incf	___fladd@bexp^0,f,c
 11407  002336                     l1498:
 11408  002336  501D               	movf	___fladd@aexp^0,w,c
 11409  002338  5C1E               	subwf	___fladd@bexp^0,w,c
 11410  00233A  A0D8               	btfss	status,0,c
 11411  00233C  EFA2  F011         	goto	u9161
 11412  002340  EFA4  F011         	goto	u9160
 11413  002344                     u9161:
 11414  002344  EF7E  F011         	goto	l1499
 11415  002348                     u9160:
 11416  002348                     l1497:
 11417  002348  BC1C               	btfsc	___fladd@signs^0,6,c
 11418  00234A  EFA9  F011         	goto	u9171
 11419  00234E  EFAB  F011         	goto	u9170
 11420  002352                     u9171:
 11421  002352  EFEB  F011         	goto	l7796
 11422  002356                     u9170:
 11423  002356  501E               	movf	___fladd@bexp^0,w,c
 11424  002358  A4D8               	btfss	status,2,c
 11425  00235A  EFB1  F011         	goto	u9181
 11426  00235E  EFB3  F011         	goto	u9180
 11427  002362                     u9181:
 11428  002362  EFBD  F011         	goto	l7778
 11429  002366                     u9180:
 11430  002366  0E00               	movlw	0
 11431  002368  6E10               	movwf	?___fladd^0,c
 11432  00236A  0E00               	movlw	0
 11433  00236C  6E11               	movwf	(?___fladd+1)^0,c
 11434  00236E  0E00               	movlw	0
 11435  002370  6E12               	movwf	(?___fladd+2)^0,c
 11436  002372  0E00               	movlw	0
 11437  002374  6E13               	movwf	(?___fladd+3)^0,c
 11438  002376  EF0C  F013         	goto	l1506
 11439  00237A                     l7778:
 11440  00237A  5014               	movf	___fladd@a^0,w,c
 11441  00237C  2610               	addwf	___fladd@b^0,f,c
 11442  00237E  5015               	movf	(___fladd@a+1)^0,w,c
 11443  002380  2211               	addwfc	(___fladd@b+1)^0,f,c
 11444  002382  5016               	movf	(___fladd@a+2)^0,w,c
 11445  002384  2212               	addwfc	(___fladd@b+2)^0,f,c
 11446  002386  5017               	movf	(___fladd@a+3)^0,w,c
 11447  002388  2213               	addwfc	(___fladd@b+3)^0,f,c
 11448  00238A  A013               	btfss	(___fladd@b+3)^0,0,c
 11449  00238C  EFCA  F011         	goto	u9191
 11450  002390  EFCC  F011         	goto	u9190
 11451  002394                     u9191:
 11452  002394  EF78  F012         	goto	l7832
 11453  002398                     u9190:
 11454  002398  A01F               	btfss	___fladd@grs^0,0,c
 11455  00239A  EFD1  F011         	goto	u9201
 11456  00239E  EFD3  F011         	goto	u9200
 11457  0023A2                     u9201:
 11458  0023A2  EFD9  F011         	goto	l7786
 11459  0023A6                     u9200:
 11460  0023A6  90D8               	bcf	status,0,c
 11461  0023A8  301F               	rrcf	___fladd@grs^0,w,c
 11462  0023AA  0901               	iorlw	1
 11463  0023AC  6E1F               	movwf	___fladd@grs^0,c
 11464  0023AE  EFDB  F011         	goto	l7788
 11465  0023B2                     l7786:
 11466  0023B2  90D8               	bcf	status,0,c
 11467  0023B4  321F               	rrcf	___fladd@grs^0,f,c
 11468  0023B6                     l7788:
 11469  0023B6  A010               	btfss	___fladd@b^0,0,c
 11470  0023B8  EFE0  F011         	goto	u9211
 11471  0023BC  EFE2  F011         	goto	u9210
 11472  0023C0                     u9211:
 11473  0023C0  EFE3  F011         	goto	l7792
 11474  0023C4                     u9210:
 11475  0023C4  8E1F               	bsf	___fladd@grs^0,7,c
 11476  0023C6                     l7792:
 11477  0023C6  3413               	rlcf	(___fladd@b+3)^0,w,c
 11478  0023C8  3213               	rrcf	(___fladd@b+3)^0,f,c
 11479  0023CA  3212               	rrcf	(___fladd@b+2)^0,f,c
 11480  0023CC  3211               	rrcf	(___fladd@b+1)^0,f,c
 11481  0023CE  3210               	rrcf	___fladd@b^0,f,c
 11482  0023D0  2A1E               	incf	___fladd@bexp^0,f,c
 11483  0023D2  EF78  F012         	goto	l7832
 11484  0023D6                     l7796:
 11485  0023D6  5014               	movf	___fladd@a^0,w,c
 11486  0023D8  5C10               	subwf	___fladd@b^0,w,c
 11487  0023DA  5015               	movf	(___fladd@a+1)^0,w,c
 11488  0023DC  5811               	subwfb	(___fladd@b+1)^0,w,c
 11489  0023DE  5016               	movf	(___fladd@a+2)^0,w,c
 11490  0023E0  5812               	subwfb	(___fladd@b+2)^0,w,c
 11491  0023E2  5013               	movf	(___fladd@b+3)^0,w,c
 11492  0023E4  0A80               	xorlw	128
 11493  0023E6  6E18               	movwf	??___fladd^0,c
 11494  0023E8  5017               	movf	(___fladd@a+3)^0,w,c
 11495  0023EA  0A80               	xorlw	128
 11496  0023EC  5818               	subwfb	??___fladd^0,w,c
 11497  0023EE  B0D8               	btfsc	status,0,c
 11498  0023F0  EFFC  F011         	goto	u9221
 11499  0023F4  EFFE  F011         	goto	u9220
 11500  0023F8                     u9221:
 11501  0023F8  EF29  F012         	goto	l7806
 11502  0023FC                     u9220:
 11503  0023FC  5010               	movf	___fladd@b^0,w,c
 11504  0023FE  5C14               	subwf	___fladd@a^0,w,c
 11505  002400  6E18               	movwf	??___fladd^0,c
 11506  002402  5011               	movf	(___fladd@b+1)^0,w,c
 11507  002404  5815               	subwfb	(___fladd@a+1)^0,w,c
 11508  002406  6E19               	movwf	(??___fladd+1)^0,c
 11509  002408  5012               	movf	(___fladd@b+2)^0,w,c
 11510  00240A  5816               	subwfb	(___fladd@a+2)^0,w,c
 11511  00240C  6E1A               	movwf	(??___fladd+2)^0,c
 11512  00240E  5013               	movf	(___fladd@b+3)^0,w,c
 11513  002410  5817               	subwfb	(___fladd@a+3)^0,w,c
 11514  002412  6E1B               	movwf	(??___fladd+3)^0,c
 11515  002414  0EFF               	movlw	255
 11516  002416  2418               	addwf	??___fladd^0,w,c
 11517  002418  6E10               	movwf	___fladd@b^0,c
 11518  00241A  0EFF               	movlw	255
 11519  00241C  2019               	addwfc	(??___fladd+1)^0,w,c
 11520  00241E  6E11               	movwf	(___fladd@b+1)^0,c
 11521  002420  0EFF               	movlw	255
 11522  002422  201A               	addwfc	(??___fladd+2)^0,w,c
 11523  002424  6E12               	movwf	(___fladd@b+2)^0,c
 11524  002426  0EFF               	movlw	255
 11525  002428  201B               	addwfc	(??___fladd+3)^0,w,c
 11526  00242A  6E13               	movwf	(___fladd@b+3)^0,c
 11527  00242C  0E80               	movlw	128
 11528  00242E  1A1C               	xorwf	___fladd@signs^0,f,c
 11529  002430  6C1F               	negf	___fladd@grs^0,c
 11530  002432  501F               	movf	___fladd@grs^0,w,c
 11531  002434  A4D8               	btfss	status,2,c
 11532  002436  EF1F  F012         	goto	u9231
 11533  00243A  EF21  F012         	goto	u9230
 11534  00243E                     u9231:
 11535  00243E  EF31  F012         	goto	l1514
 11536  002442                     u9230:
 11537  002442  0E01               	movlw	1
 11538  002444  2610               	addwf	___fladd@b^0,f,c
 11539  002446  0E00               	movlw	0
 11540  002448  2211               	addwfc	(___fladd@b+1)^0,f,c
 11541  00244A  2212               	addwfc	(___fladd@b+2)^0,f,c
 11542  00244C  2213               	addwfc	(___fladd@b+3)^0,f,c
 11543  00244E  EF31  F012         	goto	l1514
 11544  002452                     l7806:
 11545  002452  5014               	movf	___fladd@a^0,w,c
 11546  002454  5E10               	subwf	___fladd@b^0,f,c
 11547  002456  5015               	movf	(___fladd@a+1)^0,w,c
 11548  002458  5A11               	subwfb	(___fladd@b+1)^0,f,c
 11549  00245A  5016               	movf	(___fladd@a+2)^0,w,c
 11550  00245C  5A12               	subwfb	(___fladd@b+2)^0,f,c
 11551  00245E  5017               	movf	(___fladd@a+3)^0,w,c
 11552  002460  5A13               	subwfb	(___fladd@b+3)^0,f,c
 11553  002462                     l1514:
 11554  002462  5010               	movf	___fladd@b^0,w,c
 11555  002464  1011               	iorwf	(___fladd@b+1)^0,w,c
 11556  002466  1012               	iorwf	(___fladd@b+2)^0,w,c
 11557  002468  1013               	iorwf	(___fladd@b+3)^0,w,c
 11558  00246A  A4D8               	btfss	status,2,c
 11559  00246C  EF3A  F012         	goto	u9241
 11560  002470  EF3C  F012         	goto	u9240
 11561  002474                     u9241:
 11562  002474  EF71  F012         	goto	l7830
 11563  002478                     u9240:
 11564  002478  501F               	movf	___fladd@grs^0,w,c
 11565  00247A  A4D8               	btfss	status,2,c
 11566  00247C  EF42  F012         	goto	u9251
 11567  002480  EF44  F012         	goto	u9250
 11568  002484                     u9251:
 11569  002484  EF71  F012         	goto	l7830
 11570  002488                     u9250:
 11571  002488  0E00               	movlw	0
 11572  00248A  6E10               	movwf	?___fladd^0,c
 11573  00248C  0E00               	movlw	0
 11574  00248E  6E11               	movwf	(?___fladd+1)^0,c
 11575  002490  0E00               	movlw	0
 11576  002492  6E12               	movwf	(?___fladd+2)^0,c
 11577  002494  0E00               	movlw	0
 11578  002496  6E13               	movwf	(?___fladd+3)^0,c
 11579  002498  EF0C  F013         	goto	l1506
 11580  00249C                     l7814:
 11581  00249C  90D8               	bcf	status,0,c
 11582  00249E  3610               	rlcf	___fladd@b^0,f,c
 11583  0024A0  3611               	rlcf	(___fladd@b+1)^0,f,c
 11584  0024A2  3612               	rlcf	(___fladd@b+2)^0,f,c
 11585  0024A4  3613               	rlcf	(___fladd@b+3)^0,f,c
 11586  0024A6  AE1F               	btfss	___fladd@grs^0,7,c
 11587  0024A8  EF58  F012         	goto	u9261
 11588  0024AC  EF5A  F012         	goto	u9260
 11589  0024B0                     u9261:
 11590  0024B0  EF5B  F012         	goto	l7820
 11591  0024B4                     u9260:
 11592  0024B4  8010               	bsf	___fladd@b^0,0,c
 11593  0024B6                     l7820:
 11594  0024B6  A01F               	btfss	___fladd@grs^0,0,c
 11595  0024B8  EF60  F012         	goto	u9271
 11596  0024BC  EF62  F012         	goto	u9270
 11597  0024C0                     u9271:
 11598  0024C0  EF66  F012         	goto	l7824
 11599  0024C4                     u9270:
 11600  0024C4  80D8               	bsf	status,0,c
 11601  0024C6  361F               	rlcf	___fladd@grs^0,f,c
 11602  0024C8  EF68  F012         	goto	l7826
 11603  0024CC                     l7824:
 11604  0024CC  90D8               	bcf	status,0,c
 11605  0024CE  361F               	rlcf	___fladd@grs^0,f,c
 11606  0024D0                     l7826:
 11607  0024D0  501E               	movf	___fladd@bexp^0,w,c
 11608  0024D2  B4D8               	btfsc	status,2,c
 11609  0024D4  EF6E  F012         	goto	u9281
 11610  0024D8  EF70  F012         	goto	u9280
 11611  0024DC                     u9281:
 11612  0024DC  EF71  F012         	goto	l7830
 11613  0024E0                     u9280:
 11614  0024E0  061E               	decf	___fladd@bexp^0,f,c
 11615  0024E2                     l7830:
 11616  0024E2  AE12               	btfss	(___fladd@b+2)^0,7,c
 11617  0024E4  EF76  F012         	goto	u9291
 11618  0024E8  EF78  F012         	goto	u9290
 11619  0024EC                     u9291:
 11620  0024EC  EF4E  F012         	goto	l7814
 11621  0024F0                     u9290:
 11622  0024F0                     l7832:
 11623  0024F0  0E00               	movlw	0
 11624  0024F2  6E1D               	movwf	___fladd@aexp^0,c
 11625  0024F4  AE1F               	btfss	___fladd@grs^0,7,c
 11626  0024F6  EF7F  F012         	goto	u9301
 11627  0024FA  EF81  F012         	goto	u9300
 11628  0024FE                     u9301:
 11629  0024FE  EF99  F012         	goto	l1523
 11630  002502                     u9300:
 11631  002502  C01F  F018         	movff	___fladd@grs,??___fladd
 11632  002506  0E7F               	movlw	127
 11633  002508  1618               	andwf	??___fladd^0,f,c
 11634  00250A  B4D8               	btfsc	status,2,c
 11635  00250C  EF8A  F012         	goto	u9311
 11636  002510  EF8C  F012         	goto	u9310
 11637  002514                     u9311:
 11638  002514  EF90  F012         	goto	l1524
 11639  002518                     u9310:
 11640  002518                     l7838:
 11641  002518  0E01               	movlw	1
 11642  00251A  6E1D               	movwf	___fladd@aexp^0,c
 11643  00251C  EF99  F012         	goto	l1523
 11644  002520                     l1524:
 11645  002520  A010               	btfss	___fladd@b^0,0,c
 11646  002522  EF95  F012         	goto	u9321
 11647  002526  EF97  F012         	goto	u9320
 11648  00252A                     u9321:
 11649  00252A  EF99  F012         	goto	l1523
 11650  00252E                     u9320:
 11651  00252E  EF8C  F012         	goto	l7838
 11652  002532                     l1523:
 11653  002532  501D               	movf	___fladd@aexp^0,w,c
 11654  002534  B4D8               	btfsc	status,2,c
 11655  002536  EF9F  F012         	goto	u9331
 11656  00253A  EFA1  F012         	goto	u9330
 11657  00253E                     u9331:
 11658  00253E  EFCC  F012         	goto	l7850
 11659  002542                     u9330:
 11660  002542  0E01               	movlw	1
 11661  002544  2610               	addwf	___fladd@b^0,f,c
 11662  002546  0E00               	movlw	0
 11663  002548  2211               	addwfc	(___fladd@b+1)^0,f,c
 11664  00254A  2212               	addwfc	(___fladd@b+2)^0,f,c
 11665  00254C  2213               	addwfc	(___fladd@b+3)^0,f,c
 11666  00254E  A013               	btfss	(___fladd@b+3)^0,0,c
 11667  002550  EFAC  F012         	goto	u9341
 11668  002554  EFAE  F012         	goto	u9340
 11669  002558                     u9341:
 11670  002558  EFCC  F012         	goto	l7850
 11671  00255C                     u9340:
 11672  00255C  C010  F018         	movff	___fladd@b,??___fladd
 11673  002560  C011  F019         	movff	___fladd@b+1,??___fladd+1
 11674  002564  C012  F01A         	movff	___fladd@b+2,??___fladd+2
 11675  002568  C013  F01B         	movff	___fladd@b+3,??___fladd+3
 11676  00256C  341B               	rlcf	(??___fladd+3)^0,w,c
 11677  00256E  321B               	rrcf	(??___fladd+3)^0,f,c
 11678  002570  321A               	rrcf	(??___fladd+2)^0,f,c
 11679  002572  3219               	rrcf	(??___fladd+1)^0,f,c
 11680  002574  3218               	rrcf	??___fladd^0,f,c
 11681  002576  C018  F010         	movff	??___fladd,___fladd@b
 11682  00257A  C019  F011         	movff	??___fladd+1,___fladd@b+1
 11683  00257E  C01A  F012         	movff	??___fladd+2,___fladd@b+2
 11684  002582  C01B  F013         	movff	??___fladd+3,___fladd@b+3
 11685  002586  281E               	incf	___fladd@bexp^0,w,c
 11686  002588  B4D8               	btfsc	status,2,c
 11687  00258A  EFC9  F012         	goto	u9351
 11688  00258E  EFCB  F012         	goto	u9350
 11689  002592                     u9351:
 11690  002592  EFCC  F012         	goto	l7850
 11691  002596                     u9350:
 11692  002596  2A1E               	incf	___fladd@bexp^0,f,c
 11693  002598                     l7850:
 11694  002598  281E               	incf	___fladd@bexp^0,w,c
 11695  00259A  B4D8               	btfsc	status,2,c
 11696  00259C  EFD2  F012         	goto	u9361
 11697  0025A0  EFD4  F012         	goto	u9360
 11698  0025A4                     u9361:
 11699  0025A4  EFDC  F012         	goto	l7854
 11700  0025A8                     u9360:
 11701  0025A8  501E               	movf	___fladd@bexp^0,w,c
 11702  0025AA  A4D8               	btfss	status,2,c
 11703  0025AC  EFDA  F012         	goto	u9371
 11704  0025B0  EFDC  F012         	goto	u9370
 11705  0025B4                     u9371:
 11706  0025B4  EFEE  F012         	goto	l7858
 11707  0025B8                     u9370:
 11708  0025B8                     l7854:
 11709  0025B8  0E00               	movlw	0
 11710  0025BA  6E10               	movwf	___fladd@b^0,c
 11711  0025BC  0E00               	movlw	0
 11712  0025BE  6E11               	movwf	(___fladd@b+1)^0,c
 11713  0025C0  0E00               	movlw	0
 11714  0025C2  6E12               	movwf	(___fladd@b+2)^0,c
 11715  0025C4  0E00               	movlw	0
 11716  0025C6  6E13               	movwf	(___fladd@b+3)^0,c
 11717  0025C8  501E               	movf	___fladd@bexp^0,w,c
 11718  0025CA  A4D8               	btfss	status,2,c
 11719  0025CC  EFEA  F012         	goto	u9381
 11720  0025D0  EFEC  F012         	goto	u9380
 11721  0025D4                     u9381:
 11722  0025D4  EFEE  F012         	goto	l7858
 11723  0025D8                     u9380:
 11724  0025D8  0E00               	movlw	0
 11725  0025DA  6E1C               	movwf	___fladd@signs^0,c
 11726  0025DC                     l7858:
 11727  0025DC  A01E               	btfss	___fladd@bexp^0,0,c
 11728  0025DE  EFF3  F012         	goto	u9391
 11729  0025E2  EFF5  F012         	goto	u9390
 11730  0025E6                     u9391:
 11731  0025E6  EFF8  F012         	goto	l7862
 11732  0025EA                     u9390:
 11733  0025EA  8E12               	bsf	(___fladd@b+2)^0,7,c
 11734  0025EC  EFF9  F012         	goto	l7864
 11735  0025F0                     l7862:
 11736  0025F0  9E12               	bcf	(___fladd@b+2)^0,7,c
 11737  0025F2                     l7864:
 11738  0025F2  90D8               	bcf	status,0,c
 11739  0025F4  301E               	rrcf	___fladd@bexp^0,w,c
 11740  0025F6  6E13               	movwf	(___fladd@b+3)^0,c
 11741  0025F8  AE1C               	btfss	___fladd@signs^0,7,c
 11742  0025FA  EF01  F013         	goto	u9401
 11743  0025FE  EF03  F013         	goto	u9400
 11744  002602                     u9401:
 11745  002602  EF04  F013         	goto	l7870
 11746  002606                     u9400:
 11747  002606  8E13               	bsf	(___fladd@b+3)^0,7,c
 11748  002608                     l7870:
 11749  002608  C010  F010         	movff	___fladd@b,?___fladd
 11750  00260C  C011  F011         	movff	___fladd@b+1,?___fladd+1
 11751  002610  C012  F012         	movff	___fladd@b+2,?___fladd+2
 11752  002614  C013  F013         	movff	___fladd@b+3,?___fladd+3
 11753  002618                     l1506:
 11754  002618  0012               	return		;funcret
 11755  00261A                     __end_of___fladd:
 11756                           	opt callstack 0
 11757                           
 11758 ;; *************** function ___flneg *****************
 11759 ;; Defined at:
 11760 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  f1              4   15[COMRAM] unsigned char 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;		None
 11765 ;; Return value:  Size  Location     Type
 11766 ;;                  4   15[COMRAM] unsigned char 
 11767 ;; Registers used:
 11768 ;;		wreg, status,2, status,0
 11769 ;; Tracked objects:
 11770 ;;		On entry : 0/0
 11771 ;;		On exit  : 0/0
 11772 ;;		Unchanged: 0/0
 11773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11774 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11777 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11778 ;;Total ram usage:        4 bytes
 11779 ;; Hardware stack levels used:    1
 11780 ;; Hardware stack levels required when called:    5
 11781 ;; This function calls:
 11782 ;;		Nothing
 11783 ;; This function is called by:
 11784 ;;		_efgtoa
 11785 ;; This function uses a non-reentrant model
 11786 ;;
 11787                           
 11788                           	psect	text24
 11789  005F38                     __ptext24:
 11790                           	opt callstack 0
 11791  005F38                     ___flneg:
 11792                           	opt callstack 20
 11793  005F38  5010               	movf	___flneg@f1^0,w,c
 11794  005F3A  1011               	iorwf	(___flneg@f1+1)^0,w,c
 11795  005F3C  1012               	iorwf	(___flneg@f1+2)^0,w,c
 11796  005F3E  1013               	iorwf	(___flneg@f1+3)^0,w,c
 11797  005F40  B4D8               	btfsc	status,2,c
 11798  005F42  EFA5  F02F         	goto	u10531
 11799  005F46  EFA7  F02F         	goto	u10530
 11800  005F4A                     u10531:
 11801  005F4A  EFAF  F02F         	goto	l8470
 11802  005F4E                     u10530:
 11803  005F4E  0E00               	movlw	0
 11804  005F50  1A10               	xorwf	___flneg@f1^0,f,c
 11805  005F52  0E00               	movlw	0
 11806  005F54  1A11               	xorwf	(___flneg@f1+1)^0,f,c
 11807  005F56  0E00               	movlw	0
 11808  005F58  1A12               	xorwf	(___flneg@f1+2)^0,f,c
 11809  005F5A  0E80               	movlw	128
 11810  005F5C  1A13               	xorwf	(___flneg@f1+3)^0,f,c
 11811  005F5E                     l8470:
 11812  005F5E  C010  F010         	movff	___flneg@f1,?___flneg
 11813  005F62  C011  F011         	movff	___flneg@f1+1,?___flneg+1
 11814  005F66  C012  F012         	movff	___flneg@f1+2,?___flneg+2
 11815  005F6A  C013  F013         	movff	___flneg@f1+3,?___flneg+3
 11816  005F6E  0012               	return		;funcret
 11817  005F70                     __end_of___flneg:
 11818                           	opt callstack 0
 11819                           
 11820 ;; *************** function ___flmul *****************
 11821 ;; Defined at:
 11822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  b               4   29[COMRAM] unsigned char 
 11825 ;;  a               4   33[COMRAM] unsigned char 
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;  prod            4   48[COMRAM] struct .
 11828 ;;  grs             4   43[COMRAM] unsigned long 
 11829 ;;  temp            2   52[COMRAM] struct .
 11830 ;;  bexp            1   47[COMRAM] unsigned char 
 11831 ;;  aexp            1   42[COMRAM] unsigned char 
 11832 ;;  sign            1   41[COMRAM] unsigned char 
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  4   29[COMRAM] unsigned char 
 11835 ;; Registers used:
 11836 ;;		wreg, status,2, status,0, prodl, prodh
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 0/0
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11842 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11843 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11845 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11846 ;;Total ram usage:       25 bytes
 11847 ;; Hardware stack levels used:    1
 11848 ;; Hardware stack levels required when called:    5
 11849 ;; This function calls:
 11850 ;;		Nothing
 11851 ;; This function is called by:
 11852 ;;		_main
 11853 ;;		_efgtoa
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857                           	psect	text25
 11858  00261A                     __ptext25:
 11859                           	opt callstack 0
 11860  00261A                     ___flmul:
 11861                           	opt callstack 20
 11862  00261A  5021               	movf	(___flmul@b+3)^0,w,c
 11863  00261C  0B80               	andlw	128
 11864  00261E  6E2A               	movwf	___flmul@sign^0,c
 11865  002620  5021               	movf	(___flmul@b+3)^0,w,c
 11866  002622  2421               	addwf	(___flmul@b+3)^0,w,c
 11867  002624  6E30               	movwf	___flmul@bexp^0,c
 11868  002626  AE20               	btfss	(___flmul@b+2)^0,7,c
 11869  002628  EF18  F013         	goto	u10141
 11870  00262C  EF1A  F013         	goto	u10140
 11871  002630                     u10141:
 11872  002630  EF1B  F013         	goto	l8218
 11873  002634                     u10140:
 11874  002634  8030               	bsf	___flmul@bexp^0,0,c
 11875  002636                     l8218:
 11876  002636  5030               	movf	___flmul@bexp^0,w,c
 11877  002638  B4D8               	btfsc	status,2,c
 11878  00263A  EF21  F013         	goto	u10151
 11879  00263E  EF23  F013         	goto	u10150
 11880  002642                     u10151:
 11881  002642  EF36  F013         	goto	l8226
 11882  002646                     u10150:
 11883  002646  2830               	incf	___flmul@bexp^0,w,c
 11884  002648  A4D8               	btfss	status,2,c
 11885  00264A  EF29  F013         	goto	u10161
 11886  00264E  EF2B  F013         	goto	u10160
 11887  002652                     u10161:
 11888  002652  EF33  F013         	goto	l8224
 11889  002656                     u10160:
 11890  002656  0E00               	movlw	0
 11891  002658  6E1E               	movwf	___flmul@b^0,c
 11892  00265A  0E00               	movlw	0
 11893  00265C  6E1F               	movwf	(___flmul@b+1)^0,c
 11894  00265E  0E00               	movlw	0
 11895  002660  6E20               	movwf	(___flmul@b+2)^0,c
 11896  002662  0E00               	movlw	0
 11897  002664  6E21               	movwf	(___flmul@b+3)^0,c
 11898  002666                     l8224:
 11899  002666  8E20               	bsf	(___flmul@b+2)^0,7,c
 11900  002668  EF3E  F013         	goto	l8228
 11901  00266C                     l8226:
 11902  00266C  0E00               	movlw	0
 11903  00266E  6E1E               	movwf	___flmul@b^0,c
 11904  002670  0E00               	movlw	0
 11905  002672  6E1F               	movwf	(___flmul@b+1)^0,c
 11906  002674  0E00               	movlw	0
 11907  002676  6E20               	movwf	(___flmul@b+2)^0,c
 11908  002678  0E00               	movlw	0
 11909  00267A  6E21               	movwf	(___flmul@b+3)^0,c
 11910  00267C                     l8228:
 11911  00267C  5025               	movf	(___flmul@a+3)^0,w,c
 11912  00267E  0B80               	andlw	128
 11913  002680  1A2A               	xorwf	___flmul@sign^0,f,c
 11914  002682  5025               	movf	(___flmul@a+3)^0,w,c
 11915  002684  2425               	addwf	(___flmul@a+3)^0,w,c
 11916  002686  6E2B               	movwf	___flmul@aexp^0,c
 11917  002688  AE24               	btfss	(___flmul@a+2)^0,7,c
 11918  00268A  EF49  F013         	goto	u10171
 11919  00268E  EF4B  F013         	goto	u10170
 11920  002692                     u10171:
 11921  002692  EF4C  F013         	goto	l8236
 11922  002696                     u10170:
 11923  002696  802B               	bsf	___flmul@aexp^0,0,c
 11924  002698                     l8236:
 11925  002698  502B               	movf	___flmul@aexp^0,w,c
 11926  00269A  B4D8               	btfsc	status,2,c
 11927  00269C  EF52  F013         	goto	u10181
 11928  0026A0  EF54  F013         	goto	u10180
 11929  0026A4                     u10181:
 11930  0026A4  EF67  F013         	goto	l8244
 11931  0026A8                     u10180:
 11932  0026A8  282B               	incf	___flmul@aexp^0,w,c
 11933  0026AA  A4D8               	btfss	status,2,c
 11934  0026AC  EF5A  F013         	goto	u10191
 11935  0026B0  EF5C  F013         	goto	u10190
 11936  0026B4                     u10191:
 11937  0026B4  EF64  F013         	goto	l8242
 11938  0026B8                     u10190:
 11939  0026B8  0E00               	movlw	0
 11940  0026BA  6E22               	movwf	___flmul@a^0,c
 11941  0026BC  0E00               	movlw	0
 11942  0026BE  6E23               	movwf	(___flmul@a+1)^0,c
 11943  0026C0  0E00               	movlw	0
 11944  0026C2  6E24               	movwf	(___flmul@a+2)^0,c
 11945  0026C4  0E00               	movlw	0
 11946  0026C6  6E25               	movwf	(___flmul@a+3)^0,c
 11947  0026C8                     l8242:
 11948  0026C8  8E24               	bsf	(___flmul@a+2)^0,7,c
 11949  0026CA  EF6F  F013         	goto	l1583
 11950  0026CE                     l8244:
 11951  0026CE  0E00               	movlw	0
 11952  0026D0  6E22               	movwf	___flmul@a^0,c
 11953  0026D2  0E00               	movlw	0
 11954  0026D4  6E23               	movwf	(___flmul@a+1)^0,c
 11955  0026D6  0E00               	movlw	0
 11956  0026D8  6E24               	movwf	(___flmul@a+2)^0,c
 11957  0026DA  0E00               	movlw	0
 11958  0026DC  6E25               	movwf	(___flmul@a+3)^0,c
 11959  0026DE                     l1583:
 11960  0026DE  502B               	movf	___flmul@aexp^0,w,c
 11961  0026E0  B4D8               	btfsc	status,2,c
 11962  0026E2  EF75  F013         	goto	u10201
 11963  0026E6  EF77  F013         	goto	u10200
 11964  0026EA                     u10201:
 11965  0026EA  EF7F  F013         	goto	l8248
 11966  0026EE                     u10200:
 11967  0026EE  5030               	movf	___flmul@bexp^0,w,c
 11968  0026F0  A4D8               	btfss	status,2,c
 11969  0026F2  EF7D  F013         	goto	u10211
 11970  0026F6  EF7F  F013         	goto	u10210
 11971  0026FA                     u10211:
 11972  0026FA  EF89  F013         	goto	l8252
 11973  0026FE                     u10210:
 11974  0026FE                     l8248:
 11975  0026FE  0E00               	movlw	0
 11976  002700  6E1E               	movwf	?___flmul^0,c
 11977  002702  0E00               	movlw	0
 11978  002704  6E1F               	movwf	(?___flmul+1)^0,c
 11979  002706  0E00               	movlw	0
 11980  002708  6E20               	movwf	(?___flmul+2)^0,c
 11981  00270A  0E00               	movlw	0
 11982  00270C  6E21               	movwf	(?___flmul+3)^0,c
 11983  00270E  EF21  F015         	goto	l1587
 11984  002712                     l8252:
 11985  002712  5024               	movf	(___flmul@a+2)^0,w,c
 11986  002714  021E               	mulwf	___flmul@b^0,c
 11987  002716  CFF3 F035          	movff	prodl,___flmul@temp
 11988  00271A  CFF4 F036          	movff	prodh,___flmul@temp+1
 11989  00271E  5035               	movf	___flmul@temp^0,w,c
 11990  002720  6E2C               	movwf	___flmul@grs^0,c
 11991  002722  6A2D               	clrf	(___flmul@grs+1)^0,c
 11992  002724  6A2E               	clrf	(___flmul@grs+2)^0,c
 11993  002726  6A2F               	clrf	(___flmul@grs+3)^0,c
 11994  002728  5036               	movf	(___flmul@temp+1)^0,w,c
 11995  00272A  6E31               	movwf	___flmul@prod^0,c
 11996  00272C  6A32               	clrf	(___flmul@prod+1)^0,c
 11997  00272E  6A33               	clrf	(___flmul@prod+2)^0,c
 11998  002730  6A34               	clrf	(___flmul@prod+3)^0,c
 11999  002732  5023               	movf	(___flmul@a+1)^0,w,c
 12000  002734  021F               	mulwf	(___flmul@b+1)^0,c
 12001  002736  CFF3 F035          	movff	prodl,___flmul@temp
 12002  00273A  CFF4 F036          	movff	prodh,___flmul@temp+1
 12003  00273E  5035               	movf	___flmul@temp^0,w,c
 12004  002740  262C               	addwf	___flmul@grs^0,f,c
 12005  002742  0E00               	movlw	0
 12006  002744  222D               	addwfc	(___flmul@grs+1)^0,f,c
 12007  002746  222E               	addwfc	(___flmul@grs+2)^0,f,c
 12008  002748  222F               	addwfc	(___flmul@grs+3)^0,f,c
 12009  00274A  5036               	movf	(___flmul@temp+1)^0,w,c
 12010  00274C  2631               	addwf	___flmul@prod^0,f,c
 12011  00274E  0E00               	movlw	0
 12012  002750  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12013  002752  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12014  002754  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12015  002756  5022               	movf	___flmul@a^0,w,c
 12016  002758  0220               	mulwf	(___flmul@b+2)^0,c
 12017  00275A  CFF3 F035          	movff	prodl,___flmul@temp
 12018  00275E  CFF4 F036          	movff	prodh,___flmul@temp+1
 12019  002762  5035               	movf	___flmul@temp^0,w,c
 12020  002764  262C               	addwf	___flmul@grs^0,f,c
 12021  002766  0E00               	movlw	0
 12022  002768  222D               	addwfc	(___flmul@grs+1)^0,f,c
 12023  00276A  222E               	addwfc	(___flmul@grs+2)^0,f,c
 12024  00276C  222F               	addwfc	(___flmul@grs+3)^0,f,c
 12025  00276E  5036               	movf	(___flmul@temp+1)^0,w,c
 12026  002770  2631               	addwf	___flmul@prod^0,f,c
 12027  002772  0E00               	movlw	0
 12028  002774  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12029  002776  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12030  002778  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12031  00277A  C02E  F02F         	movff	___flmul@grs+2,___flmul@grs+3
 12032  00277E  C02D  F02E         	movff	___flmul@grs+1,___flmul@grs+2
 12033  002782  C02C  F02D         	movff	___flmul@grs,___flmul@grs+1
 12034  002786  6A2C               	clrf	___flmul@grs^0,c
 12035  002788  5022               	movf	___flmul@a^0,w,c
 12036  00278A  021F               	mulwf	(___flmul@b+1)^0,c
 12037  00278C  CFF3 F035          	movff	prodl,___flmul@temp
 12038  002790  CFF4 F036          	movff	prodh,___flmul@temp+1
 12039  002794  5035               	movf	___flmul@temp^0,w,c
 12040  002796  262C               	addwf	___flmul@grs^0,f,c
 12041  002798  5036               	movf	(___flmul@temp+1)^0,w,c
 12042  00279A  222D               	addwfc	(___flmul@grs+1)^0,f,c
 12043  00279C  0E00               	movlw	0
 12044  00279E  222E               	addwfc	(___flmul@grs+2)^0,f,c
 12045  0027A0  0E00               	movlw	0
 12046  0027A2  222F               	addwfc	(___flmul@grs+3)^0,f,c
 12047  0027A4  5023               	movf	(___flmul@a+1)^0,w,c
 12048  0027A6  021E               	mulwf	___flmul@b^0,c
 12049  0027A8  CFF3 F035          	movff	prodl,___flmul@temp
 12050  0027AC  CFF4 F036          	movff	prodh,___flmul@temp+1
 12051  0027B0  5035               	movf	___flmul@temp^0,w,c
 12052  0027B2  262C               	addwf	___flmul@grs^0,f,c
 12053  0027B4  5036               	movf	(___flmul@temp+1)^0,w,c
 12054  0027B6  222D               	addwfc	(___flmul@grs+1)^0,f,c
 12055  0027B8  0E00               	movlw	0
 12056  0027BA  222E               	addwfc	(___flmul@grs+2)^0,f,c
 12057  0027BC  0E00               	movlw	0
 12058  0027BE  222F               	addwfc	(___flmul@grs+3)^0,f,c
 12059  0027C0  C02E  F02F         	movff	___flmul@grs+2,___flmul@grs+3
 12060  0027C4  C02D  F02E         	movff	___flmul@grs+1,___flmul@grs+2
 12061  0027C8  C02C  F02D         	movff	___flmul@grs,___flmul@grs+1
 12062  0027CC  6A2C               	clrf	___flmul@grs^0,c
 12063  0027CE  5022               	movf	___flmul@a^0,w,c
 12064  0027D0  021E               	mulwf	___flmul@b^0,c
 12065  0027D2  CFF3 F035          	movff	prodl,___flmul@temp
 12066  0027D6  CFF4 F036          	movff	prodh,___flmul@temp+1
 12067  0027DA  5035               	movf	___flmul@temp^0,w,c
 12068  0027DC  262C               	addwf	___flmul@grs^0,f,c
 12069  0027DE  5036               	movf	(___flmul@temp+1)^0,w,c
 12070  0027E0  222D               	addwfc	(___flmul@grs+1)^0,f,c
 12071  0027E2  0E00               	movlw	0
 12072  0027E4  222E               	addwfc	(___flmul@grs+2)^0,f,c
 12073  0027E6  0E00               	movlw	0
 12074  0027E8  222F               	addwfc	(___flmul@grs+3)^0,f,c
 12075  0027EA  5024               	movf	(___flmul@a+2)^0,w,c
 12076  0027EC  021F               	mulwf	(___flmul@b+1)^0,c
 12077  0027EE  CFF3 F035          	movff	prodl,___flmul@temp
 12078  0027F2  CFF4 F036          	movff	prodh,___flmul@temp+1
 12079  0027F6  5035               	movf	___flmul@temp^0,w,c
 12080  0027F8  2631               	addwf	___flmul@prod^0,f,c
 12081  0027FA  5036               	movf	(___flmul@temp+1)^0,w,c
 12082  0027FC  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12083  0027FE  0E00               	movlw	0
 12084  002800  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12085  002802  0E00               	movlw	0
 12086  002804  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12087  002806  5023               	movf	(___flmul@a+1)^0,w,c
 12088  002808  0220               	mulwf	(___flmul@b+2)^0,c
 12089  00280A  CFF3 F035          	movff	prodl,___flmul@temp
 12090  00280E  CFF4 F036          	movff	prodh,___flmul@temp+1
 12091  002812  5035               	movf	___flmul@temp^0,w,c
 12092  002814  2631               	addwf	___flmul@prod^0,f,c
 12093  002816  5036               	movf	(___flmul@temp+1)^0,w,c
 12094  002818  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12095  00281A  0E00               	movlw	0
 12096  00281C  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12097  00281E  0E00               	movlw	0
 12098  002820  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12099  002822  5024               	movf	(___flmul@a+2)^0,w,c
 12100  002824  0220               	mulwf	(___flmul@b+2)^0,c
 12101  002826  CFF3 F035          	movff	prodl,___flmul@temp
 12102  00282A  CFF4 F036          	movff	prodh,___flmul@temp+1
 12103  00282E  5035               	movf	___flmul@temp^0,w,c
 12104  002830  6E26               	movwf	??___flmul^0,c
 12105  002832  5036               	movf	(___flmul@temp+1)^0,w,c
 12106  002834  6E27               	movwf	(??___flmul+1)^0,c
 12107  002836  6A28               	clrf	(??___flmul+2)^0,c
 12108  002838  6A29               	clrf	(??___flmul+3)^0,c
 12109  00283A  C028  F029         	movff	??___flmul+2,??___flmul+3
 12110  00283E  C027  F028         	movff	??___flmul+1,??___flmul+2
 12111  002842  C026  F027         	movff	??___flmul,??___flmul+1
 12112  002846  6A26               	clrf	??___flmul^0,c
 12113  002848  5026               	movf	??___flmul^0,w,c
 12114  00284A  2631               	addwf	___flmul@prod^0,f,c
 12115  00284C  5027               	movf	(??___flmul+1)^0,w,c
 12116  00284E  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12117  002850  5028               	movf	(??___flmul+2)^0,w,c
 12118  002852  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12119  002854  5029               	movf	(??___flmul+3)^0,w,c
 12120  002856  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12121  002858  C02C  F026         	movff	___flmul@grs,??___flmul
 12122  00285C  C02D  F027         	movff	___flmul@grs+1,??___flmul+1
 12123  002860  C02E  F028         	movff	___flmul@grs+2,??___flmul+2
 12124  002864  C02F  F029         	movff	___flmul@grs+3,??___flmul+3
 12125  002868  0E19               	movlw	25
 12126  00286A  EF3C  F014         	goto	u10220
 12127  00286E                     u10225:
 12128  00286E  90D8               	bcf	status,0,c
 12129  002870  3229               	rrcf	(??___flmul+3)^0,f,c
 12130  002872  3228               	rrcf	(??___flmul+2)^0,f,c
 12131  002874  3227               	rrcf	(??___flmul+1)^0,f,c
 12132  002876  3226               	rrcf	??___flmul^0,f,c
 12133  002878                     u10220:
 12134  002878  2EE8               	decfsz	wreg,f,c
 12135  00287A  EF37  F014         	goto	u10225
 12136  00287E  5026               	movf	??___flmul^0,w,c
 12137  002880  2631               	addwf	___flmul@prod^0,f,c
 12138  002882  5027               	movf	(??___flmul+1)^0,w,c
 12139  002884  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12140  002886  5028               	movf	(??___flmul+2)^0,w,c
 12141  002888  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12142  00288A  5029               	movf	(??___flmul+3)^0,w,c
 12143  00288C  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12144  00288E  C02E  F02F         	movff	___flmul@grs+2,___flmul@grs+3
 12145  002892  C02D  F02E         	movff	___flmul@grs+1,___flmul@grs+2
 12146  002896  C02C  F02D         	movff	___flmul@grs,___flmul@grs+1
 12147  00289A  6A2C               	clrf	___flmul@grs^0,c
 12148  00289C  502B               	movf	___flmul@aexp^0,w,c
 12149  00289E  C030  F026         	movff	___flmul@bexp,??___flmul
 12150  0028A2  6A27               	clrf	(??___flmul+1)^0,c
 12151  0028A4  2626               	addwf	??___flmul^0,f,c
 12152  0028A6  0E00               	movlw	0
 12153  0028A8  2227               	addwfc	(??___flmul+1)^0,f,c
 12154  0028AA  0E82               	movlw	130
 12155  0028AC  2426               	addwf	??___flmul^0,w,c
 12156  0028AE  6E35               	movwf	___flmul@temp^0,c
 12157  0028B0  0EFF               	movlw	255
 12158  0028B2  2027               	addwfc	(??___flmul+1)^0,w,c
 12159  0028B4  6E36               	movwf	(___flmul@temp+1)^0,c
 12160  0028B6  EF72  F014         	goto	l8300
 12161  0028BA                     l8294:
 12162  0028BA  90D8               	bcf	status,0,c
 12163  0028BC  3631               	rlcf	___flmul@prod^0,f,c
 12164  0028BE  3632               	rlcf	(___flmul@prod+1)^0,f,c
 12165  0028C0  3633               	rlcf	(___flmul@prod+2)^0,f,c
 12166  0028C2  3634               	rlcf	(___flmul@prod+3)^0,f,c
 12167  0028C4  AE2F               	btfss	(___flmul@grs+3)^0,7,c
 12168  0028C6  EF67  F014         	goto	u10231
 12169  0028CA  EF69  F014         	goto	u10230
 12170  0028CE                     u10231:
 12171  0028CE  EF6A  F014         	goto	l1590
 12172  0028D2                     u10230:
 12173  0028D2  8031               	bsf	___flmul@prod^0,0,c
 12174  0028D4                     l1590:
 12175  0028D4  90D8               	bcf	status,0,c
 12176  0028D6  362C               	rlcf	___flmul@grs^0,f,c
 12177  0028D8  362D               	rlcf	(___flmul@grs+1)^0,f,c
 12178  0028DA  362E               	rlcf	(___flmul@grs+2)^0,f,c
 12179  0028DC  362F               	rlcf	(___flmul@grs+3)^0,f,c
 12180  0028DE  0635               	decf	___flmul@temp^0,f,c
 12181  0028E0  A0D8               	btfss	status,0,c
 12182  0028E2  0636               	decf	(___flmul@temp+1)^0,f,c
 12183  0028E4                     l8300:
 12184  0028E4  AE33               	btfss	(___flmul@prod+2)^0,7,c
 12185  0028E6  EF77  F014         	goto	u10241
 12186  0028EA  EF79  F014         	goto	u10240
 12187  0028EE                     u10241:
 12188  0028EE  EF5D  F014         	goto	l8294
 12189  0028F2                     u10240:
 12190  0028F2  0E00               	movlw	0
 12191  0028F4  6E2B               	movwf	___flmul@aexp^0,c
 12192  0028F6  AE2F               	btfss	(___flmul@grs+3)^0,7,c
 12193  0028F8  EF80  F014         	goto	u10251
 12194  0028FC  EF82  F014         	goto	u10250
 12195  002900                     u10251:
 12196  002900  EFA6  F014         	goto	l1592
 12197  002904                     u10250:
 12198  002904  0EFF               	movlw	255
 12199  002906  142C               	andwf	___flmul@grs^0,w,c
 12200  002908  6E26               	movwf	??___flmul^0,c
 12201  00290A  0EFF               	movlw	255
 12202  00290C  142D               	andwf	(___flmul@grs+1)^0,w,c
 12203  00290E  6E27               	movwf	(??___flmul+1)^0,c
 12204  002910  0EFF               	movlw	255
 12205  002912  142E               	andwf	(___flmul@grs+2)^0,w,c
 12206  002914  6E28               	movwf	(??___flmul+2)^0,c
 12207  002916  0E7F               	movlw	127
 12208  002918  142F               	andwf	(___flmul@grs+3)^0,w,c
 12209  00291A  6E29               	movwf	(??___flmul+3)^0,c
 12210  00291C  5026               	movf	??___flmul^0,w,c
 12211  00291E  1027               	iorwf	(??___flmul+1)^0,w,c
 12212  002920  1028               	iorwf	(??___flmul+2)^0,w,c
 12213  002922  1029               	iorwf	(??___flmul+3)^0,w,c
 12214  002924  B4D8               	btfsc	status,2,c
 12215  002926  EF97  F014         	goto	u10261
 12216  00292A  EF99  F014         	goto	u10260
 12217  00292E                     u10261:
 12218  00292E  EF9D  F014         	goto	l1593
 12219  002932                     u10260:
 12220  002932                     l8308:
 12221  002932  0E01               	movlw	1
 12222  002934  6E2B               	movwf	___flmul@aexp^0,c
 12223  002936  EFA6  F014         	goto	l1592
 12224  00293A                     l1593:
 12225  00293A  A031               	btfss	___flmul@prod^0,0,c
 12226  00293C  EFA2  F014         	goto	u10271
 12227  002940  EFA4  F014         	goto	u10270
 12228  002944                     u10271:
 12229  002944  EFA6  F014         	goto	l1592
 12230  002948                     u10270:
 12231  002948  EF99  F014         	goto	l8308
 12232  00294C                     l1592:
 12233  00294C  502B               	movf	___flmul@aexp^0,w,c
 12234  00294E  B4D8               	btfsc	status,2,c
 12235  002950  EFAC  F014         	goto	u10281
 12236  002954  EFAE  F014         	goto	u10280
 12237  002958                     u10281:
 12238  002958  EFD2  F014         	goto	l8320
 12239  00295C                     u10280:
 12240  00295C  0E01               	movlw	1
 12241  00295E  2631               	addwf	___flmul@prod^0,f,c
 12242  002960  0E00               	movlw	0
 12243  002962  2232               	addwfc	(___flmul@prod+1)^0,f,c
 12244  002964  2233               	addwfc	(___flmul@prod+2)^0,f,c
 12245  002966  2234               	addwfc	(___flmul@prod+3)^0,f,c
 12246  002968  A034               	btfss	(___flmul@prod+3)^0,0,c
 12247  00296A  EFB9  F014         	goto	u10291
 12248  00296E  EFBB  F014         	goto	u10290
 12249  002972                     u10291:
 12250  002972  EFD2  F014         	goto	l8320
 12251  002976                     u10290:
 12252  002976  C031  F026         	movff	___flmul@prod,??___flmul
 12253  00297A  C032  F027         	movff	___flmul@prod+1,??___flmul+1
 12254  00297E  C033  F028         	movff	___flmul@prod+2,??___flmul+2
 12255  002982  C034  F029         	movff	___flmul@prod+3,??___flmul+3
 12256  002986  3429               	rlcf	(??___flmul+3)^0,w,c
 12257  002988  3229               	rrcf	(??___flmul+3)^0,f,c
 12258  00298A  3228               	rrcf	(??___flmul+2)^0,f,c
 12259  00298C  3227               	rrcf	(??___flmul+1)^0,f,c
 12260  00298E  3226               	rrcf	??___flmul^0,f,c
 12261  002990  C026  F031         	movff	??___flmul,___flmul@prod
 12262  002994  C027  F032         	movff	??___flmul+1,___flmul@prod+1
 12263  002998  C028  F033         	movff	??___flmul+2,___flmul@prod+2
 12264  00299C  C029  F034         	movff	??___flmul+3,___flmul@prod+3
 12265  0029A0  4A35               	infsnz	___flmul@temp^0,f,c
 12266  0029A2  2A36               	incf	(___flmul@temp+1)^0,f,c
 12267  0029A4                     l8320:
 12268  0029A4  BE36               	btfsc	(___flmul@temp+1)^0,7,c
 12269  0029A6  EFDD  F014         	goto	u10301
 12270  0029AA  5036               	movf	(___flmul@temp+1)^0,w,c
 12271  0029AC  E108               	bnz	u10300
 12272  0029AE  2835               	incf	___flmul@temp^0,w,c
 12273  0029B0  A0D8               	btfss	status,0,c
 12274  0029B2  EFDD  F014         	goto	u10301
 12275  0029B6  EFDF  F014         	goto	u10300
 12276  0029BA                     u10301:
 12277  0029BA  EFE9  F014         	goto	l8324
 12278  0029BE                     u10300:
 12279  0029BE  0E00               	movlw	0
 12280  0029C0  6E31               	movwf	___flmul@prod^0,c
 12281  0029C2  0E00               	movlw	0
 12282  0029C4  6E32               	movwf	(___flmul@prod+1)^0,c
 12283  0029C6  0E80               	movlw	128
 12284  0029C8  6E33               	movwf	(___flmul@prod+2)^0,c
 12285  0029CA  0E7F               	movlw	127
 12286  0029CC  6E34               	movwf	(___flmul@prod+3)^0,c
 12287  0029CE  EF17  F015         	goto	l8336
 12288  0029D2                     l8324:
 12289  0029D2  BE36               	btfsc	(___flmul@temp+1)^0,7,c
 12290  0029D4  EFF6  F014         	goto	u10310
 12291  0029D8  5036               	movf	(___flmul@temp+1)^0,w,c
 12292  0029DA  E106               	bnz	u10311
 12293  0029DC  0435               	decf	___flmul@temp^0,w,c
 12294  0029DE  B0D8               	btfsc	status,0,c
 12295  0029E0  EFF4  F014         	goto	u10311
 12296  0029E4  EFF6  F014         	goto	u10310
 12297  0029E8                     u10311:
 12298  0029E8  EF02  F015         	goto	l1600
 12299  0029EC                     u10310:
 12300  0029EC  0E00               	movlw	0
 12301  0029EE  6E31               	movwf	___flmul@prod^0,c
 12302  0029F0  0E00               	movlw	0
 12303  0029F2  6E32               	movwf	(___flmul@prod+1)^0,c
 12304  0029F4  0E00               	movlw	0
 12305  0029F6  6E33               	movwf	(___flmul@prod+2)^0,c
 12306  0029F8  0E00               	movlw	0
 12307  0029FA  6E34               	movwf	(___flmul@prod+3)^0,c
 12308  0029FC  0E00               	movlw	0
 12309  0029FE  6E2A               	movwf	___flmul@sign^0,c
 12310  002A00  EF17  F015         	goto	l8336
 12311  002A04                     l1600:
 12312  002A04  C035  F030         	movff	___flmul@temp,___flmul@bexp
 12313  002A08  0EFF               	movlw	255
 12314  002A0A  1631               	andwf	___flmul@prod^0,f,c
 12315  002A0C  0EFF               	movlw	255
 12316  002A0E  1632               	andwf	(___flmul@prod+1)^0,f,c
 12317  002A10  0E7F               	movlw	127
 12318  002A12  1633               	andwf	(___flmul@prod+2)^0,f,c
 12319  002A14  0E00               	movlw	0
 12320  002A16  1634               	andwf	(___flmul@prod+3)^0,f,c
 12321  002A18  A030               	btfss	___flmul@bexp^0,0,c
 12322  002A1A  EF11  F015         	goto	u10321
 12323  002A1E  EF13  F015         	goto	u10320
 12324  002A22                     u10321:
 12325  002A22  EF14  F015         	goto	l8334
 12326  002A26                     u10320:
 12327  002A26  8E33               	bsf	(___flmul@prod+2)^0,7,c
 12328  002A28                     l8334:
 12329  002A28  90D8               	bcf	status,0,c
 12330  002A2A  3030               	rrcf	___flmul@bexp^0,w,c
 12331  002A2C  6E34               	movwf	(___flmul@prod+3)^0,c
 12332  002A2E                     l8336:
 12333  002A2E  502A               	movf	___flmul@sign^0,w,c
 12334  002A30  1234               	iorwf	(___flmul@prod+3)^0,f,c
 12335  002A32  C031  F01E         	movff	___flmul@prod,?___flmul
 12336  002A36  C032  F01F         	movff	___flmul@prod+1,?___flmul+1
 12337  002A3A  C033  F020         	movff	___flmul@prod+2,?___flmul+2
 12338  002A3E  C034  F021         	movff	___flmul@prod+3,?___flmul+3
 12339  002A42                     l1587:
 12340  002A42  0012               	return		;funcret
 12341  002A44                     __end_of___flmul:
 12342                           	opt callstack 0
 12343                           
 12344 ;; *************** function ___flge *****************
 12345 ;; Defined at:
 12346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;  ff1             4   54[COMRAM] unsigned char 
 12349 ;;  ff2             4   58[COMRAM] unsigned char 
 12350 ;; Auto vars:     Size  Location     Type
 12351 ;;		None
 12352 ;; Return value:  Size  Location     Type
 12353 ;;		None               void
 12354 ;; Registers used:
 12355 ;;		wreg, status,2, status,0
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12363 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12364 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12365 ;;Total ram usage:       12 bytes
 12366 ;; Hardware stack levels used:    1
 12367 ;; Hardware stack levels required when called:    5
 12368 ;; This function calls:
 12369 ;;		Nothing
 12370 ;; This function is called by:
 12371 ;;		_main
 12372 ;;		_efgtoa
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text26
 12377  004FDE                     __ptext26:
 12378                           	opt callstack 0
 12379  004FDE                     ___flge:
 12380                           	opt callstack 20
 12381  004FDE  0E00               	movlw	0
 12382  004FE0  1437               	andwf	___flge@ff1^0,w,c
 12383  004FE2  0100               	movlb	0	; () banked
 12384  004FE4  6F60               	movwf	??___flge& (0+255),b
 12385  004FE6  0E00               	movlw	0
 12386  004FE8  1438               	andwf	(___flge@ff1+1)^0,w,c
 12387  004FEA  6F61               	movwf	(??___flge+1)& (0+255),b
 12388  004FEC  0E80               	movlw	128
 12389  004FEE  1439               	andwf	(___flge@ff1+2)^0,w,c
 12390  004FF0  6F62               	movwf	(??___flge+2)& (0+255),b
 12391  004FF2  0E7F               	movlw	127
 12392  004FF4  143A               	andwf	(___flge@ff1+3)^0,w,c
 12393  004FF6  6F63               	movwf	(??___flge+3)& (0+255),b
 12394  004FF8  5160               	movf	??___flge& (0+255),w,b
 12395  004FFA  1161               	iorwf	(??___flge+1)& (0+255),w,b
 12396  004FFC  1162               	iorwf	(??___flge+2)& (0+255),w,b
 12397  004FFE  1163               	iorwf	(??___flge+3)& (0+255),w,b
 12398  005000  A4D8               	btfss	status,2,c
 12399  005002  EF05  F028         	goto	u10481
 12400  005006  EF07  F028         	goto	u10480
 12401  00500A                     u10481:
 12402  00500A  EF0F  F028         	goto	l8448
 12403  00500E                     u10480:
 12404  00500E                     
 12405                           ; BSR set to: 0
 12406  00500E  0E00               	movlw	0
 12407  005010  6E37               	movwf	___flge@ff1^0,c
 12408  005012  0E00               	movlw	0
 12409  005014  6E38               	movwf	(___flge@ff1+1)^0,c
 12410  005016  0E00               	movlw	0
 12411  005018  6E39               	movwf	(___flge@ff1+2)^0,c
 12412  00501A  0E00               	movlw	0
 12413  00501C  6E3A               	movwf	(___flge@ff1+3)^0,c
 12414  00501E                     l8448:
 12415                           
 12416                           ; BSR set to: 0
 12417  00501E  0E00               	movlw	0
 12418  005020  143B               	andwf	___flge@ff2^0,w,c
 12419  005022  6F60               	movwf	??___flge& (0+255),b
 12420  005024  0E00               	movlw	0
 12421  005026  143C               	andwf	(___flge@ff2+1)^0,w,c
 12422  005028  6F61               	movwf	(??___flge+1)& (0+255),b
 12423  00502A  0E80               	movlw	128
 12424  00502C  143D               	andwf	(___flge@ff2+2)^0,w,c
 12425  00502E  6F62               	movwf	(??___flge+2)& (0+255),b
 12426  005030  0E7F               	movlw	127
 12427  005032  143E               	andwf	(___flge@ff2+3)^0,w,c
 12428  005034  6F63               	movwf	(??___flge+3)& (0+255),b
 12429  005036  5160               	movf	??___flge& (0+255),w,b
 12430  005038  1161               	iorwf	(??___flge+1)& (0+255),w,b
 12431  00503A  1162               	iorwf	(??___flge+2)& (0+255),w,b
 12432  00503C  1163               	iorwf	(??___flge+3)& (0+255),w,b
 12433  00503E  A4D8               	btfss	status,2,c
 12434  005040  EF24  F028         	goto	u10491
 12435  005044  EF26  F028         	goto	u10490
 12436  005048                     u10491:
 12437  005048  EF2E  F028         	goto	l8452
 12438  00504C                     u10490:
 12439  00504C                     
 12440                           ; BSR set to: 0
 12441  00504C  0E00               	movlw	0
 12442  00504E  6E3B               	movwf	___flge@ff2^0,c
 12443  005050  0E00               	movlw	0
 12444  005052  6E3C               	movwf	(___flge@ff2+1)^0,c
 12445  005054  0E00               	movlw	0
 12446  005056  6E3D               	movwf	(___flge@ff2+2)^0,c
 12447  005058  0E00               	movlw	0
 12448  00505A  6E3E               	movwf	(___flge@ff2+3)^0,c
 12449  00505C                     l8452:
 12450                           
 12451                           ; BSR set to: 0
 12452  00505C  AE3A               	btfss	(___flge@ff1+3)^0,7,c
 12453  00505E  EF33  F028         	goto	u10501
 12454  005062  EF35  F028         	goto	u10500
 12455  005066                     u10501:
 12456  005066  EF3E  F028         	goto	l8456
 12457  00506A                     u10500:
 12458  00506A                     
 12459                           ; BSR set to: 0
 12460  00506A  6C37               	negf	___flge@ff1^0,c
 12461  00506C  1E38               	comf	(___flge@ff1+1)^0,f,c
 12462  00506E  B0D8               	btfsc	status,0,c
 12463  005070  2A38               	incf	(___flge@ff1+1)^0,f,c
 12464  005072  1E39               	comf	(___flge@ff1+2)^0,f,c
 12465  005074  B0D8               	btfsc	status,0,c
 12466  005076  2A39               	incf	(___flge@ff1+2)^0,f,c
 12467  005078  0E80               	movlw	128
 12468  00507A  563A               	subfwb	(___flge@ff1+3)^0,f,c
 12469  00507C                     l8456:
 12470                           
 12471                           ; BSR set to: 0
 12472  00507C  AE3E               	btfss	(___flge@ff2+3)^0,7,c
 12473  00507E  EF43  F028         	goto	u10511
 12474  005082  EF45  F028         	goto	u10510
 12475  005086                     u10511:
 12476  005086  EF4E  F028         	goto	l1234
 12477  00508A                     u10510:
 12478  00508A                     
 12479                           ; BSR set to: 0
 12480  00508A  6C3B               	negf	___flge@ff2^0,c
 12481  00508C  1E3C               	comf	(___flge@ff2+1)^0,f,c
 12482  00508E  B0D8               	btfsc	status,0,c
 12483  005090  2A3C               	incf	(___flge@ff2+1)^0,f,c
 12484  005092  1E3D               	comf	(___flge@ff2+2)^0,f,c
 12485  005094  B0D8               	btfsc	status,0,c
 12486  005096  2A3D               	incf	(___flge@ff2+2)^0,f,c
 12487  005098  0E80               	movlw	128
 12488  00509A  563E               	subfwb	(___flge@ff2+3)^0,f,c
 12489  00509C                     l1234:
 12490                           
 12491                           ; BSR set to: 0
 12492  00509C  0E00               	movlw	0
 12493  00509E  1A37               	xorwf	___flge@ff1^0,f,c
 12494  0050A0  0E00               	movlw	0
 12495  0050A2  1A38               	xorwf	(___flge@ff1+1)^0,f,c
 12496  0050A4  0E00               	movlw	0
 12497  0050A6  1A39               	xorwf	(___flge@ff1+2)^0,f,c
 12498  0050A8  0E80               	movlw	128
 12499  0050AA  1A3A               	xorwf	(___flge@ff1+3)^0,f,c
 12500  0050AC  0E00               	movlw	0
 12501  0050AE  1A3B               	xorwf	___flge@ff2^0,f,c
 12502  0050B0  0E00               	movlw	0
 12503  0050B2  1A3C               	xorwf	(___flge@ff2+1)^0,f,c
 12504  0050B4  0E00               	movlw	0
 12505  0050B6  1A3D               	xorwf	(___flge@ff2+2)^0,f,c
 12506  0050B8  0E80               	movlw	128
 12507  0050BA  1A3E               	xorwf	(___flge@ff2+3)^0,f,c
 12508  0050BC  503B               	movf	___flge@ff2^0,w,c
 12509  0050BE  5C37               	subwf	___flge@ff1^0,w,c
 12510  0050C0  503C               	movf	(___flge@ff2+1)^0,w,c
 12511  0050C2  5838               	subwfb	(___flge@ff1+1)^0,w,c
 12512  0050C4  503D               	movf	(___flge@ff2+2)^0,w,c
 12513  0050C6  5839               	subwfb	(___flge@ff1+2)^0,w,c
 12514  0050C8  503E               	movf	(___flge@ff2+3)^0,w,c
 12515  0050CA  583A               	subwfb	(___flge@ff1+3)^0,w,c
 12516  0050CC  B0D8               	btfsc	status,0,c
 12517  0050CE  EF6B  F028         	goto	u10521
 12518  0050D2  EF6D  F028         	goto	u10520
 12519  0050D6                     u10521:
 12520  0050D6  EF70  F028         	goto	l8462
 12521  0050DA                     u10520:
 12522  0050DA                     
 12523                           ; BSR set to: 0
 12524  0050DA  90D8               	bcf	status,0,c
 12525  0050DC  EF71  F028         	goto	l1239
 12526  0050E0                     l8462:
 12527                           
 12528                           ; BSR set to: 0
 12529  0050E0  80D8               	bsf	status,0,c
 12530  0050E2                     l1239:
 12531                           
 12532                           ; BSR set to: 0
 12533  0050E2  0012               	return		;funcret
 12534  0050E4                     __end_of___flge:
 12535                           	opt callstack 0
 12536                           
 12537 ;; *************** function ___fleq *****************
 12538 ;; Defined at:
 12539 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  ff1             4   15[COMRAM] unsigned char 
 12542 ;;  ff2             4   19[COMRAM] unsigned char 
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;		None
 12545 ;; Return value:  Size  Location     Type
 12546 ;;		None               void
 12547 ;; Registers used:
 12548 ;;		wreg, status,2, status,0
 12549 ;; Tracked objects:
 12550 ;;		On entry : 0/0
 12551 ;;		On exit  : 0/0
 12552 ;;		Unchanged: 0/0
 12553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12554 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12557 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12558 ;;Total ram usage:       12 bytes
 12559 ;; Hardware stack levels used:    1
 12560 ;; Hardware stack levels required when called:    5
 12561 ;; This function calls:
 12562 ;;		Nothing
 12563 ;; This function is called by:
 12564 ;;		_efgtoa
 12565 ;; This function uses a non-reentrant model
 12566 ;;
 12567                           
 12568                           	psect	text27
 12569  005856                     __ptext27:
 12570                           	opt callstack 0
 12571  005856                     ___fleq:
 12572                           	opt callstack 20
 12573  005856  0E00               	movlw	0
 12574  005858  1410               	andwf	___fleq@ff1^0,w,c
 12575  00585A  6E18               	movwf	??___fleq^0,c
 12576  00585C  0E00               	movlw	0
 12577  00585E  1411               	andwf	(___fleq@ff1+1)^0,w,c
 12578  005860  6E19               	movwf	(??___fleq+1)^0,c
 12579  005862  0E80               	movlw	128
 12580  005864  1412               	andwf	(___fleq@ff1+2)^0,w,c
 12581  005866  6E1A               	movwf	(??___fleq+2)^0,c
 12582  005868  0E7F               	movlw	127
 12583  00586A  1413               	andwf	(___fleq@ff1+3)^0,w,c
 12584  00586C  6E1B               	movwf	(??___fleq+3)^0,c
 12585  00586E  5018               	movf	??___fleq^0,w,c
 12586  005870  1019               	iorwf	(??___fleq+1)^0,w,c
 12587  005872  101A               	iorwf	(??___fleq+2)^0,w,c
 12588  005874  101B               	iorwf	(??___fleq+3)^0,w,c
 12589  005876  A4D8               	btfss	status,2,c
 12590  005878  EF40  F02C         	goto	u10451
 12591  00587C  EF42  F02C         	goto	u10450
 12592  005880                     u10451:
 12593  005880  EF4A  F02C         	goto	l8432
 12594  005884                     u10450:
 12595  005884  0E00               	movlw	0
 12596  005886  6E10               	movwf	___fleq@ff1^0,c
 12597  005888  0E00               	movlw	0
 12598  00588A  6E11               	movwf	(___fleq@ff1+1)^0,c
 12599  00588C  0E00               	movlw	0
 12600  00588E  6E12               	movwf	(___fleq@ff1+2)^0,c
 12601  005890  0E00               	movlw	0
 12602  005892  6E13               	movwf	(___fleq@ff1+3)^0,c
 12603  005894                     l8432:
 12604  005894  0E00               	movlw	0
 12605  005896  1414               	andwf	___fleq@ff2^0,w,c
 12606  005898  6E18               	movwf	??___fleq^0,c
 12607  00589A  0E00               	movlw	0
 12608  00589C  1415               	andwf	(___fleq@ff2+1)^0,w,c
 12609  00589E  6E19               	movwf	(??___fleq+1)^0,c
 12610  0058A0  0E80               	movlw	128
 12611  0058A2  1416               	andwf	(___fleq@ff2+2)^0,w,c
 12612  0058A4  6E1A               	movwf	(??___fleq+2)^0,c
 12613  0058A6  0E7F               	movlw	127
 12614  0058A8  1417               	andwf	(___fleq@ff2+3)^0,w,c
 12615  0058AA  6E1B               	movwf	(??___fleq+3)^0,c
 12616  0058AC  5018               	movf	??___fleq^0,w,c
 12617  0058AE  1019               	iorwf	(??___fleq+1)^0,w,c
 12618  0058B0  101A               	iorwf	(??___fleq+2)^0,w,c
 12619  0058B2  101B               	iorwf	(??___fleq+3)^0,w,c
 12620  0058B4  A4D8               	btfss	status,2,c
 12621  0058B6  EF5F  F02C         	goto	u10461
 12622  0058BA  EF61  F02C         	goto	u10460
 12623  0058BE                     u10461:
 12624  0058BE  EF69  F02C         	goto	l8436
 12625  0058C2                     u10460:
 12626  0058C2  0E00               	movlw	0
 12627  0058C4  6E14               	movwf	___fleq@ff2^0,c
 12628  0058C6  0E00               	movlw	0
 12629  0058C8  6E15               	movwf	(___fleq@ff2+1)^0,c
 12630  0058CA  0E00               	movlw	0
 12631  0058CC  6E16               	movwf	(___fleq@ff2+2)^0,c
 12632  0058CE  0E00               	movlw	0
 12633  0058D0  6E17               	movwf	(___fleq@ff2+3)^0,c
 12634  0058D2                     l8436:
 12635  0058D2  5014               	movf	___fleq@ff2^0,w,c
 12636  0058D4  1810               	xorwf	___fleq@ff1^0,w,c
 12637  0058D6  E10F               	bnz	u10470
 12638  0058D8  5015               	movf	(___fleq@ff2+1)^0,w,c
 12639  0058DA  1811               	xorwf	(___fleq@ff1+1)^0,w,c
 12640  0058DC  E10C               	bnz	u10470
 12641  0058DE  5016               	movf	(___fleq@ff2+2)^0,w,c
 12642  0058E0  1812               	xorwf	(___fleq@ff1+2)^0,w,c
 12643  0058E2  E109               	bnz	u10470
 12644  0058E4  5017               	movf	(___fleq@ff2+3)^0,w,c
 12645  0058E6  1813               	xorwf	(___fleq@ff1+3)^0,w,c
 12646  0058E8  B4D8               	btfsc	status,2,c
 12647  0058EA  EF79  F02C         	goto	u10471
 12648  0058EE  EF7B  F02C         	goto	u10470
 12649  0058F2                     u10471:
 12650  0058F2  EF7E  F02C         	goto	l8440
 12651  0058F6                     u10470:
 12652  0058F6  90D8               	bcf	status,0,c
 12653  0058F8  EF7F  F02C         	goto	l1228
 12654  0058FC                     l8440:
 12655  0058FC  80D8               	bsf	status,0,c
 12656  0058FE                     l1228:
 12657  0058FE  0012               	return		;funcret
 12658  005900                     __end_of___fleq:
 12659                           	opt callstack 0
 12660                           
 12661 ;; *************** function ___fldiv *****************
 12662 ;; Defined at:
 12663 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12664 ;; Parameters:    Size  Location     Type
 12665 ;;  b               4   15[COMRAM] unsigned char 
 12666 ;;  a               4   19[COMRAM] unsigned char 
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;  grs             4   34[COMRAM] unsigned long 
 12669 ;;  rem             4   27[COMRAM] unsigned long 
 12670 ;;  new_exp         2   32[COMRAM] short 
 12671 ;;  aexp            1   39[COMRAM] unsigned char 
 12672 ;;  bexp            1   38[COMRAM] unsigned char 
 12673 ;;  sign            1   31[COMRAM] unsigned char 
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  4   15[COMRAM] unsigned char 
 12676 ;; Registers used:
 12677 ;;		wreg, status,2, status,0
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12683 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12684 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12686 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12687 ;;Total ram usage:       25 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    5
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_efgtoa
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           	psect	text28
 12698  002A44                     __ptext28:
 12699                           	opt callstack 0
 12700  002A44                     ___fldiv:
 12701                           	opt callstack 20
 12702  002A44  5013               	movf	(___fldiv@b+3)^0,w,c
 12703  002A46  0B80               	andlw	128
 12704  002A48  6E20               	movwf	___fldiv@sign^0,c
 12705  002A4A  5013               	movf	(___fldiv@b+3)^0,w,c
 12706  002A4C  2413               	addwf	(___fldiv@b+3)^0,w,c
 12707  002A4E  6E27               	movwf	___fldiv@bexp^0,c
 12708  002A50  AE12               	btfss	(___fldiv@b+2)^0,7,c
 12709  002A52  EF2D  F015         	goto	u9911
 12710  002A56  EF2F  F015         	goto	u9910
 12711  002A5A                     u9911:
 12712  002A5A  EF30  F015         	goto	l8080
 12713  002A5E                     u9910:
 12714  002A5E  8027               	bsf	___fldiv@bexp^0,0,c
 12715  002A60                     l8080:
 12716  002A60  5027               	movf	___fldiv@bexp^0,w,c
 12717  002A62  B4D8               	btfsc	status,2,c
 12718  002A64  EF36  F015         	goto	u9921
 12719  002A68  EF38  F015         	goto	u9920
 12720  002A6C                     u9921:
 12721  002A6C  EF4D  F015         	goto	l8090
 12722  002A70                     u9920:
 12723  002A70  2827               	incf	___fldiv@bexp^0,w,c
 12724  002A72  A4D8               	btfss	status,2,c
 12725  002A74  EF3E  F015         	goto	u9931
 12726  002A78  EF40  F015         	goto	u9930
 12727  002A7C                     u9931:
 12728  002A7C  EF48  F015         	goto	l8086
 12729  002A80                     u9930:
 12730  002A80  0E00               	movlw	0
 12731  002A82  6E10               	movwf	___fldiv@b^0,c
 12732  002A84  0E00               	movlw	0
 12733  002A86  6E11               	movwf	(___fldiv@b+1)^0,c
 12734  002A88  0E00               	movlw	0
 12735  002A8A  6E12               	movwf	(___fldiv@b+2)^0,c
 12736  002A8C  0E00               	movlw	0
 12737  002A8E  6E13               	movwf	(___fldiv@b+3)^0,c
 12738  002A90                     l8086:
 12739  002A90  8E12               	bsf	(___fldiv@b+2)^0,7,c
 12740  002A92  0E00               	movlw	0
 12741  002A94  6E13               	movwf	(___fldiv@b+3)^0,c
 12742  002A96  EF55  F015         	goto	l8092
 12743  002A9A                     l8090:
 12744  002A9A  0E00               	movlw	0
 12745  002A9C  6E10               	movwf	___fldiv@b^0,c
 12746  002A9E  0E00               	movlw	0
 12747  002AA0  6E11               	movwf	(___fldiv@b+1)^0,c
 12748  002AA2  0E00               	movlw	0
 12749  002AA4  6E12               	movwf	(___fldiv@b+2)^0,c
 12750  002AA6  0E00               	movlw	0
 12751  002AA8  6E13               	movwf	(___fldiv@b+3)^0,c
 12752  002AAA                     l8092:
 12753  002AAA  5017               	movf	(___fldiv@a+3)^0,w,c
 12754  002AAC  0B80               	andlw	128
 12755  002AAE  1A20               	xorwf	___fldiv@sign^0,f,c
 12756  002AB0  5017               	movf	(___fldiv@a+3)^0,w,c
 12757  002AB2  2417               	addwf	(___fldiv@a+3)^0,w,c
 12758  002AB4  6E28               	movwf	___fldiv@aexp^0,c
 12759  002AB6  AE16               	btfss	(___fldiv@a+2)^0,7,c
 12760  002AB8  EF60  F015         	goto	u9941
 12761  002ABC  EF62  F015         	goto	u9940
 12762  002AC0                     u9941:
 12763  002AC0  EF63  F015         	goto	l8100
 12764  002AC4                     u9940:
 12765  002AC4  8028               	bsf	___fldiv@aexp^0,0,c
 12766  002AC6                     l8100:
 12767  002AC6  5028               	movf	___fldiv@aexp^0,w,c
 12768  002AC8  B4D8               	btfsc	status,2,c
 12769  002ACA  EF69  F015         	goto	u9951
 12770  002ACE  EF6B  F015         	goto	u9950
 12771  002AD2                     u9951:
 12772  002AD2  EF80  F015         	goto	l8110
 12773  002AD6                     u9950:
 12774  002AD6  2828               	incf	___fldiv@aexp^0,w,c
 12775  002AD8  A4D8               	btfss	status,2,c
 12776  002ADA  EF71  F015         	goto	u9961
 12777  002ADE  EF73  F015         	goto	u9960
 12778  002AE2                     u9961:
 12779  002AE2  EF7B  F015         	goto	l8106
 12780  002AE6                     u9960:
 12781  002AE6  0E00               	movlw	0
 12782  002AE8  6E14               	movwf	___fldiv@a^0,c
 12783  002AEA  0E00               	movlw	0
 12784  002AEC  6E15               	movwf	(___fldiv@a+1)^0,c
 12785  002AEE  0E00               	movlw	0
 12786  002AF0  6E16               	movwf	(___fldiv@a+2)^0,c
 12787  002AF2  0E00               	movlw	0
 12788  002AF4  6E17               	movwf	(___fldiv@a+3)^0,c
 12789  002AF6                     l8106:
 12790  002AF6  8E16               	bsf	(___fldiv@a+2)^0,7,c
 12791  002AF8  0E00               	movlw	0
 12792  002AFA  6E17               	movwf	(___fldiv@a+3)^0,c
 12793  002AFC  EF88  F015         	goto	l8112
 12794  002B00                     l8110:
 12795  002B00  0E00               	movlw	0
 12796  002B02  6E14               	movwf	___fldiv@a^0,c
 12797  002B04  0E00               	movlw	0
 12798  002B06  6E15               	movwf	(___fldiv@a+1)^0,c
 12799  002B08  0E00               	movlw	0
 12800  002B0A  6E16               	movwf	(___fldiv@a+2)^0,c
 12801  002B0C  0E00               	movlw	0
 12802  002B0E  6E17               	movwf	(___fldiv@a+3)^0,c
 12803  002B10                     l8112:
 12804  002B10  5014               	movf	___fldiv@a^0,w,c
 12805  002B12  1015               	iorwf	(___fldiv@a+1)^0,w,c
 12806  002B14  1016               	iorwf	(___fldiv@a+2)^0,w,c
 12807  002B16  1017               	iorwf	(___fldiv@a+3)^0,w,c
 12808  002B18  A4D8               	btfss	status,2,c
 12809  002B1A  EF91  F015         	goto	u9971
 12810  002B1E  EF93  F015         	goto	u9970
 12811  002B22                     u9971:
 12812  002B22  EFAB  F015         	goto	l8124
 12813  002B26                     u9970:
 12814  002B26  0E00               	movlw	0
 12815  002B28  6E10               	movwf	___fldiv@b^0,c
 12816  002B2A  0E00               	movlw	0
 12817  002B2C  6E11               	movwf	(___fldiv@b+1)^0,c
 12818  002B2E  0E00               	movlw	0
 12819  002B30  6E12               	movwf	(___fldiv@b+2)^0,c
 12820  002B32  0E00               	movlw	0
 12821  002B34  6E13               	movwf	(___fldiv@b+3)^0,c
 12822  002B36  0E80               	movlw	128
 12823  002B38  1212               	iorwf	(___fldiv@b+2)^0,f,c
 12824  002B3A  0E7F               	movlw	127
 12825  002B3C  1213               	iorwf	(___fldiv@b+3)^0,f,c
 12826  002B3E                     l8118:
 12827  002B3E  5020               	movf	___fldiv@sign^0,w,c
 12828  002B40  1213               	iorwf	(___fldiv@b+3)^0,f,c
 12829  002B42  C010  F010         	movff	___fldiv@b,?___fldiv
 12830  002B46  C011  F011         	movff	___fldiv@b+1,?___fldiv+1
 12831  002B4A  C012  F012         	movff	___fldiv@b+2,?___fldiv+2
 12832  002B4E  C013  F013         	movff	___fldiv@b+3,?___fldiv+3
 12833  002B52  EFEE  F016         	goto	l1551
 12834  002B56                     l8124:
 12835  002B56  5027               	movf	___fldiv@bexp^0,w,c
 12836  002B58  A4D8               	btfss	status,2,c
 12837  002B5A  EFB1  F015         	goto	u9981
 12838  002B5E  EFB3  F015         	goto	u9980
 12839  002B62                     u9981:
 12840  002B62  EFBD  F015         	goto	l8132
 12841  002B66                     u9980:
 12842  002B66  0E00               	movlw	0
 12843  002B68  6E10               	movwf	?___fldiv^0,c
 12844  002B6A  0E00               	movlw	0
 12845  002B6C  6E11               	movwf	(?___fldiv+1)^0,c
 12846  002B6E  0E00               	movlw	0
 12847  002B70  6E12               	movwf	(?___fldiv+2)^0,c
 12848  002B72  0E00               	movlw	0
 12849  002B74  6E13               	movwf	(?___fldiv+3)^0,c
 12850  002B76  EFEE  F016         	goto	l1551
 12851  002B7A                     l8132:
 12852  002B7A  5028               	movf	___fldiv@aexp^0,w,c
 12853  002B7C  C027  F018         	movff	___fldiv@bexp,??___fldiv
 12854  002B80  6A19               	clrf	(??___fldiv+1)^0,c
 12855  002B82  5E18               	subwf	??___fldiv^0,f,c
 12856  002B84  0E00               	movlw	0
 12857  002B86  5A19               	subwfb	(??___fldiv+1)^0,f,c
 12858  002B88  0E7F               	movlw	127
 12859  002B8A  2418               	addwf	??___fldiv^0,w,c
 12860  002B8C  6E21               	movwf	___fldiv@new_exp^0,c
 12861  002B8E  0E00               	movlw	0
 12862  002B90  2019               	addwfc	(??___fldiv+1)^0,w,c
 12863  002B92  6E22               	movwf	(___fldiv@new_exp+1)^0,c
 12864  002B94  C010  F01C         	movff	___fldiv@b,___fldiv@rem
 12865  002B98  C011  F01D         	movff	___fldiv@b+1,___fldiv@rem+1
 12866  002B9C  C012  F01E         	movff	___fldiv@b+2,___fldiv@rem+2
 12867  002BA0  C013  F01F         	movff	___fldiv@b+3,___fldiv@rem+3
 12868  002BA4  0E00               	movlw	0
 12869  002BA6  6E10               	movwf	___fldiv@b^0,c
 12870  002BA8  0E00               	movlw	0
 12871  002BAA  6E11               	movwf	(___fldiv@b+1)^0,c
 12872  002BAC  0E00               	movlw	0
 12873  002BAE  6E12               	movwf	(___fldiv@b+2)^0,c
 12874  002BB0  0E00               	movlw	0
 12875  002BB2  6E13               	movwf	(___fldiv@b+3)^0,c
 12876  002BB4  0E00               	movlw	0
 12877  002BB6  6E23               	movwf	___fldiv@grs^0,c
 12878  002BB8  0E00               	movlw	0
 12879  002BBA  6E24               	movwf	(___fldiv@grs+1)^0,c
 12880  002BBC  0E00               	movlw	0
 12881  002BBE  6E25               	movwf	(___fldiv@grs+2)^0,c
 12882  002BC0  0E00               	movlw	0
 12883  002BC2  6E26               	movwf	(___fldiv@grs+3)^0,c
 12884  002BC4  0E00               	movlw	0
 12885  002BC6  6E28               	movwf	___fldiv@aexp^0,c
 12886  002BC8  EF1E  F016         	goto	l1553
 12887  002BCC                     l8142:
 12888  002BCC  5028               	movf	___fldiv@aexp^0,w,c
 12889  002BCE  B4D8               	btfsc	status,2,c
 12890  002BD0  EFEC  F015         	goto	u9991
 12891  002BD4  EFEE  F015         	goto	u9990
 12892  002BD8                     u9991:
 12893  002BD8  EF05  F016         	goto	l8150
 12894  002BDC                     u9990:
 12895  002BDC  90D8               	bcf	status,0,c
 12896  002BDE  361C               	rlcf	___fldiv@rem^0,f,c
 12897  002BE0  361D               	rlcf	(___fldiv@rem+1)^0,f,c
 12898  002BE2  361E               	rlcf	(___fldiv@rem+2)^0,f,c
 12899  002BE4  361F               	rlcf	(___fldiv@rem+3)^0,f,c
 12900  002BE6  90D8               	bcf	status,0,c
 12901  002BE8  3610               	rlcf	___fldiv@b^0,f,c
 12902  002BEA  3611               	rlcf	(___fldiv@b+1)^0,f,c
 12903  002BEC  3612               	rlcf	(___fldiv@b+2)^0,f,c
 12904  002BEE  3613               	rlcf	(___fldiv@b+3)^0,f,c
 12905  002BF0  AE26               	btfss	(___fldiv@grs+3)^0,7,c
 12906  002BF2  EFFD  F015         	goto	u10001
 12907  002BF6  EFFF  F015         	goto	u10000
 12908  002BFA                     u10001:
 12909  002BFA  EF00  F016         	goto	l1556
 12910  002BFE                     u10000:
 12911  002BFE  8010               	bsf	___fldiv@b^0,0,c
 12912  002C00                     l1556:
 12913  002C00  90D8               	bcf	status,0,c
 12914  002C02  3623               	rlcf	___fldiv@grs^0,f,c
 12915  002C04  3624               	rlcf	(___fldiv@grs+1)^0,f,c
 12916  002C06  3625               	rlcf	(___fldiv@grs+2)^0,f,c
 12917  002C08  3626               	rlcf	(___fldiv@grs+3)^0,f,c
 12918  002C0A                     l8150:
 12919  002C0A  5014               	movf	___fldiv@a^0,w,c
 12920  002C0C  5C1C               	subwf	___fldiv@rem^0,w,c
 12921  002C0E  5015               	movf	(___fldiv@a+1)^0,w,c
 12922  002C10  581D               	subwfb	(___fldiv@rem+1)^0,w,c
 12923  002C12  5016               	movf	(___fldiv@a+2)^0,w,c
 12924  002C14  581E               	subwfb	(___fldiv@rem+2)^0,w,c
 12925  002C16  5017               	movf	(___fldiv@a+3)^0,w,c
 12926  002C18  581F               	subwfb	(___fldiv@rem+3)^0,w,c
 12927  002C1A  A0D8               	btfss	status,0,c
 12928  002C1C  EF12  F016         	goto	u10011
 12929  002C20  EF14  F016         	goto	u10010
 12930  002C24                     u10011:
 12931  002C24  EF1D  F016         	goto	l8156
 12932  002C28                     u10010:
 12933  002C28  8C26               	bsf	(___fldiv@grs+3)^0,6,c
 12934  002C2A  5014               	movf	___fldiv@a^0,w,c
 12935  002C2C  5E1C               	subwf	___fldiv@rem^0,f,c
 12936  002C2E  5015               	movf	(___fldiv@a+1)^0,w,c
 12937  002C30  5A1D               	subwfb	(___fldiv@rem+1)^0,f,c
 12938  002C32  5016               	movf	(___fldiv@a+2)^0,w,c
 12939  002C34  5A1E               	subwfb	(___fldiv@rem+2)^0,f,c
 12940  002C36  5017               	movf	(___fldiv@a+3)^0,w,c
 12941  002C38  5A1F               	subwfb	(___fldiv@rem+3)^0,f,c
 12942  002C3A                     l8156:
 12943  002C3A  2A28               	incf	___fldiv@aexp^0,f,c
 12944  002C3C                     l1553:
 12945  002C3C  0E19               	movlw	25
 12946  002C3E  6428               	cpfsgt	___fldiv@aexp^0,c
 12947  002C40  EF24  F016         	goto	u10021
 12948  002C44  EF26  F016         	goto	u10020
 12949  002C48                     u10021:
 12950  002C48  EFE6  F015         	goto	l8142
 12951  002C4C                     u10020:
 12952  002C4C  501C               	movf	___fldiv@rem^0,w,c
 12953  002C4E  101D               	iorwf	(___fldiv@rem+1)^0,w,c
 12954  002C50  101E               	iorwf	(___fldiv@rem+2)^0,w,c
 12955  002C52  101F               	iorwf	(___fldiv@rem+3)^0,w,c
 12956  002C54  B4D8               	btfsc	status,2,c
 12957  002C56  EF2F  F016         	goto	u10031
 12958  002C5A  EF31  F016         	goto	u10030
 12959  002C5E                     u10031:
 12960  002C5E  EF49  F016         	goto	l8168
 12961  002C62                     u10030:
 12962  002C62  8023               	bsf	___fldiv@grs^0,0,c
 12963  002C64  EF49  F016         	goto	l8168
 12964  002C68                     l8162:
 12965  002C68  90D8               	bcf	status,0,c
 12966  002C6A  3610               	rlcf	___fldiv@b^0,f,c
 12967  002C6C  3611               	rlcf	(___fldiv@b+1)^0,f,c
 12968  002C6E  3612               	rlcf	(___fldiv@b+2)^0,f,c
 12969  002C70  3613               	rlcf	(___fldiv@b+3)^0,f,c
 12970  002C72  AE26               	btfss	(___fldiv@grs+3)^0,7,c
 12971  002C74  EF3E  F016         	goto	u10041
 12972  002C78  EF40  F016         	goto	u10040
 12973  002C7C                     u10041:
 12974  002C7C  EF41  F016         	goto	l1562
 12975  002C80                     u10040:
 12976  002C80  8010               	bsf	___fldiv@b^0,0,c
 12977  002C82                     l1562:
 12978  002C82  90D8               	bcf	status,0,c
 12979  002C84  3623               	rlcf	___fldiv@grs^0,f,c
 12980  002C86  3624               	rlcf	(___fldiv@grs+1)^0,f,c
 12981  002C88  3625               	rlcf	(___fldiv@grs+2)^0,f,c
 12982  002C8A  3626               	rlcf	(___fldiv@grs+3)^0,f,c
 12983  002C8C  0621               	decf	___fldiv@new_exp^0,f,c
 12984  002C8E  A0D8               	btfss	status,0,c
 12985  002C90  0622               	decf	(___fldiv@new_exp+1)^0,f,c
 12986  002C92                     l8168:
 12987  002C92  AE12               	btfss	(___fldiv@b+2)^0,7,c
 12988  002C94  EF4E  F016         	goto	u10051
 12989  002C98  EF50  F016         	goto	u10050
 12990  002C9C                     u10051:
 12991  002C9C  EF34  F016         	goto	l8162
 12992  002CA0                     u10050:
 12993  002CA0  0E00               	movlw	0
 12994  002CA2  6E28               	movwf	___fldiv@aexp^0,c
 12995  002CA4  AE26               	btfss	(___fldiv@grs+3)^0,7,c
 12996  002CA6  EF57  F016         	goto	u10061
 12997  002CAA  EF59  F016         	goto	u10060
 12998  002CAE                     u10061:
 12999  002CAE  EF7D  F016         	goto	l1564
 13000  002CB2                     u10060:
 13001  002CB2  0EFF               	movlw	255
 13002  002CB4  1423               	andwf	___fldiv@grs^0,w,c
 13003  002CB6  6E18               	movwf	??___fldiv^0,c
 13004  002CB8  0EFF               	movlw	255
 13005  002CBA  1424               	andwf	(___fldiv@grs+1)^0,w,c
 13006  002CBC  6E19               	movwf	(??___fldiv+1)^0,c
 13007  002CBE  0EFF               	movlw	255
 13008  002CC0  1425               	andwf	(___fldiv@grs+2)^0,w,c
 13009  002CC2  6E1A               	movwf	(??___fldiv+2)^0,c
 13010  002CC4  0E7F               	movlw	127
 13011  002CC6  1426               	andwf	(___fldiv@grs+3)^0,w,c
 13012  002CC8  6E1B               	movwf	(??___fldiv+3)^0,c
 13013  002CCA  5018               	movf	??___fldiv^0,w,c
 13014  002CCC  1019               	iorwf	(??___fldiv+1)^0,w,c
 13015  002CCE  101A               	iorwf	(??___fldiv+2)^0,w,c
 13016  002CD0  101B               	iorwf	(??___fldiv+3)^0,w,c
 13017  002CD2  B4D8               	btfsc	status,2,c
 13018  002CD4  EF6E  F016         	goto	u10071
 13019  002CD8  EF70  F016         	goto	u10070
 13020  002CDC                     u10071:
 13021  002CDC  EF74  F016         	goto	l1565
 13022  002CE0                     u10070:
 13023  002CE0                     l8176:
 13024  002CE0  0E01               	movlw	1
 13025  002CE2  6E28               	movwf	___fldiv@aexp^0,c
 13026  002CE4  EF7D  F016         	goto	l1564
 13027  002CE8                     l1565:
 13028  002CE8  A010               	btfss	___fldiv@b^0,0,c
 13029  002CEA  EF79  F016         	goto	u10081
 13030  002CEE  EF7B  F016         	goto	u10080
 13031  002CF2                     u10081:
 13032  002CF2  EF7D  F016         	goto	l1564
 13033  002CF6                     u10080:
 13034  002CF6  EF70  F016         	goto	l8176
 13035  002CFA                     l1564:
 13036  002CFA  5028               	movf	___fldiv@aexp^0,w,c
 13037  002CFC  B4D8               	btfsc	status,2,c
 13038  002CFE  EF83  F016         	goto	u10091
 13039  002D02  EF85  F016         	goto	u10090
 13040  002D06                     u10091:
 13041  002D06  EFA9  F016         	goto	l8188
 13042  002D0A                     u10090:
 13043  002D0A  0E01               	movlw	1
 13044  002D0C  2610               	addwf	___fldiv@b^0,f,c
 13045  002D0E  0E00               	movlw	0
 13046  002D10  2211               	addwfc	(___fldiv@b+1)^0,f,c
 13047  002D12  2212               	addwfc	(___fldiv@b+2)^0,f,c
 13048  002D14  2213               	addwfc	(___fldiv@b+3)^0,f,c
 13049  002D16  A013               	btfss	(___fldiv@b+3)^0,0,c
 13050  002D18  EF90  F016         	goto	u10101
 13051  002D1C  EF92  F016         	goto	u10100
 13052  002D20                     u10101:
 13053  002D20  EFA9  F016         	goto	l8188
 13054  002D24                     u10100:
 13055  002D24  C010  F018         	movff	___fldiv@b,??___fldiv
 13056  002D28  C011  F019         	movff	___fldiv@b+1,??___fldiv+1
 13057  002D2C  C012  F01A         	movff	___fldiv@b+2,??___fldiv+2
 13058  002D30  C013  F01B         	movff	___fldiv@b+3,??___fldiv+3
 13059  002D34  341B               	rlcf	(??___fldiv+3)^0,w,c
 13060  002D36  321B               	rrcf	(??___fldiv+3)^0,f,c
 13061  002D38  321A               	rrcf	(??___fldiv+2)^0,f,c
 13062  002D3A  3219               	rrcf	(??___fldiv+1)^0,f,c
 13063  002D3C  3218               	rrcf	??___fldiv^0,f,c
 13064  002D3E  C018  F010         	movff	??___fldiv,___fldiv@b
 13065  002D42  C019  F011         	movff	??___fldiv+1,___fldiv@b+1
 13066  002D46  C01A  F012         	movff	??___fldiv+2,___fldiv@b+2
 13067  002D4A  C01B  F013         	movff	??___fldiv+3,___fldiv@b+3
 13068  002D4E  4A21               	infsnz	___fldiv@new_exp^0,f,c
 13069  002D50  2A22               	incf	(___fldiv@new_exp+1)^0,f,c
 13070  002D52                     l8188:
 13071  002D52  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13072  002D54  EFB4  F016         	goto	u10111
 13073  002D58  5022               	movf	(___fldiv@new_exp+1)^0,w,c
 13074  002D5A  E108               	bnz	u10110
 13075  002D5C  2821               	incf	___fldiv@new_exp^0,w,c
 13076  002D5E  A0D8               	btfss	status,0,c
 13077  002D60  EFB4  F016         	goto	u10111
 13078  002D64  EFB6  F016         	goto	u10110
 13079  002D68                     u10111:
 13080  002D68  EFC1  F016         	goto	l8192
 13081  002D6C                     u10110:
 13082  002D6C  0E00               	movlw	0
 13083  002D6E  6E22               	movwf	(___fldiv@new_exp+1)^0,c
 13084  002D70  6821               	setf	___fldiv@new_exp^0,c
 13085  002D72  0E00               	movlw	0
 13086  002D74  6E10               	movwf	___fldiv@b^0,c
 13087  002D76  0E00               	movlw	0
 13088  002D78  6E11               	movwf	(___fldiv@b+1)^0,c
 13089  002D7A  0E00               	movlw	0
 13090  002D7C  6E12               	movwf	(___fldiv@b+2)^0,c
 13091  002D7E  0E00               	movlw	0
 13092  002D80  6E13               	movwf	(___fldiv@b+3)^0,c
 13093  002D82                     l8192:
 13094  002D82  BE22               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13095  002D84  EFCE  F016         	goto	u10120
 13096  002D88  5022               	movf	(___fldiv@new_exp+1)^0,w,c
 13097  002D8A  E106               	bnz	u10121
 13098  002D8C  0421               	decf	___fldiv@new_exp^0,w,c
 13099  002D8E  B0D8               	btfsc	status,0,c
 13100  002D90  EFCC  F016         	goto	u10121
 13101  002D94  EFCE  F016         	goto	u10120
 13102  002D98                     u10121:
 13103  002D98  EFDC  F016         	goto	l8196
 13104  002D9C                     u10120:
 13105  002D9C  0E00               	movlw	0
 13106  002D9E  6E22               	movwf	(___fldiv@new_exp+1)^0,c
 13107  002DA0  0E00               	movlw	0
 13108  002DA2  6E21               	movwf	___fldiv@new_exp^0,c
 13109  002DA4  0E00               	movlw	0
 13110  002DA6  6E10               	movwf	___fldiv@b^0,c
 13111  002DA8  0E00               	movlw	0
 13112  002DAA  6E11               	movwf	(___fldiv@b+1)^0,c
 13113  002DAC  0E00               	movlw	0
 13114  002DAE  6E12               	movwf	(___fldiv@b+2)^0,c
 13115  002DB0  0E00               	movlw	0
 13116  002DB2  6E13               	movwf	(___fldiv@b+3)^0,c
 13117  002DB4  0E00               	movlw	0
 13118  002DB6  6E20               	movwf	___fldiv@sign^0,c
 13119  002DB8                     l8196:
 13120  002DB8  C021  F027         	movff	___fldiv@new_exp,___fldiv@bexp
 13121  002DBC  A027               	btfss	___fldiv@bexp^0,0,c
 13122  002DBE  EFE3  F016         	goto	u10131
 13123  002DC2  EFE5  F016         	goto	u10130
 13124  002DC6                     u10131:
 13125  002DC6  EFE8  F016         	goto	l8202
 13126  002DCA                     u10130:
 13127  002DCA  8E12               	bsf	(___fldiv@b+2)^0,7,c
 13128  002DCC  EFE9  F016         	goto	l8204
 13129  002DD0                     l8202:
 13130  002DD0  9E12               	bcf	(___fldiv@b+2)^0,7,c
 13131  002DD2                     l8204:
 13132  002DD2  90D8               	bcf	status,0,c
 13133  002DD4  3027               	rrcf	___fldiv@bexp^0,w,c
 13134  002DD6  6E13               	movwf	(___fldiv@b+3)^0,c
 13135  002DD8  EF9F  F015         	goto	l8118
 13136  002DDC                     l1551:
 13137  002DDC  0012               	return		;funcret
 13138  002DDE                     __end_of___fldiv:
 13139                           	opt callstack 0
 13140                           
 13141 ;; *************** function ___awmod *****************
 13142 ;; Defined at:
 13143 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;  dividend        2   15[COMRAM] int 
 13146 ;;  divisor         2   17[COMRAM] int 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  sign            1   20[COMRAM] unsigned char 
 13149 ;;  counter         1   19[COMRAM] unsigned char 
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  2   15[COMRAM] int 
 13152 ;; Registers used:
 13153 ;;		wreg, status,2, status,0
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13162 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13163 ;;Total ram usage:        6 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:    5
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		_efgtoa
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text29
 13174  0056F6                     __ptext29:
 13175                           	opt callstack 0
 13176  0056F6                     ___awmod:
 13177                           	opt callstack 20
 13178  0056F6  0E00               	movlw	0
 13179  0056F8  6E15               	movwf	___awmod@sign^0,c
 13180  0056FA  BE11               	btfsc	(___awmod@dividend+1)^0,7,c
 13181  0056FC  EF84  F02B         	goto	u10390
 13182  005700  EF82  F02B         	goto	u10391
 13183  005704                     u10391:
 13184  005704  EF8A  F02B         	goto	l8400
 13185  005708                     u10390:
 13186  005708  6C10               	negf	___awmod@dividend^0,c
 13187  00570A  1E11               	comf	(___awmod@dividend+1)^0,f,c
 13188  00570C  B0D8               	btfsc	status,0,c
 13189  00570E  2A11               	incf	(___awmod@dividend+1)^0,f,c
 13190  005710  0E01               	movlw	1
 13191  005712  6E15               	movwf	___awmod@sign^0,c
 13192  005714                     l8400:
 13193  005714  BE13               	btfsc	(___awmod@divisor+1)^0,7,c
 13194  005716  EF91  F02B         	goto	u10400
 13195  00571A  EF8F  F02B         	goto	u10401
 13196  00571E                     u10401:
 13197  00571E  EF95  F02B         	goto	l8404
 13198  005722                     u10400:
 13199  005722  6C12               	negf	___awmod@divisor^0,c
 13200  005724  1E13               	comf	(___awmod@divisor+1)^0,f,c
 13201  005726  B0D8               	btfsc	status,0,c
 13202  005728  2A13               	incf	(___awmod@divisor+1)^0,f,c
 13203  00572A                     l8404:
 13204  00572A  5012               	movf	___awmod@divisor^0,w,c
 13205  00572C  1013               	iorwf	(___awmod@divisor+1)^0,w,c
 13206  00572E  B4D8               	btfsc	status,2,c
 13207  005730  EF9C  F02B         	goto	u10411
 13208  005734  EF9E  F02B         	goto	u10410
 13209  005738                     u10411:
 13210  005738  EFC2  F02B         	goto	l8420
 13211  00573C                     u10410:
 13212  00573C  0E01               	movlw	1
 13213  00573E  6E14               	movwf	___awmod@counter^0,c
 13214  005740  EFA6  F02B         	goto	l8410
 13215  005744                     l8408:
 13216  005744  90D8               	bcf	status,0,c
 13217  005746  3612               	rlcf	___awmod@divisor^0,f,c
 13218  005748  3613               	rlcf	(___awmod@divisor+1)^0,f,c
 13219  00574A  2A14               	incf	___awmod@counter^0,f,c
 13220  00574C                     l8410:
 13221  00574C  AE13               	btfss	(___awmod@divisor+1)^0,7,c
 13222  00574E  EFAB  F02B         	goto	u10421
 13223  005752  EFAD  F02B         	goto	u10420
 13224  005756                     u10421:
 13225  005756  EFA2  F02B         	goto	l8408
 13226  00575A                     u10420:
 13227  00575A                     l8412:
 13228  00575A  5012               	movf	___awmod@divisor^0,w,c
 13229  00575C  5C10               	subwf	___awmod@dividend^0,w,c
 13230  00575E  5013               	movf	(___awmod@divisor+1)^0,w,c
 13231  005760  5811               	subwfb	(___awmod@dividend+1)^0,w,c
 13232  005762  A0D8               	btfss	status,0,c
 13233  005764  EFB6  F02B         	goto	u10431
 13234  005768  EFB8  F02B         	goto	u10430
 13235  00576C                     u10431:
 13236  00576C  EFBC  F02B         	goto	l8416
 13237  005770                     u10430:
 13238  005770  5012               	movf	___awmod@divisor^0,w,c
 13239  005772  5E10               	subwf	___awmod@dividend^0,f,c
 13240  005774  5013               	movf	(___awmod@divisor+1)^0,w,c
 13241  005776  5A11               	subwfb	(___awmod@dividend+1)^0,f,c
 13242  005778                     l8416:
 13243  005778  90D8               	bcf	status,0,c
 13244  00577A  3213               	rrcf	(___awmod@divisor+1)^0,f,c
 13245  00577C  3212               	rrcf	___awmod@divisor^0,f,c
 13246  00577E  2E14               	decfsz	___awmod@counter^0,f,c
 13247  005780  EFAD  F02B         	goto	l8412
 13248  005784                     l8420:
 13249  005784  5015               	movf	___awmod@sign^0,w,c
 13250  005786  B4D8               	btfsc	status,2,c
 13251  005788  EFC8  F02B         	goto	u10441
 13252  00578C  EFCA  F02B         	goto	u10440
 13253  005790                     u10441:
 13254  005790  EFCE  F02B         	goto	l8424
 13255  005794                     u10440:
 13256  005794  6C10               	negf	___awmod@dividend^0,c
 13257  005796  1E11               	comf	(___awmod@dividend+1)^0,f,c
 13258  005798  B0D8               	btfsc	status,0,c
 13259  00579A  2A11               	incf	(___awmod@dividend+1)^0,f,c
 13260  00579C                     l8424:
 13261  00579C  C010  F010         	movff	___awmod@dividend,?___awmod
 13262  0057A0  C011  F011         	movff	___awmod@dividend+1,?___awmod+1
 13263  0057A4  0012               	return		;funcret
 13264  0057A6                     __end_of___awmod:
 13265                           	opt callstack 0
 13266                           
 13267 ;; *************** function ___awdiv *****************
 13268 ;; Defined at:
 13269 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;  dividend        2   15[COMRAM] int 
 13272 ;;  divisor         2   17[COMRAM] int 
 13273 ;; Auto vars:     Size  Location     Type
 13274 ;;  quotient        2   21[COMRAM] int 
 13275 ;;  sign            1   20[COMRAM] unsigned char 
 13276 ;;  counter         1   19[COMRAM] unsigned char 
 13277 ;; Return value:  Size  Location     Type
 13278 ;;                  2   15[COMRAM] int 
 13279 ;; Registers used:
 13280 ;;		wreg, status,2, status,0
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13289 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13290 ;;Total ram usage:        8 bytes
 13291 ;; Hardware stack levels used:    1
 13292 ;; Hardware stack levels required when called:    5
 13293 ;; This function calls:
 13294 ;;		Nothing
 13295 ;; This function is called by:
 13296 ;;		_efgtoa
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           
 13300                           	psect	text30
 13301  005570                     __ptext30:
 13302                           	opt callstack 0
 13303  005570                     ___awdiv:
 13304                           	opt callstack 20
 13305  005570  0E00               	movlw	0
 13306  005572  6E15               	movwf	___awdiv@sign^0,c
 13307  005574  BE13               	btfsc	(___awdiv@divisor+1)^0,7,c
 13308  005576  EFC1  F02A         	goto	u10330
 13309  00557A  EFBF  F02A         	goto	u10331
 13310  00557E                     u10331:
 13311  00557E  EFC7  F02A         	goto	l8356
 13312  005582                     u10330:
 13313  005582  6C12               	negf	___awdiv@divisor^0,c
 13314  005584  1E13               	comf	(___awdiv@divisor+1)^0,f,c
 13315  005586  B0D8               	btfsc	status,0,c
 13316  005588  2A13               	incf	(___awdiv@divisor+1)^0,f,c
 13317  00558A  0E01               	movlw	1
 13318  00558C  6E15               	movwf	___awdiv@sign^0,c
 13319  00558E                     l8356:
 13320  00558E  BE11               	btfsc	(___awdiv@dividend+1)^0,7,c
 13321  005590  EFCE  F02A         	goto	u10340
 13322  005594  EFCC  F02A         	goto	u10341
 13323  005598                     u10341:
 13324  005598  EFD4  F02A         	goto	l8362
 13325  00559C                     u10340:
 13326  00559C  6C10               	negf	___awdiv@dividend^0,c
 13327  00559E  1E11               	comf	(___awdiv@dividend+1)^0,f,c
 13328  0055A0  B0D8               	btfsc	status,0,c
 13329  0055A2  2A11               	incf	(___awdiv@dividend+1)^0,f,c
 13330  0055A4  0E01               	movlw	1
 13331  0055A6  1A15               	xorwf	___awdiv@sign^0,f,c
 13332  0055A8                     l8362:
 13333  0055A8  0E00               	movlw	0
 13334  0055AA  6E17               	movwf	(___awdiv@quotient+1)^0,c
 13335  0055AC  0E00               	movlw	0
 13336  0055AE  6E16               	movwf	___awdiv@quotient^0,c
 13337  0055B0  5012               	movf	___awdiv@divisor^0,w,c
 13338  0055B2  1013               	iorwf	(___awdiv@divisor+1)^0,w,c
 13339  0055B4  B4D8               	btfsc	status,2,c
 13340  0055B6  EFDF  F02A         	goto	u10351
 13341  0055BA  EFE1  F02A         	goto	u10350
 13342  0055BE                     u10351:
 13343  0055BE  EF09  F02B         	goto	l8384
 13344  0055C2                     u10350:
 13345  0055C2  0E01               	movlw	1
 13346  0055C4  6E14               	movwf	___awdiv@counter^0,c
 13347  0055C6  EFE9  F02A         	goto	l8370
 13348  0055CA                     l8368:
 13349  0055CA  90D8               	bcf	status,0,c
 13350  0055CC  3612               	rlcf	___awdiv@divisor^0,f,c
 13351  0055CE  3613               	rlcf	(___awdiv@divisor+1)^0,f,c
 13352  0055D0  2A14               	incf	___awdiv@counter^0,f,c
 13353  0055D2                     l8370:
 13354  0055D2  AE13               	btfss	(___awdiv@divisor+1)^0,7,c
 13355  0055D4  EFEE  F02A         	goto	u10361
 13356  0055D8  EFF0  F02A         	goto	u10360
 13357  0055DC                     u10361:
 13358  0055DC  EFE5  F02A         	goto	l8368
 13359  0055E0                     u10360:
 13360  0055E0                     l8372:
 13361  0055E0  90D8               	bcf	status,0,c
 13362  0055E2  3616               	rlcf	___awdiv@quotient^0,f,c
 13363  0055E4  3617               	rlcf	(___awdiv@quotient+1)^0,f,c
 13364  0055E6  5012               	movf	___awdiv@divisor^0,w,c
 13365  0055E8  5C10               	subwf	___awdiv@dividend^0,w,c
 13366  0055EA  5013               	movf	(___awdiv@divisor+1)^0,w,c
 13367  0055EC  5811               	subwfb	(___awdiv@dividend+1)^0,w,c
 13368  0055EE  A0D8               	btfss	status,0,c
 13369  0055F0  EFFC  F02A         	goto	u10371
 13370  0055F4  EFFE  F02A         	goto	u10370
 13371  0055F8                     u10371:
 13372  0055F8  EF03  F02B         	goto	l8380
 13373  0055FC                     u10370:
 13374  0055FC  5012               	movf	___awdiv@divisor^0,w,c
 13375  0055FE  5E10               	subwf	___awdiv@dividend^0,f,c
 13376  005600  5013               	movf	(___awdiv@divisor+1)^0,w,c
 13377  005602  5A11               	subwfb	(___awdiv@dividend+1)^0,f,c
 13378  005604  8016               	bsf	___awdiv@quotient^0,0,c
 13379  005606                     l8380:
 13380  005606  90D8               	bcf	status,0,c
 13381  005608  3213               	rrcf	(___awdiv@divisor+1)^0,f,c
 13382  00560A  3212               	rrcf	___awdiv@divisor^0,f,c
 13383  00560C  2E14               	decfsz	___awdiv@counter^0,f,c
 13384  00560E  EFF0  F02A         	goto	l8372
 13385  005612                     l8384:
 13386  005612  5015               	movf	___awdiv@sign^0,w,c
 13387  005614  B4D8               	btfsc	status,2,c
 13388  005616  EF0F  F02B         	goto	u10381
 13389  00561A  EF11  F02B         	goto	u10380
 13390  00561E                     u10381:
 13391  00561E  EF15  F02B         	goto	l8388
 13392  005622                     u10380:
 13393  005622  6C16               	negf	___awdiv@quotient^0,c
 13394  005624  1E17               	comf	(___awdiv@quotient+1)^0,f,c
 13395  005626  B0D8               	btfsc	status,0,c
 13396  005628  2A17               	incf	(___awdiv@quotient+1)^0,f,c
 13397  00562A                     l8388:
 13398  00562A  C016  F010         	movff	___awdiv@quotient,?___awdiv
 13399  00562E  C017  F011         	movff	___awdiv@quotient+1,?___awdiv+1
 13400  005632  0012               	return		;funcret
 13401  005634                     __end_of___awdiv:
 13402                           	opt callstack 0
 13403                           
 13404 ;; *************** function _dtoa *****************
 13405 ;; Defined at:
 13406 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
 13409 ;;		 -> vsnprintf@f(6), 
 13410 ;;  d               8   44[COMRAM] long long 
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;  n               8    8[BANK0 ] long long 
 13413 ;;  i               2   16[BANK0 ] int 
 13414 ;;  s               2    6[BANK0 ] int 
 13415 ;;  w               2    4[BANK0 ] int 
 13416 ;;  p               2    2[BANK0 ] int 
 13417 ;; Return value:  Size  Location     Type
 13418 ;;                  2   42[COMRAM] int 
 13419 ;; Registers used:
 13420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13421 ;; Tracked objects:
 13422 ;;		On entry : 0/0
 13423 ;;		On exit  : 0/0
 13424 ;;		Unchanged: 0/0
 13425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13426 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13427 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13428 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13429 ;;      Totals:        18      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13430 ;;Total ram usage:       36 bytes
 13431 ;; Hardware stack levels used:    1
 13432 ;; Hardware stack levels required when called:    9
 13433 ;; This function calls:
 13434 ;;		___aodiv
 13435 ;;		___aomod
 13436 ;;		_abs
 13437 ;;		_pad
 13438 ;; This function is called by:
 13439 ;;		_vfpfcnvrt
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text31
 13444  003164                     __ptext31:
 13445                           	opt callstack 0
 13446  003164                     _dtoa:
 13447                           	opt callstack 17
 13448  003164                     
 13449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13450  003164  C02D  F068         	movff	dtoa@d,dtoa@n
 13451  003168  C02E  F069         	movff	dtoa@d+1,dtoa@n+1
 13452  00316C  C02F  F06A         	movff	dtoa@d+2,dtoa@n+2
 13453  003170  C030  F06B         	movff	dtoa@d+3,dtoa@n+3
 13454  003174  C031  F06C         	movff	dtoa@d+4,dtoa@n+4
 13455  003178  C032  F06D         	movff	dtoa@d+5,dtoa@n+5
 13456  00317C  C033  F06E         	movff	dtoa@d+6,dtoa@n+6
 13457  003180  C034  F06F         	movff	dtoa@d+7,dtoa@n+7
 13458  003184                     
 13459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13460  003184  0100               	movlb	0	; () banked
 13461  003186  BF6F               	btfsc	(dtoa@n+7)& (0+255),7,b
 13462  003188  EFC8  F018         	goto	u10721
 13463  00318C  EFCB  F018         	goto	u10720
 13464  003190                     u10721:
 13465  003190  0E01               	movlw	1
 13466  003192  EFCC  F018         	goto	u10730
 13467  003196                     u10720:
 13468  003196  0E00               	movlw	0
 13469  003198                     u10730:
 13470  003198  6F66               	movwf	dtoa@s& (0+255),b
 13471  00319A  6B67               	clrf	(dtoa@s+1)& (0+255),b
 13472                           
 13473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13474  00319C  5166               	movf	dtoa@s& (0+255),w,b
 13475  00319E  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 13476  0031A0  B4D8               	btfsc	status,2,c
 13477  0031A2  EFD5  F018         	goto	u10741
 13478  0031A6  EFD7  F018         	goto	u10740
 13479  0031AA                     u10741:
 13480  0031AA  EFE7  F018         	goto	l8596
 13481  0031AE                     u10740:
 13482  0031AE                     
 13483                           ; BSR set to: 0
 13484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13485  0031AE  1F6F               	comf	(dtoa@n+7)& (0+255),f,b
 13486  0031B0  1F6E               	comf	(dtoa@n+6)& (0+255),f,b
 13487  0031B2  1F6D               	comf	(dtoa@n+5)& (0+255),f,b
 13488  0031B4  1F6C               	comf	(dtoa@n+4)& (0+255),f,b
 13489  0031B6  1F6B               	comf	(dtoa@n+3)& (0+255),f,b
 13490  0031B8  1F6A               	comf	(dtoa@n+2)& (0+255),f,b
 13491  0031BA  1F69               	comf	(dtoa@n+1)& (0+255),f,b
 13492  0031BC  6D68               	negf	dtoa@n& (0+255),b
 13493  0031BE  0E00               	movlw	0
 13494  0031C0  2369               	addwfc	(dtoa@n+1)& (0+255),f,b
 13495  0031C2  236A               	addwfc	(dtoa@n+2)& (0+255),f,b
 13496  0031C4  236B               	addwfc	(dtoa@n+3)& (0+255),f,b
 13497  0031C6  236C               	addwfc	(dtoa@n+4)& (0+255),f,b
 13498  0031C8  236D               	addwfc	(dtoa@n+5)& (0+255),f,b
 13499  0031CA  236E               	addwfc	(dtoa@n+6)& (0+255),f,b
 13500  0031CC  236F               	addwfc	(dtoa@n+7)& (0+255),f,b
 13501  0031CE                     l8596:
 13502                           
 13503                           ; BSR set to: 0
 13504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13505  0031CE  BE46               	btfsc	(_prec+1)^0,7,c
 13506  0031D0  EFEC  F018         	goto	u10751
 13507  0031D4  EFEE  F018         	goto	u10750
 13508  0031D8                     u10751:
 13509  0031D8  EFEF  F018         	goto	l8600
 13510  0031DC                     u10750:
 13511  0031DC                     
 13512                           ; BSR set to: 0
 13513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13514  0031DC  9247               	bcf	_flags^0,1,c
 13515  0031DE                     l8600:
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13519  0031DE  BE46               	btfsc	(_prec+1)^0,7,c
 13520  0031E0  EFFC  F018         	goto	u10760
 13521  0031E4  5046               	movf	(_prec+1)^0,w,c
 13522  0031E6  E106               	bnz	u10761
 13523  0031E8  0445               	decf	_prec^0,w,c
 13524  0031EA  B0D8               	btfsc	status,0,c
 13525  0031EC  EFFA  F018         	goto	u10761
 13526  0031F0  EFFC  F018         	goto	u10760
 13527  0031F4                     u10761:
 13528  0031F4  EF02  F019         	goto	l679
 13529  0031F8                     u10760:
 13530  0031F8                     
 13531                           ; BSR set to: 0
 13532  0031F8  0E00               	movlw	0
 13533  0031FA  6F63               	movwf	(dtoa@p+1)& (0+255),b
 13534  0031FC  0E01               	movlw	1
 13535  0031FE  6F62               	movwf	dtoa@p& (0+255),b
 13536  003200  EF06  F019         	goto	l681
 13537  003204                     l679:
 13538                           
 13539                           ; BSR set to: 0
 13540  003204  C045  F062         	movff	_prec,dtoa@p
 13541  003208  C046  F063         	movff	_prec+1,dtoa@p+1
 13542  00320C                     l681:
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13546  00320C  C043  F064         	movff	_width,dtoa@w
 13547  003210  C044  F065         	movff	_width+1,dtoa@w+1
 13548  003214                     
 13549                           ; BSR set to: 0
 13550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13551  003214  5166               	movf	dtoa@s& (0+255),w,b
 13552  003216  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 13553  003218  A4D8               	btfss	status,2,c
 13554  00321A  EF11  F019         	goto	u10771
 13555  00321E  EF13  F019         	goto	u10770
 13556  003222                     u10771:
 13557  003222  EF1A  F019         	goto	l8608
 13558  003226                     u10770:
 13559  003226                     
 13560                           ; BSR set to: 0
 13561  003226  A447               	btfss	_flags^0,2,c
 13562  003228  EF18  F019         	goto	u10781
 13563  00322C  EF1A  F019         	goto	u10780
 13564  003230                     u10781:
 13565  003230  EF1D  F019         	goto	l8610
 13566  003234                     u10780:
 13567  003234                     l8608:
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13571  003234  0764               	decf	dtoa@w& (0+255),f,b
 13572  003236  A0D8               	btfss	status,0,c
 13573  003238  0765               	decf	(dtoa@w+1)& (0+255),f,b
 13574  00323A                     l8610:
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13578  00323A  0E00               	movlw	0
 13579  00323C  6F71               	movwf	(dtoa@i+1)& (0+255),b
 13580  00323E  0E4F               	movlw	79
 13581  003240  6F70               	movwf	dtoa@i& (0+255),b
 13582  003242                     
 13583                           ; BSR set to: 0
 13584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13585  003242  0E00               	movlw	0
 13586  003244  0101               	movlb	1	; () banked
 13587  003246  6FBB               	movwf	(_dbuf+79)& (0+255),b
 13588                           
 13589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13590  003248  EFA3  F019         	goto	l8624
 13591  00324C                     l8614:
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13595  00324C  0770               	decf	dtoa@i& (0+255),f,b
 13596  00324E  A0D8               	btfss	status,0,c
 13597  003250  0771               	decf	(dtoa@i+1)& (0+255),f,b
 13598  003252                     
 13599                           ; BSR set to: 0
 13600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13601  003252  0E6C               	movlw	low _dbuf
 13602  003254  2570               	addwf	dtoa@i& (0+255),w,b
 13603  003256  6ED9               	movwf	fsr2l,c
 13604  003258  0E01               	movlw	high _dbuf
 13605  00325A  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 13606  00325C  6EDA               	movwf	fsr2h,c
 13607  00325E  C068  F010         	movff	dtoa@n,___aomod@dividend
 13608  003262  C069  F011         	movff	dtoa@n+1,___aomod@dividend+1
 13609  003266  C06A  F012         	movff	dtoa@n+2,___aomod@dividend+2
 13610  00326A  C06B  F013         	movff	dtoa@n+3,___aomod@dividend+3
 13611  00326E  C06C  F014         	movff	dtoa@n+4,___aomod@dividend+4
 13612  003272  C06D  F015         	movff	dtoa@n+5,___aomod@dividend+5
 13613  003276  C06E  F016         	movff	dtoa@n+6,___aomod@dividend+6
 13614  00327A  C06F  F017         	movff	dtoa@n+7,___aomod@dividend+7
 13615  00327E  0E0A               	movlw	10
 13616  003280  6E18               	movwf	___aomod@divisor^0,c
 13617  003282  0E00               	movlw	0
 13618  003284  6E19               	movwf	(___aomod@divisor+1)^0,c
 13619  003286  0E00               	movlw	0
 13620  003288  6E1A               	movwf	(___aomod@divisor+2)^0,c
 13621  00328A  0E00               	movlw	0
 13622  00328C  6E1B               	movwf	(___aomod@divisor+3)^0,c
 13623  00328E  0E00               	movlw	0
 13624  003290  6E1C               	movwf	(___aomod@divisor+4)^0,c
 13625  003292  0E00               	movlw	0
 13626  003294  6E1D               	movwf	(___aomod@divisor+5)^0,c
 13627  003296  0E00               	movlw	0
 13628  003298  6E1E               	movwf	(___aomod@divisor+6)^0,c
 13629  00329A  0E00               	movlw	0
 13630  00329C  6E1F               	movwf	(___aomod@divisor+7)^0,c
 13631  00329E  EC6C  F024         	call	___aomod	;wreg free
 13632  0032A2  C010  F035         	movff	?___aomod,??_dtoa
 13633  0032A6  C011  F036         	movff	?___aomod+1,??_dtoa+1
 13634  0032AA  C012  F037         	movff	?___aomod+2,??_dtoa+2
 13635  0032AE  C013  F038         	movff	?___aomod+3,??_dtoa+3
 13636  0032B2  C014  F039         	movff	?___aomod+4,??_dtoa+4
 13637  0032B6  C015  F03A         	movff	?___aomod+5,??_dtoa+5
 13638  0032BA  C016  F03B         	movff	?___aomod+6,??_dtoa+6
 13639  0032BE  C017  F03C         	movff	?___aomod+7,??_dtoa+7
 13640  0032C2  C035  F022         	movff	??_dtoa,abs@a
 13641  0032C6  C037  F023         	movff	??_dtoa+2,abs@a+1
 13642  0032CA  EC09  F02F         	call	_abs	;wreg free
 13643  0032CE  5022               	movf	?_abs^0,w,c
 13644  0032D0  0F30               	addlw	48
 13645  0032D2  6EDF               	movwf	indf2,c
 13646  0032D4                     
 13647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13648  0032D4  0100               	movlb	0	; () banked
 13649  0032D6  0762               	decf	dtoa@p& (0+255),f,b
 13650  0032D8  A0D8               	btfss	status,0,c
 13651  0032DA  0763               	decf	(dtoa@p+1)& (0+255),f,b
 13652  0032DC                     
 13653                           ; BSR set to: 0
 13654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13655  0032DC  0764               	decf	dtoa@w& (0+255),f,b
 13656  0032DE  A0D8               	btfss	status,0,c
 13657  0032E0  0765               	decf	(dtoa@w+1)& (0+255),f,b
 13658  0032E2                     
 13659                           ; BSR set to: 0
 13660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13661  0032E2  C068  F010         	movff	dtoa@n,___aodiv@dividend
 13662  0032E6  C069  F011         	movff	dtoa@n+1,___aodiv@dividend+1
 13663  0032EA  C06A  F012         	movff	dtoa@n+2,___aodiv@dividend+2
 13664  0032EE  C06B  F013         	movff	dtoa@n+3,___aodiv@dividend+3
 13665  0032F2  C06C  F014         	movff	dtoa@n+4,___aodiv@dividend+4
 13666  0032F6  C06D  F015         	movff	dtoa@n+5,___aodiv@dividend+5
 13667  0032FA  C06E  F016         	movff	dtoa@n+6,___aodiv@dividend+6
 13668  0032FE  C06F  F017         	movff	dtoa@n+7,___aodiv@dividend+7
 13669  003302  0E0A               	movlw	10
 13670  003304  6E18               	movwf	___aodiv@divisor^0,c
 13671  003306  0E00               	movlw	0
 13672  003308  6E19               	movwf	(___aodiv@divisor+1)^0,c
 13673  00330A  0E00               	movlw	0
 13674  00330C  6E1A               	movwf	(___aodiv@divisor+2)^0,c
 13675  00330E  0E00               	movlw	0
 13676  003310  6E1B               	movwf	(___aodiv@divisor+3)^0,c
 13677  003312  0E00               	movlw	0
 13678  003314  6E1C               	movwf	(___aodiv@divisor+4)^0,c
 13679  003316  0E00               	movlw	0
 13680  003318  6E1D               	movwf	(___aodiv@divisor+5)^0,c
 13681  00331A  0E00               	movlw	0
 13682  00331C  6E1E               	movwf	(___aodiv@divisor+6)^0,c
 13683  00331E  0E00               	movlw	0
 13684  003320  6E1F               	movwf	(___aodiv@divisor+7)^0,c
 13685  003322  EC76  F021         	call	___aodiv	;wreg free
 13686  003326  C010  F068         	movff	?___aodiv,dtoa@n
 13687  00332A  C011  F069         	movff	?___aodiv+1,dtoa@n+1
 13688  00332E  C012  F06A         	movff	?___aodiv+2,dtoa@n+2
 13689  003332  C013  F06B         	movff	?___aodiv+3,dtoa@n+3
 13690  003336  C014  F06C         	movff	?___aodiv+4,dtoa@n+4
 13691  00333A  C015  F06D         	movff	?___aodiv+5,dtoa@n+5
 13692  00333E  C016  F06E         	movff	?___aodiv+6,dtoa@n+6
 13693  003342  C017  F06F         	movff	?___aodiv+7,dtoa@n+7
 13694  003346                     l8624:
 13695                           
 13696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13697  003346  0100               	movlb	0	; () banked
 13698  003348  BF71               	btfsc	(dtoa@i+1)& (0+255),7,b
 13699  00334A  EFAF  F019         	goto	u10791
 13700  00334E  5171               	movf	(dtoa@i+1)& (0+255),w,b
 13701  003350  E108               	bnz	u10790
 13702  003352  0570               	decf	dtoa@i& (0+255),w,b
 13703  003354  A0D8               	btfss	status,0,c
 13704  003356  EFAF  F019         	goto	u10791
 13705  00335A  EFB1  F019         	goto	u10790
 13706  00335E                     u10791:
 13707  00335E  EFE1  F019         	goto	l8634
 13708  003362                     u10790:
 13709  003362                     
 13710                           ; BSR set to: 0
 13711  003362  5168               	movf	dtoa@n& (0+255),w,b
 13712  003364  1169               	iorwf	(dtoa@n+1)& (0+255),w,b
 13713  003366  116A               	iorwf	(dtoa@n+2)& (0+255),w,b
 13714  003368  116B               	iorwf	(dtoa@n+3)& (0+255),w,b
 13715  00336A  116C               	iorwf	(dtoa@n+4)& (0+255),w,b
 13716  00336C  116D               	iorwf	(dtoa@n+5)& (0+255),w,b
 13717  00336E  116E               	iorwf	(dtoa@n+6)& (0+255),w,b
 13718  003370  116F               	iorwf	(dtoa@n+7)& (0+255),w,b
 13719  003372  A4D8               	btfss	status,2,c
 13720  003374  EFBE  F019         	goto	u10801
 13721  003378  EFC0  F019         	goto	u10800
 13722  00337C                     u10801:
 13723  00337C  EF26  F019         	goto	l8614
 13724  003380                     u10800:
 13725  003380                     
 13726                           ; BSR set to: 0
 13727  003380  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
 13728  003382  EFCD  F019         	goto	u10810
 13729  003386  5163               	movf	(dtoa@p+1)& (0+255),w,b
 13730  003388  E106               	bnz	u10811
 13731  00338A  0562               	decf	dtoa@p& (0+255),w,b
 13732  00338C  B0D8               	btfsc	status,0,c
 13733  00338E  EFCB  F019         	goto	u10811
 13734  003392  EFCD  F019         	goto	u10810
 13735  003396                     u10811:
 13736  003396  EF26  F019         	goto	l8614
 13737  00339A                     u10810:
 13738  00339A                     
 13739                           ; BSR set to: 0
 13740  00339A  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
 13741  00339C  EFD8  F019         	goto	u10821
 13742  0033A0  5165               	movf	(dtoa@w+1)& (0+255),w,b
 13743  0033A2  E108               	bnz	u10820
 13744  0033A4  0564               	decf	dtoa@w& (0+255),w,b
 13745  0033A6  A0D8               	btfss	status,0,c
 13746  0033A8  EFD8  F019         	goto	u10821
 13747  0033AC  EFDA  F019         	goto	u10820
 13748  0033B0                     u10821:
 13749  0033B0  EFE1  F019         	goto	l8634
 13750  0033B4                     u10820:
 13751  0033B4                     
 13752                           ; BSR set to: 0
 13753  0033B4  B247               	btfsc	_flags^0,1,c
 13754  0033B6  EFDF  F019         	goto	u10831
 13755  0033BA  EFE1  F019         	goto	u10830
 13756  0033BE                     u10831:
 13757  0033BE  EF26  F019         	goto	l8614
 13758  0033C2                     u10830:
 13759  0033C2                     l8634:
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13763  0033C2  5166               	movf	dtoa@s& (0+255),w,b
 13764  0033C4  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 13765  0033C6  A4D8               	btfss	status,2,c
 13766  0033C8  EFE8  F019         	goto	u10841
 13767  0033CC  EFEA  F019         	goto	u10840
 13768  0033D0                     u10841:
 13769  0033D0  EFF1  F019         	goto	l8638
 13770  0033D4                     u10840:
 13771  0033D4                     
 13772                           ; BSR set to: 0
 13773  0033D4  A447               	btfss	_flags^0,2,c
 13774  0033D6  EFEF  F019         	goto	u10851
 13775  0033DA  EFF1  F019         	goto	u10850
 13776  0033DE                     u10851:
 13777  0033DE  EF0F  F01A         	goto	l8648
 13778  0033E2                     u10850:
 13779  0033E2                     l8638:
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13783  0033E2  0770               	decf	dtoa@i& (0+255),f,b
 13784  0033E4  A0D8               	btfss	status,0,c
 13785  0033E6  0771               	decf	(dtoa@i+1)& (0+255),f,b
 13786  0033E8                     
 13787                           ; BSR set to: 0
 13788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13789  0033E8  5166               	movf	dtoa@s& (0+255),w,b
 13790  0033EA  1167               	iorwf	(dtoa@s+1)& (0+255),w,b
 13791  0033EC  A4D8               	btfss	status,2,c
 13792  0033EE  EFFB  F019         	goto	u10861
 13793  0033F2  EFFD  F019         	goto	u10860
 13794  0033F6                     u10861:
 13795  0033F6  EF03  F01A         	goto	l8644
 13796  0033FA                     u10860:
 13797  0033FA                     
 13798                           ; BSR set to: 0
 13799  0033FA  0E00               	movlw	0
 13800  0033FC  6F61               	movwf	(_dtoa$1697+1)& (0+255),b
 13801  0033FE  0E2B               	movlw	43
 13802  003400  6F60               	movwf	_dtoa$1697& (0+255),b
 13803  003402  EF07  F01A         	goto	l8646
 13804  003406                     l8644:
 13805                           
 13806                           ; BSR set to: 0
 13807  003406  0E00               	movlw	0
 13808  003408  6F61               	movwf	(_dtoa$1697+1)& (0+255),b
 13809  00340A  0E2D               	movlw	45
 13810  00340C  6F60               	movwf	_dtoa$1697& (0+255),b
 13811  00340E                     l8646:
 13812                           
 13813                           ; BSR set to: 0
 13814  00340E  0E6C               	movlw	low _dbuf
 13815  003410  2570               	addwf	dtoa@i& (0+255),w,b
 13816  003412  6ED9               	movwf	fsr2l,c
 13817  003414  0E01               	movlw	high _dbuf
 13818  003416  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 13819  003418  6EDA               	movwf	fsr2h,c
 13820  00341A  C060  FFDF         	movff	_dtoa$1697,indf2
 13821  00341E                     l8648:
 13822                           
 13823                           ; BSR set to: 0
 13824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13825  00341E  C02B  F020         	movff	dtoa@fp,pad@fp
 13826  003422  C02C  F021         	movff	dtoa@fp+1,pad@fp+1
 13827  003426  0E6C               	movlw	low _dbuf
 13828  003428  2570               	addwf	dtoa@i& (0+255),w,b
 13829  00342A  6E22               	movwf	pad@buf^0,c
 13830  00342C  0E01               	movlw	high _dbuf
 13831  00342E  2171               	addwfc	(dtoa@i+1)& (0+255),w,b
 13832  003430  6E23               	movwf	(pad@buf+1)^0,c
 13833  003432  C064  F024         	movff	dtoa@w,pad@p
 13834  003436  C065  F025         	movff	dtoa@w+1,pad@p+1
 13835  00343A  EC1A  F02B         	call	_pad	;wreg free
 13836  00343E  C020  F02B         	movff	?_pad,?_dtoa
 13837  003442  C021  F02C         	movff	?_pad+1,?_dtoa+1
 13838  003446  0012               	return		;funcret
 13839  003448                     __end_of_dtoa:
 13840                           	opt callstack 0
 13841                           
 13842 ;; *************** function _abs *****************
 13843 ;; Defined at:
 13844 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;  a               2   33[COMRAM] int 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;		None
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  2   33[COMRAM] int 
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13862 ;;Total ram usage:        4 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:    5
 13865 ;; This function calls:
 13866 ;;		Nothing
 13867 ;; This function is called by:
 13868 ;;		_dtoa
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872                           	psect	text32
 13873  005E12                     __ptext32:
 13874                           	opt callstack 0
 13875  005E12                     _abs:
 13876                           	opt callstack 20
 13877  005E12  BE23               	btfsc	(abs@a+1)^0,7,c
 13878  005E14  EF16  F02F         	goto	u9480
 13879  005E18  5023               	movf	(abs@a+1)^0,w,c
 13880  005E1A  E106               	bnz	u9481
 13881  005E1C  0422               	decf	abs@a^0,w,c
 13882  005E1E  B0D8               	btfsc	status,0,c
 13883  005E20  EF14  F02F         	goto	u9481
 13884  005E24  EF16  F02F         	goto	u9480
 13885  005E28                     u9481:
 13886  005E28  EF24  F02F         	goto	l1655
 13887  005E2C                     u9480:
 13888  005E2C  C022  F024         	movff	abs@a,??_abs
 13889  005E30  C023  F025         	movff	abs@a+1,??_abs+1
 13890  005E34  1E24               	comf	??_abs^0,f,c
 13891  005E36  1E25               	comf	(??_abs+1)^0,f,c
 13892  005E38  4A24               	infsnz	??_abs^0,f,c
 13893  005E3A  2A25               	incf	(??_abs+1)^0,f,c
 13894  005E3C  C024  F022         	movff	??_abs,?_abs
 13895  005E40  C025  F023         	movff	??_abs+1,?_abs+1
 13896  005E44  EF28  F02F         	goto	l1658
 13897  005E48                     l1655:
 13898  005E48  C022  F022         	movff	abs@a,?_abs
 13899  005E4C  C023  F023         	movff	abs@a+1,?_abs+1
 13900  005E50                     l1658:
 13901  005E50  0012               	return		;funcret
 13902  005E52                     __end_of_abs:
 13903                           	opt callstack 0
 13904                           
 13905 ;; *************** function ___aomod *****************
 13906 ;; Defined at:
 13907 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;  dividend        8   15[COMRAM] long long 
 13910 ;;  divisor         8   23[COMRAM] long long 
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;  sign            1   32[COMRAM] unsigned char 
 13913 ;;  counter         1   31[COMRAM] unsigned char 
 13914 ;; Return value:  Size  Location     Type
 13915 ;;                  8   15[COMRAM] long long 
 13916 ;; Registers used:
 13917 ;;		wreg, status,2, status,0
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13923 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13926 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13927 ;;Total ram usage:       18 bytes
 13928 ;; Hardware stack levels used:    1
 13929 ;; Hardware stack levels required when called:    5
 13930 ;; This function calls:
 13931 ;;		Nothing
 13932 ;; This function is called by:
 13933 ;;		_dtoa
 13934 ;; This function uses a non-reentrant model
 13935 ;;
 13936                           
 13937                           	psect	text33
 13938  0048D8                     __ptext33:
 13939                           	opt callstack 0
 13940  0048D8                     ___aomod:
 13941                           	opt callstack 20
 13942  0048D8  0E00               	movlw	0
 13943  0048DA  6E21               	movwf	___aomod@sign^0,c
 13944  0048DC  BE17               	btfsc	(___aomod@dividend+7)^0,7,c
 13945  0048DE  EF75  F024         	goto	u9850
 13946  0048E2  EF73  F024         	goto	u9851
 13947  0048E6                     u9851:
 13948  0048E6  EF87  F024         	goto	l8046
 13949  0048EA                     u9850:
 13950  0048EA  1E17               	comf	(___aomod@dividend+7)^0,f,c
 13951  0048EC  1E16               	comf	(___aomod@dividend+6)^0,f,c
 13952  0048EE  1E15               	comf	(___aomod@dividend+5)^0,f,c
 13953  0048F0  1E14               	comf	(___aomod@dividend+4)^0,f,c
 13954  0048F2  1E13               	comf	(___aomod@dividend+3)^0,f,c
 13955  0048F4  1E12               	comf	(___aomod@dividend+2)^0,f,c
 13956  0048F6  1E11               	comf	(___aomod@dividend+1)^0,f,c
 13957  0048F8  6C10               	negf	___aomod@dividend^0,c
 13958  0048FA  0E00               	movlw	0
 13959  0048FC  2211               	addwfc	(___aomod@dividend+1)^0,f,c
 13960  0048FE  2212               	addwfc	(___aomod@dividend+2)^0,f,c
 13961  004900  2213               	addwfc	(___aomod@dividend+3)^0,f,c
 13962  004902  2214               	addwfc	(___aomod@dividend+4)^0,f,c
 13963  004904  2215               	addwfc	(___aomod@dividend+5)^0,f,c
 13964  004906  2216               	addwfc	(___aomod@dividend+6)^0,f,c
 13965  004908  2217               	addwfc	(___aomod@dividend+7)^0,f,c
 13966  00490A  0E01               	movlw	1
 13967  00490C  6E21               	movwf	___aomod@sign^0,c
 13968  00490E                     l8046:
 13969  00490E  BE1F               	btfsc	(___aomod@divisor+7)^0,7,c
 13970  004910  EF8E  F024         	goto	u9860
 13971  004914  EF8C  F024         	goto	u9861
 13972  004918                     u9861:
 13973  004918  EF9E  F024         	goto	l8050
 13974  00491C                     u9860:
 13975  00491C  1E1F               	comf	(___aomod@divisor+7)^0,f,c
 13976  00491E  1E1E               	comf	(___aomod@divisor+6)^0,f,c
 13977  004920  1E1D               	comf	(___aomod@divisor+5)^0,f,c
 13978  004922  1E1C               	comf	(___aomod@divisor+4)^0,f,c
 13979  004924  1E1B               	comf	(___aomod@divisor+3)^0,f,c
 13980  004926  1E1A               	comf	(___aomod@divisor+2)^0,f,c
 13981  004928  1E19               	comf	(___aomod@divisor+1)^0,f,c
 13982  00492A  6C18               	negf	___aomod@divisor^0,c
 13983  00492C  0E00               	movlw	0
 13984  00492E  2219               	addwfc	(___aomod@divisor+1)^0,f,c
 13985  004930  221A               	addwfc	(___aomod@divisor+2)^0,f,c
 13986  004932  221B               	addwfc	(___aomod@divisor+3)^0,f,c
 13987  004934  221C               	addwfc	(___aomod@divisor+4)^0,f,c
 13988  004936  221D               	addwfc	(___aomod@divisor+5)^0,f,c
 13989  004938  221E               	addwfc	(___aomod@divisor+6)^0,f,c
 13990  00493A  221F               	addwfc	(___aomod@divisor+7)^0,f,c
 13991  00493C                     l8050:
 13992  00493C  5018               	movf	___aomod@divisor^0,w,c
 13993  00493E  1019               	iorwf	(___aomod@divisor+1)^0,w,c
 13994  004940  101A               	iorwf	(___aomod@divisor+2)^0,w,c
 13995  004942  101B               	iorwf	(___aomod@divisor+3)^0,w,c
 13996  004944  101C               	iorwf	(___aomod@divisor+4)^0,w,c
 13997  004946  101D               	iorwf	(___aomod@divisor+5)^0,w,c
 13998  004948  101E               	iorwf	(___aomod@divisor+6)^0,w,c
 13999  00494A  101F               	iorwf	(___aomod@divisor+7)^0,w,c
 14000  00494C  B4D8               	btfsc	status,2,c
 14001  00494E  EFAB  F024         	goto	u9871
 14002  004952  EFAD  F024         	goto	u9870
 14003  004956                     u9871:
 14004  004956  EFF5  F024         	goto	l8066
 14005  00495A                     u9870:
 14006  00495A  0E01               	movlw	1
 14007  00495C  6E20               	movwf	___aomod@counter^0,c
 14008  00495E  EFBB  F024         	goto	l8056
 14009  004962                     l8054:
 14010  004962  90D8               	bcf	status,0,c
 14011  004964  3618               	rlcf	___aomod@divisor^0,f,c
 14012  004966  3619               	rlcf	(___aomod@divisor+1)^0,f,c
 14013  004968  361A               	rlcf	(___aomod@divisor+2)^0,f,c
 14014  00496A  361B               	rlcf	(___aomod@divisor+3)^0,f,c
 14015  00496C  361C               	rlcf	(___aomod@divisor+4)^0,f,c
 14016  00496E  361D               	rlcf	(___aomod@divisor+5)^0,f,c
 14017  004970  361E               	rlcf	(___aomod@divisor+6)^0,f,c
 14018  004972  361F               	rlcf	(___aomod@divisor+7)^0,f,c
 14019  004974  2A20               	incf	___aomod@counter^0,f,c
 14020  004976                     l8056:
 14021  004976  AE1F               	btfss	(___aomod@divisor+7)^0,7,c
 14022  004978  EFC0  F024         	goto	u9881
 14023  00497C  EFC2  F024         	goto	u9880
 14024  004980                     u9881:
 14025  004980  EFB1  F024         	goto	l8054
 14026  004984                     u9880:
 14027  004984                     l8058:
 14028  004984  5018               	movf	___aomod@divisor^0,w,c
 14029  004986  5C10               	subwf	___aomod@dividend^0,w,c
 14030  004988  5019               	movf	(___aomod@divisor+1)^0,w,c
 14031  00498A  5811               	subwfb	(___aomod@dividend+1)^0,w,c
 14032  00498C  501A               	movf	(___aomod@divisor+2)^0,w,c
 14033  00498E  5812               	subwfb	(___aomod@dividend+2)^0,w,c
 14034  004990  501B               	movf	(___aomod@divisor+3)^0,w,c
 14035  004992  5813               	subwfb	(___aomod@dividend+3)^0,w,c
 14036  004994  501C               	movf	(___aomod@divisor+4)^0,w,c
 14037  004996  5814               	subwfb	(___aomod@dividend+4)^0,w,c
 14038  004998  501D               	movf	(___aomod@divisor+5)^0,w,c
 14039  00499A  5815               	subwfb	(___aomod@dividend+5)^0,w,c
 14040  00499C  501E               	movf	(___aomod@divisor+6)^0,w,c
 14041  00499E  5816               	subwfb	(___aomod@dividend+6)^0,w,c
 14042  0049A0  501F               	movf	(___aomod@divisor+7)^0,w,c
 14043  0049A2  5817               	subwfb	(___aomod@dividend+7)^0,w,c
 14044  0049A4  A0D8               	btfss	status,0,c
 14045  0049A6  EFD7  F024         	goto	u9891
 14046  0049AA  EFD9  F024         	goto	u9890
 14047  0049AE                     u9891:
 14048  0049AE  EFE9  F024         	goto	l8062
 14049  0049B2                     u9890:
 14050  0049B2  5018               	movf	___aomod@divisor^0,w,c
 14051  0049B4  5E10               	subwf	___aomod@dividend^0,f,c
 14052  0049B6  5019               	movf	(___aomod@divisor+1)^0,w,c
 14053  0049B8  5A11               	subwfb	(___aomod@dividend+1)^0,f,c
 14054  0049BA  501A               	movf	(___aomod@divisor+2)^0,w,c
 14055  0049BC  5A12               	subwfb	(___aomod@dividend+2)^0,f,c
 14056  0049BE  501B               	movf	(___aomod@divisor+3)^0,w,c
 14057  0049C0  5A13               	subwfb	(___aomod@dividend+3)^0,f,c
 14058  0049C2  501C               	movf	(___aomod@divisor+4)^0,w,c
 14059  0049C4  5A14               	subwfb	(___aomod@dividend+4)^0,f,c
 14060  0049C6  501D               	movf	(___aomod@divisor+5)^0,w,c
 14061  0049C8  5A15               	subwfb	(___aomod@dividend+5)^0,f,c
 14062  0049CA  501E               	movf	(___aomod@divisor+6)^0,w,c
 14063  0049CC  5A16               	subwfb	(___aomod@dividend+6)^0,f,c
 14064  0049CE  501F               	movf	(___aomod@divisor+7)^0,w,c
 14065  0049D0  5A17               	subwfb	(___aomod@dividend+7)^0,f,c
 14066  0049D2                     l8062:
 14067  0049D2  90D8               	bcf	status,0,c
 14068  0049D4  321F               	rrcf	(___aomod@divisor+7)^0,f,c
 14069  0049D6  321E               	rrcf	(___aomod@divisor+6)^0,f,c
 14070  0049D8  321D               	rrcf	(___aomod@divisor+5)^0,f,c
 14071  0049DA  321C               	rrcf	(___aomod@divisor+4)^0,f,c
 14072  0049DC  321B               	rrcf	(___aomod@divisor+3)^0,f,c
 14073  0049DE  321A               	rrcf	(___aomod@divisor+2)^0,f,c
 14074  0049E0  3219               	rrcf	(___aomod@divisor+1)^0,f,c
 14075  0049E2  3218               	rrcf	___aomod@divisor^0,f,c
 14076  0049E4  2E20               	decfsz	___aomod@counter^0,f,c
 14077  0049E6  EFC2  F024         	goto	l8058
 14078  0049EA                     l8066:
 14079  0049EA  5021               	movf	___aomod@sign^0,w,c
 14080  0049EC  B4D8               	btfsc	status,2,c
 14081  0049EE  EFFB  F024         	goto	u9901
 14082  0049F2  EFFD  F024         	goto	u9900
 14083  0049F6                     u9901:
 14084  0049F6  EF0D  F025         	goto	l8070
 14085  0049FA                     u9900:
 14086  0049FA  1E17               	comf	(___aomod@dividend+7)^0,f,c
 14087  0049FC  1E16               	comf	(___aomod@dividend+6)^0,f,c
 14088  0049FE  1E15               	comf	(___aomod@dividend+5)^0,f,c
 14089  004A00  1E14               	comf	(___aomod@dividend+4)^0,f,c
 14090  004A02  1E13               	comf	(___aomod@dividend+3)^0,f,c
 14091  004A04  1E12               	comf	(___aomod@dividend+2)^0,f,c
 14092  004A06  1E11               	comf	(___aomod@dividend+1)^0,f,c
 14093  004A08  6C10               	negf	___aomod@dividend^0,c
 14094  004A0A  0E00               	movlw	0
 14095  004A0C  2211               	addwfc	(___aomod@dividend+1)^0,f,c
 14096  004A0E  2212               	addwfc	(___aomod@dividend+2)^0,f,c
 14097  004A10  2213               	addwfc	(___aomod@dividend+3)^0,f,c
 14098  004A12  2214               	addwfc	(___aomod@dividend+4)^0,f,c
 14099  004A14  2215               	addwfc	(___aomod@dividend+5)^0,f,c
 14100  004A16  2216               	addwfc	(___aomod@dividend+6)^0,f,c
 14101  004A18  2217               	addwfc	(___aomod@dividend+7)^0,f,c
 14102  004A1A                     l8070:
 14103  004A1A  C010  F010         	movff	___aomod@dividend,?___aomod
 14104  004A1E  C011  F011         	movff	___aomod@dividend+1,?___aomod+1
 14105  004A22  C012  F012         	movff	___aomod@dividend+2,?___aomod+2
 14106  004A26  C013  F013         	movff	___aomod@dividend+3,?___aomod+3
 14107  004A2A  C014  F014         	movff	___aomod@dividend+4,?___aomod+4
 14108  004A2E  C015  F015         	movff	___aomod@dividend+5,?___aomod+5
 14109  004A32  C016  F016         	movff	___aomod@dividend+6,?___aomod+6
 14110  004A36  C017  F017         	movff	___aomod@dividend+7,?___aomod+7
 14111  004A3A  0012               	return		;funcret
 14112  004A3C                     __end_of___aomod:
 14113                           	opt callstack 0
 14114                           
 14115 ;; *************** function ___aodiv *****************
 14116 ;; Defined at:
 14117 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;  dividend        8   15[COMRAM] long long 
 14120 ;;  divisor         8   23[COMRAM] long long 
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;  quotient        8   33[COMRAM] long long 
 14123 ;;  sign            1   32[COMRAM] unsigned char 
 14124 ;;  counter         1   31[COMRAM] unsigned char 
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  8   15[COMRAM] long long 
 14127 ;; Registers used:
 14128 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14134 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14135 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14137 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14138 ;;Total ram usage:       26 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    5
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_dtoa
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text34
 14149  0042EC                     __ptext34:
 14150                           	opt callstack 0
 14151  0042EC                     ___aodiv:
 14152                           	opt callstack 20
 14153  0042EC  0E00               	movlw	0
 14154  0042EE  6E21               	movwf	___aodiv@sign^0,c
 14155  0042F0  BE1F               	btfsc	(___aodiv@divisor+7)^0,7,c
 14156  0042F2  EF7F  F021         	goto	u9780
 14157  0042F6  EF7D  F021         	goto	u9781
 14158  0042FA                     u9781:
 14159  0042FA  EF91  F021         	goto	l8002
 14160  0042FE                     u9780:
 14161  0042FE  1E1F               	comf	(___aodiv@divisor+7)^0,f,c
 14162  004300  1E1E               	comf	(___aodiv@divisor+6)^0,f,c
 14163  004302  1E1D               	comf	(___aodiv@divisor+5)^0,f,c
 14164  004304  1E1C               	comf	(___aodiv@divisor+4)^0,f,c
 14165  004306  1E1B               	comf	(___aodiv@divisor+3)^0,f,c
 14166  004308  1E1A               	comf	(___aodiv@divisor+2)^0,f,c
 14167  00430A  1E19               	comf	(___aodiv@divisor+1)^0,f,c
 14168  00430C  6C18               	negf	___aodiv@divisor^0,c
 14169  00430E  0E00               	movlw	0
 14170  004310  2219               	addwfc	(___aodiv@divisor+1)^0,f,c
 14171  004312  221A               	addwfc	(___aodiv@divisor+2)^0,f,c
 14172  004314  221B               	addwfc	(___aodiv@divisor+3)^0,f,c
 14173  004316  221C               	addwfc	(___aodiv@divisor+4)^0,f,c
 14174  004318  221D               	addwfc	(___aodiv@divisor+5)^0,f,c
 14175  00431A  221E               	addwfc	(___aodiv@divisor+6)^0,f,c
 14176  00431C  221F               	addwfc	(___aodiv@divisor+7)^0,f,c
 14177  00431E  0E01               	movlw	1
 14178  004320  6E21               	movwf	___aodiv@sign^0,c
 14179  004322                     l8002:
 14180  004322  BE17               	btfsc	(___aodiv@dividend+7)^0,7,c
 14181  004324  EF98  F021         	goto	u9790
 14182  004328  EF96  F021         	goto	u9791
 14183  00432C                     u9791:
 14184  00432C  EFAA  F021         	goto	l8008
 14185  004330                     u9790:
 14186  004330  1E17               	comf	(___aodiv@dividend+7)^0,f,c
 14187  004332  1E16               	comf	(___aodiv@dividend+6)^0,f,c
 14188  004334  1E15               	comf	(___aodiv@dividend+5)^0,f,c
 14189  004336  1E14               	comf	(___aodiv@dividend+4)^0,f,c
 14190  004338  1E13               	comf	(___aodiv@dividend+3)^0,f,c
 14191  00433A  1E12               	comf	(___aodiv@dividend+2)^0,f,c
 14192  00433C  1E11               	comf	(___aodiv@dividend+1)^0,f,c
 14193  00433E  6C10               	negf	___aodiv@dividend^0,c
 14194  004340  0E00               	movlw	0
 14195  004342  2211               	addwfc	(___aodiv@dividend+1)^0,f,c
 14196  004344  2212               	addwfc	(___aodiv@dividend+2)^0,f,c
 14197  004346  2213               	addwfc	(___aodiv@dividend+3)^0,f,c
 14198  004348  2214               	addwfc	(___aodiv@dividend+4)^0,f,c
 14199  00434A  2215               	addwfc	(___aodiv@dividend+5)^0,f,c
 14200  00434C  2216               	addwfc	(___aodiv@dividend+6)^0,f,c
 14201  00434E  2217               	addwfc	(___aodiv@dividend+7)^0,f,c
 14202  004350  0E01               	movlw	1
 14203  004352  1A21               	xorwf	___aodiv@sign^0,f,c
 14204  004354                     l8008:
 14205  004354  EE20  F022         	lfsr	2,___aodiv@quotient
 14206  004358  0E07               	movlw	7
 14207  00435A                     u9801:
 14208  00435A  6ADE               	clrf	postinc2,c
 14209  00435C  06E8               	decf	wreg,f,c
 14210  00435E  E2FD               	bc	u9801
 14211  004360  5018               	movf	___aodiv@divisor^0,w,c
 14212  004362  1019               	iorwf	(___aodiv@divisor+1)^0,w,c
 14213  004364  101A               	iorwf	(___aodiv@divisor+2)^0,w,c
 14214  004366  101B               	iorwf	(___aodiv@divisor+3)^0,w,c
 14215  004368  101C               	iorwf	(___aodiv@divisor+4)^0,w,c
 14216  00436A  101D               	iorwf	(___aodiv@divisor+5)^0,w,c
 14217  00436C  101E               	iorwf	(___aodiv@divisor+6)^0,w,c
 14218  00436E  101F               	iorwf	(___aodiv@divisor+7)^0,w,c
 14219  004370  B4D8               	btfsc	status,2,c
 14220  004372  EFBD  F021         	goto	u9811
 14221  004376  EFBF  F021         	goto	u9810
 14222  00437A                     u9811:
 14223  00437A  EF11  F022         	goto	l8030
 14224  00437E                     u9810:
 14225  00437E  0E01               	movlw	1
 14226  004380  6E20               	movwf	___aodiv@counter^0,c
 14227  004382  EFCD  F021         	goto	l8016
 14228  004386                     l8014:
 14229  004386  90D8               	bcf	status,0,c
 14230  004388  3618               	rlcf	___aodiv@divisor^0,f,c
 14231  00438A  3619               	rlcf	(___aodiv@divisor+1)^0,f,c
 14232  00438C  361A               	rlcf	(___aodiv@divisor+2)^0,f,c
 14233  00438E  361B               	rlcf	(___aodiv@divisor+3)^0,f,c
 14234  004390  361C               	rlcf	(___aodiv@divisor+4)^0,f,c
 14235  004392  361D               	rlcf	(___aodiv@divisor+5)^0,f,c
 14236  004394  361E               	rlcf	(___aodiv@divisor+6)^0,f,c
 14237  004396  361F               	rlcf	(___aodiv@divisor+7)^0,f,c
 14238  004398  2A20               	incf	___aodiv@counter^0,f,c
 14239  00439A                     l8016:
 14240  00439A  AE1F               	btfss	(___aodiv@divisor+7)^0,7,c
 14241  00439C  EFD2  F021         	goto	u9821
 14242  0043A0  EFD4  F021         	goto	u9820
 14243  0043A4                     u9821:
 14244  0043A4  EFC3  F021         	goto	l8014
 14245  0043A8                     u9820:
 14246  0043A8                     l8018:
 14247  0043A8  90D8               	bcf	status,0,c
 14248  0043AA  3622               	rlcf	___aodiv@quotient^0,f,c
 14249  0043AC  3623               	rlcf	(___aodiv@quotient+1)^0,f,c
 14250  0043AE  3624               	rlcf	(___aodiv@quotient+2)^0,f,c
 14251  0043B0  3625               	rlcf	(___aodiv@quotient+3)^0,f,c
 14252  0043B2  3626               	rlcf	(___aodiv@quotient+4)^0,f,c
 14253  0043B4  3627               	rlcf	(___aodiv@quotient+5)^0,f,c
 14254  0043B6  3628               	rlcf	(___aodiv@quotient+6)^0,f,c
 14255  0043B8  3629               	rlcf	(___aodiv@quotient+7)^0,f,c
 14256  0043BA  5018               	movf	___aodiv@divisor^0,w,c
 14257  0043BC  5C10               	subwf	___aodiv@dividend^0,w,c
 14258  0043BE  5019               	movf	(___aodiv@divisor+1)^0,w,c
 14259  0043C0  5811               	subwfb	(___aodiv@dividend+1)^0,w,c
 14260  0043C2  501A               	movf	(___aodiv@divisor+2)^0,w,c
 14261  0043C4  5812               	subwfb	(___aodiv@dividend+2)^0,w,c
 14262  0043C6  501B               	movf	(___aodiv@divisor+3)^0,w,c
 14263  0043C8  5813               	subwfb	(___aodiv@dividend+3)^0,w,c
 14264  0043CA  501C               	movf	(___aodiv@divisor+4)^0,w,c
 14265  0043CC  5814               	subwfb	(___aodiv@dividend+4)^0,w,c
 14266  0043CE  501D               	movf	(___aodiv@divisor+5)^0,w,c
 14267  0043D0  5815               	subwfb	(___aodiv@dividend+5)^0,w,c
 14268  0043D2  501E               	movf	(___aodiv@divisor+6)^0,w,c
 14269  0043D4  5816               	subwfb	(___aodiv@dividend+6)^0,w,c
 14270  0043D6  501F               	movf	(___aodiv@divisor+7)^0,w,c
 14271  0043D8  5817               	subwfb	(___aodiv@dividend+7)^0,w,c
 14272  0043DA  A0D8               	btfss	status,0,c
 14273  0043DC  EFF2  F021         	goto	u9831
 14274  0043E0  EFF4  F021         	goto	u9830
 14275  0043E4                     u9831:
 14276  0043E4  EF05  F022         	goto	l8026
 14277  0043E8                     u9830:
 14278  0043E8  5018               	movf	___aodiv@divisor^0,w,c
 14279  0043EA  5E10               	subwf	___aodiv@dividend^0,f,c
 14280  0043EC  5019               	movf	(___aodiv@divisor+1)^0,w,c
 14281  0043EE  5A11               	subwfb	(___aodiv@dividend+1)^0,f,c
 14282  0043F0  501A               	movf	(___aodiv@divisor+2)^0,w,c
 14283  0043F2  5A12               	subwfb	(___aodiv@dividend+2)^0,f,c
 14284  0043F4  501B               	movf	(___aodiv@divisor+3)^0,w,c
 14285  0043F6  5A13               	subwfb	(___aodiv@dividend+3)^0,f,c
 14286  0043F8  501C               	movf	(___aodiv@divisor+4)^0,w,c
 14287  0043FA  5A14               	subwfb	(___aodiv@dividend+4)^0,f,c
 14288  0043FC  501D               	movf	(___aodiv@divisor+5)^0,w,c
 14289  0043FE  5A15               	subwfb	(___aodiv@dividend+5)^0,f,c
 14290  004400  501E               	movf	(___aodiv@divisor+6)^0,w,c
 14291  004402  5A16               	subwfb	(___aodiv@dividend+6)^0,f,c
 14292  004404  501F               	movf	(___aodiv@divisor+7)^0,w,c
 14293  004406  5A17               	subwfb	(___aodiv@dividend+7)^0,f,c
 14294  004408  8022               	bsf	___aodiv@quotient^0,0,c
 14295  00440A                     l8026:
 14296  00440A  90D8               	bcf	status,0,c
 14297  00440C  321F               	rrcf	(___aodiv@divisor+7)^0,f,c
 14298  00440E  321E               	rrcf	(___aodiv@divisor+6)^0,f,c
 14299  004410  321D               	rrcf	(___aodiv@divisor+5)^0,f,c
 14300  004412  321C               	rrcf	(___aodiv@divisor+4)^0,f,c
 14301  004414  321B               	rrcf	(___aodiv@divisor+3)^0,f,c
 14302  004416  321A               	rrcf	(___aodiv@divisor+2)^0,f,c
 14303  004418  3219               	rrcf	(___aodiv@divisor+1)^0,f,c
 14304  00441A  3218               	rrcf	___aodiv@divisor^0,f,c
 14305  00441C  2E20               	decfsz	___aodiv@counter^0,f,c
 14306  00441E  EFD4  F021         	goto	l8018
 14307  004422                     l8030:
 14308  004422  5021               	movf	___aodiv@sign^0,w,c
 14309  004424  B4D8               	btfsc	status,2,c
 14310  004426  EF17  F022         	goto	u9841
 14311  00442A  EF19  F022         	goto	u9840
 14312  00442E                     u9841:
 14313  00442E  EF29  F022         	goto	l8034
 14314  004432                     u9840:
 14315  004432  1E29               	comf	(___aodiv@quotient+7)^0,f,c
 14316  004434  1E28               	comf	(___aodiv@quotient+6)^0,f,c
 14317  004436  1E27               	comf	(___aodiv@quotient+5)^0,f,c
 14318  004438  1E26               	comf	(___aodiv@quotient+4)^0,f,c
 14319  00443A  1E25               	comf	(___aodiv@quotient+3)^0,f,c
 14320  00443C  1E24               	comf	(___aodiv@quotient+2)^0,f,c
 14321  00443E  1E23               	comf	(___aodiv@quotient+1)^0,f,c
 14322  004440  6C22               	negf	___aodiv@quotient^0,c
 14323  004442  0E00               	movlw	0
 14324  004444  2223               	addwfc	(___aodiv@quotient+1)^0,f,c
 14325  004446  2224               	addwfc	(___aodiv@quotient+2)^0,f,c
 14326  004448  2225               	addwfc	(___aodiv@quotient+3)^0,f,c
 14327  00444A  2226               	addwfc	(___aodiv@quotient+4)^0,f,c
 14328  00444C  2227               	addwfc	(___aodiv@quotient+5)^0,f,c
 14329  00444E  2228               	addwfc	(___aodiv@quotient+6)^0,f,c
 14330  004450  2229               	addwfc	(___aodiv@quotient+7)^0,f,c
 14331  004452                     l8034:
 14332  004452  C022  F010         	movff	___aodiv@quotient,?___aodiv
 14333  004456  C023  F011         	movff	___aodiv@quotient+1,?___aodiv+1
 14334  00445A  C024  F012         	movff	___aodiv@quotient+2,?___aodiv+2
 14335  00445E  C025  F013         	movff	___aodiv@quotient+3,?___aodiv+3
 14336  004462  C026  F014         	movff	___aodiv@quotient+4,?___aodiv+4
 14337  004466  C027  F015         	movff	___aodiv@quotient+5,?___aodiv+5
 14338  00446A  C028  F016         	movff	___aodiv@quotient+6,?___aodiv+6
 14339  00446E  C029  F017         	movff	___aodiv@quotient+7,?___aodiv+7
 14340  004472  0012               	return		;funcret
 14341  004474                     __end_of___aodiv:
 14342                           	opt callstack 0
 14343                           
 14344 ;; *************** function _ctoa *****************
 14345 ;; Defined at:
 14346 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14347 ;; Parameters:    Size  Location     Type
 14348 ;;  fp              2   42[COMRAM] PTR struct _IO_FILE
 14349 ;;		 -> vsnprintf@f(6), 
 14350 ;;  c               1   44[COMRAM] unsigned char 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  w               2   45[COMRAM] int 
 14353 ;;  l               2    0        int 
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  2   42[COMRAM] int 
 14356 ;; Registers used:
 14357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14363 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14367 ;;Total ram usage:        5 bytes
 14368 ;; Hardware stack levels used:    1
 14369 ;; Hardware stack levels required when called:    9
 14370 ;; This function calls:
 14371 ;;		_pad
 14372 ;; This function is called by:
 14373 ;;		_vfpfcnvrt
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text35
 14378  005BC4                     __ptext35:
 14379                           	opt callstack 0
 14380  005BC4                     _ctoa:
 14381                           	opt callstack 17
 14382  005BC4                     
 14383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14384  005BC4  5043               	movf	_width^0,w,c
 14385  005BC6  1044               	iorwf	(_width+1)^0,w,c
 14386  005BC8  A4D8               	btfss	status,2,c
 14387  005BCA  EFE9  F02D         	goto	u10711
 14388  005BCE  EFEB  F02D         	goto	u10710
 14389  005BD2                     u10711:
 14390  005BD2  EFF1  F02D         	goto	l8580
 14391  005BD6                     u10710:
 14392  005BD6  C043  F02E         	movff	_width,ctoa@w
 14393  005BDA  C044  F02F         	movff	_width+1,ctoa@w+1
 14394  005BDE  EFF7  F02D         	goto	l8582
 14395  005BE2                     l8580:
 14396  005BE2  0EFF               	movlw	255
 14397  005BE4  2443               	addwf	_width^0,w,c
 14398  005BE6  6E2E               	movwf	ctoa@w^0,c
 14399  005BE8  0EFF               	movlw	255
 14400  005BEA  2044               	addwfc	(_width+1)^0,w,c
 14401  005BEC  6E2F               	movwf	(ctoa@w+1)^0,c
 14402  005BEE                     l8582:
 14403                           
 14404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14405  005BEE  C02D  F16C         	movff	ctoa@c,_dbuf
 14406  005BF2                     
 14407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14408  005BF2  0E00               	movlw	0
 14409  005BF4  0101               	movlb	1	; () banked
 14410  005BF6  6F6D               	movwf	(_dbuf+1)& (0+255),b
 14411  005BF8                     
 14412                           ; BSR set to: 1
 14413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14414  005BF8  C02B  F020         	movff	ctoa@fp,pad@fp
 14415  005BFC  C02C  F021         	movff	ctoa@fp+1,pad@fp+1
 14416  005C00  0E6C               	movlw	low _dbuf
 14417  005C02  6E22               	movwf	pad@buf^0,c
 14418  005C04  0E01               	movlw	high _dbuf
 14419  005C06  6E23               	movwf	(pad@buf+1)^0,c
 14420  005C08  C02E  F024         	movff	ctoa@w,pad@p
 14421  005C0C  C02F  F025         	movff	ctoa@w+1,pad@p+1
 14422  005C10  EC1A  F02B         	call	_pad	;wreg free
 14423  005C14  C020  F02B         	movff	?_pad,?_ctoa
 14424  005C18  C021  F02C         	movff	?_pad+1,?_ctoa+1
 14425  005C1C  0012               	return		;funcret
 14426  005C1E                     __end_of_ctoa:
 14427                           	opt callstack 0
 14428                           
 14429 ;; *************** function _pad *****************
 14430 ;; Defined at:
 14431 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 14434 ;;		 -> vsnprintf@f(6), 
 14435 ;;  buf             2   33[COMRAM] PTR unsigned char 
 14436 ;;		 -> dbuf(80), 
 14437 ;;  p               2   35[COMRAM] int 
 14438 ;; Auto vars:     Size  Location     Type
 14439 ;;  w               2   40[COMRAM] int 
 14440 ;;  i               2   38[COMRAM] int 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  2   31[COMRAM] int 
 14443 ;; Registers used:
 14444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14445 ;; Tracked objects:
 14446 ;;		On entry : 0/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14450 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14453 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14454 ;;Total ram usage:       11 bytes
 14455 ;; Hardware stack levels used:    1
 14456 ;; Hardware stack levels required when called:    8
 14457 ;; This function calls:
 14458 ;;		_fputc
 14459 ;;		_fputs
 14460 ;;		_strlen
 14461 ;; This function is called by:
 14462 ;;		_ctoa
 14463 ;;		_dtoa
 14464 ;;		_efgtoa
 14465 ;;		_otoa
 14466 ;;		_utoa
 14467 ;;		_xtoa
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text36
 14472  005634                     __ptext36:
 14473                           	opt callstack 0
 14474  005634                     _pad:
 14475                           	opt callstack 17
 14476  005634                     
 14477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14478  005634  A047               	btfss	_flags^0,0,c
 14479  005636  EF1F  F02B         	goto	u9441
 14480  00563A  EF21  F02B         	goto	u9440
 14481  00563E                     u9441:
 14482  00563E  EF2B  F02B         	goto	l7884
 14483  005642                     u9440:
 14484  005642                     
 14485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14486  005642  C022  F019         	movff	pad@buf,fputs@s
 14487  005646  C023  F01A         	movff	pad@buf+1,fputs@s+1
 14488  00564A  C020  F01B         	movff	pad@fp,fputs@fp
 14489  00564E  C021  F01C         	movff	pad@fp+1,fputs@fp+1
 14490  005652  ECC6  F02E         	call	_fputs	;wreg free
 14491  005656                     l7884:
 14492                           
 14493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14494  005656  BE25               	btfsc	(pad@p+1)^0,7,c
 14495  005658  EF30  F02B         	goto	u9451
 14496  00565C  EF32  F02B         	goto	u9450
 14497  005660                     u9451:
 14498  005660  EF38  F02B         	goto	l7888
 14499  005664                     u9450:
 14500  005664  C024  F029         	movff	pad@p,pad@w
 14501  005668  C025  F02A         	movff	pad@p+1,pad@w+1
 14502  00566C  EF3C  F02B         	goto	l661
 14503  005670                     l7888:
 14504  005670  0E00               	movlw	0
 14505  005672  6E2A               	movwf	(pad@w+1)^0,c
 14506  005674  0E00               	movlw	0
 14507  005676  6E29               	movwf	pad@w^0,c
 14508  005678                     l661:
 14509                           
 14510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14511  005678  0E00               	movlw	0
 14512  00567A  6E28               	movwf	(pad@i+1)^0,c
 14513  00567C  0E00               	movlw	0
 14514  00567E  6E27               	movwf	pad@i^0,c
 14515                           
 14516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14517  005680  EF4E  F02B         	goto	l7894
 14518  005684                     l7890:
 14519                           
 14520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14521  005684  0E00               	movlw	0
 14522  005686  6E11               	movwf	(fputc@c+1)^0,c
 14523  005688  0E20               	movlw	32
 14524  00568A  6E10               	movwf	fputc@c^0,c
 14525  00568C  C020  F012         	movff	pad@fp,fputc@fp
 14526  005690  C021  F013         	movff	pad@fp+1,fputc@fp+1
 14527  005694  EC53  F02A         	call	_fputc	;wreg free
 14528  005698                     
 14529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14530  005698  4A27               	infsnz	pad@i^0,f,c
 14531  00569A  2A28               	incf	(pad@i+1)^0,f,c
 14532  00569C                     l7894:
 14533                           
 14534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14535  00569C  5029               	movf	pad@w^0,w,c
 14536  00569E  5C27               	subwf	pad@i^0,w,c
 14537  0056A0  5028               	movf	(pad@i+1)^0,w,c
 14538  0056A2  0A80               	xorlw	128
 14539  0056A4  6E26               	movwf	??_pad^0,c
 14540  0056A6  502A               	movf	(pad@w+1)^0,w,c
 14541  0056A8  0A80               	xorlw	128
 14542  0056AA  5826               	subwfb	??_pad^0,w,c
 14543  0056AC  A0D8               	btfss	status,0,c
 14544  0056AE  EF5B  F02B         	goto	u9461
 14545  0056B2  EF5D  F02B         	goto	u9460
 14546  0056B6                     u9461:
 14547  0056B6  EF42  F02B         	goto	l7890
 14548  0056BA                     u9460:
 14549  0056BA                     
 14550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14551  0056BA  B047               	btfsc	_flags^0,0,c
 14552  0056BC  EF62  F02B         	goto	u9471
 14553  0056C0  EF64  F02B         	goto	u9470
 14554  0056C4                     u9471:
 14555  0056C4  EF6E  F02B         	goto	l7898
 14556  0056C8                     u9470:
 14557  0056C8                     
 14558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14559  0056C8  C022  F019         	movff	pad@buf,fputs@s
 14560  0056CC  C023  F01A         	movff	pad@buf+1,fputs@s+1
 14561  0056D0  C020  F01B         	movff	pad@fp,fputs@fp
 14562  0056D4  C021  F01C         	movff	pad@fp+1,fputs@fp+1
 14563  0056D8  ECC6  F02E         	call	_fputs	;wreg free
 14564  0056DC                     l7898:
 14565                           
 14566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14567  0056DC  C022  F010         	movff	pad@buf,strlen@s
 14568  0056E0  C023  F011         	movff	pad@buf+1,strlen@s+1
 14569  0056E4  ECD4  F02F         	call	_strlen	;wreg free
 14570  0056E8  5029               	movf	pad@w^0,w,c
 14571  0056EA  2410               	addwf	?_strlen^0,w,c
 14572  0056EC  6E20               	movwf	?_pad^0,c
 14573  0056EE  502A               	movf	(pad@w+1)^0,w,c
 14574  0056F0  2011               	addwfc	(?_strlen+1)^0,w,c
 14575  0056F2  6E21               	movwf	(?_pad+1)^0,c
 14576  0056F4  0012               	return		;funcret
 14577  0056F6                     __end_of_pad:
 14578                           	opt callstack 0
 14579                           
 14580 ;; *************** function _strlen *****************
 14581 ;; Defined at:
 14582 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14583 ;; Parameters:    Size  Location     Type
 14584 ;;  s               2   15[COMRAM] PTR const unsigned char 
 14585 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;  a               2   17[COMRAM] PTR const unsigned char 
 14588 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  2   15[COMRAM] unsigned int 
 14591 ;; Registers used:
 14592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14602 ;;Total ram usage:        4 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    5
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		_pad
 14609 ;;		_stoa
 14610 ;; This function uses a non-reentrant model
 14611 ;;
 14612                           
 14613                           	psect	text37
 14614  005FA8                     __ptext37:
 14615                           	opt callstack 0
 14616  005FA8                     _strlen:
 14617                           	opt callstack 19
 14618  005FA8  C010  F012         	movff	strlen@s,strlen@a
 14619  005FAC  C011  F013         	movff	strlen@s+1,strlen@a+1
 14620  005FB0  EFDC  F02F         	goto	l7662
 14621  005FB4                     l7660:
 14622  005FB4  4A10               	infsnz	strlen@s^0,f,c
 14623  005FB6  2A11               	incf	(strlen@s+1)^0,f,c
 14624  005FB8                     l7662:
 14625  005FB8  C010  FFD9         	movff	strlen@s,fsr2l
 14626  005FBC  C011  FFDA         	movff	strlen@s+1,fsr2h
 14627  005FC0  50DF               	movf	indf2,w,c
 14628  005FC2  A4D8               	btfss	status,2,c
 14629  005FC4  EFE6  F02F         	goto	u8991
 14630  005FC8  EFE8  F02F         	goto	u8990
 14631  005FCC                     u8991:
 14632  005FCC  EFDA  F02F         	goto	l7660
 14633  005FD0                     u8990:
 14634  005FD0  5012               	movf	strlen@a^0,w,c
 14635  005FD2  5C10               	subwf	strlen@s^0,w,c
 14636  005FD4  6E10               	movwf	?_strlen^0,c
 14637  005FD6  5013               	movf	(strlen@a+1)^0,w,c
 14638  005FD8  5811               	subwfb	(strlen@s+1)^0,w,c
 14639  005FDA  6E11               	movwf	(?_strlen+1)^0,c
 14640  005FDC  0012               	return		;funcret
 14641  005FDE                     __end_of_strlen:
 14642                           	opt callstack 0
 14643                           
 14644 ;; *************** function _fputs *****************
 14645 ;; Defined at:
 14646 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14647 ;; Parameters:    Size  Location     Type
 14648 ;;  s               2   24[COMRAM] PTR const unsigned char 
 14649 ;;		 -> dbuf(80), 
 14650 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 14651 ;;		 -> vsnprintf@f(6), 
 14652 ;; Auto vars:     Size  Location     Type
 14653 ;;  i               2   29[COMRAM] int 
 14654 ;;  c               1   28[COMRAM] unsigned char 
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  2   24[COMRAM] int 
 14657 ;; Registers used:
 14658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14665 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14667 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14668 ;;Total ram usage:        7 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; Hardware stack levels required when called:    7
 14671 ;; This function calls:
 14672 ;;		_fputc
 14673 ;; This function is called by:
 14674 ;;		_pad
 14675 ;; This function uses a non-reentrant model
 14676 ;;
 14677                           
 14678                           	psect	text38
 14679  005D8C                     __ptext38:
 14680                           	opt callstack 0
 14681  005D8C                     _fputs:
 14682                           	opt callstack 17
 14683  005D8C  0E00               	movlw	0
 14684  005D8E  6E1F               	movwf	(fputs@i+1)^0,c
 14685  005D90  0E00               	movlw	0
 14686  005D92  6E1E               	movwf	fputs@i^0,c
 14687  005D94  EFD7  F02E         	goto	l7656
 14688  005D98                     l7652:
 14689  005D98  C01D  F010         	movff	fputs@c,fputc@c
 14690  005D9C  6A11               	clrf	(fputc@c+1)^0,c
 14691  005D9E  C01B  F012         	movff	fputs@fp,fputc@fp
 14692  005DA2  C01C  F013         	movff	fputs@fp+1,fputc@fp+1
 14693  005DA6  EC53  F02A         	call	_fputc	;wreg free
 14694  005DAA  4A1E               	infsnz	fputs@i^0,f,c
 14695  005DAC  2A1F               	incf	(fputs@i+1)^0,f,c
 14696  005DAE                     l7656:
 14697  005DAE  501E               	movf	fputs@i^0,w,c
 14698  005DB0  2419               	addwf	fputs@s^0,w,c
 14699  005DB2  6ED9               	movwf	fsr2l,c
 14700  005DB4  501F               	movf	(fputs@i+1)^0,w,c
 14701  005DB6  201A               	addwfc	(fputs@s+1)^0,w,c
 14702  005DB8  6EDA               	movwf	fsr2h,c
 14703  005DBA  50DF               	movf	indf2,w,c
 14704  005DBC  6E1D               	movwf	fputs@c^0,c
 14705  005DBE  501D               	movf	fputs@c^0,w,c
 14706  005DC0  A4D8               	btfss	status,2,c
 14707  005DC2  EFE5  F02E         	goto	u8981
 14708  005DC6  EFE7  F02E         	goto	u8980
 14709  005DCA                     u8981:
 14710  005DCA  EFCC  F02E         	goto	l7652
 14711  005DCE                     u8980:
 14712  005DCE  0012               	return		;funcret
 14713  005DD0                     __end_of_fputs:
 14714                           	opt callstack 0
 14715                           
 14716 ;; *************** function _fputc *****************
 14717 ;; Defined at:
 14718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14719 ;; Parameters:    Size  Location     Type
 14720 ;;  c               2   15[COMRAM] int 
 14721 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
 14722 ;;		 -> vsnprintf@f(6), 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  2   15[COMRAM] int 
 14727 ;; Registers used:
 14728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14736 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14737 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14738 ;;Total ram usage:        9 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    6
 14741 ;; This function calls:
 14742 ;;		_putch
 14743 ;; This function is called by:
 14744 ;;		_pad
 14745 ;;		_stoa
 14746 ;;		_vfpfcnvrt
 14747 ;;		_fputs
 14748 ;; This function uses a non-reentrant model
 14749 ;;
 14750                           
 14751                           	psect	text39
 14752  0054A6                     __ptext39:
 14753                           	opt callstack 0
 14754  0054A6                     _fputc:
 14755                           	opt callstack 17
 14756  0054A6  5012               	movf	fputc@fp^0,w,c
 14757  0054A8  1013               	iorwf	(fputc@fp+1)^0,w,c
 14758  0054AA  B4D8               	btfsc	status,2,c
 14759  0054AC  EF5A  F02A         	goto	u8941
 14760  0054B0  EF5C  F02A         	goto	u8940
 14761  0054B4                     u8941:
 14762  0054B4  EF65  F02A         	goto	l7640
 14763  0054B8                     u8940:
 14764  0054B8  5012               	movf	fputc@fp^0,w,c
 14765  0054BA  1013               	iorwf	(fputc@fp+1)^0,w,c
 14766  0054BC  A4D8               	btfss	status,2,c
 14767  0054BE  EF63  F02A         	goto	u8951
 14768  0054C2  EF65  F02A         	goto	u8950
 14769  0054C6                     u8951:
 14770  0054C6  EF6A  F02A         	goto	l7642
 14771  0054CA                     u8950:
 14772  0054CA                     l7640:
 14773  0054CA  5010               	movf	fputc@c^0,w,c
 14774  0054CC  ECB3  F031         	call	_putch
 14775  0054D0  EFB7  F02A         	goto	l1740
 14776  0054D4                     l7642:
 14777  0054D4  EE20 F004          	lfsr	2,4
 14778  0054D8  5012               	movf	fputc@fp^0,w,c
 14779  0054DA  26D9               	addwf	fsr2l,f,c
 14780  0054DC  5013               	movf	(fputc@fp+1)^0,w,c
 14781  0054DE  22DA               	addwfc	fsr2h,f,c
 14782  0054E0  50DE               	movf	postinc2,w,c
 14783  0054E2  10DE               	iorwf	postinc2,w,c
 14784  0054E4  B4D8               	btfsc	status,2,c
 14785  0054E6  EF77  F02A         	goto	u8961
 14786  0054EA  EF79  F02A         	goto	u8960
 14787  0054EE                     u8961:
 14788  0054EE  EF94  F02A         	goto	l7646
 14789  0054F2                     u8960:
 14790  0054F2  EE20 F004          	lfsr	2,4
 14791  0054F6  5012               	movf	fputc@fp^0,w,c
 14792  0054F8  26D9               	addwf	fsr2l,f,c
 14793  0054FA  5013               	movf	(fputc@fp+1)^0,w,c
 14794  0054FC  22DA               	addwfc	fsr2h,f,c
 14795  0054FE  EE10 F002          	lfsr	1,2
 14796  005502  5012               	movf	fputc@fp^0,w,c
 14797  005504  26E1               	addwf	fsr1l,f,c
 14798  005506  5013               	movf	(fputc@fp+1)^0,w,c
 14799  005508  22E2               	addwfc	fsr1h,f,c
 14800  00550A  50DE               	movf	postinc2,w,c
 14801  00550C  5CE6               	subwf	postinc1,w,c
 14802  00550E  50E6               	movf	postinc1,w,c
 14803  005510  0A80               	xorlw	128
 14804  005512  6E18               	movwf	(??_fputc+4)^0,c
 14805  005514  50DE               	movf	postinc2,w,c
 14806  005516  0A80               	xorlw	128
 14807  005518  5818               	subwfb	(??_fputc+4)^0,w,c
 14808  00551A  B0D8               	btfsc	status,0,c
 14809  00551C  EF92  F02A         	goto	u8971
 14810  005520  EF94  F02A         	goto	u8970
 14811  005524                     u8971:
 14812  005524  EFB7  F02A         	goto	l1740
 14813  005528                     u8970:
 14814  005528                     l7646:
 14815  005528  EE20 F002          	lfsr	2,2
 14816  00552C  5012               	movf	fputc@fp^0,w,c
 14817  00552E  26D9               	addwf	fsr2l,f,c
 14818  005530  5013               	movf	(fputc@fp+1)^0,w,c
 14819  005532  22DA               	addwfc	fsr2h,f,c
 14820  005534  CFDE F014          	movff	postinc2,??_fputc
 14821  005538  CFDD F015          	movff	postdec2,??_fputc+1
 14822  00553C  C012  FFD9         	movff	fputc@fp,fsr2l
 14823  005540  C013  FFDA         	movff	fputc@fp+1,fsr2h
 14824  005544  CFDE F016          	movff	postinc2,??_fputc+2
 14825  005548  CFDD F017          	movff	postdec2,??_fputc+3
 14826  00554C  5014               	movf	??_fputc^0,w,c
 14827  00554E  2416               	addwf	(??_fputc+2)^0,w,c
 14828  005550  6ED9               	movwf	fsr2l,c
 14829  005552  5015               	movf	(??_fputc+1)^0,w,c
 14830  005554  2017               	addwfc	(??_fputc+3)^0,w,c
 14831  005556  6EDA               	movwf	fsr2h,c
 14832  005558  C010  FFDF         	movff	fputc@c,indf2
 14833  00555C  EE20 F002          	lfsr	2,2
 14834  005560  5012               	movf	fputc@fp^0,w,c
 14835  005562  26D9               	addwf	fsr2l,f,c
 14836  005564  5013               	movf	(fputc@fp+1)^0,w,c
 14837  005566  22DA               	addwfc	fsr2h,f,c
 14838  005568  2ADE               	incf	postinc2,f,c
 14839  00556A  0E00               	movlw	0
 14840  00556C  22DD               	addwfc	postdec2,f,c
 14841  00556E                     l1740:
 14842  00556E  0012               	return		;funcret
 14843  005570                     __end_of_fputc:
 14844                           	opt callstack 0
 14845                           
 14846 ;; *************** function _putch *****************
 14847 ;; Defined at:
 14848 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;  c               1    wreg     unsigned char 
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;  c               1    0[COMRAM] unsigned char 
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1    wreg      void 
 14855 ;; Registers used:
 14856 ;;		wreg
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;Total ram usage:        0 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; Hardware stack levels required when called:    5
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_fputc
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text40
 14877  006366                     __ptext40:
 14878                           	opt callstack 0
 14879  006366                     _putch:
 14880                           	opt callstack 17
 14881  006366  0012               	return		;funcret
 14882  006368                     __end_of_putch:
 14883                           	opt callstack 0
 14884                           
 14885 ;; *************** function _atoi *****************
 14886 ;; Defined at:
 14887 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14888 ;; Parameters:    Size  Location     Type
 14889 ;;  s               2   22[COMRAM] PTR const unsigned char 
 14890 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
 14891 ;; Auto vars:     Size  Location     Type
 14892 ;;  n               2   35[COMRAM] int 
 14893 ;;  neg             2   28[COMRAM] int 
 14894 ;; Return value:  Size  Location     Type
 14895 ;;                  2   22[COMRAM] int 
 14896 ;; Registers used:
 14897 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14898 ;; Tracked objects:
 14899 ;;		On entry : 0/0
 14900 ;;		On exit  : 0/0
 14901 ;;		Unchanged: 0/0
 14902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14903 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14904 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14906 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14907 ;;Total ram usage:       15 bytes
 14908 ;; Hardware stack levels used:    1
 14909 ;; Hardware stack levels required when called:    6
 14910 ;; This function calls:
 14911 ;;		___wmul
 14912 ;;		_isdigit
 14913 ;;		_isspace
 14914 ;; This function is called by:
 14915 ;;		_vfpfcnvrt
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           	psect	text41
 14920  004152                     __ptext41:
 14921                           	opt callstack 0
 14922  004152                     _atoi:
 14923                           	opt callstack 20
 14924  004152  0E00               	movlw	0
 14925  004154  6E25               	movwf	(atoi@n+1)^0,c
 14926  004156  0E00               	movlw	0
 14927  004158  6E24               	movwf	atoi@n^0,c
 14928  00415A  0E00               	movlw	0
 14929  00415C  6E1E               	movwf	(atoi@neg+1)^0,c
 14930  00415E  0E00               	movlw	0
 14931  004160  6E1D               	movwf	atoi@neg^0,c
 14932  004162  EFB5  F020         	goto	l9146
 14933  004166                     l9144:
 14934  004166  4A17               	infsnz	atoi@s^0,f,c
 14935  004168  2A18               	incf	(atoi@s+1)^0,f,c
 14936  00416A                     l9146:
 14937  00416A  0E01               	movlw	1
 14938  00416C  6E23               	movwf	_atoi$2366^0,c
 14939  00416E  C017  FFF6         	movff	atoi@s,tblptrl
 14940  004172  C018  FFF7         	movff	atoi@s+1,tblptrh
 14941  004176                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14942  004176  6AF8               	clrf	tblptru,c
 14943  004178                     	endif
 14944  004178                     	if	0	;tblptru may be non-zero
 14945  004178                     	endif
 14946  004178  0008               	tblrd		*
 14947  00417A  50F5               	movf	tablat,w,c
 14948  00417C  0A20               	xorlw	32
 14949  00417E  B4D8               	btfsc	status,2,c
 14950  004180  EFC4  F020         	goto	u11821
 14951  004184  EFC6  F020         	goto	u11820
 14952  004188                     u11821:
 14953  004188  EFE4  F020         	goto	l9154
 14954  00418C                     u11820:
 14955  00418C  0EF7               	movlw	247
 14956  00418E  6E19               	movwf	??_atoi^0,c
 14957  004190  0EFF               	movlw	255
 14958  004192  6E1A               	movwf	(??_atoi+1)^0,c
 14959  004194  C017  FFF6         	movff	atoi@s,tblptrl
 14960  004198  C018  FFF7         	movff	atoi@s+1,tblptrh
 14961  00419C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14962  00419C  6AF8               	clrf	tblptru,c
 14963  00419E                     	endif
 14964  00419E                     	if	0	;tblptru may be non-zero
 14965  00419E                     	endif
 14966  00419E  0008               	tblrd		*
 14967  0041A0  50F5               	movf	tablat,w,c
 14968  0041A2  6E1B               	movwf	(??_atoi+2)^0,c
 14969  0041A4  6A1C               	clrf	(??_atoi+3)^0,c
 14970  0041A6  5019               	movf	??_atoi^0,w,c
 14971  0041A8  261B               	addwf	(??_atoi+2)^0,f,c
 14972  0041AA  501A               	movf	(??_atoi+1)^0,w,c
 14973  0041AC  221C               	addwfc	(??_atoi+3)^0,f,c
 14974  0041AE  501C               	movf	(??_atoi+3)^0,w,c
 14975  0041B0  E109               	bnz	u11830
 14976  0041B2  0E05               	movlw	5
 14977  0041B4  5C1B               	subwf	(??_atoi+2)^0,w,c
 14978  0041B6  A0D8               	btfss	status,0,c
 14979  0041B8  EFE0  F020         	goto	u11831
 14980  0041BC  EFE2  F020         	goto	u11830
 14981  0041C0                     u11831:
 14982  0041C0  EFE4  F020         	goto	l9154
 14983  0041C4                     u11830:
 14984  0041C4  0E00               	movlw	0
 14985  0041C6  6E23               	movwf	_atoi$2366^0,c
 14986  0041C8                     l9154:
 14987  0041C8  C023  F01F         	movff	_atoi$2366,_atoi$2365
 14988  0041CC  6A20               	clrf	(_atoi$2365+1)^0,c
 14989  0041CE  501F               	movf	_atoi$2365^0,w,c
 14990  0041D0  1020               	iorwf	(_atoi$2365+1)^0,w,c
 14991  0041D2  A4D8               	btfss	status,2,c
 14992  0041D4  EFEE  F020         	goto	u11841
 14993  0041D8  EFF0  F020         	goto	u11840
 14994  0041DC                     u11841:
 14995  0041DC  EFB3  F020         	goto	l9144
 14996  0041E0                     u11840:
 14997  0041E0  EFFA  F020         	goto	l9164
 14998  0041E4                     l9160:
 14999  0041E4  0E00               	movlw	0
 15000  0041E6  6E1E               	movwf	(atoi@neg+1)^0,c
 15001  0041E8  0E01               	movlw	1
 15002  0041EA  6E1D               	movwf	atoi@neg^0,c
 15003  0041EC                     l9162:
 15004  0041EC  4A17               	infsnz	atoi@s^0,f,c
 15005  0041EE  2A18               	incf	(atoi@s+1)^0,f,c
 15006  0041F0  EF31  F021         	goto	l9170
 15007  0041F4                     l9164:
 15008  0041F4  C017  FFF6         	movff	atoi@s,tblptrl
 15009  0041F8  C018  FFF7         	movff	atoi@s+1,tblptrh
 15010  0041FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15011  0041FC  6AF8               	clrf	tblptru,c
 15012  0041FE                     	endif
 15013  0041FE                     	if	0	;tblptru may be non-zero
 15014  0041FE                     	endif
 15015  0041FE  0008               	tblrd		*
 15016  004200  50F5               	movf	tablat,w,c
 15017  004202  6E19               	movwf	??_atoi^0,c
 15018  004204  6A1A               	clrf	(??_atoi+1)^0,c
 15019                           
 15020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15021                           ; Switch size 1, requested type "simple"
 15022                           ; Number of cases is 1, Range of values is 0 to 0
 15023                           ; switch strategies available:
 15024                           ; Name         Instructions Cycles
 15025                           ; simple_byte            4     3 (average)
 15026                           ;	Chosen strategy is simple_byte
 15027  004206  501A               	movf	(??_atoi+1)^0,w,c
 15028  004208  0A00               	xorlw	0	; case 0
 15029  00420A  B4D8               	btfsc	status,2,c
 15030  00420C  EF0A  F021         	goto	l10164
 15031  004210  EF31  F021         	goto	l9170
 15032  004214                     l10164:
 15033                           
 15034                           ; Switch size 1, requested type "simple"
 15035                           ; Number of cases is 2, Range of values is 43 to 45
 15036                           ; switch strategies available:
 15037                           ; Name         Instructions Cycles
 15038                           ; simple_byte            7     4 (average)
 15039                           ;	Chosen strategy is simple_byte
 15040  004214  5019               	movf	??_atoi^0,w,c
 15041  004216  0A2B               	xorlw	43	; case 43
 15042  004218  B4D8               	btfsc	status,2,c
 15043  00421A  EFF6  F020         	goto	l9162
 15044  00421E  0A06               	xorlw	6	; case 45
 15045  004220  B4D8               	btfsc	status,2,c
 15046  004222  EFF2  F020         	goto	l9160
 15047  004226  EF31  F021         	goto	l9170
 15048  00422A                     l9166:
 15049  00422A  C024  F010         	movff	atoi@n,___wmul@multiplier
 15050  00422E  C025  F011         	movff	atoi@n+1,___wmul@multiplier+1
 15051  004232  0E00               	movlw	0
 15052  004234  6E13               	movwf	(___wmul@multiplicand+1)^0,c
 15053  004236  0E0A               	movlw	10
 15054  004238  6E12               	movwf	___wmul@multiplicand^0,c
 15055  00423A  ECD3  F030         	call	___wmul	;wreg free
 15056  00423E  C017  FFF6         	movff	atoi@s,tblptrl
 15057  004242  C018  FFF7         	movff	atoi@s+1,tblptrh
 15058  004246                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15059  004246  6AF8               	clrf	tblptru,c
 15060  004248                     	endif
 15061  004248                     	if	0	;tblptru may be non-zero
 15062  004248                     	endif
 15063  004248  0008               	tblrd		*
 15064  00424A  50F5               	movf	tablat,w,c
 15065  00424C  5E10               	subwf	?___wmul^0,f,c
 15066  00424E  0E00               	movlw	0
 15067  004250  5A11               	subwfb	(?___wmul+1)^0,f,c
 15068  004252  0E30               	movlw	48
 15069  004254  2410               	addwf	?___wmul^0,w,c
 15070  004256  6E24               	movwf	atoi@n^0,c
 15071  004258  0E00               	movlw	0
 15072  00425A  2011               	addwfc	(?___wmul+1)^0,w,c
 15073  00425C  6E25               	movwf	(atoi@n+1)^0,c
 15074  00425E  EFF6  F020         	goto	l9162
 15075  004262                     l9170:
 15076  004262  0ED0               	movlw	208
 15077  004264  6E19               	movwf	??_atoi^0,c
 15078  004266  0EFF               	movlw	255
 15079  004268  6E1A               	movwf	(??_atoi+1)^0,c
 15080  00426A  C017  FFF6         	movff	atoi@s,tblptrl
 15081  00426E  C018  FFF7         	movff	atoi@s+1,tblptrh
 15082  004272                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15083  004272  6AF8               	clrf	tblptru,c
 15084  004274                     	endif
 15085  004274                     	if	0	;tblptru may be non-zero
 15086  004274                     	endif
 15087  004274  0008               	tblrd		*
 15088  004276  50F5               	movf	tablat,w,c
 15089  004278  6E1B               	movwf	(??_atoi+2)^0,c
 15090  00427A  6A1C               	clrf	(??_atoi+3)^0,c
 15091  00427C  5019               	movf	??_atoi^0,w,c
 15092  00427E  261B               	addwf	(??_atoi+2)^0,f,c
 15093  004280  501A               	movf	(??_atoi+1)^0,w,c
 15094  004282  221C               	addwfc	(??_atoi+3)^0,f,c
 15095  004284  501C               	movf	(??_atoi+3)^0,w,c
 15096  004286  E10A               	bnz	u11850
 15097  004288  0E0A               	movlw	10
 15098  00428A  5C1B               	subwf	(??_atoi+2)^0,w,c
 15099  00428C  A0D8               	btfss	status,0,c
 15100  00428E  EF4B  F021         	goto	u11851
 15101  004292  EF4E  F021         	goto	u11850
 15102  004296                     u11851:
 15103  004296  0E01               	movlw	1
 15104  004298  EF4F  F021         	goto	u11860
 15105  00429C                     u11850:
 15106  00429C  0E00               	movlw	0
 15107  00429E                     u11860:
 15108  00429E  6E21               	movwf	_atoi$2367^0,c
 15109  0042A0  6A22               	clrf	(_atoi$2367+1)^0,c
 15110  0042A2  5021               	movf	_atoi$2367^0,w,c
 15111  0042A4  1022               	iorwf	(_atoi$2367+1)^0,w,c
 15112  0042A6  A4D8               	btfss	status,2,c
 15113  0042A8  EF58  F021         	goto	u11871
 15114  0042AC  EF5A  F021         	goto	u11870
 15115  0042B0                     u11871:
 15116  0042B0  EF15  F021         	goto	l9166
 15117  0042B4                     u11870:
 15118  0042B4  501D               	movf	atoi@neg^0,w,c
 15119  0042B6  101E               	iorwf	(atoi@neg+1)^0,w,c
 15120  0042B8  A4D8               	btfss	status,2,c
 15121  0042BA  EF61  F021         	goto	u11881
 15122  0042BE  EF63  F021         	goto	u11880
 15123  0042C2                     u11881:
 15124  0042C2  EF71  F021         	goto	l1686
 15125  0042C6                     u11880:
 15126  0042C6  C024  F019         	movff	atoi@n,??_atoi
 15127  0042CA  C025  F01A         	movff	atoi@n+1,??_atoi+1
 15128  0042CE  1E19               	comf	??_atoi^0,f,c
 15129  0042D0  1E1A               	comf	(??_atoi+1)^0,f,c
 15130  0042D2  4A19               	infsnz	??_atoi^0,f,c
 15131  0042D4  2A1A               	incf	(??_atoi+1)^0,f,c
 15132  0042D6  C019  F017         	movff	??_atoi,?_atoi
 15133  0042DA  C01A  F018         	movff	??_atoi+1,?_atoi+1
 15134  0042DE  EF75  F021         	goto	l1689
 15135  0042E2                     l1686:
 15136  0042E2  C024  F017         	movff	atoi@n,?_atoi
 15137  0042E6  C025  F018         	movff	atoi@n+1,?_atoi+1
 15138  0042EA                     l1689:
 15139  0042EA  0012               	return		;funcret
 15140  0042EC                     __end_of_atoi:
 15141                           	opt callstack 0
 15142                           
 15143 ;; *************** function _isspace *****************
 15144 ;; Defined at:
 15145 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  c               2   15[COMRAM] int 
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;		None
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  2   15[COMRAM] int 
 15152 ;; Registers used:
 15153 ;;		wreg, status,2, status,0
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/0
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15162 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15163 ;;Total ram usage:        7 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; Hardware stack levels required when called:    5
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_atoi
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           	psect	text42
 15174  005C1E                     __ptext42:
 15175                           	opt callstack 0
 15176  005C1E                     _isspace:
 15177                           	opt callstack 20
 15178  005C1E  0E01               	movlw	1
 15179  005C20  6E16               	movwf	_isspace$2405^0,c
 15180  005C22  0E20               	movlw	32
 15181  005C24  1810               	xorwf	isspace@c^0,w,c
 15182  005C26  1011               	iorwf	(isspace@c+1)^0,w,c
 15183  005C28  B4D8               	btfsc	status,2,c
 15184  005C2A  EF19  F02E         	goto	u10681
 15185  005C2E  EF1B  F02E         	goto	u10680
 15186  005C32                     u10681:
 15187  005C32  EF34  F02E         	goto	l8564
 15188  005C36                     u10680:
 15189  005C36  0EF7               	movlw	247
 15190  005C38  6E12               	movwf	??_isspace^0,c
 15191  005C3A  0EFF               	movlw	255
 15192  005C3C  6E13               	movwf	(??_isspace+1)^0,c
 15193  005C3E  C010  F014         	movff	isspace@c,??_isspace+2
 15194  005C42  C011  F015         	movff	isspace@c+1,??_isspace+3
 15195  005C46  5012               	movf	??_isspace^0,w,c
 15196  005C48  2614               	addwf	(??_isspace+2)^0,f,c
 15197  005C4A  5013               	movf	(??_isspace+1)^0,w,c
 15198  005C4C  2215               	addwfc	(??_isspace+3)^0,f,c
 15199  005C4E  5015               	movf	(??_isspace+3)^0,w,c
 15200  005C50  E109               	bnz	u10690
 15201  005C52  0E05               	movlw	5
 15202  005C54  5C14               	subwf	(??_isspace+2)^0,w,c
 15203  005C56  A0D8               	btfss	status,0,c
 15204  005C58  EF30  F02E         	goto	u10691
 15205  005C5C  EF32  F02E         	goto	u10690
 15206  005C60                     u10691:
 15207  005C60  EF34  F02E         	goto	l8564
 15208  005C64                     u10690:
 15209  005C64  0E00               	movlw	0
 15210  005C66  6E16               	movwf	_isspace$2405^0,c
 15211  005C68                     l8564:
 15212  005C68  C016  F010         	movff	_isspace$2405,?_isspace
 15213  005C6C  6A11               	clrf	(?_isspace+1)^0,c
 15214  005C6E  0012               	return		;funcret
 15215  005C70                     __end_of_isspace:
 15216                           	opt callstack 0
 15217                           
 15218 ;; *************** function _isdigit *****************
 15219 ;; Defined at:
 15220 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;  c               2   15[COMRAM] int 
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  2   15[COMRAM] int 
 15227 ;; Registers used:
 15228 ;;		wreg, status,2, status,0
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15238 ;;Total ram usage:        6 bytes
 15239 ;; Hardware stack levels used:    1
 15240 ;; Hardware stack levels required when called:    5
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_vfpfcnvrt
 15245 ;;		_atoi
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text43
 15250  005F70                     __ptext43:
 15251                           	opt callstack 0
 15252  005F70                     _isdigit:
 15253                           	opt callstack 21
 15254  005F70  0ED0               	movlw	208
 15255  005F72  6E12               	movwf	??_isdigit^0,c
 15256  005F74  0EFF               	movlw	255
 15257  005F76  6E13               	movwf	(??_isdigit+1)^0,c
 15258  005F78  C010  F014         	movff	isdigit@c,??_isdigit+2
 15259  005F7C  C011  F015         	movff	isdigit@c+1,??_isdigit+3
 15260  005F80  5012               	movf	??_isdigit^0,w,c
 15261  005F82  2614               	addwf	(??_isdigit+2)^0,f,c
 15262  005F84  5013               	movf	(??_isdigit+1)^0,w,c
 15263  005F86  2215               	addwfc	(??_isdigit+3)^0,f,c
 15264  005F88  5015               	movf	(??_isdigit+3)^0,w,c
 15265  005F8A  E10A               	bnz	u9760
 15266  005F8C  0E0A               	movlw	10
 15267  005F8E  5C14               	subwf	(??_isdigit+2)^0,w,c
 15268  005F90  A0D8               	btfss	status,0,c
 15269  005F92  EFCD  F02F         	goto	u9761
 15270  005F96  EFD0  F02F         	goto	u9760
 15271  005F9A                     u9761:
 15272  005F9A  0E01               	movlw	1
 15273  005F9C  EFD1  F02F         	goto	u9770
 15274  005FA0                     u9760:
 15275  005FA0  0E00               	movlw	0
 15276  005FA2                     u9770:
 15277  005FA2  6E10               	movwf	?_isdigit^0,c
 15278  005FA4  6A11               	clrf	(?_isdigit+1)^0,c
 15279  005FA6  0012               	return		;funcret
 15280  005FA8                     __end_of_isdigit:
 15281                           	opt callstack 0
 15282                           
 15283 ;; *************** function ___wmul *****************
 15284 ;; Defined at:
 15285 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;  multiplier      2   15[COMRAM] unsigned int 
 15288 ;;  multiplicand    2   17[COMRAM] unsigned int 
 15289 ;; Auto vars:     Size  Location     Type
 15290 ;;  product         2   19[COMRAM] unsigned int 
 15291 ;; Return value:  Size  Location     Type
 15292 ;;                  2   15[COMRAM] unsigned int 
 15293 ;; Registers used:
 15294 ;;		wreg, status,2, status,0, prodl, prodh
 15295 ;; Tracked objects:
 15296 ;;		On entry : 0/0
 15297 ;;		On exit  : 0/0
 15298 ;;		Unchanged: 0/0
 15299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15303 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15304 ;;Total ram usage:        6 bytes
 15305 ;; Hardware stack levels used:    1
 15306 ;; Hardware stack levels required when called:    5
 15307 ;; This function calls:
 15308 ;;		Nothing
 15309 ;; This function is called by:
 15310 ;;		_atoi
 15311 ;; This function uses a non-reentrant model
 15312 ;;
 15313                           
 15314                           	psect	text44
 15315  0061A6                     __ptext44:
 15316                           	opt callstack 0
 15317  0061A6                     ___wmul:
 15318                           	opt callstack 20
 15319  0061A6  5010               	movf	___wmul@multiplier^0,w,c
 15320  0061A8  0212               	mulwf	___wmul@multiplicand^0,c
 15321  0061AA  CFF3 F014          	movff	prodl,___wmul@product
 15322  0061AE  CFF4 F015          	movff	prodh,___wmul@product+1
 15323  0061B2  5010               	movf	___wmul@multiplier^0,w,c
 15324  0061B4  0213               	mulwf	(___wmul@multiplicand+1)^0,c
 15325  0061B6  50F3               	movf	243,w,c
 15326  0061B8  2615               	addwf	(___wmul@product+1)^0,f,c
 15327  0061BA  5011               	movf	(___wmul@multiplier+1)^0,w,c
 15328  0061BC  0212               	mulwf	___wmul@multiplicand^0,c
 15329  0061BE  50F3               	movf	243,w,c
 15330  0061C0  2615               	addwf	(___wmul@product+1)^0,f,c
 15331  0061C2  C014  F010         	movff	___wmul@product,?___wmul
 15332  0061C6  C015  F011         	movff	___wmul@product+1,?___wmul+1
 15333  0061CA  0012               	return		;funcret
 15334  0061CC                     __end_of___wmul:
 15335                           	opt callstack 0
 15336                           
 15337 ;; *************** function _lcd_init *****************
 15338 ;; Defined at:
 15339 ;;		line 32 in file "lib_ili9341.c"
 15340 ;; Parameters:    Size  Location     Type
 15341 ;;		None
 15342 ;; Auto vars:     Size  Location     Type
 15343 ;;		None
 15344 ;; Return value:  Size  Location     Type
 15345 ;;                  1    wreg      void 
 15346 ;; Registers used:
 15347 ;;		wreg, status,2, status,0, cstack
 15348 ;; Tracked objects:
 15349 ;;		On entry : 0/0
 15350 ;;		On exit  : 0/0
 15351 ;;		Unchanged: 0/0
 15352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15357 ;;Total ram usage:        0 bytes
 15358 ;; Hardware stack levels used:    1
 15359 ;; Hardware stack levels required when called:   10
 15360 ;; This function calls:
 15361 ;;		_lcd_fill
 15362 ;;		_lcd_send
 15363 ;;		_msDelay
 15364 ;; This function is called by:
 15365 ;;		_main
 15366 ;; This function uses a non-reentrant model
 15367 ;;
 15368                           
 15369                           	psect	text45
 15370  002DDE                     __ptext45:
 15371                           	opt callstack 0
 15372  002DDE                     _lcd_init:
 15373                           	opt callstack 20
 15374  002DDE                     
 15375                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
 15376  002DDE  0E01               	movlw	1
 15377  002DE0  6E11               	movwf	lcd_send@value^0,c
 15378  002DE2  0E00               	movlw	0
 15379  002DE4  EC47  F031         	call	_lcd_send
 15380  002DE8                     
 15381                           ;lib_ili9341.c: 36:     msDelay(150);
 15382  002DE8  0E96               	movlw	150
 15383  002DEA  EC38  F030         	call	_msDelay
 15384  002DEE                     
 15385                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
 15386  002DEE  0EEF               	movlw	239
 15387  002DF0  6E11               	movwf	lcd_send@value^0,c
 15388  002DF2  0E00               	movlw	0
 15389  002DF4  EC47  F031         	call	_lcd_send
 15390  002DF8                     
 15391                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
 15392  002DF8  0E03               	movlw	3
 15393  002DFA  6E11               	movwf	lcd_send@value^0,c
 15394  002DFC  0E01               	movlw	1
 15395  002DFE  EC47  F031         	call	_lcd_send
 15396  002E02                     
 15397                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
 15398  002E02  0E80               	movlw	128
 15399  002E04  6E11               	movwf	lcd_send@value^0,c
 15400  002E06  0E01               	movlw	1
 15401  002E08  EC47  F031         	call	_lcd_send
 15402  002E0C                     
 15403                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
 15404  002E0C  0E02               	movlw	2
 15405  002E0E  6E11               	movwf	lcd_send@value^0,c
 15406  002E10  0E01               	movlw	1
 15407  002E12  EC47  F031         	call	_lcd_send
 15408  002E16                     
 15409                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
 15410  002E16  0ECF               	movlw	207
 15411  002E18  6E11               	movwf	lcd_send@value^0,c
 15412  002E1A  0E00               	movlw	0
 15413  002E1C  EC47  F031         	call	_lcd_send
 15414  002E20                     
 15415                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
 15416  002E20  0E00               	movlw	0
 15417  002E22  6E11               	movwf	lcd_send@value^0,c
 15418  002E24  0E01               	movlw	1
 15419  002E26  EC47  F031         	call	_lcd_send
 15420  002E2A                     
 15421                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
 15422  002E2A  0EC1               	movlw	193
 15423  002E2C  6E11               	movwf	lcd_send@value^0,c
 15424  002E2E  0E01               	movlw	1
 15425  002E30  EC47  F031         	call	_lcd_send
 15426  002E34                     
 15427                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
 15428  002E34  0E30               	movlw	48
 15429  002E36  6E11               	movwf	lcd_send@value^0,c
 15430  002E38  0E01               	movlw	1
 15431  002E3A  EC47  F031         	call	_lcd_send
 15432  002E3E                     
 15433                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
 15434  002E3E  0EED               	movlw	237
 15435  002E40  6E11               	movwf	lcd_send@value^0,c
 15436  002E42  0E00               	movlw	0
 15437  002E44  EC47  F031         	call	_lcd_send
 15438  002E48                     
 15439                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
 15440  002E48  0E64               	movlw	100
 15441  002E4A  6E11               	movwf	lcd_send@value^0,c
 15442  002E4C  0E01               	movlw	1
 15443  002E4E  EC47  F031         	call	_lcd_send
 15444  002E52                     
 15445                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
 15446  002E52  0E03               	movlw	3
 15447  002E54  6E11               	movwf	lcd_send@value^0,c
 15448  002E56  0E01               	movlw	1
 15449  002E58  EC47  F031         	call	_lcd_send
 15450  002E5C                     
 15451                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
 15452  002E5C  0E12               	movlw	18
 15453  002E5E  6E11               	movwf	lcd_send@value^0,c
 15454  002E60  0E01               	movlw	1
 15455  002E62  EC47  F031         	call	_lcd_send
 15456  002E66                     
 15457                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
 15458  002E66  0E81               	movlw	129
 15459  002E68  6E11               	movwf	lcd_send@value^0,c
 15460  002E6A  0E01               	movlw	1
 15461  002E6C  EC47  F031         	call	_lcd_send
 15462  002E70                     
 15463                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
 15464  002E70  0EE8               	movlw	232
 15465  002E72  6E11               	movwf	lcd_send@value^0,c
 15466  002E74  0E00               	movlw	0
 15467  002E76  EC47  F031         	call	_lcd_send
 15468  002E7A                     
 15469                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
 15470  002E7A  0E85               	movlw	133
 15471  002E7C  6E11               	movwf	lcd_send@value^0,c
 15472  002E7E  0E01               	movlw	1
 15473  002E80  EC47  F031         	call	_lcd_send
 15474  002E84                     
 15475                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
 15476  002E84  0E00               	movlw	0
 15477  002E86  6E11               	movwf	lcd_send@value^0,c
 15478  002E88  0E01               	movlw	1
 15479  002E8A  EC47  F031         	call	_lcd_send
 15480  002E8E                     
 15481                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
 15482  002E8E  0E78               	movlw	120
 15483  002E90  6E11               	movwf	lcd_send@value^0,c
 15484  002E92  0E01               	movlw	1
 15485  002E94  EC47  F031         	call	_lcd_send
 15486  002E98                     
 15487                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
 15488  002E98  0ECB               	movlw	203
 15489  002E9A  6E11               	movwf	lcd_send@value^0,c
 15490  002E9C  0E00               	movlw	0
 15491  002E9E  EC47  F031         	call	_lcd_send
 15492  002EA2                     
 15493                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
 15494  002EA2  0E39               	movlw	57
 15495  002EA4  6E11               	movwf	lcd_send@value^0,c
 15496  002EA6  0E01               	movlw	1
 15497  002EA8  EC47  F031         	call	_lcd_send
 15498  002EAC                     
 15499                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
 15500  002EAC  0E2C               	movlw	44
 15501  002EAE  6E11               	movwf	lcd_send@value^0,c
 15502  002EB0  0E01               	movlw	1
 15503  002EB2  EC47  F031         	call	_lcd_send
 15504  002EB6                     
 15505                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
 15506  002EB6  0E00               	movlw	0
 15507  002EB8  6E11               	movwf	lcd_send@value^0,c
 15508  002EBA  0E01               	movlw	1
 15509  002EBC  EC47  F031         	call	_lcd_send
 15510  002EC0                     
 15511                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
 15512  002EC0  0E34               	movlw	52
 15513  002EC2  6E11               	movwf	lcd_send@value^0,c
 15514  002EC4  0E01               	movlw	1
 15515  002EC6  EC47  F031         	call	_lcd_send
 15516  002ECA                     
 15517                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
 15518  002ECA  0E02               	movlw	2
 15519  002ECC  6E11               	movwf	lcd_send@value^0,c
 15520  002ECE  0E01               	movlw	1
 15521  002ED0  EC47  F031         	call	_lcd_send
 15522  002ED4                     
 15523                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
 15524  002ED4  0EF7               	movlw	247
 15525  002ED6  6E11               	movwf	lcd_send@value^0,c
 15526  002ED8  0E00               	movlw	0
 15527  002EDA  EC47  F031         	call	_lcd_send
 15528  002EDE                     
 15529                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
 15530  002EDE  0E20               	movlw	32
 15531  002EE0  6E11               	movwf	lcd_send@value^0,c
 15532  002EE2  0E01               	movlw	1
 15533  002EE4  EC47  F031         	call	_lcd_send
 15534  002EE8                     
 15535                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
 15536  002EE8  0EEA               	movlw	234
 15537  002EEA  6E11               	movwf	lcd_send@value^0,c
 15538  002EEC  0E00               	movlw	0
 15539  002EEE  EC47  F031         	call	_lcd_send
 15540  002EF2                     
 15541                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
 15542  002EF2  0E00               	movlw	0
 15543  002EF4  6E11               	movwf	lcd_send@value^0,c
 15544  002EF6  0E01               	movlw	1
 15545  002EF8  EC47  F031         	call	_lcd_send
 15546  002EFC                     
 15547                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
 15548  002EFC  0E00               	movlw	0
 15549  002EFE  6E11               	movwf	lcd_send@value^0,c
 15550  002F00  0E01               	movlw	1
 15551  002F02  EC47  F031         	call	_lcd_send
 15552  002F06                     
 15553                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
 15554  002F06  0EC0               	movlw	192
 15555  002F08  6E11               	movwf	lcd_send@value^0,c
 15556  002F0A  0E00               	movlw	0
 15557  002F0C  EC47  F031         	call	_lcd_send
 15558  002F10                     
 15559                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
 15560  002F10  0E23               	movlw	35
 15561  002F12  6E11               	movwf	lcd_send@value^0,c
 15562  002F14  0E01               	movlw	1
 15563  002F16  EC47  F031         	call	_lcd_send
 15564  002F1A                     
 15565                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
 15566  002F1A  0EC1               	movlw	193
 15567  002F1C  6E11               	movwf	lcd_send@value^0,c
 15568  002F1E  0E00               	movlw	0
 15569  002F20  EC47  F031         	call	_lcd_send
 15570  002F24                     
 15571                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
 15572  002F24  0E10               	movlw	16
 15573  002F26  6E11               	movwf	lcd_send@value^0,c
 15574  002F28  0E01               	movlw	1
 15575  002F2A  EC47  F031         	call	_lcd_send
 15576  002F2E                     
 15577                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
 15578  002F2E  0EC5               	movlw	197
 15579  002F30  6E11               	movwf	lcd_send@value^0,c
 15580  002F32  0E00               	movlw	0
 15581  002F34  EC47  F031         	call	_lcd_send
 15582  002F38                     
 15583                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
 15584  002F38  0E3E               	movlw	62
 15585  002F3A  6E11               	movwf	lcd_send@value^0,c
 15586  002F3C  0E01               	movlw	1
 15587  002F3E  EC47  F031         	call	_lcd_send
 15588  002F42                     
 15589                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
 15590  002F42  0E28               	movlw	40
 15591  002F44  6E11               	movwf	lcd_send@value^0,c
 15592  002F46  0E01               	movlw	1
 15593  002F48  EC47  F031         	call	_lcd_send
 15594  002F4C                     
 15595                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
 15596  002F4C  0EC7               	movlw	199
 15597  002F4E  6E11               	movwf	lcd_send@value^0,c
 15598  002F50  0E00               	movlw	0
 15599  002F52  EC47  F031         	call	_lcd_send
 15600  002F56                     
 15601                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
 15602  002F56  0E86               	movlw	134
 15603  002F58  6E11               	movwf	lcd_send@value^0,c
 15604  002F5A  0E01               	movlw	1
 15605  002F5C  EC47  F031         	call	_lcd_send
 15606  002F60                     
 15607                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
 15608  002F60  0E36               	movlw	54
 15609  002F62  6E11               	movwf	lcd_send@value^0,c
 15610  002F64  0E00               	movlw	0
 15611  002F66  EC47  F031         	call	_lcd_send
 15612  002F6A                     
 15613                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
 15614  002F6A  0E48               	movlw	72
 15615  002F6C  6E11               	movwf	lcd_send@value^0,c
 15616  002F6E  0E01               	movlw	1
 15617  002F70  EC47  F031         	call	_lcd_send
 15618  002F74                     
 15619                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
 15620  002F74  0E3A               	movlw	58
 15621  002F76  6E11               	movwf	lcd_send@value^0,c
 15622  002F78  0E00               	movlw	0
 15623  002F7A  EC47  F031         	call	_lcd_send
 15624  002F7E                     
 15625                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
 15626  002F7E  0E55               	movlw	85
 15627  002F80  6E11               	movwf	lcd_send@value^0,c
 15628  002F82  0E01               	movlw	1
 15629  002F84  EC47  F031         	call	_lcd_send
 15630  002F88                     
 15631                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
 15632  002F88  0EB1               	movlw	177
 15633  002F8A  6E11               	movwf	lcd_send@value^0,c
 15634  002F8C  0E00               	movlw	0
 15635  002F8E  EC47  F031         	call	_lcd_send
 15636  002F92                     
 15637                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
 15638  002F92  0E00               	movlw	0
 15639  002F94  6E11               	movwf	lcd_send@value^0,c
 15640  002F96  0E01               	movlw	1
 15641  002F98  EC47  F031         	call	_lcd_send
 15642  002F9C                     
 15643                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
 15644  002F9C  0E18               	movlw	24
 15645  002F9E  6E11               	movwf	lcd_send@value^0,c
 15646  002FA0  0E01               	movlw	1
 15647  002FA2  EC47  F031         	call	_lcd_send
 15648  002FA6                     
 15649                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
 15650  002FA6  0EB6               	movlw	182
 15651  002FA8  6E11               	movwf	lcd_send@value^0,c
 15652  002FAA  0E00               	movlw	0
 15653  002FAC  EC47  F031         	call	_lcd_send
 15654  002FB0                     
 15655                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
 15656  002FB0  0E08               	movlw	8
 15657  002FB2  6E11               	movwf	lcd_send@value^0,c
 15658  002FB4  0E01               	movlw	1
 15659  002FB6  EC47  F031         	call	_lcd_send
 15660  002FBA                     
 15661                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
 15662  002FBA  0E82               	movlw	130
 15663  002FBC  6E11               	movwf	lcd_send@value^0,c
 15664  002FBE  0E01               	movlw	1
 15665  002FC0  EC47  F031         	call	_lcd_send
 15666  002FC4                     
 15667                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
 15668  002FC4  0E27               	movlw	39
 15669  002FC6  6E11               	movwf	lcd_send@value^0,c
 15670  002FC8  0E01               	movlw	1
 15671  002FCA  EC47  F031         	call	_lcd_send
 15672  002FCE                     
 15673                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
 15674  002FCE  0EF2               	movlw	242
 15675  002FD0  6E11               	movwf	lcd_send@value^0,c
 15676  002FD2  0E00               	movlw	0
 15677  002FD4  EC47  F031         	call	_lcd_send
 15678  002FD8                     
 15679                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
 15680  002FD8  0E00               	movlw	0
 15681  002FDA  6E11               	movwf	lcd_send@value^0,c
 15682  002FDC  0E01               	movlw	1
 15683  002FDE  EC47  F031         	call	_lcd_send
 15684  002FE2                     
 15685                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
 15686  002FE2  0E26               	movlw	38
 15687  002FE4  6E11               	movwf	lcd_send@value^0,c
 15688  002FE6  0E00               	movlw	0
 15689  002FE8  EC47  F031         	call	_lcd_send
 15690  002FEC                     
 15691                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
 15692  002FEC  0E01               	movlw	1
 15693  002FEE  6E11               	movwf	lcd_send@value^0,c
 15694  002FF0  0E01               	movlw	1
 15695  002FF2  EC47  F031         	call	_lcd_send
 15696  002FF6                     
 15697                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
 15698  002FF6  0EE0               	movlw	224
 15699  002FF8  6E11               	movwf	lcd_send@value^0,c
 15700  002FFA  0E00               	movlw	0
 15701  002FFC  EC47  F031         	call	_lcd_send
 15702  003000                     
 15703                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
 15704  003000  0E0F               	movlw	15
 15705  003002  6E11               	movwf	lcd_send@value^0,c
 15706  003004  0E01               	movlw	1
 15707  003006  EC47  F031         	call	_lcd_send
 15708  00300A                     
 15709                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
 15710  00300A  0E31               	movlw	49
 15711  00300C  6E11               	movwf	lcd_send@value^0,c
 15712  00300E  0E01               	movlw	1
 15713  003010  EC47  F031         	call	_lcd_send
 15714  003014                     
 15715                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
 15716  003014  0E2B               	movlw	43
 15717  003016  6E11               	movwf	lcd_send@value^0,c
 15718  003018  0E01               	movlw	1
 15719  00301A  EC47  F031         	call	_lcd_send
 15720  00301E                     
 15721                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
 15722  00301E  0E0C               	movlw	12
 15723  003020  6E11               	movwf	lcd_send@value^0,c
 15724  003022  0E01               	movlw	1
 15725  003024  EC47  F031         	call	_lcd_send
 15726  003028                     
 15727                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
 15728  003028  0E0E               	movlw	14
 15729  00302A  6E11               	movwf	lcd_send@value^0,c
 15730  00302C  0E01               	movlw	1
 15731  00302E  EC47  F031         	call	_lcd_send
 15732  003032                     
 15733                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
 15734  003032  0E08               	movlw	8
 15735  003034  6E11               	movwf	lcd_send@value^0,c
 15736  003036  0E01               	movlw	1
 15737  003038  EC47  F031         	call	_lcd_send
 15738  00303C                     
 15739                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
 15740  00303C  0E4E               	movlw	78
 15741  00303E  6E11               	movwf	lcd_send@value^0,c
 15742  003040  0E01               	movlw	1
 15743  003042  EC47  F031         	call	_lcd_send
 15744  003046                     
 15745                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
 15746  003046  0EF1               	movlw	241
 15747  003048  6E11               	movwf	lcd_send@value^0,c
 15748  00304A  0E01               	movlw	1
 15749  00304C  EC47  F031         	call	_lcd_send
 15750  003050                     
 15751                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
 15752  003050  0E37               	movlw	55
 15753  003052  6E11               	movwf	lcd_send@value^0,c
 15754  003054  0E01               	movlw	1
 15755  003056  EC47  F031         	call	_lcd_send
 15756  00305A                     
 15757                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
 15758  00305A  0E07               	movlw	7
 15759  00305C  6E11               	movwf	lcd_send@value^0,c
 15760  00305E  0E01               	movlw	1
 15761  003060  EC47  F031         	call	_lcd_send
 15762  003064                     
 15763                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
 15764  003064  0E10               	movlw	16
 15765  003066  6E11               	movwf	lcd_send@value^0,c
 15766  003068  0E01               	movlw	1
 15767  00306A  EC47  F031         	call	_lcd_send
 15768  00306E                     
 15769                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
 15770  00306E  0E03               	movlw	3
 15771  003070  6E11               	movwf	lcd_send@value^0,c
 15772  003072  0E01               	movlw	1
 15773  003074  EC47  F031         	call	_lcd_send
 15774  003078                     
 15775                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
 15776  003078  0E0E               	movlw	14
 15777  00307A  6E11               	movwf	lcd_send@value^0,c
 15778  00307C  0E01               	movlw	1
 15779  00307E  EC47  F031         	call	_lcd_send
 15780  003082                     
 15781                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
 15782  003082  0E09               	movlw	9
 15783  003084  6E11               	movwf	lcd_send@value^0,c
 15784  003086  0E01               	movlw	1
 15785  003088  EC47  F031         	call	_lcd_send
 15786  00308C                     
 15787                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
 15788  00308C  0E00               	movlw	0
 15789  00308E  6E11               	movwf	lcd_send@value^0,c
 15790  003090  0E01               	movlw	1
 15791  003092  EC47  F031         	call	_lcd_send
 15792  003096                     
 15793                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
 15794  003096  0EE1               	movlw	225
 15795  003098  6E11               	movwf	lcd_send@value^0,c
 15796  00309A  0E00               	movlw	0
 15797  00309C  EC47  F031         	call	_lcd_send
 15798  0030A0                     
 15799                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15800  0030A0  0E00               	movlw	0
 15801  0030A2  6E11               	movwf	lcd_send@value^0,c
 15802  0030A4  0E01               	movlw	1
 15803  0030A6  EC47  F031         	call	_lcd_send
 15804  0030AA                     
 15805                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
 15806  0030AA  0E0E               	movlw	14
 15807  0030AC  6E11               	movwf	lcd_send@value^0,c
 15808  0030AE  0E01               	movlw	1
 15809  0030B0  EC47  F031         	call	_lcd_send
 15810  0030B4                     
 15811                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
 15812  0030B4  0E14               	movlw	20
 15813  0030B6  6E11               	movwf	lcd_send@value^0,c
 15814  0030B8  0E01               	movlw	1
 15815  0030BA  EC47  F031         	call	_lcd_send
 15816  0030BE                     
 15817                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 15818  0030BE  0E03               	movlw	3
 15819  0030C0  6E11               	movwf	lcd_send@value^0,c
 15820  0030C2  0E01               	movlw	1
 15821  0030C4  EC47  F031         	call	_lcd_send
 15822  0030C8                     
 15823                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 15824  0030C8  0E11               	movlw	17
 15825  0030CA  6E11               	movwf	lcd_send@value^0,c
 15826  0030CC  0E01               	movlw	1
 15827  0030CE  EC47  F031         	call	_lcd_send
 15828  0030D2                     
 15829                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 15830  0030D2  0E07               	movlw	7
 15831  0030D4  6E11               	movwf	lcd_send@value^0,c
 15832  0030D6  0E01               	movlw	1
 15833  0030D8  EC47  F031         	call	_lcd_send
 15834  0030DC                     
 15835                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 15836  0030DC  0E31               	movlw	49
 15837  0030DE  6E11               	movwf	lcd_send@value^0,c
 15838  0030E0  0E01               	movlw	1
 15839  0030E2  EC47  F031         	call	_lcd_send
 15840  0030E6                     
 15841                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 15842  0030E6  0EC1               	movlw	193
 15843  0030E8  6E11               	movwf	lcd_send@value^0,c
 15844  0030EA  0E01               	movlw	1
 15845  0030EC  EC47  F031         	call	_lcd_send
 15846  0030F0                     
 15847                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 15848  0030F0  0E48               	movlw	72
 15849  0030F2  6E11               	movwf	lcd_send@value^0,c
 15850  0030F4  0E01               	movlw	1
 15851  0030F6  EC47  F031         	call	_lcd_send
 15852  0030FA                     
 15853                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 15854  0030FA  0E08               	movlw	8
 15855  0030FC  6E11               	movwf	lcd_send@value^0,c
 15856  0030FE  0E01               	movlw	1
 15857  003100  EC47  F031         	call	_lcd_send
 15858  003104                     
 15859                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 15860  003104  0E0F               	movlw	15
 15861  003106  6E11               	movwf	lcd_send@value^0,c
 15862  003108  0E01               	movlw	1
 15863  00310A  EC47  F031         	call	_lcd_send
 15864  00310E                     
 15865                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 15866  00310E  0E0C               	movlw	12
 15867  003110  6E11               	movwf	lcd_send@value^0,c
 15868  003112  0E01               	movlw	1
 15869  003114  EC47  F031         	call	_lcd_send
 15870  003118                     
 15871                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 15872  003118  0E31               	movlw	49
 15873  00311A  6E11               	movwf	lcd_send@value^0,c
 15874  00311C  0E01               	movlw	1
 15875  00311E  EC47  F031         	call	_lcd_send
 15876  003122                     
 15877                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 15878  003122  0E36               	movlw	54
 15879  003124  6E11               	movwf	lcd_send@value^0,c
 15880  003126  0E01               	movlw	1
 15881  003128  EC47  F031         	call	_lcd_send
 15882  00312C                     
 15883                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 15884  00312C  0E0F               	movlw	15
 15885  00312E  6E11               	movwf	lcd_send@value^0,c
 15886  003130  0E01               	movlw	1
 15887  003132  EC47  F031         	call	_lcd_send
 15888  003136                     
 15889                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 15890  003136  0E11               	movlw	17
 15891  003138  6E11               	movwf	lcd_send@value^0,c
 15892  00313A  0E00               	movlw	0
 15893  00313C  EC47  F031         	call	_lcd_send
 15894                           
 15895                           ;lib_ili9341.c: 123:     msDelay(120);
 15896  003140  0E78               	movlw	120
 15897  003142  EC38  F030         	call	_msDelay
 15898  003146                     
 15899                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 15900  003146  0E29               	movlw	41
 15901  003148  6E11               	movwf	lcd_send@value^0,c
 15902  00314A  0E00               	movlw	0
 15903  00314C  EC47  F031         	call	_lcd_send
 15904  003150                     
 15905                           ;lib_ili9341.c: 125:     msDelay(120);
 15906  003150  0E78               	movlw	120
 15907  003152  EC38  F030         	call	_msDelay
 15908  003156                     
 15909                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 15910  003156  0E00               	movlw	0
 15911  003158  6E1A               	movwf	(lcd_fill@bg_color+1)^0,c
 15912  00315A  0E00               	movlw	0
 15913  00315C  6E19               	movwf	lcd_fill@bg_color^0,c
 15914  00315E  EC80  F02C         	call	_lcd_fill	;wreg free
 15915  003162  0012               	return		;funcret
 15916  003164                     __end_of_lcd_init:
 15917                           	opt callstack 0
 15918                           
 15919 ;; *************** function _msDelay *****************
 15920 ;; Defined at:
 15921 ;;		line 14 in file "lib_ili9341.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;  ms              1    wreg     unsigned char 
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;  ms              1   16[COMRAM] unsigned char 
 15926 ;;  k               1   17[COMRAM] unsigned char 
 15927 ;; Return value:  Size  Location     Type
 15928 ;;                  1    wreg      void 
 15929 ;; Registers used:
 15930 ;;		wreg, status,2, status,0
 15931 ;; Tracked objects:
 15932 ;;		On entry : 0/0
 15933 ;;		On exit  : 0/0
 15934 ;;		Unchanged: 0/0
 15935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15939 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15940 ;;Total ram usage:        3 bytes
 15941 ;; Hardware stack levels used:    1
 15942 ;; Hardware stack levels required when called:    5
 15943 ;; This function calls:
 15944 ;;		Nothing
 15945 ;; This function is called by:
 15946 ;;		_lcd_init
 15947 ;; This function uses a non-reentrant model
 15948 ;;
 15949                           
 15950                           	psect	text46
 15951  006070                     __ptext46:
 15952                           	opt callstack 0
 15953  006070                     _msDelay:
 15954                           	opt callstack 24
 15955                           
 15956                           ;incstack = 0
 15957                           ;msDelay@ms stored from wreg
 15958  006070  6E11               	movwf	msDelay@ms^0,c
 15959  006072                     
 15960                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 15961  006072  0E00               	movlw	0
 15962  006074  6E12               	movwf	msDelay@k^0,c
 15963  006076  EF45  F030         	goto	l6904
 15964  00607A                     l6900:
 15965                           
 15966                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15967  00607A  0E03               	movlw	3
 15968  00607C  6E10               	movwf	??_msDelay^0,c
 15969  00607E  0E98               	movlw	152
 15970  006080                     u12927:
 15971  006080  2EE8               	decfsz	wreg,f,c
 15972  006082  D7FE               	bra	u12927
 15973  006084  2E10               	decfsz	??_msDelay^0,f,c
 15974  006086  D7FC               	bra	u12927
 15975  006088                     
 15976                           ;lib_ili9341.c: 21:     }
 15977  006088  2A12               	incf	msDelay@k^0,f,c
 15978  00608A                     l6904:
 15979  00608A  5011               	movf	msDelay@ms^0,w,c
 15980  00608C  5C12               	subwf	msDelay@k^0,w,c
 15981  00608E  A0D8               	btfss	status,0,c
 15982  006090  EF4C  F030         	goto	u8221
 15983  006094  EF4E  F030         	goto	u8220
 15984  006098                     u8221:
 15985  006098  EF3D  F030         	goto	l6900
 15986  00609C                     u8220:
 15987  00609C  0012               	return		;funcret
 15988  00609E                     __end_of_msDelay:
 15989                           	opt callstack 0
 15990                           
 15991 ;; *************** function _lcd_fill *****************
 15992 ;; Defined at:
 15993 ;;		line 191 in file "lib_ili9341.c"
 15994 ;; Parameters:    Size  Location     Type
 15995 ;;  bg_color        2   24[COMRAM] unsigned short 
 15996 ;; Auto vars:     Size  Location     Type
 15997 ;;  width           2   28[COMRAM] unsigned short 
 15998 ;;  height          2   26[COMRAM] unsigned short 
 15999 ;; Return value:  Size  Location     Type
 16000 ;;                  1    wreg      void 
 16001 ;; Registers used:
 16002 ;;		wreg, status,2, status,0, cstack
 16003 ;; Tracked objects:
 16004 ;;		On entry : 0/0
 16005 ;;		On exit  : 0/0
 16006 ;;		Unchanged: 0/0
 16007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16009 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16012 ;;Total ram usage:        6 bytes
 16013 ;; Hardware stack levels used:    1
 16014 ;; Hardware stack levels required when called:    9
 16015 ;; This function calls:
 16016 ;;		_lcd_draw_pixel
 16017 ;;		_lcd_set_cursor
 16018 ;; This function is called by:
 16019 ;;		_lcd_init
 16020 ;; This function uses a non-reentrant model
 16021 ;;
 16022                           
 16023                           	psect	text47
 16024  005900                     __ptext47:
 16025                           	opt callstack 0
 16026  005900                     _lcd_fill:
 16027                           	opt callstack 20
 16028  005900                     
 16029                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 16030  005900  0E01               	movlw	1
 16031  005902  6E1E               	movwf	(lcd_fill@width+1)^0,c
 16032  005904  0E40               	movlw	64
 16033  005906  6E1D               	movwf	lcd_fill@width^0,c
 16034  005908  0E00               	movlw	0
 16035  00590A  6E1C               	movwf	(lcd_fill@height+1)^0,c
 16036  00590C  0EF0               	movlw	240
 16037  00590E  6E1B               	movwf	lcd_fill@height^0,c
 16038  005910                     
 16039                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 16040  005910  0E00               	movlw	0
 16041  005912  6E16               	movwf	(lcd_set_cursor@x+1)^0,c
 16042  005914  0E00               	movlw	0
 16043  005916  6E15               	movwf	lcd_set_cursor@x^0,c
 16044  005918  0E00               	movlw	0
 16045  00591A  6E18               	movwf	(lcd_set_cursor@y+1)^0,c
 16046  00591C  0E00               	movlw	0
 16047  00591E  6E17               	movwf	lcd_set_cursor@y^0,c
 16048  005920  ECE8  F02E         	call	_lcd_set_cursor	;wreg free
 16049  005924  0900               	iorlw	0
 16050  005926  B4D8               	btfsc	status,2,c
 16051  005928  EF98  F02C         	goto	u12531
 16052  00592C  EF9A  F02C         	goto	u12530
 16053  005930                     u12531:
 16054  005930  EFB3  F02C         	goto	l9636
 16055  005934                     u12530:
 16056  005934  EFC0  F02C         	goto	l491
 16057  005938                     l9630:
 16058                           
 16059                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 16060  005938  C019  F013         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 16061  00593C  C01A  F014         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 16062  005940  EC5F  F031         	call	_lcd_draw_pixel	;wreg free
 16063  005944                     l9632:
 16064                           
 16065                           ;lib_ili9341.c: 202:         while(width--)
 16066  005944  061D               	decf	lcd_fill@width^0,f,c
 16067  005946  A0D8               	btfss	status,0,c
 16068  005948  061E               	decf	(lcd_fill@width+1)^0,f,c
 16069  00594A  281D               	incf	lcd_fill@width^0,w,c
 16070  00594C  E106               	bnz	u12541
 16071  00594E  281E               	incf	(lcd_fill@width+1)^0,w,c
 16072  005950  A4D8               	btfss	status,2,c
 16073  005952  EFAD  F02C         	goto	u12541
 16074  005956  EFAF  F02C         	goto	u12540
 16075  00595A                     u12541:
 16076  00595A  EF9C  F02C         	goto	l9630
 16077  00595E                     u12540:
 16078  00595E                     
 16079                           ;lib_ili9341.c: 206:         width = 320;
 16080  00595E  0E01               	movlw	1
 16081  005960  6E1E               	movwf	(lcd_fill@width+1)^0,c
 16082  005962  0E40               	movlw	64
 16083  005964  6E1D               	movwf	lcd_fill@width^0,c
 16084  005966                     l9636:
 16085                           
 16086                           ;lib_ili9341.c: 200:     while(height--)
 16087  005966  061B               	decf	lcd_fill@height^0,f,c
 16088  005968  A0D8               	btfss	status,0,c
 16089  00596A  061C               	decf	(lcd_fill@height+1)^0,f,c
 16090  00596C  281B               	incf	lcd_fill@height^0,w,c
 16091  00596E  E106               	bnz	u12551
 16092  005970  281C               	incf	(lcd_fill@height+1)^0,w,c
 16093  005972  A4D8               	btfss	status,2,c
 16094  005974  EFBE  F02C         	goto	u12551
 16095  005978  EFC0  F02C         	goto	u12550
 16096  00597C                     u12551:
 16097  00597C  EFA2  F02C         	goto	l9632
 16098  005980                     u12550:
 16099  005980                     l491:
 16100  005980  0012               	return		;funcret
 16101  005982                     __end_of_lcd_fill:
 16102                           	opt callstack 0
 16103                           
 16104 ;; *************** function _lcd_draw_string *****************
 16105 ;; Defined at:
 16106 ;;		line 378 in file "lib_ili9341.c"
 16107 ;; Parameters:    Size  Location     Type
 16108 ;;  x               2   46[COMRAM] unsigned short 
 16109 ;;  y               2   48[COMRAM] unsigned short 
 16110 ;;  pS              2   50[COMRAM] PTR const unsigned char 
 16111 ;;		 -> steste(100), string(100), string_rpm(100), STR_2(11), 
 16112 ;;		 -> STR_1(33), 
 16113 ;;  fg_color        2   52[COMRAM] unsigned short 
 16114 ;;  bg_color        2   54[COMRAM] unsigned short 
 16115 ;; Auto vars:     Size  Location     Type
 16116 ;;  lIndex          2    2[BANK0 ] unsigned short 
 16117 ;;  k               2    0[BANK0 ] unsigned short 
 16118 ;; Return value:  Size  Location     Type
 16119 ;;                  1    wreg      void 
 16120 ;; Registers used:
 16121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16122 ;; Tracked objects:
 16123 ;;		On entry : 0/0
 16124 ;;		On exit  : 0/0
 16125 ;;		Unchanged: 0/0
 16126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16127 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16128 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16130 ;;      Totals:        14       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16131 ;;Total ram usage:       18 bytes
 16132 ;; Hardware stack levels used:    1
 16133 ;; Hardware stack levels required when called:   10
 16134 ;; This function calls:
 16135 ;;		_lcd_draw_char
 16136 ;; This function is called by:
 16137 ;;		_main
 16138 ;; This function uses a non-reentrant model
 16139 ;;
 16140                           
 16141                           	psect	text48
 16142  004A3C                     __ptext48:
 16143                           	opt callstack 0
 16144  004A3C                     _lcd_draw_string:
 16145                           	opt callstack 20
 16146  004A3C                     
 16147                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 16148  004A3C  EFA0  F025         	goto	l9942
 16149  004A40                     l9928:
 16150                           
 16151                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 16152  004A40  0E00               	movlw	0
 16153  004A42  0100               	movlb	0	; () banked
 16154  004A44  6F63               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 16155  004A46  0E00               	movlw	0
 16156  004A48  6F62               	movwf	lcd_draw_string@lIndex& (0+255),b
 16157                           
 16158                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 16159  004A4A  0E00               	movlw	0
 16160  004A4C  6F61               	movwf	(lcd_draw_string@k+1)& (0+255),b
 16161  004A4E  0E00               	movlw	0
 16162  004A50  6F60               	movwf	lcd_draw_string@k& (0+255),b
 16163  004A52  EF4A  F025         	goto	l9934
 16164  004A56                     l9930:
 16165                           
 16166                           ; BSR set to: 0
 16167                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 16168  004A56  90D8               	bcf	status,0,c
 16169  004A58  3562               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 16170  004A5A  6EF6               	movwf	tblptrl,c
 16171  004A5C  3563               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 16172  004A5E  6EF7               	movwf	tblptrh,c
 16173  004A60  0E93               	movlw	low _font
 16174  004A62  26F6               	addwf	tblptrl,f,c
 16175  004A64  0EF1               	movlw	high _font
 16176  004A66  22F7               	addwfc	tblptrh,f,c
 16177  004A68                     	if	1	;There are 3 active tblptr bytes
 16178  004A68  6AF8               	clrf	tblptru,c
 16179  004A6A  0E00               	movlw	low (__mediumconst shr (0+16))
 16180  004A6C  22F8               	addwfc	tblptru,f,c
 16181  004A6E                     	endif
 16182  004A6E  0009               	tblrd		*+
 16183  004A70  CFF5 F039          	movff	tablat,??_lcd_draw_string
 16184  004A74  0009               	tblrd		*+
 16185  004A76  CFF5 F03A          	movff	tablat,??_lcd_draw_string+1
 16186  004A7A  90D8               	bcf	status,0,c
 16187  004A7C  3639               	rlcf	??_lcd_draw_string^0,f,c
 16188  004A7E  363A               	rlcf	(??_lcd_draw_string+1)^0,f,c
 16189  004A80  0E01               	movlw	1
 16190  004A82  2639               	addwf	??_lcd_draw_string^0,f,c
 16191  004A84  0E00               	movlw	0
 16192  004A86  223A               	addwfc	(??_lcd_draw_string+1)^0,f,c
 16193  004A88  5039               	movf	??_lcd_draw_string^0,w,c
 16194  004A8A  2762               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 16195  004A8C  503A               	movf	(??_lcd_draw_string+1)^0,w,c
 16196  004A8E  2363               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 16197  004A90                     
 16198                           ; BSR set to: 0
 16199                           ;lib_ili9341.c: 388:         }
 16200  004A90  4B60               	infsnz	lcd_draw_string@k& (0+255),f,b
 16201  004A92  2B61               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 16202  004A94                     l9934:
 16203                           
 16204                           ; BSR set to: 0
 16205  004A94  0EE0               	movlw	224
 16206  004A96  6E39               	movwf	??_lcd_draw_string^0,c
 16207  004A98  0EFF               	movlw	255
 16208  004A9A  6E3A               	movwf	(??_lcd_draw_string+1)^0,c
 16209  004A9C  C033  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16210  004AA0  C034  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16211  004AA4  0E00               	movlw	low (__mediumconst shr (0+16))
 16212  004AA6  6EF8               	movwf	tblptru,c
 16213  004AA8  0E0E               	movlw	(high __ramtop+-1)
 16214  004AAA  64F7               	cpfsgt	tblptrh,c
 16215  004AAC  D003               	bra	u12757
 16216  004AAE  0008               	tblrd		*
 16217  004AB0  50F5               	movf	tablat,w,c
 16218  004AB2  D005               	bra	u12750
 16219  004AB4                     u12757:
 16220  004AB4  CFF6 FFE1          	movff	tblptrl,fsr1l
 16221  004AB8  CFF7 FFE2          	movff	tblptrh,fsr1h
 16222  004ABC  50E7               	movf	indf1,w,c
 16223  004ABE                     u12750:
 16224  004ABE  6E3B               	movwf	(??_lcd_draw_string+2)^0,c
 16225  004AC0  6A3C               	clrf	(??_lcd_draw_string+3)^0,c
 16226  004AC2  5039               	movf	??_lcd_draw_string^0,w,c
 16227  004AC4  263B               	addwf	(??_lcd_draw_string+2)^0,f,c
 16228  004AC6  503A               	movf	(??_lcd_draw_string+1)^0,w,c
 16229  004AC8  223C               	addwfc	(??_lcd_draw_string+3)^0,f,c
 16230  004ACA  503B               	movf	(??_lcd_draw_string+2)^0,w,c
 16231  004ACC  0100               	movlb	0	; () banked
 16232  004ACE  5D60               	subwf	lcd_draw_string@k& (0+255),w,b
 16233  004AD0  503C               	movf	(??_lcd_draw_string+3)^0,w,c
 16234  004AD2  5961               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 16235  004AD4  A0D8               	btfss	status,0,c
 16236  004AD6  EF6F  F025         	goto	u12761
 16237  004ADA  EF71  F025         	goto	u12760
 16238  004ADE                     u12761:
 16239  004ADE  EF2B  F025         	goto	l9930
 16240  004AE2                     u12760:
 16241  004AE2                     
 16242                           ; BSR set to: 0
 16243                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 16244  004AE2  C02F  F019         	movff	lcd_draw_string@x,lcd_draw_char@x
 16245  004AE6  C030  F01A         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 16246  004AEA  C031  F01B         	movff	lcd_draw_string@y,lcd_draw_char@y
 16247  004AEE  C032  F01C         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 16248  004AF2  C062  F01D         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 16249  004AF6  C063  F01E         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 16250  004AFA  C035  F01F         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 16251  004AFE  C036  F020         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 16252  004B02  C037  F021         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 16253  004B06  C038  F022         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 16254  004B0A  ECFB  F022         	call	_lcd_draw_char	;wreg free
 16255  004B0E                     
 16256                           ;lib_ili9341.c: 392:         x += font[lIndex];
 16257  004B0E  90D8               	bcf	status,0,c
 16258  004B10  0100               	movlb	0	; () banked
 16259  004B12  3562               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 16260  004B14  6EF6               	movwf	tblptrl,c
 16261  004B16  3563               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 16262  004B18  6EF7               	movwf	tblptrh,c
 16263  004B1A  0E93               	movlw	low _font
 16264  004B1C  26F6               	addwf	tblptrl,f,c
 16265  004B1E  0EF1               	movlw	high _font
 16266  004B20  22F7               	addwfc	tblptrh,f,c
 16267  004B22                     	if	1	;There are 3 active tblptr bytes
 16268  004B22  6AF8               	clrf	tblptru,c
 16269  004B24  0E00               	movlw	low (__mediumconst shr (0+16))
 16270  004B26  22F8               	addwfc	tblptru,f,c
 16271  004B28                     	endif
 16272  004B28  0009               	tblrd		*+
 16273  004B2A  CFF5 F039          	movff	tablat,??_lcd_draw_string
 16274  004B2E  0009               	tblrd		*+
 16275  004B30  CFF5 F03A          	movff	tablat,??_lcd_draw_string+1
 16276  004B34  5039               	movf	??_lcd_draw_string^0,w,c
 16277  004B36  262F               	addwf	lcd_draw_string@x^0,f,c
 16278  004B38  503A               	movf	(??_lcd_draw_string+1)^0,w,c
 16279  004B3A  2230               	addwfc	(lcd_draw_string@x+1)^0,f,c
 16280  004B3C                     
 16281                           ; BSR set to: 0
 16282                           ;lib_ili9341.c: 394:         pS++;
 16283  004B3C  4A33               	infsnz	lcd_draw_string@pS^0,f,c
 16284  004B3E  2A34               	incf	(lcd_draw_string@pS+1)^0,f,c
 16285  004B40                     l9942:
 16286                           
 16287                           ;lib_ili9341.c: 382:     while(*pS)
 16288  004B40  C033  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16289  004B44  C034  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16290  004B48  0E00               	movlw	low (__mediumconst shr (0+16))
 16291  004B4A  6EF8               	movwf	tblptru,c
 16292  004B4C  0E0E               	movlw	(high __ramtop+-1)
 16293  004B4E  64F7               	cpfsgt	tblptrh,c
 16294  004B50  D003               	bra	u12777
 16295  004B52  0008               	tblrd		*
 16296  004B54  50F5               	movf	tablat,w,c
 16297  004B56  D005               	bra	u12770
 16298  004B58                     u12777:
 16299  004B58  CFF6 FFE1          	movff	tblptrl,fsr1l
 16300  004B5C  CFF7 FFE2          	movff	tblptrh,fsr1h
 16301  004B60  50E7               	movf	indf1,w,c
 16302  004B62                     u12770:
 16303  004B62  0900               	iorlw	0
 16304  004B64  A4D8               	btfss	status,2,c
 16305  004B66  EFB7  F025         	goto	u12781
 16306  004B6A  EFB9  F025         	goto	u12780
 16307  004B6E                     u12781:
 16308  004B6E  EF20  F025         	goto	l9928
 16309  004B72                     u12780:
 16310  004B72  0012               	return		;funcret
 16311  004B74                     __end_of_lcd_draw_string:
 16312                           	opt callstack 0
 16313                           
 16314 ;; *************** function _lcd_draw_char *****************
 16315 ;; Defined at:
 16316 ;;		line 353 in file "lib_ili9341.c"
 16317 ;; Parameters:    Size  Location     Type
 16318 ;;  x               2   24[COMRAM] unsigned short 
 16319 ;;  y               2   26[COMRAM] unsigned short 
 16320 ;;  fIndex          2   28[COMRAM] unsigned short 
 16321 ;;  fg_color        2   30[COMRAM] unsigned short 
 16322 ;;  bg_color        2   32[COMRAM] unsigned short 
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  i               1   45[COMRAM] unsigned char 
 16325 ;;  k               1   44[COMRAM] unsigned char 
 16326 ;;  j               1   43[COMRAM] unsigned char 
 16327 ;; Return value:  Size  Location     Type
 16328 ;;                  1    wreg      void 
 16329 ;; Registers used:
 16330 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16331 ;; Tracked objects:
 16332 ;;		On entry : 0/0
 16333 ;;		On exit  : 0/0
 16334 ;;		Unchanged: 0/0
 16335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16336 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16337 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16338 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16339 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16340 ;;Total ram usage:       22 bytes
 16341 ;; Hardware stack levels used:    1
 16342 ;; Hardware stack levels required when called:    9
 16343 ;; This function calls:
 16344 ;;		_lcd_draw_pixel
 16345 ;;		_lcd_set_cursor
 16346 ;; This function is called by:
 16347 ;;		_lcd_draw_string
 16348 ;; This function uses a non-reentrant model
 16349 ;;
 16350                           
 16351                           	psect	text49
 16352  0045F6                     __ptext49:
 16353                           	opt callstack 0
 16354  0045F6                     _lcd_draw_char:
 16355                           	opt callstack 20
 16356  0045F6                     
 16357                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 16358  0045F6  0E00               	movlw	0
 16359  0045F8  6E2C               	movwf	lcd_draw_char@j^0,c
 16360  0045FA  EF9B  F023         	goto	l9674
 16361  0045FE                     l9644:
 16362                           
 16363                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16364  0045FE  90D8               	bcf	status,0,c
 16365  004600  341D               	rlcf	lcd_draw_char@fIndex^0,w,c
 16366  004602  6EF6               	movwf	tblptrl,c
 16367  004604  341E               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16368  004606  6EF7               	movwf	tblptrh,c
 16369  004608  0E93               	movlw	low _font
 16370  00460A  26F6               	addwf	tblptrl,f,c
 16371  00460C  0EF1               	movlw	high _font
 16372  00460E  22F7               	addwfc	tblptrh,f,c
 16373  004610                     	if	1	;There are 3 active tblptr bytes
 16374  004610  6AF8               	clrf	tblptru,c
 16375  004612  0E00               	movlw	low (__mediumconst shr (0+16))
 16376  004614  22F8               	addwfc	tblptru,f,c
 16377  004616                     	endif
 16378  004616  0009               	tblrd		*+
 16379  004618  CFF5 F023          	movff	tablat,??_lcd_draw_char
 16380  00461C  0009               	tblrd		*+
 16381  00461E  CFF5 F024          	movff	tablat,??_lcd_draw_char+1
 16382  004622  502C               	movf	lcd_draw_char@j^0,w,c
 16383  004624  5E23               	subwf	??_lcd_draw_char^0,f,c
 16384  004626  0E00               	movlw	0
 16385  004628  5A24               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16386  00462A  5019               	movf	lcd_draw_char@x^0,w,c
 16387  00462C  2423               	addwf	??_lcd_draw_char^0,w,c
 16388  00462E  6E15               	movwf	lcd_set_cursor@x^0,c
 16389  004630  501A               	movf	(lcd_draw_char@x+1)^0,w,c
 16390  004632  2024               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16391  004634  6E16               	movwf	(lcd_set_cursor@x+1)^0,c
 16392  004636  C01B  F017         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16393  00463A  C01C  F018         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16394  00463E  ECE8  F02E         	call	_lcd_set_cursor	;wreg free
 16395  004642                     
 16396                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 16397  004642  0E00               	movlw	0
 16398  004644  6E2D               	movwf	lcd_draw_char@k^0,c
 16399  004646                     l9652:
 16400                           
 16401                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 16402  004646  0E00               	movlw	0
 16403  004648  6E2E               	movwf	lcd_draw_char@i^0,c
 16404  00464A                     l9658:
 16405                           
 16406                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 16407  00464A  502C               	movf	lcd_draw_char@j^0,w,c
 16408  00464C  6E23               	movwf	??_lcd_draw_char^0,c
 16409  00464E  6A24               	clrf	(??_lcd_draw_char+1)^0,c
 16410  004650  90D8               	bcf	status,0,c
 16411  004652  3623               	rlcf	??_lcd_draw_char^0,f,c
 16412  004654  3624               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16413  004656  90D8               	bcf	status,0,c
 16414  004658  341D               	rlcf	lcd_draw_char@fIndex^0,w,c
 16415  00465A  6EF6               	movwf	tblptrl,c
 16416  00465C  341E               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16417  00465E  6EF7               	movwf	tblptrh,c
 16418  004660  0E93               	movlw	low _font
 16419  004662  26F6               	addwf	tblptrl,f,c
 16420  004664  0EF1               	movlw	high _font
 16421  004666  22F7               	addwfc	tblptrh,f,c
 16422  004668                     	if	1	;There are 3 active tblptr bytes
 16423  004668  6AF8               	clrf	tblptru,c
 16424  00466A  0E00               	movlw	low (__mediumconst shr (0+16))
 16425  00466C  22F8               	addwfc	tblptru,f,c
 16426  00466E                     	endif
 16427  00466E  0009               	tblrd		*+
 16428  004670  CFF5 F025          	movff	tablat,??_lcd_draw_char+2
 16429  004674  0009               	tblrd		*+
 16430  004676  CFF5 F026          	movff	tablat,??_lcd_draw_char+3
 16431  00467A  90D8               	bcf	status,0,c
 16432  00467C  3625               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16433  00467E  3626               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16434  004680  5023               	movf	??_lcd_draw_char^0,w,c
 16435  004682  5E25               	subwf	(??_lcd_draw_char+2)^0,f,c
 16436  004684  5024               	movf	(??_lcd_draw_char+1)^0,w,c
 16437  004686  5A26               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16438  004688  502D               	movf	lcd_draw_char@k^0,w,c
 16439  00468A  5E25               	subwf	(??_lcd_draw_char+2)^0,f,c
 16440  00468C  0E00               	movlw	0
 16441  00468E  5A26               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16442  004690  501D               	movf	lcd_draw_char@fIndex^0,w,c
 16443  004692  2625               	addwf	(??_lcd_draw_char+2)^0,f,c
 16444  004694  501E               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16445  004696  2226               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16446  004698  90D8               	bcf	status,0,c
 16447  00469A  3625               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16448  00469C  3626               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16449  00469E  0E93               	movlw	low _font
 16450  0046A0  2425               	addwf	(??_lcd_draw_char+2)^0,w,c
 16451  0046A2  6EF6               	movwf	tblptrl,c
 16452  0046A4  0EF1               	movlw	high _font
 16453  0046A6  2026               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16454  0046A8  6EF7               	movwf	tblptrh,c
 16455  0046AA                     	if	1	;There are 3 active tblptr bytes
 16456  0046AA  6AF8               	clrf	tblptru,c
 16457  0046AC  0E00               	movlw	low (__mediumconst shr (0+16))
 16458  0046AE  22F8               	addwfc	tblptru,f,c
 16459  0046B0                     	endif
 16460  0046B0  0009               	tblrd		*+
 16461  0046B2  CFF5 F027          	movff	tablat,??_lcd_draw_char+4
 16462  0046B6  0009               	tblrd		*+
 16463  0046B8  CFF5 F028          	movff	tablat,??_lcd_draw_char+5
 16464  0046BC  C02E  F029         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16465  0046C0  0E80               	movlw	128
 16466  0046C2  6E2A               	movwf	(??_lcd_draw_char+7)^0,c
 16467  0046C4  0E00               	movlw	0
 16468  0046C6  6E2B               	movwf	(??_lcd_draw_char+8)^0,c
 16469  0046C8  2A29               	incf	(??_lcd_draw_char+6)^0,f,c
 16470  0046CA  EF6A  F023         	goto	u12574
 16471  0046CE                     u12575:
 16472  0046CE  342B               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16473  0046D0  322B               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16474  0046D2  322A               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16475  0046D4                     u12574:
 16476  0046D4  2E29               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16477  0046D6  EF67  F023         	goto	u12575
 16478  0046DA  5027               	movf	(??_lcd_draw_char+4)^0,w,c
 16479  0046DC  162A               	andwf	(??_lcd_draw_char+7)^0,f,c
 16480  0046DE  5028               	movf	(??_lcd_draw_char+5)^0,w,c
 16481  0046E0  162B               	andwf	(??_lcd_draw_char+8)^0,f,c
 16482  0046E2  502A               	movf	(??_lcd_draw_char+7)^0,w,c
 16483  0046E4  102B               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16484  0046E6  B4D8               	btfsc	status,2,c
 16485  0046E8  EF78  F023         	goto	u12581
 16486  0046EC  EF7A  F023         	goto	u12580
 16487  0046F0                     u12581:
 16488  0046F0  EF82  F023         	goto	l9662
 16489  0046F4                     u12580:
 16490  0046F4                     
 16491                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 16492  0046F4  C01F  F013         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16493  0046F8  C020  F014         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16494  0046FC  EC5F  F031         	call	_lcd_draw_pixel	;wreg free
 16495                           
 16496                           ;lib_ili9341.c: 368:                 }
 16497  004700  EF88  F023         	goto	l9664
 16498  004704                     l9662:
 16499                           
 16500                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 16501  004704  C021  F013         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16502  004708  C022  F014         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16503  00470C  EC5F  F031         	call	_lcd_draw_pixel	;wreg free
 16504  004710                     l9664:
 16505                           
 16506                           ;lib_ili9341.c: 373:             }
 16507  004710  2A2E               	incf	lcd_draw_char@i^0,f,c
 16508  004712  0E07               	movlw	7
 16509  004714  642E               	cpfsgt	lcd_draw_char@i^0,c
 16510  004716  EF8F  F023         	goto	u12591
 16511  00471A  EF91  F023         	goto	u12590
 16512  00471E                     u12591:
 16513  00471E  EF25  F023         	goto	l9658
 16514  004722                     u12590:
 16515  004722                     
 16516                           ;lib_ili9341.c: 374:         }
 16517  004722  2A2D               	incf	lcd_draw_char@k^0,f,c
 16518  004724  0E01               	movlw	1
 16519  004726  642D               	cpfsgt	lcd_draw_char@k^0,c
 16520  004728  EF98  F023         	goto	u12601
 16521  00472C  EF9A  F023         	goto	u12600
 16522  004730                     u12601:
 16523  004730  EF23  F023         	goto	l9652
 16524  004734                     u12600:
 16525  004734                     
 16526                           ;lib_ili9341.c: 375:     }
 16527  004734  2A2C               	incf	lcd_draw_char@j^0,f,c
 16528  004736                     l9674:
 16529  004736  90D8               	bcf	status,0,c
 16530  004738  341D               	rlcf	lcd_draw_char@fIndex^0,w,c
 16531  00473A  6EF6               	movwf	tblptrl,c
 16532  00473C  341E               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16533  00473E  6EF7               	movwf	tblptrh,c
 16534  004740  0E93               	movlw	low _font
 16535  004742  26F6               	addwf	tblptrl,f,c
 16536  004744  0EF1               	movlw	high _font
 16537  004746  22F7               	addwfc	tblptrh,f,c
 16538  004748                     	if	1	;There are 3 active tblptr bytes
 16539  004748  6AF8               	clrf	tblptru,c
 16540  00474A  0E00               	movlw	low (__mediumconst shr (0+16))
 16541  00474C  22F8               	addwfc	tblptru,f,c
 16542  00474E                     	endif
 16543  00474E  502C               	movf	lcd_draw_char@j^0,w,c
 16544  004750  6E23               	movwf	??_lcd_draw_char^0,c
 16545  004752  6A24               	clrf	(??_lcd_draw_char+1)^0,c
 16546  004754  0009               	tblrd		*+
 16547  004756  50F5               	movf	tablat,w,c
 16548  004758  5C23               	subwf	??_lcd_draw_char^0,w,c
 16549  00475A  0009               	tblrd		*+
 16550  00475C  50F5               	movf	tablat,w,c
 16551  00475E  5824               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16552  004760  A0D8               	btfss	status,0,c
 16553  004762  EFB5  F023         	goto	u12611
 16554  004766  EFB7  F023         	goto	u12610
 16555  00476A                     u12611:
 16556  00476A  EFFF  F022         	goto	l9644
 16557  00476E                     u12610:
 16558  00476E  0012               	return		;funcret
 16559  004770                     __end_of_lcd_draw_char:
 16560                           	opt callstack 0
 16561                           
 16562 ;; *************** function _lcd_draw_line *****************
 16563 ;; Defined at:
 16564 ;;		line 210 in file "lib_ili9341.c"
 16565 ;; Parameters:    Size  Location     Type
 16566 ;;  x0              2   30[COMRAM] unsigned short 
 16567 ;;  y0              2   32[COMRAM] unsigned short 
 16568 ;;  x1              2   34[COMRAM] unsigned short 
 16569 ;;  y1              2   36[COMRAM] unsigned short 
 16570 ;;  color           2   38[COMRAM] unsigned short 
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;  dy              2   51[COMRAM] short 
 16573 ;;  dx              2   49[COMRAM] short 
 16574 ;;  e2              2   47[COMRAM] short 
 16575 ;;  err             2   45[COMRAM] short 
 16576 ;;  sy              2   43[COMRAM] short 
 16577 ;;  sx              2   41[COMRAM] short 
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, status,2, status,0, cstack
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16587 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16588 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16590 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16591 ;;Total ram usage:       23 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:   10
 16594 ;; This function calls:
 16595 ;;		_lcd_draw_pixel_at
 16596 ;; This function is called by:
 16597 ;;		_main
 16598 ;;		_lcd_draw_filled_circle
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text50
 16603  004770                     __ptext50:
 16604                           	opt callstack 0
 16605  004770                     _lcd_draw_line:
 16606                           	opt callstack 20
 16607  004770                     
 16608                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 16609  004770  501F               	movf	lcd_draw_line@x0^0,w,c
 16610  004772  5C23               	subwf	lcd_draw_line@x1^0,w,c
 16611  004774  6E32               	movwf	lcd_draw_line@dx^0,c
 16612  004776  5020               	movf	(lcd_draw_line@x0+1)^0,w,c
 16613  004778  5824               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 16614  00477A  6E33               	movwf	(lcd_draw_line@dx+1)^0,c
 16615  00477C  5023               	movf	lcd_draw_line@x1^0,w,c
 16616  00477E  5C1F               	subwf	lcd_draw_line@x0^0,w,c
 16617  004780  5024               	movf	(lcd_draw_line@x1+1)^0,w,c
 16618  004782  5820               	subwfb	(lcd_draw_line@x0+1)^0,w,c
 16619  004784  A0D8               	btfss	status,0,c
 16620  004786  EFC7  F023         	goto	u12671
 16621  00478A  EFC9  F023         	goto	u12670
 16622  00478E                     u12671:
 16623  00478E  EFCD  F023         	goto	l9892
 16624  004792                     u12670:
 16625  004792  682A               	setf	lcd_draw_line@sx^0,c
 16626  004794  682B               	setf	(lcd_draw_line@sx+1)^0,c
 16627  004796  EFD1  F023         	goto	l9894
 16628  00479A                     l9892:
 16629  00479A  0E00               	movlw	0
 16630  00479C  6E2B               	movwf	(lcd_draw_line@sx+1)^0,c
 16631  00479E  0E01               	movlw	1
 16632  0047A0  6E2A               	movwf	lcd_draw_line@sx^0,c
 16633  0047A2                     l9894:
 16634                           
 16635                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 16636  0047A2  5021               	movf	lcd_draw_line@y0^0,w,c
 16637  0047A4  5C25               	subwf	lcd_draw_line@y1^0,w,c
 16638  0047A6  6E34               	movwf	lcd_draw_line@dy^0,c
 16639  0047A8  5022               	movf	(lcd_draw_line@y0+1)^0,w,c
 16640  0047AA  5826               	subwfb	(lcd_draw_line@y1+1)^0,w,c
 16641  0047AC  6E35               	movwf	(lcd_draw_line@dy+1)^0,c
 16642  0047AE  5025               	movf	lcd_draw_line@y1^0,w,c
 16643  0047B0  5C21               	subwf	lcd_draw_line@y0^0,w,c
 16644  0047B2  5026               	movf	(lcd_draw_line@y1+1)^0,w,c
 16645  0047B4  5822               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 16646  0047B6  A0D8               	btfss	status,0,c
 16647  0047B8  EFE0  F023         	goto	u12681
 16648  0047BC  EFE2  F023         	goto	u12680
 16649  0047C0                     u12681:
 16650  0047C0  EFE6  F023         	goto	l9900
 16651  0047C4                     u12680:
 16652  0047C4  682C               	setf	lcd_draw_line@sy^0,c
 16653  0047C6  682D               	setf	(lcd_draw_line@sy+1)^0,c
 16654  0047C8  EFEA  F023         	goto	l9902
 16655  0047CC                     l9900:
 16656  0047CC  0E00               	movlw	0
 16657  0047CE  6E2D               	movwf	(lcd_draw_line@sy+1)^0,c
 16658  0047D0  0E01               	movlw	1
 16659  0047D2  6E2C               	movwf	lcd_draw_line@sy^0,c
 16660  0047D4                     l9902:
 16661                           
 16662                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 16663  0047D4  501F               	movf	lcd_draw_line@x0^0,w,c
 16664  0047D6  5C23               	subwf	lcd_draw_line@x1^0,w,c
 16665  0047D8  5020               	movf	(lcd_draw_line@x0+1)^0,w,c
 16666  0047DA  5824               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 16667  0047DC  B0D8               	btfsc	status,0,c
 16668  0047DE  EFF3  F023         	goto	u12691
 16669  0047E2  EFF5  F023         	goto	u12690
 16670  0047E6                     u12691:
 16671  0047E6  EFF9  F023         	goto	l9906
 16672  0047EA                     u12690:
 16673  0047EA                     
 16674                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 16675  0047EA  6C32               	negf	lcd_draw_line@dx^0,c
 16676  0047EC  1E33               	comf	(lcd_draw_line@dx+1)^0,f,c
 16677  0047EE  B0D8               	btfsc	status,0,c
 16678  0047F0  2A33               	incf	(lcd_draw_line@dx+1)^0,f,c
 16679  0047F2                     l9906:
 16680                           
 16681                           ;lib_ili9341.c: 221:     if(y1 > y0)
 16682  0047F2  5025               	movf	lcd_draw_line@y1^0,w,c
 16683  0047F4  5C21               	subwf	lcd_draw_line@y0^0,w,c
 16684  0047F6  5026               	movf	(lcd_draw_line@y1+1)^0,w,c
 16685  0047F8  5822               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 16686  0047FA  B0D8               	btfsc	status,0,c
 16687  0047FC  EF02  F024         	goto	u12701
 16688  004800  EF04  F024         	goto	u12700
 16689  004804                     u12701:
 16690  004804  EF08  F024         	goto	l9910
 16691  004808                     u12700:
 16692  004808                     
 16693                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 16694  004808  6C34               	negf	lcd_draw_line@dy^0,c
 16695  00480A  1E35               	comf	(lcd_draw_line@dy+1)^0,f,c
 16696  00480C  B0D8               	btfsc	status,0,c
 16697  00480E  2A35               	incf	(lcd_draw_line@dy+1)^0,f,c
 16698  004810                     l9910:
 16699                           
 16700                           ;lib_ili9341.c: 226:     err = dx + dy;
 16701  004810  5034               	movf	lcd_draw_line@dy^0,w,c
 16702  004812  2432               	addwf	lcd_draw_line@dx^0,w,c
 16703  004814  6E2E               	movwf	lcd_draw_line@err^0,c
 16704  004816  5035               	movf	(lcd_draw_line@dy+1)^0,w,c
 16705  004818  2033               	addwfc	(lcd_draw_line@dx+1)^0,w,c
 16706  00481A  6E2F               	movwf	(lcd_draw_line@err+1)^0,c
 16707  00481C                     l9912:
 16708                           
 16709                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 16710  00481C  C01F  F019         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 16711  004820  C020  F01A         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 16712  004824  C021  F01B         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 16713  004828  C022  F01C         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 16714  00482C  C027  F01D         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 16715  004830  C028  F01E         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 16716  004834  ECEF  F02F         	call	_lcd_draw_pixel_at	;wreg free
 16717  004838                     
 16718                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 16719  004838  5023               	movf	lcd_draw_line@x1^0,w,c
 16720  00483A  181F               	xorwf	lcd_draw_line@x0^0,w,c
 16721  00483C  E107               	bnz	u12711
 16722  00483E  5024               	movf	(lcd_draw_line@x1+1)^0,w,c
 16723  004840  1820               	xorwf	(lcd_draw_line@x0+1)^0,w,c
 16724  004842  A4D8               	btfss	status,2,c
 16725  004844  EF26  F024         	goto	u12711
 16726  004848  EF28  F024         	goto	u12710
 16727  00484C                     u12711:
 16728  00484C  EF36  F024         	goto	l9920
 16729  004850                     u12710:
 16730  004850  5025               	movf	lcd_draw_line@y1^0,w,c
 16731  004852  1821               	xorwf	lcd_draw_line@y0^0,w,c
 16732  004854  E107               	bnz	u12721
 16733  004856  5026               	movf	(lcd_draw_line@y1+1)^0,w,c
 16734  004858  1822               	xorwf	(lcd_draw_line@y0+1)^0,w,c
 16735  00485A  A4D8               	btfss	status,2,c
 16736  00485C  EF32  F024         	goto	u12721
 16737  004860  EF34  F024         	goto	u12720
 16738  004864                     u12721:
 16739  004864  EF36  F024         	goto	l9920
 16740  004868                     u12720:
 16741  004868  EF6B  F024         	goto	l516
 16742  00486C                     l9920:
 16743                           
 16744                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 16745  00486C  90D8               	bcf	status,0,c
 16746  00486E  342E               	rlcf	lcd_draw_line@err^0,w,c
 16747  004870  6E30               	movwf	lcd_draw_line@e2^0,c
 16748  004872  342F               	rlcf	(lcd_draw_line@err+1)^0,w,c
 16749  004874  6E31               	movwf	(lcd_draw_line@e2+1)^0,c
 16750                           
 16751                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 16752  004876  5034               	movf	lcd_draw_line@dy^0,w,c
 16753  004878  5C30               	subwf	lcd_draw_line@e2^0,w,c
 16754  00487A  5031               	movf	(lcd_draw_line@e2+1)^0,w,c
 16755  00487C  0A80               	xorlw	128
 16756  00487E  6E29               	movwf	??_lcd_draw_line^0,c
 16757  004880  5035               	movf	(lcd_draw_line@dy+1)^0,w,c
 16758  004882  0A80               	xorlw	128
 16759  004884  5829               	subwfb	??_lcd_draw_line^0,w,c
 16760  004886  A0D8               	btfss	status,0,c
 16761  004888  EF48  F024         	goto	u12731
 16762  00488C  EF4A  F024         	goto	u12730
 16763  004890                     u12731:
 16764  004890  EF52  F024         	goto	l513
 16765  004894                     u12730:
 16766  004894                     
 16767                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 16768  004894  5034               	movf	lcd_draw_line@dy^0,w,c
 16769  004896  262E               	addwf	lcd_draw_line@err^0,f,c
 16770  004898  5035               	movf	(lcd_draw_line@dy+1)^0,w,c
 16771  00489A  222F               	addwfc	(lcd_draw_line@err+1)^0,f,c
 16772                           
 16773                           ;lib_ili9341.c: 242:             x0 += sx;
 16774  00489C  502A               	movf	lcd_draw_line@sx^0,w,c
 16775  00489E  261F               	addwf	lcd_draw_line@x0^0,f,c
 16776  0048A0  502B               	movf	(lcd_draw_line@sx+1)^0,w,c
 16777  0048A2  2220               	addwfc	(lcd_draw_line@x0+1)^0,f,c
 16778  0048A4                     l513:
 16779                           
 16780                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 16781  0048A4  5030               	movf	lcd_draw_line@e2^0,w,c
 16782  0048A6  5C32               	subwf	lcd_draw_line@dx^0,w,c
 16783  0048A8  5033               	movf	(lcd_draw_line@dx+1)^0,w,c
 16784  0048AA  0A80               	xorlw	128
 16785  0048AC  6E29               	movwf	??_lcd_draw_line^0,c
 16786  0048AE  5031               	movf	(lcd_draw_line@e2+1)^0,w,c
 16787  0048B0  0A80               	xorlw	128
 16788  0048B2  5829               	subwfb	??_lcd_draw_line^0,w,c
 16789  0048B4  A0D8               	btfss	status,0,c
 16790  0048B6  EF5F  F024         	goto	u12741
 16791  0048BA  EF61  F024         	goto	u12740
 16792  0048BE                     u12741:
 16793  0048BE  EF0E  F024         	goto	l9912
 16794  0048C2                     u12740:
 16795  0048C2                     
 16796                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 16797  0048C2  5032               	movf	lcd_draw_line@dx^0,w,c
 16798  0048C4  262E               	addwf	lcd_draw_line@err^0,f,c
 16799  0048C6  5033               	movf	(lcd_draw_line@dx+1)^0,w,c
 16800  0048C8  222F               	addwfc	(lcd_draw_line@err+1)^0,f,c
 16801                           
 16802                           ;lib_ili9341.c: 248:             y0 += sy;
 16803  0048CA  502C               	movf	lcd_draw_line@sy^0,w,c
 16804  0048CC  2621               	addwf	lcd_draw_line@y0^0,f,c
 16805  0048CE  502D               	movf	(lcd_draw_line@sy+1)^0,w,c
 16806  0048D0  2222               	addwfc	(lcd_draw_line@y0+1)^0,f,c
 16807  0048D2  EF0E  F024         	goto	l9912
 16808  0048D6                     l516:
 16809  0048D6  0012               	return		;funcret
 16810  0048D8                     __end_of_lcd_draw_line:
 16811                           	opt callstack 0
 16812                           
 16813 ;; *************** function _lcd_draw_pixel_at *****************
 16814 ;; Defined at:
 16815 ;;		line 253 in file "lib_ili9341.c"
 16816 ;; Parameters:    Size  Location     Type
 16817 ;;  x               2   24[COMRAM] unsigned short 
 16818 ;;  y               2   26[COMRAM] unsigned short 
 16819 ;;  color           2   28[COMRAM] unsigned short 
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      void 
 16824 ;; Registers used:
 16825 ;;		wreg, status,2, status,0, cstack
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16831 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16835 ;;Total ram usage:        6 bytes
 16836 ;; Hardware stack levels used:    1
 16837 ;; Hardware stack levels required when called:    9
 16838 ;; This function calls:
 16839 ;;		_lcd_draw_pixel
 16840 ;;		_lcd_set_cursor
 16841 ;; This function is called by:
 16842 ;;		_lcd_draw_line
 16843 ;;		_lcd_draw_circle
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           	psect	text51
 16848  005FDE                     __ptext51:
 16849                           	opt callstack 0
 16850  005FDE                     _lcd_draw_pixel_at:
 16851                           	opt callstack 20
 16852  005FDE                     
 16853                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 16854  005FDE  C019  F015         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 16855  005FE2  C01A  F016         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 16856  005FE6  C01B  F017         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 16857  005FEA  C01C  F018         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 16858  005FEE  ECE8  F02E         	call	_lcd_set_cursor	;wreg free
 16859  005FF2  0900               	iorlw	0
 16860  005FF4  A4D8               	btfss	status,2,c
 16861  005FF6  EFFF  F02F         	goto	u12561
 16862  005FFA  EF01  F030         	goto	u12560
 16863  005FFE                     u12561:
 16864  005FFE  EF07  F030         	goto	l520
 16865  006002                     u12560:
 16866  006002                     
 16867                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 16868  006002  C01D  F013         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 16869  006006  C01E  F014         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 16870  00600A  EC5F  F031         	call	_lcd_draw_pixel	;wreg free
 16871  00600E                     l520:
 16872  00600E  0012               	return		;funcret
 16873  006010                     __end_of_lcd_draw_pixel_at:
 16874                           	opt callstack 0
 16875                           
 16876 ;; *************** function _lcd_set_cursor *****************
 16877 ;; Defined at:
 16878 ;;		line 142 in file "lib_ili9341.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;  x               2   20[COMRAM] unsigned short 
 16881 ;;  y               2   22[COMRAM] unsigned short 
 16882 ;; Auto vars:     Size  Location     Type
 16883 ;;		None
 16884 ;; Return value:  Size  Location     Type
 16885 ;;                  1    wreg      unsigned char 
 16886 ;; Registers used:
 16887 ;;		wreg, status,2, status,0, cstack
 16888 ;; Tracked objects:
 16889 ;;		On entry : 0/0
 16890 ;;		On exit  : 0/0
 16891 ;;		Unchanged: 0/0
 16892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;Total ram usage:        4 bytes
 16898 ;; Hardware stack levels used:    1
 16899 ;; Hardware stack levels required when called:    8
 16900 ;; This function calls:
 16901 ;;		_lcd_set_cursor_x
 16902 ;;		_lcd_set_cursor_y
 16903 ;; This function is called by:
 16904 ;;		_lcd_fill
 16905 ;;		_lcd_draw_pixel_at
 16906 ;;		_lcd_draw_char
 16907 ;;		_lcd_fill_rect
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text52
 16912  005DD0                     __ptext52:
 16913                           	opt callstack 0
 16914  005DD0                     _lcd_set_cursor:
 16915                           	opt callstack 20
 16916  005DD0                     
 16917                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16918  005DD0  C015  F013         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16919  005DD4  C016  F014         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16920  005DD8  EC5C  F02E         	call	_lcd_set_cursor_x	;wreg free
 16921  005DDC  0900               	iorlw	0
 16922  005DDE  A4D8               	btfss	status,2,c
 16923  005DE0  EFF4  F02E         	goto	u12501
 16924  005DE4  EFF6  F02E         	goto	u12500
 16925  005DE8                     u12501:
 16926  005DE8  EF04  F02F         	goto	l9604
 16927  005DEC                     u12500:
 16928  005DEC  C017  F013         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16929  005DF0  C018  F014         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16930  005DF4  EC38  F02E         	call	_lcd_set_cursor_y	;wreg free
 16931  005DF8  0900               	iorlw	0
 16932  005DFA  B4D8               	btfsc	status,2,c
 16933  005DFC  EF02  F02F         	goto	u12511
 16934  005E00  EF04  F02F         	goto	u12510
 16935  005E04                     u12511:
 16936  005E04  EF07  F02F         	goto	l9608
 16937  005E08                     u12510:
 16938  005E08                     l9604:
 16939                           
 16940                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 16941  005E08  0E01               	movlw	1
 16942  005E0A  EF08  F02F         	goto	l476
 16943  005E0E                     l9608:
 16944                           
 16945                           ;lib_ili9341.c: 149:     return 0;
 16946  005E0E  0E00               	movlw	0
 16947  005E10                     l476:
 16948  005E10  0012               	return		;funcret
 16949  005E12                     __end_of_lcd_set_cursor:
 16950                           	opt callstack 0
 16951                           
 16952 ;; *************** function _lcd_set_cursor_y *****************
 16953 ;; Defined at:
 16954 ;;		line 168 in file "lib_ili9341.c"
 16955 ;; Parameters:    Size  Location     Type
 16956 ;;  y               2   18[COMRAM] unsigned short 
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;		None
 16959 ;; Return value:  Size  Location     Type
 16960 ;;                  1    wreg      unsigned char 
 16961 ;; Registers used:
 16962 ;;		wreg, status,2, status,0, cstack
 16963 ;; Tracked objects:
 16964 ;;		On entry : 0/0
 16965 ;;		On exit  : 0/0
 16966 ;;		Unchanged: 0/0
 16967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16972 ;;Total ram usage:        2 bytes
 16973 ;; Hardware stack levels used:    1
 16974 ;; Hardware stack levels required when called:    7
 16975 ;; This function calls:
 16976 ;;		_lcd_send
 16977 ;; This function is called by:
 16978 ;;		_lcd_set_cursor
 16979 ;; This function uses a non-reentrant model
 16980 ;;
 16981                           
 16982                           	psect	text53
 16983  005C70                     __ptext53:
 16984                           	opt callstack 0
 16985  005C70                     _lcd_set_cursor_y:
 16986                           	opt callstack 20
 16987  005C70                     
 16988                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 16989  005C70  5014               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16990  005C72  E109               	bnz	u11970
 16991  005C74  0EF0               	movlw	240
 16992  005C76  5C13               	subwf	lcd_set_cursor_y@y^0,w,c
 16993  005C78  A0D8               	btfss	status,0,c
 16994  005C7A  EF41  F02E         	goto	u11971
 16995  005C7E  EF43  F02E         	goto	u11970
 16996  005C82                     u11971:
 16997  005C82  EF46  F02E         	goto	l9222
 16998  005C86                     u11970:
 16999  005C86                     
 17000                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 17001  005C86  0E01               	movlw	1
 17002  005C88  EF5B  F02E         	goto	l484
 17003  005C8C                     l9222:
 17004                           
 17005                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 17006  005C8C  0E2A               	movlw	42
 17007  005C8E  6E11               	movwf	lcd_send@value^0,c
 17008  005C90  0E00               	movlw	0
 17009  005C92  EC47  F031         	call	_lcd_send
 17010                           
 17011                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 17012  005C96  5014               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 17013  005C98  6E11               	movwf	lcd_send@value^0,c
 17014  005C9A  0E01               	movlw	1
 17015  005C9C  EC47  F031         	call	_lcd_send
 17016                           
 17017                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 17018  005CA0  C013  F011         	movff	lcd_set_cursor_y@y,lcd_send@value
 17019  005CA4  0E01               	movlw	1
 17020  005CA6  EC47  F031         	call	_lcd_send
 17021                           
 17022                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 17023  005CAA  0E2C               	movlw	44
 17024  005CAC  6E11               	movwf	lcd_send@value^0,c
 17025  005CAE  0E00               	movlw	0
 17026  005CB0  EC47  F031         	call	_lcd_send
 17027  005CB4                     
 17028                           ;lib_ili9341.c: 180:     return 0;
 17029  005CB4  0E00               	movlw	0
 17030  005CB6                     l484:
 17031  005CB6  0012               	return		;funcret
 17032  005CB8                     __end_of_lcd_set_cursor_y:
 17033                           	opt callstack 0
 17034                           
 17035 ;; *************** function _lcd_set_cursor_x *****************
 17036 ;; Defined at:
 17037 ;;		line 153 in file "lib_ili9341.c"
 17038 ;; Parameters:    Size  Location     Type
 17039 ;;  x               2   18[COMRAM] unsigned short 
 17040 ;; Auto vars:     Size  Location     Type
 17041 ;;		None
 17042 ;; Return value:  Size  Location     Type
 17043 ;;                  1    wreg      unsigned char 
 17044 ;; Registers used:
 17045 ;;		wreg, status,2, status,0, cstack
 17046 ;; Tracked objects:
 17047 ;;		On entry : 0/0
 17048 ;;		On exit  : 0/0
 17049 ;;		Unchanged: 0/0
 17050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17055 ;;Total ram usage:        2 bytes
 17056 ;; Hardware stack levels used:    1
 17057 ;; Hardware stack levels required when called:    7
 17058 ;; This function calls:
 17059 ;;		_lcd_send
 17060 ;; This function is called by:
 17061 ;;		_lcd_set_cursor
 17062 ;; This function uses a non-reentrant model
 17063 ;;
 17064                           
 17065                           	psect	text54
 17066  005CB8                     __ptext54:
 17067                           	opt callstack 0
 17068  005CB8                     _lcd_set_cursor_x:
 17069                           	opt callstack 20
 17070  005CB8                     
 17071                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 17072  005CB8  0E40               	movlw	64
 17073  005CBA  5C13               	subwf	lcd_set_cursor_x@x^0,w,c
 17074  005CBC  0E01               	movlw	1
 17075  005CBE  5814               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 17076  005CC0  A0D8               	btfss	status,0,c
 17077  005CC2  EF65  F02E         	goto	u11961
 17078  005CC6  EF67  F02E         	goto	u11960
 17079  005CCA                     u11961:
 17080  005CCA  EF6A  F02E         	goto	l9210
 17081  005CCE                     u11960:
 17082  005CCE                     
 17083                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 17084  005CCE  0E01               	movlw	1
 17085  005CD0  EF7F  F02E         	goto	l480
 17086  005CD4                     l9210:
 17087                           
 17088                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 17089  005CD4  0E2B               	movlw	43
 17090  005CD6  6E11               	movwf	lcd_send@value^0,c
 17091  005CD8  0E00               	movlw	0
 17092  005CDA  EC47  F031         	call	_lcd_send
 17093                           
 17094                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 17095  005CDE  5014               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 17096  005CE0  6E11               	movwf	lcd_send@value^0,c
 17097  005CE2  0E01               	movlw	1
 17098  005CE4  EC47  F031         	call	_lcd_send
 17099                           
 17100                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 17101  005CE8  C013  F011         	movff	lcd_set_cursor_x@x,lcd_send@value
 17102  005CEC  0E01               	movlw	1
 17103  005CEE  EC47  F031         	call	_lcd_send
 17104                           
 17105                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 17106  005CF2  0E2C               	movlw	44
 17107  005CF4  6E11               	movwf	lcd_send@value^0,c
 17108  005CF6  0E00               	movlw	0
 17109  005CF8  EC47  F031         	call	_lcd_send
 17110  005CFC                     
 17111                           ;lib_ili9341.c: 165:     return 0;
 17112  005CFC  0E00               	movlw	0
 17113  005CFE                     l480:
 17114  005CFE  0012               	return		;funcret
 17115  005D00                     __end_of_lcd_set_cursor_x:
 17116                           	opt callstack 0
 17117                           
 17118 ;; *************** function _lcd_draw_pixel *****************
 17119 ;; Defined at:
 17120 ;;		line 183 in file "lib_ili9341.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;  color           2   18[COMRAM] unsigned short 
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;		None
 17125 ;; Return value:  Size  Location     Type
 17126 ;;                  1    wreg      unsigned char 
 17127 ;; Registers used:
 17128 ;;		wreg, status,2, cstack
 17129 ;; Tracked objects:
 17130 ;;		On entry : 0/0
 17131 ;;		On exit  : 0/0
 17132 ;;		Unchanged: 0/0
 17133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17138 ;;Total ram usage:        2 bytes
 17139 ;; Hardware stack levels used:    1
 17140 ;; Hardware stack levels required when called:    7
 17141 ;; This function calls:
 17142 ;;		_lcd_send
 17143 ;; This function is called by:
 17144 ;;		_lcd_fill
 17145 ;;		_lcd_draw_pixel_at
 17146 ;;		_lcd_draw_char
 17147 ;;		_lcd_fill_rect
 17148 ;; This function uses a non-reentrant model
 17149 ;;
 17150                           
 17151                           	psect	text55
 17152  0062BE                     __ptext55:
 17153                           	opt callstack 0
 17154  0062BE                     _lcd_draw_pixel:
 17155                           	opt callstack 21
 17156  0062BE                     
 17157                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 17158  0062BE  5014               	movf	(lcd_draw_pixel@color+1)^0,w,c
 17159  0062C0  6E11               	movwf	lcd_send@value^0,c
 17160  0062C2  0E01               	movlw	1
 17161  0062C4  EC47  F031         	call	_lcd_send
 17162                           
 17163                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 17164  0062C8  C013  F011         	movff	lcd_draw_pixel@color,lcd_send@value
 17165  0062CC  0E01               	movlw	1
 17166  0062CE  EC47  F031         	call	_lcd_send
 17167  0062D2  0012               	return		;funcret
 17168  0062D4                     __end_of_lcd_draw_pixel:
 17169                           	opt callstack 0
 17170                           
 17171 ;; *************** function _lcd_send *****************
 17172 ;; Defined at:
 17173 ;;		line 132 in file "lib_ili9341.c"
 17174 ;; Parameters:    Size  Location     Type
 17175 ;;  dc              1    wreg     _Bool 
 17176 ;;  value           1   16[COMRAM] unsigned char 
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;  dc              1   17[COMRAM] _Bool 
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      void 
 17181 ;; Registers used:
 17182 ;;		wreg, status,2, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;Total ram usage:        2 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:    6
 17195 ;; This function calls:
 17196 ;;		_SPI_ExchangeByte
 17197 ;; This function is called by:
 17198 ;;		_lcd_init
 17199 ;;		_lcd_set_cursor_x
 17200 ;;		_lcd_set_cursor_y
 17201 ;;		_lcd_draw_pixel
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           	psect	text56
 17206  00628E                     __ptext56:
 17207                           	opt callstack 0
 17208  00628E                     _lcd_send:
 17209                           	opt callstack 23
 17210                           
 17211                           ;incstack = 0
 17212                           ;lcd_send@dc stored from wreg
 17213  00628E  6E12               	movwf	lcd_send@dc^0,c
 17214  006290                     
 17215                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 17216  006290  B012               	btfsc	lcd_send@dc^0,0,c
 17217  006292  D002               	bra	u10705
 17218  006294  908D               	bcf	141,0,c	;volatile
 17219  006296  D001               	bra	u10706
 17220  006298                     u10705:
 17221  006298  808D               	bsf	141,0,c	;volatile
 17222  00629A                     u10706:
 17223  00629A                     
 17224                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 17225  00629A  928D               	bcf	141,1,c	;volatile
 17226  00629C                     
 17227                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 17228  00629C  5011               	movf	lcd_send@value^0,w,c
 17229  00629E  EC3A  F031         	call	_SPI_ExchangeByte
 17230  0062A2                     
 17231                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 17232  0062A2  828D               	bsf	141,1,c	;volatile
 17233  0062A4  0012               	return		;funcret
 17234  0062A6                     __end_of_lcd_send:
 17235                           	opt callstack 0
 17236                           
 17237 ;; *************** function _SPI_ExchangeByte *****************
 17238 ;; Defined at:
 17239 ;;		line 92 in file "mcc_generated_files/spi.c"
 17240 ;; Parameters:    Size  Location     Type
 17241 ;;  data            1    wreg     unsigned char 
 17242 ;; Auto vars:     Size  Location     Type
 17243 ;;  data            1   15[COMRAM] unsigned char 
 17244 ;; Return value:  Size  Location     Type
 17245 ;;                  1    wreg      unsigned char 
 17246 ;; Registers used:
 17247 ;;		wreg, status,2
 17248 ;; Tracked objects:
 17249 ;;		On entry : 0/0
 17250 ;;		On exit  : 0/0
 17251 ;;		Unchanged: 0/0
 17252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17257 ;;Total ram usage:        1 bytes
 17258 ;; Hardware stack levels used:    1
 17259 ;; Hardware stack levels required when called:    5
 17260 ;; This function calls:
 17261 ;;		Nothing
 17262 ;; This function is called by:
 17263 ;;		_lcd_send
 17264 ;;		_SPI_WriteBlock
 17265 ;;		_SPI_ReadBlock
 17266 ;; This function uses a non-reentrant model
 17267 ;;
 17268                           
 17269                           	psect	text57
 17270  006274                     __ptext57:
 17271                           	opt callstack 0
 17272  006274                     _SPI_ExchangeByte:
 17273                           	opt callstack 23
 17274                           
 17275                           ;incstack = 0
 17276                           ;SPI_ExchangeByte@data stored from wreg
 17277  006274  6E10               	movwf	SPI_ExchangeByte@data^0,c
 17278  006276                     
 17279                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 17280  006276  C010  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 17281  00627A                     l154:
 17282  00627A  A69E               	btfss	158,3,c	;volatile
 17283  00627C  EF42  F031         	goto	u9431
 17284  006280  EF44  F031         	goto	u9430
 17285  006284                     u9431:
 17286  006284  EF3D  F031         	goto	l154
 17287  006288                     u9430:
 17288  006288                     
 17289                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 17290  006288  969E               	bcf	158,3,c	;volatile
 17291                           
 17292                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 17293  00628A  50C9               	movf	201,w,c	;volatile
 17294  00628C  0012               	return		;funcret
 17295  00628E                     __end_of_SPI_ExchangeByte:
 17296                           	opt callstack 0
 17297                           
 17298 ;; *************** function ___xxtofl *****************
 17299 ;; Defined at:
 17300 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17301 ;; Parameters:    Size  Location     Type
 17302 ;;  sign            1    wreg     unsigned char 
 17303 ;;  val             4   15[COMRAM] long 
 17304 ;; Auto vars:     Size  Location     Type
 17305 ;;  sign            1   23[COMRAM] unsigned char 
 17306 ;;  arg             4   25[COMRAM] unsigned long 
 17307 ;;  exp             1   24[COMRAM] unsigned char 
 17308 ;; Return value:  Size  Location     Type
 17309 ;;                  4   15[COMRAM] unsigned char 
 17310 ;; Registers used:
 17311 ;;		wreg, status,2, status,0
 17312 ;; Tracked objects:
 17313 ;;		On entry : 0/0
 17314 ;;		On exit  : 0/0
 17315 ;;		Unchanged: 0/0
 17316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17318 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17320 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17321 ;;Total ram usage:       14 bytes
 17322 ;; Hardware stack levels used:    1
 17323 ;; Hardware stack levels required when called:    5
 17324 ;; This function calls:
 17325 ;;		Nothing
 17326 ;; This function is called by:
 17327 ;;		_main
 17328 ;; This function uses a non-reentrant model
 17329 ;;
 17330                           
 17331                           	psect	text58
 17332  003F9E                     __ptext58:
 17333                           	opt callstack 0
 17334  003F9E                     ___xxtofl:
 17335                           	opt callstack 25
 17336                           
 17337                           ;incstack = 0
 17338                           ;___xxtofl@sign stored from wreg
 17339  003F9E  6E18               	movwf	___xxtofl@sign^0,c
 17340  003FA0  5018               	movf	___xxtofl@sign^0,w,c
 17341  003FA2  B4D8               	btfsc	status,2,c
 17342  003FA4  EFD6  F01F         	goto	u8621
 17343  003FA8  EFD8  F01F         	goto	u8620
 17344  003FAC                     u8621:
 17345  003FAC  EFFA  F01F         	goto	l1624
 17346  003FB0                     u8620:
 17347  003FB0  BE13               	btfsc	(___xxtofl@val+3)^0,7,c
 17348  003FB2  EFDF  F01F         	goto	u8630
 17349  003FB6  EFDD  F01F         	goto	u8631
 17350  003FBA                     u8631:
 17351  003FBA  EFFA  F01F         	goto	l1624
 17352  003FBE                     u8630:
 17353  003FBE  C010  F014         	movff	___xxtofl@val,??___xxtofl
 17354  003FC2  C011  F015         	movff	___xxtofl@val+1,??___xxtofl+1
 17355  003FC6  C012  F016         	movff	___xxtofl@val+2,??___xxtofl+2
 17356  003FCA  C013  F017         	movff	___xxtofl@val+3,??___xxtofl+3
 17357  003FCE  1E14               	comf	??___xxtofl^0,f,c
 17358  003FD0  1E15               	comf	(??___xxtofl+1)^0,f,c
 17359  003FD2  1E16               	comf	(??___xxtofl+2)^0,f,c
 17360  003FD4  1E17               	comf	(??___xxtofl+3)^0,f,c
 17361  003FD6  2A14               	incf	??___xxtofl^0,f,c
 17362  003FD8  0E00               	movlw	0
 17363  003FDA  2215               	addwfc	(??___xxtofl+1)^0,f,c
 17364  003FDC  2216               	addwfc	(??___xxtofl+2)^0,f,c
 17365  003FDE  2217               	addwfc	(??___xxtofl+3)^0,f,c
 17366  003FE0  C014  F01A         	movff	??___xxtofl,___xxtofl@arg
 17367  003FE4  C015  F01B         	movff	??___xxtofl+1,___xxtofl@arg+1
 17368  003FE8  C016  F01C         	movff	??___xxtofl+2,___xxtofl@arg+2
 17369  003FEC  C017  F01D         	movff	??___xxtofl+3,___xxtofl@arg+3
 17370  003FF0  EF02  F020         	goto	l7362
 17371  003FF4                     l1624:
 17372  003FF4  C010  F01A         	movff	___xxtofl@val,___xxtofl@arg
 17373  003FF8  C011  F01B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17374  003FFC  C012  F01C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17375  004000  C013  F01D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17376  004004                     l7362:
 17377  004004  5010               	movf	___xxtofl@val^0,w,c
 17378  004006  1011               	iorwf	(___xxtofl@val+1)^0,w,c
 17379  004008  1012               	iorwf	(___xxtofl@val+2)^0,w,c
 17380  00400A  1013               	iorwf	(___xxtofl@val+3)^0,w,c
 17381  00400C  A4D8               	btfss	status,2,c
 17382  00400E  EF0B  F020         	goto	u8641
 17383  004012  EF0D  F020         	goto	u8640
 17384  004016                     u8641:
 17385  004016  EF17  F020         	goto	l7368
 17386  00401A                     u8640:
 17387  00401A  0E00               	movlw	0
 17388  00401C  6E10               	movwf	?___xxtofl^0,c
 17389  00401E  0E00               	movlw	0
 17390  004020  6E11               	movwf	(?___xxtofl+1)^0,c
 17391  004022  0E00               	movlw	0
 17392  004024  6E12               	movwf	(?___xxtofl+2)^0,c
 17393  004026  0E00               	movlw	0
 17394  004028  6E13               	movwf	(?___xxtofl+3)^0,c
 17395  00402A  EFA8  F020         	goto	l1627
 17396  00402E                     l7368:
 17397  00402E  0E96               	movlw	150
 17398  004030  6E19               	movwf	___xxtofl@exp^0,c
 17399  004032  EF21  F020         	goto	l7372
 17400  004036                     l7370:
 17401  004036  2A19               	incf	___xxtofl@exp^0,f,c
 17402  004038  90D8               	bcf	status,0,c
 17403  00403A  321D               	rrcf	(___xxtofl@arg+3)^0,f,c
 17404  00403C  321C               	rrcf	(___xxtofl@arg+2)^0,f,c
 17405  00403E  321B               	rrcf	(___xxtofl@arg+1)^0,f,c
 17406  004040  321A               	rrcf	___xxtofl@arg^0,f,c
 17407  004042                     l7372:
 17408  004042  0E00               	movlw	0
 17409  004044  141A               	andwf	___xxtofl@arg^0,w,c
 17410  004046  6E14               	movwf	??___xxtofl^0,c
 17411  004048  0E00               	movlw	0
 17412  00404A  141B               	andwf	(___xxtofl@arg+1)^0,w,c
 17413  00404C  6E15               	movwf	(??___xxtofl+1)^0,c
 17414  00404E  0E00               	movlw	0
 17415  004050  141C               	andwf	(___xxtofl@arg+2)^0,w,c
 17416  004052  6E16               	movwf	(??___xxtofl+2)^0,c
 17417  004054  0EFE               	movlw	254
 17418  004056  141D               	andwf	(___xxtofl@arg+3)^0,w,c
 17419  004058  6E17               	movwf	(??___xxtofl+3)^0,c
 17420  00405A  5014               	movf	??___xxtofl^0,w,c
 17421  00405C  1015               	iorwf	(??___xxtofl+1)^0,w,c
 17422  00405E  1016               	iorwf	(??___xxtofl+2)^0,w,c
 17423  004060  1017               	iorwf	(??___xxtofl+3)^0,w,c
 17424  004062  A4D8               	btfss	status,2,c
 17425  004064  EF36  F020         	goto	u8651
 17426  004068  EF38  F020         	goto	u8650
 17427  00406C                     u8651:
 17428  00406C  EF1B  F020         	goto	l7370
 17429  004070                     u8650:
 17430  004070  EF46  F020         	goto	l1631
 17431  004074                     l7374:
 17432  004074  2A19               	incf	___xxtofl@exp^0,f,c
 17433  004076  0E01               	movlw	1
 17434  004078  261A               	addwf	___xxtofl@arg^0,f,c
 17435  00407A  0E00               	movlw	0
 17436  00407C  221B               	addwfc	(___xxtofl@arg+1)^0,f,c
 17437  00407E  221C               	addwfc	(___xxtofl@arg+2)^0,f,c
 17438  004080  221D               	addwfc	(___xxtofl@arg+3)^0,f,c
 17439  004082  90D8               	bcf	status,0,c
 17440  004084  321D               	rrcf	(___xxtofl@arg+3)^0,f,c
 17441  004086  321C               	rrcf	(___xxtofl@arg+2)^0,f,c
 17442  004088  321B               	rrcf	(___xxtofl@arg+1)^0,f,c
 17443  00408A  321A               	rrcf	___xxtofl@arg^0,f,c
 17444  00408C                     l1631:
 17445  00408C  0E00               	movlw	0
 17446  00408E  141A               	andwf	___xxtofl@arg^0,w,c
 17447  004090  6E14               	movwf	??___xxtofl^0,c
 17448  004092  0E00               	movlw	0
 17449  004094  141B               	andwf	(___xxtofl@arg+1)^0,w,c
 17450  004096  6E15               	movwf	(??___xxtofl+1)^0,c
 17451  004098  0E00               	movlw	0
 17452  00409A  141C               	andwf	(___xxtofl@arg+2)^0,w,c
 17453  00409C  6E16               	movwf	(??___xxtofl+2)^0,c
 17454  00409E  0EFF               	movlw	255
 17455  0040A0  141D               	andwf	(___xxtofl@arg+3)^0,w,c
 17456  0040A2  6E17               	movwf	(??___xxtofl+3)^0,c
 17457  0040A4  5014               	movf	??___xxtofl^0,w,c
 17458  0040A6  1015               	iorwf	(??___xxtofl+1)^0,w,c
 17459  0040A8  1016               	iorwf	(??___xxtofl+2)^0,w,c
 17460  0040AA  1017               	iorwf	(??___xxtofl+3)^0,w,c
 17461  0040AC  A4D8               	btfss	status,2,c
 17462  0040AE  EF5B  F020         	goto	u8661
 17463  0040B2  EF5D  F020         	goto	u8660
 17464  0040B6                     u8661:
 17465  0040B6  EF3A  F020         	goto	l7374
 17466  0040BA                     u8660:
 17467  0040BA  EF65  F020         	goto	l7382
 17468  0040BE                     l7380:
 17469  0040BE  0619               	decf	___xxtofl@exp^0,f,c
 17470  0040C0  90D8               	bcf	status,0,c
 17471  0040C2  361A               	rlcf	___xxtofl@arg^0,f,c
 17472  0040C4  361B               	rlcf	(___xxtofl@arg+1)^0,f,c
 17473  0040C6  361C               	rlcf	(___xxtofl@arg+2)^0,f,c
 17474  0040C8  361D               	rlcf	(___xxtofl@arg+3)^0,f,c
 17475  0040CA                     l7382:
 17476  0040CA  BE1C               	btfsc	(___xxtofl@arg+2)^0,7,c
 17477  0040CC  EF6A  F020         	goto	u8671
 17478  0040D0  EF6C  F020         	goto	u8670
 17479  0040D4                     u8671:
 17480  0040D4  EF74  F020         	goto	l1638
 17481  0040D8                     u8670:
 17482  0040D8  0E02               	movlw	2
 17483  0040DA  6019               	cpfslt	___xxtofl@exp^0,c
 17484  0040DC  EF72  F020         	goto	u8681
 17485  0040E0  EF74  F020         	goto	u8680
 17486  0040E4                     u8681:
 17487  0040E4  EF5F  F020         	goto	l7380
 17488  0040E8                     u8680:
 17489  0040E8                     l1638:
 17490  0040E8  B019               	btfsc	___xxtofl@exp^0,0,c
 17491  0040EA  EF79  F020         	goto	u8691
 17492  0040EE  EF7B  F020         	goto	u8690
 17493  0040F2                     u8691:
 17494  0040F2  EF7C  F020         	goto	l7388
 17495  0040F6                     u8690:
 17496  0040F6  9E1C               	bcf	(___xxtofl@arg+2)^0,7,c
 17497  0040F8                     l7388:
 17498  0040F8  90D8               	bcf	status,0,c
 17499  0040FA  3219               	rrcf	___xxtofl@exp^0,f,c
 17500  0040FC  C019  F014         	movff	___xxtofl@exp,??___xxtofl
 17501  004100  6A15               	clrf	(??___xxtofl+1)^0,c
 17502  004102  6A16               	clrf	(??___xxtofl+2)^0,c
 17503  004104  6A17               	clrf	(??___xxtofl+3)^0,c
 17504  004106  C014  F017         	movff	??___xxtofl,??___xxtofl+3
 17505  00410A  6A16               	clrf	(??___xxtofl+2)^0,c
 17506  00410C  6A15               	clrf	(??___xxtofl+1)^0,c
 17507  00410E  6A14               	clrf	??___xxtofl^0,c
 17508  004110  5014               	movf	??___xxtofl^0,w,c
 17509  004112  121A               	iorwf	___xxtofl@arg^0,f,c
 17510  004114  5015               	movf	(??___xxtofl+1)^0,w,c
 17511  004116  121B               	iorwf	(___xxtofl@arg+1)^0,f,c
 17512  004118  5016               	movf	(??___xxtofl+2)^0,w,c
 17513  00411A  121C               	iorwf	(___xxtofl@arg+2)^0,f,c
 17514  00411C  5017               	movf	(??___xxtofl+3)^0,w,c
 17515  00411E  121D               	iorwf	(___xxtofl@arg+3)^0,f,c
 17516  004120  5018               	movf	___xxtofl@sign^0,w,c
 17517  004122  B4D8               	btfsc	status,2,c
 17518  004124  EF96  F020         	goto	u8701
 17519  004128  EF98  F020         	goto	u8700
 17520  00412C                     u8701:
 17521  00412C  EFA0  F020         	goto	l7398
 17522  004130                     u8700:
 17523  004130  BE13               	btfsc	(___xxtofl@val+3)^0,7,c
 17524  004132  EF9F  F020         	goto	u8710
 17525  004136  EF9D  F020         	goto	u8711
 17526  00413A                     u8711:
 17527  00413A  EFA0  F020         	goto	l7398
 17528  00413E                     u8710:
 17529  00413E  8E1D               	bsf	(___xxtofl@arg+3)^0,7,c
 17530  004140                     l7398:
 17531  004140  C01A  F010         	movff	___xxtofl@arg,?___xxtofl
 17532  004144  C01B  F011         	movff	___xxtofl@arg+1,?___xxtofl+1
 17533  004148  C01C  F012         	movff	___xxtofl@arg+2,?___xxtofl+2
 17534  00414C  C01D  F013         	movff	___xxtofl@arg+3,?___xxtofl+3
 17535  004150                     l1627:
 17536  004150  0012               	return		;funcret
 17537  004152                     __end_of___xxtofl:
 17538                           	opt callstack 0
 17539                           
 17540 ;; *************** function ___aldiv *****************
 17541 ;; Defined at:
 17542 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 17543 ;; Parameters:    Size  Location     Type
 17544 ;;  dividend        4   15[COMRAM] long 
 17545 ;;  divisor         4   19[COMRAM] long 
 17546 ;; Auto vars:     Size  Location     Type
 17547 ;;  quotient        4   25[COMRAM] long 
 17548 ;;  sign            1   24[COMRAM] unsigned char 
 17549 ;;  counter         1   23[COMRAM] unsigned char 
 17550 ;; Return value:  Size  Location     Type
 17551 ;;                  4   15[COMRAM] long 
 17552 ;; Registers used:
 17553 ;;		wreg, status,2, status,0
 17554 ;; Tracked objects:
 17555 ;;		On entry : 0/0
 17556 ;;		On exit  : 0/0
 17557 ;;		Unchanged: 0/0
 17558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17559 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17560 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17562 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17563 ;;Total ram usage:       14 bytes
 17564 ;; Hardware stack levels used:    1
 17565 ;; Hardware stack levels required when called:    5
 17566 ;; This function calls:
 17567 ;;		Nothing
 17568 ;; This function is called by:
 17569 ;;		_main
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           	psect	text59
 17574  004DCC                     __ptext59:
 17575                           	opt callstack 0
 17576  004DCC                     ___aldiv:
 17577                           	opt callstack 25
 17578  004DCC  0E00               	movlw	0
 17579  004DCE  6E19               	movwf	___aldiv@sign^0,c
 17580  004DD0  BE17               	btfsc	(___aldiv@divisor+3)^0,7,c
 17581  004DD2  EFEF  F026         	goto	u8560
 17582  004DD6  EFED  F026         	goto	u8561
 17583  004DDA                     u8561:
 17584  004DDA  EFF9  F026         	goto	l7320
 17585  004DDE                     u8560:
 17586  004DDE  1E17               	comf	(___aldiv@divisor+3)^0,f,c
 17587  004DE0  1E16               	comf	(___aldiv@divisor+2)^0,f,c
 17588  004DE2  1E15               	comf	(___aldiv@divisor+1)^0,f,c
 17589  004DE4  6C14               	negf	___aldiv@divisor^0,c
 17590  004DE6  0E00               	movlw	0
 17591  004DE8  2215               	addwfc	(___aldiv@divisor+1)^0,f,c
 17592  004DEA  2216               	addwfc	(___aldiv@divisor+2)^0,f,c
 17593  004DEC  2217               	addwfc	(___aldiv@divisor+3)^0,f,c
 17594  004DEE  0E01               	movlw	1
 17595  004DF0  6E19               	movwf	___aldiv@sign^0,c
 17596  004DF2                     l7320:
 17597  004DF2  BE13               	btfsc	(___aldiv@dividend+3)^0,7,c
 17598  004DF4  EF00  F027         	goto	u8570
 17599  004DF8  EFFE  F026         	goto	u8571
 17600  004DFC                     u8571:
 17601  004DFC  EF0A  F027         	goto	l7326
 17602  004E00                     u8570:
 17603  004E00  1E13               	comf	(___aldiv@dividend+3)^0,f,c
 17604  004E02  1E12               	comf	(___aldiv@dividend+2)^0,f,c
 17605  004E04  1E11               	comf	(___aldiv@dividend+1)^0,f,c
 17606  004E06  6C10               	negf	___aldiv@dividend^0,c
 17607  004E08  0E00               	movlw	0
 17608  004E0A  2211               	addwfc	(___aldiv@dividend+1)^0,f,c
 17609  004E0C  2212               	addwfc	(___aldiv@dividend+2)^0,f,c
 17610  004E0E  2213               	addwfc	(___aldiv@dividend+3)^0,f,c
 17611  004E10  0E01               	movlw	1
 17612  004E12  1A19               	xorwf	___aldiv@sign^0,f,c
 17613  004E14                     l7326:
 17614  004E14  0E00               	movlw	0
 17615  004E16  6E1A               	movwf	___aldiv@quotient^0,c
 17616  004E18  0E00               	movlw	0
 17617  004E1A  6E1B               	movwf	(___aldiv@quotient+1)^0,c
 17618  004E1C  0E00               	movlw	0
 17619  004E1E  6E1C               	movwf	(___aldiv@quotient+2)^0,c
 17620  004E20  0E00               	movlw	0
 17621  004E22  6E1D               	movwf	(___aldiv@quotient+3)^0,c
 17622  004E24  5014               	movf	___aldiv@divisor^0,w,c
 17623  004E26  1015               	iorwf	(___aldiv@divisor+1)^0,w,c
 17624  004E28  1016               	iorwf	(___aldiv@divisor+2)^0,w,c
 17625  004E2A  1017               	iorwf	(___aldiv@divisor+3)^0,w,c
 17626  004E2C  B4D8               	btfsc	status,2,c
 17627  004E2E  EF1B  F027         	goto	u8581
 17628  004E32  EF1D  F027         	goto	u8580
 17629  004E36                     u8581:
 17630  004E36  EF53  F027         	goto	l7348
 17631  004E3A                     u8580:
 17632  004E3A  0E01               	movlw	1
 17633  004E3C  6E18               	movwf	___aldiv@counter^0,c
 17634  004E3E  EF27  F027         	goto	l7334
 17635  004E42                     l7332:
 17636  004E42  90D8               	bcf	status,0,c
 17637  004E44  3614               	rlcf	___aldiv@divisor^0,f,c
 17638  004E46  3615               	rlcf	(___aldiv@divisor+1)^0,f,c
 17639  004E48  3616               	rlcf	(___aldiv@divisor+2)^0,f,c
 17640  004E4A  3617               	rlcf	(___aldiv@divisor+3)^0,f,c
 17641  004E4C  2A18               	incf	___aldiv@counter^0,f,c
 17642  004E4E                     l7334:
 17643  004E4E  AE17               	btfss	(___aldiv@divisor+3)^0,7,c
 17644  004E50  EF2C  F027         	goto	u8591
 17645  004E54  EF2E  F027         	goto	u8590
 17646  004E58                     u8591:
 17647  004E58  EF21  F027         	goto	l7332
 17648  004E5C                     u8590:
 17649  004E5C                     l7336:
 17650  004E5C  90D8               	bcf	status,0,c
 17651  004E5E  361A               	rlcf	___aldiv@quotient^0,f,c
 17652  004E60  361B               	rlcf	(___aldiv@quotient+1)^0,f,c
 17653  004E62  361C               	rlcf	(___aldiv@quotient+2)^0,f,c
 17654  004E64  361D               	rlcf	(___aldiv@quotient+3)^0,f,c
 17655  004E66  5014               	movf	___aldiv@divisor^0,w,c
 17656  004E68  5C10               	subwf	___aldiv@dividend^0,w,c
 17657  004E6A  5015               	movf	(___aldiv@divisor+1)^0,w,c
 17658  004E6C  5811               	subwfb	(___aldiv@dividend+1)^0,w,c
 17659  004E6E  5016               	movf	(___aldiv@divisor+2)^0,w,c
 17660  004E70  5812               	subwfb	(___aldiv@dividend+2)^0,w,c
 17661  004E72  5017               	movf	(___aldiv@divisor+3)^0,w,c
 17662  004E74  5813               	subwfb	(___aldiv@dividend+3)^0,w,c
 17663  004E76  A0D8               	btfss	status,0,c
 17664  004E78  EF40  F027         	goto	u8601
 17665  004E7C  EF42  F027         	goto	u8600
 17666  004E80                     u8601:
 17667  004E80  EF4B  F027         	goto	l7344
 17668  004E84                     u8600:
 17669  004E84  5014               	movf	___aldiv@divisor^0,w,c
 17670  004E86  5E10               	subwf	___aldiv@dividend^0,f,c
 17671  004E88  5015               	movf	(___aldiv@divisor+1)^0,w,c
 17672  004E8A  5A11               	subwfb	(___aldiv@dividend+1)^0,f,c
 17673  004E8C  5016               	movf	(___aldiv@divisor+2)^0,w,c
 17674  004E8E  5A12               	subwfb	(___aldiv@dividend+2)^0,f,c
 17675  004E90  5017               	movf	(___aldiv@divisor+3)^0,w,c
 17676  004E92  5A13               	subwfb	(___aldiv@dividend+3)^0,f,c
 17677  004E94  801A               	bsf	___aldiv@quotient^0,0,c
 17678  004E96                     l7344:
 17679  004E96  90D8               	bcf	status,0,c
 17680  004E98  3217               	rrcf	(___aldiv@divisor+3)^0,f,c
 17681  004E9A  3216               	rrcf	(___aldiv@divisor+2)^0,f,c
 17682  004E9C  3215               	rrcf	(___aldiv@divisor+1)^0,f,c
 17683  004E9E  3214               	rrcf	___aldiv@divisor^0,f,c
 17684  004EA0  2E18               	decfsz	___aldiv@counter^0,f,c
 17685  004EA2  EF2E  F027         	goto	l7336
 17686  004EA6                     l7348:
 17687  004EA6  5019               	movf	___aldiv@sign^0,w,c
 17688  004EA8  B4D8               	btfsc	status,2,c
 17689  004EAA  EF59  F027         	goto	u8611
 17690  004EAE  EF5B  F027         	goto	u8610
 17691  004EB2                     u8611:
 17692  004EB2  EF63  F027         	goto	l7352
 17693  004EB6                     u8610:
 17694  004EB6  1E1D               	comf	(___aldiv@quotient+3)^0,f,c
 17695  004EB8  1E1C               	comf	(___aldiv@quotient+2)^0,f,c
 17696  004EBA  1E1B               	comf	(___aldiv@quotient+1)^0,f,c
 17697  004EBC  6C1A               	negf	___aldiv@quotient^0,c
 17698  004EBE  0E00               	movlw	0
 17699  004EC0  221B               	addwfc	(___aldiv@quotient+1)^0,f,c
 17700  004EC2  221C               	addwfc	(___aldiv@quotient+2)^0,f,c
 17701  004EC4  221D               	addwfc	(___aldiv@quotient+3)^0,f,c
 17702  004EC6                     l7352:
 17703  004EC6  C01A  F010         	movff	___aldiv@quotient,?___aldiv
 17704  004ECA  C01B  F011         	movff	___aldiv@quotient+1,?___aldiv+1
 17705  004ECE  C01C  F012         	movff	___aldiv@quotient+2,?___aldiv+2
 17706  004ED2  C01D  F013         	movff	___aldiv@quotient+3,?___aldiv+3
 17707  004ED6  0012               	return		;funcret
 17708  004ED8                     __end_of___aldiv:
 17709                           	opt callstack 0
 17710                           
 17711 ;; *************** function _SYSTEM_Initialize *****************
 17712 ;; Defined at:
 17713 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17714 ;; Parameters:    Size  Location     Type
 17715 ;;		None
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;		None
 17718 ;; Return value:  Size  Location     Type
 17719 ;;                  1    wreg      void 
 17720 ;; Registers used:
 17721 ;;		wreg, status,2, status,0, cstack
 17722 ;; Tracked objects:
 17723 ;;		On entry : 0/0
 17724 ;;		On exit  : 0/0
 17725 ;;		Unchanged: 0/0
 17726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17731 ;;Total ram usage:        0 bytes
 17732 ;; Hardware stack levels used:    1
 17733 ;; Hardware stack levels required when called:    7
 17734 ;; This function calls:
 17735 ;;		_ADC_Initialize
 17736 ;;		_EXT_INT_Initialize
 17737 ;;		_INTERRUPT_Initialize
 17738 ;;		_OSCILLATOR_Initialize
 17739 ;;		_PIN_MANAGER_Initialize
 17740 ;;		_SPI_Initialize
 17741 ;;		_TMR0_Initialize
 17742 ;;		_TMR1_Initialize
 17743 ;;		_TMR2_Initialize
 17744 ;; This function is called by:
 17745 ;;		_main
 17746 ;; This function uses a non-reentrant model
 17747 ;;
 17748                           
 17749                           	psect	text60
 17750  0061CC                     __ptext60:
 17751                           	opt callstack 0
 17752  0061CC                     _SYSTEM_Initialize:
 17753                           	opt callstack 23
 17754  0061CC                     
 17755                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 17756  0061CC  ECAD  F031         	call	_INTERRUPT_Initialize	;wreg free
 17757  0061D0                     
 17758                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 17759  0061D0  EC74  F031         	call	_SPI_Initialize	;wreg free
 17760  0061D4                     
 17761                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17762  0061D4  ECA3  F02E         	call	_PIN_MANAGER_Initialize	;wreg free
 17763  0061D8                     
 17764                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17765  0061D8  EC7D  F031         	call	_OSCILLATOR_Initialize	;wreg free
 17766  0061DC                     
 17767                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 17768  0061DC  ECF9  F030         	call	_ADC_Initialize	;wreg free
 17769  0061E0                     
 17770                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 17771  0061E0  EC1C  F031         	call	_TMR2_Initialize	;wreg free
 17772  0061E4                     
 17773                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 17774  0061E4  EC6A  F031         	call	_EXT_INT_Initialize	;wreg free
 17775  0061E8                     
 17776                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 17777  0061E8  EC94  F030         	call	_TMR1_Initialize	;wreg free
 17778  0061EC                     
 17779                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 17780  0061EC  ECBF  F030         	call	_TMR0_Initialize	;wreg free
 17781  0061F0  0012               	return		;funcret
 17782  0061F2                     __end_of_SYSTEM_Initialize:
 17783                           	opt callstack 0
 17784                           
 17785 ;; *************** function _TMR2_Initialize *****************
 17786 ;; Defined at:
 17787 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;		None
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  1    wreg      void 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2, status,0, cstack
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:    6
 17808 ;; This function calls:
 17809 ;;		_TMR2_SetInterruptHandler
 17810 ;; This function is called by:
 17811 ;;		_SYSTEM_Initialize
 17812 ;; This function uses a non-reentrant model
 17813 ;;
 17814                           
 17815                           	psect	text61
 17816  006238                     __ptext61:
 17817                           	opt callstack 0
 17818  006238                     _TMR2_Initialize:
 17819                           	opt callstack 23
 17820  006238                     
 17821                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
 17822  006238  0EF9               	movlw	249
 17823  00623A  6ECB               	movwf	203,c	;volatile
 17824                           
 17825                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 17826  00623C  0E00               	movlw	0
 17827  00623E  6ECC               	movwf	204,c	;volatile
 17828  006240                     
 17829                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 17830  006240  929E               	bcf	158,1,c	;volatile
 17831  006242                     
 17832                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 17833  006242  829D               	bsf	157,1,c	;volatile
 17834  006244                     
 17835                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17836  006244  0E68               	movlw	low _TMR2_DefaultInterruptHandler
 17837  006246  6E10               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 17838  006248  0E63               	movlw	high _TMR2_DefaultInterruptHandler
 17839  00624A  6E11               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 17840  00624C  EC8C  F031         	call	_TMR2_SetInterruptHandler	;wreg free
 17841  006250                     
 17842                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x0D;
 17843  006250  0E0D               	movlw	13
 17844  006252  6ECA               	movwf	202,c	;volatile
 17845  006254  0012               	return		;funcret
 17846  006256                     __end_of_TMR2_Initialize:
 17847                           	opt callstack 0
 17848                           
 17849 ;; *************** function _TMR2_SetInterruptHandler *****************
 17850 ;; Defined at:
 17851 ;;		line 147 in file "mcc_generated_files/tmr2.c"
 17852 ;; Parameters:    Size  Location     Type
 17853 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 17854 ;;		 -> led_inter(1), TMR2_DefaultInterruptHandler(1), 
 17855 ;; Auto vars:     Size  Location     Type
 17856 ;;		None
 17857 ;; Return value:  Size  Location     Type
 17858 ;;                  1    wreg      void 
 17859 ;; Registers used:
 17860 ;;		wreg, status,2, status,0
 17861 ;; Tracked objects:
 17862 ;;		On entry : 0/0
 17863 ;;		On exit  : 0/0
 17864 ;;		Unchanged: 0/0
 17865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17870 ;;Total ram usage:        2 bytes
 17871 ;; Hardware stack levels used:    1
 17872 ;; Hardware stack levels required when called:    5
 17873 ;; This function calls:
 17874 ;;		Nothing
 17875 ;; This function is called by:
 17876 ;;		_TMR2_Initialize
 17877 ;;		_main
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           	psect	text62
 17882  006318                     __ptext62:
 17883                           	opt callstack 0
 17884  006318                     _TMR2_SetInterruptHandler:
 17885                           	opt callstack 25
 17886  006318                     
 17887                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
 17888  006318  C010  F1D2         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 17889  00631C  C011  F1D3         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 17890  006320  0012               	return		;funcret
 17891  006322                     __end_of_TMR2_SetInterruptHandler:
 17892                           	opt callstack 0
 17893                           
 17894 ;; *************** function _TMR1_Initialize *****************
 17895 ;; Defined at:
 17896 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17897 ;; Parameters:    Size  Location     Type
 17898 ;;		None
 17899 ;; Auto vars:     Size  Location     Type
 17900 ;;		None
 17901 ;; Return value:  Size  Location     Type
 17902 ;;                  1    wreg      void 
 17903 ;; Registers used:
 17904 ;;		wreg, status,2, status,0
 17905 ;; Tracked objects:
 17906 ;;		On entry : 0/0
 17907 ;;		On exit  : 0/0
 17908 ;;		Unchanged: 0/0
 17909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17914 ;;Total ram usage:        2 bytes
 17915 ;; Hardware stack levels used:    1
 17916 ;; Hardware stack levels required when called:    5
 17917 ;; This function calls:
 17918 ;;		Nothing
 17919 ;; This function is called by:
 17920 ;;		_SYSTEM_Initialize
 17921 ;; This function uses a non-reentrant model
 17922 ;;
 17923                           
 17924                           	psect	text63
 17925  006128                     __ptext63:
 17926                           	opt callstack 0
 17927  006128                     _TMR1_Initialize:
 17928                           	opt callstack 24
 17929  006128                     
 17930                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17931  006128  0E00               	movlw	0
 17932  00612A  6EAA               	movwf	170,c	;volatile
 17933                           
 17934                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
 17935  00612C  0E00               	movlw	0
 17936  00612E  6ECF               	movwf	207,c	;volatile
 17937                           
 17938                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
 17939  006130  0E00               	movlw	0
 17940  006132  6ECE               	movwf	206,c	;volatile
 17941  006134                     
 17942                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 17943  006134  909E               	bcf	158,0,c	;volatile
 17944  006136                     
 17945                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17946  006136  50CE               	movf	206,w,c	;volatile
 17947  006138  CFCF F010          	movff	4047,??_TMR1_Initialize	;volatile
 17948  00613C  6A11               	clrf	(??_TMR1_Initialize+1)^0,c
 17949  00613E  C010  F011         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17950  006142  6A10               	clrf	??_TMR1_Initialize^0,c
 17951  006144  1010               	iorwf	??_TMR1_Initialize^0,w,c
 17952  006146  0101               	movlb	1	; () banked
 17953  006148  6FD0               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17954  00614A  5011               	movf	(??_TMR1_Initialize+1)^0,w,c
 17955  00614C  6FD1               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17956  00614E                     
 17957                           ; BSR set to: 1
 17958                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
 17959  00614E  0E01               	movlw	1
 17960  006150  6ECD               	movwf	205,c	;volatile
 17961  006152                     
 17962                           ; BSR set to: 1
 17963  006152  0012               	return		;funcret
 17964  006154                     __end_of_TMR1_Initialize:
 17965                           	opt callstack 0
 17966                           
 17967 ;; *************** function _TMR0_Initialize *****************
 17968 ;; Defined at:
 17969 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 17970 ;; Parameters:    Size  Location     Type
 17971 ;;		None
 17972 ;; Auto vars:     Size  Location     Type
 17973 ;;		None
 17974 ;; Return value:  Size  Location     Type
 17975 ;;                  1    wreg      void 
 17976 ;; Registers used:
 17977 ;;		wreg, status,2, status,0
 17978 ;; Tracked objects:
 17979 ;;		On entry : 0/0
 17980 ;;		On exit  : 0/0
 17981 ;;		Unchanged: 0/0
 17982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17987 ;;Total ram usage:        2 bytes
 17988 ;; Hardware stack levels used:    1
 17989 ;; Hardware stack levels required when called:    5
 17990 ;; This function calls:
 17991 ;;		Nothing
 17992 ;; This function is called by:
 17993 ;;		_SYSTEM_Initialize
 17994 ;; This function uses a non-reentrant model
 17995 ;;
 17996                           
 17997                           	psect	text64
 17998  00617E                     __ptext64:
 17999                           	opt callstack 0
 18000  00617E                     _TMR0_Initialize:
 18001                           	opt callstack 24
 18002  00617E                     
 18003                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 18004  00617E  9CD5               	bcf	213,6,c	;volatile
 18005  006180                     
 18006                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x0B;
 18007  006180  0E0B               	movlw	11
 18008  006182  6ED7               	movwf	215,c	;volatile
 18009                           
 18010                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xDB;
 18011  006184  0EDB               	movlw	219
 18012  006186  6ED6               	movwf	214,c	;volatile
 18013  006188                     
 18014                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 18015  006188  50D6               	movf	214,w,c	;volatile
 18016  00618A  CFD7 F010          	movff	4055,??_TMR0_Initialize	;volatile
 18017  00618E  6A11               	clrf	(??_TMR0_Initialize+1)^0,c
 18018  006190  C010  F011         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 18019  006194  6A10               	clrf	??_TMR0_Initialize^0,c
 18020  006196  1010               	iorwf	??_TMR0_Initialize^0,w,c
 18021  006198  6E4D               	movwf	_timer0ReloadVal^0,c	;volatile
 18022  00619A  5011               	movf	(??_TMR0_Initialize+1)^0,w,c
 18023  00619C  6E4E               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 18024  00619E                     
 18025                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 18026  00619E  94F2               	bcf	242,2,c	;volatile
 18027  0061A0                     
 18028                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
 18029  0061A0  0E97               	movlw	151
 18030  0061A2  6ED5               	movwf	213,c	;volatile
 18031  0061A4  0012               	return		;funcret
 18032  0061A6                     __end_of_TMR0_Initialize:
 18033                           	opt callstack 0
 18034                           
 18035 ;; *************** function _SPI_Initialize *****************
 18036 ;; Defined at:
 18037 ;;		line 62 in file "mcc_generated_files/spi.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;		None
 18040 ;; Auto vars:     Size  Location     Type
 18041 ;;		None
 18042 ;; Return value:  Size  Location     Type
 18043 ;;                  1    wreg      void 
 18044 ;; Registers used:
 18045 ;;		wreg, status,2
 18046 ;; Tracked objects:
 18047 ;;		On entry : 0/0
 18048 ;;		On exit  : 0/0
 18049 ;;		Unchanged: 0/0
 18050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18055 ;;Total ram usage:        0 bytes
 18056 ;; Hardware stack levels used:    1
 18057 ;; Hardware stack levels required when called:    5
 18058 ;; This function calls:
 18059 ;;		Nothing
 18060 ;; This function is called by:
 18061 ;;		_SYSTEM_Initialize
 18062 ;; This function uses a non-reentrant model
 18063 ;;
 18064                           
 18065                           	psect	text65
 18066  0062E8                     __ptext65:
 18067                           	opt callstack 0
 18068  0062E8                     _SPI_Initialize:
 18069                           	opt callstack 24
 18070  0062E8                     
 18071                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 18072  0062E8  0E40               	movlw	64
 18073  0062EA  6EC7               	movwf	199,c	;volatile
 18074                           
 18075                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 18076  0062EC  0E00               	movlw	0
 18077  0062EE  6EC6               	movwf	198,c	;volatile
 18078                           
 18079                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 18080  0062F0  0E01               	movlw	1
 18081  0062F2  6EC8               	movwf	200,c	;volatile
 18082  0062F4                     
 18083                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 18084  0062F4  9694               	bcf	148,3,c	;volatile
 18085  0062F6                     
 18086                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 18087  0062F6  9AC6               	bcf	198,5,c	;volatile
 18088  0062F8  0012               	return		;funcret
 18089  0062FA                     __end_of_SPI_Initialize:
 18090                           	opt callstack 0
 18091                           
 18092 ;; *************** function _PIN_MANAGER_Initialize *****************
 18093 ;; Defined at:
 18094 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 18095 ;; Parameters:    Size  Location     Type
 18096 ;;		None
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;		None
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      void 
 18101 ;; Registers used:
 18102 ;;		wreg, status,2, status,0, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18112 ;;Total ram usage:        0 bytes
 18113 ;; Hardware stack levels used:    1
 18114 ;; Hardware stack levels required when called:    6
 18115 ;; This function calls:
 18116 ;;		_IOCB4_SetInterruptHandler
 18117 ;; This function is called by:
 18118 ;;		_SYSTEM_Initialize
 18119 ;; This function uses a non-reentrant model
 18120 ;;
 18121                           
 18122                           	psect	text66
 18123  005D46                     __ptext66:
 18124                           	opt callstack 0
 18125  005D46                     _PIN_MANAGER_Initialize:
 18126                           	opt callstack 23
 18127  005D46                     
 18128                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 18129  005D46  0E00               	movlw	0
 18130  005D48  6E8D               	movwf	141,c	;volatile
 18131                           
 18132                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 18133  005D4A  0E00               	movlw	0
 18134  005D4C  6E8C               	movwf	140,c	;volatile
 18135                           
 18136                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 18137  005D4E  0E00               	movlw	0
 18138  005D50  6E89               	movwf	137,c	;volatile
 18139                           
 18140                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 18141  005D52  0E00               	movlw	0
 18142  005D54  6E8A               	movwf	138,c	;volatile
 18143                           
 18144                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 18145  005D56  0E00               	movlw	0
 18146  005D58  6E8B               	movwf	139,c	;volatile
 18147                           
 18148                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 18149  005D5A  0E04               	movlw	4
 18150  005D5C  6E96               	movwf	150,c	;volatile
 18151                           
 18152                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x8F;
 18153  005D5E  0E8F               	movlw	143
 18154  005D60  6E92               	movwf	146,c	;volatile
 18155  005D62                     
 18156                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 18157  005D62  6893               	setf	147,c	;volatile
 18158                           
 18159                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 18160  005D64  0ED7               	movlw	215
 18161  005D66  6E94               	movwf	148,c	;volatile
 18162  005D68                     
 18163                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 18164  005D68  6895               	setf	149,c	;volatile
 18165                           
 18166                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8F;
 18167  005D6A  0E8F               	movlw	143
 18168  005D6C  010F               	movlb	15	; () banked
 18169  005D6E  6F5D               	movwf	93,b	;volatile
 18170                           
 18171                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 18172  005D70  0E79               	movlw	121
 18173  005D72  6F5C               	movwf	92,b	;volatile
 18174                           
 18175                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 18176  005D74  0E00               	movlw	0
 18177  005D76  6F5B               	movwf	91,b	;volatile
 18178  005D78                     
 18179                           ; BSR set to: 15
 18180                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 18181  005D78  8EF1               	bsf	241,7,c	;volatile
 18182  005D7A                     
 18183                           ; BSR set to: 15
 18184                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 18185  005D7A  895A               	bsf	90,4,b	;volatile
 18186  005D7C                     
 18187                           ; BSR set to: 15
 18188                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 18189  005D7C  0E6A               	movlw	low _IOCB4_DefaultInterruptHandler
 18190  005D7E  6E10               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 18191  005D80  0E63               	movlw	high _IOCB4_DefaultInterruptHandler
 18192  005D82  6E11               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 18193  005D84  EC91  F031         	call	_IOCB4_SetInterruptHandler	;wreg free
 18194  005D88                     
 18195                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 18196  005D88  86F2               	bsf	242,3,c	;volatile
 18197  005D8A  0012               	return		;funcret
 18198  005D8C                     __end_of_PIN_MANAGER_Initialize:
 18199                           	opt callstack 0
 18200                           
 18201 ;; *************** function _IOCB4_SetInterruptHandler *****************
 18202 ;; Defined at:
 18203 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 18206 ;;		 -> acende_led(1), IOCB4_DefaultInterruptHandler(1), 
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;		None
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  1    wreg      void 
 18211 ;; Registers used:
 18212 ;;		wreg, status,2, status,0
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/0
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18222 ;;Total ram usage:        2 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:    5
 18225 ;; This function calls:
 18226 ;;		Nothing
 18227 ;; This function is called by:
 18228 ;;		_PIN_MANAGER_Initialize
 18229 ;;		_main
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           	psect	text67
 18234  006322                     __ptext67:
 18235                           	opt callstack 0
 18236  006322                     _IOCB4_SetInterruptHandler:
 18237                           	opt callstack 23
 18238  006322                     
 18239                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 18240  006322  C010  F0FA         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 18241  006326  C011  F0FB         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 18242  00632A  0012               	return		;funcret
 18243  00632C                     __end_of_IOCB4_SetInterruptHandler:
 18244                           	opt callstack 0
 18245                           
 18246 ;; *************** function _OSCILLATOR_Initialize *****************
 18247 ;; Defined at:
 18248 ;;		line 64 in file "mcc_generated_files/mcc.c"
 18249 ;; Parameters:    Size  Location     Type
 18250 ;;		None
 18251 ;; Auto vars:     Size  Location     Type
 18252 ;;		None
 18253 ;; Return value:  Size  Location     Type
 18254 ;;                  1    wreg      void 
 18255 ;; Registers used:
 18256 ;;		wreg, status,2
 18257 ;; Tracked objects:
 18258 ;;		On entry : 0/0
 18259 ;;		On exit  : 0/0
 18260 ;;		Unchanged: 0/0
 18261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18266 ;;Total ram usage:        0 bytes
 18267 ;; Hardware stack levels used:    1
 18268 ;; Hardware stack levels required when called:    5
 18269 ;; This function calls:
 18270 ;;		Nothing
 18271 ;; This function is called by:
 18272 ;;		_SYSTEM_Initialize
 18273 ;; This function uses a non-reentrant model
 18274 ;;
 18275                           
 18276                           	psect	text68
 18277  0062FA                     __ptext68:
 18278                           	opt callstack 0
 18279  0062FA                     _OSCILLATOR_Initialize:
 18280                           	opt callstack 24
 18281  0062FA                     
 18282                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x62;
 18283  0062FA  0E62               	movlw	98
 18284  0062FC  6ED3               	movwf	211,c	;volatile
 18285                           
 18286                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
 18287  0062FE  0E00               	movlw	0
 18288  006300  6ED2               	movwf	210,c	;volatile
 18289                           
 18290                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 18291  006302  0E00               	movlw	0
 18292  006304  6E9B               	movwf	155,c	;volatile
 18293                           
 18294                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
 18295  006306  0E00               	movlw	0
 18296  006308  6E9A               	movwf	154,c	;volatile
 18297  00630A  0012               	return		;funcret
 18298  00630C                     __end_of_OSCILLATOR_Initialize:
 18299                           	opt callstack 0
 18300                           
 18301 ;; *************** function _INTERRUPT_Initialize *****************
 18302 ;; Defined at:
 18303 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18304 ;; Parameters:    Size  Location     Type
 18305 ;;		None
 18306 ;; Auto vars:     Size  Location     Type
 18307 ;;		None
 18308 ;; Return value:  Size  Location     Type
 18309 ;;                  1    wreg      void 
 18310 ;; Registers used:
 18311 ;;		None
 18312 ;; Tracked objects:
 18313 ;;		On entry : 0/0
 18314 ;;		On exit  : 0/0
 18315 ;;		Unchanged: 0/0
 18316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;Total ram usage:        0 bytes
 18322 ;; Hardware stack levels used:    1
 18323 ;; Hardware stack levels required when called:    5
 18324 ;; This function calls:
 18325 ;;		Nothing
 18326 ;; This function is called by:
 18327 ;;		_SYSTEM_Initialize
 18328 ;; This function uses a non-reentrant model
 18329 ;;
 18330                           
 18331                           	psect	text69
 18332  00635A                     __ptext69:
 18333                           	opt callstack 0
 18334  00635A                     _INTERRUPT_Initialize:
 18335                           	opt callstack 24
 18336  00635A                     
 18337                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 18338  00635A  9ED0               	bcf	208,7,c	;volatile
 18339  00635C  0012               	return		;funcret
 18340  00635E                     __end_of_INTERRUPT_Initialize:
 18341                           	opt callstack 0
 18342                           
 18343 ;; *************** function _EXT_INT_Initialize *****************
 18344 ;; Defined at:
 18345 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18346 ;; Parameters:    Size  Location     Type
 18347 ;;		None
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;		None
 18350 ;; Return value:  Size  Location     Type
 18351 ;;                  1    wreg      void 
 18352 ;; Registers used:
 18353 ;;		wreg, status,2, status,0, cstack
 18354 ;; Tracked objects:
 18355 ;;		On entry : 0/0
 18356 ;;		On exit  : 0/0
 18357 ;;		Unchanged: 0/0
 18358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18363 ;;Total ram usage:        0 bytes
 18364 ;; Hardware stack levels used:    1
 18365 ;; Hardware stack levels required when called:    6
 18366 ;; This function calls:
 18367 ;;		_INT0_SetInterruptHandler
 18368 ;; This function is called by:
 18369 ;;		_SYSTEM_Initialize
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           	psect	text70
 18374  0062D4                     __ptext70:
 18375                           	opt callstack 0
 18376  0062D4                     _EXT_INT_Initialize:
 18377                           	opt callstack 23
 18378  0062D4                     
 18379                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 18380  0062D4  92F2               	bcf	242,1,c	;volatile
 18381                           
 18382                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 1);
 18383  0062D6  8CF1               	bsf	241,6,c	;volatile
 18384  0062D8                     
 18385                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 18386  0062D8  0E6C               	movlw	low _INT0_DefaultInterruptHandler
 18387  0062DA  6E10               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
 18388  0062DC  0E63               	movlw	high _INT0_DefaultInterruptHandler
 18389  0062DE  6E11               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
 18390  0062E0  EC96  F031         	call	_INT0_SetInterruptHandler	;wreg free
 18391  0062E4                     
 18392                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 18393  0062E4  88F2               	bsf	242,4,c	;volatile
 18394  0062E6  0012               	return		;funcret
 18395  0062E8                     __end_of_EXT_INT_Initialize:
 18396                           	opt callstack 0
 18397                           
 18398 ;; *************** function _INT0_SetInterruptHandler *****************
 18399 ;; Defined at:
 18400 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 18403 ;;		 -> pulso_encoder(1), INT0_DefaultInterruptHandler(1), 
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;		None
 18406 ;; Return value:  Size  Location     Type
 18407 ;;                  1    wreg      void 
 18408 ;; Registers used:
 18409 ;;		wreg, status,2, status,0
 18410 ;; Tracked objects:
 18411 ;;		On entry : 0/0
 18412 ;;		On exit  : 0/0
 18413 ;;		Unchanged: 0/0
 18414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18419 ;;Total ram usage:        2 bytes
 18420 ;; Hardware stack levels used:    1
 18421 ;; Hardware stack levels required when called:    5
 18422 ;; This function calls:
 18423 ;;		Nothing
 18424 ;; This function is called by:
 18425 ;;		_EXT_INT_Initialize
 18426 ;;		_main
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           	psect	text71
 18431  00632C                     __ptext71:
 18432                           	opt callstack 0
 18433  00632C                     _INT0_SetInterruptHandler:
 18434                           	opt callstack 23
 18435  00632C                     
 18436                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 18437  00632C  C010  F1D4         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 18438  006330  C011  F1D5         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 18439  006334  0012               	return		;funcret
 18440  006336                     __end_of_INT0_SetInterruptHandler:
 18441                           	opt callstack 0
 18442                           
 18443 ;; *************** function _ADC_Initialize *****************
 18444 ;; Defined at:
 18445 ;;		line 62 in file "mcc_generated_files/adc.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;		None
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;		None
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      void 
 18452 ;; Registers used:
 18453 ;;		wreg, status,2, status,0, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18463 ;;Total ram usage:        0 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; Hardware stack levels required when called:    6
 18466 ;; This function calls:
 18467 ;;		_ADC_SetInterruptHandler
 18468 ;; This function is called by:
 18469 ;;		_SYSTEM_Initialize
 18470 ;; This function uses a non-reentrant model
 18471 ;;
 18472                           
 18473                           	psect	text72
 18474  0061F2                     __ptext72:
 18475                           	opt callstack 0
 18476  0061F2                     _ADC_Initialize:
 18477                           	opt callstack 23
 18478  0061F2                     
 18479                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x03;
 18480  0061F2  0E03               	movlw	3
 18481  0061F4  6EC2               	movwf	194,c	;volatile
 18482                           
 18483                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 18484  0061F6  0E80               	movlw	128
 18485  0061F8  6EC1               	movwf	193,c	;volatile
 18486                           
 18487                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 18488  0061FA  0EA1               	movlw	161
 18489  0061FC  6EC0               	movwf	192,c	;volatile
 18490                           
 18491                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 18492  0061FE  0E00               	movlw	0
 18493  006200  6EC4               	movwf	196,c	;volatile
 18494                           
 18495                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 18496  006202  0E00               	movlw	0
 18497  006204  6EC3               	movwf	195,c	;volatile
 18498  006206                     
 18499                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 18500  006206  8C9D               	bsf	157,6,c	;volatile
 18501  006208                     
 18502                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 18503  006208  0E6E               	movlw	low _ADC_DefaultInterruptHandler
 18504  00620A  6E10               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
 18505  00620C  0E63               	movlw	high _ADC_DefaultInterruptHandler
 18506  00620E  6E11               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
 18507  006210  EC9B  F031         	call	_ADC_SetInterruptHandler	;wreg free
 18508  006214  0012               	return		;funcret
 18509  006216                     __end_of_ADC_Initialize:
 18510                           	opt callstack 0
 18511                           
 18512 ;; *************** function _ADC_SetInterruptHandler *****************
 18513 ;; Defined at:
 18514 ;;		line 150 in file "mcc_generated_files/adc.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;  InterruptHan    2   15[COMRAM] PTR FTN()void 
 18517 ;;		 -> ADC_DefaultInterruptHandler(1), 
 18518 ;; Auto vars:     Size  Location     Type
 18519 ;;		None
 18520 ;; Return value:  Size  Location     Type
 18521 ;;                  1    wreg      void 
 18522 ;; Registers used:
 18523 ;;		wreg, status,2, status,0
 18524 ;; Tracked objects:
 18525 ;;		On entry : 0/0
 18526 ;;		On exit  : 0/0
 18527 ;;		Unchanged: 0/0
 18528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18533 ;;Total ram usage:        2 bytes
 18534 ;; Hardware stack levels used:    1
 18535 ;; Hardware stack levels required when called:    5
 18536 ;; This function calls:
 18537 ;;		Nothing
 18538 ;; This function is called by:
 18539 ;;		_ADC_Initialize
 18540 ;; This function uses a non-reentrant model
 18541 ;;
 18542                           
 18543                           	psect	text73
 18544  006336                     __ptext73:
 18545                           	opt callstack 0
 18546  006336                     _ADC_SetInterruptHandler:
 18547                           	opt callstack 23
 18548  006336                     
 18549                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 18550  006336  C010  F1D6         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 18551  00633A  C011  F1D7         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 18552  00633E  0012               	return		;funcret
 18553  006340                     __end_of_ADC_SetInterruptHandler:
 18554                           	opt callstack 0
 18555                           
 18556 ;; *************** function _SPI_Open *****************
 18557 ;; Defined at:
 18558 ;;		line 72 in file "mcc_generated_files/spi.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  spiUniqueCon    1    wreg     enum E353
 18561 ;; Auto vars:     Size  Location     Type
 18562 ;;  spiUniqueCon    1   16[COMRAM] enum E353
 18563 ;; Return value:  Size  Location     Type
 18564 ;;                  1    wreg      _Bool 
 18565 ;; Registers used:
 18566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18567 ;; Tracked objects:
 18568 ;;		On entry : 0/0
 18569 ;;		On exit  : 0/0
 18570 ;;		Unchanged: 0/0
 18571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18576 ;;Total ram usage:        2 bytes
 18577 ;; Hardware stack levels used:    1
 18578 ;; Hardware stack levels required when called:    5
 18579 ;; This function calls:
 18580 ;;		Nothing
 18581 ;; This function is called by:
 18582 ;;		_main
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586                           	psect	text74
 18587  0057A6                     __ptext74:
 18588                           	opt callstack 0
 18589  0057A6                     _SPI_Open:
 18590                           	opt callstack 25
 18591                           
 18592                           ;incstack = 0
 18593                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 18594  0057A6  6E11               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 18595  0057A8                     
 18596                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 18597  0057A8  BAC6               	btfsc	198,5,c	;volatile
 18598  0057AA  EFD9  F02B         	goto	u8411
 18599  0057AE  EFDB  F02B         	goto	u8410
 18600  0057B2                     u8411:
 18601  0057B2  EF2A  F02C         	goto	l148
 18602  0057B6                     u8410:
 18603  0057B6                     
 18604                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 18605  0057B6  5011               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18606  0057B8  0D04               	mullw	4
 18607  0057BA  0E01               	movlw	1
 18608  0057BC  26F3               	addwf	243,f,c
 18609  0057BE  0E00               	movlw	0
 18610  0057C0  22F4               	addwfc	244,f,c
 18611  0057C2  0E5F               	movlw	low _spi_configuration
 18612  0057C4  24F3               	addwf	243,w,c
 18613  0057C6  6EF6               	movwf	tblptrl,c
 18614  0057C8  0EFF               	movlw	high _spi_configuration
 18615  0057CA  20F4               	addwfc	244,w,c
 18616  0057CC  6EF7               	movwf	tblptrh,c
 18617  0057CE                     	if	1	;There are 3 active tblptr bytes
 18618  0057CE  6AF8               	clrf	tblptru,c
 18619  0057D0  0E00               	movlw	low (__mediumconst shr (0+16))
 18620  0057D2  22F8               	addwfc	tblptru,f,c
 18621  0057D4                     	endif
 18622  0057D4  0008               	tblrd		*
 18623  0057D6  CFF5 FFC7          	movff	tablat,4039	;volatile
 18624                           
 18625                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 18626  0057DA  5011               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18627  0057DC  0D04               	mullw	4
 18628  0057DE  0E5F               	movlw	low _spi_configuration
 18629  0057E0  24F3               	addwf	243,w,c
 18630  0057E2  6EF6               	movwf	tblptrl,c
 18631  0057E4  0EFF               	movlw	high _spi_configuration
 18632  0057E6  20F4               	addwfc	244,w,c
 18633  0057E8  6EF7               	movwf	tblptrh,c
 18634  0057EA                     	if	1	;There are 3 active tblptr bytes
 18635  0057EA  6AF8               	clrf	tblptru,c
 18636  0057EC  0E00               	movlw	low (__mediumconst shr (0+16))
 18637  0057EE  22F8               	addwfc	tblptru,f,c
 18638  0057F0                     	endif
 18639  0057F0  0008               	tblrd		*
 18640  0057F2  CFF5 FFC6          	movff	tablat,4038	;volatile
 18641  0057F6                     
 18642                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 18643  0057F6  0E00               	movlw	0
 18644  0057F8  6EC5               	movwf	197,c	;volatile
 18645  0057FA                     
 18646                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 18647  0057FA  5011               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18648  0057FC  0D04               	mullw	4
 18649  0057FE  0E02               	movlw	2
 18650  005800  26F3               	addwf	243,f,c
 18651  005802  0E00               	movlw	0
 18652  005804  22F4               	addwfc	244,f,c
 18653  005806  0E5F               	movlw	low _spi_configuration
 18654  005808  24F3               	addwf	243,w,c
 18655  00580A  6EF6               	movwf	tblptrl,c
 18656  00580C  0EFF               	movlw	high _spi_configuration
 18657  00580E  20F4               	addwfc	244,w,c
 18658  005810  6EF7               	movwf	tblptrh,c
 18659  005812                     	if	1	;There are 3 active tblptr bytes
 18660  005812  6AF8               	clrf	tblptru,c
 18661  005814  0E00               	movlw	low (__mediumconst shr (0+16))
 18662  005816  22F8               	addwfc	tblptru,f,c
 18663  005818                     	endif
 18664  005818  0008               	tblrd		*
 18665  00581A  CFF5 FFC8          	movff	tablat,4040	;volatile
 18666  00581E                     
 18667                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 18668  00581E  5011               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18669  005820  0D04               	mullw	4
 18670  005822  0E03               	movlw	3
 18671  005824  26F3               	addwf	243,f,c
 18672  005826  0E00               	movlw	0
 18673  005828  22F4               	addwfc	244,f,c
 18674  00582A  0E5F               	movlw	low _spi_configuration
 18675  00582C  24F3               	addwf	243,w,c
 18676  00582E  6EF6               	movwf	tblptrl,c
 18677  005830  0EFF               	movlw	high _spi_configuration
 18678  005832  20F4               	addwfc	244,w,c
 18679  005834  6EF7               	movwf	tblptrh,c
 18680  005836                     	if	1	;There are 3 active tblptr bytes
 18681  005836  6AF8               	clrf	tblptru,c
 18682  005838  0E00               	movlw	low (__mediumconst shr (0+16))
 18683  00583A  22F8               	addwfc	tblptru,f,c
 18684  00583C                     	endif
 18685  00583C  0008               	tblrd		*
 18686  00583E  CFF5 F010          	movff	tablat,??_SPI_Open
 18687  005842  4610               	rlncf	??_SPI_Open^0,f,c
 18688  005844  4610               	rlncf	??_SPI_Open^0,f,c
 18689  005846  4610               	rlncf	??_SPI_Open^0,f,c
 18690  005848  5094               	movf	148,w,c	;volatile
 18691  00584A  1810               	xorwf	??_SPI_Open^0,w,c
 18692  00584C  0BF7               	andlw	-9
 18693  00584E  1810               	xorwf	??_SPI_Open^0,w,c
 18694  005850  6E94               	movwf	148,c	;volatile
 18695  005852                     
 18696                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 18697  005852  8AC6               	bsf	198,5,c	;volatile
 18698  005854                     l148:
 18699  005854  0012               	return		;funcret
 18700  005856                     __end_of_SPI_Open:
 18701                           	opt callstack 0
 18702                           
 18703 ;; *************** function _ADC_GetConversion *****************
 18704 ;; Defined at:
 18705 ;;		line 113 in file "mcc_generated_files/adc.c"
 18706 ;; Parameters:    Size  Location     Type
 18707 ;;  channel         1    wreg     enum E12385
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;  channel         1   19[COMRAM] enum E12385
 18710 ;; Return value:  Size  Location     Type
 18711 ;;                  2   15[COMRAM] unsigned short 
 18712 ;; Registers used:
 18713 ;;		wreg, status,2, status,0
 18714 ;; Tracked objects:
 18715 ;;		On entry : 0/0
 18716 ;;		On exit  : 0/0
 18717 ;;		Unchanged: 0/0
 18718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18723 ;;Total ram usage:        5 bytes
 18724 ;; Hardware stack levels used:    1
 18725 ;; Hardware stack levels required when called:    5
 18726 ;; This function calls:
 18727 ;;		Nothing
 18728 ;; This function is called by:
 18729 ;;		_main
 18730 ;; This function uses a non-reentrant model
 18731 ;;
 18732                           
 18733                           	psect	text75
 18734  005E8E                     __ptext75:
 18735                           	opt callstack 0
 18736  005E8E                     _ADC_GetConversion:
 18737                           	opt callstack 25
 18738                           
 18739                           ;incstack = 0
 18740                           ;ADC_GetConversion@channel stored from wreg
 18741  005E8E  6E14               	movwf	ADC_GetConversion@channel^0,c
 18742  005E90                     
 18743                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 18744  005E90  C014  F012         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 18745  005E94  4612               	rlncf	??_ADC_GetConversion^0,f,c
 18746  005E96  4612               	rlncf	??_ADC_GetConversion^0,f,c
 18747  005E98  50C2               	movf	194,w,c	;volatile
 18748  005E9A  1812               	xorwf	??_ADC_GetConversion^0,w,c
 18749  005E9C  0B83               	andlw	-125
 18750  005E9E  1812               	xorwf	??_ADC_GetConversion^0,w,c
 18751  005EA0  6EC2               	movwf	194,c	;volatile
 18752  005EA2                     
 18753                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 18754  005EA2  80C2               	bsf	194,0,c	;volatile
 18755  005EA4                     
 18756                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 18757  005EA4  82C2               	bsf	194,1,c	;volatile
 18758  005EA6                     l223:
 18759                           
 18760                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 18761  005EA6  B2C2               	btfsc	194,1,c	;volatile
 18762  005EA8  EF58  F02F         	goto	u8421
 18763  005EAC  EF5A  F02F         	goto	u8420
 18764  005EB0                     u8421:
 18765  005EB0  EF53  F02F         	goto	l223
 18766  005EB4                     u8420:
 18767  005EB4                     
 18768                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 18769  005EB4  50C4               	movf	196,w,c	;volatile
 18770  005EB6  6E13               	movwf	(??_ADC_GetConversion+1)^0,c
 18771  005EB8  6A12               	clrf	??_ADC_GetConversion^0,c
 18772  005EBA  50C3               	movf	195,w,c	;volatile
 18773  005EBC  2412               	addwf	??_ADC_GetConversion^0,w,c
 18774  005EBE  6E10               	movwf	?_ADC_GetConversion^0,c
 18775  005EC0  0E00               	movlw	0
 18776  005EC2  2013               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 18777  005EC4  6E11               	movwf	(?_ADC_GetConversion+1)^0,c
 18778  005EC6  0012               	return		;funcret
 18779  005EC8                     __end_of_ADC_GetConversion:
 18780                           	opt callstack 0
 18781                           
 18782 ;; *************** function _INTERRUPT_InterruptManager *****************
 18783 ;; Defined at:
 18784 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 18785 ;; Parameters:    Size  Location     Type
 18786 ;;		None
 18787 ;; Auto vars:     Size  Location     Type
 18788 ;;		None
 18789 ;; Return value:  Size  Location     Type
 18790 ;;                  1    wreg      void 
 18791 ;; Registers used:
 18792 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18793 ;; Tracked objects:
 18794 ;;		On entry : 0/0
 18795 ;;		On exit  : 0/0
 18796 ;;		Unchanged: 0/0
 18797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18802 ;;Total ram usage:        2 bytes
 18803 ;; Hardware stack levels used:    1
 18804 ;; Hardware stack levels required when called:    4
 18805 ;; This function calls:
 18806 ;;		_ADC_ISR
 18807 ;;		_INT0_ISR
 18808 ;;		_PIN_MANAGER_IOC
 18809 ;;		_TMR2_ISR
 18810 ;; This function is called by:
 18811 ;;		Interrupt level 2
 18812 ;; This function uses a non-reentrant model
 18813 ;;
 18814                           
 18815                           	psect	intcode
 18816  000008                     __pintcode:
 18817                           	opt callstack 0
 18818  000008                     _INTERRUPT_InterruptManager:
 18819                           	opt callstack 17
 18820                           
 18821                           ;incstack = 0
 18822  000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18823  00000A  CFFA F00E          	movff	pclath,??_INTERRUPT_InterruptManager
 18824  00000E  CFFB F00F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18825  000012                     
 18826                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 18827  000012  A8F2               	btfss	242,4,c	;volatile
 18828  000014  EF0E  F000         	goto	i2u872_41
 18829  000018  EF10  F000         	goto	i2u872_40
 18830  00001C                     i2u872_41:
 18831  00001C  EF1B  F000         	goto	i2l113
 18832  000020                     i2u872_40:
 18833  000020  A2F2               	btfss	242,1,c	;volatile
 18834  000022  EF15  F000         	goto	i2u873_41
 18835  000026  EF17  F000         	goto	i2u873_40
 18836  00002A                     i2u873_41:
 18837  00002A  EF1B  F000         	goto	i2l113
 18838  00002E                     i2u873_40:
 18839  00002E                     
 18840                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 18841  00002E  ECA5  F031         	call	_INT0_ISR	;wreg free
 18842                           
 18843                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 18844  000032  EF58  F000         	goto	i2l123
 18845  000036                     i2l113:
 18846  000036  A6F2               	btfss	242,3,c	;volatile
 18847  000038  EF20  F000         	goto	i2u874_41
 18848  00003C  EF22  F000         	goto	i2u874_40
 18849  000040                     i2u874_41:
 18850  000040  EF2D  F000         	goto	i2l115
 18851  000044                     i2u874_40:
 18852  000044  A0F2               	btfss	242,0,c	;volatile
 18853  000046  EF27  F000         	goto	i2u875_41
 18854  00004A  EF29  F000         	goto	i2u875_40
 18855  00004E                     i2u875_41:
 18856  00004E  EF2D  F000         	goto	i2l115
 18857  000052                     i2u875_40:
 18858  000052                     
 18859                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 18860  000052  EC53  F031         	call	_PIN_MANAGER_IOC	;wreg free
 18861                           
 18862                           ;mcc_generated_files/interrupt_manager.c: 68:     }
 18863  000056  EF58  F000         	goto	i2l123
 18864  00005A                     i2l115:
 18865  00005A  ACF2               	btfss	242,6,c	;volatile
 18866  00005C  EF32  F000         	goto	i2u876_41
 18867  000060  EF34  F000         	goto	i2u876_40
 18868  000064                     i2u876_41:
 18869  000064  EF58  F000         	goto	i2l122
 18870  000068                     i2u876_40:
 18871  000068                     
 18872                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 18873  000068  AC9D               	btfss	157,6,c	;volatile
 18874  00006A  EF39  F000         	goto	i2u877_41
 18875  00006E  EF3B  F000         	goto	i2u877_40
 18876  000072                     i2u877_41:
 18877  000072  EF46  F000         	goto	i2l118
 18878  000076                     i2u877_40:
 18879  000076  AC9E               	btfss	158,6,c	;volatile
 18880  000078  EF40  F000         	goto	i2u878_41
 18881  00007C  EF42  F000         	goto	i2u878_40
 18882  000080                     i2u878_41:
 18883  000080  EF46  F000         	goto	i2l118
 18884  000084                     i2u878_40:
 18885  000084                     
 18886                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADC_ISR();
 18887  000084  EC20  F030         	call	_ADC_ISR	;wreg free
 18888                           
 18889                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 18890  000088  EF58  F000         	goto	i2l123
 18891  00008C                     i2l118:
 18892  00008C  A29D               	btfss	157,1,c	;volatile
 18893  00008E  EF4B  F000         	goto	i2u879_41
 18894  000092  EF4D  F000         	goto	i2u879_40
 18895  000096                     i2u879_41:
 18896  000096  EF58  F000         	goto	i2l122
 18897  00009A                     i2u879_40:
 18898  00009A  A29E               	btfss	158,1,c	;volatile
 18899  00009C  EF52  F000         	goto	i2u880_41
 18900  0000A0  EF54  F000         	goto	i2u880_40
 18901  0000A4                     i2u880_41:
 18902  0000A4  EF58  F000         	goto	i2l122
 18903  0000A8                     i2u880_40:
 18904  0000A8                     
 18905                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
 18906  0000A8  ECAA  F030         	call	_TMR2_ISR	;wreg free
 18907                           
 18908                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 18909  0000AC  EF58  F000         	goto	i2l123
 18910  0000B0                     i2l122:
 18911  0000B0                     i2l123:
 18912  0000B0  C00F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18913  0000B4  C00E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18914  0000B8  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18915  0000BA  0011               	retfie		f
 18916  0000BC                     __end_of_INTERRUPT_InterruptManager:
 18917                           	opt callstack 0
 18918                           
 18919 ;; *************** function _TMR2_ISR *****************
 18920 ;; Defined at:
 18921 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 18922 ;; Parameters:    Size  Location     Type
 18923 ;;		None
 18924 ;; Auto vars:     Size  Location     Type
 18925 ;;		None
 18926 ;; Return value:  Size  Location     Type
 18927 ;;                  1    wreg      void 
 18928 ;; Registers used:
 18929 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18930 ;; Tracked objects:
 18931 ;;		On entry : 0/0
 18932 ;;		On exit  : 0/0
 18933 ;;		Unchanged: 0/0
 18934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18939 ;;Total ram usage:        0 bytes
 18940 ;; Hardware stack levels used:    1
 18941 ;; Hardware stack levels required when called:    2
 18942 ;; This function calls:
 18943 ;;		_TMR2_CallBack
 18944 ;; This function is called by:
 18945 ;;		_INTERRUPT_InterruptManager
 18946 ;; This function uses a non-reentrant model
 18947 ;;
 18948                           
 18949                           	psect	text77
 18950  006154                     __ptext77:
 18951                           	opt callstack 0
 18952  006154                     _TMR2_ISR:
 18953                           	opt callstack 18
 18954  006154                     
 18955                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 18956  006154  929E               	bcf	158,1,c	;volatile
 18957  006156                     
 18958                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 250)
 18959  006156  4A4B               	infsnz	TMR2_ISR@CountCallBack^0,f,c	;volatile
 18960  006158  2A4C               	incf	(TMR2_ISR@CountCallBack+1)^0,f,c	;volatile
 18961  00615A  504C               	movf	(TMR2_ISR@CountCallBack+1)^0,w,c	;volatile
 18962  00615C  E109               	bnz	i2u840_40
 18963  00615E  0EFA               	movlw	250
 18964  006160  5C4B               	subwf	TMR2_ISR@CountCallBack^0,w,c	;volatile
 18965  006162  A0D8               	btfss	status,0,c
 18966  006164  EFB6  F030         	goto	i2u840_41
 18967  006168  EFB8  F030         	goto	i2u840_40
 18968  00616C                     i2u840_41:
 18969  00616C  EFBE  F030         	goto	i2l340
 18970  006170                     i2u840_40:
 18971  006170                     
 18972                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 18973  006170  EC4F  F030         	call	_TMR2_CallBack	;wreg free
 18974  006174                     
 18975                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 18976  006174  0E00               	movlw	0
 18977  006176  6E4C               	movwf	(TMR2_ISR@CountCallBack+1)^0,c	;volatile
 18978  006178  0E00               	movlw	0
 18979  00617A  6E4B               	movwf	TMR2_ISR@CountCallBack^0,c	;volatile
 18980  00617C                     i2l340:
 18981  00617C  0012               	return		;funcret
 18982  00617E                     __end_of_TMR2_ISR:
 18983                           	opt callstack 0
 18984                           
 18985 ;; *************** function _TMR2_CallBack *****************
 18986 ;; Defined at:
 18987 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 18988 ;; Parameters:    Size  Location     Type
 18989 ;;		None
 18990 ;; Auto vars:     Size  Location     Type
 18991 ;;		None
 18992 ;; Return value:  Size  Location     Type
 18993 ;;                  1    wreg      void 
 18994 ;; Registers used:
 18995 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18996 ;; Tracked objects:
 18997 ;;		On entry : 0/0
 18998 ;;		On exit  : 0/0
 18999 ;;		Unchanged: 0/0
 19000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19005 ;;Total ram usage:        0 bytes
 19006 ;; Hardware stack levels used:    1
 19007 ;; Hardware stack levels required when called:    1
 19008 ;; This function calls:
 19009 ;;		Absolute function
 19010 ;;		_TMR2_DefaultInterruptHandler
 19011 ;;		_led_inter
 19012 ;; This function is called by:
 19013 ;;		_TMR2_ISR
 19014 ;; This function uses a non-reentrant model
 19015 ;;
 19016                           
 19017                           	psect	text78
 19018  00609E                     __ptext78:
 19019                           	opt callstack 0
 19020  00609E                     _TMR2_CallBack:
 19021                           	opt callstack 18
 19022  00609E                     
 19023                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 19024  00609E  0101               	movlb	1	; () banked
 19025  0060A0  51D2               	movf	_TMR2_InterruptHandler& (0+255),w,b
 19026  0060A2  11D3               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 19027  0060A4  B4D8               	btfsc	status,2,c
 19028  0060A6  EF57  F030         	goto	i2u820_41
 19029  0060AA  EF59  F030         	goto	i2u820_40
 19030  0060AE                     i2u820_41:
 19031  0060AE  EF65  F030         	goto	i2l344
 19032  0060B2                     i2u820_40:
 19033  0060B2                     
 19034                           ; BSR set to: 1
 19035                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 19036  0060B2  D802               	call	i2u821_48
 19037  0060B4  EF65  F030         	goto	i2u821_49
 19038  0060B8                     i2u821_48:
 19039  0060B8  0005               	push	
 19040  0060BA  6EFA               	movwf	pclath,c
 19041  0060BC  51D2               	movf	_TMR2_InterruptHandler& (0+255),w,b
 19042  0060BE  6EFD               	movwf	tosl,c
 19043  0060C0  51D3               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 19044  0060C2  6EFE               	movwf	tosh,c
 19045  0060C4  6AFF               	clrf	tosu,c
 19046  0060C6  50FA               	movf	pclath,w,c
 19047  0060C8  0012               	return		;indir
 19048  0060CA                     i2u821_49:
 19049  0060CA                     i2l344:
 19050  0060CA  0012               	return		;funcret
 19051  0060CC                     __end_of_TMR2_CallBack:
 19052                           	opt callstack 0
 19053                           
 19054 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 19055 ;; Defined at:
 19056 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;		None
 19059 ;; Auto vars:     Size  Location     Type
 19060 ;;		None
 19061 ;; Return value:  Size  Location     Type
 19062 ;;                  1    wreg      void 
 19063 ;; Registers used:
 19064 ;;		None
 19065 ;; Tracked objects:
 19066 ;;		On entry : 0/0
 19067 ;;		On exit  : 0/0
 19068 ;;		Unchanged: 0/0
 19069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19074 ;;Total ram usage:        0 bytes
 19075 ;; Hardware stack levels used:    1
 19076 ;; This function calls:
 19077 ;;		Nothing
 19078 ;; This function is called by:
 19079 ;;		_TMR2_Initialize
 19080 ;;		_TMR2_CallBack
 19081 ;; This function uses a non-reentrant model
 19082 ;;
 19083                           
 19084                           	psect	text79
 19085  006368                     __ptext79:
 19086                           	opt callstack 0
 19087  006368                     _TMR2_DefaultInterruptHandler:
 19088                           	opt callstack 18
 19089  006368  0012               	return		;funcret
 19090  00636A                     __end_of_TMR2_DefaultInterruptHandler:
 19091                           	opt callstack 0
 19092                           
 19093 ;; *************** function _led_inter *****************
 19094 ;; Defined at:
 19095 ;;		line 43 in file "main.c"
 19096 ;; Parameters:    Size  Location     Type
 19097 ;;		None
 19098 ;; Auto vars:     Size  Location     Type
 19099 ;;		None
 19100 ;; Return value:  Size  Location     Type
 19101 ;;                  1    wreg      void 
 19102 ;; Registers used:
 19103 ;;		wreg, status,2
 19104 ;; Tracked objects:
 19105 ;;		On entry : 0/0
 19106 ;;		On exit  : 0/0
 19107 ;;		Unchanged: 0/0
 19108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19113 ;;Total ram usage:        0 bytes
 19114 ;; Hardware stack levels used:    1
 19115 ;; This function calls:
 19116 ;;		Nothing
 19117 ;; This function is called by:
 19118 ;;		_main
 19119 ;;		_TMR2_CallBack
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123                           	psect	text80
 19124  00630C                     __ptext80:
 19125                           	opt callstack 0
 19126  00630C                     _led_inter:
 19127                           	opt callstack 18
 19128  00630C                     
 19129                           ;main.c: 50:     teste = 42;
 19130  00630C  0E00               	movlw	0
 19131  00630E  0100               	movlb	0	; () banked
 19132  006310  6FF3               	movwf	(_teste+1)& (0+255),b
 19133  006312  0E2A               	movlw	42
 19134  006314  6FF2               	movwf	_teste& (0+255),b
 19135  006316                     
 19136                           ; BSR set to: 0
 19137  006316  0012               	return		;funcret
 19138  006318                     __end_of_led_inter:
 19139                           	opt callstack 0
 19140                           
 19141 ;; *************** function _PIN_MANAGER_IOC *****************
 19142 ;; Defined at:
 19143 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 19144 ;; Parameters:    Size  Location     Type
 19145 ;;		None
 19146 ;; Auto vars:     Size  Location     Type
 19147 ;;		None
 19148 ;; Return value:  Size  Location     Type
 19149 ;;                  1    wreg      void 
 19150 ;; Registers used:
 19151 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19152 ;; Tracked objects:
 19153 ;;		On entry : 0/0
 19154 ;;		On exit  : 0/0
 19155 ;;		Unchanged: 0/0
 19156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19161 ;;Total ram usage:        0 bytes
 19162 ;; Hardware stack levels used:    1
 19163 ;; Hardware stack levels required when called:    3
 19164 ;; This function calls:
 19165 ;;		_IOCB4_ISR
 19166 ;; This function is called by:
 19167 ;;		_INTERRUPT_InterruptManager
 19168 ;; This function uses a non-reentrant model
 19169 ;;
 19170                           
 19171                           	psect	text81
 19172  0062A6                     __ptext81:
 19173                           	opt callstack 0
 19174  0062A6                     _PIN_MANAGER_IOC:
 19175                           	opt callstack 17
 19176  0062A6                     
 19177                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 19178  0062A6  010F               	movlb	15	; () banked
 19179  0062A8  A95A               	btfss	90,4,b	;volatile
 19180  0062AA  EF59  F031         	goto	i2u837_41
 19181  0062AE  EF5B  F031         	goto	i2u837_40
 19182  0062B2                     i2u837_41:
 19183  0062B2  EF5D  F031         	goto	i2l6994
 19184  0062B6                     i2u837_40:
 19185  0062B6                     
 19186                           ; BSR set to: 15
 19187                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 19188  0062B6  EC66  F030         	call	_IOCB4_ISR	;wreg free
 19189  0062BA                     i2l6994:
 19190                           
 19191                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 19192  0062BA  90F2               	bcf	242,0,c	;volatile
 19193  0062BC  0012               	return		;funcret
 19194  0062BE                     __end_of_PIN_MANAGER_IOC:
 19195                           	opt callstack 0
 19196                           
 19197 ;; *************** function _IOCB4_ISR *****************
 19198 ;; Defined at:
 19199 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;		None
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;		None
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  1    wreg      void 
 19206 ;; Registers used:
 19207 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19208 ;; Tracked objects:
 19209 ;;		On entry : 0/0
 19210 ;;		On exit  : 0/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;Total ram usage:        0 bytes
 19218 ;; Hardware stack levels used:    1
 19219 ;; Hardware stack levels required when called:    2
 19220 ;; This function calls:
 19221 ;;		Absolute function
 19222 ;;		_IOCB4_DefaultInterruptHandler
 19223 ;;		_acende_led
 19224 ;; This function is called by:
 19225 ;;		_PIN_MANAGER_IOC
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text82
 19230  0060CC                     __ptext82:
 19231                           	opt callstack 0
 19232  0060CC                     _IOCB4_ISR:
 19233                           	opt callstack 17
 19234  0060CC                     
 19235                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 19236  0060CC  0100               	movlb	0	; () banked
 19237  0060CE  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 19238  0060D0  11FB               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 19239  0060D2  B4D8               	btfsc	status,2,c
 19240  0060D4  EF6E  F030         	goto	i2u816_41
 19241  0060D8  EF70  F030         	goto	i2u816_40
 19242  0060DC                     i2u816_41:
 19243  0060DC  EF7C  F030         	goto	i2l51
 19244  0060E0                     i2u816_40:
 19245  0060E0                     
 19246                           ; BSR set to: 0
 19247                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 19248  0060E0  D802               	call	i2u817_48
 19249  0060E2  EF7C  F030         	goto	i2u817_49
 19250  0060E6                     i2u817_48:
 19251  0060E6  0005               	push	
 19252  0060E8  6EFA               	movwf	pclath,c
 19253  0060EA  51FA               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 19254  0060EC  6EFD               	movwf	tosl,c
 19255  0060EE  51FB               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 19256  0060F0  6EFE               	movwf	tosh,c
 19257  0060F2  6AFF               	clrf	tosu,c
 19258  0060F4  50FA               	movf	pclath,w,c
 19259  0060F6  0012               	return		;indir
 19260  0060F8                     i2u817_49:
 19261  0060F8                     i2l51:
 19262  0060F8  0012               	return		;funcret
 19263  0060FA                     __end_of_IOCB4_ISR:
 19264                           	opt callstack 0
 19265                           
 19266 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 19267 ;; Defined at:
 19268 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 19269 ;; Parameters:    Size  Location     Type
 19270 ;;		None
 19271 ;; Auto vars:     Size  Location     Type
 19272 ;;		None
 19273 ;; Return value:  Size  Location     Type
 19274 ;;                  1    wreg      void 
 19275 ;; Registers used:
 19276 ;;		None
 19277 ;; Tracked objects:
 19278 ;;		On entry : 0/0
 19279 ;;		On exit  : 0/0
 19280 ;;		Unchanged: 0/0
 19281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19286 ;;Total ram usage:        0 bytes
 19287 ;; Hardware stack levels used:    1
 19288 ;; This function calls:
 19289 ;;		Nothing
 19290 ;; This function is called by:
 19291 ;;		_PIN_MANAGER_Initialize
 19292 ;;		_IOCB4_ISR
 19293 ;; This function uses a non-reentrant model
 19294 ;;
 19295                           
 19296                           	psect	text83
 19297  00636A                     __ptext83:
 19298                           	opt callstack 0
 19299  00636A                     _IOCB4_DefaultInterruptHandler:
 19300                           	opt callstack 18
 19301  00636A  0012               	return		;funcret
 19302  00636C                     __end_of_IOCB4_DefaultInterruptHandler:
 19303                           	opt callstack 0
 19304                           
 19305 ;; *************** function _acende_led *****************
 19306 ;; Defined at:
 19307 ;;		line 26 in file "main.c"
 19308 ;; Parameters:    Size  Location     Type
 19309 ;;		None
 19310 ;; Auto vars:     Size  Location     Type
 19311 ;;		None
 19312 ;; Return value:  Size  Location     Type
 19313 ;;                  1    wreg      void 
 19314 ;; Registers used:
 19315 ;;		wreg, status,2, status,0, cstack
 19316 ;; Tracked objects:
 19317 ;;		On entry : 0/0
 19318 ;;		On exit  : 0/0
 19319 ;;		Unchanged: 0/0
 19320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19325 ;;Total ram usage:        1 bytes
 19326 ;; Hardware stack levels used:    1
 19327 ;; Hardware stack levels required when called:    1
 19328 ;; This function calls:
 19329 ;;		i2___flge
 19330 ;; This function is called by:
 19331 ;;		_main
 19332 ;;		_IOCB4_ISR
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text84
 19337  005982                     __ptext84:
 19338                           	opt callstack 0
 19339  005982                     _acende_led:
 19340                           	opt callstack 17
 19341  005982                     
 19342                           ;main.c: 27:     if (PORTBbits.RB4 == 0){
 19343  005982  B881               	btfsc	129,4,c	;volatile
 19344  005984  EFC6  F02C         	goto	i2u810_41
 19345  005988  EFC8  F02C         	goto	i2u810_40
 19346  00598C                     i2u810_41:
 19347  00598C  EFF4  F02C         	goto	i2l411
 19348  005990                     i2u810_40:
 19349  005990  BA89               	btfsc	137,5,c	;volatile
 19350  005992  EFCD  F02C         	goto	i2u811_41
 19351  005996  EFD0  F02C         	goto	i2u811_40
 19352  00599A                     i2u811_41:
 19353  00599A  0E01               	movlw	1
 19354  00599C  EFD1  F02C         	goto	i2u811_46
 19355  0059A0                     i2u811_40:
 19356  0059A0  0E00               	movlw	0
 19357  0059A2                     i2u811_46:
 19358  0059A2  0AFF               	xorlw	255
 19359  0059A4  6E0D               	movwf	??_acende_led^0,c
 19360  0059A6  3A0D               	swapf	??_acende_led^0,f,c
 19361  0059A8  460D               	rlncf	??_acende_led^0,f,c
 19362  0059AA  5089               	movf	137,w,c	;volatile
 19363  0059AC  180D               	xorwf	??_acende_led^0,w,c
 19364  0059AE  0BDF               	andlw	-33
 19365  0059B0  180D               	xorwf	??_acende_led^0,w,c
 19366  0059B2  6E89               	movwf	137,c	;volatile
 19367  0059B4                     
 19368                           ;main.c: 30:         if (percentagem<80){
 19369  0059B4  C03F  F001         	movff	_percentagem,i2___flge@ff1
 19370  0059B8  C040  F002         	movff	_percentagem+1,i2___flge@ff1+1
 19371  0059BC  C041  F003         	movff	_percentagem+2,i2___flge@ff1+2
 19372  0059C0  C042  F004         	movff	_percentagem+3,i2___flge@ff1+3
 19373  0059C4  0E00               	movlw	0
 19374  0059C6  6E05               	movwf	i2___flge@ff2^0,c
 19375  0059C8  0E00               	movlw	0
 19376  0059CA  6E06               	movwf	(i2___flge@ff2+1)^0,c
 19377  0059CC  0EA0               	movlw	160
 19378  0059CE  6E07               	movwf	(i2___flge@ff2+2)^0,c
 19379  0059D0  0E42               	movlw	66
 19380  0059D2  6E08               	movwf	(i2___flge@ff2+3)^0,c
 19381  0059D4  EC72  F028         	call	i2___flge	;wreg free
 19382  0059D8  B0D8               	btfsc	status,0,c
 19383  0059DA  EFF1  F02C         	goto	i2u812_41
 19384  0059DE  EFF3  F02C         	goto	i2u812_40
 19385  0059E2                     i2u812_41:
 19386  0059E2  EFF4  F02C         	goto	i2l411
 19387  0059E6                     i2u812_40:
 19388  0059E6  9C89               	bcf	137,6,c	;volatile
 19389  0059E8                     i2l411:
 19390  0059E8  0012               	return		;funcret
 19391  0059EA                     __end_of_acende_led:
 19392                           	opt callstack 0
 19393                           
 19394 ;; *************** function i2___flge *****************
 19395 ;; Defined at:
 19396 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 19397 ;; Parameters:    Size  Location     Type
 19398 ;;  ff1             4    0[COMRAM] void 
 19399 ;;  ff2             4    4[COMRAM] void 
 19400 ;; Auto vars:     Size  Location     Type
 19401 ;;		None
 19402 ;; Return value:  Size  Location     Type
 19403 ;;		None               void
 19404 ;; Registers used:
 19405 ;;		wreg, status,2, status,0
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/0
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19411 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19413 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19414 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19415 ;;Total ram usage:       12 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; This function calls:
 19418 ;;		Nothing
 19419 ;; This function is called by:
 19420 ;;		_acende_led
 19421 ;; This function uses a non-reentrant model
 19422 ;;
 19423                           
 19424                           	psect	text85
 19425  0050E4                     __ptext85:
 19426                           	opt callstack 0
 19427  0050E4                     i2___flge:
 19428                           	opt callstack 17
 19429  0050E4  0E00               	movlw	0
 19430  0050E6  1401               	andwf	i2___flge@ff1^0,w,c
 19431  0050E8  6E09               	movwf	??i2___flge^0,c
 19432  0050EA  0E00               	movlw	0
 19433  0050EC  1402               	andwf	(i2___flge@ff1+1)^0,w,c
 19434  0050EE  6E0A               	movwf	(??i2___flge+1)^0,c
 19435  0050F0  0E80               	movlw	128
 19436  0050F2  1403               	andwf	(i2___flge@ff1+2)^0,w,c
 19437  0050F4  6E0B               	movwf	(??i2___flge+2)^0,c
 19438  0050F6  0E7F               	movlw	127
 19439  0050F8  1404               	andwf	(i2___flge@ff1+3)^0,w,c
 19440  0050FA  6E0C               	movwf	(??i2___flge+3)^0,c
 19441  0050FC  5009               	movf	??i2___flge^0,w,c
 19442  0050FE  100A               	iorwf	(??i2___flge+1)^0,w,c
 19443  005100  100B               	iorwf	(??i2___flge+2)^0,w,c
 19444  005102  100C               	iorwf	(??i2___flge+3)^0,w,c
 19445  005104  A4D8               	btfss	status,2,c
 19446  005106  EF87  F028         	goto	i2u805_41
 19447  00510A  EF89  F028         	goto	i2u805_40
 19448  00510E                     i2u805_41:
 19449  00510E  EF91  F028         	goto	i2l6758
 19450  005112                     i2u805_40:
 19451  005112  0E00               	movlw	0
 19452  005114  6E01               	movwf	i2___flge@ff1^0,c
 19453  005116  0E00               	movlw	0
 19454  005118  6E02               	movwf	(i2___flge@ff1+1)^0,c
 19455  00511A  0E00               	movlw	0
 19456  00511C  6E03               	movwf	(i2___flge@ff1+2)^0,c
 19457  00511E  0E00               	movlw	0
 19458  005120  6E04               	movwf	(i2___flge@ff1+3)^0,c
 19459  005122                     i2l6758:
 19460  005122  0E00               	movlw	0
 19461  005124  1405               	andwf	i2___flge@ff2^0,w,c
 19462  005126  6E09               	movwf	??i2___flge^0,c
 19463  005128  0E00               	movlw	0
 19464  00512A  1406               	andwf	(i2___flge@ff2+1)^0,w,c
 19465  00512C  6E0A               	movwf	(??i2___flge+1)^0,c
 19466  00512E  0E80               	movlw	128
 19467  005130  1407               	andwf	(i2___flge@ff2+2)^0,w,c
 19468  005132  6E0B               	movwf	(??i2___flge+2)^0,c
 19469  005134  0E7F               	movlw	127
 19470  005136  1408               	andwf	(i2___flge@ff2+3)^0,w,c
 19471  005138  6E0C               	movwf	(??i2___flge+3)^0,c
 19472  00513A  5009               	movf	??i2___flge^0,w,c
 19473  00513C  100A               	iorwf	(??i2___flge+1)^0,w,c
 19474  00513E  100B               	iorwf	(??i2___flge+2)^0,w,c
 19475  005140  100C               	iorwf	(??i2___flge+3)^0,w,c
 19476  005142  A4D8               	btfss	status,2,c
 19477  005144  EFA6  F028         	goto	i2u806_41
 19478  005148  EFA8  F028         	goto	i2u806_40
 19479  00514C                     i2u806_41:
 19480  00514C  EFB0  F028         	goto	i2l6762
 19481  005150                     i2u806_40:
 19482  005150  0E00               	movlw	0
 19483  005152  6E05               	movwf	i2___flge@ff2^0,c
 19484  005154  0E00               	movlw	0
 19485  005156  6E06               	movwf	(i2___flge@ff2+1)^0,c
 19486  005158  0E00               	movlw	0
 19487  00515A  6E07               	movwf	(i2___flge@ff2+2)^0,c
 19488  00515C  0E00               	movlw	0
 19489  00515E  6E08               	movwf	(i2___flge@ff2+3)^0,c
 19490  005160                     i2l6762:
 19491  005160  AE04               	btfss	(i2___flge@ff1+3)^0,7,c
 19492  005162  EFB5  F028         	goto	i2u807_41
 19493  005166  EFB7  F028         	goto	i2u807_40
 19494  00516A                     i2u807_41:
 19495  00516A  EFC0  F028         	goto	i2l6766
 19496  00516E                     i2u807_40:
 19497  00516E  6C01               	negf	i2___flge@ff1^0,c
 19498  005170  1E02               	comf	(i2___flge@ff1+1)^0,f,c
 19499  005172  B0D8               	btfsc	status,0,c
 19500  005174  2A02               	incf	(i2___flge@ff1+1)^0,f,c
 19501  005176  1E03               	comf	(i2___flge@ff1+2)^0,f,c
 19502  005178  B0D8               	btfsc	status,0,c
 19503  00517A  2A03               	incf	(i2___flge@ff1+2)^0,f,c
 19504  00517C  0E80               	movlw	128
 19505  00517E  5604               	subfwb	(i2___flge@ff1+3)^0,f,c
 19506  005180                     i2l6766:
 19507  005180  AE08               	btfss	(i2___flge@ff2+3)^0,7,c
 19508  005182  EFC5  F028         	goto	i2u808_41
 19509  005186  EFC7  F028         	goto	i2u808_40
 19510  00518A                     i2u808_41:
 19511  00518A  EFD0  F028         	goto	i2l1234
 19512  00518E                     i2u808_40:
 19513  00518E  6C05               	negf	i2___flge@ff2^0,c
 19514  005190  1E06               	comf	(i2___flge@ff2+1)^0,f,c
 19515  005192  B0D8               	btfsc	status,0,c
 19516  005194  2A06               	incf	(i2___flge@ff2+1)^0,f,c
 19517  005196  1E07               	comf	(i2___flge@ff2+2)^0,f,c
 19518  005198  B0D8               	btfsc	status,0,c
 19519  00519A  2A07               	incf	(i2___flge@ff2+2)^0,f,c
 19520  00519C  0E80               	movlw	128
 19521  00519E  5608               	subfwb	(i2___flge@ff2+3)^0,f,c
 19522  0051A0                     i2l1234:
 19523  0051A0  0E00               	movlw	0
 19524  0051A2  1A01               	xorwf	i2___flge@ff1^0,f,c
 19525  0051A4  0E00               	movlw	0
 19526  0051A6  1A02               	xorwf	(i2___flge@ff1+1)^0,f,c
 19527  0051A8  0E00               	movlw	0
 19528  0051AA  1A03               	xorwf	(i2___flge@ff1+2)^0,f,c
 19529  0051AC  0E80               	movlw	128
 19530  0051AE  1A04               	xorwf	(i2___flge@ff1+3)^0,f,c
 19531  0051B0  0E00               	movlw	0
 19532  0051B2  1A05               	xorwf	i2___flge@ff2^0,f,c
 19533  0051B4  0E00               	movlw	0
 19534  0051B6  1A06               	xorwf	(i2___flge@ff2+1)^0,f,c
 19535  0051B8  0E00               	movlw	0
 19536  0051BA  1A07               	xorwf	(i2___flge@ff2+2)^0,f,c
 19537  0051BC  0E80               	movlw	128
 19538  0051BE  1A08               	xorwf	(i2___flge@ff2+3)^0,f,c
 19539  0051C0  5005               	movf	i2___flge@ff2^0,w,c
 19540  0051C2  5C01               	subwf	i2___flge@ff1^0,w,c
 19541  0051C4  5006               	movf	(i2___flge@ff2+1)^0,w,c
 19542  0051C6  5802               	subwfb	(i2___flge@ff1+1)^0,w,c
 19543  0051C8  5007               	movf	(i2___flge@ff2+2)^0,w,c
 19544  0051CA  5803               	subwfb	(i2___flge@ff1+2)^0,w,c
 19545  0051CC  5008               	movf	(i2___flge@ff2+3)^0,w,c
 19546  0051CE  5804               	subwfb	(i2___flge@ff1+3)^0,w,c
 19547  0051D0  B0D8               	btfsc	status,0,c
 19548  0051D2  EFED  F028         	goto	i2u809_41
 19549  0051D6  EFEF  F028         	goto	i2u809_40
 19550  0051DA                     i2u809_41:
 19551  0051DA  EFF2  F028         	goto	i2l6772
 19552  0051DE                     i2u809_40:
 19553  0051DE  90D8               	bcf	status,0,c
 19554  0051E0  EFF3  F028         	goto	i2l1239
 19555  0051E4                     i2l6772:
 19556  0051E4  80D8               	bsf	status,0,c
 19557  0051E6                     i2l1239:
 19558  0051E6  0012               	return		;funcret
 19559  0051E8                     __end_ofi2___flge:
 19560                           	opt callstack 0
 19561                           
 19562 ;; *************** function _INT0_ISR *****************
 19563 ;; Defined at:
 19564 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 19565 ;; Parameters:    Size  Location     Type
 19566 ;;		None
 19567 ;; Auto vars:     Size  Location     Type
 19568 ;;		None
 19569 ;; Return value:  Size  Location     Type
 19570 ;;                  1    wreg      void 
 19571 ;; Registers used:
 19572 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19573 ;; Tracked objects:
 19574 ;;		On entry : 0/0
 19575 ;;		On exit  : 0/0
 19576 ;;		Unchanged: 0/0
 19577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19582 ;;Total ram usage:        0 bytes
 19583 ;; Hardware stack levels used:    1
 19584 ;; Hardware stack levels required when called:    3
 19585 ;; This function calls:
 19586 ;;		_INT0_CallBack
 19587 ;; This function is called by:
 19588 ;;		_INTERRUPT_InterruptManager
 19589 ;; This function uses a non-reentrant model
 19590 ;;
 19591                           
 19592                           	psect	text86
 19593  00634A                     __ptext86:
 19594                           	opt callstack 0
 19595  00634A                     _INT0_ISR:
 19596                           	opt callstack 17
 19597  00634A                     
 19598                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 19599  00634A  92F2               	bcf	242,1,c	;volatile
 19600  00634C                     
 19601                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 19602  00634C  EC7D  F030         	call	_INT0_CallBack	;wreg free
 19603  006350  0012               	return		;funcret
 19604  006352                     __end_of_INT0_ISR:
 19605                           	opt callstack 0
 19606                           
 19607 ;; *************** function _INT0_CallBack *****************
 19608 ;; Defined at:
 19609 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 19610 ;; Parameters:    Size  Location     Type
 19611 ;;		None
 19612 ;; Auto vars:     Size  Location     Type
 19613 ;;		None
 19614 ;; Return value:  Size  Location     Type
 19615 ;;                  1    wreg      void 
 19616 ;; Registers used:
 19617 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19618 ;; Tracked objects:
 19619 ;;		On entry : 0/0
 19620 ;;		On exit  : 0/0
 19621 ;;		Unchanged: 0/0
 19622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19627 ;;Total ram usage:        0 bytes
 19628 ;; Hardware stack levels used:    1
 19629 ;; Hardware stack levels required when called:    2
 19630 ;; This function calls:
 19631 ;;		Absolute function
 19632 ;;		_INT0_DefaultInterruptHandler
 19633 ;;		_pulso_encoder
 19634 ;; This function is called by:
 19635 ;;		_INT0_ISR
 19636 ;; This function uses a non-reentrant model
 19637 ;;
 19638                           
 19639                           	psect	text87
 19640  0060FA                     __ptext87:
 19641                           	opt callstack 0
 19642  0060FA                     _INT0_CallBack:
 19643                           	opt callstack 17
 19644  0060FA                     
 19645                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 19646  0060FA  0101               	movlb	1	; () banked
 19647  0060FC  51D4               	movf	_INT0_InterruptHandler& (0+255),w,b
 19648  0060FE  11D5               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 19649  006100  B4D8               	btfsc	status,2,c
 19650  006102  EF85  F030         	goto	i2u818_41
 19651  006106  EF87  F030         	goto	i2u818_40
 19652  00610A                     i2u818_41:
 19653  00610A  EF93  F030         	goto	i2l287
 19654  00610E                     i2u818_40:
 19655  00610E                     
 19656                           ; BSR set to: 1
 19657                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 19658  00610E  D802               	call	i2u819_48
 19659  006110  EF93  F030         	goto	i2u819_49
 19660  006114                     i2u819_48:
 19661  006114  0005               	push	
 19662  006116  6EFA               	movwf	pclath,c
 19663  006118  51D4               	movf	_INT0_InterruptHandler& (0+255),w,b
 19664  00611A  6EFD               	movwf	tosl,c
 19665  00611C  51D5               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 19666  00611E  6EFE               	movwf	tosh,c
 19667  006120  6AFF               	clrf	tosu,c
 19668  006122  50FA               	movf	pclath,w,c
 19669  006124  0012               	return		;indir
 19670  006126                     i2u819_49:
 19671  006126                     i2l287:
 19672  006126  0012               	return		;funcret
 19673  006128                     __end_of_INT0_CallBack:
 19674                           	opt callstack 0
 19675                           
 19676 ;; *************** function _INT0_DefaultInterruptHandler *****************
 19677 ;; Defined at:
 19678 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 19679 ;; Parameters:    Size  Location     Type
 19680 ;;		None
 19681 ;; Auto vars:     Size  Location     Type
 19682 ;;		None
 19683 ;; Return value:  Size  Location     Type
 19684 ;;                  1    wreg      void 
 19685 ;; Registers used:
 19686 ;;		None
 19687 ;; Tracked objects:
 19688 ;;		On entry : 0/0
 19689 ;;		On exit  : 0/0
 19690 ;;		Unchanged: 0/0
 19691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19696 ;;Total ram usage:        0 bytes
 19697 ;; Hardware stack levels used:    1
 19698 ;; This function calls:
 19699 ;;		Nothing
 19700 ;; This function is called by:
 19701 ;;		_EXT_INT_Initialize
 19702 ;;		_INT0_CallBack
 19703 ;; This function uses a non-reentrant model
 19704 ;;
 19705                           
 19706                           	psect	text88
 19707  00636C                     __ptext88:
 19708                           	opt callstack 0
 19709  00636C                     _INT0_DefaultInterruptHandler:
 19710                           	opt callstack 18
 19711  00636C  0012               	return		;funcret
 19712  00636E                     __end_of_INT0_DefaultInterruptHandler:
 19713                           	opt callstack 0
 19714                           
 19715 ;; *************** function _pulso_encoder *****************
 19716 ;; Defined at:
 19717 ;;		line 36 in file "main.c"
 19718 ;; Parameters:    Size  Location     Type
 19719 ;;		None
 19720 ;; Auto vars:     Size  Location     Type
 19721 ;;		None
 19722 ;; Return value:  Size  Location     Type
 19723 ;;                  1    wreg      void 
 19724 ;; Registers used:
 19725 ;;		wreg, status,2, cstack
 19726 ;; Tracked objects:
 19727 ;;		On entry : 0/0
 19728 ;;		On exit  : 0/0
 19729 ;;		Unchanged: 0/0
 19730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19735 ;;Total ram usage:        0 bytes
 19736 ;; Hardware stack levels used:    1
 19737 ;; Hardware stack levels required when called:    1
 19738 ;; This function calls:
 19739 ;;		_TMR0_ReadTimer
 19740 ;;		_TMR0_StartTimer
 19741 ;;		_TMR0_StopTimer
 19742 ;;		_TMR0_WriteTimer
 19743 ;; This function is called by:
 19744 ;;		_main
 19745 ;;		_INT0_CallBack
 19746 ;; This function uses a non-reentrant model
 19747 ;;
 19748                           
 19749                           	psect	text89
 19750  006216                     __ptext89:
 19751                           	opt callstack 0
 19752  006216                     _pulso_encoder:
 19753                           	opt callstack 17
 19754  006216                     
 19755                           ;main.c: 37:     TMR0_StopTimer();
 19756  006216  ECAF  F031         	call	_TMR0_StopTimer	;wreg free
 19757  00621A                     
 19758                           ;main.c: 38:     ticks=TMR0_ReadTimer();
 19759  00621A  EC2B  F031         	call	_TMR0_ReadTimer	;wreg free
 19760  00621E  C001  F0F8         	movff	?_TMR0_ReadTimer,_ticks
 19761  006222  C002  F0F9         	movff	?_TMR0_ReadTimer+1,_ticks+1
 19762  006226                     
 19763                           ;main.c: 39:     TMR0_WriteTimer(0x00);
 19764  006226  0E00               	movlw	0
 19765  006228  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 19766  00622A  0E00               	movlw	0
 19767  00622C  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 19768  00622E  ECA0  F031         	call	_TMR0_WriteTimer	;wreg free
 19769                           
 19770                           ;main.c: 40:     TMR0_StartTimer();
 19771  006232  ECB1  F031         	call	_TMR0_StartTimer	;wreg free
 19772  006236  0012               	return		;funcret
 19773  006238                     __end_of_pulso_encoder:
 19774                           	opt callstack 0
 19775                           
 19776 ;; *************** function _TMR0_WriteTimer *****************
 19777 ;; Defined at:
 19778 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 19779 ;; Parameters:    Size  Location     Type
 19780 ;;  timerVal        2    0[COMRAM] unsigned short 
 19781 ;; Auto vars:     Size  Location     Type
 19782 ;;		None
 19783 ;; Return value:  Size  Location     Type
 19784 ;;                  1    wreg      void 
 19785 ;; Registers used:
 19786 ;;		wreg, status,2
 19787 ;; Tracked objects:
 19788 ;;		On entry : 0/0
 19789 ;;		On exit  : 0/0
 19790 ;;		Unchanged: 0/0
 19791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19796 ;;Total ram usage:        2 bytes
 19797 ;; Hardware stack levels used:    1
 19798 ;; This function calls:
 19799 ;;		Nothing
 19800 ;; This function is called by:
 19801 ;;		_pulso_encoder
 19802 ;; This function uses a non-reentrant model
 19803 ;;
 19804                           
 19805                           	psect	text90
 19806  006340                     __ptext90:
 19807                           	opt callstack 0
 19808  006340                     _TMR0_WriteTimer:
 19809                           	opt callstack 17
 19810  006340                     
 19811                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 19812  006340  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
 19813  006342  6ED7               	movwf	215,c	;volatile
 19814  006344                     
 19815                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 19816  006344  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
 19817  006348  0012               	return		;funcret
 19818  00634A                     __end_of_TMR0_WriteTimer:
 19819                           	opt callstack 0
 19820                           
 19821 ;; *************** function _TMR0_StopTimer *****************
 19822 ;; Defined at:
 19823 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 19824 ;; Parameters:    Size  Location     Type
 19825 ;;		None
 19826 ;; Auto vars:     Size  Location     Type
 19827 ;;		None
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  1    wreg      void 
 19830 ;; Registers used:
 19831 ;;		None
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19841 ;;Total ram usage:        0 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; This function calls:
 19844 ;;		Nothing
 19845 ;; This function is called by:
 19846 ;;		_pulso_encoder
 19847 ;; This function uses a non-reentrant model
 19848 ;;
 19849                           
 19850                           	psect	text91
 19851  00635E                     __ptext91:
 19852                           	opt callstack 0
 19853  00635E                     _TMR0_StopTimer:
 19854                           	opt callstack 17
 19855  00635E                     
 19856                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 19857  00635E  9ED5               	bcf	213,7,c	;volatile
 19858  006360  0012               	return		;funcret
 19859  006362                     __end_of_TMR0_StopTimer:
 19860                           	opt callstack 0
 19861                           
 19862 ;; *************** function _TMR0_StartTimer *****************
 19863 ;; Defined at:
 19864 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 19865 ;; Parameters:    Size  Location     Type
 19866 ;;		None
 19867 ;; Auto vars:     Size  Location     Type
 19868 ;;		None
 19869 ;; Return value:  Size  Location     Type
 19870 ;;                  1    wreg      void 
 19871 ;; Registers used:
 19872 ;;		None
 19873 ;; Tracked objects:
 19874 ;;		On entry : 0/0
 19875 ;;		On exit  : 0/0
 19876 ;;		Unchanged: 0/0
 19877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19882 ;;Total ram usage:        0 bytes
 19883 ;; Hardware stack levels used:    1
 19884 ;; This function calls:
 19885 ;;		Nothing
 19886 ;; This function is called by:
 19887 ;;		_pulso_encoder
 19888 ;; This function uses a non-reentrant model
 19889 ;;
 19890                           
 19891                           	psect	text92
 19892  006362                     __ptext92:
 19893                           	opt callstack 0
 19894  006362                     _TMR0_StartTimer:
 19895                           	opt callstack 17
 19896  006362                     
 19897                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 19898  006362  8ED5               	bsf	213,7,c	;volatile
 19899  006364  0012               	return		;funcret
 19900  006366                     __end_of_TMR0_StartTimer:
 19901                           	opt callstack 0
 19902                           
 19903 ;; *************** function _TMR0_ReadTimer *****************
 19904 ;; Defined at:
 19905 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 19906 ;; Parameters:    Size  Location     Type
 19907 ;;		None
 19908 ;; Auto vars:     Size  Location     Type
 19909 ;;  readVal         2    4[COMRAM] unsigned short 
 19910 ;;  readValHigh     1    7[COMRAM] unsigned char 
 19911 ;;  readValLow      1    6[COMRAM] unsigned char 
 19912 ;; Return value:  Size  Location     Type
 19913 ;;                  2    0[COMRAM] unsigned short 
 19914 ;; Registers used:
 19915 ;;		wreg, status,2
 19916 ;; Tracked objects:
 19917 ;;		On entry : 0/0
 19918 ;;		On exit  : 0/0
 19919 ;;		Unchanged: 0/0
 19920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19922 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19925 ;;Total ram usage:        8 bytes
 19926 ;; Hardware stack levels used:    1
 19927 ;; This function calls:
 19928 ;;		Nothing
 19929 ;; This function is called by:
 19930 ;;		_pulso_encoder
 19931 ;; This function uses a non-reentrant model
 19932 ;;
 19933                           
 19934                           	psect	text93
 19935  006256                     __ptext93:
 19936                           	opt callstack 0
 19937  006256                     _TMR0_ReadTimer:
 19938                           	opt callstack 17
 19939  006256                     
 19940                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
 19941  006256  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 19942                           
 19943                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
 19944  00625A  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 19945  00625E                     
 19946                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 19947  00625E  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 19948  006260  6E03               	movwf	??_TMR0_ReadTimer^0,c
 19949  006262  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 19950  006264  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 19951  006266  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 19952  00626A                     
 19953                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
 19954  00626A  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 19955  00626E  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 19956  006272  0012               	return		;funcret
 19957  006274                     __end_of_TMR0_ReadTimer:
 19958                           	opt callstack 0
 19959                           
 19960 ;; *************** function _ADC_ISR *****************
 19961 ;; Defined at:
 19962 ;;		line 139 in file "mcc_generated_files/adc.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;		None
 19965 ;; Auto vars:     Size  Location     Type
 19966 ;;		None
 19967 ;; Return value:  Size  Location     Type
 19968 ;;                  1    wreg      void 
 19969 ;; Registers used:
 19970 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19971 ;; Tracked objects:
 19972 ;;		On entry : 0/0
 19973 ;;		On exit  : 0/0
 19974 ;;		Unchanged: 0/0
 19975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19980 ;;Total ram usage:        0 bytes
 19981 ;; Hardware stack levels used:    1
 19982 ;; Hardware stack levels required when called:    1
 19983 ;; This function calls:
 19984 ;;		Absolute function
 19985 ;;		_ADC_DefaultInterruptHandler
 19986 ;; This function is called by:
 19987 ;;		_INTERRUPT_InterruptManager
 19988 ;; This function uses a non-reentrant model
 19989 ;;
 19990                           
 19991                           	psect	text94
 19992  006040                     __ptext94:
 19993                           	opt callstack 0
 19994  006040                     _ADC_ISR:
 19995                           	opt callstack 19
 19996  006040                     
 19997                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 19998  006040  9C9E               	bcf	158,6,c	;volatile
 19999  006042                     
 20000                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 20001  006042  0101               	movlb	1	; () banked
 20002  006044  51D6               	movf	_ADC_InterruptHandler& (0+255),w,b
 20003  006046  11D7               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
 20004  006048  B4D8               	btfsc	status,2,c
 20005  00604A  EF29  F030         	goto	i2u838_41
 20006  00604E  EF2B  F030         	goto	i2u838_40
 20007  006052                     i2u838_41:
 20008  006052  EF37  F030         	goto	i2l233
 20009  006056                     i2u838_40:
 20010  006056                     
 20011                           ; BSR set to: 1
 20012                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 20013  006056  D802               	call	i2u839_48
 20014  006058  EF37  F030         	goto	i2u839_49
 20015  00605C                     i2u839_48:
 20016  00605C  0005               	push	
 20017  00605E  6EFA               	movwf	pclath,c
 20018  006060  51D6               	movf	_ADC_InterruptHandler& (0+255),w,b
 20019  006062  6EFD               	movwf	tosl,c
 20020  006064  51D7               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
 20021  006066  6EFE               	movwf	tosh,c
 20022  006068  6AFF               	clrf	tosu,c
 20023  00606A  50FA               	movf	pclath,w,c
 20024  00606C  0012               	return		;indir
 20025  00606E                     i2u839_49:
 20026  00606E                     i2l233:
 20027  00606E  0012               	return		;funcret
 20028  006070                     __end_of_ADC_ISR:
 20029                           	opt callstack 0
 20030                           
 20031 ;; *************** function _ADC_DefaultInterruptHandler *****************
 20032 ;; Defined at:
 20033 ;;		line 154 in file "mcc_generated_files/adc.c"
 20034 ;; Parameters:    Size  Location     Type
 20035 ;;		None
 20036 ;; Auto vars:     Size  Location     Type
 20037 ;;		None
 20038 ;; Return value:  Size  Location     Type
 20039 ;;                  1    wreg      void 
 20040 ;; Registers used:
 20041 ;;		None
 20042 ;; Tracked objects:
 20043 ;;		On entry : 0/0
 20044 ;;		On exit  : 0/0
 20045 ;;		Unchanged: 0/0
 20046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20051 ;;Total ram usage:        0 bytes
 20052 ;; Hardware stack levels used:    1
 20053 ;; This function calls:
 20054 ;;		Nothing
 20055 ;; This function is called by:
 20056 ;;		_ADC_Initialize
 20057 ;;		_ADC_ISR
 20058 ;; This function uses a non-reentrant model
 20059 ;;
 20060                           
 20061                           	psect	text95
 20062  00636E                     __ptext95:
 20063                           	opt callstack 0
 20064  00636E                     _ADC_DefaultInterruptHandler:
 20065                           	opt callstack 19
 20066  00636E  0012               	return		;funcret
 20067  006370                     __end_of_ADC_DefaultInterruptHandler:
 20068                           	opt callstack 0
 20069                           
 20070                           	psect	text96
 20071  000000                     __ptext96:
 20072                           	opt callstack 0
 20073  000000                     
 20074                           	psect	rparam
 20075  0000                     
 20076                           	psect	temp
 20077  00004F                     btemp:
 20078                           	opt callstack 0
 20079  00004F                     	ds	1
 20080  0000                     int$flags	set	btemp
 20081  0000                     wtemp8	set	btemp+1
 20082  0000                     ttemp5	set	btemp+1
 20083  0000                     ttemp6	set	btemp+4
 20084  0000                     ttemp7	set	btemp+8
 20085                           tosu	equ	0xFFF
 20086                           tosh	equ	0xFFE
 20087                           tosl	equ	0xFFD
 20088                           stkptr	equ	0xFFC
 20089                           pclatu	equ	0xFFB
 20090                           pclath	equ	0xFFA
 20091                           pcl	equ	0xFF9
 20092                           tblptru	equ	0xFF8
 20093                           tblptrh	equ	0xFF7
 20094                           tblptrl	equ	0xFF6
 20095                           tablat	equ	0xFF5
 20096                           prodh	equ	0xFF4
 20097                           prodl	equ	0xFF3
 20098                           indf0	equ	0xFEF
 20099                           postinc0	equ	0xFEE
 20100                           postdec0	equ	0xFED
 20101                           preinc0	equ	0xFEC
 20102                           plusw0	equ	0xFEB
 20103                           fsr0h	equ	0xFEA
 20104                           fsr0l	equ	0xFE9
 20105                           wreg	equ	0xFE8
 20106                           indf1	equ	0xFE7
 20107                           postinc1	equ	0xFE6
 20108                           postdec1	equ	0xFE5
 20109                           preinc1	equ	0xFE4
 20110                           plusw1	equ	0xFE3
 20111                           fsr1h	equ	0xFE2
 20112                           fsr1l	equ	0xFE1
 20113                           bsr	equ	0xFE0
 20114                           indf2	equ	0xFDF
 20115                           postinc2	equ	0xFDE
 20116                           postdec2	equ	0xFDD
 20117                           preinc2	equ	0xFDC
 20118                           plusw2	equ	0xFDB
 20119                           fsr2h	equ	0xFDA
 20120                           fsr2l	equ	0xFD9
 20121                           status	equ	0xFD8


Data Sizes:
    Strings     155
    Constant    3536
    Data        7
    BSS         414
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      78
    BANK0           160    142     156
    BANK1           256     20     223
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[4]), STR_16(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[4]), STR_16(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ticks(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ticks(BANK0[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    S2418_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(COMRAM[7]), ticks(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), STR_2(CODE[11]), 
		 -> STR_1(CODE[33]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_inter(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_inter(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pulso_encoder(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pulso_encoder(), INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->___flge
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_acende_led
    _acende_led->i2___flge
    _pulso_encoder->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  209387
                  _ADC_GetConversion
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                            ___aldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   98418
                                            138 BANK0      4     4      0
                                             10 BANK1     10     0     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   97303
                                            126 BANK0     12     4      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   96266
                                            118 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95439
                                             72 BANK0     46    40      6
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             42 COMRAM    19     8     11
                                              0 BANK0     20    20      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                             21 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             42 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             15 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             15 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                             15 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             24 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             42 COMRAM    18     8     10
                                              0 BANK0     16    16      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   32037
                                              4 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                             21 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                             15 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             40 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                             15 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             54 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                             15 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             15 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                             29 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1096
                                             54 COMRAM     8     0      8
                                              0 BANK0      4     4      0
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             15 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                             15 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             42 COMRAM    18     8     10
                                              0 BANK0     18    18      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             33 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             15 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             15 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             42 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             31 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             24 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                             15 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                             22 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             15 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37190
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                             24 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   31702
                                             46 COMRAM    14     4     10
                                              0 BANK0      4     4      0
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                             24 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   35466
                                             30 COMRAM    23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   31732
                                             24 COMRAM     6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                             20 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                             18 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                             18 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                             18 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                             16 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             15 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             15 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     620
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     423
                                             13 COMRAM     2     2      0
                            _ADC_ISR
                           _INT0_ISR
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _led_inter *
 ---------------------------------------------------------------------------------
 (13) _led_inter                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0     234
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0     234
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                         _acende_led *
 ---------------------------------------------------------------------------------
 (13) _acende_led                                          1     1      0     234
                                             12 COMRAM     1     1      0
                           i2___flge
 ---------------------------------------------------------------------------------
 (14) i2___flge                                           12     4      8     234
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0     189
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0     189
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                      _pulso_encoder *
 ---------------------------------------------------------------------------------
 (13) _pulso_encoder                                       0     0      0     189
                     _TMR0_ReadTimer
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR0_WriteTimer                                     2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   ___aldiv
   ___flge
     ___flmul (ARG)
       ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _pulso_encoder *
         _TMR0_ReadTimer
         _TMR0_StartTimer
         _TMR0_StopTimer
         _TMR0_WriteTimer
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _acende_led *
         i2___flge
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _led_inter *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     14      DF       8       87.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      4E       1       83.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     291       6        0.0%
DATA                 0      0     291       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 28 11:22:56 2020

                   __size_of_pulso_encoder 0022                           fp__pulso_encoder 0000  
                           _SPI_Initialize 62E8           __end_of_TMR2_SetInterruptHandler 6322  
                             ___fldiv@aexp 0028                               ___fldiv@bexp 0027  
                             ___fldiv@sign 0020                                _SSPSTATbits 000FC7  
                                       l43 5D8A                                         l54 632A  
                                       l86 61F0                                         l89 630A  
                             ___awdiv@sign 0015                        ___wmul@multiplicand 0012  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
                          _timer0ReloadVal 004D                 ?_IOCB4_SetInterruptHandler 0010  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l211 6214                                        l108 635C  
                                      l223 5EA6                                        l144 62F8  
                                      l226 5EC6                                        l154 627A  
                                      l148 5854                                        l236 633E  
                                      l156 6288                                        l157 628C  
                                      l254 61A4                                        l319 6254  
                                      l520 600E                                        l424 388C  
                                      l513 48A4                                        l290 6334  
                                      l347 6320                                        l516 48D6  
                                      l470 62A4                                        l296 62E6  
                                      l480 5CFE                                        l560 476E  
                                      l458 609C                                        l491 5980  
                                      l467 3162                                        l484 5CB6  
                                      l476 5E10                                        l804 3F38  
                                      l661 5678                                        l717 2158  
                                      l813 44F4                                        l806 3F9C  
                                      l487 62D2                                        l735 1994  
                                      l815 44FC                                        l664 56BA  
                                      l824 45A4                                        l569 4B72  
                                      l673 5C1C                                        l681 320C  
                                      l761 1D2C                                        l825 45EC  
                                      l913 15A6                                        l666 56F4  
                                      l834 3BDE                                        l851 3488  
                                      l588 6152                                        l844 3DAC  
                                      l836 3BE6                                        l829 45F4  
                                      l933 09BC                                        l679 3204  
                                      l872 36C2                                        l849 3480  
                                      l874 3724                                        l858 3522  
                                      l699 3446                                        l795 3DE6  
                                      l797 3DEE                                        l965 5A44  
                                      l966 5A4C                                        l888 01B6  
                                      l969 61CA                               __CFG_CPB$OFF 000000  
                                      _PR2 000FCB                               __CFG_CPD$OFF 000000  
               ??_INT0_SetInterruptHandler 0012                            _timer1ReloadVal 01D0  
                                      _abs 5E12                                        _pad 5634  
                          __end_of_ADC_ISR 6070                                        _rpm 00F4  
          __end_of_ADC_SetInterruptHandler 6340                               ___awmod@sign 0015  
                          _TMR2_Initialize 6238                                        tosl 000FFD  
                                      wreg 000FE8                              _INT0_CallBack 60FA  
                             ___flmul@aexp 002B                               ___flmul@bexp 0030  
             ?_ADC_DefaultInterruptHandler 0001                               ___flmul@sign 002A  
                             ___flmul@temp 0035                               ___flmul@prod 0031  
                          ?_lcd_set_cursor 0015                               ___fltol@exp1 0019  
                       __size_of_IOCB4_ISR 002E                                       l1200 5632  
                                     ?_abs 0022                                       l1213 57A4  
                                     l1048 4ED6                                       l1234 509C  
                                     l1083 4472                                       l1243 5F6E  
                                     l1228 58FE                                       l1414 53D4  
                                     l1239 50E2                                       l1407 53B4  
                                     l1096 4A3A                                       l1600 2A04  
                                     l1424 54A4                                       l1417 5484  
                                     l1514 2462                                       l1506 2618  
                                     l1266 4FDC                                       l1523 2532  
                                     l1524 2520                                       l1631 408C  
                                     l1711 5FA6                                       l1551 2DDC  
                                     l1624 3FF4                                       l1553 2C3C  
                                     l1705 5E8C                                       l1562 2C82  
                                     l1650 52E4                                       l1802 5B0A  
                                     l1627 4150                                       l1539 5D44  
                                     l1740 556E                                       l1564 2CFA  
                                     l1556 2C00                                       l1565 2CE8  
                                     l1725 5F36                                       l1638 40E8  
                                     l1590 28D4                                       l1719 5C6E  
                                     l1751 6366                                       l1655 5E48  
                                     l1583 26DE                                       l1592 294C  
                                     l1808 5EFE                                       l1824 4C7E  
                                     l1593 293A                                       l1497 2348  
                                     l1770 5FDC                                       l1658 5E50  
                                     l1498 2336                                       l1587 2A42  
                                     l1499 22FC                                       l1819 4CA4  
                                     l1748 5DCE                                       l1764 5B68  
                                     l1686 42E2                                       l1774 4DCA  
                                     l1758 603E                                       l1695 3BA4  
                                     l7000 61D4                                       l1784 5AA4  
                                     l1689 42EA                                       l7010 61E8  
                                     l7002 61D8                                       l1698 3AE8  
                                     l7012 61EC                                       l7004 61DC  
                                     l1789 5AAC                                       l1797 5B02  
                                     l7006 61E0                                       ?_pad 0020  
                                     l7040 581E                                       l7032 57A8  
                                     l7008 61E4                                       l8000 431E  
                                     l7050 5EA4                                       l7042 5852  
                                     l7034 57B6                                       l8010 4360  
                                     l8002 4322                                       l7052 5EB4  
                                     l7036 57F6                                       l8020 43BA  
                                     l8012 437E                                       l8004 4330  
                                     l8100 2AC6                                       l7046 5E90  
                                     l7038 57FA                                       l8022 43E8  
                                     l8014 4386                                       l8030 4422  
                                     l8006 4350                                       l8102 2AD6  
                                     l8110 2B00                                       l7048 5EA2  
                                     l7320 4DF2                                       l7312 4DCC  
                                     l8032 4432                                       l8024 4408  
                                     l8016 439A                                       l8008 4354  
                                     l8040 48DC                                       l8200 2DCA  
                                     l8120 2B42                                       l8112 2B10  
                                     l8104 2AE6                                       l9000 4486  
                                     l7330 4E3A                                       l7322 4E00  
                                     l7314 4DD0                                       l8034 4452  
                                     l8026 440A                                       l8018 43A8  
                                     l8050 493C                                       l8042 48EA  
                                     l8202 2DD0                                       l8114 2B26  
                                     l8106 2AF6                                       l9010 44C4  
                                     l9002 448E                                       l7340 4E84  
                                     l7332 4E42                                       l7324 4E10  
                                     l7316 4DDE                                       l8028 441C  
                                     l8060 49B2                                       l8052 495A  
                                     l8044 490A                                       l8204 2DD2  
                                     l8140 2BC4                                       l8132 2B7A  
                                     l8116 2B36                                       l8124 2B56  
                                     l8108 2AF8                                       l8300 28E4  
                                     l8220 2646                                       l8212 261A  
                                     l9020 4536                                       l9012 44D2  
                                     l9004 44A0                                       l9100 3516  
                                     l7350 4EB6                                       l7342 4E94  
                                     l7334 4E4E                                       l7326 4E14  
                                     l7318 4DEE                                       l8070 4A1A  
                                     l8062 49D2                                       l8054 4962  
                                     l8046 490E                                       l8038 48D8  
                                     l8150 2C0A                                       l8142 2BCC  
                                     l8134 2B94                                       l8126 2B66  
                                     l8118 2B3E                                       l8302 28F2  
                                     l8230 2682                                       l8222 2656  
                                     l8214 2626                                       l9030 4586  
                                     l9022 4554                                       l9006 44A8  
                                     l9110 35A2                                       l7352 4EC6  
                                     l7344 4E96                                       l7336 4E5C  
                                     l7328 4E24                                       l7360 3FBE  
                                     l8064 49E4                                       l8056 4976  
                                     l8048 491C                                       l8400 5714  
                                     l8160 2C62                                       l8152 2C28  
                                     l8144 2BDC                                       l8136 2BA4  
                                     l8128 2B66                                       l8080 2A60  
                                     l8312 295C                                       l8320 29A4  
                                     l8304 28F6                                       l8240 26B8  
                                     l8232 2688                                       l8224 2666  
                                     l8216 2634                                       l9024 4560  
                                     l9016 451E                                       l9008 44BC  
                                     l9200 4D8E                                       l9040 3BA6  
                                     l9120 35E6                                       l9112 35B4  
                                     l9104 3556                                       l7346 4EA0  
                                     l7338 4E66                                       l7370 4036  
                                     l7362 4004                                       l9210 5CD4  
                                     l8058 4984                                       l8066 49EA  
                                     l8410 574C                                       l8402 5722  
                                     l8170 2CA0                                       l8162 2C68  
                                     l8154 2C2A                                       l8146 2BF0  
                                     l8138 2BB4                                       l8082 2A70  
                                     l8090 2A9A                                       l8074 2A44  
                                     l8330 2A18                                       l8322 29BE  
                                     l8314 2968                                       l8306 2904  
                                     l8242 26C8                                       l8234 2696  
                                     l8226 266C                                       l8218 2636  
                                     l9034 45B6                                       l9026 457E  
                                     l9018 4532                                       l9050 3C18  
                                     l9042 3BB4                                       l9130 36B4  
                                     l9106 3568                                       l9114 35C8  
                                     l9122 3644                                       l7348 4EA6  
                                     l7380 40BE                                       l7372 4042  
                                     l7364 401A                                       l7356 3FA0  
                                     l9212 5CFC                                       l9204 5CB8  
                                     l6900 607A                                       l8068 49FA  
                                     l8412 575A                                       l8420 5784  
                                     l8404 572A                                       l8180 2D0A  
                                     l8172 2CA4                                       l8164 2C72  
                                     l8156 2C3A                                       l8148 2BFE  
                                     l8092 2AAA                                       l8084 2A80  
                                     l8076 2A50                                       l8332 2A26  
                                     l8324 29D2                                       l8316 2976  
                                     l8308 2932                                       l8260 274A  
                                     l8252 2712                                       l8244 26CE  
                                     l8236 2698                                       l8228 267C  
                                     l7700 21EE                                       l8500 4F7C  
                                     l9036 45CA                                       l9028 4582  
                                     l9060 3CAC                                       l9052 3C22  
                                     l9044 3BB6                                       l9132 36D0  
                                     l9124 3662                                       l9116 35DA  
                                     l9300 0392                                       l6830 5D7A  
                                     l6822 5D46                                       l7390 40FC  
                                     l7382 40CA                                       l7374 4074  
                                     l7358 3FB0                                       l9206 5CCE  
                                     l9222 5C8C                                       l6902 6088  
                                     l9150 418C                                       l9142 4152  
                                     l8350 5574                                       l8422 5794  
                                     l8414 5770                                       l8406 573C  
                                     l8190 2D6C                                       l8182 2D16  
                                     l8174 2CB2                                       l8166 2C80  
                                     l8158 2C4C                                       l8094 2AB0  
                                     l8086 2A90                                       l8078 2A5E  
                                     l8430 5884                                       l8334 2A28  
                                     l8326 29EC                                       l8318 29A0  
                                     l8270 2794                                       l8262 2762  
                                     l8254 271E                                       l8246 26EE  
                                     l8238 26A8                                       l7710 2222  
                                     l7702 21F0                                       l8342 5D00  
                                     l8510 4FAC                                       l9038 45CE  
                                     l9070 3D76                                       l9054 3C28  
                                     l9062 3D10                                       l9046 3BD0  
                                     l9134 36D6                                       l9126 3680  
                                     l9118 35E0                                       l9310 0422  
                                     l9230 00E6                                       l6840 635A  
                                     l6832 5D7C                                       l6824 5D62  
                                     l7392 4120                                       l7384 40D8  
                                     l7376 4076                                       l7368 402E  
                                     l9224 5CB4                                       l9216 5C70  
                                     l6904 608A                                       l9160 41E4  
                                     l9152 41C4                                       l9144 4166  
                                     l7640 54CA                                       l8600 31DE  
                                     l8360 55A4                                       l8352 5582  
                                     l8424 579C                                       l8416 5778  
                                     l8408 5744                                       l8192 2D82  
                                     l8184 2D24                                       l8176 2CE0  
                                     l8168 2C92                                       l8096 2AB6  
                                     l8088 2A92                                       l8440 58FC  
                                     l8432 5894                                       l8328 2A08  
                                     l8336 2A2E                                       l8280 27EA  
                                     l8272 27A4                                       l8264 276E  
                                     l8256 2728                                       l8248 26FE  
                                     l7800 2430                                       l7720 225E  
                                     l7704 2200                                       l7712 222A  
                                     l8344 5D10                                       l8512 4FBC  
                                     l8520 52F2                                       l9064 3D24  
                                     l9072 3D84                                       l9056 3C9E  
                                     l9048 3C0E                                       l9136 36E6  
                                     l9128 369A                                       l9080 3458  
                                     l9400 0A86                                       l9320 04F2  
                                     l9312 0456                                       l9304 03DC  
                                     l9240 0118                                       l9232 00F4  
                                     l6850 61F2                                       l6834 5D88  
                                     l6826 5D68                                       l6842 62E8  
                                     l7394 4130                                       l7386 40F6  
                                     l7378 4082                                       l9218 5C86  
                                     l9170 4262                                       l9162 41EC  
                                     l9154 41C8                                       l9146 416A  
                                     l7642 54D4                                       l7650 5D8C  
                                     l8610 323A                                       l8602 31F8  
                                     l8370 55D2                                       l8362 55A8  
                                     l8354 558A                                       l8418 577E  
                                     l8194 2D9C                                       l8186 2D4E  
                                     l8098 2AC4                                       l8434 58C2  
                                     l8450 504C                                       l8338 2A32  
                                     l8290 288E                                       l8282 2806  
                                     l8274 27B0                                       l8266 277A  
                                     l8258 273E                                       l7810 2488  
                                     l7802 2432                                       l7730 2272  
                                     l7722 2262                                       l7714 223A  
                                     l7706 2210                                       l8514 4FCC  
                                     l8506 4F90                                       l8530 534C  
                                     l8522 5310                                       l9066 3D42  
                                     l9058 3CA6                                       l9138 36FC  
                                     l9090 34D2                                       l9082 3472  
                                     l9410 0B34                                       l9402 0ABC  
                                     l9330 05C4                                       l9314 0466  
                                     l9306 03EE                                       l9250 0136  
                                     l9242 012A                                       l9234 0104  
                                     l6852 6206                                       l6780 632C  
                                     l6828 5D78                                       l6844 62F4  
                                     l6860 6242                                       l7396 413E  
                                     l7388 40F8                                       l9164 41F4  
                                     l9148 416E                                       l7644 54F2  
                                     l7636 54A6                                       l7652 5D98  
                                     l7660 5FB4                                       l8620 32DC  
                                     l8612 3242                                       l8604 3214  
                                     l8380 5606                                       l8372 55E0  
                                     l8364 55B0                                       l8356 558E  
                                     l8348 5570                                       l8196 2DB8  
                                     l8188 2D52                                       l8436 58D2  
                                     l8428 5856                                       l8460 50DA  
                                     l8452 505C                                       l8444 4FDE  
                                     l8292 289C                                       l8284 2812  
                                     l8276 27C0                                       l8268 2788  
                                     l7820 24B6                                       l7804 2442  
                                     l7740 2286                                       l7732 2276  
                                     l7724 2266                                       l7716 224C  
                                     l7708 2220                                       l8508 4F9C  
                                     l8700 1736                                       l8532 537A  
                                     l8524 5318                                       l8540 53D6  
                                     l9068 3D5C                                       l9092 34DC  
                                     l9084 349E                                       l9076 3448  
                                     l9324 050E                                       l9316 049A  
                                     l9308 0412                                       l9236 0108  
                                     l9228 00C0                                       l6854 6208  
                                     l6870 62E4                                       l6846 62F6  
                                     l6782 6318                                       l6862 6244  
                                     l7398 4140                                       l9174 42A2  
                                     l9166 422A                                       l9158 41CE  
                                     l7646 5528                                       l7638 54B8  
                                     l7654 5DAA                                       l7662 5FB8  
                                     l7902 5E12                                       l8630 339A  
                                     l8622 32E2                                       l8614 324C  
                                     l8606 3226                                       l8382 560C  
                                     l8374 55E6                                       l8366 55C2  
                                     l8358 559C                                       l8198 2DBC  
                                     l8438 58F6                                       l8462 50E0  
                                     l8454 506A                                       l8446 500E  
                                     l8294 28BA                                       l8286 282E  
                                     l8278 27DA                                       l8470 5F5E  
                                     l7822 24C4                                       l7814 249C  
                                     l7830 24E2                                       l7806 2452  
                                     l7742 228A                                       l7734 227A  
                                     l7726 226A                                       l7718 225A  
                                     l7750 229A                                       l7910 5246  
                                     l8710 17C0                                       l8702 175C  
                                     l9190 4CDC                                       l8534 539A  
                                     l8526 532C                                       l8518 52E6  
                                     l8550 544C                                       l8542 53F4  
                                     l9094 34E2                                       l9086 34A8  
                                     l9078 3456                                       l9430 0C86  
                                     l9334 05FC                                       l9326 0544  
                                     l9318 04C0                                       l9270 01EC  
                                     l9262 014E                                       l9254 013C  
                                     l9246 0130                                       l9238 0116  
                                     l6848 62FA                                       l6776 6322  
                                     l6880 617E                                       l6872 6128  
                                     l6864 6250                                       l6856 6238  
                                     l9600 5DD0                                       l8560 5C36  
                                     l9176 42B4                                       l7656 5DAE  
                                     l7664 5FD0                                       l7904 5E2C  
                                     l8640 33E8                                       l8632 33B4  
                                     l8616 3252                                       l8624 3346  
                                     l8608 3234                                       l8376 55FC  
                                     l8368 55CA                                       l8384 5612  
                                     l8392 56F6                                       l8456 507C  
                                     l8448 501E                                       l8296 28C4  
                                     l8288 2858                                       l7824 24CC  
                                     l7816 24A6                                       l7808 2478  
                                     l7832 24F0                                       l7760 230A  
                                     l7752 229E                                       l7744 228E  
                                     l7736 227E                                       l7728 226E  
                                     l7680 2186                                       l7672 215A  
                                     l8480 4F02                                       l7920 5298  
                                     l7912 526E                                       l8800 1BD4  
                                     l8720 17F6                                       l9192 4CEA  
                                     l9184 4CA6                                       l8536 539C  
                                     l8528 533A                                       l8552 546C  
                                     l8544 53FC                                       l9096 34EA  
                                     l9088 34C8                                       l9520 1214  
                                     l9512 116E                                       l9504 10E6  
                                     l9424 0C0C                                       l9416 0B84  
                                     l9408 0B0E                                       l9344 06B8  
                                     l9336 0632                                       l9328 057A  
                                     l9280 026C                                       l9272 0222  
                                     l9264 01A4                                       l6778 6336  
                                     l6866 62D4                                       l6882 6180  
                                     l6874 6134                                       l6858 6240  
                                     l8570 629A                                       l9602 5DEC  
                                     l8562 5C64                                       l9178 42C6  
                                     l7658 5FA8                                       l8642 33FA  
                                     l8626 3362                                       l8634 33C2  
                                     l8618 32D4                                       l8386 5622  
                                     l8378 5604                                       l8394 56FA  
                                     l8458 508A                                       l8298 28D2  
                                     l8466 5F38                                       l7842 2542  
                                     l7850 2598                                       l7834 24F4  
                                     l7826 24D0                                       l7818 24B4  
                                     l7770 2334                                       l7762 2316  
                                     l7754 22C8                                       l7746 2292  
                                     l7738 2282                                       l7690 21C0  
                                     l7682 2196                                       l7674 2166  
                                     l8490 4F50                                       l8482 4F2C  
                                     l8474 4ED8                                       l7914 527A  
                                     l7906 51E8                                       l7930 5B1C  
                                     l8810 1CA0                                       l8802 1BF2  
                                     l8730 18C0                                       l8706 1792  
                                     l9194 4D1C                                       l9186 4CD0  
                                     l8538 53AE                                       l8554 547E  
                                     l8546 5410                                       l9098 3506  
                                     l9530 12F2                                       l9522 124A  
                                     l9514 11A4                                       l9506 111C  
                                     l9426 0C42                                       l9434 0C94  
                                     l9418 0BBA                                       l9370 084A  
                                     l9354 0752                                       l9346 06DE  
                                     l9338 0668                                       l9290 02F6  
                                     l9274 0230                                       l9266 01C4  
                                     l9258 0142                                       l6868 62D8  
                                     l6884 6188                                       l6876 6136  
                                     l8572 629C                                       l9612 62BE  
                                     l9604 5E08                                       l8564 5C68  
                                     l8556 5C1E                                       l8580 5BE2  
                                     l8644 3406                                       l8636 33D4  
                                     l8628 3380                                       l8388 562A  
                                     l8396 5708                                       l8468 5F4E  
                                     l7860 25EA                                       l7852 25A8  
                                     l7844 254E                                       l7836 2502  
                                     l7828 24E0                                       l7780 238A  
                                     l7772 2356                                       l7764 231A  
                                     l7756 22E4                                       l7748 2296  
                                     l7692 21C6                                       l7684 21A6  
                                     l7676 2174                                       l8484 4F2E  
                                     l8476 4EEE                                       l7924 52DC  
                                     l7908 5208                                       l7668 5F00  
                                     l7932 5A4E                                       l8900 1FF2  
                                     l8820 1D18                                       l8812 1CB0  
                                     l8804 1C26                                       l8740 1942  
                                     l8732 18F4                                       l8724 182C  
                                     l8708 17A4                                       l8660 15D8  
                                     l8652 15A8                                       l9196 4D3A  
                                     l8548 541E                                       l9532 131C  
                                     l9540 136C                                       l9516 11DA  
                                     l9436 0CCA                                       l9444 0D16  
                                     l9428 0C7A                                       l9372 087A  
                                     l9364 0810                                       l9356 0788  
                                     l9348 0704                                       l9292 0304  
                                     l9284 02B6                                       l9276 023E  
                                     l9268 01C6                                       l9620 5A00  
                                     l9700 4C66                                       l6886 619E  
                                     l6878 614E                                       l8574 62A2  
                                     l9630 5938                                       l9710 2DE8  
                                     l8558 5C22                                       l8582 5BEE  
                                     l8646 340E                                       l8638 33E2  
                                     l8590 3164                                       l8398 5710  
                                     l7870 2608                                       l7862 25F0  
                                     l7854 25B8                                       l7846 255C  
                                     l7838 2518                                       l7790 23C4  
                                     l7782 2398                                       l7774 2366  
                                     l7766 2328                                       l7758 22F4  
                                     l7694 21D8                                       l7686 21A8  
                                     l7678 2176                                       l8486 4F3E  
                                     l7918 5286                                       l7950 3A2C  
                                     l7942 3994                                       l8910 204E  
                                     l8902 1FFE                                       l8830 1DCE  
                                     l8822 1D24                                       l8814 1CC0  
                                     l8806 1C58                                       l8742 1954  
                                     l8750 19A0                                       l8734 18FC  
                                     l8726 1860                                       l8718 17DC  
                                     l8670 162E                                       l8662 15FC  
                                     l8654 15B2                                       l9198 4D4C  
                                     l9542 1392                                       l9534 132C  
                                     l9518 1204                                       l9526 1286  
                                     l9446 0D3C                                       l9454 0D86  
                                     l9438 0D02                                       l9382 0946  
                                     l9366 0824                                       l9358 07BE  
                                     l9294 032A                                       l9278 025E  
                                     l9286 02C8                                       l9622 5A26  
                                     l9702 4C86                                       l6888 61A0  
                                     l8568 6290                                       l9608 5E0E  
                                     l9640 6002                                       l9632 5944  
                                     l9624 5900                                       l9800 2FA6  
                                     l9720 2E16                                       l9712 2DEE  
                                     l7880 5634                                       l8584 5BF2  
                                     l8576 5BC4                                       l8648 341E  
                                     l8592 3184                                       l7864 25F2  
                                     l7856 25D8                                       l7848 2596  
                                     l7792 23C6                                       l7784 23A6  
                                     l7768 232A                                       l7696 21DA  
                                     l7688 21B0                                       l8496 4F68  
                                     l8488 4F42                                       l7960 3B48  
                                     l7944 39B4                                       l7928 5B0C  
                                     l7936 5A84                                       l8920 2098  
                                     l8904 2004                                       l8912 2054  
                                     l8840 1E18                                       l8832 1DE0  
                                     l8824 1D48                                       l8816 1CF4  
                                     l8808 1C6E                                       l8760 19E0  
                                     l8744 1966                                       l8728 1866  
                                     l8736 192E                                       l8680 165C  
                                     l8672 1640                                       l8664 1606  
                                     l8656 15C2                                       l9560 14B6  
                                     l9544 13B8                                       l9528 12BC  
                                     l9480 0F32                                       l9472 0EB6  
                                     l9456 0DBC                                       l9464 0E08  
                                     l9448 0D72                                       l9384 0958  
                                     l9392 09D0                                       l9368 083C  
                                     l9376 08A6                                       l9296 0364  
                                     l9288 02EE                                       l9616 59EA  
                                     l9704 4C9C                                       l9642 45F6  
                                     l9634 595E                                       l9626 5910  
                                     l6898 6072                                       l9810 2FD8  
                                     l9802 2FB0                                       l9730 2E48  
                                     l9722 2E20                                       l9714 2DF8  
                                     l7890 5684                                       l7882 5642  
                                     l8586 5BF8                                       l8578 5BD6  
                                     l8594 31AE                                       l7866 25F8  
                                     l7858 25DC                                       l7794 23D0  
                                     l7786 23B2                                       l7778 237A  
                                     l7698 21E0                                       l8498 4F72  
                                     l7962 3B5C                                       l7954 3A9C  
                                     l7946 3A0A                                       l7938 5A96  
                                     l8930 20C8                                       l8922 20A4  
                                     l8914 2066                                       l8906 202A  
                                     l8850 1E4E                                       l8842 1E28  
                                     l8834 1DEE                                       l8826 1DAC  
                                     l8818 1D04                                       l8770 1A3C  
                                     l8762 1A16                                       l8746 196E  
                                     l8738 193E                                       l8690 16D0  
                                     l8674 164C                                       l8682 1662  
                                     l8666 160E                                       l8658 15D0  
                                     l7970 5E52                                       l7874 5EC8  
                                     l9570 152C                                       l9562 14C6  
                                     l9546 13D0                                       l9554 1420  
                                     l9490 101E                                       l9482 0F68  
                                     l9474 0EDC                                       l9466 0E2E  
                                     l9458 0DF4                                       l9394 0A06  
                                     l9386 098C                                       l9378 08D4  
                                     l9298 0384                                       l9618 59F2  
                                     l6996 61CC                                       l9900 47CC  
                                     l9660 46F4                                       l9652 4646  
                                     l9644 45FE                                       l9636 5966  
                                     l9820 300A                                       l9812 2FE2  
                                     l9804 2FBA                                       l9740 2E7A  
                                     l9732 2E52                                       l9724 2E2A  
                                     l9716 2E02                                       l9708 2DDE  
                                     l7892 5698                                       l7884 5656  
                                     l8596 31CE                                       l7868 2606  
                                     l7788 23B6                                       l7796 23D6  
                                     l7964 3B84                                       l7956 3AD8  
                                     l7948 3A1E                                       l8940 2122  
                                     l8924 20AC                                       l8916 2080  
                                     l8908 2046                                       l8860 1E82  
                                     l8852 1E52                                       l8844 1E2C  
                                     l8828 1DBA                                       l8836 1DF6  
                                     l8780 1A80                                       l8772 1A4E  
                                     l8764 1A1E                                       l8756 19B2  
                                     l8748 1988                                       l8692 16EC  
                                     l8684 1688                                       l8676 1654  
                                     l8668 1620                                       l7980 5AF6  
                                     l9572 153A                                       l9556 1456  
                                     l9548 13DE                                       l9484 0FB0  
                                     l9476 0F12                                       l9468 0E7A  
                                     l9396 0A4E                                       l6998 61D0  
                                     l7878 6276                                       l9638 5FDE  
                                     l9910 4810                                       l9902 47D4  
                                     l9670 4724                                       l9662 4704  
                                     l9646 4642                                       l9830 303C  
                                     l9822 3014                                       l9814 2FEC  
                                     l9806 2FC4                                       l9750 2EAC  
                                     l9742 2E84                                       l9734 2E5C  
                                     l9726 2E34                                       l9718 2E0C  
                                     l7990 61C2                                       l7894 569C  
                                     l7886 5664                                       l8598 31DC  
                                     l7798 23FC                                       l7966 3B94  
                                     l7958 3B0C                                       l8942 2132  
                                     l8934 20FC                                       l8926 20BC  
                                     l8918 2086                                       l8870 1F20  
                                     l8862 1E86                                       l8854 1E58  
                                     l8846 1E32                                       l8838 1E0A  
                                     l8790 1ACA                                       l8782 1A98  
                                     l8774 1A5C                                       l8758 19C4  
                                     l8766 1A22                                       l8694 1704  
                                     l8678 1658                                       l8950 3DAE  
                                     l7974 5AAE                                       l9574 154E  
                                     l9558 148C                                       l9920 486C  
                                     l9912 481C                                       l9904 47EA  
                                     l9672 4734                                       l9664 4710  
                                     l9840 306E                                       l9832 3046  
                                     l9824 301E                                       l9816 2FF6  
                                     l9808 2FCE                                       l9760 2EDE  
                                     l9752 2EB6                                       l9744 2E8E  
                                     l9736 2E66                                       l9728 2E3E  
                                     l7984 5F70                                       l7896 56C8  
                                     l7888 5670                                       l8944 2138  
                                     l8936 210E                                       l8928 20C2  
                                     l8880 1F7E                                       l8848 1E3E  
                                     l8856 1E5E                                       l8864 1E8C  
                                     l8872 1F24                                       l8792 1ADE  
                                     l8784 1AAA                                       l8776 1A60  
                                     l8768 1A2A                                       l8696 170E  
                                     l8688 16BE                                       l8960 3E20  
                                     l8952 3DBC                                       l9568 1506  
                                     l9496 1070                                       l9488 0FE8  
                                     l9584 156E                                       l9680 4B90  
                                     l9922 4894                                       l9914 4838  
                                     l9906 47F2                                       l9666 4712  
                                     l9658 464A                                       l9674 4736  
                                     l9930 4A56                                       l9850 30A0  
                                     l9842 3078                                       l9834 3050  
                                     l9826 3028                                       l9818 3000  
                                     l9770 2F10                                       l9762 2EE8  
                                     l9754 2EC0                                       l9746 2E98  
                                     l9738 2E70                                       l7898 56DC  
                                     l7994 42EC                                       l8938 211A  
                                     l8890 1FBC                                       l8882 1F8E  
                                     l8874 1F42                                       l8866 1EE4  
                                     l8858 1E70                                       l8794 1B42  
                                     l8778 1A72                                       l8786 1AB2  
                                     l8970 3E54                                       l8962 3E26  
                                     l8954 3DBE                                       l7978 5AE4  
                                     l9586 1594                                       l9578 155C  
                                     l9498 1096                                       l9690 4BD4  
                                     l9924 48C2                                       l9916 4850  
                                     l9908 4808                                       l9668 4722  
                                     l9940 4B3C                                       l9932 4A90  
                                     l9860 30D2                                       l9852 30AA  
                                     l9844 3082                                       l9836 305A  
                                     l9828 3032                                       l9780 2F42  
                                     l9772 2F1A                                       l9764 2EF2  
                                     l9756 2ECA                                       l9748 2EA2  
                                     l7988 61A6                                       l7996 42F0  
                                     l8892 1FCC                                       l8884 1F92  
                                     l8876 1F5E                                       l8868 1F18  
                                     l8796 1B9A                                       l8788 1ABA  
                                     l8980 3EF6                                       l8972 3E5A  
                                     l8964 3E34                                       l8956 3DD8  
                                     l9692 4BE6                                       l9684 4B98  
                                     l9676 4B74                                       l9934 4A94  
                                     l9942 4B40                                       l9926 4A3C  
                                     l9870 3104                                       l9862 30DC  
                                     l9854 30B4                                       l9846 308C  
                                     l9838 3064                                       l9790 2F74  
                                     l9782 2F4C                                       l9774 2F24  
                                     l9766 2EFC                                       l9758 2ED4  
                                     l7998 42FE                                       l8894 1FD4  
                                     l8886 1FA2                                       l8878 1F70  
                                     l8798 1BCE                                       l8990 3F5E  
                                     l8982 3F10                                       l8974 3E60  
                                     l8966 3E3A                                       l8958 3E16  
                                     l9694 4C0C                                       l9686 4BB6  
                                     l9678 4B88                                       STR_1 FF63  
                                     l9936 4AE2                                       l9928 4A40  
                                     l9880 3136                                       l9872 310E  
                                     l9864 30E6                                       l9856 30BE  
                                     l9848 3096                                       l9792 2F7E  
                                     l9784 2F56                                       l9776 2F2E  
                                     l9768 2F06                                       l8896 1FE2  
                                     l8888 1FB4                                       l8992 3F6E  
                                     l8984 3F2A                                       l8968 3E42  
                                     l8976 3EBE                                       l9696 4C20  
                                     l9688 4BC8                                       l9944 6010  
                                     STR_2 FFA6                                       STR_3 FF98  
                                     l9890 4792                                       l9938 4B0E  
                                     l9882 3146                                       l9874 3118  
                                     l9866 30F0                                       l9858 30C8  
                                     l9794 2F88                                       l9786 2F60  
                                     l9778 2F38                                       l8898 1FEA  
                                     l8986 3F46                                       l8994 3F74  
                                     l8978 3ED8                                       l9698 4C30  
                                     l9946 601A                                       l9970 3754  
                                     STR_4 FF84                                       STR_5 FFB1  
                                     l9892 479A                                       l9884 3150  
                                     l9876 3122                                       l9868 30FA  
                                     l9796 2F92                                       l9788 2F6A  
                                     l8988 3F58                                       l9980 37DE  
                                     l9972 3758                                       STR_6 FFBA  
                                     STR_7 FFCA                                       l9894 47A2  
                                     l9886 3156                                       l9878 312C  
                                     l9798 2F9C                                       l8998 4474  
                                     l9990 38B4                                       l9982 37EC  
                                     l9974 3784                                       l9966 3726  
                                     l9896 47AE                                       l9888 4770  
                                     l9992 38E0                                       l9984 3832  
                                     l9976 37B0                                       l9968 374E  
                                     l9898 47C4                                       l9994 393A  
                                     l9986 385A                                       l9978 37DC  
                                     l9996 3960                                       l9988 388E  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u9000 5F30  
                                     u9001 5F2A                                       u9010 5F32  
                                     i2l51 60F8                                       u8220 609C  
                                     u9100 225A                                       u9020 2174  
                                     u8221 6098                                       u9101 2256  
                                     u9021 2170                                       u9110 22C8  
                                     u9030 2186                                       i2l47 62BC  
                                     u9111 22C4                                       u9031 2182  
                                     u9200 23A6                                       u9120 22E0  
                                     u9040 2196                                       i2l57 636A  
                                     u9201 23A2                                       u9121 22DA  
                                     u9041 2192                                       u8410 57B6  
                                     u9210 23C4                                       u9130 22E2  
                                     u9050 21D8                                       u8411 57B2  
                                     u9211 23C0                                       u9051 21D4  
                                     u8420 5EB4                                       u9300 2502  
                                     u9220 23FC                                       u9140 230A  
                                     u9060 21EE                                       u8421 5EB0  
                                     u9301 24FE                                       u9221 23F8  
                                     u9141 2306                                       u9061 21EA  
                                     u9310 2518                                       u9230 2442  
                                     u9150 2328                                       u9070 2200  
                                     u9311 2514                                       u9231 243E  
                                     u9151 2324                                       u9071 21FC  
                                     u8600 4E84                                       u9400 2606  
                                     u9320 252E                                       u9240 2478  
                                     u9160 2348                                       u9080 2210  
                                     u8601 4E80                                       u9401 2602  
                                     u9321 252A                                       u9241 2474  
                                     u9161 2344                                       u9081 220C  
                                     u8610 4EB6                                       u9330 2542  
                                     u9250 2488                                       u9170 2356  
                                     u9090 224C                                       u9410 5EF8  
                                     u8611 4EB2                                       u9331 253E  
                                     u9251 2484                                       u9171 2352  
                                     u9091 2248                                       u9411 5EF2  
                                     u8700 4130                                       u8620 3FB0  
                                     u9340 255C                                       u9260 24B4  
                                     u9180 2366                                       u9500 5246  
                                     u9420 5EFA                                       u8701 412C  
                                     u8621 3FAC                                       u9341 2558  
                                     u9261 24B0                                       u9181 2362  
                                     u9501 5242                                       u8710 413E  
                                     u8630 3FBE                                       u9430 6288  
                                     u9350 2596                                       u9270 24C4  
                                     u9190 2398                                       u9510 526E  
                                     u8711 413A                                       u8631 3FBA  
                                     u9431 6284                                       u9351 2592  
                                     u9271 24C0                                       u9191 2394  
                                     u9511 526A                                       u8560 4DDE  
                                     u8640 401A                                       u9440 5642  
                                     u9360 25A8                                       u9280 24E0  
                                     u9520 5298                                       u9600 5A96  
                                     u8561 4DDA                                       u8641 4016  
                                     u9441 563E                                       u9361 25A4  
                                     u9281 24DC                                       u9521 5294  
                                     u9601 5A92                                       u8570 4E00  
                                     u8650 4070                                       u9450 5664  
                                     u9370 25B8                                       u9290 24F0  
                                     u9610 39DC                                       u8571 4DFC  
                                     u8651 406C                                       u9451 5660  
                                     u9371 25B4                                       u9291 24EC  
                                     u8580 4E3A                                       u8660 40BA  
                                     u9460 56BA                                       u9380 25D8  
                                     u9540 52D2                                       u9700 3B84  
                                     u9620 3A0A                                       u8581 4E36  
                                     u8661 40B6                                       u9461 56B6  
                                     u9381 25D4                                       u9541 52CC  
                                     u9701 3B80                                       u9621 3A06  
                                     u8590 4E5C                                       u8670 40D8  
                                     u9470 56C8                                       u9390 25EA  
                                     u9550 52D4                                       u9630 3A2C  
                                     u9710 5E86                                       u8591 4E58  
                                     u8671 40D4                                       u9471 56C4  
                                     u9391 25E6                                       u9535 52AA  
                                     u9631 3A28                                       u9615 39D2  
                                     u9711 5E80                                       u8680 40E8  
                                     u9480 5E2C                                       u9560 5B56  
                                     u9720 5E88                                       u8681 40E4  
                                     u9801 435A                                       u9481 5E28  
                                     u8690 40F6                                       u9810 437E  
                                     u9490 5228                                       u9650 3A98  
                                     u9570 5B68                                       u9730 5ADE  
                                     u8691 40F2                                       u9811 437A  
                                     u9651 3A94                                       u9571 5B64  
                                     u9731 5AD8                                       u8940 54B8  
                                     u9820 43A8                                       u9900 49FA  
                                     u9660 3ABC                                       u9580 5A7E  
                                     u9740 5AE0                                       u8941 54B4  
                                     u9821 43A4                                       u9901 49F6  
                                     u9645 3A40                                       u9581 5A78  
                                     u8950 54CA                                       u9830 43E8  
                                     u9910 2A5E                                       u9670 3AD8  
                                     u9646 3A4A                                       u9590 5A80  
                                     u9750 5AF6                                       u8951 54C6  
                                     u9831 43E4                                       u9911 2A5A  
                                     u9495 521E                                       u9671 3AD4  
                                     u9647 3A5A                                       u9567 5B4C  
                                     u9751 5AF2                                       u9760 5FA0  
                                     u8960 54F2                                       u9840 4432  
                                     u9920 2A70                                       u9680 3B2C  
                                     u9761 5F9A                                       u8961 54EE  
                                     u9841 442E                                       u9921 2A6C  
                                     u9665 3AB2                                       u9770 5FA2  
                                     u8970 5528                                       u9850 48EA  
                                     u9930 2A80                                       u9690 3B48  
                                     u8971 5524                                       u9851 48E6  
                                     u9931 2A7C                                       u9691 3B44  
                                     u8980 5DCE                                       u9780 42FE  
                                     u9860 491C                                       u9940 2AC4  
                                     u8981 5DCA                                       u9781 42FA  
                                     u9861 4918                                       u9941 2AC0  
                                     u9685 3B22                                       u8990 5FD0  
                                     u9790 4330                                       u9870 495A  
                                     u9950 2AD6                                       u8991 5FCC  
                                     u9791 432C                                       u9871 4956  
                                     u9951 2AD2                                       u9880 4984  
                                     u9960 2AE6                                       u9881 4980  
                                     u9961 2AE2                                       u9890 49B2  
                                     u9970 2B26                                       _TMR2 000FCC  
                                     u9891 49AE                                       u9971 2B22  
                                     u9980 2B66                                       u9981 2B62  
                                     u9990 2BDC                                       u9991 2BD8  
                                     _WPUB 000F5B                               i2___flge@ff1 0001  
                             i2___flge@ff2 0005                                       abs@a 0022  
                                     _dbuf 016C                                       _atoi 4152  
                                     _ctoa 5BC4                                       _main 3726  
                                     _dtoa 3164                                       _font F193  
                                     _prec 0045                            _TMR0_StartTimer 6362  
                                     _otoa 3DAE                                       _nout 00F0  
                                     pad@i 0027                                       pad@p 0024  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 0029  
                                     fsr2l 000FD9                                       _stoa 4474  
                                     btemp 004F                                       _utoa 3BA6  
                                     _xtoa 3448                              ___fpclassifyf 51E8  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00BC                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0021                     __end_of_SPI_Initialize 62FA  
                             _tolower$2488 001C                              lcd_fill@width 001D  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_abs 0024                                      ??_pad 0026  
                  __end_of_TMR0_Initialize 61A6                           __end_of_INT0_ISR 6352  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 630C  
                                    l10162 0176                                      l10164 4214  
                            ___fltol@sign1 0018                            __end_of___aldiv 4ED8  
                          __end_of___aodiv 4474                                      ?_atoi 0017  
                                    ?_ctoa 002B                            __end_of___fladd 261A  
                                    ?_main 0001                                      ?_dtoa 002B  
                          __end_of___aomod 4A3C                            __end_of___fldiv 2DDE  
                          __end_of___awdiv 5634                            __end_of___flneg 5F70  
                                    STR_10 FFBE                                      STR_11 FFD2  
                                    STR_20 FFCE                                      STR_14 FFC6  
                                    STR_16 FFC6                                      STR_32 FFE9  
                                    STR_25 FFC7                                      STR_41 FFEC  
                                    STR_34 FFE9                                      STR_18 FFCE  
                                    STR_43 FFEC                                      STR_36 FFEF  
                          __end_of___awmod 57A6                                      STR_29 FFCF  
                                    STR_53 FFDB                                      STR_61 FFD6  
                                    STR_38 FFEF                                      STR_46 FFDA  
                                    STR_63 FFD6                                      STR_71 FFF2  
                                    STR_48 FFDA                                      STR_56 FFF5  
                                    STR_73 FFF2                                      STR_58 FFF5  
                                    STR_83 FFDF                                      STR_91 FFE2  
                                    STR_68 FFD7                                      STR_76 FFDE  
                                    STR_93 FFE2                                      STR_78 FFDE  
                                    STR_86 FFF8                                      STR_95 FFC2  
                                    STR_88 FFF8                            __end_of___flmul 2A44  
                                    STR_97 FFC2                                      ?_otoa 002B  
                TMR0_ReadTimer@readValHigh 0008                            __end_of___flsub 5D46  
                          __end_of___fltol 4FDE          __end_of_IOCB4_SetInterruptHandler 632C  
                                    ?_stoa 0019                                      u10000 2BFE  
                                    u10001 2BFA                                      u10010 2C28  
                                    u10011 2C24                                      u10100 2D24  
                                    u10020 2C4C                                      u10101 2D20  
                                    u10021 2C48                                      u10110 2D6C  
                                    u10030 2C62                                      u10111 2D68  
                                    u10031 2C5E                                      ?_utoa 002B  
                                    u10120 2D9C                                      u10040 2C80  
                                    u10200 26EE                                      u11000 18BC  
                                    u10121 2D98                                      u10041 2C7C  
                                    u10201 26EA                                      u11001 18B8  
                                    u10130 2DCA                                      u10050 2CA0  
                                    u10210 26FE                                      u11010 192E  
                                    u10131 2DC6                                      u10051 2C9C  
                                    u10211 26FA                                      u11011 192A  
                                    u10060 2CB2                                      u10300 29BE  
                                    u10220 2878                                      u10140 2634  
                                    u11100 1A4E                                      u11020 1954  
                                    u10061 2CAE                                      u10301 29BA  
                                    u10141 2630                                      u11101 1A4A  
                                    u11021 1950                                      u10070 2CE0  
                                    u10310 29EC                                      u10230 28D2  
                                    u10150 2646                                      u11110 1A5C  
                                    u11030 1966                                      u10071 2CDC  
                                    u10311 29E8                                      u10231 28CE  
                                    u10151 2642                                      u11111 1A58  
                                    u11031 1962                                      u10400 5722  
                                    u10080 2CF6                                      u10320 2A26  
                                    u10240 28F2                                      u10160 2656  
                                    u11200 1DBA                                      u11120 1A72  
                                    u11040 1988                                      u12000 01C4  
                                    u10401 571E                                      u10081 2CF2  
                                    u10321 2A22                                      u10241 28EE  
                                    u10225 286E                                      u10161 2652  
                                    u11201 1DB6                                      u11121 1A6E  
                                    u11041 1984                                      u12001 01C0  
                                    u10330 5582                                      u10410 573C  
                                    u10090 2D0A                                      u10250 2904  
                                    u10170 2696                                      u11210 1DCE  
                                    u11130 1A80                                      u11050 19AE  
                                    u12010 01EC                                      u10331 557E  
                                    u10411 5738                                      u10091 2D06  
                                    u10251 2900                                      u10171 2692  
                                    u11211 1DCA                                      u11131 1A7C  
                                    u11051 19AA                                      u12011 01E8  
                                    u10340 559C                                      u10420 575A  
                                    u10500 506A                                      u10260 2932  
                                    u10180 26A8                                      u11300 1F7E  
                                    u11220 1DE0                                      u11140 1AAA  
                                    u11060 19C4                                      u12100 03EE  
                                    u12020 0230                                      u10341 5598  
                                    u10421 5756                                      u10501 5066  
                                    u10261 292E                                      u10181 26A4  
                                    u11301 1F7A                                      u11221 1DDC  
                                    u11141 1AA6                                      u11061 19C0  
                                    u12101 03EA                                      u12021 022C  
                                    u10350 55C2                                      u10430 5770  
                                    u10510 508A                                      u10270 2948  
                                    u10190 26B8                                      u11310 1FB4  
                                    u11230 1DEE                                      u11150 1BF2  
                                    u11070 19E0                                      u12110 0422  
                                    u12030 02B0                                      u10351 55BE  
                                    u10431 576C                                      u10511 5086  
                                    u10271 2944                                      u10191 26B4  
                                    u11311 1FB0                                      u11231 1DEA  
                                    u11151 1BEE                                      u11071 19DC  
                                    u12111 041E                                      u12031 02AA  
                                    u10360 55E0                                      u10440 5794  
                                    u10520 50DA                                      u10280 295C  
                                    u10600 4FBC                                      u11320 1FE2  
                                    u11240 1E0A                                      u11160 1C58  
                                    u11080 1A16                                      u11400 3DD8  
                                    u12200 0788                                      u12120 0466  
                                    u12040 02B2                                      _T0CON 000FD5  
                                    u10361 55DC                                      u10441 5790  
                                    u10521 50D6                                      u10281 2958  
                                    u10601 4FB8                                      u11321 1FDE  
                                    u11241 1E06                                      u11161 1C54  
                                    u11081 1A12                                      u11401 3DD4  
                                    u12201 0784                                      u12121 0462  
                                    u10370 55FC                                      u10450 5884  
                                    u10290 2976                                      u10530 5F4E  
                                    u11330 2066                                      u11250 1E18  
                                    u11170 1CA0                                      u11090 1A3C  
                                    u11410 3E98                                      u12210 07BE  
                                    u12130 04C0                                      u12050 02C8  
                                    u10371 55F8                                      u10451 5880  
                                    u10291 2972                                      u10531 5F4A  
                                    u11331 2062                                      u11251 1E14  
                                    u11171 1C9C                                      u11091 1A38  
                                    u10611 52EC                            __end_of___lodiv 53D6  
                                    u12211 07BA                                      u12131 04BC  
                                    u12051 02C4                                      u10380 5622  
                                    u10460 58C2                                      u10540 4EEE  
                                    u11340 2080                                      u11260 1E70  
                                    u11180 1CB0                                      u11420 3ED8  
                                    u11500 44A0                                      u10620 5310  
                                    u12300 0BBA                                      u12220 0824  
                                    u12140 0544                                      u12060 02EE  
                          ___awdiv@divisor 0012                                      u10381 561E  
                                    u10461 58BE                                      u10541 4EEA  
                                    u11341 207C                                      u11261 1E6C  
                                    u11181 1CAC                                      u11421 3ED4  
                                    u11501 449C                                      u10621 530C  
                                    u12301 0BB6                                      u12221 0820  
                                    u12141 0540                                      u12061 02EA  
                                    u10710 5BD6                                      u10390 5708  
                                    u10470 58F6                                      u10550 4F22  
                                    u11350 2098                                      u11270 1F42  
                                    u11190 1D18                                      u11430 3EF6  
                                    u11510 44D2                                      u10630 533A  
                                    u12310 0C42                                      u12230 08D4  
                                    u12150 057A                                      u12070 032A  
                                    u10711 5BD2                                      u10391 5704  
                                    u10471 58F2                                      u11351 2094  
                                    u11271 1F3E                                      u11191 1D14  
                                    u11431 3EF2                                      u11415 3E86  
                                    u11511 44CE                                      u10631 5336  
                                    u12311 0C3E                                      u12231 08D0  
                                    u12151 0576                                      u12071 0326  
                                    ?_xtoa 002B                                      u10800 3380  
                                    u10720 3196                                      u10480 500E  
                                    u10560 4F50                                      u11360 20F6  
                                    u11280 1F5E                                      u11440 3F10  
                                    u11520 44F0                                      u10640 537A  
                                    u11600 3D24                                      u12400 111C  
                                    u12320 0CCA                                      u12240 0940  
                                    u12160 0632                                      u12080 03D6  
                                    _T1CON 000FCD                                      u10705 6298  
                                    u10801 337C                                      u10721 3190  
                                    u10481 500A                                      u10561 4F4C  
                                    u11361 20F0                                      u11281 1F5A  
                                    u11441 3F0C                                      u11521 44EC  
                                    u10641 5376                                      u11601 3D20  
                                    u12401 1118                                      u12321 0CC6  
                                    u12241 093A                                      u12161 062E  
                                    u12081 03D0                                      u10706 629A  
                                    u10810 339A                                      u10730 3198  
                                    u10490 504C                                      u10570 4F64  
                                    u11370 20F8                                      u11290 1F70  
                                    u11450 3F2A                                      u11530 451A  
                                    u10650 53F4                                      u11610 3D42  
                                    u12410 11A4                                      u12330 0D3C  
                                    u12250 0942                                      u12170 0668  
                                    u12090 03D8                                      u10811 3396  
                                    u10491 5048                                      u10571 4F60  
                                    u10555 4F18                                      u11291 1F6C  
                                    u11451 3F26                                      u11531 4516  
                                    u10651 53F0                                      u11611 3D3E  
                                    u12411 11A0                                      u12331 0D38  
                                    u12171 0664                                      u12500 5DEC  
                                    u10820 33B4                                      u10740 31AE  
                                    u10580 4F8C                                      u11380 210E  
                                    u10900 1640                                      u11460 3F38  
                                    u11540 4554                                      u10660 541E  
                                    u11620 3D5C                                      u11700 3552  
                                    u12420 11DA                                      u12340 0DBC  
                                    u12260 0958                                      u12180 06DE  
                                    u12501 5DE8                                      u10821 33B0  
                                    u10741 31AA                                      u10581 4F88  
                                    u11381 210A                                      u10901 163C  
                                    u11461 3F34                                      u11541 4550  
                                    u10661 541A                                      u11621 3D58  
                                    u12421 11D6                                      u12341 0DB8  
                                    u12261 0954                                      u12181 06DA  
                                    u12510 5E08                                      u10830 33C2  
                                    u10750 31DC                                      u10590 4FAC  
                                    u10910 1688                                      u11470 3F46  
                                    u11390 3DBC                                      u11550 45A4  
                                    u10670 544C                                      u11630 3D76  
                                    u11710 3568                                      u12430 12BC  
                                    u12350 0E2E                                      u12270 0A06  
                                    u12190 0704                                      u12511 5E04  
                                    u10831 33BE                                      u10751 31D8  
                                    u10591 4FA8                                      u10911 1684  
                                    u11471 3F42                                      u11391 3DB8  
                                    u11551 45A0                                      u10671 5448  
                                    u11631 3D72                                      u11711 3564  
                                    u12431 12B8                                      u12351 0E2A  
                                    u12271 0A02                                      u12191 0700  
                                    u12600 4734                                      u10680 5C36  
                                    u10840 33D4                                      u10760 31F8  
                                    u10920 16B8                                      u11480 3F58  
                                    u11560 45B2                                      u11640 3D84  
                                    u11800 36C2                                      u11720 359C  
                                    u12440 12F2                                      u12360 0EDC  
                                    u12280 0ABC                                      u12520 5A44  
                                    _T2CON 000FCA                                      u12601 4730  
                                    u10681 5C32                                      u10841 33D0  
                                    u10761 31F4                                      u10921 16B2  
                                    u11481 3F54                                      u11561 45AE  
                                    u11641 3D80                                      u11801 36BE  
                                    u11721 3596                                      u12441 12EE  
                                    u12361 0ED8                                      u12281 0AB8  
                                    u12521 5A40                                      u12610 476E  
                                    u12530 5934                                      u10690 5C64  
                                    u10850 33E2                                      u10770 3226  
                                    u10930 16BA                                      u11570 45EC  
                                    u11810 36D0                                      u11730 359E  
                                    u11650 3456                                      u12450 1392  
                                    u12370 0F68                                      u12290 0B34  
                                    u12611 476A                                      u12531 5930  
                                    u10691 5C60                                      u10851 33DE  
                                    u10771 3222                                      u11571 45E8  
                                    u11491 447E                                      u11811 36CC  
                                    u11651 3452                                      u12451 138E  
                                    u12371 0F64                                      u12291 0B30  
                                    u12700 4808                                      u12540 595E  
                                    u11820 418C                                      u10860 33FA  
                                    u10780 3234                                      u10940 16D0  
                                    u11900 4D0C                                      u11580 3BB4  
                                    u11740 35B4                                      u11660 3472  
                                    u12460 13B8                                      u12380 101E  
                                    u12620 4B88                                      u12701 4804  
                                    u12541 595A                                      u11821 4188  
                                    u10861 33F6                                      u10781 3230  
                                    u10941 16CC                                      u11581 3BB0  
                                    u11741 35B0                                      u11661 346E  
                                    u12461 13B4                                      u12381 101A  
                                    u12621 4B84                                      u12710 4850  
                                    u12550 5980                                      u11830 41C4  
                                    u10790 3362                                      u10950 175C  
                                    u10870 15D0                                      u11910 4D1C  
                                    u11590 3BD0                                      u11750 361E  
                                    u11670 349E                                      u12470 1456  
                                    u12390 1096                                      u12630 4BB6  
                                    u12711 484C                                      u12551 597C  
                                    u11831 41C0                                      u10791 335E  
                                    u10951 1758                                      u10871 15CC  
                                    u11911 4D18                                      u11591 3BCC  
                                    u11671 349A                                      u12471 1452  
                                    u12391 1092                                      u12631 4BB2  
                                    u12560 6002                                      u12720 4868  
                                    u11840 41E0                                      u10960 178C  
                                    u10880 1620                                      u11920 4D3A  
                                    u11760 3662                                      u11680 3506  
                                    u12480 148C                                      u12640 4C20  
                                    u12561 5FFE                                      u12721 4864  
                                    u11841 41DC                                      u10961 1786  
                                    u10881 161C                                      u11921 4D36  
                                    u11761 365E                                      u11681 3502  
                                    u12481 1488                                      u12641 4C1C  
                                    u12730 4894                                      u11850 429C  
                                    u10970 178E                                      u10890 162E  
                                    u11930 4D4C                                      u11770 3680  
                                    u11690 3550                                      u12490 152C  
                                    u12650 4C30                                      u12810 388C  
                                    u12731 4890                                      u11851 4296  
                                    u10891 162A                                      u11931 4D48  
                                    u11907 4D02                                      u11771 367C  
                                    u11755 360C                                      u11691 354A  
                                    u12491 1528                                      u12651 4C2C  
                                    u12811 3888                                      u12740 48C2  
                                    u12580 46F4                                      u11860 429E  
                                    u10980 17A4                                      u11940 4D8E  
                                    u11780 369A                                      u12660 4C66  
                                    u12741 48BE                                      u12581 46F0  
                                    u10981 17A0                                      u11941 4D8A  
                                    u11781 3696                                      u12661 4C62  
                                    u12670 4792                                      u12590 4722  
                                    u12574 46D4                                      u12750 4ABE  
                                    u11870 42B4                                      u10990 1828  
                                    u11950 4DB0                                      u11790 36B4  
                                    u12671 478E                                      u12591 471E  
                                    u12575 46CE                                      u11871 42B0  
                                    u10991 1824                                      u11791 36B0  
                                    u11960 5CCE                                      u12680 47C4  
                                    u12760 4AE2                                      u11880 42C6  
                                    u11961 5CCA                                      u12681 47C0  
                                    u12761 4ADE                                      u11881 42C2  
                                    u11945 4D7E                            __end_of___lomod 54A6  
                                    u11970 5C86                                      u12690 47EA  
                                    u12770 4B62                                      u11890 4CD0  
                                    u11971 5C82                                      u12691 47E6  
                                    u11947 4D74                                      u11891 4CCC  
                                    u12780 4B72                                      u11980 00E6  
                                    u12781 4B6E                                      u12757 4AB4  
                                    u11957 4DA6                                      u11981 00E2  
                                    u11990 01B6                                      u12927 6080  
                                    u11991 01B2                                      u12777 4B58  
                                    i2l113 0036                                      i2l122 00B0  
                                    i2l115 005A                                      i2l123 00B0  
                                    i2l118 008C                                      i2l233 606E  
                                    i2l411 59E8                                      i2l260 6360  
                                    i2l340 617C                            _TMR0_WriteTimer 6340  
                                    i2l414 6236                                      i2l350 6368  
                                    i2l239 636E                                      i2l263 6272  
                                    i2l344 60CA                                      i2l257 6364  
                                    i2l409 59E6                                      i2l417 6316  
                                    i2l266 6348                                      i2l283 6350  
                                    i2l293 636C                                      i2l287 6126  
                          ___awdiv@counter 0014                               vfpfcnvrt@fmt 00AA  
                                    _TMR0H 000FD7                               vfpfcnvrt@llu 00CE  
                                    _TMR1H 000FCF                                      _TMR0L 000FD6  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0001  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_WRT0$OFF 000000  
                          ??_lcd_draw_char 0023                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                          ??_lcd_draw_line 0029                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                            _pulso_encoder 6216                           __end_of_TMR2_ISR 617E  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 609E  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 62BE  
                                    _flags 0047                                      _errno 00EE  
                                    _fputc 54A6                            __end_of_isalpha 5E8E  
                                    _fputs 5D8C                            __end_of_isdigit 5FA8  
                                    _ticks 00F8                                      _teste 00F2  
                                    atoi@n 0024                                      pad@fp 0020  
                                    atoi@s 0017                                      _width 0043  
                                    ctoa@c 002D                                      _putch 6366  
                                    ctoa@w 002E                                      dtoa@d 002D  
                                    dtoa@i 0070                                      dtoa@n 0068  
                                    dtoa@p 0062                                      dtoa@s 0066  
                                    dtoa@w 0064                           __end_of_SPI_Open 5856  
                          __end_of_islower 5F00                            __end_of_isspace 5C70  
                  __end_of_TMR1_Initialize 6154                            __end_of_isupper 5F38  
                                    pclath 000FFA                           __end_ofi2___flge 51E8  
                                    tablat 000FF5                                      otoa@d 002D  
                                    otoa@i 006E                                      otoa@n 0066  
                                    otoa@p 0060                                      otoa@t 0062  
                                    otoa@w 0064                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0025  
                                    stoa@l 002D                                      stoa@p 002B  
                                    stoa@s 001B                                      stoa@w 0027  
                                    ttemp5 0050                                      ttemp6 0053  
                                    ttemp7 0057                                      utoa@d 002D  
                                    utoa@i 006C                                      utoa@n 0064  
                                    utoa@p 0060                                      utoa@w 0062  
                                    status 000FD8                                      wtemp8 0050  
                           ?___fpclassifyf 0010                            __end_of_tolower 5AAE  
                                    xtoa@c 0072                                      xtoa@d 002D  
                                    xtoa@i 0070                                      xtoa@n 0068  
                                    xtoa@p 0064                                      xtoa@w 0066  
                                    xtoa@x 0035                            __end_of_strncmp 4DCC  
                          __end_of_toupper 5B0C                             lcd_fill@height 001B  
                         ___lodiv@dividend 0010                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$2503 001C  
                          __initialization 5B6A                               __end_of_atoi 42EC  
                             __end_of_ctoa 5C1E                               __end_of_main 3994  
                             __end_of_dtoa 3448                               __end_of_font FF5F  
                             __end_of_otoa 3F9E                               __end_of_stoa 45F6  
                             __end_of_utoa 3DAE                               __end_of_xtoa 3726  
                        __end_of_IOCB4_ISR 60FA                    __end_of_TMR2_Initialize 6256  
                                ??_ADC_ISR 0001                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 0019                                     ??_ctoa 002E  
                 _TMR2_SetInterruptHandler 6318                                     ??_main 003F  
                                   ??_dtoa 0035                          ?_lcd_set_cursor_x 0013  
                        ?_lcd_set_cursor_y 0013                              lcd_send@value 0011  
                                   ??_otoa 0035                                     ??_stoa 001D  
                                   ??_utoa 0035                                     ??_xtoa 0036  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0015  
                       ??_lcd_set_cursor_y 0015                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0020                             ?_pulso_encoder 0001  
                           lcd_draw_char@i 002E                             lcd_draw_char@j 002C  
                           lcd_draw_char@k 002D                   __end_of_SPI_ExchangeByte 628E  
                  __end_of_TMR0_StartTimer 6366                             lcd_draw_char@x 0019  
                           lcd_draw_char@y 001B                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0010                                     STR_102 FFE3  
                                   ?_fputs 0019                                     STR_111 FFFB  
                                   STR_113 FFE6                                     STR_106 FFC3  
                                   _ADRESH 000FC4                                     STR_115 FFE6  
                                   STR_109 FFFB                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0010                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                                   i2l1234 51A0                                     i2l1239 51E6  
                           __CFG_WDTEN$OFF 000000                                     i2l7020 6042  
                                   i2l7022 6056                                     i2l7014 634A  
                                   i2l7030 6174                                     i2l7016 634C  
                                   i2l7024 6154                                     i2l7018 6040  
                                   i2l7026 6156                                     i2l7028 6170  
                                   i2l6350 626A                                     i2l6342 6362  
                                   i2l6344 635E                                     i2l6346 6256  
                                   i2l6354 6340                                     i2l7410 0052  
                                   i2l7402 0012                                     i2l6348 625E  
                                   i2l6356 6344                                     i2l7420 00A8  
                                   i2l7412 0068                                     i2l7404 0020  
                                   i2l7414 0076                                     i2l7406 002E  
                                   i2l7416 0084                                     i2l7408 0044  
                                   i2l7418 009A                                     i2l6760 5150  
                                   i2l6770 51DE                                     i2l6762 5160  
                                   i2l6754 50E4                                     i2l6772 51E4  
                                   i2l6764 516E                                     i2l6756 5112  
                                   i2l6836 60CC                                     i2l6790 6216  
                                   i2l6766 5180                                     i2l6758 5122  
                                   i2l6838 60E0                                     i2l6792 621A  
                                   i2l6768 518E                                     i2l6784 5982  
                                   i2l6794 6226                                     i2l6890 60FA  
                                   i2l6786 5990                                     i2l6892 610E  
                                   i2l6788 59B4                                     i2l6796 630C  
                                   i2l6990 62A6                                     i2l6894 609E  
                                   i2l6992 62B6                                     i2l6896 60B2  
                                   i2l6994 62BA                                     _OSCCON 000FD3  
                            vfpfcnvrt@done 00B4                                     _SSPADD 000FC8  
                                   _SSPBUF 000FC9                           __end_of___xxtofl 4152  
                          _global_bg_color 0049                             __CFG_XINST$OFF 000000  
                         ??_lcd_draw_pixel 0015                           __end_of_lcd_fill 5982  
                             vfprintf@cfmt 00DC                           __end_of_lcd_init 3164  
     __size_of_ADC_DefaultInterruptHandler 0002           __size_of_ADC_SetInterruptHandler 000A  
                         __end_of_lcd_send 62A6                                     ___flge 4FDE  
                                   ___fleq 5856                                  ??___aldiv 0018  
                                ??___aodiv 0020                                  ??___fladd 0018  
                                ??___aomod 0020                                     ___wmul 61A6  
                                ??___fldiv 0018                                  ??___awdiv 0014  
                                ??___flneg 0014                             __CFG_STVREN$ON 000000  
                                ??___awmod 0014                                  ??___flmul 0026  
                                ??___flsub 003F                                  ??___fltol 0014  
                  __end_of_TMR0_WriteTimer 634A                                  ??___lodiv 0020  
                                ??___lomod 0020                                     _efgtoa 15A8  
                                   _floorf 3994                           ?_TMR0_Initialize 0001  
                                   clear_0 5B90                                     clear_1 5B9C  
                                   clear_2 5BA8                                     clear_3 5BB4  
                         ___awdiv@quotient 0016                            ___awmod@divisor 0012  
                          ___awmod@counter 0014                                     pad@buf 0022  
                                   ctoa@fp 002B                            ??_INT0_CallBack 0009  
                                   _steste 0200                                     dtoa@fp 002B  
                                   _strcpy 5B0C                                     _string 0108  
                                   _strlen 5FA8                                  ??_msDelay 0010  
                                   fputc@c 0010                                     fputs@c 001D  
                                   fputs@i 001E                                     fputs@s 0019  
                                ??_isalpha 0012                                  ??_isdigit 0012  
                          ___fpclassifyf@e 0018                            ___fpclassifyf@u 001A  
                          ___fpclassifyf@x 0010                                  ??_islower 0012  
                             __mediumconst F192                                  ??_isspace 0012  
                                   otoa@fp 002B                                     tblptrh 000FF7  
                                ??_isupper 0012                                     tblptrl 000FF6  
                                   tblptru 000FF8                   ADC_GetConversion@channel 0014  
                                   stoa@cp 0029                                     stoa@fp 0019  
                                   putch@c 0001                           __end_of_vfprintf 5A4E  
                                   utoa@fp 002B   TMR2_SetInterruptHandler@InterruptHandler 0010  
 INT0_SetInterruptHandler@InterruptHandler 0010    ADC_SetInterruptHandler@InterruptHandler 0010  
IOCB4_SetInterruptHandler@InterruptHandler 0010                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 6040                                  ??_tolower 0018  
                                   xtoa@fp 002B                                  ??_strncmp 0016  
                                ??_toupper 0018              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 0037                                 ___flge@ff2 003B  
                          ??___fpclassifyf 0014                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 001A                               ___xxtofl@exp 0019  
                        _SYSTEM_Initialize 61CC                               ___xxtofl@val 0010  
                               ___fleq@ff1 0010                                 ___fleq@ff2 0014  
                               __accesstop 0060                   __size_of_lcd_draw_string 0138  
                  __end_of__initialization 5BBA                                  ?_INT0_ISR 0001  
                               ___flneg@f1 0010                      __end_of_TMR2_CallBack 60CC  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0010                             __pcstackCOMRAM 0001  
                             __pidataBANK1 6352                        ??_SYSTEM_Initialize 0012  
                                ?_TMR2_ISR 0001                              __end_of_fputc 5570  
                            __end_of_fputs 5DD0      __end_of_IOCB4_DefaultInterruptHandler 636C  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 636A  
                            __end_of_putch 6368                    __size_of_TMR0_ReadTimer 001E  
                         ?_TMR2_Initialize 0001                                  ?_SPI_Open 0001  
                               _acende_led 5982                ??_IOCB4_SetInterruptHandler 0012  
                                ?i2___flge 0001                           ??_lcd_set_cursor 0019  
                          ??_pulso_encoder 0009                __size_of_EXT_INT_Initialize 0014  
                         ?_TMR0_StartTimer 0001                         __size_of_led_inter 000C  
                                  ??_fputc 0014                  __end_of_SYSTEM_Initialize 61F2  
                                  ??_fputs 001D                                    ??_putch 0010  
                               __pbssBANK0 00EE                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                            __CFG_PLLCFG$OFF 000000  
                    _INT0_InterruptHandler 01D4                                 ??_INT0_ISR 0009  
                               __pnvCOMRAM 004D                                    ?___flge 0037  
                                  ?___fleq 0010                    __size_of_TMR0_StopTimer 0004  
                                  ?___wmul 0010                                 ??_TMR2_ISR 0001  
                                  ?_efgtoa 0064                           ?_TMR0_WriteTimer 0001  
                                  ?_floorf 0029                                    _ADC_ISR 6040  
                               ??_SPI_Open 0010                            lcd_draw_line@e2 0030  
                               ??i2___flge 0009                            lcd_draw_line@x0 001F  
                          lcd_draw_line@x1 0023                            lcd_draw_line@y0 0021  
                          lcd_draw_line@y1 0025                    __size_of_ADC_Initialize 0024  
                          lcd_draw_line@dx 0032                            lcd_draw_line@dy 0034  
                                  ?_strcpy 0010                            lcd_draw_line@sx 002A  
                          lcd_draw_line@sy 002C                                    ?_strlen 0010  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0010  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 14E8                                    _OSCTUNE 000F9B  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 0019                                  ?_lcd_init 0001  
                                ?_lcd_send 0011                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0010                           ??_SPI_Initialize 0010  
                _IOCB4_SetInterruptHandler 6322          __size_of_INT0_SetInterruptHandler 000A  
                ?_INT0_SetInterruptHandler 0010                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 01D6                                    __Hparam 0000  
                  _ADC_SetInterruptHandler 6336                                    __Lparam 0000  
               ??_TMR2_SetInterruptHandler 0012                         __size_of_vsnprintf 0132  
                        ??_lcd_draw_string 0039                                    ___aldiv 4DCC  
                          __size_of___flge 0106                            __size_of___fleq 00AA  
                                  ___aodiv 42EC                                    ___fladd 215A  
                                  ___aomod 48D8                                    ___fldiv 2A44  
                                  ___awdiv 5570                                    ___flneg 5F38  
                                  ___awmod 56F6                                    ___flmul 261A  
                                  ___flsub 5D00                                    ___fltol 4ED8  
                        __end_of_led_inter 6318                            __size_of___wmul 0026  
                                  ___lodiv 52E6                                    ___lomod 53D6  
                                ?_vfprintf 00D6                            __size_of_efgtoa 0BB2  
                                ?_snprintf 01C6                            __size_of_floorf 0212  
                                  __pcinit 5B6A                                    __ramtop 0F00  
                              ?_acende_led 0001                                    __ptext0 3726  
                                  __ptext1 6010                                    __ptext2 4B74  
                                  __ptext3 59EA                                    __ptext4 00C0  
                                  __ptext5 3448                                    __ptext6 5AAE  
                                  __ptext7 5EC8                                    __ptext8 5E52  
                                  __ptext9 3BA6                                  _T0CONbits 000FD5  
                                  _msDelay 6070                                  _IOCB4_ISR 60CC  
                          __size_of_strcpy 005E                            __size_of_strlen 0036  
                                _T1CONbits 000FCD                      _OSCILLATOR_Initialize 62FA  
                                _T2CONbits 000FCA                               __size_of_abs 0040  
                             __size_of_pad 00C2                                    _isalpha 5E52  
                                  _isdigit 5F70                                 ??___xxtofl 0014  
                         ___awmod@dividend 0010                           ___aldiv@dividend 0010  
                                  _islower 5EC8                   ??_PIN_MANAGER_Initialize 0012  
                                  _isspace 5C1E                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 5F00                                    efgtoa@c 006A  
                                  efgtoa@d 0088                                    efgtoa@e 00A0  
                                  efgtoa@f 0066                                    efgtoa@g 009C  
                                  efgtoa@h 0092                                    efgtoa@i 009A  
                                  efgtoa@l 0096                                    efgtoa@m 0084  
                                  efgtoa@n 00A2                                    efgtoa@p 008C  
                                  efgtoa@t 0080                                    efgtoa@u 00A4  
                                  efgtoa@w 008F                                    atoi@neg 001D  
                    __end_of_lcd_draw_char 4770                      __end_of_lcd_draw_line 48D8  
               __size_of_SYSTEM_Initialize 0026                                 ??_lcd_fill 001B  
                                  _tolower 5A4E                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 001F                                 ??_lcd_send 0012  
                                  _strncmp 4CA6                                    _toupper 5AAE  
                     end_of_initialization 5BBA                                    floorf@e 0037  
                                  floorf@m 0033                                    floorf@u 0039  
                                  floorf@x 0029                         ??_SPI_ExchangeByte 0010  
                __size_of_lcd_set_cursor_x 0048                  __size_of_lcd_set_cursor_y 0048  
                                  fputc@fp 0012                                    fputs@fp 001B  
                      lcd_draw_char@fIndex 001D                          __end_of_vfpfcnvrt 15A8  
                               efgtoa@mode 0091                      TMR0_ReadTimer@readVal 0005  
                               efgtoa@sign 008A                           ___aldiv@quotient 001A  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 001D                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 0019                                 ??_vfprintf 003F  
                           _TMR0_ReadTimer 6256                                 ??_snprintf 003F  
                                  strcpy@d 0018                                    strlen@a 0012  
                                  strcpy@s 0016                                    strlen@s 0010  
                        lcd_draw_string@pS 0033                                  _PORTBbits 000F81  
                        _spi_configuration FF5F                                 ?_IOCB4_ISR 0001  
                              ___fladd@grs 001F                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 6370                _ADC_DefaultInterruptHandler 636E  
                            ___xxtofl@sign 0018                                  _TRISCbits 000F94  
                        __end_of_vsnprintf 4CA6                                ___fldiv@grs 0023  
                              ___fldiv@rem 001C                                ___flmul@grs 002C  
            ??_ADC_DefaultInterruptHandler 0001                                 lcd_send@dc 0012  
                ??_ADC_SetInterruptHandler 0012                        __size_of_acende_led 0068  
                        __size_of_INT0_ISR 0008                             _TMR0_StopTimer 635E  
                   __end_of_TMR0_ReadTimer 6274                                 _string_rpm 0264  
             __end_of_INTERRUPT_Initialize 635E                       SPI_ExchangeByte@data 0010  
     __end_of_TMR2_DefaultInterruptHandler 636A      __size_of_TMR2_DefaultInterruptHandler 0002  
             _TMR2_DefaultInterruptHandler 6368                             __end_of___flge 50E4  
                           __end_of___fleq 5900       __end_of_INT0_DefaultInterruptHandler 636E  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 636C  
                __end_of_spi_configuration FF63                                vfpfcnvrt@ap 00AC  
                              vfpfcnvrt@cp 00B2                                vfpfcnvrt@ct 00C0  
                              vfpfcnvrt@fp 00A8                                vfpfcnvrt@ll 00C3  
                           __end_of___wmul 61CC                                vfpfcnvrt@vp 00CB  
                           __end_of_efgtoa 215A                          __size_of_TMR2_ISR 002A  
                           _ADC_Initialize 61F2                             __end_of_floorf 3BA6  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 0100  
                    __end_of_INT0_CallBack 6128                          __size_of_SPI_Open 00B0  
                           __end_of_strcpy 5B6A                             __end_of_strlen 5FDE  
                        __size_ofi2___flge 0104                        start_initialization 5B6A  
                          ___lodiv@divisor 0018                            ___lodiv@counter 0028  
                        _lcd_draw_pixel_at 5FDE                   __size_of_TMR0_Initialize 0028  
          __size_of_PIN_MANAGER_Initialize 0046                                __end_of_abs 5E52  
                              __end_of_pad 56F6                         ?_lcd_draw_pixel_at 0019  
                           _codigo_digital 00F6                      __end_of___fpclassifyf 52E6  
                      ??_lcd_draw_pixel_at 001F                   __size_of_PIN_MANAGER_IOC 0018  
                   __end_of_TMR0_StopTimer 6362             SPI_Open@spiUniqueConfiguration 0011  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 00D8  
                                 ??___flge 0060                                   ??___fleq 0018  
                          ?_TMR0_ReadTimer 0001                                   ??___wmul 0014  
                                 ??_efgtoa 006B                     __end_of_ADC_Initialize 6216  
                              __pdataBANK1 01D8                                   ??_floorf 002D  
                                 ?_ADC_ISR 0001                 __end_of_EXT_INT_Initialize 62E8  
          fp__TMR2_DefaultInterruptHandler 0000              ?_TMR2_DefaultInterruptHandler 0001  
          fp__INT0_DefaultInterruptHandler 0000              ?_INT0_DefaultInterruptHandler 0001  
                                 ??_strcpy 0014                                   ??_strlen 0012  
                              ??_IOCB4_ISR 000E                                  ___fladd@a 0014  
                                ___fladd@b 0010                    __size_of_lcd_draw_pixel 0016  
                __end_of_lcd_draw_pixel_at 6010                               vsnprintf@cnt 01BE  
                             vsnprintf@fmt 00E2                                  ___fldiv@a 0014  
                                ___fldiv@b 0010                     __size_of_TMR2_CallBack 002E  
                                ___flmul@a 0022                                  ___flmul@b 001E  
                              __pbssCOMRAM 003F                                  ___flsub@a 003B  
                                ___flsub@b 0037           __end_of_INT0_SetInterruptHandler 6336  
                    __end_of_pulso_encoder 6238                              __pcstackBANK0 0060  
                            __pcstackBANK1 01BC                           ___aodiv@dividend 0010  
                 __size_of_TMR2_Initialize 001E                                snprintf@fmt 01CA  
                        __size_of___xxtofl 01B4                            _lcd_draw_string 4A3C  
                         _lcd_set_cursor_x 5CB8                           _lcd_set_cursor_y 5C70  
                        __size_of_lcd_fill 0082                          __size_of_lcd_init 0386  
                        __size_of_lcd_send 0018                                  _atoi$2365 001F  
                                _atoi$2366 0023                                  _atoi$2367 0021  
                                __pnvBANK0 00FA                                  __pnvBANK1 01D0  
                 __size_of_TMR0_StartTimer 0004                            ?_TMR0_StopTimer 0001  
                              _efgtoa$1720 0074                                _efgtoa$1721 0076  
                              _efgtoa$1730 007C                                _efgtoa$1731 007E  
                              _efgtoa$1725 0078                                _efgtoa$1729 007A  
                   _PIN_MANAGER_Initialize 5D46                                  _dtoa$1697 0060  
                                __pintcode 0008                              __pmediumconst F192  
                                 ?___aldiv 0010                                   ?___aodiv 0010  
                                 ?___fladd 0010                                   ?___aomod 0010  
                                 ?___fldiv 0010                                   ?___awdiv 0010  
                         ___aodiv@quotient 0022                                   ?___flneg 0010  
                                 ?___awmod 0010                                   ?___flmul 001E  
                                 ?___flsub 0037                                   ?___fltol 0010  
                                 ?___lodiv 0010                                   ?___lomod 0010  
                          ?_ADC_Initialize 0001                               ??_acende_led 000D  
             ??_INTERRUPT_InterruptManager 000E                          __size_of_vfprintf 0064  
                                _led_inter 630C                          __size_of_snprintf 0030  
                                 ?_msDelay 0001                            ___lomod@divisor 0018  
                          ___lomod@counter 0020                                   ?_isalpha 0010  
                                 ?_isdigit 0010                   __size_of_TMR0_WriteTimer 000A  
                                 ?_islower 0010                                   ?_isspace 0010  
                                 ?_isupper 0010                                   ?_tolower 0016  
                         lcd_draw_line@err 002E                             __size_of_fputc 00CA  
                           __size_of_fputs 0044                                   ?_strncmp 0010  
                                 ?_toupper 0016                             __size_of_putch 0002  
                     _INTERRUPT_Initialize 635A                    __size_of_lcd_set_cursor 0042  
                          ___aldiv@divisor 0014                          ??_TMR0_Initialize 0010  
                          ___aldiv@counter 0018                                   _INT0_ISR 634A  
                           ___wmul@product 0014                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                            _TMR2_CallBack 609E                         __end_of_acende_led 59EA  
                                 _PIE1bits 000F9D                            lcd_set_cursor@x 0015  
                          lcd_set_cursor@y 0017        __size_of_INTERRUPT_InterruptManager 00B4  
                                 _PIR1bits 000F9E                                   i2u810_40 5990  
                                 i2u810_41 598C                      lcd_draw_string@lIndex 0062  
                                 i2u811_40 59A0                                   i2u811_41 599A  
                                 i2u811_46 59A2                                   i2u812_40 59E6  
                                 i2u820_40 60B2                                   i2u812_41 59E2  
                                 i2u820_41 60AE                                   i2u805_40 5112  
                                 i2u805_41 510E                                   i2u806_40 5150  
                                 i2u821_48 60B8                                   i2u806_41 514C  
                                 i2u821_49 60CA                                   i2u807_40 516E  
                                 i2u807_41 516A                                   i2u808_40 518E  
                                 i2u816_40 60E0                                   i2u840_40 6170  
                                 i2u808_41 518A                                   i2u816_41 60DC  
                                 i2u840_41 616C                                   i2u809_40 51DE  
                                 i2u809_41 51DA                                   i2u818_40 610E  
                                 i2u817_48 60E6                                   i2u818_41 610A  
                                 i2u817_49 60F8                                   i2u819_48 6114  
                                 i2u819_49 6126                                   i2u837_40 62B6  
                                 i2u837_41 62B2                                   i2u838_40 6056  
                                 i2u838_41 6052                                   i2u839_48 605C  
                                 i2u880_40 00A8                                   i2u872_40 0020  
                                 i2u839_49 606E                                   i2u880_41 00A4  
                                 i2u872_41 001C                                   i2u873_40 002E  
                                 i2u873_41 002A                                   i2u874_40 0044  
                                 i2u874_41 0040                                   i2u875_40 0052  
                                 i2u875_41 004E                                   i2u876_40 0068  
                                 i2u876_41 0064                                   i2u877_40 0076  
                                 i2u877_41 0072                                   i2u878_40 0084  
                                 i2u878_41 0080                                   i2u879_40 009A  
                                 i2u879_41 0096                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A             fp__ADC_DefaultInterruptHandler 0000  
                                 _TMR2_ISR 6154                           lcd_draw_string@k 0060  
                         lcd_draw_string@x 002F                           lcd_draw_string@y 0031  
                        ??_PIN_MANAGER_IOC 000E                                  _vfpfcnvrt 00C0  
                 TMR0_ReadTimer@readValLow 0007                                  _xtoa$1767 0060  
                                _xtoa$1768 0062                                   _SPI_Open 57A6  
                        ??_TMR1_Initialize 0010                           __size_of_ADC_ISR 0030  
                               _ADCON0bits 000FC2                                   i2___flge 50E4  
                        ___wmul@multiplier 0010                                 ?_led_inter 0001  
                         __CFG_SOSCSEL$DIG 000000                 __size_of_lcd_draw_pixel_at 0032  
                  __end_of_lcd_draw_string 4B74             ??_TMR2_DefaultInterruptHandler 0001  
        __size_of_TMR2_SetInterruptHandler 000A             ??_INT0_DefaultInterruptHandler 0001  
                ?_TMR2_SetInterruptHandler 0010                               _isspace$2405 0016  
                                msDelay@ms 0011                                 vfpfcnvrt@c 00CD  
                               vfpfcnvrt@f 00BC                                _INTCON2bits 000FF1  
                                copy_data0 5B7E                      ?_INTERRUPT_Initialize 0001  
                 _INT0_SetInterruptHandler 632C                                  _vsnprintf 4B74  
                        ??_TMR2_Initialize 0012                             ?_TMR2_CallBack 0001  
                      lcd_draw_pixel@color 0013                                   __Hrparam 0000  
                               vfprintf@ap 00DA                                   __Lrparam 0000  
                               vfprintf@fp 00D6                          _ADC_GetConversion 5E8E  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0010                     __size_of_lcd_draw_char 017A  
                       ?_ADC_GetConversion 0010                          ??_TMR0_StartTimer 0001  
                         __size_of___aldiv 010C                           __size_of___aodiv 0188  
                   __size_of_lcd_draw_line 0168                           __size_of___fladd 04C0  
                         __size_of___aomod 0164                           __size_of___fldiv 039A  
                         __size_of___awdiv 00C4                           __size_of___flneg 0038  
                         __size_of___awmod 00B0                                vsnprintf@ap 00E4  
                         __size_of___flmul 042A                           __size_of___flsub 0046  
                         __size_of___fltol 0106                           __size_of___lodiv 00F0  
                         __size_of___lomod 00D0                                 ?_vfpfcnvrt 00A8  
                               snprintf@ap 00EC                            ___aodiv@divisor 0018  
                          ___aodiv@counter 0020                     _IOCB4_InterruptHandler 00FA  
                           _lcd_draw_pixel 62BE                         ___fpclassifyf@F463 0104  
                      ??_ADC_GetConversion 0012                           __size_of_msDelay 002E  
                                 ___xxtofl 3F9E                         lcd_draw_line@color 0027  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 53D6                                   __ptext11 52E6  
                                 __ptext20 51E8                                   __ptext12 4CA6  
                                 __ptext21 4ED8                                   __ptext13 4474  
                               _T1GCONbits 000FAA                                   __ptext30 5570  
                                 __ptext22 5D00                                   __ptext14 3DAE  
                                 __ptext31 3164                                   __ptext23 215A  
                                 __ptext15 15A8                                   __ptext40 6366  
                                 __ptext32 5E12                                   __ptext24 5F38  
                                 __ptext16 5A4E                                   __ptext41 4152  
                                 __ptext33 48D8                                   __ptext25 261A  
                                 __ptext17 5F00                                   __ptext50 4770  
                                 __ptext42 5C1E                                   __ptext34 42EC  
                                 __ptext26 4FDE                                   __ptext18 5B0C  
                                 __ptext51 5FDE                                   __ptext43 5F70  
                                 __ptext35 5BC4                                   __ptext27 5856  
                                 __ptext19 3994                                   __ptext60 61CC  
                                 __ptext52 5DD0                                   __ptext44 61A6  
                                 __ptext36 5634                                   __ptext28 2A44  
                                 __ptext61 6238                                   __ptext53 5C70  
                                 __ptext45 2DDE                                   __ptext37 5FA8  
                                 __ptext29 56F6                                   __ptext70 62D4  
                                 __ptext62 6318                                   __ptext54 5CB8  
                                 __ptext46 6070                                   __ptext38 5D8C  
                                 __ptext71 632C                                   __ptext63 6128  
                                 __ptext55 62BE                                   __ptext47 5900  
                                 __ptext39 54A6                                   __ptext80 630C  
                                 __ptext72 61F2                                   __ptext64 617E  
                                 __ptext56 628E                                   __ptext48 4A3C  
                                 __ptext81 62A6                                   __ptext73 6336  
                                 __ptext65 62E8                                   __ptext57 6274  
                                 __ptext49 45F6                                   __ptext90 6340  
                                 __ptext82 60CC                                   __ptext74 57A6  
                                 __ptext66 5D46                                   __ptext58 3F9E  
                                 __ptext91 635E                                   __ptext83 636A  
                                 __ptext75 5E8E                                   __ptext67 6322  
                                 __ptext59 4DCC                                   __ptext92 6362  
                                 __ptext84 5982                                   __ptext68 62FA  
                                 __ptext93 6256                                   __ptext85 50E4  
                                 __ptext77 6154                                   __ptext69 635A  
                                 __ptext94 6040                                   __ptext86 634A  
                                 __ptext78 609E                                   __ptext95 636E  
                                 __ptext87 60FA                                   __ptext79 6368  
                                 __ptext96 0000                                   __ptext88 636C  
                                 __ptext89 6216                           __size_of_isupper 0038  
                                 _lcd_fill 5900                                   _lcd_init 2DDE  
                                 _lcd_send 628E                           __size_of_tolower 0060  
                  TMR0_WriteTimer@timerVal 0001                          ??_TMR0_WriteTimer 0003  
                               strcpy@dest 0010                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00DE  
                            __size_of_atoi 019A                              __size_of_ctoa 005A  
                            __size_of_main 026E                              __size_of_dtoa 02E4  
                            __size_of_otoa 01F0                              __size_of_stoa 0182  
                            __size_of_utoa 0208                           ??_TMR0_ReadTimer 0003  
                            __size_of_xtoa 02DE                  __end_of_ADC_GetConversion 5EC8  
                                 efgtoa@fp 0064                                   efgtoa@ne 0086  
                                 efgtoa@pp 0082                                   efgtoa@ou 0070  
                                stoa@F1174 01D8                      lcd_draw_char@bg_color 0021  
                                 int$flags 004F                                   _vfprintf 59EA  
                    lcd_draw_char@fg_color 001F         __end_of_INTERRUPT_InterruptManager 00BC  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 62D4  
                                 _snprintf 6010                                _percentagem 003F  
                 __end_of_lcd_set_cursor_x 5D00                   __end_of_lcd_set_cursor_y 5CB8  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0012  
                              ??_led_inter 0001                           ___aomod@dividend 0010  
                           _vfpfcnvrt$1804 00BA                             _vfpfcnvrt$1782 00B6  
                           _vfpfcnvrt$1783 00B8                                 _INTCONbits 000FF2  
                            fp__acende_led 0000                           ?_lcd_draw_string 002F  
                                 isalpha@c 0010                                   isdigit@c 0010  
                   ??_INTERRUPT_Initialize 0010                         lcd_draw_pixel_at@x 0019  
                       lcd_draw_pixel_at@y 001B                                 vsnprintf@f 01C0  
                               vsnprintf@n 00E0                                 vsnprintf@s 00DE  
                       _EXT_INT_Initialize 62D4                   ?_ADC_SetInterruptHandler 0010  
                            _lcd_draw_char 45F6                                  snprintf@n 01C8  
                                snprintf@s 01C6                              _lcd_draw_line 4770  
                                 intlevel2 0000                             _lcd_set_cursor 5DD0  
                         ??_TMR0_StopTimer 0001                            ??_TMR2_CallBack 0001  
                        lcd_set_cursor_x@x 0013                          lcd_set_cursor_y@y 0013  
                                 islower@c 0010                                   isspace@c 0010  
                  ?_PIN_MANAGER_Initialize 0001                        ?_EXT_INT_Initialize 0001  
                                strcpy@src 0012                                   isupper@c 0010  
                                strncmp@_l 0010                                  strncmp@_r 0012  
                         ??_ADC_Initialize 0012                     __size_of_INT0_CallBack 002E  
                         _SPI_ExchangeByte 6274                    lcd_draw_string@bg_color 0037  
                              efgtoa@nmode 008E                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 0018                    lcd_draw_string@fg_color 0035  
                          ?_lcd_draw_pixel 0013                                ??_vfpfcnvrt 00AE  
                                 stoa@nuls 001E                            ___aomod@counter 0020  
                     ??_EXT_INT_Initialize 0012                                   tolower@c 0016  
                           _vsnprintf$2535 01BC                     __size_of___fpclassifyf 00FE  
                    TMR2_ISR@CountCallBack 004B                            _TMR0_Initialize 617E  
                                 strncmp@l 0017                                   strncmp@n 0014  
                                 strncmp@r 0019                                   toupper@c 0016  
                             ___aldiv@sign 0019                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 5E12                             ?_lcd_draw_char 0019  
                           ?_lcd_draw_line 001F                              ___fladd@signs 001C  
                             ___aodiv@sign 0021             __end_of_PIN_MANAGER_Initialize 5D8C  
                              ??_vsnprintf 00E6                               ___fladd@aexp 001D  
                             ___fladd@bexp 001E                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 62A6                      _TMR2_InterruptHandler 01D2  
               __size_of_ADC_GetConversion 003A                               fp__led_inter 0000  
                             ___aomod@sign 0021                            _TMR1_Initialize 6128  
