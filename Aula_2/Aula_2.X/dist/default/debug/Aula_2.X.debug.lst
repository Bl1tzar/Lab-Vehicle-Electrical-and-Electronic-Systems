

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 27 14:57:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   111                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   112  0000                     
   113                           ; Version 2.10
   114                           ; Generated 31/07/2019 GMT
   115                           ; 
   116                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   117                           ; All rights reserved.
   118                           ; 
   119                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   120                           ; 
   121                           ; Redistribution and use in source and binary forms, with or without modification, are
   122                           ; permitted provided that the following conditions are met:
   123                           ; 
   124                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   125                           ;        conditions and the following disclaimer.
   126                           ; 
   127                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   128                           ;        of conditions and the following disclaimer in the documentation and/or other
   129                           ;        materials provided with the distribution.
   130                           ; 
   131                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   132                           ;        software without specific prior written permission.
   133                           ; 
   134                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   135                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   136                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   137                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   138                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   139                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   140                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   141                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   142                           ; 
   143                           ; 
   144                           ; Code-generator required, PIC18F46K80 Definitions
   145                           ; 
   146                           ; SFR Addresses
   147  0000                     
   148                           	psect	idataBANK0
   149  0060E6                     __pidataBANK0:
   150                           	opt callstack 0
   151                           
   152                           ;initializer for _pot_comparacao
   153  0060E6  0050               	dw	80
   154                           
   155                           	psect	idataBANK1
   156  0060DA                     __pidataBANK1:
   157                           	opt callstack 0
   158                           
   159                           ;initializer for stoa@F1174
   160  0060DA  28                 	db	40
   161  0060DB  6E                 	db	110
   162  0060DC  75                 	db	117
   163  0060DD  6C                 	db	108
   164  0060DE  6C                 	db	108
   165  0060DF  29                 	db	41
   166  0060E0  00                 	db	0
   167                           
   168                           	psect	mediumconst
   169  00F192                     __pmediumconst:
   170                           	opt callstack 0
   171  00F192  00                 	db	0
   172  00F193                     _font:
   173                           	opt callstack 0
   174  00F193  0004               	dw	4
   175  00F195  0000               	dw	0
   176  00F197  0000               	dw	0
   177  00F199  0000               	dw	0
   178  00F19B  0000               	dw	0
   179  00F19D  0000               	dw	0
   180  00F19F  0000               	dw	0
   181  00F1A1  0000               	dw	0
   182  00F1A3  0000               	dw	0
   183  00F1A5  0003               	dw	3
   184  00F1A7  0000               	dw	0
   185  00F1A9  0000               	dw	0
   186  00F1AB  00FE               	dw	254
   187  00F1AD  001B               	dw	27
   188  00F1AF  0000               	dw	0
   189  00F1B1  0000               	dw	0
   190  00F1B3  0005               	dw	5
   191  00F1B5  001E               	dw	30
   192  00F1B7  0000               	dw	0
   193  00F1B9  0000               	dw	0
   194  00F1BB  0000               	dw	0
   195  00F1BD  0000               	dw	0
   196  00F1BF  0000               	dw	0
   197  00F1C1  001E               	dw	30
   198  00F1C3  0000               	dw	0
   199  00F1C5  0000               	dw	0
   200  00F1C7  0000               	dw	0
   201  00F1C9  000B               	dw	11
   202  00F1CB  0000               	dw	0
   203  00F1CD  0000               	dw	0
   204  00F1CF  0010               	dw	16
   205  00F1D1  0001               	dw	1
   206  00F1D3  0010               	dw	16
   207  00F1D5  001D               	dw	29
   208  00F1D7  00F0               	dw	240
   209  00F1D9  0003               	dw	3
   210  00F1DB  001E               	dw	30
   211  00F1DD  0001               	dw	1
   212  00F1DF  0010               	dw	16
   213  00F1E1  0001               	dw	1
   214  00F1E3  0010               	dw	16
   215  00F1E5  001D               	dw	29
   216  00F1E7  00F0               	dw	240
   217  00F1E9  0003               	dw	3
   218  00F1EB  001E               	dw	30
   219  00F1ED  0001               	dw	1
   220  00F1EF  0010               	dw	16
   221  00F1F1  0001               	dw	1
   222  00F1F3  0000               	dw	0
   223  00F1F5  0000               	dw	0
   224  00F1F7  0009               	dw	9
   225  00F1F9  0000               	dw	0
   226  00F1FB  0004               	dw	4
   227  00F1FD  001C               	dw	28
   228  00F1FF  0008               	dw	8
   229  00F201  0022               	dw	34
   230  00F203  0010               	dw	16
   231  00F205  0042               	dw	66
   232  00F207  0010               	dw	16
   233  00F209  00FF               	dw	255
   234  00F20B  007F               	dw	127
   235  00F20D  0042               	dw	66
   236  00F20F  0010               	dw	16
   237  00F211  0084               	dw	132
   238  00F213  0010               	dw	16
   239  00F215  0000               	dw	0
   240  00F217  000F               	dw	15
   241  00F219  0000               	dw	0
   242  00F21B  0000               	dw	0
   243  00F21D  000C               	dw	12
   244  00F21F  001C               	dw	28
   245  00F221  0000               	dw	0
   246  00F223  0022               	dw	34
   247  00F225  0010               	dw	16
   248  00F227  0022               	dw	34
   249  00F229  0008               	dw	8
   250  00F22B  0022               	dw	34
   251  00F22D  0006               	dw	6
   252  00F22F  001C               	dw	28
   253  00F231  0001               	dw	1
   254  00F233  00C0               	dw	192
   255  00F235  0000               	dw	0
   256  00F237  0020               	dw	32
   257  00F239  000E               	dw	14
   258  00F23B  0018               	dw	24
   259  00F23D  0011               	dw	17
   260  00F23F  0004               	dw	4
   261  00F241  0011               	dw	17
   262  00F243  0002               	dw	2
   263  00F245  0011               	dw	17
   264  00F247  0000               	dw	0
   265  00F249  000E               	dw	14
   266  00F24B  0000               	dw	0
   267  00F24D  0000               	dw	0
   268  00F24F  000B               	dw	11
   269  00F251  0000               	dw	0
   270  00F253  0000               	dw	0
   271  00F255  0000               	dw	0
   272  00F257  000E               	dw	14
   273  00F259  001C               	dw	28
   274  00F25B  0011               	dw	17
   275  00F25D  00A2               	dw	162
   276  00F25F  0010               	dw	16
   277  00F261  00C2               	dw	194
   278  00F263  0010               	dw	16
   279  00F265  0022               	dw	34
   280  00F267  0011               	dw	17
   281  00F269  001C               	dw	28
   282  00F26B  000A               	dw	10
   283  00F26D  0000               	dw	0
   284  00F26F  000C               	dw	12
   285  00F271  0000               	dw	0
   286  00F273  000C               	dw	12
   287  00F275  0000               	dw	0
   288  00F277  0012               	dw	18
   289  00F279  0000               	dw	0
   290  00F27B  0000               	dw	0
   291  00F27D  0003               	dw	3
   292  00F27F  0000               	dw	0
   293  00F281  0000               	dw	0
   294  00F283  001E               	dw	30
   295  00F285  0000               	dw	0
   296  00F287  0000               	dw	0
   297  00F289  0000               	dw	0
   298  00F28B  0006               	dw	6
   299  00F28D  0000               	dw	0
   300  00F28F  0000               	dw	0
   301  00F291  0000               	dw	0
   302  00F293  0000               	dw	0
   303  00F295  00E0               	dw	224
   304  00F297  001F               	dw	31
   305  00F299  001C               	dw	28
   306  00F29B  0060               	dw	96
   307  00F29D  0002               	dw	2
   308  00F29F  0080               	dw	128
   309  00F2A1  0000               	dw	0
   310  00F2A3  0000               	dw	0
   311  00F2A5  0004               	dw	4
   312  00F2A7  0000               	dw	0
   313  00F2A9  0000               	dw	0
   314  00F2AB  0006               	dw	6
   315  00F2AD  00C0               	dw	192
   316  00F2AF  00F8               	dw	248
   317  00F2B1  003F               	dw	63
   318  00F2B3  0000               	dw	0
   319  00F2B5  0000               	dw	0
   320  00F2B7  0006               	dw	6
   321  00F2B9  0024               	dw	36
   322  00F2BB  0000               	dw	0
   323  00F2BD  0018               	dw	24
   324  00F2BF  0000               	dw	0
   325  00F2C1  007E               	dw	126
   326  00F2C3  0000               	dw	0
   327  00F2C5  0018               	dw	24
   328  00F2C7  0000               	dw	0
   329  00F2C9  0024               	dw	36
   330  00F2CB  0000               	dw	0
   331  00F2CD  0000               	dw	0
   332  00F2CF  0000               	dw	0
   333  00F2D1  0009               	dw	9
   334  00F2D3  0000               	dw	0
   335  00F2D5  0000               	dw	0
   336  00F2D7  0080               	dw	128
   337  00F2D9  0000               	dw	0
   338  00F2DB  0080               	dw	128
   339  00F2DD  0000               	dw	0
   340  00F2DF  0080               	dw	128
   341  00F2E1  0000               	dw	0
   342  00F2E3  00F0               	dw	240
   343  00F2E5  0007               	dw	7
   344  00F2E7  0080               	dw	128
   345  00F2E9  0000               	dw	0
   346  00F2EB  0080               	dw	128
   347  00F2ED  0000               	dw	0
   348  00F2EF  0080               	dw	128
   349  00F2F1  0000               	dw	0
   350  00F2F3  0000               	dw	0
   351  00F2F5  0000               	dw	0
   352  00F2F7  0004               	dw	4
   353  00F2F9  0000               	dw	0
   354  00F2FB  0000               	dw	0
   355  00F2FD  0000               	dw	0
   356  00F2FF  0060               	dw	96
   357  00F301  0000               	dw	0
   358  00F303  0018               	dw	24
   359  00F305  0000               	dw	0
   360  00F307  0000               	dw	0
   361  00F309  0005               	dw	5
   362  00F30B  0000               	dw	0
   363  00F30D  0001               	dw	1
   364  00F30F  0000               	dw	0
   365  00F311  0001               	dw	1
   366  00F313  0000               	dw	0
   367  00F315  0001               	dw	1
   368  00F317  0000               	dw	0
   369  00F319  0001               	dw	1
   370  00F31B  0000               	dw	0
   371  00F31D  0000               	dw	0
   372  00F31F  0004               	dw	4
   373  00F321  0000               	dw	0
   374  00F323  0000               	dw	0
   375  00F325  0000               	dw	0
   376  00F327  0018               	dw	24
   377  00F329  0000               	dw	0
   378  00F32B  0018               	dw	24
   379  00F32D  0000               	dw	0
   380  00F32F  0000               	dw	0
   381  00F331  0008               	dw	8
   382  00F333  0000               	dw	0
   383  00F335  0000               	dw	0
   384  00F337  0000               	dw	0
   385  00F339  0040               	dw	64
   386  00F33B  0000               	dw	0
   387  00F33D  0038               	dw	56
   388  00F33F  0000               	dw	0
   389  00F341  0007               	dw	7
   390  00F343  00E0               	dw	224
   391  00F345  0000               	dw	0
   392  00F347  001C               	dw	28
   393  00F349  0000               	dw	0
   394  00F34B  0002               	dw	2
   395  00F34D  0000               	dw	0
   396  00F34F  0000               	dw	0
   397  00F351  0000               	dw	0
   398  00F353  0009               	dw	9
   399  00F355  00F8               	dw	248
   400  00F357  0007               	dw	7
   401  00F359  0004               	dw	4
   402  00F35B  0008               	dw	8
   403  00F35D  0002               	dw	2
   404  00F35F  0010               	dw	16
   405  00F361  0002               	dw	2
   406  00F363  0010               	dw	16
   407  00F365  0002               	dw	2
   408  00F367  0010               	dw	16
   409  00F369  0002               	dw	2
   410  00F36B  0010               	dw	16
   411  00F36D  0004               	dw	4
   412  00F36F  0008               	dw	8
   413  00F371  00F8               	dw	248
   414  00F373  0007               	dw	7
   415  00F375  0000               	dw	0
   416  00F377  0000               	dw	0
   417  00F379  0006               	dw	6
   418  00F37B  0000               	dw	0
   419  00F37D  0000               	dw	0
   420  00F37F  0000               	dw	0
   421  00F381  0000               	dw	0
   422  00F383  0002               	dw	2
   423  00F385  0000               	dw	0
   424  00F387  0002               	dw	2
   425  00F389  0000               	dw	0
   426  00F38B  00FE               	dw	254
   427  00F38D  001F               	dw	31
   428  00F38F  0000               	dw	0
   429  00F391  0000               	dw	0
   430  00F393  0009               	dw	9
   431  00F395  0018               	dw	24
   432  00F397  0010               	dw	16
   433  00F399  0004               	dw	4
   434  00F39B  0018               	dw	24
   435  00F39D  0002               	dw	2
   436  00F39F  0014               	dw	20
   437  00F3A1  0002               	dw	2
   438  00F3A3  0012               	dw	18
   439  00F3A5  0002               	dw	2
   440  00F3A7  0011               	dw	17
   441  00F3A9  0082               	dw	130
   442  00F3AB  0010               	dw	16
   443  00F3AD  0044               	dw	68
   444  00F3AF  0010               	dw	16
   445  00F3B1  0038               	dw	56
   446  00F3B3  0010               	dw	16
   447  00F3B5  0000               	dw	0
   448  00F3B7  0000               	dw	0
   449  00F3B9  0009               	dw	9
   450  00F3BB  0008               	dw	8
   451  00F3BD  000C               	dw	12
   452  00F3BF  0004               	dw	4
   453  00F3C1  0010               	dw	16
   454  00F3C3  0002               	dw	2
   455  00F3C5  0010               	dw	16
   456  00F3C7  0042               	dw	66
   457  00F3C9  0010               	dw	16
   458  00F3CB  0042               	dw	66
   459  00F3CD  0010               	dw	16
   460  00F3CF  0044               	dw	68
   461  00F3D1  0010               	dw	16
   462  00F3D3  00B8               	dw	184
   463  00F3D5  0008               	dw	8
   464  00F3D7  0000               	dw	0
   465  00F3D9  0007               	dw	7
   466  00F3DB  0000               	dw	0
   467  00F3DD  0000               	dw	0
   468  00F3DF  0009               	dw	9
   469  00F3E1  0000               	dw	0
   470  00F3E3  0002               	dw	2
   471  00F3E5  0000               	dw	0
   472  00F3E7  0003               	dw	3
   473  00F3E9  0080               	dw	128
   474  00F3EB  0002               	dw	2
   475  00F3ED  0060               	dw	96
   476  00F3EF  0002               	dw	2
   477  00F3F1  0010               	dw	16
   478  00F3F3  0002               	dw	2
   479  00F3F5  0008               	dw	8
   480  00F3F7  0002               	dw	2
   481  00F3F9  00FE               	dw	254
   482  00F3FB  001F               	dw	31
   483  00F3FD  0000               	dw	0
   484  00F3FF  0002               	dw	2
   485  00F401  0000               	dw	0
   486  00F403  0000               	dw	0
   487  00F405  0009               	dw	9
   488  00F407  0000               	dw	0
   489  00F409  0004               	dw	4
   490  00F40B  0070               	dw	112
   491  00F40D  0008               	dw	8
   492  00F40F  002E               	dw	46
   493  00F411  0010               	dw	16
   494  00F413  0022               	dw	34
   495  00F415  0010               	dw	16
   496  00F417  0022               	dw	34
   497  00F419  0010               	dw	16
   498  00F41B  0022               	dw	34
   499  00F41D  0010               	dw	16
   500  00F41F  0042               	dw	66
   501  00F421  0008               	dw	8
   502  00F423  0082               	dw	130
   503  00F425  0007               	dw	7
   504  00F427  0000               	dw	0
   505  00F429  0000               	dw	0
   506  00F42B  0009               	dw	9
   507  00F42D  0000               	dw	0
   508  00F42F  0000               	dw	0
   509  00F431  0000               	dw	0
   510  00F433  0007               	dw	7
   511  00F435  00C0               	dw	192
   512  00F437  0008               	dw	8
   513  00F439  0060               	dw	96
   514  00F43B  0010               	dw	16
   515  00F43D  0058               	dw	88
   516  00F43F  0010               	dw	16
   517  00F441  0044               	dw	68
   518  00F443  0010               	dw	16
   519  00F445  0082               	dw	130
   520  00F447  0008               	dw	8
   521  00F449  0000               	dw	0
   522  00F44B  0007               	dw	7
   523  00F44D  0000               	dw	0
   524  00F44F  0000               	dw	0
   525  00F451  0009               	dw	9
   526  00F453  0000               	dw	0
   527  00F455  0000               	dw	0
   528  00F457  0002               	dw	2
   529  00F459  0010               	dw	16
   530  00F45B  0002               	dw	2
   531  00F45D  000C               	dw	12
   532  00F45F  0002               	dw	2
   533  00F461  0003               	dw	3
   534  00F463  00C2               	dw	194
   535  00F465  0000               	dw	0
   536  00F467  0032               	dw	50
   537  00F469  0000               	dw	0
   538  00F46B  000E               	dw	14
   539  00F46D  0000               	dw	0
   540  00F46F  0002               	dw	2
   541  00F471  0000               	dw	0
   542  00F473  0000               	dw	0
   543  00F475  0000               	dw	0
   544  00F477  0009               	dw	9
   545  00F479  0000               	dw	0
   546  00F47B  0007               	dw	7
   547  00F47D  0098               	dw	152
   548  00F47F  0008               	dw	8
   549  00F481  0064               	dw	100
   550  00F483  0010               	dw	16
   551  00F485  0042               	dw	66
   552  00F487  0010               	dw	16
   553  00F489  0042               	dw	66
   554  00F48B  0010               	dw	16
   555  00F48D  0064               	dw	100
   556  00F48F  0010               	dw	16
   557  00F491  0098               	dw	152
   558  00F493  0008               	dw	8
   559  00F495  0000               	dw	0
   560  00F497  0007               	dw	7
   561  00F499  0000               	dw	0
   562  00F49B  0000               	dw	0
   563  00F49D  0009               	dw	9
   564  00F49F  0000               	dw	0
   565  00F4A1  0000               	dw	0
   566  00F4A3  0038               	dw	56
   567  00F4A5  0000               	dw	0
   568  00F4A7  0044               	dw	68
   569  00F4A9  0010               	dw	16
   570  00F4AB  0082               	dw	130
   571  00F4AD  0008               	dw	8
   572  00F4AF  0082               	dw	130
   573  00F4B1  0004               	dw	4
   574  00F4B3  0082               	dw	130
   575  00F4B5  0003               	dw	3
   576  00F4B7  0084               	dw	132
   577  00F4B9  0000               	dw	0
   578  00F4BB  0078               	dw	120
   579  00F4BD  0000               	dw	0
   580  00F4BF  0000               	dw	0
   581  00F4C1  0000               	dw	0
   582  00F4C3  0004               	dw	4
   583  00F4C5  0000               	dw	0
   584  00F4C7  0000               	dw	0
   585  00F4C9  0030               	dw	48
   586  00F4CB  0018               	dw	24
   587  00F4CD  0030               	dw	48
   588  00F4CF  0018               	dw	24
   589  00F4D1  0000               	dw	0
   590  00F4D3  0000               	dw	0
   591  00F4D5  0004               	dw	4
   592  00F4D7  0000               	dw	0
   593  00F4D9  0000               	dw	0
   594  00F4DB  0030               	dw	48
   595  00F4DD  0060               	dw	96
   596  00F4DF  0030               	dw	48
   597  00F4E1  0018               	dw	24
   598  00F4E3  0000               	dw	0
   599  00F4E5  0000               	dw	0
   600  00F4E7  000A               	dw	10
   601  00F4E9  0000               	dw	0
   602  00F4EB  0000               	dw	0
   603  00F4ED  0080               	dw	128
   604  00F4EF  0000               	dw	0
   605  00F4F1  0080               	dw	128
   606  00F4F3  0000               	dw	0
   607  00F4F5  0040               	dw	64
   608  00F4F7  0001               	dw	1
   609  00F4F9  0020               	dw	32
   610  00F4FB  0002               	dw	2
   611  00F4FD  0020               	dw	32
   612  00F4FF  0002               	dw	2
   613  00F501  0010               	dw	16
   614  00F503  0004               	dw	4
   615  00F505  0010               	dw	16
   616  00F507  0004               	dw	4
   617  00F509  0008               	dw	8
   618  00F50B  0008               	dw	8
   619  00F50D  0000               	dw	0
   620  00F50F  0000               	dw	0
   621  00F511  000A               	dw	10
   622  00F513  0000               	dw	0
   623  00F515  0000               	dw	0
   624  00F517  0020               	dw	32
   625  00F519  0001               	dw	1
   626  00F51B  0020               	dw	32
   627  00F51D  0001               	dw	1
   628  00F51F  0020               	dw	32
   629  00F521  0001               	dw	1
   630  00F523  0020               	dw	32
   631  00F525  0001               	dw	1
   632  00F527  0020               	dw	32
   633  00F529  0001               	dw	1
   634  00F52B  0020               	dw	32
   635  00F52D  0001               	dw	1
   636  00F52F  0020               	dw	32
   637  00F531  0001               	dw	1
   638  00F533  0020               	dw	32
   639  00F535  0001               	dw	1
   640  00F537  0000               	dw	0
   641  00F539  0000               	dw	0
   642  00F53B  000A               	dw	10
   643  00F53D  0000               	dw	0
   644  00F53F  0000               	dw	0
   645  00F541  0008               	dw	8
   646  00F543  0008               	dw	8
   647  00F545  0010               	dw	16
   648  00F547  0004               	dw	4
   649  00F549  0010               	dw	16
   650  00F54B  0004               	dw	4
   651  00F54D  0020               	dw	32
   652  00F54F  0002               	dw	2
   653  00F551  0020               	dw	32
   654  00F553  0002               	dw	2
   655  00F555  0040               	dw	64
   656  00F557  0001               	dw	1
   657  00F559  0080               	dw	128
   658  00F55B  0000               	dw	0
   659  00F55D  0080               	dw	128
   660  00F55F  0000               	dw	0
   661  00F561  0000               	dw	0
   662  00F563  0000               	dw	0
   663  00F565  0008               	dw	8
   664  00F567  0000               	dw	0
   665  00F569  0000               	dw	0
   666  00F56B  000C               	dw	12
   667  00F56D  0000               	dw	0
   668  00F56F  0082               	dw	130
   669  00F571  0001               	dw	1
   670  00F573  0042               	dw	66
   671  00F575  0002               	dw	2
   672  00F577  0022               	dw	34
   673  00F579  001A               	dw	26
   674  00F57B  0022               	dw	34
   675  00F57D  001A               	dw	26
   676  00F57F  009C               	dw	156
   677  00F581  0001               	dw	1
   678  00F583  0000               	dw	0
   679  00F585  0000               	dw	0
   680  00F587  000E               	dw	14
   681  00F589  0000               	dw	0
   682  00F58B  0000               	dw	0
   683  00F58D  00F0               	dw	240
   684  00F58F  0003               	dw	3
   685  00F591  0008               	dw	8
   686  00F593  0004               	dw	4
   687  00F595  0004               	dw	4
   688  00F597  0008               	dw	8
   689  00F599  00C2               	dw	194
   690  00F59B  0011               	dw	17
   691  00F59D  0022               	dw	34
   692  00F59F  0012               	dw	18
   693  00F5A1  0012               	dw	18
   694  00F5A3  0012               	dw	18
   695  00F5A5  0012               	dw	18
   696  00F5A7  0012               	dw	18
   697  00F5A9  00E2               	dw	226
   698  00F5AB  0011               	dw	17
   699  00F5AD  0012               	dw	18
   700  00F5AF  0012               	dw	18
   701  00F5B1  0004               	dw	4
   702  00F5B3  0012               	dw	18
   703  00F5B5  0008               	dw	8
   704  00F5B7  0009               	dw	9
   705  00F5B9  00F0               	dw	240
   706  00F5BB  0004               	dw	4
   707  00F5BD  0000               	dw	0
   708  00F5BF  0000               	dw	0
   709  00F5C1  000D               	dw	13
   710  00F5C3  0000               	dw	0
   711  00F5C5  0000               	dw	0
   712  00F5C7  0000               	dw	0
   713  00F5C9  0010               	dw	16
   714  00F5CB  0000               	dw	0
   715  00F5CD  000E               	dw	14
   716  00F5CF  0080               	dw	128
   717  00F5D1  0001               	dw	1
   718  00F5D3  0060               	dw	96
   719  00F5D5  0001               	dw	1
   720  00F5D7  001C               	dw	28
   721  00F5D9  0001               	dw	1
   722  00F5DB  0002               	dw	2
   723  00F5DD  0001               	dw	1
   724  00F5DF  001C               	dw	28
   725  00F5E1  0001               	dw	1
   726  00F5E3  0060               	dw	96
   727  00F5E5  0001               	dw	1
   728  00F5E7  0080               	dw	128
   729  00F5E9  0001               	dw	1
   730  00F5EB  0000               	dw	0
   731  00F5ED  000E               	dw	14
   732  00F5EF  0000               	dw	0
   733  00F5F1  0010               	dw	16
   734  00F5F3  0000               	dw	0
   735  00F5F5  0000               	dw	0
   736  00F5F7  0009               	dw	9
   737  00F5F9  0000               	dw	0
   738  00F5FB  0000               	dw	0
   739  00F5FD  0000               	dw	0
   740  00F5FF  0000               	dw	0
   741  00F601  00FE               	dw	254
   742  00F603  001F               	dw	31
   743  00F605  0042               	dw	66
   744  00F607  0010               	dw	16
   745  00F609  0042               	dw	66
   746  00F60B  0010               	dw	16
   747  00F60D  0064               	dw	100
   748  00F60F  0010               	dw	16
   749  00F611  0098               	dw	152
   750  00F613  0008               	dw	8
   751  00F615  0000               	dw	0
   752  00F617  0007               	dw	7
   753  00F619  0000               	dw	0
   754  00F61B  0000               	dw	0
   755  00F61D  000D               	dw	13
   756  00F61F  0000               	dw	0
   757  00F621  0000               	dw	0
   758  00F623  00F0               	dw	240
   759  00F625  0003               	dw	3
   760  00F627  0008               	dw	8
   761  00F629  0004               	dw	4
   762  00F62B  0004               	dw	4
   763  00F62D  0008               	dw	8
   764  00F62F  0002               	dw	2
   765  00F631  0010               	dw	16
   766  00F633  0002               	dw	2
   767  00F635  0010               	dw	16
   768  00F637  0002               	dw	2
   769  00F639  0010               	dw	16
   770  00F63B  0002               	dw	2
   771  00F63D  0010               	dw	16
   772  00F63F  0002               	dw	2
   773  00F641  0010               	dw	16
   774  00F643  0004               	dw	4
   775  00F645  0008               	dw	8
   776  00F647  0004               	dw	4
   777  00F649  0008               	dw	8
   778  00F64B  0008               	dw	8
   779  00F64D  0004               	dw	4
   780  00F64F  0000               	dw	0
   781  00F651  0000               	dw	0
   782  00F653  000C               	dw	12
   783  00F655  0000               	dw	0
   784  00F657  0000               	dw	0
   785  00F659  0000               	dw	0
   786  00F65B  0000               	dw	0
   787  00F65D  00FE               	dw	254
   788  00F65F  001F               	dw	31
   789  00F661  0002               	dw	2
   790  00F663  0010               	dw	16
   791  00F665  0002               	dw	2
   792  00F667  0010               	dw	16
   793  00F669  0002               	dw	2
   794  00F66B  0010               	dw	16
   795  00F66D  0002               	dw	2
   796  00F66F  0010               	dw	16
   797  00F671  0002               	dw	2
   798  00F673  0010               	dw	16
   799  00F675  0004               	dw	4
   800  00F677  0008               	dw	8
   801  00F679  0008               	dw	8
   802  00F67B  0004               	dw	4
   803  00F67D  00F0               	dw	240
   804  00F67F  0003               	dw	3
   805  00F681  0000               	dw	0
   806  00F683  0000               	dw	0
   807  00F685  0009               	dw	9
   808  00F687  0000               	dw	0
   809  00F689  0000               	dw	0
   810  00F68B  0000               	dw	0
   811  00F68D  0000               	dw	0
   812  00F68F  00FE               	dw	254
   813  00F691  001F               	dw	31
   814  00F693  0042               	dw	66
   815  00F695  0010               	dw	16
   816  00F697  0042               	dw	66
   817  00F699  0010               	dw	16
   818  00F69B  0042               	dw	66
   819  00F69D  0010               	dw	16
   820  00F69F  0042               	dw	66
   821  00F6A1  0010               	dw	16
   822  00F6A3  0042               	dw	66
   823  00F6A5  0010               	dw	16
   824  00F6A7  0000               	dw	0
   825  00F6A9  0000               	dw	0
   826  00F6AB  0008               	dw	8
   827  00F6AD  0000               	dw	0
   828  00F6AF  0000               	dw	0
   829  00F6B1  0000               	dw	0
   830  00F6B3  0000               	dw	0
   831  00F6B5  00FE               	dw	254
   832  00F6B7  001F               	dw	31
   833  00F6B9  0042               	dw	66
   834  00F6BB  0000               	dw	0
   835  00F6BD  0042               	dw	66
   836  00F6BF  0000               	dw	0
   837  00F6C1  0042               	dw	66
   838  00F6C3  0000               	dw	0
   839  00F6C5  0042               	dw	66
   840  00F6C7  0000               	dw	0
   841  00F6C9  0000               	dw	0
   842  00F6CB  0000               	dw	0
   843  00F6CD  000E               	dw	14
   844  00F6CF  0000               	dw	0
   845  00F6D1  0000               	dw	0
   846  00F6D3  00F0               	dw	240
   847  00F6D5  0003               	dw	3
   848  00F6D7  0008               	dw	8
   849  00F6D9  0004               	dw	4
   850  00F6DB  0004               	dw	4
   851  00F6DD  0008               	dw	8
   852  00F6DF  0002               	dw	2
   853  00F6E1  0010               	dw	16
   854  00F6E3  0002               	dw	2
   855  00F6E5  0010               	dw	16
   856  00F6E7  0002               	dw	2
   857  00F6E9  0010               	dw	16
   858  00F6EB  0002               	dw	2
   859  00F6ED  0010               	dw	16
   860  00F6EF  0082               	dw	130
   861  00F6F1  0010               	dw	16
   862  00F6F3  0084               	dw	132
   863  00F6F5  0010               	dw	16
   864  00F6F7  0084               	dw	132
   865  00F6F9  0008               	dw	8
   866  00F6FB  0088               	dw	136
   867  00F6FD  0004               	dw	4
   868  00F6FF  0080               	dw	128
   869  00F701  0003               	dw	3
   870  00F703  0000               	dw	0
   871  00F705  0000               	dw	0
   872  00F707  000A               	dw	10
   873  00F709  0000               	dw	0
   874  00F70B  0000               	dw	0
   875  00F70D  0000               	dw	0
   876  00F70F  0000               	dw	0
   877  00F711  00FE               	dw	254
   878  00F713  001F               	dw	31
   879  00F715  0040               	dw	64
   880  00F717  0000               	dw	0
   881  00F719  0040               	dw	64
   882  00F71B  0000               	dw	0
   883  00F71D  0040               	dw	64
   884  00F71F  0000               	dw	0
   885  00F721  0040               	dw	64
   886  00F723  0000               	dw	0
   887  00F725  0040               	dw	64
   888  00F727  0000               	dw	0
   889  00F729  00FE               	dw	254
   890  00F72B  001F               	dw	31
   891  00F72D  0000               	dw	0
   892  00F72F  0000               	dw	0
   893  00F731  0004               	dw	4
   894  00F733  0000               	dw	0
   895  00F735  0000               	dw	0
   896  00F737  0000               	dw	0
   897  00F739  0000               	dw	0
   898  00F73B  00FE               	dw	254
   899  00F73D  001F               	dw	31
   900  00F73F  0000               	dw	0
   901  00F741  0000               	dw	0
   902  00F743  0007               	dw	7
   903  00F745  0000               	dw	0
   904  00F747  0000               	dw	0
   905  00F749  0000               	dw	0
   906  00F74B  0008               	dw	8
   907  00F74D  0000               	dw	0
   908  00F74F  0010               	dw	16
   909  00F751  0000               	dw	0
   910  00F753  0010               	dw	16
   911  00F755  0000               	dw	0
   912  00F757  0008               	dw	8
   913  00F759  00FE               	dw	254
   914  00F75B  0007               	dw	7
   915  00F75D  0000               	dw	0
   916  00F75F  0000               	dw	0
   917  00F761  0009               	dw	9
   918  00F763  0000               	dw	0
   919  00F765  0000               	dw	0
   920  00F767  0000               	dw	0
   921  00F769  0000               	dw	0
   922  00F76B  00FE               	dw	254
   923  00F76D  001F               	dw	31
   924  00F76F  0060               	dw	96
   925  00F771  0000               	dw	0
   926  00F773  0090               	dw	144
   927  00F775  0001               	dw	1
   928  00F777  0008               	dw	8
   929  00F779  0002               	dw	2
   930  00F77B  0004               	dw	4
   931  00F77D  000C               	dw	12
   932  00F77F  0002               	dw	2
   933  00F781  0010               	dw	16
   934  00F783  0000               	dw	0
   935  00F785  0000               	dw	0
   936  00F787  0008               	dw	8
   937  00F789  0000               	dw	0
   938  00F78B  0000               	dw	0
   939  00F78D  0000               	dw	0
   940  00F78F  0000               	dw	0
   941  00F791  00FE               	dw	254
   942  00F793  001F               	dw	31
   943  00F795  0000               	dw	0
   944  00F797  0010               	dw	16
   945  00F799  0000               	dw	0
   946  00F79B  0010               	dw	16
   947  00F79D  0000               	dw	0
   948  00F79F  0010               	dw	16
   949  00F7A1  0000               	dw	0
   950  00F7A3  0010               	dw	16
   951  00F7A5  0000               	dw	0
   952  00F7A7  0000               	dw	0
   953  00F7A9  000F               	dw	15
   954  00F7AB  0000               	dw	0
   955  00F7AD  0000               	dw	0
   956  00F7AF  0000               	dw	0
   957  00F7B1  001C               	dw	28
   958  00F7B3  00F8               	dw	248
   959  00F7B5  0003               	dw	3
   960  00F7B7  0006               	dw	6
   961  00F7B9  0000               	dw	0
   962  00F7BB  0038               	dw	56
   963  00F7BD  0000               	dw	0
   964  00F7BF  00C0               	dw	192
   965  00F7C1  0001               	dw	1
   966  00F7C3  0000               	dw	0
   967  00F7C5  000E               	dw	14
   968  00F7C7  0000               	dw	0
   969  00F7C9  0010               	dw	16
   970  00F7CB  0000               	dw	0
   971  00F7CD  000E               	dw	14
   972  00F7CF  00C0               	dw	192
   973  00F7D1  0001               	dw	1
   974  00F7D3  0038               	dw	56
   975  00F7D5  0000               	dw	0
   976  00F7D7  0006               	dw	6
   977  00F7D9  0000               	dw	0
   978  00F7DB  00F8               	dw	248
   979  00F7DD  0003               	dw	3
   980  00F7DF  0000               	dw	0
   981  00F7E1  001C               	dw	28
   982  00F7E3  0000               	dw	0
   983  00F7E5  0000               	dw	0
   984  00F7E7  000B               	dw	11
   985  00F7E9  0000               	dw	0
   986  00F7EB  0000               	dw	0
   987  00F7ED  0000               	dw	0
   988  00F7EF  0000               	dw	0
   989  00F7F1  00FE               	dw	254
   990  00F7F3  001F               	dw	31
   991  00F7F5  0008               	dw	8
   992  00F7F7  0000               	dw	0
   993  00F7F9  0030               	dw	48
   994  00F7FB  0000               	dw	0
   995  00F7FD  0040               	dw	64
   996  00F7FF  0000               	dw	0
   997  00F801  0080               	dw	128
   998  00F803  0000               	dw	0
   999  00F805  0000               	dw	0
  1000  00F807  0003               	dw	3
  1001  00F809  0000               	dw	0
  1002  00F80B  0004               	dw	4
  1003  00F80D  00FE               	dw	254
  1004  00F80F  001F               	dw	31
  1005  00F811  0000               	dw	0
  1006  00F813  0000               	dw	0
  1007  00F815  000E               	dw	14
  1008  00F817  0000               	dw	0
  1009  00F819  0000               	dw	0
  1010  00F81B  00F0               	dw	240
  1011  00F81D  0003               	dw	3
  1012  00F81F  0008               	dw	8
  1013  00F821  0004               	dw	4
  1014  00F823  0004               	dw	4
  1015  00F825  0008               	dw	8
  1016  00F827  0002               	dw	2
  1017  00F829  0010               	dw	16
  1018  00F82B  0002               	dw	2
  1019  00F82D  0010               	dw	16
  1020  00F82F  0002               	dw	2
  1021  00F831  0010               	dw	16
  1022  00F833  0002               	dw	2
  1023  00F835  0010               	dw	16
  1024  00F837  0002               	dw	2
  1025  00F839  0010               	dw	16
  1026  00F83B  0002               	dw	2
  1027  00F83D  0010               	dw	16
  1028  00F83F  0004               	dw	4
  1029  00F841  0008               	dw	8
  1030  00F843  0008               	dw	8
  1031  00F845  0004               	dw	4
  1032  00F847  00F0               	dw	240
  1033  00F849  0003               	dw	3
  1034  00F84B  0000               	dw	0
  1035  00F84D  0000               	dw	0
  1036  00F84F  0009               	dw	9
  1037  00F851  0000               	dw	0
  1038  00F853  0000               	dw	0
  1039  00F855  0000               	dw	0
  1040  00F857  0000               	dw	0
  1041  00F859  00FE               	dw	254
  1042  00F85B  001F               	dw	31
  1043  00F85D  0042               	dw	66
  1044  00F85F  0000               	dw	0
  1045  00F861  0042               	dw	66
  1046  00F863  0000               	dw	0
  1047  00F865  0042               	dw	66
  1048  00F867  0000               	dw	0
  1049  00F869  0024               	dw	36
  1050  00F86B  0000               	dw	0
  1051  00F86D  0018               	dw	24
  1052  00F86F  0000               	dw	0
  1053  00F871  0000               	dw	0
  1054  00F873  0000               	dw	0
  1055  00F875  000E               	dw	14
  1056  00F877  0000               	dw	0
  1057  00F879  0000               	dw	0
  1058  00F87B  00F0               	dw	240
  1059  00F87D  0003               	dw	3
  1060  00F87F  0008               	dw	8
  1061  00F881  0004               	dw	4
  1062  00F883  0004               	dw	4
  1063  00F885  0008               	dw	8
  1064  00F887  0002               	dw	2
  1065  00F889  0010               	dw	16
  1066  00F88B  0002               	dw	2
  1067  00F88D  0010               	dw	16
  1068  00F88F  0002               	dw	2
  1069  00F891  0010               	dw	16
  1070  00F893  0002               	dw	2
  1071  00F895  0011               	dw	17
  1072  00F897  0002               	dw	2
  1073  00F899  0012               	dw	18
  1074  00F89B  0002               	dw	2
  1075  00F89D  000C               	dw	12
  1076  00F89F  0004               	dw	4
  1077  00F8A1  0008               	dw	8
  1078  00F8A3  0008               	dw	8
  1079  00F8A5  0016               	dw	22
  1080  00F8A7  00F0               	dw	240
  1081  00F8A9  0021               	dw	33
  1082  00F8AB  0000               	dw	0
  1083  00F8AD  0000               	dw	0
  1084  00F8AF  000A               	dw	10
  1085  00F8B1  0000               	dw	0
  1086  00F8B3  0000               	dw	0
  1087  00F8B5  0000               	dw	0
  1088  00F8B7  0000               	dw	0
  1089  00F8B9  00FE               	dw	254
  1090  00F8BB  001F               	dw	31
  1091  00F8BD  0042               	dw	66
  1092  00F8BF  0000               	dw	0
  1093  00F8C1  00C2               	dw	194
  1094  00F8C3  0000               	dw	0
  1095  00F8C5  0042               	dw	66
  1096  00F8C7  0001               	dw	1
  1097  00F8C9  0042               	dw	66
  1098  00F8CB  0006               	dw	6
  1099  00F8CD  0024               	dw	36
  1100  00F8CF  0008               	dw	8
  1101  00F8D1  0018               	dw	24
  1102  00F8D3  0010               	dw	16
  1103  00F8D5  0000               	dw	0
  1104  00F8D7  0000               	dw	0
  1105  00F8D9  0008               	dw	8
  1106  00F8DB  0000               	dw	0
  1107  00F8DD  0004               	dw	4
  1108  00F8DF  0018               	dw	24
  1109  00F8E1  0008               	dw	8
  1110  00F8E3  0024               	dw	36
  1111  00F8E5  0010               	dw	16
  1112  00F8E7  0042               	dw	66
  1113  00F8E9  0010               	dw	16
  1114  00F8EB  0042               	dw	66
  1115  00F8ED  0010               	dw	16
  1116  00F8EF  0084               	dw	132
  1117  00F8F1  0008               	dw	8
  1118  00F8F3  0008               	dw	8
  1119  00F8F5  0007               	dw	7
  1120  00F8F7  0000               	dw	0
  1121  00F8F9  0000               	dw	0
  1122  00F8FB  0008               	dw	8
  1123  00F8FD  0002               	dw	2
  1124  00F8FF  0000               	dw	0
  1125  00F901  0002               	dw	2
  1126  00F903  0000               	dw	0
  1127  00F905  0002               	dw	2
  1128  00F907  0000               	dw	0
  1129  00F909  00FE               	dw	254
  1130  00F90B  001F               	dw	31
  1131  00F90D  0002               	dw	2
  1132  00F90F  0000               	dw	0
  1133  00F911  0002               	dw	2
  1134  00F913  0000               	dw	0
  1135  00F915  0002               	dw	2
  1136  00F917  0000               	dw	0
  1137  00F919  0000               	dw	0
  1138  00F91B  0000               	dw	0
  1139  00F91D  000A               	dw	10
  1140  00F91F  0000               	dw	0
  1141  00F921  0000               	dw	0
  1142  00F923  0000               	dw	0
  1143  00F925  0000               	dw	0
  1144  00F927  00FE               	dw	254
  1145  00F929  0007               	dw	7
  1146  00F92B  0000               	dw	0
  1147  00F92D  0008               	dw	8
  1148  00F92F  0000               	dw	0
  1149  00F931  0010               	dw	16
  1150  00F933  0000               	dw	0
  1151  00F935  0010               	dw	16
  1152  00F937  0000               	dw	0
  1153  00F939  0010               	dw	16
  1154  00F93B  0000               	dw	0
  1155  00F93D  0008               	dw	8
  1156  00F93F  00FE               	dw	254
  1157  00F941  0007               	dw	7
  1158  00F943  0000               	dw	0
  1159  00F945  0000               	dw	0
  1160  00F947  000C               	dw	12
  1161  00F949  0002               	dw	2
  1162  00F94B  0000               	dw	0
  1163  00F94D  001C               	dw	28
  1164  00F94F  0000               	dw	0
  1165  00F951  0060               	dw	96
  1166  00F953  0000               	dw	0
  1167  00F955  0080               	dw	128
  1168  00F957  0001               	dw	1
  1169  00F959  0000               	dw	0
  1170  00F95B  000E               	dw	14
  1171  00F95D  0000               	dw	0
  1172  00F95F  0010               	dw	16
  1173  00F961  0000               	dw	0
  1174  00F963  000E               	dw	14
  1175  00F965  0080               	dw	128
  1176  00F967  0001               	dw	1
  1177  00F969  0060               	dw	96
  1178  00F96B  0000               	dw	0
  1179  00F96D  001C               	dw	28
  1180  00F96F  0000               	dw	0
  1181  00F971  0002               	dw	2
  1182  00F973  0000               	dw	0
  1183  00F975  0000               	dw	0
  1184  00F977  0000               	dw	0
  1185  00F979  000F               	dw	15
  1186  00F97B  0000               	dw	0
  1187  00F97D  0000               	dw	0
  1188  00F97F  0006               	dw	6
  1189  00F981  0000               	dw	0
  1190  00F983  0078               	dw	120
  1191  00F985  0000               	dw	0
  1192  00F987  0080               	dw	128
  1193  00F989  0007               	dw	7
  1194  00F98B  0000               	dw	0
  1195  00F98D  0018               	dw	24
  1196  00F98F  0080               	dw	128
  1197  00F991  0007               	dw	7
  1198  00F993  0078               	dw	120
  1199  00F995  0000               	dw	0
  1200  00F997  0006               	dw	6
  1201  00F999  0000               	dw	0
  1202  00F99B  0078               	dw	120
  1203  00F99D  0000               	dw	0
  1204  00F99F  0080               	dw	128
  1205  00F9A1  0007               	dw	7
  1206  00F9A3  0000               	dw	0
  1207  00F9A5  0018               	dw	24
  1208  00F9A7  0080               	dw	128
  1209  00F9A9  0007               	dw	7
  1210  00F9AB  0078               	dw	120
  1211  00F9AD  0000               	dw	0
  1212  00F9AF  0006               	dw	6
  1213  00F9B1  0000               	dw	0
  1214  00F9B3  0000               	dw	0
  1215  00F9B5  0000               	dw	0
  1216  00F9B7  0009               	dw	9
  1217  00F9B9  0000               	dw	0
  1218  00F9BB  0000               	dw	0
  1219  00F9BD  0006               	dw	6
  1220  00F9BF  0018               	dw	24
  1221  00F9C1  0008               	dw	8
  1222  00F9C3  0004               	dw	4
  1223  00F9C5  0030               	dw	48
  1224  00F9C7  0003               	dw	3
  1225  00F9C9  00C0               	dw	192
  1226  00F9CB  0000               	dw	0
  1227  00F9CD  0030               	dw	48
  1228  00F9CF  0003               	dw	3
  1229  00F9D1  0008               	dw	8
  1230  00F9D3  0004               	dw	4
  1231  00F9D5  0006               	dw	6
  1232  00F9D7  0018               	dw	24
  1233  00F9D9  0000               	dw	0
  1234  00F9DB  0000               	dw	0
  1235  00F9DD  000B               	dw	11
  1236  00F9DF  0000               	dw	0
  1237  00F9E1  0000               	dw	0
  1238  00F9E3  0002               	dw	2
  1239  00F9E5  0000               	dw	0
  1240  00F9E7  0004               	dw	4
  1241  00F9E9  0000               	dw	0
  1242  00F9EB  0018               	dw	24
  1243  00F9ED  0000               	dw	0
  1244  00F9EF  0060               	dw	96
  1245  00F9F1  0000               	dw	0
  1246  00F9F3  0080               	dw	128
  1247  00F9F5  001F               	dw	31
  1248  00F9F7  0060               	dw	96
  1249  00F9F9  0000               	dw	0
  1250  00F9FB  0018               	dw	24
  1251  00F9FD  0000               	dw	0
  1252  00F9FF  0004               	dw	4
  1253  00FA01  0000               	dw	0
  1254  00FA03  0002               	dw	2
  1255  00FA05  0000               	dw	0
  1256  00FA07  0000               	dw	0
  1257  00FA09  0000               	dw	0
  1258  00FA0B  0008               	dw	8
  1259  00FA0D  0002               	dw	2
  1260  00FA0F  0010               	dw	16
  1261  00FA11  0002               	dw	2
  1262  00FA13  001C               	dw	28
  1263  00FA15  0002               	dw	2
  1264  00FA17  0013               	dw	19
  1265  00FA19  00C2               	dw	194
  1266  00FA1B  0010               	dw	16
  1267  00FA1D  0032               	dw	50
  1268  00FA1F  0010               	dw	16
  1269  00FA21  000E               	dw	14
  1270  00FA23  0010               	dw	16
  1271  00FA25  0002               	dw	2
  1272  00FA27  0010               	dw	16
  1273  00FA29  0000               	dw	0
  1274  00FA2B  0000               	dw	0
  1275  00FA2D  0006               	dw	6
  1276  00FA2F  0000               	dw	0
  1277  00FA31  0000               	dw	0
  1278  00FA33  0000               	dw	0
  1279  00FA35  0000               	dw	0
  1280  00FA37  00FE               	dw	254
  1281  00FA39  00FF               	dw	255
  1282  00FA3B  0002               	dw	2
  1283  00FA3D  0080               	dw	128
  1284  00FA3F  0002               	dw	2
  1285  00FA41  0080               	dw	128
  1286  00FA43  0000               	dw	0
  1287  00FA45  0000               	dw	0
  1288  00FA47  000A               	dw	10
  1289  00FA49  0002               	dw	2
  1290  00FA4B  0000               	dw	0
  1291  00FA4D  000C               	dw	12
  1292  00FA4F  0000               	dw	0
  1293  00FA51  0010               	dw	16
  1294  00FA53  0000               	dw	0
  1295  00FA55  0060               	dw	96
  1296  00FA57  0000               	dw	0
  1297  00FA59  0080               	dw	128
  1298  00FA5B  0001               	dw	1
  1299  00FA5D  0000               	dw	0
  1300  00FA5F  0006               	dw	6
  1301  00FA61  0000               	dw	0
  1302  00FA63  0008               	dw	8
  1303  00FA65  0000               	dw	0
  1304  00FA67  0030               	dw	48
  1305  00FA69  0000               	dw	0
  1306  00FA6B  0040               	dw	64
  1307  00FA6D  0000               	dw	0
  1308  00FA6F  0000               	dw	0
  1309  00FA71  0005               	dw	5
  1310  00FA73  0000               	dw	0
  1311  00FA75  0000               	dw	0
  1312  00FA77  0002               	dw	2
  1313  00FA79  0080               	dw	128
  1314  00FA7B  0002               	dw	2
  1315  00FA7D  0080               	dw	128
  1316  00FA7F  00FE               	dw	254
  1317  00FA81  00FF               	dw	255
  1318  00FA83  0000               	dw	0
  1319  00FA85  0000               	dw	0
  1320  00FA87  000B               	dw	11
  1321  00FA89  0000               	dw	0
  1322  00FA8B  0000               	dw	0
  1323  00FA8D  0000               	dw	0
  1324  00FA8F  0002               	dw	2
  1325  00FA91  0080               	dw	128
  1326  00FA93  0001               	dw	1
  1327  00FA95  0070               	dw	112
  1328  00FA97  0000               	dw	0
  1329  00FA99  000C               	dw	12
  1330  00FA9B  0000               	dw	0
  1331  00FA9D  0002               	dw	2
  1332  00FA9F  0000               	dw	0
  1333  00FAA1  000C               	dw	12
  1334  00FAA3  0000               	dw	0
  1335  00FAA5  0070               	dw	112
  1336  00FAA7  0000               	dw	0
  1337  00FAA9  0080               	dw	128
  1338  00FAAB  0001               	dw	1
  1339  00FAAD  0000               	dw	0
  1340  00FAAF  0002               	dw	2
  1341  00FAB1  0000               	dw	0
  1342  00FAB3  0000               	dw	0
  1343  00FAB5  0009               	dw	9
  1344  00FAB7  0000               	dw	0
  1345  00FAB9  0040               	dw	64
  1346  00FABB  0000               	dw	0
  1347  00FABD  0040               	dw	64
  1348  00FABF  0000               	dw	0
  1349  00FAC1  0040               	dw	64
  1350  00FAC3  0000               	dw	0
  1351  00FAC5  0040               	dw	64
  1352  00FAC7  0000               	dw	0
  1353  00FAC9  0040               	dw	64
  1354  00FACB  0000               	dw	0
  1355  00FACD  0040               	dw	64
  1356  00FACF  0000               	dw	0
  1357  00FAD1  0040               	dw	64
  1358  00FAD3  0000               	dw	0
  1359  00FAD5  0040               	dw	64
  1360  00FAD7  0000               	dw	0
  1361  00FAD9  0000               	dw	0
  1362  00FADB  0005               	dw	5
  1363  00FADD  0000               	dw	0
  1364  00FADF  0000               	dw	0
  1365  00FAE1  0000               	dw	0
  1366  00FAE3  0000               	dw	0
  1367  00FAE5  0002               	dw	2
  1368  00FAE7  0000               	dw	0
  1369  00FAE9  0004               	dw	4
  1370  00FAEB  0000               	dw	0
  1371  00FAED  0000               	dw	0
  1372  00FAEF  0000               	dw	0
  1373  00FAF1  000B               	dw	11
  1374  00FAF3  0000               	dw	0
  1375  00FAF5  0000               	dw	0
  1376  00FAF7  00C0               	dw	192
  1377  00FAF9  0007               	dw	7
  1378  00FAFB  0020               	dw	32
  1379  00FAFD  0008               	dw	8
  1380  00FAFF  0010               	dw	16
  1381  00FB01  0010               	dw	16
  1382  00FB03  0010               	dw	16
  1383  00FB05  0010               	dw	16
  1384  00FB07  0010               	dw	16
  1385  00FB09  0010               	dw	16
  1386  00FB0B  0010               	dw	16
  1387  00FB0D  0010               	dw	16
  1388  00FB0F  0010               	dw	16
  1389  00FB11  0010               	dw	16
  1390  00FB13  0020               	dw	32
  1391  00FB15  0008               	dw	8
  1392  00FB17  00F0               	dw	240
  1393  00FB19  001F               	dw	31
  1394  00FB1B  0000               	dw	0
  1395  00FB1D  0000               	dw	0
  1396  00FB1F  000B               	dw	11
  1397  00FB21  0000               	dw	0
  1398  00FB23  0000               	dw	0
  1399  00FB25  00FE               	dw	254
  1400  00FB27  001F               	dw	31
  1401  00FB29  0020               	dw	32
  1402  00FB2B  0008               	dw	8
  1403  00FB2D  0010               	dw	16
  1404  00FB2F  0010               	dw	16
  1405  00FB31  0010               	dw	16
  1406  00FB33  0010               	dw	16
  1407  00FB35  0010               	dw	16
  1408  00FB37  0010               	dw	16
  1409  00FB39  0010               	dw	16
  1410  00FB3B  0010               	dw	16
  1411  00FB3D  0010               	dw	16
  1412  00FB3F  0010               	dw	16
  1413  00FB41  0020               	dw	32
  1414  00FB43  0008               	dw	8
  1415  00FB45  00C0               	dw	192
  1416  00FB47  0007               	dw	7
  1417  00FB49  0000               	dw	0
  1418  00FB4B  0000               	dw	0
  1419  00FB4D  000A               	dw	10
  1420  00FB4F  0000               	dw	0
  1421  00FB51  0000               	dw	0
  1422  00FB53  00C0               	dw	192
  1423  00FB55  0007               	dw	7
  1424  00FB57  0020               	dw	32
  1425  00FB59  0008               	dw	8
  1426  00FB5B  0010               	dw	16
  1427  00FB5D  0010               	dw	16
  1428  00FB5F  0010               	dw	16
  1429  00FB61  0010               	dw	16
  1430  00FB63  0010               	dw	16
  1431  00FB65  0010               	dw	16
  1432  00FB67  0010               	dw	16
  1433  00FB69  0010               	dw	16
  1434  00FB6B  0020               	dw	32
  1435  00FB6D  0008               	dw	8
  1436  00FB6F  0040               	dw	64
  1437  00FB71  0004               	dw	4
  1438  00FB73  0000               	dw	0
  1439  00FB75  0000               	dw	0
  1440  00FB77  000B               	dw	11
  1441  00FB79  0000               	dw	0
  1442  00FB7B  0000               	dw	0
  1443  00FB7D  00C0               	dw	192
  1444  00FB7F  0007               	dw	7
  1445  00FB81  0020               	dw	32
  1446  00FB83  0008               	dw	8
  1447  00FB85  0010               	dw	16
  1448  00FB87  0010               	dw	16
  1449  00FB89  0010               	dw	16
  1450  00FB8B  0010               	dw	16
  1451  00FB8D  0010               	dw	16
  1452  00FB8F  0010               	dw	16
  1453  00FB91  0010               	dw	16
  1454  00FB93  0010               	dw	16
  1455  00FB95  0010               	dw	16
  1456  00FB97  0010               	dw	16
  1457  00FB99  0020               	dw	32
  1458  00FB9B  0008               	dw	8
  1459  00FB9D  00FE               	dw	254
  1460  00FB9F  001F               	dw	31
  1461  00FBA1  0000               	dw	0
  1462  00FBA3  0000               	dw	0
  1463  00FBA5  000A               	dw	10
  1464  00FBA7  0000               	dw	0
  1465  00FBA9  0000               	dw	0
  1466  00FBAB  00C0               	dw	192
  1467  00FBAD  0007               	dw	7
  1468  00FBAF  0020               	dw	32
  1469  00FBB1  0009               	dw	9
  1470  00FBB3  0010               	dw	16
  1471  00FBB5  0011               	dw	17
  1472  00FBB7  0010               	dw	16
  1473  00FBB9  0011               	dw	17
  1474  00FBBB  0010               	dw	16
  1475  00FBBD  0011               	dw	17
  1476  00FBBF  0010               	dw	16
  1477  00FBC1  0011               	dw	17
  1478  00FBC3  0020               	dw	32
  1479  00FBC5  0009               	dw	9
  1480  00FBC7  00C0               	dw	192
  1481  00FBC9  0005               	dw	5
  1482  00FBCB  0000               	dw	0
  1483  00FBCD  0000               	dw	0
  1484  00FBCF  0006               	dw	6
  1485  00FBD1  0000               	dw	0
  1486  00FBD3  0000               	dw	0
  1487  00FBD5  0010               	dw	16
  1488  00FBD7  0000               	dw	0
  1489  00FBD9  00FC               	dw	252
  1490  00FBDB  001F               	dw	31
  1491  00FBDD  0012               	dw	18
  1492  00FBDF  0000               	dw	0
  1493  00FBE1  0012               	dw	18
  1494  00FBE3  0000               	dw	0
  1495  00FBE5  0000               	dw	0
  1496  00FBE7  0000               	dw	0
  1497  00FBE9  000B               	dw	11
  1498  00FBEB  0000               	dw	0
  1499  00FBED  0000               	dw	0
  1500  00FBEF  00C0               	dw	192
  1501  00FBF1  0027               	dw	39
  1502  00FBF3  0020               	dw	32
  1503  00FBF5  0048               	dw	72
  1504  00FBF7  0010               	dw	16
  1505  00FBF9  0090               	dw	144
  1506  00FBFB  0010               	dw	16
  1507  00FBFD  0090               	dw	144
  1508  00FBFF  0010               	dw	16
  1509  00FC01  0090               	dw	144
  1510  00FC03  0010               	dw	16
  1511  00FC05  0090               	dw	144
  1512  00FC07  0010               	dw	16
  1513  00FC09  0090               	dw	144
  1514  00FC0B  0020               	dw	32
  1515  00FC0D  0048               	dw	72
  1516  00FC0F  00F0               	dw	240
  1517  00FC11  003F               	dw	63
  1518  00FC13  0000               	dw	0
  1519  00FC15  0000               	dw	0
  1520  00FC17  000A               	dw	10
  1521  00FC19  0000               	dw	0
  1522  00FC1B  0000               	dw	0
  1523  00FC1D  00FE               	dw	254
  1524  00FC1F  001F               	dw	31
  1525  00FC21  0020               	dw	32
  1526  00FC23  0000               	dw	0
  1527  00FC25  0010               	dw	16
  1528  00FC27  0000               	dw	0
  1529  00FC29  0010               	dw	16
  1530  00FC2B  0000               	dw	0
  1531  00FC2D  0010               	dw	16
  1532  00FC2F  0000               	dw	0
  1533  00FC31  0010               	dw	16
  1534  00FC33  0000               	dw	0
  1535  00FC35  0020               	dw	32
  1536  00FC37  0000               	dw	0
  1537  00FC39  00C0               	dw	192
  1538  00FC3B  001F               	dw	31
  1539  00FC3D  0000               	dw	0
  1540  00FC3F  0000               	dw	0
  1541  00FC41  0003               	dw	3
  1542  00FC43  0000               	dw	0
  1543  00FC45  0000               	dw	0
  1544  00FC47  00F6               	dw	246
  1545  00FC49  001F               	dw	31
  1546  00FC4B  0000               	dw	0
  1547  00FC4D  0000               	dw	0
  1548  00FC4F  0003               	dw	3
  1549  00FC51  0000               	dw	0
  1550  00FC53  0080               	dw	128
  1551  00FC55  00F6               	dw	246
  1552  00FC57  007F               	dw	127
  1553  00FC59  0000               	dw	0
  1554  00FC5B  0000               	dw	0
  1555  00FC5D  0008               	dw	8
  1556  00FC5F  0000               	dw	0
  1557  00FC61  0000               	dw	0
  1558  00FC63  00FE               	dw	254
  1559  00FC65  001F               	dw	31
  1560  00FC67  0000               	dw	0
  1561  00FC69  0001               	dw	1
  1562  00FC6B  0080               	dw	128
  1563  00FC6D  0002               	dw	2
  1564  00FC6F  0040               	dw	64
  1565  00FC71  0004               	dw	4
  1566  00FC73  0020               	dw	32
  1567  00FC75  0008               	dw	8
  1568  00FC77  0010               	dw	16
  1569  00FC79  0010               	dw	16
  1570  00FC7B  0000               	dw	0
  1571  00FC7D  0000               	dw	0
  1572  00FC7F  0003               	dw	3
  1573  00FC81  0000               	dw	0
  1574  00FC83  0000               	dw	0
  1575  00FC85  00FE               	dw	254
  1576  00FC87  001F               	dw	31
  1577  00FC89  0000               	dw	0
  1578  00FC8B  0000               	dw	0
  1579  00FC8D  000F               	dw	15
  1580  00FC8F  0000               	dw	0
  1581  00FC91  0000               	dw	0
  1582  00FC93  00F0               	dw	240
  1583  00FC95  001F               	dw	31
  1584  00FC97  0020               	dw	32
  1585  00FC99  0000               	dw	0
  1586  00FC9B  0010               	dw	16
  1587  00FC9D  0000               	dw	0
  1588  00FC9F  0010               	dw	16
  1589  00FCA1  0000               	dw	0
  1590  00FCA3  0010               	dw	16
  1591  00FCA5  0000               	dw	0
  1592  00FCA7  0020               	dw	32
  1593  00FCA9  0000               	dw	0
  1594  00FCAB  00C0               	dw	192
  1595  00FCAD  001F               	dw	31
  1596  00FCAF  0020               	dw	32
  1597  00FCB1  0000               	dw	0
  1598  00FCB3  0010               	dw	16
  1599  00FCB5  0000               	dw	0
  1600  00FCB7  0010               	dw	16
  1601  00FCB9  0000               	dw	0
  1602  00FCBB  0010               	dw	16
  1603  00FCBD  0000               	dw	0
  1604  00FCBF  0020               	dw	32
  1605  00FCC1  0000               	dw	0
  1606  00FCC3  00C0               	dw	192
  1607  00FCC5  001F               	dw	31
  1608  00FCC7  0000               	dw	0
  1609  00FCC9  0000               	dw	0
  1610  00FCCB  000A               	dw	10
  1611  00FCCD  0000               	dw	0
  1612  00FCCF  0000               	dw	0
  1613  00FCD1  00F0               	dw	240
  1614  00FCD3  001F               	dw	31
  1615  00FCD5  0020               	dw	32
  1616  00FCD7  0000               	dw	0
  1617  00FCD9  0010               	dw	16
  1618  00FCDB  0000               	dw	0
  1619  00FCDD  0010               	dw	16
  1620  00FCDF  0000               	dw	0
  1621  00FCE1  0010               	dw	16
  1622  00FCE3  0000               	dw	0
  1623  00FCE5  0010               	dw	16
  1624  00FCE7  0000               	dw	0
  1625  00FCE9  0020               	dw	32
  1626  00FCEB  0000               	dw	0
  1627  00FCED  00C0               	dw	192
  1628  00FCEF  001F               	dw	31
  1629  00FCF1  0000               	dw	0
  1630  00FCF3  0000               	dw	0
  1631  00FCF5  000A               	dw	10
  1632  00FCF7  0000               	dw	0
  1633  00FCF9  0000               	dw	0
  1634  00FCFB  00C0               	dw	192
  1635  00FCFD  0007               	dw	7
  1636  00FCFF  0020               	dw	32
  1637  00FD01  0008               	dw	8
  1638  00FD03  0010               	dw	16
  1639  00FD05  0010               	dw	16
  1640  00FD07  0010               	dw	16
  1641  00FD09  0010               	dw	16
  1642  00FD0B  0010               	dw	16
  1643  00FD0D  0010               	dw	16
  1644  00FD0F  0010               	dw	16
  1645  00FD11  0010               	dw	16
  1646  00FD13  0020               	dw	32
  1647  00FD15  0008               	dw	8
  1648  00FD17  00C0               	dw	192
  1649  00FD19  0007               	dw	7
  1650  00FD1B  0000               	dw	0
  1651  00FD1D  0000               	dw	0
  1652  00FD1F  000B               	dw	11
  1653  00FD21  0000               	dw	0
  1654  00FD23  0000               	dw	0
  1655  00FD25  00F0               	dw	240
  1656  00FD27  00FF               	dw	255
  1657  00FD29  0020               	dw	32
  1658  00FD2B  0008               	dw	8
  1659  00FD2D  0010               	dw	16
  1660  00FD2F  0010               	dw	16
  1661  00FD31  0010               	dw	16
  1662  00FD33  0010               	dw	16
  1663  00FD35  0010               	dw	16
  1664  00FD37  0010               	dw	16
  1665  00FD39  0010               	dw	16
  1666  00FD3B  0010               	dw	16
  1667  00FD3D  0010               	dw	16
  1668  00FD3F  0010               	dw	16
  1669  00FD41  0020               	dw	32
  1670  00FD43  0008               	dw	8
  1671  00FD45  00C0               	dw	192
  1672  00FD47  0007               	dw	7
  1673  00FD49  0000               	dw	0
  1674  00FD4B  0000               	dw	0
  1675  00FD4D  000B               	dw	11
  1676  00FD4F  0000               	dw	0
  1677  00FD51  0000               	dw	0
  1678  00FD53  00C0               	dw	192
  1679  00FD55  0007               	dw	7
  1680  00FD57  0020               	dw	32
  1681  00FD59  0008               	dw	8
  1682  00FD5B  0010               	dw	16
  1683  00FD5D  0010               	dw	16
  1684  00FD5F  0010               	dw	16
  1685  00FD61  0010               	dw	16
  1686  00FD63  0010               	dw	16
  1687  00FD65  0010               	dw	16
  1688  00FD67  0010               	dw	16
  1689  00FD69  0010               	dw	16
  1690  00FD6B  0010               	dw	16
  1691  00FD6D  0010               	dw	16
  1692  00FD6F  0020               	dw	32
  1693  00FD71  0008               	dw	8
  1694  00FD73  00F0               	dw	240
  1695  00FD75  00FF               	dw	255
  1696  00FD77  0000               	dw	0
  1697  00FD79  0000               	dw	0
  1698  00FD7B  0006               	dw	6
  1699  00FD7D  0000               	dw	0
  1700  00FD7F  0000               	dw	0
  1701  00FD81  00F0               	dw	240
  1702  00FD83  001F               	dw	31
  1703  00FD85  0020               	dw	32
  1704  00FD87  0000               	dw	0
  1705  00FD89  0010               	dw	16
  1706  00FD8B  0000               	dw	0
  1707  00FD8D  0010               	dw	16
  1708  00FD8F  0000               	dw	0
  1709  00FD91  0000               	dw	0
  1710  00FD93  0000               	dw	0
  1711  00FD95  0006               	dw	6
  1712  00FD97  0060               	dw	96
  1713  00FD99  0008               	dw	8
  1714  00FD9B  0090               	dw	144
  1715  00FD9D  0010               	dw	16
  1716  00FD9F  0010               	dw	16
  1717  00FDA1  0011               	dw	17
  1718  00FDA3  0010               	dw	16
  1719  00FDA5  0011               	dw	17
  1720  00FDA7  0020               	dw	32
  1721  00FDA9  000E               	dw	14
  1722  00FDAB  0000               	dw	0
  1723  00FDAD  0000               	dw	0
  1724  00FDAF  0007               	dw	7
  1725  00FDB1  0000               	dw	0
  1726  00FDB3  0000               	dw	0
  1727  00FDB5  0010               	dw	16
  1728  00FDB7  0000               	dw	0
  1729  00FDB9  0010               	dw	16
  1730  00FDBB  0000               	dw	0
  1731  00FDBD  00FE               	dw	254
  1732  00FDBF  001F               	dw	31
  1733  00FDC1  0010               	dw	16
  1734  00FDC3  0000               	dw	0
  1735  00FDC5  0010               	dw	16
  1736  00FDC7  0000               	dw	0
  1737  00FDC9  0000               	dw	0
  1738  00FDCB  0000               	dw	0
  1739  00FDCD  000A               	dw	10
  1740  00FDCF  0000               	dw	0
  1741  00FDD1  0000               	dw	0
  1742  00FDD3  00F0               	dw	240
  1743  00FDD5  0007               	dw	7
  1744  00FDD7  0000               	dw	0
  1745  00FDD9  0008               	dw	8
  1746  00FDDB  0000               	dw	0
  1747  00FDDD  0010               	dw	16
  1748  00FDDF  0000               	dw	0
  1749  00FDE1  0010               	dw	16
  1750  00FDE3  0000               	dw	0
  1751  00FDE5  0010               	dw	16
  1752  00FDE7  0000               	dw	0
  1753  00FDE9  0010               	dw	16
  1754  00FDEB  0000               	dw	0
  1755  00FDED  0008               	dw	8
  1756  00FDEF  00F0               	dw	240
  1757  00FDF1  0007               	dw	7
  1758  00FDF3  0000               	dw	0
  1759  00FDF5  0000               	dw	0
  1760  00FDF7  000A               	dw	10
  1761  00FDF9  0010               	dw	16
  1762  00FDFB  0000               	dw	0
  1763  00FDFD  0060               	dw	96
  1764  00FDFF  0000               	dw	0
  1765  00FE01  0080               	dw	128
  1766  00FE03  0003               	dw	3
  1767  00FE05  0000               	dw	0
  1768  00FE07  000C               	dw	12
  1769  00FE09  0000               	dw	0
  1770  00FE0B  0010               	dw	16
  1771  00FE0D  0000               	dw	0
  1772  00FE0F  000C               	dw	12
  1773  00FE11  0080               	dw	128
  1774  00FE13  0003               	dw	3
  1775  00FE15  0060               	dw	96
  1776  00FE17  0000               	dw	0
  1777  00FE19  0010               	dw	16
  1778  00FE1B  0000               	dw	0
  1779  00FE1D  0000               	dw	0
  1780  00FE1F  0000               	dw	0
  1781  00FE21  000E               	dw	14
  1782  00FE23  0010               	dw	16
  1783  00FE25  0000               	dw	0
  1784  00FE27  00E0               	dw	224
  1785  00FE29  0000               	dw	0
  1786  00FE2B  0000               	dw	0
  1787  00FE2D  0007               	dw	7
  1788  00FE2F  0000               	dw	0
  1789  00FE31  0018               	dw	24
  1790  00FE33  0000               	dw	0
  1791  00FE35  0007               	dw	7
  1792  00FE37  00E0               	dw	224
  1793  00FE39  0000               	dw	0
  1794  00FE3B  0010               	dw	16
  1795  00FE3D  0000               	dw	0
  1796  00FE3F  00E0               	dw	224
  1797  00FE41  0000               	dw	0
  1798  00FE43  0000               	dw	0
  1799  00FE45  0007               	dw	7
  1800  00FE47  0000               	dw	0
  1801  00FE49  0018               	dw	24
  1802  00FE4B  0000               	dw	0
  1803  00FE4D  0007               	dw	7
  1804  00FE4F  00E0               	dw	224
  1805  00FE51  0000               	dw	0
  1806  00FE53  0010               	dw	16
  1807  00FE55  0000               	dw	0
  1808  00FE57  0000               	dw	0
  1809  00FE59  0000               	dw	0
  1810  00FE5B  0009               	dw	9
  1811  00FE5D  0010               	dw	16
  1812  00FE5F  0010               	dw	16
  1813  00FE61  0020               	dw	32
  1814  00FE63  0008               	dw	8
  1815  00FE65  0040               	dw	64
  1816  00FE67  0004               	dw	4
  1817  00FE69  0080               	dw	128
  1818  00FE6B  0003               	dw	3
  1819  00FE6D  0080               	dw	128
  1820  00FE6F  0003               	dw	3
  1821  00FE71  0040               	dw	64
  1822  00FE73  0004               	dw	4
  1823  00FE75  0020               	dw	32
  1824  00FE77  0008               	dw	8
  1825  00FE79  0010               	dw	16
  1826  00FE7B  0010               	dw	16
  1827  00FE7D  0000               	dw	0
  1828  00FE7F  0000               	dw	0
  1829  00FE81  0009               	dw	9
  1830  00FE83  0010               	dw	16
  1831  00FE85  0000               	dw	0
  1832  00FE87  00E0               	dw	224
  1833  00FE89  0000               	dw	0
  1834  00FE8B  0000               	dw	0
  1835  00FE8D  0083               	dw	131
  1836  00FE8F  0000               	dw	0
  1837  00FE91  007C               	dw	124
  1838  00FE93  0000               	dw	0
  1839  00FE95  000C               	dw	12
  1840  00FE97  0000               	dw	0
  1841  00FE99  0003               	dw	3
  1842  00FE9B  00E0               	dw	224
  1843  00FE9D  0000               	dw	0
  1844  00FE9F  0010               	dw	16
  1845  00FEA1  0000               	dw	0
  1846  00FEA3  0000               	dw	0
  1847  00FEA5  0000               	dw	0
  1848  00FEA7  0008               	dw	8
  1849  00FEA9  0010               	dw	16
  1850  00FEAB  0010               	dw	16
  1851  00FEAD  0010               	dw	16
  1852  00FEAF  0018               	dw	24
  1853  00FEB1  0010               	dw	16
  1854  00FEB3  0016               	dw	22
  1855  00FEB5  0010               	dw	16
  1856  00FEB7  0011               	dw	17
  1857  00FEB9  00D0               	dw	208
  1858  00FEBB  0010               	dw	16
  1859  00FEBD  0030               	dw	48
  1860  00FEBF  0010               	dw	16
  1861  00FEC1  0010               	dw	16
  1862  00FEC3  0010               	dw	16
  1863  00FEC5  0000               	dw	0
  1864  00FEC7  0000               	dw	0
  1865  00FEC9  0007               	dw	7
  1866  00FECB  0000               	dw	0
  1867  00FECD  0000               	dw	0
  1868  00FECF  0000               	dw	0
  1869  00FED1  0001               	dw	1
  1870  00FED3  0080               	dw	128
  1871  00FED5  0002               	dw	2
  1872  00FED7  00FC               	dw	252
  1873  00FED9  007E               	dw	126
  1874  00FEDB  0002               	dw	2
  1875  00FEDD  0080               	dw	128
  1876  00FEDF  0002               	dw	2
  1877  00FEE1  0080               	dw	128
  1878  00FEE3  0000               	dw	0
  1879  00FEE5  0000               	dw	0
  1880  00FEE7  0007               	dw	7
  1881  00FEE9  0000               	dw	0
  1882  00FEEB  0000               	dw	0
  1883  00FEED  0000               	dw	0
  1884  00FEEF  0000               	dw	0
  1885  00FEF1  0000               	dw	0
  1886  00FEF3  0000               	dw	0
  1887  00FEF5  0000               	dw	0
  1888  00FEF7  0000               	dw	0
  1889  00FEF9  0000               	dw	0
  1890  00FEFB  0000               	dw	0
  1891  00FEFD  00FE               	dw	254
  1892  00FEFF  00FF               	dw	255
  1893  00FF01  0000               	dw	0
  1894  00FF03  0000               	dw	0
  1895  00FF05  0006               	dw	6
  1896  00FF07  0002               	dw	2
  1897  00FF09  0080               	dw	128
  1898  00FF0B  0002               	dw	2
  1899  00FF0D  0080               	dw	128
  1900  00FF0F  00FC               	dw	252
  1901  00FF11  007E               	dw	126
  1902  00FF13  0080               	dw	128
  1903  00FF15  0002               	dw	2
  1904  00FF17  0000               	dw	0
  1905  00FF19  0001               	dw	1
  1906  00FF1B  0000               	dw	0
  1907  00FF1D  0000               	dw	0
  1908  00FF1F  000A               	dw	10
  1909  00FF21  0000               	dw	0
  1910  00FF23  0000               	dw	0
  1911  00FF25  0080               	dw	128
  1912  00FF27  0000               	dw	0
  1913  00FF29  0040               	dw	64
  1914  00FF2B  0000               	dw	0
  1915  00FF2D  0040               	dw	64
  1916  00FF2F  0000               	dw	0
  1917  00FF31  0040               	dw	64
  1918  00FF33  0000               	dw	0
  1919  00FF35  0080               	dw	128
  1920  00FF37  0000               	dw	0
  1921  00FF39  0080               	dw	128
  1922  00FF3B  0000               	dw	0
  1923  00FF3D  0080               	dw	128
  1924  00FF3F  0000               	dw	0
  1925  00FF41  0040               	dw	64
  1926  00FF43  0000               	dw	0
  1927  00FF45  0000               	dw	0
  1928  00FF47  0000               	dw	0
  1929  00FF49  0005               	dw	5
  1930  00FF4B  00FF               	dw	255
  1931  00FF4D  000F               	dw	15
  1932  00FF4F  0001               	dw	1
  1933  00FF51  0008               	dw	8
  1934  00FF53  0001               	dw	1
  1935  00FF55  0008               	dw	8
  1936  00FF57  00FF               	dw	255
  1937  00FF59  000F               	dw	15
  1938  00FF5B  0000               	dw	0
  1939  00FF5D  0000               	dw	0
  1940  00FF5F                     __end_of_font:
  1941                           	opt callstack 0
  1942  00FF5F                     _spi_configuration:
  1943                           	opt callstack 0
  1944  00FF5F  00                 	db	0
  1945  00FF60  40                 	db	64
  1946  00FF61  01                 	db	1
  1947  00FF62  00                 	db	0
  1948  00FF63                     __end_of_spi_configuration:
  1949                           	opt callstack 0
  1950  00FF63                     STR_1:
  1951  00FF63  58                 	db	88	;'X'
  1952  00FF64  43                 	db	67	;'C'
  1953  00FF65  38                 	db	56	;'8'
  1954  00FF66  20                 	db	32
  1955  00FF67  2D                 	db	45
  1956  00FF68  20                 	db	32
  1957  00FF69  42                 	db	66	;'B'
  1958  00FF6A  69                 	db	105	;'i'
  1959  00FF6B  62                 	db	98	;'b'
  1960  00FF6C  6C                 	db	108	;'l'
  1961  00FF6D  69                 	db	105	;'i'
  1962  00FF6E  6F                 	db	111	;'o'
  1963  00FF6F  74                 	db	116	;'t'
  1964  00FF70  65                 	db	101	;'e'
  1965  00FF71  63                 	db	99	;'c'
  1966  00FF72  61                 	db	97	;'a'
  1967  00FF73  20                 	db	32
  1968  00FF74  2D                 	db	45
  1969  00FF75  20                 	db	32
  1970  00FF76  4C                 	db	76	;'L'
  1971  00FF77  43                 	db	67	;'C'
  1972  00FF78  44                 	db	68	;'D'
  1973  00FF79  20                 	db	32
  1974  00FF7A  2D                 	db	45
  1975  00FF7B  20                 	db	32
  1976  00FF7C  49                 	db	73	;'I'
  1977  00FF7D  4C                 	db	76	;'L'
  1978  00FF7E  49                 	db	73	;'I'
  1979  00FF7F  39                 	db	57	;'9'
  1980  00FF80  33                 	db	51	;'3'
  1981  00FF81  34                 	db	52	;'4'
  1982  00FF82  31                 	db	49	;'1'
  1983  00FF83  00                 	db	0
  1984  00FF84                     STR_4:
  1985  00FF84  70                 	db	112	;'p'
  1986  00FF85  65                 	db	101	;'e'
  1987  00FF86  72                 	db	114	;'r'
  1988  00FF87  63                 	db	99	;'c'
  1989  00FF88  65                 	db	101	;'e'
  1990  00FF89  6E                 	db	110	;'n'
  1991  00FF8A  74                 	db	116	;'t'
  1992  00FF8B  61                 	db	97	;'a'
  1993  00FF8C  67                 	db	103	;'g'
  1994  00FF8D  65                 	db	101	;'e'
  1995  00FF8E  6D                 	db	109	;'m'
  1996  00FF8F  20                 	db	32
  1997  00FF90  3D                 	db	61	;'='
  1998  00FF91  20                 	db	32
  1999  00FF92  25                 	db	37
  2000  00FF93  2E                 	db	46
  2001  00FF94  66                 	db	102	;'f'
  2002  00FF95  20                 	db	32
  2003  00FF96  20                 	db	32
  2004  00FF97  00                 	db	0
  2005  00FF98                     STR_3:
  2006  00FF98  52                 	db	82	;'R'
  2007  00FF99  50                 	db	80	;'P'
  2008  00FF9A  4D                 	db	77	;'M'
  2009  00FF9B  3D                 	db	61	;'='
  2010  00FF9C  20                 	db	32
  2011  00FF9D  25                 	db	37
  2012  00FF9E  64                 	db	100	;'d'
  2013  00FF9F  20                 	db	32
  2014  00FFA0  20                 	db	32
  2015  00FFA1  20                 	db	32
  2016  00FFA2  20                 	db	32
  2017  00FFA3  20                 	db	32
  2018  00FFA4  20                 	db	32
  2019  00FFA5  00                 	db	0
  2020  00FFA6                     STR_2:
  2021  00FFA6  50                 	db	80	;'P'
  2022  00FFA7  49                 	db	73	;'I'
  2023  00FFA8  43                 	db	67	;'C'
  2024  00FFA9  20                 	db	32
  2025  00FFAA  2D                 	db	45
  2026  00FFAB  20                 	db	32
  2027  00FFAC  53                 	db	83	;'S'
  2028  00FFAD  45                 	db	69	;'E'
  2029  00FFAE  45                 	db	69	;'E'
  2030  00FFAF  56                 	db	86	;'V'
  2031  00FFB0  00                 	db	0
  2032  00FFB1                     STR_5:
  2033  00FFB1  54                 	db	84	;'T'
  2034  00FFB2  45                 	db	69	;'E'
  2035  00FFB3  53                 	db	83	;'S'
  2036  00FFB4  54                 	db	84	;'T'
  2037  00FFB5  45                 	db	69	;'E'
  2038  00FFB6  20                 	db	32
  2039  00FFB7  25                 	db	37
  2040  00FFB8  64                 	db	100	;'d'
  2041  00FFB9  00                 	db	0
  2042  00FFBA                     STR_6:
  2043  00FFBA  49                 	db	73	;'I'
  2044  00FFBB  4E                 	db	78	;'N'
  2045  00FFBC  46                 	db	70	;'F'
  2046  00FFBD  00                 	db	0
  2047  00FFBE                     STR_10:
  2048  00FFBE  4E                 	db	78	;'N'
  2049  00FFBF  41                 	db	65	;'A'
  2050  00FFC0  4E                 	db	78	;'N'
  2051  00FFC1  00                 	db	0
  2052  00FFC2                     STR_95:
  2053  00FFC2  68                 	db	104	;'h'
  2054  00FFC3  68                 	db	104	;'h'
  2055  00FFC4  58                 	db	88	;'X'
  2056  00FFC5  00                 	db	0
  2057  00FFC6                     STR_14:
  2058  00FFC6  68                 	db	104	;'h'
  2059  00FFC7  68                 	db	104	;'h'
  2060  00FFC8  64                 	db	100	;'d'
  2061  00FFC9  00                 	db	0
  2062  00FFCA                     STR_7:
  2063  00FFCA  69                 	db	105	;'i'
  2064  00FFCB  6E                 	db	110	;'n'
  2065  00FFCC  66                 	db	102	;'f'
  2066  00FFCD  00                 	db	0
  2067  00FFCE                     STR_18:
  2068  00FFCE  68                 	db	104	;'h'
  2069  00FFCF  68                 	db	104	;'h'
  2070  00FFD0  69                 	db	105	;'i'
  2071  00FFD1  00                 	db	0
  2072  00FFD2                     STR_11:
  2073  00FFD2  6E                 	db	110	;'n'
  2074  00FFD3  61                 	db	97	;'a'
  2075  00FFD4  6E                 	db	110	;'n'
  2076  00FFD5  00                 	db	0
  2077  00FFD6                     STR_61:
  2078  00FFD6  68                 	db	104	;'h'
  2079  00FFD7  68                 	db	104	;'h'
  2080  00FFD8  6E                 	db	110	;'n'
  2081  00FFD9  00                 	db	0
  2082  00FFDA                     STR_46:
  2083  00FFDA  68                 	db	104	;'h'
  2084  00FFDB  68                 	db	104	;'h'
  2085  00FFDC  6F                 	db	111	;'o'
  2086  00FFDD  00                 	db	0
  2087  00FFDE                     STR_76:
  2088  00FFDE  68                 	db	104	;'h'
  2089  00FFDF  68                 	db	104	;'h'
  2090  00FFE0  75                 	db	117	;'u'
  2091  00FFE1  00                 	db	0
  2092  00FFE2                     STR_91:
  2093  00FFE2  68                 	db	104	;'h'
  2094  00FFE3  68                 	db	104	;'h'
  2095  00FFE4  78                 	db	120	;'x'
  2096  00FFE5  00                 	db	0
  2097  00FFE6                     STR_113:
  2098  00FFE6  7A                 	db	122	;'z'
  2099  00FFE7  58                 	db	88	;'X'
  2100  00FFE8  00                 	db	0
  2101  00FFE9                     STR_32:
  2102  00FFE9  7A                 	db	122	;'z'
  2103  00FFEA  64                 	db	100	;'d'
  2104  00FFEB  00                 	db	0
  2105  00FFEC                     STR_41:
  2106  00FFEC  6C                 	db	108	;'l'
  2107  00FFED  66                 	db	102	;'f'
  2108  00FFEE  00                 	db	0
  2109  00FFEF                     STR_36:
  2110  00FFEF  7A                 	db	122	;'z'
  2111  00FFF0  69                 	db	105	;'i'
  2112  00FFF1  00                 	db	0
  2113  00FFF2                     STR_71:
  2114  00FFF2  7A                 	db	122	;'z'
  2115  00FFF3  6E                 	db	110	;'n'
  2116  00FFF4  00                 	db	0
  2117  00FFF5                     STR_56:
  2118  00FFF5  7A                 	db	122	;'z'
  2119  00FFF6  6F                 	db	111	;'o'
  2120  00FFF7  00                 	db	0
  2121  00FFF8                     STR_86:
  2122  00FFF8  7A                 	db	122	;'z'
  2123  00FFF9  75                 	db	117	;'u'
  2124  00FFFA  00                 	db	0
  2125  00FFFB                     STR_109:
  2126  00FFFB  7A                 	db	122	;'z'
  2127  00FFFC  78                 	db	120	;'x'
  2128  00FFFD  00                 	db	0
  2129  0000                     
  2130                           ; #config settings
  2131  00FFFE  00                 	db	0	; dummy byte at the end
  2132  0000                     
  2133                           	psect	nvBANK0
  2134  0000FA                     __pnvBANK0:
  2135                           	opt callstack 0
  2136  0000FA                     _timer0ReloadVal:
  2137                           	opt callstack 0
  2138  0000FA                     	ds	2
  2139  0000FC                     _IOCB4_InterruptHandler:
  2140                           	opt callstack 0
  2141  0000FC                     	ds	2
  2142                           
  2143                           	psect	nvBANK1
  2144  0001B4                     __pnvBANK1:
  2145                           	opt callstack 0
  2146  0001B4                     _timer1ReloadVal:
  2147                           	opt callstack 0
  2148  0001B4                     	ds	2
  2149  0001B6                     _TMR2_InterruptHandler:
  2150                           	opt callstack 0
  2151  0001B6                     	ds	2
  2152  0001B8                     _INT0_InterruptHandler:
  2153                           	opt callstack 0
  2154  0001B8                     	ds	2
  2155  0001BA                     _ADC_InterruptHandler:
  2156                           	opt callstack 0
  2157  0001BA                     	ds	2
  2158  0000                     _IOCBbits	set	3930
  2159  0000                     _WPUB	set	3931
  2160  0000                     _ANCON1	set	3932
  2161  0000                     _ANCON0	set	3933
  2162  0000                     _T1GCONbits	set	4010
  2163  0000                     _T1CONbits	set	4045
  2164  0000                     _T1CON	set	4045
  2165  0000                     _TMR1L	set	4046
  2166  0000                     _TMR1H	set	4047
  2167  0000                     _T1GCON	set	4010
  2168  0000                     _LATEbits	set	3981
  2169  0000                     _SSPSTATbits	set	4039
  2170  0000                     _LATAbits	set	3977
  2171  0000                     _PORTBbits	set	3969
  2172  0000                     _T2CONbits	set	4042
  2173  0000                     _T2CON	set	4042
  2174  0000                     _TMR2	set	4044
  2175  0000                     _PR2	set	4043
  2176  0000                     _T0CON	set	4053
  2177  0000                     _TMR0L	set	4054
  2178  0000                     _TMR0H	set	4055
  2179  0000                     _T0CONbits	set	4053
  2180  0000                     _ADCON0bits	set	4034
  2181  0000                     _ADRESL	set	4035
  2182  0000                     _ADRESH	set	4036
  2183  0000                     _ADCON2	set	4032
  2184  0000                     _ADCON1	set	4033
  2185  0000                     _ADCON0	set	4034
  2186  0000                     _SSPBUF	set	4041
  2187  0000                     _SSPCON2	set	4037
  2188  0000                     _SSPCON1bits	set	4038
  2189  0000                     _TRISCbits	set	3988
  2190  0000                     _SSPADD	set	4040
  2191  0000                     _SSPCON1	set	4038
  2192  0000                     _SSPSTAT	set	4039
  2193  0000                     _PIR1bits	set	3998
  2194  0000                     _PIE1bits	set	3997
  2195  0000                     _RCONbits	set	4048
  2196  0000                     _REFOCON	set	3994
  2197  0000                     _OSCTUNE	set	3995
  2198  0000                     _OSCCON2	set	4050
  2199  0000                     _OSCCON	set	4051
  2200  0000                     _INTCONbits	set	4082
  2201  0000                     _INTCON2bits	set	4081
  2202  0000                     _TRISD	set	3989
  2203  0000                     _TRISC	set	3988
  2204  0000                     _TRISB	set	3987
  2205  0000                     _TRISA	set	3986
  2206  0000                     _TRISE	set	3990
  2207  0000                     _LATC	set	3979
  2208  0000                     _LATB	set	3978
  2209  0000                     _LATA	set	3977
  2210  0000                     _LATD	set	3980
  2211  0000                     _LATE	set	3981
  2212                           
  2213                           	psect	cinit
  2214  0057D8                     __pcinit:
  2215                           	opt callstack 0
  2216  0057D8                     start_initialization:
  2217                           	opt callstack 0
  2218  0057D8                     __initialization:
  2219                           	opt callstack 0
  2220                           
  2221                           ; Initialize objects allocated to BANK1 (7 bytes)
  2222                           ; load TBLPTR registers with __pidataBANK1
  2223  0057D8  0EDA               	movlw	low __pidataBANK1
  2224  0057DA  6EF6               	movwf	tblptrl,c
  2225  0057DC  0E60               	movlw	high __pidataBANK1
  2226  0057DE  6EF7               	movwf	tblptrh,c
  2227  0057E0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2228  0057E2  6EF8               	movwf	tblptru,c
  2229  0057E4  EE01  F0BC         	lfsr	0,__pdataBANK1
  2230  0057E8  EE10 F007          	lfsr	1,7
  2231  0057EC                     copy_data0:
  2232  0057EC  0009               	tblrd		*+
  2233  0057EE  CFF5 FFEE          	movff	tablat,postinc0
  2234  0057F2  50E5               	movf	postdec1,w,c
  2235  0057F4  50E1               	movf	fsr1l,w,c
  2236  0057F6  E1FA               	bnz	copy_data0
  2237                           
  2238                           ; Initialize objects allocated to BANK0 (2 bytes)
  2239                           ; load TBLPTR registers with __pidataBANK0
  2240  0057F8  0EE6               	movlw	low __pidataBANK0
  2241  0057FA  6EF6               	movwf	tblptrl,c
  2242  0057FC  0E60               	movlw	high __pidataBANK0
  2243  0057FE  6EF7               	movwf	tblptrh,c
  2244  005800  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2245  005802  6EF8               	movwf	tblptru,c
  2246  005804  0009               	tblrd		*+	;fetch initializer
  2247  005806  CFF5 F0FE          	movff	tablat,__pdataBANK0
  2248  00580A  0009               	tblrd		*+	;fetch initializer
  2249  00580C  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
  2250                           
  2251                           ; Clear objects allocated to BANK2 (200 bytes)
  2252  005810  EE02  F000         	lfsr	0,__pbssBANK2
  2253  005814  0EC8               	movlw	200
  2254  005816                     clear_0:
  2255  005816  6AEE               	clrf	postinc0,c
  2256  005818  06E8               	decf	wreg,f,c
  2257  00581A  E1FD               	bnz	clear_0
  2258                           
  2259                           ; Clear objects allocated to BANK1 (180 bytes)
  2260  00581C  EE01  F000         	lfsr	0,__pbssBANK1
  2261  005820  0EB4               	movlw	180
  2262  005822                     clear_1:
  2263  005822  6AEE               	clrf	postinc0,c
  2264  005824  06E8               	decf	wreg,f,c
  2265  005826  E1FD               	bnz	clear_1
  2266                           
  2267                           ; Clear objects allocated to BANK0 (30 bytes)
  2268  005828  EE00  F0DC         	lfsr	0,__pbssBANK0
  2269  00582C  0E1E               	movlw	30
  2270  00582E                     clear_2:
  2271  00582E  6AEE               	clrf	postinc0,c
  2272  005830  06E8               	decf	wreg,f,c
  2273  005832  E1FD               	bnz	clear_2
  2274                           
  2275                           ; Clear objects allocated to COMRAM (4 bytes)
  2276  005834  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2277  005836  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2278  005838  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2279  00583A  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2280  00583C                     end_of_initialization:
  2281                           	opt callstack 0
  2282  00583C                     __end_of__initialization:
  2283                           	opt callstack 0
  2284  00583C  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2285  00583E  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2286  005840  0100               	movlb	0
  2287  005842  EF89  F01B         	goto	_main	;jump to C main() function
  2288                           
  2289                           	psect	bssCOMRAM
  2290  000057                     __pbssCOMRAM:
  2291                           	opt callstack 0
  2292  000057                     _prec:
  2293                           	opt callstack 0
  2294  000057                     	ds	2
  2295  000059                     _flags:
  2296                           	opt callstack 0
  2297  000059                     	ds	2
  2298                           
  2299                           	psect	bssBANK0
  2300  0000DC                     __pbssBANK0:
  2301                           	opt callstack 0
  2302  0000DC                     floorf@F524:
  2303                           	opt callstack 0
  2304  0000DC                     	ds	4
  2305  0000E0                     ___fpclassifyf@F463:
  2306                           	opt callstack 0
  2307  0000E0                     	ds	4
  2308  0000E4                     _percentagem:
  2309                           	opt callstack 0
  2310  0000E4                     	ds	4
  2311  0000E8                     _errno:
  2312                           	opt callstack 0
  2313  0000E8                     	ds	2
  2314  0000EA                     _nout:
  2315                           	opt callstack 0
  2316  0000EA                     	ds	2
  2317  0000EC                     _width:
  2318                           	opt callstack 0
  2319  0000EC                     	ds	2
  2320  0000EE                     _global_bg_color:
  2321                           	opt callstack 0
  2322  0000EE                     	ds	2
  2323  0000F0                     _teste:
  2324                           	opt callstack 0
  2325  0000F0                     	ds	2
  2326  0000F2                     _rpm:
  2327                           	opt callstack 0
  2328  0000F2                     	ds	2
  2329  0000F4                     _codigo_digital:
  2330                           	opt callstack 0
  2331  0000F4                     	ds	2
  2332  0000F6                     TMR2_ISR@CountCallBack:
  2333                           	opt callstack 0
  2334  0000F6                     	ds	2
  2335  0000F8                     _ticks:
  2336                           	opt callstack 0
  2337  0000F8                     	ds	2
  2338                           
  2339                           	psect	dataBANK0
  2340  0000FE                     __pdataBANK0:
  2341                           	opt callstack 0
  2342  0000FE                     _pot_comparacao:
  2343                           	opt callstack 0
  2344  0000FE                     	ds	2
  2345                           
  2346                           	psect	bssBANK1
  2347  000100                     __pbssBANK1:
  2348                           	opt callstack 0
  2349  000100                     _string:
  2350                           	opt callstack 0
  2351  000100                     	ds	100
  2352  000164                     _dbuf:
  2353                           	opt callstack 0
  2354  000164                     	ds	80
  2355                           
  2356                           	psect	dataBANK1
  2357  0001BC                     __pdataBANK1:
  2358                           	opt callstack 0
  2359  0001BC                     stoa@F1174:
  2360                           	opt callstack 0
  2361  0001BC                     	ds	7
  2362                           
  2363                           	psect	bssBANK2
  2364  000200                     __pbssBANK2:
  2365                           	opt callstack 0
  2366  000200                     _steste:
  2367                           	opt callstack 0
  2368  000200                     	ds	100
  2369  000264                     _string_rpm:
  2370                           	opt callstack 0
  2371  000264                     	ds	100
  2372                           
  2373                           	psect	cstackBANK1
  2374  0001C3                     __pcstackBANK1:
  2375                           	opt callstack 0
  2376  0001C3                     	ds	2
  2377  0001C5                     snprintf@ap:
  2378                           	opt callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x2
  2381  0001C5                     	ds	2
  2382                           
  2383                           	psect	cstackBANK0
  2384  000060                     __pcstackBANK0:
  2385                           	opt callstack 0
  2386  000060                     efgtoa@ou:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 4 bytes @ 0x0
  2390  000060                     	ds	4
  2391  000064                     _efgtoa$1717:
  2392                           	opt callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x4
  2395  000064                     	ds	2
  2396  000066                     _efgtoa$1718:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x6
  2400  000066                     	ds	2
  2401  000068                     _efgtoa$1722:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x8
  2405  000068                     	ds	2
  2406  00006A                     _efgtoa$1726:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0xA
  2410  00006A                     	ds	2
  2411  00006C                     _efgtoa$1727:
  2412                           	opt callstack 0
  2413                           
  2414                           ; 2 bytes @ 0xC
  2415  00006C                     	ds	2
  2416  00006E                     _efgtoa$1728:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 2 bytes @ 0xE
  2420  00006E                     	ds	2
  2421  000070                     efgtoa@t:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 2 bytes @ 0x10
  2425  000070                     	ds	2
  2426  000072                     efgtoa@pp:
  2427                           	opt callstack 0
  2428                           
  2429                           ; 2 bytes @ 0x12
  2430  000072                     	ds	2
  2431  000074                     efgtoa@m:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x14
  2435  000074                     	ds	2
  2436  000076                     efgtoa@ne:
  2437                           	opt callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x16
  2440  000076                     	ds	2
  2441  000078                     efgtoa@d:
  2442                           	opt callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x18
  2445  000078                     	ds	2
  2446  00007A                     efgtoa@sign:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x1A
  2450  00007A                     	ds	2
  2451  00007C                     efgtoa@p:
  2452                           	opt callstack 0
  2453                           
  2454                           ; 2 bytes @ 0x1C
  2455  00007C                     	ds	2
  2456  00007E                     efgtoa@nmode:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 1 bytes @ 0x1E
  2460  00007E                     	ds	1
  2461  00007F                     efgtoa@w:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 2 bytes @ 0x1F
  2465  00007F                     	ds	2
  2466  000081                     efgtoa@mode:
  2467                           	opt callstack 0
  2468                           
  2469                           ; 1 bytes @ 0x21
  2470  000081                     	ds	1
  2471  000082                     efgtoa@h:
  2472                           	opt callstack 0
  2473                           
  2474                           ; 4 bytes @ 0x22
  2475  000082                     	ds	4
  2476  000086                     efgtoa@l:
  2477                           	opt callstack 0
  2478                           
  2479                           ; 4 bytes @ 0x26
  2480  000086                     	ds	4
  2481  00008A                     efgtoa@i:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x2A
  2485  00008A                     	ds	2
  2486  00008C                     efgtoa@g:
  2487                           	opt callstack 0
  2488                           
  2489                           ; 4 bytes @ 0x2C
  2490  00008C                     	ds	4
  2491  000090                     efgtoa@e:
  2492                           	opt callstack 0
  2493                           
  2494                           ; 2 bytes @ 0x30
  2495  000090                     	ds	2
  2496  000092                     efgtoa@n:
  2497                           	opt callstack 0
  2498                           
  2499                           ; 2 bytes @ 0x32
  2500  000092                     	ds	2
  2501  000094                     efgtoa@u:
  2502                           	opt callstack 0
  2503                           
  2504                           ; 4 bytes @ 0x34
  2505  000094                     	ds	4
  2506  000098                     vfpfcnvrt@cp:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 2 bytes @ 0x38
  2510  000098                     	ds	2
  2511  00009A                     vfpfcnvrt@done:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x3A
  2515  00009A                     	ds	2
  2516  00009C                     _vfpfcnvrt$1779:
  2517                           	opt callstack 0
  2518                           
  2519                           ; 2 bytes @ 0x3C
  2520  00009C                     	ds	2
  2521  00009E                     _vfpfcnvrt$1780:
  2522                           	opt callstack 0
  2523                           
  2524                           ; 2 bytes @ 0x3E
  2525  00009E                     	ds	2
  2526  0000A0                     _vfpfcnvrt$1801:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 2 bytes @ 0x40
  2530  0000A0                     	ds	2
  2531  0000A2                     vfpfcnvrt@f:
  2532                           	opt callstack 0
  2533                           
  2534                           ; 4 bytes @ 0x42
  2535  0000A2                     	ds	4
  2536  0000A6                     vfpfcnvrt@ct:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 3 bytes @ 0x46
  2540  0000A6                     	ds	3
  2541  0000A9                     vfpfcnvrt@ll:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 8 bytes @ 0x49
  2545  0000A9                     	ds	8
  2546  0000B1                     vfpfcnvrt@vp:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x51
  2550  0000B1                     	ds	2
  2551  0000B3                     vfpfcnvrt@c:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 1 bytes @ 0x53
  2555  0000B3                     	ds	1
  2556  0000B4                     vfpfcnvrt@llu:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 8 bytes @ 0x54
  2560  0000B4                     	ds	8
  2561  0000BC                     ?_vsnprintf:
  2562                           	opt callstack 0
  2563  0000BC                     vsnprintf@s:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0x5C
  2567  0000BC                     	ds	2
  2568  0000BE                     vsnprintf@n:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x5E
  2572  0000BE                     	ds	2
  2573  0000C0                     vsnprintf@fmt:
  2574                           	opt callstack 0
  2575                           
  2576                           ; 2 bytes @ 0x60
  2577  0000C0                     	ds	2
  2578  0000C2                     vsnprintf@ap:
  2579                           	opt callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x62
  2582  0000C2                     	ds	2
  2583  0000C4                     ??_vsnprintf:
  2584                           
  2585                           ; 1 bytes @ 0x64
  2586  0000C4                     	ds	4
  2587  0000C8                     _vsnprintf$2532:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x68
  2591  0000C8                     	ds	2
  2592  0000CA                     vsnprintf@cnt:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 2 bytes @ 0x6A
  2596  0000CA                     	ds	2
  2597  0000CC                     vsnprintf@f:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 6 bytes @ 0x6C
  2601  0000CC                     	ds	6
  2602  0000D2                     ?_snprintf:
  2603                           	opt callstack 0
  2604  0000D2                     snprintf@s:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x72
  2608  0000D2                     	ds	2
  2609  0000D4                     snprintf@n:
  2610                           	opt callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x74
  2613  0000D4                     	ds	2
  2614  0000D6                     snprintf@fmt:
  2615                           	opt callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x76
  2618  0000D6                     	ds	6
  2619                           
  2620                           	psect	cstackCOMRAM
  2621  000001                     __pcstackCOMRAM:
  2622                           	opt callstack 0
  2623  000001                     ??_INTERRUPT_InterruptManager:
  2624  000001                     
  2625                           ; 1 bytes @ 0x0
  2626  000001                     	ds	2
  2627  000003                     ??_TMR1_Initialize:
  2628  000003                     ??_TMR0_Initialize:
  2629  000003                     ??_SPI_Open:
  2630  000003                     ??_msDelay:
  2631  000003                     ?_strlen:
  2632                           	opt callstack 0
  2633  000003                     ?___fpclassifyf:
  2634                           	opt callstack 0
  2635  000003                     ?_isupper:
  2636                           	opt callstack 0
  2637  000003                     ?_isalpha:
  2638                           	opt callstack 0
  2639  000003                     ?_isdigit:
  2640                           	opt callstack 0
  2641  000003                     ?_strncmp:
  2642                           	opt callstack 0
  2643  000003                     ?_isspace:
  2644                           	opt callstack 0
  2645  000003                     ?_islower:
  2646                           	opt callstack 0
  2647  000003                     ?___wmul:
  2648                           	opt callstack 0
  2649  000003                     ?___awdiv:
  2650                           	opt callstack 0
  2651  000003                     ?___awmod:
  2652                           	opt callstack 0
  2653  000003                     ?___fladd:
  2654                           	opt callstack 0
  2655  000003                     ?___fldiv:
  2656                           	opt callstack 0
  2657  000003                     ?___aldiv:
  2658                           	opt callstack 0
  2659  000003                     ?___flneg:
  2660                           	opt callstack 0
  2661  000003                     ?___fltol:
  2662                           	opt callstack 0
  2663  000003                     ?___xxtofl:
  2664                           	opt callstack 0
  2665  000003                     ?___aodiv:
  2666                           	opt callstack 0
  2667  000003                     ?___aomod:
  2668                           	opt callstack 0
  2669  000003                     ?___lodiv:
  2670                           	opt callstack 0
  2671  000003                     ?___lomod:
  2672                           	opt callstack 0
  2673  000003                     SPI_ExchangeByte@data:
  2674                           	opt callstack 0
  2675  000003                     IOCB4_SetInterruptHandler@InterruptHandler:
  2676                           	opt callstack 0
  2677  000003                     ADC_SetInterruptHandler@InterruptHandler:
  2678                           	opt callstack 0
  2679  000003                     INT0_SetInterruptHandler@InterruptHandler:
  2680                           	opt callstack 0
  2681  000003                     TMR2_SetInterruptHandler@InterruptHandler:
  2682                           	opt callstack 0
  2683  000003                     ___wmul@multiplier:
  2684                           	opt callstack 0
  2685  000003                     ___awdiv@dividend:
  2686                           	opt callstack 0
  2687  000003                     ___awmod@dividend:
  2688                           	opt callstack 0
  2689  000003                     isalpha@c:
  2690                           	opt callstack 0
  2691  000003                     isdigit@c:
  2692                           	opt callstack 0
  2693  000003                     isspace@c:
  2694                           	opt callstack 0
  2695  000003                     isupper@c:
  2696                           	opt callstack 0
  2697  000003                     fputc@c:
  2698                           	opt callstack 0
  2699  000003                     strcpy@dest:
  2700                           	opt callstack 0
  2701  000003                     strlen@s:
  2702                           	opt callstack 0
  2703  000003                     strncmp@_l:
  2704                           	opt callstack 0
  2705  000003                     islower@c:
  2706                           	opt callstack 0
  2707  000003                     ___aldiv@dividend:
  2708                           	opt callstack 0
  2709  000003                     ___fleq@ff1:
  2710                           	opt callstack 0
  2711  000003                     ___flneg@f1:
  2712                           	opt callstack 0
  2713  000003                     ___fltol@f1:
  2714                           	opt callstack 0
  2715  000003                     ___fladd@b:
  2716                           	opt callstack 0
  2717  000003                     ___fldiv@b:
  2718                           	opt callstack 0
  2719  000003                     ___xxtofl@val:
  2720                           	opt callstack 0
  2721  000003                     ___fpclassifyf@x:
  2722                           	opt callstack 0
  2723  000003                     ___aodiv@dividend:
  2724                           	opt callstack 0
  2725  000003                     ___aomod@dividend:
  2726                           	opt callstack 0
  2727  000003                     ___lodiv@dividend:
  2728                           	opt callstack 0
  2729  000003                     ___lomod@dividend:
  2730                           	opt callstack 0
  2731                           
  2732                           ; 8 bytes @ 0x2
  2733  000003                     	ds	1
  2734  000004                     SPI_Open@spiUniqueConfiguration:
  2735                           	opt callstack 0
  2736  000004                     msDelay@ms:
  2737                           	opt callstack 0
  2738  000004                     lcd_send@value:
  2739                           	opt callstack 0
  2740                           
  2741                           ; 1 bytes @ 0x3
  2742  000004                     	ds	1
  2743  000005                     ??_isupper:
  2744  000005                     ??_isalpha:
  2745  000005                     ??_isdigit:
  2746  000005                     ??_isspace:
  2747  000005                     ??_islower:
  2748  000005                     msDelay@k:
  2749                           	opt callstack 0
  2750  000005                     lcd_send@dc:
  2751                           	opt callstack 0
  2752  000005                     ___wmul@multiplicand:
  2753                           	opt callstack 0
  2754  000005                     ___awdiv@divisor:
  2755                           	opt callstack 0
  2756  000005                     ___awmod@divisor:
  2757                           	opt callstack 0
  2758  000005                     fputc@fp:
  2759                           	opt callstack 0
  2760  000005                     strcpy@src:
  2761                           	opt callstack 0
  2762  000005                     strlen@a:
  2763                           	opt callstack 0
  2764  000005                     strncmp@_r:
  2765                           	opt callstack 0
  2766                           
  2767                           ; 2 bytes @ 0x4
  2768  000005                     	ds	1
  2769  000006                     lcd_set_cursor_x@x:
  2770                           	opt callstack 0
  2771  000006                     lcd_set_cursor_y@y:
  2772                           	opt callstack 0
  2773  000006                     lcd_draw_pixel@color:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 2 bytes @ 0x5
  2777  000006                     	ds	1
  2778  000007                     ??_fputc:
  2779  000007                     ??___fpclassifyf:
  2780  000007                     ??_strcpy:
  2781  000007                     ??___fltol:
  2782  000007                     ??___xxtofl:
  2783  000007                     ___awdiv@counter:
  2784                           	opt callstack 0
  2785  000007                     ___awmod@counter:
  2786                           	opt callstack 0
  2787  000007                     ___wmul@product:
  2788                           	opt callstack 0
  2789  000007                     strncmp@n:
  2790                           	opt callstack 0
  2791  000007                     ___aldiv@divisor:
  2792                           	opt callstack 0
  2793  000007                     ___fleq@ff2:
  2794                           	opt callstack 0
  2795  000007                     ___fladd@a:
  2796                           	opt callstack 0
  2797  000007                     ___fldiv@a:
  2798                           	opt callstack 0
  2799                           
  2800                           ; 4 bytes @ 0x6
  2801  000007                     	ds	1
  2802  000008                     ___awdiv@sign:
  2803                           	opt callstack 0
  2804  000008                     ___awmod@sign:
  2805                           	opt callstack 0
  2806  000008                     lcd_set_cursor@x:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 2 bytes @ 0x7
  2810  000008                     	ds	1
  2811  000009                     ??_strncmp:
  2812  000009                     ?_tolower:
  2813                           	opt callstack 0
  2814  000009                     ?_toupper:
  2815                           	opt callstack 0
  2816  000009                     _isspace$2402:
  2817                           	opt callstack 0
  2818  000009                     ___awdiv@quotient:
  2819                           	opt callstack 0
  2820  000009                     strcpy@s:
  2821                           	opt callstack 0
  2822  000009                     tolower@c:
  2823                           	opt callstack 0
  2824  000009                     toupper@c:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x8
  2828  000009                     	ds	1
  2829  00000A                     ?_atoi:
  2830                           	opt callstack 0
  2831  00000A                     lcd_set_cursor@y:
  2832                           	opt callstack 0
  2833  00000A                     atoi@s:
  2834                           	opt callstack 0
  2835  00000A                     strncmp@l:
  2836                           	opt callstack 0
  2837                           
  2838                           ; 2 bytes @ 0x9
  2839  00000A                     	ds	1
  2840  00000B                     ??_tolower:
  2841  00000B                     ??_toupper:
  2842  00000B                     ??___fladd:
  2843  00000B                     ??___fldiv:
  2844  00000B                     ??___fleq:
  2845  00000B                     ___aldiv@counter:
  2846                           	opt callstack 0
  2847  00000B                     ___fltol@sign1:
  2848                           	opt callstack 0
  2849  00000B                     ___xxtofl@sign:
  2850                           	opt callstack 0
  2851  00000B                     ___fpclassifyf@e:
  2852                           	opt callstack 0
  2853  00000B                     strcpy@d:
  2854                           	opt callstack 0
  2855  00000B                     ___aodiv@divisor:
  2856                           	opt callstack 0
  2857  00000B                     ___aomod@divisor:
  2858                           	opt callstack 0
  2859  00000B                     ___lodiv@divisor:
  2860                           	opt callstack 0
  2861  00000B                     ___lomod@divisor:
  2862                           	opt callstack 0
  2863                           
  2864                           ; 8 bytes @ 0xA
  2865  00000B                     	ds	1
  2866  00000C                     ??_atoi:
  2867  00000C                     ?_stoa:
  2868                           	opt callstack 0
  2869  00000C                     ___aldiv@sign:
  2870                           	opt callstack 0
  2871  00000C                     ___fltol@exp1:
  2872                           	opt callstack 0
  2873  00000C                     ___xxtofl@exp:
  2874                           	opt callstack 0
  2875  00000C                     lcd_fill@bg_color:
  2876                           	opt callstack 0
  2877  00000C                     lcd_draw_pixel_at@x:
  2878                           	opt callstack 0
  2879  00000C                     lcd_draw_char@x:
  2880                           	opt callstack 0
  2881  00000C                     stoa@fp:
  2882                           	opt callstack 0
  2883  00000C                     fputs@s:
  2884                           	opt callstack 0
  2885  00000C                     strncmp@r:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 2 bytes @ 0xB
  2889  00000C                     	ds	1
  2890  00000D                     ___aldiv@quotient:
  2891                           	opt callstack 0
  2892  00000D                     ___xxtofl@arg:
  2893                           	opt callstack 0
  2894  00000D                     ___fpclassifyf@u:
  2895                           	opt callstack 0
  2896                           
  2897                           ; 4 bytes @ 0xC
  2898  00000D                     	ds	1
  2899  00000E                     lcd_fill@height:
  2900                           	opt callstack 0
  2901  00000E                     lcd_draw_pixel_at@y:
  2902                           	opt callstack 0
  2903  00000E                     lcd_draw_char@y:
  2904                           	opt callstack 0
  2905  00000E                     stoa@s:
  2906                           	opt callstack 0
  2907  00000E                     fputs@fp:
  2908                           	opt callstack 0
  2909                           
  2910                           ; 2 bytes @ 0xD
  2911  00000E                     	ds	1
  2912  00000F                     ___fladd@signs:
  2913                           	opt callstack 0
  2914  00000F                     _tolower$2485:
  2915                           	opt callstack 0
  2916  00000F                     _toupper$2500:
  2917                           	opt callstack 0
  2918  00000F                     ___fldiv@rem:
  2919                           	opt callstack 0
  2920                           
  2921                           ; 4 bytes @ 0xE
  2922  00000F                     	ds	1
  2923  000010                     ??_stoa:
  2924  000010                     ___fladd@aexp:
  2925                           	opt callstack 0
  2926  000010                     fputs@c:
  2927                           	opt callstack 0
  2928  000010                     lcd_fill@width:
  2929                           	opt callstack 0
  2930  000010                     lcd_draw_pixel_at@color:
  2931                           	opt callstack 0
  2932  000010                     lcd_draw_char@fIndex:
  2933                           	opt callstack 0
  2934  000010                     atoi@neg:
  2935                           	opt callstack 0
  2936                           
  2937                           ; 2 bytes @ 0xF
  2938  000010                     	ds	1
  2939  000011                     ?___flmul:
  2940                           	opt callstack 0
  2941  000011                     ___fladd@bexp:
  2942                           	opt callstack 0
  2943  000011                     fputs@i:
  2944                           	opt callstack 0
  2945  000011                     ___flmul@b:
  2946                           	opt callstack 0
  2947  000011                     stoa@nuls:
  2948                           	opt callstack 0
  2949                           
  2950                           ; 7 bytes @ 0x10
  2951  000011                     	ds	1
  2952  000012                     ___fladd@grs:
  2953                           	opt callstack 0
  2954  000012                     lcd_draw_line@x0:
  2955                           	opt callstack 0
  2956  000012                     lcd_draw_char@fg_color:
  2957                           	opt callstack 0
  2958  000012                     _atoi$2362:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 2 bytes @ 0x11
  2962  000012                     	ds	1
  2963  000013                     ?_pad:
  2964                           	opt callstack 0
  2965  000013                     ___aodiv@counter:
  2966                           	opt callstack 0
  2967  000013                     ___aomod@counter:
  2968                           	opt callstack 0
  2969  000013                     ___lomod@counter:
  2970                           	opt callstack 0
  2971  000013                     ___fldiv@sign:
  2972                           	opt callstack 0
  2973  000013                     pad@fp:
  2974                           	opt callstack 0
  2975  000013                     ___lodiv@quotient:
  2976                           	opt callstack 0
  2977                           
  2978                           ; 8 bytes @ 0x12
  2979  000013                     	ds	1
  2980  000014                     ___aodiv@sign:
  2981                           	opt callstack 0
  2982  000014                     ___aomod@sign:
  2983                           	opt callstack 0
  2984  000014                     lcd_draw_line@y0:
  2985                           	opt callstack 0
  2986  000014                     lcd_draw_char@bg_color:
  2987                           	opt callstack 0
  2988  000014                     ___fldiv@new_exp:
  2989                           	opt callstack 0
  2990  000014                     _atoi$2364:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 2 bytes @ 0x13
  2994  000014                     	ds	1
  2995  000015                     ?_abs:
  2996                           	opt callstack 0
  2997  000015                     pad@buf:
  2998                           	opt callstack 0
  2999  000015                     abs@a:
  3000                           	opt callstack 0
  3001  000015                     ___flmul@a:
  3002                           	opt callstack 0
  3003  000015                     ___aodiv@quotient:
  3004                           	opt callstack 0
  3005                           
  3006                           ; 8 bytes @ 0x14
  3007  000015                     	ds	1
  3008  000016                     ??_lcd_draw_char:
  3009  000016                     _atoi$2363:
  3010                           	opt callstack 0
  3011  000016                     lcd_draw_line@x1:
  3012                           	opt callstack 0
  3013  000016                     ___fldiv@grs:
  3014                           	opt callstack 0
  3015                           
  3016                           ; 4 bytes @ 0x15
  3017  000016                     	ds	1
  3018  000017                     ??_abs:
  3019  000017                     pad@p:
  3020                           	opt callstack 0
  3021  000017                     atoi@n:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 2 bytes @ 0x16
  3025  000017                     	ds	1
  3026  000018                     lcd_draw_line@y1:
  3027                           	opt callstack 0
  3028  000018                     stoa@i:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 2 bytes @ 0x17
  3032  000018                     	ds	1
  3033  000019                     ??___flmul:
  3034  000019                     ??_pad:
  3035                           
  3036                           ; 1 bytes @ 0x18
  3037  000019                     	ds	1
  3038  00001A                     ___fldiv@bexp:
  3039                           	opt callstack 0
  3040  00001A                     lcd_draw_line@color:
  3041                           	opt callstack 0
  3042  00001A                     pad@i:
  3043                           	opt callstack 0
  3044  00001A                     stoa@w:
  3045                           	opt callstack 0
  3046                           
  3047                           ; 2 bytes @ 0x19
  3048  00001A                     	ds	1
  3049  00001B                     ___lodiv@counter:
  3050                           	opt callstack 0
  3051  00001B                     ___fldiv@aexp:
  3052                           	opt callstack 0
  3053                           
  3054                           ; 1 bytes @ 0x1A
  3055  00001B                     	ds	1
  3056  00001C                     ??_lcd_draw_line:
  3057  00001C                     ?_floorf:
  3058                           	opt callstack 0
  3059  00001C                     pad@w:
  3060                           	opt callstack 0
  3061  00001C                     stoa@cp:
  3062                           	opt callstack 0
  3063  00001C                     floorf@x:
  3064                           	opt callstack 0
  3065                           
  3066                           ; 4 bytes @ 0x1B
  3067  00001C                     	ds	1
  3068  00001D                     ___flmul@sign:
  3069                           	opt callstack 0
  3070  00001D                     lcd_draw_line@sx:
  3071                           	opt callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x1C
  3074  00001D                     	ds	1
  3075  00001E                     ?_ctoa:
  3076                           	opt callstack 0
  3077  00001E                     ?_dtoa:
  3078                           	opt callstack 0
  3079  00001E                     ?_otoa:
  3080                           	opt callstack 0
  3081  00001E                     ?_utoa:
  3082                           	opt callstack 0
  3083  00001E                     ?_xtoa:
  3084                           	opt callstack 0
  3085  00001E                     ___flmul@aexp:
  3086                           	opt callstack 0
  3087  00001E                     ctoa@fp:
  3088                           	opt callstack 0
  3089  00001E                     dtoa@fp:
  3090                           	opt callstack 0
  3091  00001E                     otoa@fp:
  3092                           	opt callstack 0
  3093  00001E                     stoa@p:
  3094                           	opt callstack 0
  3095  00001E                     utoa@fp:
  3096                           	opt callstack 0
  3097  00001E                     xtoa@fp:
  3098                           	opt callstack 0
  3099                           
  3100                           ; 2 bytes @ 0x1D
  3101  00001E                     	ds	1
  3102  00001F                     lcd_draw_char@j:
  3103                           	opt callstack 0
  3104  00001F                     lcd_draw_line@sy:
  3105                           	opt callstack 0
  3106  00001F                     ___flmul@grs:
  3107                           	opt callstack 0
  3108                           
  3109                           ; 4 bytes @ 0x1E
  3110  00001F                     	ds	1
  3111  000020                     ??_floorf:
  3112  000020                     lcd_draw_char@k:
  3113                           	opt callstack 0
  3114  000020                     ctoa@c:
  3115                           	opt callstack 0
  3116  000020                     stoa@l:
  3117                           	opt callstack 0
  3118  000020                     dtoa@d:
  3119                           	opt callstack 0
  3120  000020                     otoa@d:
  3121                           	opt callstack 0
  3122  000020                     utoa@d:
  3123                           	opt callstack 0
  3124  000020                     xtoa@d:
  3125                           	opt callstack 0
  3126                           
  3127                           ; 8 bytes @ 0x1F
  3128  000020                     	ds	1
  3129  000021                     lcd_draw_char@i:
  3130                           	opt callstack 0
  3131  000021                     lcd_draw_line@err:
  3132                           	opt callstack 0
  3133  000021                     ctoa@w:
  3134                           	opt callstack 0
  3135                           
  3136                           ; 2 bytes @ 0x20
  3137  000021                     	ds	1
  3138  000022                     lcd_draw_string@x:
  3139                           	opt callstack 0
  3140                           
  3141                           ; 2 bytes @ 0x21
  3142  000022                     	ds	1
  3143  000023                     ___flmul@bexp:
  3144                           	opt callstack 0
  3145  000023                     lcd_draw_line@e2:
  3146                           	opt callstack 0
  3147                           
  3148                           ; 2 bytes @ 0x22
  3149  000023                     	ds	1
  3150  000024                     lcd_draw_string@y:
  3151                           	opt callstack 0
  3152  000024                     ___flmul@prod:
  3153                           	opt callstack 0
  3154                           
  3155                           ; 4 bytes @ 0x23
  3156  000024                     	ds	1
  3157  000025                     lcd_draw_line@dx:
  3158                           	opt callstack 0
  3159                           
  3160                           ; 2 bytes @ 0x24
  3161  000025                     	ds	1
  3162  000026                     lcd_draw_string@pS:
  3163                           	opt callstack 0
  3164  000026                     floorf@m:
  3165                           	opt callstack 0
  3166                           
  3167                           ; 4 bytes @ 0x25
  3168  000026                     	ds	1
  3169  000027                     lcd_draw_line@dy:
  3170                           	opt callstack 0
  3171                           
  3172                           ; 2 bytes @ 0x26
  3173  000027                     	ds	1
  3174  000028                     ??_dtoa:
  3175  000028                     ??_otoa:
  3176  000028                     ??_utoa:
  3177  000028                     xtoa@x:
  3178                           	opt callstack 0
  3179  000028                     lcd_draw_string@fg_color:
  3180                           	opt callstack 0
  3181  000028                     ___flmul@temp:
  3182                           	opt callstack 0
  3183                           
  3184                           ; 2 bytes @ 0x27
  3185  000028                     	ds	1
  3186  000029                     ??_xtoa:
  3187                           
  3188                           ; 1 bytes @ 0x28
  3189  000029                     	ds	1
  3190  00002A                     ?___flsub:
  3191                           	opt callstack 0
  3192  00002A                     lcd_draw_string@bg_color:
  3193                           	opt callstack 0
  3194  00002A                     floorf@e:
  3195                           	opt callstack 0
  3196  00002A                     ___flge@ff1:
  3197                           	opt callstack 0
  3198  00002A                     ___flsub@b:
  3199                           	opt callstack 0
  3200                           
  3201                           ; 4 bytes @ 0x29
  3202  00002A                     	ds	2
  3203  00002C                     ??_lcd_draw_string:
  3204  00002C                     floorf@u:
  3205                           	opt callstack 0
  3206                           
  3207                           ; 4 bytes @ 0x2B
  3208  00002C                     	ds	2
  3209  00002E                     ___flge@ff2:
  3210                           	opt callstack 0
  3211  00002E                     ___flsub@a:
  3212                           	opt callstack 0
  3213                           
  3214                           ; 4 bytes @ 0x2D
  3215  00002E                     	ds	2
  3216  000030                     lcd_draw_string@k:
  3217                           	opt callstack 0
  3218  000030                     _dtoa$1694:
  3219                           	opt callstack 0
  3220  000030                     otoa@p:
  3221                           	opt callstack 0
  3222  000030                     utoa@p:
  3223                           	opt callstack 0
  3224                           
  3225                           ; 2 bytes @ 0x2F
  3226  000030                     	ds	1
  3227  000031                     _xtoa$1764:
  3228                           	opt callstack 0
  3229                           
  3230                           ; 2 bytes @ 0x30
  3231  000031                     	ds	1
  3232  000032                     ??___flge:
  3233  000032                     lcd_draw_string@lIndex:
  3234                           	opt callstack 0
  3235  000032                     dtoa@p:
  3236                           	opt callstack 0
  3237  000032                     otoa@t:
  3238                           	opt callstack 0
  3239  000032                     utoa@w:
  3240                           	opt callstack 0
  3241                           
  3242                           ; 2 bytes @ 0x31
  3243  000032                     	ds	1
  3244  000033                     _xtoa$1765:
  3245                           	opt callstack 0
  3246                           
  3247                           ; 2 bytes @ 0x32
  3248  000033                     	ds	1
  3249  000034                     dtoa@w:
  3250                           	opt callstack 0
  3251  000034                     otoa@w:
  3252                           	opt callstack 0
  3253  000034                     utoa@n:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 8 bytes @ 0x33
  3257  000034                     	ds	1
  3258  000035                     xtoa@p:
  3259                           	opt callstack 0
  3260                           
  3261                           ; 2 bytes @ 0x34
  3262  000035                     	ds	1
  3263  000036                     ?_efgtoa:
  3264                           	opt callstack 0
  3265  000036                     dtoa@s:
  3266                           	opt callstack 0
  3267  000036                     efgtoa@fp:
  3268                           	opt callstack 0
  3269  000036                     otoa@n:
  3270                           	opt callstack 0
  3271                           
  3272                           ; 8 bytes @ 0x35
  3273  000036                     	ds	1
  3274  000037                     xtoa@w:
  3275                           	opt callstack 0
  3276                           
  3277                           ; 2 bytes @ 0x36
  3278  000037                     	ds	1
  3279  000038                     efgtoa@f:
  3280                           	opt callstack 0
  3281  000038                     dtoa@n:
  3282                           	opt callstack 0
  3283                           
  3284                           ; 8 bytes @ 0x37
  3285  000038                     	ds	1
  3286  000039                     xtoa@n:
  3287                           	opt callstack 0
  3288                           
  3289                           ; 8 bytes @ 0x38
  3290  000039                     	ds	3
  3291  00003C                     efgtoa@c:
  3292                           	opt callstack 0
  3293  00003C                     utoa@i:
  3294                           	opt callstack 0
  3295                           
  3296                           ; 2 bytes @ 0x3B
  3297  00003C                     	ds	1
  3298  00003D                     ??_efgtoa:
  3299                           
  3300                           ; 1 bytes @ 0x3C
  3301  00003D                     	ds	1
  3302  00003E                     otoa@i:
  3303                           	opt callstack 0
  3304                           
  3305                           ; 2 bytes @ 0x3D
  3306  00003E                     	ds	2
  3307  000040                     dtoa@i:
  3308                           	opt callstack 0
  3309                           
  3310                           ; 2 bytes @ 0x3F
  3311  000040                     	ds	1
  3312  000041                     xtoa@i:
  3313                           	opt callstack 0
  3314                           
  3315                           ; 2 bytes @ 0x40
  3316  000041                     	ds	2
  3317  000043                     xtoa@c:
  3318                           	opt callstack 0
  3319                           
  3320                           ; 2 bytes @ 0x42
  3321  000043                     	ds	2
  3322  000045                     ?_vfpfcnvrt:
  3323                           	opt callstack 0
  3324  000045                     vfpfcnvrt@fp:
  3325                           	opt callstack 0
  3326                           
  3327                           ; 2 bytes @ 0x44
  3328  000045                     	ds	2
  3329  000047                     vfpfcnvrt@fmt:
  3330                           	opt callstack 0
  3331                           
  3332                           ; 2 bytes @ 0x46
  3333  000047                     	ds	2
  3334  000049                     vfpfcnvrt@ap:
  3335                           	opt callstack 0
  3336                           
  3337                           ; 2 bytes @ 0x48
  3338  000049                     	ds	2
  3339  00004B                     ??_vfpfcnvrt:
  3340                           
  3341                           ; 1 bytes @ 0x4A
  3342  00004B                     	ds	4
  3343  00004F                     ?_vfprintf:
  3344                           	opt callstack 0
  3345  00004F                     vfprintf@fp:
  3346                           	opt callstack 0
  3347                           
  3348                           ; 2 bytes @ 0x4E
  3349  00004F                     	ds	2
  3350  000051                     vfprintf@fmt:
  3351                           	opt callstack 0
  3352                           
  3353                           ; 2 bytes @ 0x50
  3354  000051                     	ds	2
  3355  000053                     vfprintf@ap:
  3356                           	opt callstack 0
  3357                           
  3358                           ; 2 bytes @ 0x52
  3359  000053                     	ds	2
  3360  000055                     vfprintf@cfmt:
  3361                           	opt callstack 0
  3362                           
  3363                           ; 2 bytes @ 0x54
  3364  000055                     	ds	2
  3365  000057                     
  3366                           ; 1 bytes @ 0x56
  3367 ;;
  3368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3369 ;;
  3370 ;; *************** function _main *****************
  3371 ;; Defined at:
  3372 ;;		line 53 in file "main.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels required when called:   13
  3392 ;; This function calls:
  3393 ;;		_SPI_Open
  3394 ;;		_SYSTEM_Initialize
  3395 ;;		_TMR2_SetInterruptHandler
  3396 ;;		___aldiv
  3397 ;;		___flmul
  3398 ;;		___xxtofl
  3399 ;;		_lcd_draw_line
  3400 ;;		_lcd_draw_string
  3401 ;;		_lcd_init
  3402 ;;		_snprintf
  3403 ;; This function is called by:
  3404 ;;		Startup code after reset
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text0
  3409  003712                     __ptext0:
  3410                           	opt callstack 0
  3411  003712                     _main:
  3412                           	opt callstack 18
  3413  003712                     
  3414                           ;main.c: 56:     SYSTEM_Initialize();
  3415  003712  ECCF  F02F         	call	_SYSTEM_Initialize	;wreg free
  3416                           
  3417                           ;main.c: 64:     TMR2_SetInterruptHandler(led_inter);
  3418  003716  0E9E               	movlw	low _led_inter
  3419  003718  6E03               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
  3420  00371A  0E60               	movlw	high _led_inter
  3421  00371C  6E04               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
  3422  00371E  EC55  F030         	call	_TMR2_SetInterruptHandler	;wreg free
  3423  003722                     
  3424                           ;main.c: 65:     SPI_Open(SPI_DEFAULT);
  3425  003722  0E00               	movlw	0
  3426  003724  ECFE  F02A         	call	_SPI_Open
  3427  003728                     
  3428                           ;main.c: 67:     lcd_init ();
  3429  003728  ECED  F016         	call	_lcd_init	;wreg free
  3430  00372C                     
  3431                           ;main.c: 69:     lcd_draw_line(40,150,280,150,0xFFE0);
  3432  00372C  0E00               	movlw	0
  3433  00372E  6E13               	movwf	(lcd_draw_line@x0+1)^0,c
  3434  003730  0E28               	movlw	40
  3435  003732  6E12               	movwf	lcd_draw_line@x0^0,c
  3436  003734  0E00               	movlw	0
  3437  003736  6E15               	movwf	(lcd_draw_line@y0+1)^0,c
  3438  003738  0E96               	movlw	150
  3439  00373A  6E14               	movwf	lcd_draw_line@y0^0,c
  3440  00373C  0E01               	movlw	1
  3441  00373E  6E17               	movwf	(lcd_draw_line@x1+1)^0,c
  3442  003740  0E18               	movlw	24
  3443  003742  6E16               	movwf	lcd_draw_line@x1^0,c
  3444  003744  0E00               	movlw	0
  3445  003746  6E19               	movwf	(lcd_draw_line@y1+1)^0,c
  3446  003748  0E96               	movlw	150
  3447  00374A  6E18               	movwf	lcd_draw_line@y1^0,c
  3448  00374C  0EFF               	movlw	255
  3449  00374E  6E1B               	movwf	(lcd_draw_line@color+1)^0,c
  3450  003750  0EE0               	movlw	224
  3451  003752  6E1A               	movwf	lcd_draw_line@color^0,c
  3452  003754  EC7A  F023         	call	_lcd_draw_line	;wreg free
  3453  003758                     
  3454                           ;main.c: 71:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  3455  003758  0E00               	movlw	0
  3456  00375A  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3457  00375C  0E2D               	movlw	45
  3458  00375E  6E22               	movwf	lcd_draw_string@x^0,c
  3459  003760  0E00               	movlw	0
  3460  003762  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3461  003764  0E9B               	movlw	155
  3462  003766  6E24               	movwf	lcd_draw_string@y^0,c
  3463  003768  0E63               	movlw	low STR_1
  3464  00376A  6E26               	movwf	lcd_draw_string@pS^0,c
  3465  00376C  0EFF               	movlw	high STR_1
  3466  00376E  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3467  003770  0E00               	movlw	0
  3468  003772  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3469  003774  0E1F               	movlw	31
  3470  003776  6E28               	movwf	lcd_draw_string@fg_color^0,c
  3471  003778  0E00               	movlw	0
  3472  00377A  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3473  00377C  0E00               	movlw	0
  3474  00377E  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3475  003780  ECE0  F024         	call	_lcd_draw_string	;wreg free
  3476  003784                     
  3477                           ;main.c: 73:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  3478  003784  0E00               	movlw	0
  3479  003786  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3480  003788  0E78               	movlw	120
  3481  00378A  6E22               	movwf	lcd_draw_string@x^0,c
  3482  00378C  0E00               	movlw	0
  3483  00378E  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3484  003790  0E78               	movlw	120
  3485  003792  6E24               	movwf	lcd_draw_string@y^0,c
  3486  003794  0EA6               	movlw	low STR_2
  3487  003796  6E26               	movwf	lcd_draw_string@pS^0,c
  3488  003798  0EFF               	movlw	high STR_2
  3489  00379A  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3490  00379C  0E04               	movlw	4
  3491  00379E  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3492  0037A0  0E00               	movlw	0
  3493  0037A2  6E28               	movwf	lcd_draw_string@fg_color^0,c
  3494  0037A4  0E00               	movlw	0
  3495  0037A6  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3496  0037A8  0E00               	movlw	0
  3497  0037AA  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3498  0037AC  ECE0  F024         	call	_lcd_draw_string	;wreg free
  3499  0037B0                     
  3500                           ;main.c: 77:     (INTCONbits.GIE = 1);
  3501  0037B0  8EF2               	bsf	242,7,c	;volatile
  3502  0037B2                     l9588:
  3503                           
  3504                           ;main.c: 90:     {;main.c: 91:         percentagem = codigo_digital*0.0244200244200244;
  3505  0037B2  C0F4  F003         	movff	_codigo_digital,___xxtofl@val
  3506  0037B6  C0F5  F004         	movff	_codigo_digital+1,___xxtofl@val+1
  3507  0037BA  6A05               	clrf	(___xxtofl@val+2)^0,c
  3508  0037BC  6A06               	clrf	(___xxtofl@val+3)^0,c
  3509  0037BE  0E00               	movlw	0
  3510  0037C0  EC91  F01F         	call	___xxtofl
  3511  0037C4  C003  F011         	movff	?___xxtofl,___flmul@b
  3512  0037C8  C004  F012         	movff	?___xxtofl+1,___flmul@b+1
  3513  0037CC  C005  F013         	movff	?___xxtofl+2,___flmul@b+2
  3514  0037D0  C006  F014         	movff	?___xxtofl+3,___flmul@b+3
  3515  0037D4  0E81               	movlw	129
  3516  0037D6  6E15               	movwf	___flmul@a^0,c
  3517  0037D8  0E0C               	movlw	12
  3518  0037DA  6E16               	movwf	(___flmul@a+1)^0,c
  3519  0037DC  0EC8               	movlw	200
  3520  0037DE  6E17               	movwf	(___flmul@a+2)^0,c
  3521  0037E0  0E3C               	movlw	60
  3522  0037E2  6E18               	movwf	(___flmul@a+3)^0,c
  3523  0037E4  EC0B  F013         	call	___flmul	;wreg free
  3524  0037E8  C011  F0E4         	movff	?___flmul,_percentagem
  3525  0037EC  C012  F0E5         	movff	?___flmul+1,_percentagem+1
  3526  0037F0  C013  F0E6         	movff	?___flmul+2,_percentagem+2
  3527  0037F4  C014  F0E7         	movff	?___flmul+3,_percentagem+3
  3528  0037F8                     
  3529                           ;main.c: 92:         rpm=4687500/ticks;
  3530  0037F8  0E8C               	movlw	140
  3531  0037FA  6E03               	movwf	___aldiv@dividend^0,c
  3532  0037FC  0E86               	movlw	134
  3533  0037FE  6E04               	movwf	(___aldiv@dividend+1)^0,c
  3534  003800  0E47               	movlw	71
  3535  003802  6E05               	movwf	(___aldiv@dividend+2)^0,c
  3536  003804  0E00               	movlw	0
  3537  003806  6E06               	movwf	(___aldiv@dividend+3)^0,c
  3538  003808  C0F8  F007         	movff	_ticks,___aldiv@divisor
  3539  00380C  C0F9  F008         	movff	_ticks+1,___aldiv@divisor+1
  3540  003810  6A09               	clrf	(___aldiv@divisor+2)^0,c
  3541  003812  6A0A               	clrf	(___aldiv@divisor+3)^0,c
  3542  003814  EC94  F026         	call	___aldiv	;wreg free
  3543  003818  C003  F0F2         	movff	?___aldiv,_rpm
  3544  00381C  C004  F0F3         	movff	?___aldiv+1,_rpm+1
  3545  003820                     
  3546                           ;main.c: 94:         snprintf(string_rpm,sizeof(string_rpm),"RPM= %d      ",rpm);
  3547  003820  0E64               	movlw	low _string_rpm
  3548  003822  0100               	movlb	0	; () banked
  3549  003824  6FD2               	movwf	snprintf@s& (0+255),b
  3550  003826  0E02               	movlw	high _string_rpm
  3551  003828  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3552  00382A  0E00               	movlw	0
  3553  00382C  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3554  00382E  0E64               	movlw	100
  3555  003830  6FD4               	movwf	snprintf@n& (0+255),b
  3556  003832  0E98               	movlw	low STR_3
  3557  003834  6FD6               	movwf	snprintf@fmt& (0+255),b
  3558  003836  0EFF               	movlw	high STR_3
  3559  003838  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3560  00383A  C0F2  F0D8         	movff	_rpm,?_snprintf+6
  3561  00383E  C0F3  F0D9         	movff	_rpm+1,?_snprintf+7
  3562  003842  ECD4  F02E         	call	_snprintf	;wreg free
  3563  003846                     
  3564                           ;main.c: 95:         lcd_draw_string (40,10,string_rpm,0x0400,0x0000);
  3565  003846  0E00               	movlw	0
  3566  003848  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3567  00384A  0E28               	movlw	40
  3568  00384C  6E22               	movwf	lcd_draw_string@x^0,c
  3569  00384E  0E00               	movlw	0
  3570  003850  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3571  003852  0E0A               	movlw	10
  3572  003854  6E24               	movwf	lcd_draw_string@y^0,c
  3573  003856  0E64               	movlw	low _string_rpm
  3574  003858  6E26               	movwf	lcd_draw_string@pS^0,c
  3575  00385A  0E02               	movlw	high _string_rpm
  3576  00385C  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3577  00385E  0E04               	movlw	4
  3578  003860  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3579  003862  0E00               	movlw	0
  3580  003864  6E28               	movwf	lcd_draw_string@fg_color^0,c
  3581  003866  0E00               	movlw	0
  3582  003868  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3583  00386A  0E00               	movlw	0
  3584  00386C  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3585  00386E  ECE0  F024         	call	_lcd_draw_string	;wreg free
  3586  003872                     
  3587                           ;main.c: 97:         snprintf(string,sizeof(string),"percentagem = %.f  ",percentagem);
  3588  003872  0E00               	movlw	low _string
  3589  003874  0100               	movlb	0	; () banked
  3590  003876  6FD2               	movwf	snprintf@s& (0+255),b
  3591  003878  0E01               	movlw	high _string
  3592  00387A  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3593  00387C  0E00               	movlw	0
  3594  00387E  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3595  003880  0E64               	movlw	100
  3596  003882  6FD4               	movwf	snprintf@n& (0+255),b
  3597  003884  0E84               	movlw	low STR_4
  3598  003886  6FD6               	movwf	snprintf@fmt& (0+255),b
  3599  003888  0EFF               	movlw	high STR_4
  3600  00388A  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3601  00388C  C0E4  F0D8         	movff	_percentagem,?_snprintf+6
  3602  003890  C0E5  F0D9         	movff	_percentagem+1,?_snprintf+7
  3603  003894  C0E6  F0DA         	movff	_percentagem+2,?_snprintf+8
  3604  003898  C0E7  F0DB         	movff	_percentagem+3,?_snprintf+9
  3605  00389C  ECD4  F02E         	call	_snprintf	;wreg free
  3606  0038A0                     
  3607                           ;main.c: 98:         lcd_draw_string (150,10,string,0x0400,0x0000);
  3608  0038A0  0E00               	movlw	0
  3609  0038A2  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3610  0038A4  0E96               	movlw	150
  3611  0038A6  6E22               	movwf	lcd_draw_string@x^0,c
  3612  0038A8  0E00               	movlw	0
  3613  0038AA  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3614  0038AC  0E0A               	movlw	10
  3615  0038AE  6E24               	movwf	lcd_draw_string@y^0,c
  3616  0038B0  0E00               	movlw	low _string
  3617  0038B2  6E26               	movwf	lcd_draw_string@pS^0,c
  3618  0038B4  0E01               	movlw	high _string
  3619  0038B6  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3620  0038B8  0E04               	movlw	4
  3621  0038BA  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3622  0038BC  0E00               	movlw	0
  3623  0038BE  6E28               	movwf	lcd_draw_string@fg_color^0,c
  3624  0038C0  0E00               	movlw	0
  3625  0038C2  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3626  0038C4  0E00               	movlw	0
  3627  0038C6  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3628  0038C8  ECE0  F024         	call	_lcd_draw_string	;wreg free
  3629  0038CC                     
  3630                           ;main.c: 100:         snprintf(steste,sizeof(steste),"TESTE %d",teste);
  3631  0038CC  0E00               	movlw	low _steste
  3632  0038CE  0100               	movlb	0	; () banked
  3633  0038D0  6FD2               	movwf	snprintf@s& (0+255),b
  3634  0038D2  0E02               	movlw	high _steste
  3635  0038D4  6FD3               	movwf	(snprintf@s+1)& (0+255),b
  3636  0038D6  0E00               	movlw	0
  3637  0038D8  6FD5               	movwf	(snprintf@n+1)& (0+255),b
  3638  0038DA  0E64               	movlw	100
  3639  0038DC  6FD4               	movwf	snprintf@n& (0+255),b
  3640  0038DE  0EB1               	movlw	low STR_5
  3641  0038E0  6FD6               	movwf	snprintf@fmt& (0+255),b
  3642  0038E2  0EFF               	movlw	high STR_5
  3643  0038E4  6FD7               	movwf	(snprintf@fmt+1)& (0+255),b
  3644  0038E6  C0F0  F0D8         	movff	_teste,?_snprintf+6
  3645  0038EA  C0F1  F0D9         	movff	_teste+1,?_snprintf+7
  3646  0038EE  ECD4  F02E         	call	_snprintf	;wreg free
  3647  0038F2                     
  3648                           ;main.c: 101:         lcd_draw_string (40,50,steste,0x0400,0x0000);
  3649  0038F2  0E00               	movlw	0
  3650  0038F4  6E23               	movwf	(lcd_draw_string@x+1)^0,c
  3651  0038F6  0E28               	movlw	40
  3652  0038F8  6E22               	movwf	lcd_draw_string@x^0,c
  3653  0038FA  0E00               	movlw	0
  3654  0038FC  6E25               	movwf	(lcd_draw_string@y+1)^0,c
  3655  0038FE  0E32               	movlw	50
  3656  003900  6E24               	movwf	lcd_draw_string@y^0,c
  3657  003902  0E00               	movlw	low _steste
  3658  003904  6E26               	movwf	lcd_draw_string@pS^0,c
  3659  003906  0E02               	movlw	high _steste
  3660  003908  6E27               	movwf	(lcd_draw_string@pS+1)^0,c
  3661  00390A  0E04               	movlw	4
  3662  00390C  6E29               	movwf	(lcd_draw_string@fg_color+1)^0,c
  3663  00390E  0E00               	movlw	0
  3664  003910  6E28               	movwf	lcd_draw_string@fg_color^0,c
  3665  003912  0E00               	movlw	0
  3666  003914  6E2B               	movwf	(lcd_draw_string@bg_color+1)^0,c
  3667  003916  0E00               	movlw	0
  3668  003918  6E2A               	movwf	lcd_draw_string@bg_color^0,c
  3669  00391A  ECE0  F024         	call	_lcd_draw_string	;wreg free
  3670  00391E  EFD9  F01B         	goto	l9588
  3671  003922  EF5E  F000         	goto	start
  3672  003926                     __end_of_main:
  3673                           	opt callstack 0
  3674                           
  3675 ;; *************** function _snprintf *****************
  3676 ;; Defined at:
  3677 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  s               2  114[BANK0 ] PTR unsigned char 
  3680 ;;		 -> steste(100), string(100), string_rpm(100), 
  3681 ;;  n               2  116[BANK0 ] unsigned int 
  3682 ;;  fmt             2  118[BANK0 ] PTR const unsigned char 
  3683 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  ap              2    2[BANK1 ] PTR void [1]
  3686 ;;		 -> ?_snprintf(2), 
  3687 ;;  ret             2    0        int 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  2  114[BANK0 ] int 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3697 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Totals:         0      10       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;Total ram usage:       14 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:   12
  3704 ;; This function calls:
  3705 ;;		_vsnprintf
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text1
  3712  005DA8                     __ptext1:
  3713                           	opt callstack 0
  3714  005DA8                     _snprintf:
  3715                           	opt callstack 18
  3716  005DA8  0ED8               	movlw	low (?_snprintf+6)
  3717  005DAA  0101               	movlb	1	; () banked
  3718  005DAC  6FC5               	movwf	snprintf@ap& (0+255),b
  3719  005DAE  0E00               	movlw	high (?_snprintf+6)
  3720  005DB0  6FC6               	movwf	(snprintf@ap+1)& (0+255),b
  3721  005DB2                     
  3722                           ; BSR set to: 1
  3723  005DB2  C0D2  F0BC         	movff	snprintf@s,vsnprintf@s
  3724  005DB6  C0D3  F0BD         	movff	snprintf@s+1,vsnprintf@s+1
  3725  005DBA  C0D4  F0BE         	movff	snprintf@n,vsnprintf@n
  3726  005DBE  C0D5  F0BF         	movff	snprintf@n+1,vsnprintf@n+1
  3727  005DC2  C0D6  F0C0         	movff	snprintf@fmt,vsnprintf@fmt
  3728  005DC6  C0D7  F0C1         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3729  005DCA  0EC5               	movlw	low snprintf@ap
  3730  005DCC  0100               	movlb	0	; () banked
  3731  005DCE  6FC2               	movwf	vsnprintf@ap& (0+255),b
  3732  005DD0  0E01               	movlw	high snprintf@ap
  3733  005DD2  6FC3               	movwf	(vsnprintf@ap+1)& (0+255),b
  3734  005DD4  EC0C  F026         	call	_vsnprintf	;wreg free
  3735  005DD8  0012               	return		;funcret
  3736  005DDA                     __end_of_snprintf:
  3737                           	opt callstack 0
  3738                           
  3739 ;; *************** function _vsnprintf *****************
  3740 ;; Defined at:
  3741 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  s               2   92[BANK0 ] PTR unsigned char 
  3744 ;;		 -> steste(100), string(100), string_rpm(100), 
  3745 ;;  n               2   94[BANK0 ] unsigned int 
  3746 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  3747 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3748 ;;  ap              2   98[BANK0 ] PTR PTR void 
  3749 ;;		 -> snprintf@ap(2), 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  f               6  108[BANK0 ] struct _IO_FILE
  3752 ;;  cnt             2  106[BANK0 ] int 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   92[BANK0 ] int 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3762 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3763 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;Total ram usage:       22 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:   11
  3769 ;; This function calls:
  3770 ;;		_vfprintf
  3771 ;; This function is called by:
  3772 ;;		_snprintf
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text2
  3777  004C18                     __ptext2:
  3778                           	opt callstack 0
  3779  004C18                     _vsnprintf:
  3780                           	opt callstack 18
  3781  004C18  0E80               	movlw	128
  3782  004C1A  0100               	movlb	0	; () banked
  3783  004C1C  5DBF               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3784  004C1E  A0D8               	btfss	status,0,c
  3785  004C20  EF14  F026         	goto	u12331
  3786  004C24  EF16  F026         	goto	u12330
  3787  004C28                     u12331:
  3788  004C28  EF1E  F026         	goto	l9544
  3789  004C2C                     u12330:
  3790  004C2C                     
  3791                           ; BSR set to: 0
  3792  004C2C  0E00               	movlw	0
  3793  004C2E  6FE9               	movwf	(_errno+1)& (0+255),b
  3794  004C30  0E4B               	movlw	75
  3795  004C32  6FE8               	movwf	_errno& (0+255),b
  3796  004C34                     
  3797                           ; BSR set to: 0
  3798  004C34  69BC               	setf	?_vsnprintf& (0+255),b
  3799  004C36  69BD               	setf	(?_vsnprintf+1)& (0+255),b
  3800  004C38  EF93  F026         	goto	l1811
  3801  004C3C                     l9544:
  3802                           
  3803                           ; BSR set to: 0
  3804  004C3C  C0BC  F0CC         	movff	vsnprintf@s,vsnprintf@f
  3805  004C40  C0BD  F0CD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3806  004C44  51BF               	movf	(vsnprintf@n+1)& (0+255),w,b
  3807  004C46  E109               	bnz	u12340
  3808  004C48  0E02               	movlw	2
  3809  004C4A  5DBE               	subwf	vsnprintf@n& (0+255),w,b
  3810  004C4C  A0D8               	btfss	status,0,c
  3811  004C4E  EF2B  F026         	goto	u12341
  3812  004C52  EF2D  F026         	goto	u12340
  3813  004C56                     u12341:
  3814  004C56  EF39  F026         	goto	l9550
  3815  004C5A                     u12340:
  3816  004C5A                     
  3817                           ; BSR set to: 0
  3818  004C5A  0EFF               	movlw	255
  3819  004C5C  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3820  004C5E  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3821  004C60  0EFF               	movlw	255
  3822  004C62  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3823  004C64  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3824  004C66                     
  3825                           ; BSR set to: 0
  3826  004C66  0E00               	movlw	0
  3827  004C68  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3828  004C6A  0E00               	movlw	0
  3829  004C6C  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3830  004C6E  EF41  F026         	goto	l9552
  3831  004C72                     l9550:
  3832                           
  3833                           ; BSR set to: 0
  3834  004C72  0E00               	movlw	0
  3835  004C74  6FD1               	movwf	(vsnprintf@f+5)& (0+255),b
  3836  004C76  0E01               	movlw	1
  3837  004C78  6FD0               	movwf	(vsnprintf@f+4)& (0+255),b
  3838  004C7A  0E00               	movlw	0
  3839  004C7C  6FCF               	movwf	(vsnprintf@f+3)& (0+255),b
  3840  004C7E  0E01               	movlw	1
  3841  004C80  6FCE               	movwf	(vsnprintf@f+2)& (0+255),b
  3842  004C82                     l9552:
  3843                           
  3844                           ; BSR set to: 0
  3845  004C82  0ECC               	movlw	low vsnprintf@f
  3846  004C84  6E4F               	movwf	vfprintf@fp^0,c
  3847  004C86  0E00               	movlw	high vsnprintf@f
  3848  004C88  6E50               	movwf	(vfprintf@fp+1)^0,c
  3849  004C8A  C0C0  F051         	movff	vsnprintf@fmt,vfprintf@fmt
  3850  004C8E  C0C1  F052         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3851  004C92  C0C2  F053         	movff	vsnprintf@ap,vfprintf@ap
  3852  004C96  C0C3  F054         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3853  004C9A  EC23  F02C         	call	_vfprintf	;wreg free
  3854  004C9E  C04F  F0CA         	movff	?_vfprintf,vsnprintf@cnt
  3855  004CA2  C050  F0CB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3856  004CA6  0100               	movlb	0	; () banked
  3857  004CA8  51BE               	movf	vsnprintf@n& (0+255),w,b
  3858  004CAA  11BF               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3859  004CAC  B4D8               	btfsc	status,2,c
  3860  004CAE  EF5B  F026         	goto	u12351
  3861  004CB2  EF5D  F026         	goto	u12350
  3862  004CB6                     u12351:
  3863  004CB6  EF8F  F026         	goto	l9564
  3864  004CBA                     u12350:
  3865  004CBA                     
  3866                           ; BSR set to: 0
  3867  004CBA  BFCB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3868  004CBC  EF62  F026         	goto	u12361
  3869  004CC0  EF64  F026         	goto	u12360
  3870  004CC4                     u12361:
  3871  004CC4  EF8F  F026         	goto	l9564
  3872  004CC8                     u12360:
  3873  004CC8                     
  3874                           ; BSR set to: 0
  3875  004CC8  0EFF               	movlw	255
  3876  004CCA  6FC4               	movwf	??_vsnprintf& (0+255),b
  3877  004CCC  0EFF               	movlw	255
  3878  004CCE  6FC5               	movwf	(??_vsnprintf+1)& (0+255),b
  3879  004CD0  C0BE  F0C6         	movff	vsnprintf@n,??_vsnprintf+2
  3880  004CD4  C0BF  F0C7         	movff	vsnprintf@n+1,??_vsnprintf+3
  3881  004CD8  51C4               	movf	??_vsnprintf& (0+255),w,b
  3882  004CDA  27C6               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3883  004CDC  51C5               	movf	(??_vsnprintf+1)& (0+255),w,b
  3884  004CDE  23C7               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3885  004CE0  51C6               	movf	(??_vsnprintf+2)& (0+255),w,b
  3886  004CE2  5DCA               	subwf	vsnprintf@cnt& (0+255),w,b
  3887  004CE4  51C7               	movf	(??_vsnprintf+3)& (0+255),w,b
  3888  004CE6  59CB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3889  004CE8  A0D8               	btfss	status,0,c
  3890  004CEA  EF79  F026         	goto	u12371
  3891  004CEE  EF7B  F026         	goto	u12370
  3892  004CF2                     u12371:
  3893  004CF2  EF83  F026         	goto	l1816
  3894  004CF6                     u12370:
  3895  004CF6                     
  3896                           ; BSR set to: 0
  3897  004CF6  0EFF               	movlw	255
  3898  004CF8  25BE               	addwf	vsnprintf@n& (0+255),w,b
  3899  004CFA  6FC8               	movwf	_vsnprintf$2532& (0+255),b
  3900  004CFC  0EFF               	movlw	255
  3901  004CFE  21BF               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3902  004D00  6FC9               	movwf	(_vsnprintf$2532+1)& (0+255),b
  3903  004D02  EF87  F026         	goto	l9562
  3904  004D06                     l1816:
  3905                           
  3906                           ; BSR set to: 0
  3907  004D06  C0CA  F0C8         	movff	vsnprintf@cnt,_vsnprintf$2532
  3908  004D0A  C0CB  F0C9         	movff	vsnprintf@cnt+1,_vsnprintf$2532+1
  3909  004D0E                     l9562:
  3910                           
  3911                           ; BSR set to: 0
  3912  004D0E  51C8               	movf	_vsnprintf$2532& (0+255),w,b
  3913  004D10  25BC               	addwf	vsnprintf@s& (0+255),w,b
  3914  004D12  6ED9               	movwf	fsr2l,c
  3915  004D14  51C9               	movf	(_vsnprintf$2532+1)& (0+255),w,b
  3916  004D16  21BD               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3917  004D18  6EDA               	movwf	fsr2h,c
  3918  004D1A  0E00               	movlw	0
  3919  004D1C  6EDF               	movwf	indf2,c
  3920  004D1E                     l9564:
  3921                           
  3922                           ; BSR set to: 0
  3923  004D1E  C0CA  F0BC         	movff	vsnprintf@cnt,?_vsnprintf
  3924  004D22  C0CB  F0BD         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3925  004D26                     l1811:
  3926                           
  3927                           ; BSR set to: 0
  3928  004D26  0012               	return		;funcret
  3929  004D28                     __end_of_vsnprintf:
  3930                           	opt callstack 0
  3931                           
  3932 ;; *************** function _vfprintf *****************
  3933 ;; Defined at:
  3934 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  3937 ;;		 -> vsnprintf@f(6), 
  3938 ;;  fmt             2   80[COMRAM] PTR const unsigned char 
  3939 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3940 ;;  ap              2   82[COMRAM] PTR PTR void 
  3941 ;;		 -> snprintf@ap(2), 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  3944 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  2   78[COMRAM] int 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3954 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;Total ram usage:        8 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:   10
  3961 ;; This function calls:
  3962 ;;		_vfpfcnvrt
  3963 ;; This function is called by:
  3964 ;;		_vsnprintf
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text3
  3969  005846                     __ptext3:
  3970                           	opt callstack 0
  3971  005846                     _vfprintf:
  3972                           	opt callstack 18
  3973  005846                     
  3974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3975  005846  C051  F055         	movff	vfprintf@fmt,vfprintf@cfmt
  3976  00584A  C052  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3977  00584E                     
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3979  00584E  0E00               	movlw	0
  3980  005850  0100               	movlb	0	; () banked
  3981  005852  6FEB               	movwf	(_nout+1)& (0+255),b
  3982  005854  0E00               	movlw	0
  3983  005856  6FEA               	movwf	_nout& (0+255),b
  3984                           
  3985                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3986  005858  EF41  F02C         	goto	l9534
  3987  00585C                     l9532:
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3991  00585C  C04F  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  3992  005860  C050  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3993  005864  0E55               	movlw	low vfprintf@cfmt
  3994  005866  6E47               	movwf	vfpfcnvrt@fmt^0,c
  3995  005868  0E00               	movlw	high vfprintf@cfmt
  3996  00586A  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3997  00586C  C053  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  3998  005870  C054  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3999  005874  EC60  F000         	call	_vfpfcnvrt	;wreg free
  4000  005878  5045               	movf	?_vfpfcnvrt^0,w,c
  4001  00587A  0100               	movlb	0	; () banked
  4002  00587C  27EA               	addwf	_nout& (0+255),f,b
  4003  00587E  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  4004  005880  23EB               	addwfc	(_nout+1)& (0+255),f,b
  4005  005882                     l9534:
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4009  005882  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
  4010  005886  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4011  00588A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4012  00588A  6AF8               	clrf	tblptru,c
  4013  00588C                     	endif
  4014  00588C                     	if	0	;tblptru may be non-zero
  4015  00588C                     	endif
  4016  00588C  0008               	tblrd		*
  4017  00588E  50F5               	movf	tablat,w,c
  4018  005890  0900               	iorlw	0
  4019  005892  A4D8               	btfss	status,2,c
  4020  005894  EF4E  F02C         	goto	u12321
  4021  005898  EF50  F02C         	goto	u12320
  4022  00589C                     u12321:
  4023  00589C  EF2E  F02C         	goto	l9532
  4024  0058A0                     u12320:
  4025  0058A0                     
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4028  0058A0  C0EA  F04F         	movff	_nout,?_vfprintf
  4029  0058A4  C0EB  F050         	movff	_nout+1,?_vfprintf+1
  4030  0058A8                     
  4031                           ; BSR set to: 0
  4032  0058A8  0012               	return		;funcret
  4033  0058AA                     __end_of_vfprintf:
  4034                           	opt callstack 0
  4035                           
  4036 ;; *************** function _vfpfcnvrt *****************
  4037 ;; Defined at:
  4038 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  4041 ;;		 -> vsnprintf@f(6), 
  4042 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  4043 ;;		 -> vfprintf@cfmt(2), 
  4044 ;;  ap              2   72[COMRAM] PTR PTR void 
  4045 ;;		 -> snprintf@ap(2), 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  llu             8   84[BANK0 ] unsigned long long 
  4048 ;;  ll              8   73[BANK0 ] long long 
  4049 ;;  f               4   66[BANK0 ] long long 
  4050 ;;  ct              3   70[BANK0 ] unsigned char [3]
  4051 ;;  vp              2   81[BANK0 ] PTR void 
  4052 ;;		 -> ?_snprintf(2), ticks(2), 
  4053 ;;  done            2   58[BANK0 ] int 
  4054 ;;  cp              2   56[BANK0 ] PTR unsigned char 
  4055 ;;		 -> ?_snprintf(2), ticks(2), 
  4056 ;;  i               2    0        int 
  4057 ;;  c               1   83[BANK0 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2   68[COMRAM] int 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4067 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4068 ;;      Locals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4070 ;;      Totals:        10      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4071 ;;Total ram usage:       46 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    9
  4074 ;; This function calls:
  4075 ;;		_atoi
  4076 ;;		_ctoa
  4077 ;;		_dtoa
  4078 ;;		_efgtoa
  4079 ;;		_fputc
  4080 ;;		_isdigit
  4081 ;;		_isupper
  4082 ;;		_otoa
  4083 ;;		_stoa
  4084 ;;		_strncmp
  4085 ;;		_tolower
  4086 ;;		_utoa
  4087 ;;		_xtoa
  4088 ;; This function is called by:
  4089 ;;		_vfprintf
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text4
  4094  0000C0                     __ptext4:
  4095                           	opt callstack 0
  4096  0000C0                     _vfpfcnvrt:
  4097                           	opt callstack 18
  4098  0000C0                     
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4100  0000C0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4101  0000C4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4102  0000C8  CFDE FFF6          	movff	postinc2,tblptrl
  4103  0000CC  CFDD FFF7          	movff	postdec2,tblptrh
  4104  0000D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4105  0000D0  6AF8               	clrf	tblptru,c
  4106  0000D2                     	endif
  4107  0000D2                     	if	0	;tblptru may be non-zero
  4108  0000D2                     	endif
  4109  0000D2  0008               	tblrd		*
  4110  0000D4  50F5               	movf	tablat,w,c
  4111  0000D6  0A25               	xorlw	37
  4112  0000D8  A4D8               	btfss	status,2,c
  4113  0000DA  EF71  F000         	goto	u11801
  4114  0000DE  EF73  F000         	goto	u11800
  4115  0000E2                     u11801:
  4116  0000E2  EFB5  F00A         	goto	l9510
  4117  0000E6                     u11800:
  4118  0000E6                     
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4120  0000E6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4121  0000EA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4122  0000EE  2ADE               	incf	postinc2,f,c
  4123  0000F0  0E00               	movlw	0
  4124  0000F2  22DD               	addwfc	postdec2,f,c
  4125  0000F4                     
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4127  0000F4  0E00               	movlw	0
  4128  0000F6  0100               	movlb	0	; () banked
  4129  0000F8  6FED               	movwf	(_width+1)& (0+255),b
  4130  0000FA  0E00               	movlw	0
  4131  0000FC  6FEC               	movwf	_width& (0+255),b
  4132  0000FE  C0EC  F059         	movff	_width,_flags
  4133  000102  C0ED  F05A         	movff	_width+1,_flags+1
  4134  000106                     
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4137  000106  6857               	setf	_prec^0,c
  4138  000108  6858               	setf	(_prec+1)^0,c
  4139  00010A                     
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4142  00010A  0E00               	movlw	0
  4143  00010C  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4144  00010E  0E00               	movlw	0
  4145  000110  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  4146                           
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4148  000112  EFD2  F000         	goto	l9190
  4149  000116                     l9164:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4153  000116  8059               	bsf	_flags^0,0,c
  4154  000118                     l9166:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4158  000118  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4159  00011C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4160  000120  2ADE               	incf	postinc2,f,c
  4161  000122  0E00               	movlw	0
  4162  000124  22DD               	addwfc	postdec2,f,c
  4163                           
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4165  000126  EFD2  F000         	goto	l9190
  4166  00012A                     l9168:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4170  00012A  8259               	bsf	_flags^0,1,c
  4171  00012C  EF8C  F000         	goto	l9166
  4172  000130                     l9172:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4176  000130  8459               	bsf	_flags^0,2,c
  4177  000132  EF8C  F000         	goto	l9166
  4178  000136                     l9176:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4182  000136  8659               	bsf	_flags^0,3,c
  4183  000138  EF8C  F000         	goto	l9166
  4184  00013C                     l9180:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4188  00013C  8859               	bsf	_flags^0,4,c
  4189  00013E  EF8C  F000         	goto	l9166
  4190  000142                     l9184:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4194  000142  0E00               	movlw	0
  4195  000144  6F9B               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4196  000146  0E01               	movlw	1
  4197  000148  6F9A               	movwf	vfpfcnvrt@done& (0+255),b
  4198                           
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4200  00014A  EFD2  F000         	goto	l9190
  4201  00014E                     l9188:
  4202                           
  4203                           ; BSR set to: 0
  4204  00014E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4205  000152  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4206  000156  CFDE FFF6          	movff	postinc2,tblptrl
  4207  00015A  CFDD FFF7          	movff	postdec2,tblptrh
  4208  00015E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4209  00015E  6AF8               	clrf	tblptru,c
  4210  000160                     	endif
  4211  000160                     	if	0	;tblptru may be non-zero
  4212  000160                     	endif
  4213  000160  0008               	tblrd		*
  4214  000162  50F5               	movf	tablat,w,c
  4215  000164  6E4B               	movwf	??_vfpfcnvrt^0,c
  4216  000166  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  4217                           
  4218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4219                           ; Switch size 1, requested type "simple"
  4220                           ; Number of cases is 1, Range of values is 0 to 0
  4221                           ; switch strategies available:
  4222                           ; Name         Instructions Cycles
  4223                           ; simple_byte            4     3 (average)
  4224                           ;	Chosen strategy is simple_byte
  4225  000168  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4226  00016A  0A00               	xorlw	0	; case 0
  4227  00016C  B4D8               	btfsc	status,2,c
  4228  00016E  EFBB  F000         	goto	l9674
  4229  000172  EFA1  F000         	goto	l9184
  4230  000176                     l9674:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ; Switch size 1, requested type "simple"
  4234                           ; Number of cases is 5, Range of values is 32 to 48
  4235                           ; switch strategies available:
  4236                           ; Name         Instructions Cycles
  4237                           ; simple_byte           16     9 (average)
  4238                           ;	Chosen strategy is simple_byte
  4239  000176  504B               	movf	??_vfpfcnvrt^0,w,c
  4240  000178  0A20               	xorlw	32	; case 32
  4241  00017A  B4D8               	btfsc	status,2,c
  4242  00017C  EF9B  F000         	goto	l9176
  4243  000180  0A03               	xorlw	3	; case 35
  4244  000182  B4D8               	btfsc	status,2,c
  4245  000184  EF9E  F000         	goto	l9180
  4246  000188  0A08               	xorlw	8	; case 43
  4247  00018A  B4D8               	btfsc	status,2,c
  4248  00018C  EF98  F000         	goto	l9172
  4249  000190  0A06               	xorlw	6	; case 45
  4250  000192  B4D8               	btfsc	status,2,c
  4251  000194  EF8B  F000         	goto	l9164
  4252  000198  0A1D               	xorlw	29	; case 48
  4253  00019A  B4D8               	btfsc	status,2,c
  4254  00019C  EF95  F000         	goto	l9168
  4255  0001A0  EFA1  F000         	goto	l9184
  4256  0001A4                     l9190:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4260  0001A4  519A               	movf	vfpfcnvrt@done& (0+255),w,b
  4261  0001A6  119B               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4262  0001A8  B4D8               	btfsc	status,2,c
  4263  0001AA  EFD9  F000         	goto	u11811
  4264  0001AE  EFDB  F000         	goto	u11810
  4265  0001B2                     u11811:
  4266  0001B2  EFA7  F000         	goto	l9188
  4267  0001B6                     u11810:
  4268  0001B6                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4271  0001B6  A059               	btfss	_flags^0,0,c
  4272  0001B8  EFE0  F000         	goto	u11821
  4273  0001BC  EFE2  F000         	goto	u11820
  4274  0001C0                     u11821:
  4275  0001C0  EFE3  F000         	goto	l9194
  4276  0001C4                     u11820:
  4277  0001C4                     
  4278                           ; BSR set to: 0
  4279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4280  0001C4  9259               	bcf	_flags^0,1,c
  4281  0001C6                     l9194:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4285  0001C6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4286  0001CA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4287  0001CE  CFDE FFF6          	movff	postinc2,tblptrl
  4288  0001D2  CFDD FFF7          	movff	postdec2,tblptrh
  4289  0001D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4290  0001D6  6AF8               	clrf	tblptru,c
  4291  0001D8                     	endif
  4292  0001D8                     	if	0	;tblptru may be non-zero
  4293  0001D8                     	endif
  4294  0001D8  0008               	tblrd		*
  4295  0001DA  50F5               	movf	tablat,w,c
  4296  0001DC  0A2A               	xorlw	42
  4297  0001DE  A4D8               	btfss	status,2,c
  4298  0001E0  EFF4  F000         	goto	u11831
  4299  0001E4  EFF6  F000         	goto	u11830
  4300  0001E8                     u11831:
  4301  0001E8  EF1F  F001         	goto	l9202
  4302  0001EC                     u11830:
  4303  0001EC                     
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4306  0001EC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4307  0001F0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4308  0001F4  2ADE               	incf	postinc2,f,c
  4309  0001F6  0E00               	movlw	0
  4310  0001F8  22DD               	addwfc	postdec2,f,c
  4311                           
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4313  0001FA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4314  0001FE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4315  000202  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4316  000206  0E02               	movlw	2
  4317  000208  26DE               	addwf	postinc2,f,c
  4318  00020A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4319  00020E  0E00               	movlw	0
  4320  000210  22DD               	addwfc	postdec2,f,c
  4321  000212  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4322  000216  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4323  00021A  CFDE F0EC          	movff	postinc2,_width
  4324  00021E  CFDD F0ED          	movff	postdec2,_width+1
  4325  000222                     
  4326                           ; BSR set to: 0
  4327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4328  000222  BFED               	btfsc	(_width+1)& (0+255),7,b
  4329  000224  EF18  F001         	goto	u11840
  4330  000228  EF16  F001         	goto	u11841
  4331  00022C                     u11841:
  4332  00022C  EF64  F001         	goto	l9212
  4333  000230                     u11840:
  4334  000230                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4337  000230  8059               	bsf	_flags^0,0,c
  4338                           
  4339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4340  000232  6DEC               	negf	_width& (0+255),b
  4341  000234  1FED               	comf	(_width+1)& (0+255),f,b
  4342  000236  B0D8               	btfsc	status,0,c
  4343  000238  2BED               	incf	(_width+1)& (0+255),f,b
  4344  00023A  EF64  F001         	goto	l9212
  4345  00023E                     l9202:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4349  00023E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4350  000242  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4351  000246  CFDE F00A          	movff	postinc2,atoi@s
  4352  00024A  CFDD F00B          	movff	postdec2,atoi@s+1
  4353  00024E  EC6B  F020         	call	_atoi	;wreg free
  4354  000252  C00A  F0EC         	movff	?_atoi,_width
  4355  000256  C00B  F0ED         	movff	?_atoi+1,_width+1
  4356                           
  4357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4358  00025A  EF36  F001         	goto	l9206
  4359  00025E                     l9204:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4363  00025E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4364  000262  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4365  000266  2ADE               	incf	postinc2,f,c
  4366  000268  0E00               	movlw	0
  4367  00026A  22DD               	addwfc	postdec2,f,c
  4368  00026C                     l9206:
  4369  00026C  0ED0               	movlw	208
  4370  00026E  6E4B               	movwf	??_vfpfcnvrt^0,c
  4371  000270  0EFF               	movlw	255
  4372  000272  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  4373  000274  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4374  000278  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4375  00027C  CFDE FFF6          	movff	postinc2,tblptrl
  4376  000280  CFDD FFF7          	movff	postdec2,tblptrh
  4377  000284                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4378  000284  6AF8               	clrf	tblptru,c
  4379  000286                     	endif
  4380  000286                     	if	0	;tblptru may be non-zero
  4381  000286                     	endif
  4382  000286  0008               	tblrd		*
  4383  000288  50F5               	movf	tablat,w,c
  4384  00028A  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  4385  00028C  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  4386  00028E  504B               	movf	??_vfpfcnvrt^0,w,c
  4387  000290  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4388  000292  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4389  000294  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4390  000296  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  4391  000298  E10A               	bnz	u11850
  4392  00029A  0E0A               	movlw	10
  4393  00029C  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4394  00029E  A0D8               	btfss	status,0,c
  4395  0002A0  EF54  F001         	goto	u11851
  4396  0002A4  EF57  F001         	goto	u11850
  4397  0002A8                     u11851:
  4398  0002A8  0E01               	movlw	1
  4399  0002AA  EF58  F001         	goto	u11860
  4400  0002AE                     u11850:
  4401  0002AE  0E00               	movlw	0
  4402  0002B0                     u11860:
  4403  0002B0  0100               	movlb	0	; () banked
  4404  0002B2  6F9C               	movwf	_vfpfcnvrt$1779& (0+255),b
  4405  0002B4  6B9D               	clrf	(_vfpfcnvrt$1779+1)& (0+255),b
  4406  0002B6                     
  4407                           ; BSR set to: 0
  4408  0002B6  519C               	movf	_vfpfcnvrt$1779& (0+255),w,b
  4409  0002B8  119D               	iorwf	(_vfpfcnvrt$1779+1)& (0+255),w,b
  4410  0002BA  A4D8               	btfss	status,2,c
  4411  0002BC  EF62  F001         	goto	u11871
  4412  0002C0  EF64  F001         	goto	u11870
  4413  0002C4                     u11871:
  4414  0002C4  EF2F  F001         	goto	l9204
  4415  0002C8                     u11870:
  4416  0002C8                     l9212:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4420  0002C8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4421  0002CC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4422  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4423  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4424  0002D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4425  0002D8  6AF8               	clrf	tblptru,c
  4426  0002DA                     	endif
  4427  0002DA                     	if	0	;tblptru may be non-zero
  4428  0002DA                     	endif
  4429  0002DA  0008               	tblrd		*
  4430  0002DC  50F5               	movf	tablat,w,c
  4431  0002DE  0A2E               	xorlw	46
  4432  0002E0  A4D8               	btfss	status,2,c
  4433  0002E2  EF75  F001         	goto	u11881
  4434  0002E6  EF77  F001         	goto	u11880
  4435  0002EA                     u11881:
  4436  0002EA  EFF7  F001         	goto	l9232
  4437  0002EE                     u11880:
  4438  0002EE                     
  4439                           ; BSR set to: 0
  4440                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4441  0002EE  0E00               	movlw	0
  4442  0002F0  6E58               	movwf	(_prec+1)^0,c
  4443  0002F2  0E00               	movlw	0
  4444  0002F4  6E57               	movwf	_prec^0,c
  4445  0002F6                     
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4448  0002F6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4449  0002FA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4450  0002FE  2ADE               	incf	postinc2,f,c
  4451  000300  0E00               	movlw	0
  4452  000302  22DD               	addwfc	postdec2,f,c
  4453  000304                     
  4454                           ; BSR set to: 0
  4455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4456  000304  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4457  000308  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4458  00030C  CFDE FFF6          	movff	postinc2,tblptrl
  4459  000310  CFDD FFF7          	movff	postdec2,tblptrh
  4460  000314                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4461  000314  6AF8               	clrf	tblptru,c
  4462  000316                     	endif
  4463  000316                     	if	0	;tblptru may be non-zero
  4464  000316                     	endif
  4465  000316  0008               	tblrd		*
  4466  000318  50F5               	movf	tablat,w,c
  4467  00031A  0A2A               	xorlw	42
  4468  00031C  A4D8               	btfss	status,2,c
  4469  00031E  EF93  F001         	goto	u11891
  4470  000322  EF95  F001         	goto	u11890
  4471  000326                     u11891:
  4472  000326  EFB2  F001         	goto	l9222
  4473  00032A                     u11890:
  4474  00032A                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4477  00032A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4478  00032E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4479  000332  2ADE               	incf	postinc2,f,c
  4480  000334  0E00               	movlw	0
  4481  000336  22DD               	addwfc	postdec2,f,c
  4482                           
  4483                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4484  000338  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4485  00033C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4486  000340  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4487  000344  0E02               	movlw	2
  4488  000346  26DE               	addwf	postinc2,f,c
  4489  000348  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4490  00034C  0E00               	movlw	0
  4491  00034E  22DD               	addwfc	postdec2,f,c
  4492  000350  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4493  000354  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4494  000358  CFDE F057          	movff	postinc2,_prec
  4495  00035C  CFDD F058          	movff	postdec2,_prec+1
  4496                           
  4497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4498  000360  EFF7  F001         	goto	l9232
  4499  000364                     l9222:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4503  000364  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4504  000368  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4505  00036C  CFDE F00A          	movff	postinc2,atoi@s
  4506  000370  CFDD F00B          	movff	postdec2,atoi@s+1
  4507  000374  EC6B  F020         	call	_atoi	;wreg free
  4508  000378  C00A  F057         	movff	?_atoi,_prec
  4509  00037C  C00B  F058         	movff	?_atoi+1,_prec+1
  4510                           
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4512  000380  EFC9  F001         	goto	l9226
  4513  000384                     l9224:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4517  000384  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4518  000388  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4519  00038C  2ADE               	incf	postinc2,f,c
  4520  00038E  0E00               	movlw	0
  4521  000390  22DD               	addwfc	postdec2,f,c
  4522  000392                     l9226:
  4523  000392  0ED0               	movlw	208
  4524  000394  6E4B               	movwf	??_vfpfcnvrt^0,c
  4525  000396  0EFF               	movlw	255
  4526  000398  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  4527  00039A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4528  00039E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4529  0003A2  CFDE FFF6          	movff	postinc2,tblptrl
  4530  0003A6  CFDD FFF7          	movff	postdec2,tblptrh
  4531  0003AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4532  0003AA  6AF8               	clrf	tblptru,c
  4533  0003AC                     	endif
  4534  0003AC                     	if	0	;tblptru may be non-zero
  4535  0003AC                     	endif
  4536  0003AC  0008               	tblrd		*
  4537  0003AE  50F5               	movf	tablat,w,c
  4538  0003B0  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  4539  0003B2  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  4540  0003B4  504B               	movf	??_vfpfcnvrt^0,w,c
  4541  0003B6  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4542  0003B8  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  4543  0003BA  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4544  0003BC  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  4545  0003BE  E10A               	bnz	u11900
  4546  0003C0  0E0A               	movlw	10
  4547  0003C2  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4548  0003C4  A0D8               	btfss	status,0,c
  4549  0003C6  EFE7  F001         	goto	u11901
  4550  0003CA  EFEA  F001         	goto	u11900
  4551  0003CE                     u11901:
  4552  0003CE  0E01               	movlw	1
  4553  0003D0  EFEB  F001         	goto	u11910
  4554  0003D4                     u11900:
  4555  0003D4  0E00               	movlw	0
  4556  0003D6                     u11910:
  4557  0003D6  0100               	movlb	0	; () banked
  4558  0003D8  6F9E               	movwf	_vfpfcnvrt$1780& (0+255),b
  4559  0003DA  6B9F               	clrf	(_vfpfcnvrt$1780+1)& (0+255),b
  4560  0003DC                     
  4561                           ; BSR set to: 0
  4562  0003DC  519E               	movf	_vfpfcnvrt$1780& (0+255),w,b
  4563  0003DE  119F               	iorwf	(_vfpfcnvrt$1780+1)& (0+255),w,b
  4564  0003E0  A4D8               	btfss	status,2,c
  4565  0003E2  EFF5  F001         	goto	u11921
  4566  0003E6  EFF7  F001         	goto	u11920
  4567  0003EA                     u11921:
  4568  0003EA  EFC2  F001         	goto	l9224
  4569  0003EE                     u11920:
  4570  0003EE                     l9232:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4574  0003EE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4575  0003F2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4576  0003F6  CFDE FFF6          	movff	postinc2,tblptrl
  4577  0003FA  CFDD FFF7          	movff	postdec2,tblptrh
  4578  0003FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4579  0003FE  6AF8               	clrf	tblptru,c
  4580  000400                     	endif
  4581  000400                     	if	0	;tblptru may be non-zero
  4582  000400                     	endif
  4583  000400  0008               	tblrd		*
  4584  000402  50F5               	movf	tablat,w,c
  4585  000404  6E09               	movwf	tolower@c^0,c
  4586  000406  6A0A               	clrf	(tolower@c+1)^0,c
  4587  000408  EC55  F02C         	call	_tolower	;wreg free
  4588  00040C  5009               	movf	?_tolower^0,w,c
  4589  00040E  0100               	movlb	0	; () banked
  4590  000410  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  4591  000412                     
  4592                           ; BSR set to: 0
  4593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4594  000412  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  4595  000414  B4D8               	btfsc	status,2,c
  4596  000416  EF0F  F002         	goto	u11931
  4597  00041A  EF11  F002         	goto	u11930
  4598  00041E                     u11931:
  4599  00041E  EF4D  F002         	goto	l9242
  4600  000422                     u11930:
  4601  000422                     
  4602                           ; BSR set to: 0
  4603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4604  000422  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4605  000426  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4606  00042A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  4607  00042E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  4608  000432  0E01               	movlw	1
  4609  000434  264B               	addwf	??_vfpfcnvrt^0,f,c
  4610  000436  0E00               	movlw	0
  4611  000438  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4612  00043A  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4613  00043E  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4614  000442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4615  000442  6AF8               	clrf	tblptru,c
  4616  000444                     	endif
  4617  000444                     	if	0	;tblptru may be non-zero
  4618  000444                     	endif
  4619  000444  0008               	tblrd		*
  4620  000446  50F5               	movf	tablat,w,c
  4621  000448  6E09               	movwf	tolower@c^0,c
  4622  00044A  6A0A               	clrf	(tolower@c+1)^0,c
  4623  00044C  EC55  F02C         	call	_tolower	;wreg free
  4624  000450  5009               	movf	?_tolower^0,w,c
  4625  000452  0100               	movlb	0	; () banked
  4626  000454  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4627  000456                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4630  000456  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4631  000458  B4D8               	btfsc	status,2,c
  4632  00045A  EF31  F002         	goto	u11941
  4633  00045E  EF33  F002         	goto	u11940
  4634  000462                     u11941:
  4635  000462  EF4D  F002         	goto	l9242
  4636  000466                     u11940:
  4637  000466                     
  4638                           ; BSR set to: 0
  4639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4640  000466  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4641  00046A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4642  00046E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  4643  000472  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  4644  000476  0E02               	movlw	2
  4645  000478  264B               	addwf	??_vfpfcnvrt^0,f,c
  4646  00047A  0E00               	movlw	0
  4647  00047C  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4648  00047E  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4649  000482  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4650  000486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4651  000486  6AF8               	clrf	tblptru,c
  4652  000488                     	endif
  4653  000488                     	if	0	;tblptru may be non-zero
  4654  000488                     	endif
  4655  000488  0008               	tblrd		*
  4656  00048A  50F5               	movf	tablat,w,c
  4657  00048C  6E09               	movwf	tolower@c^0,c
  4658  00048E  6A0A               	clrf	(tolower@c+1)^0,c
  4659  000490  EC55  F02C         	call	_tolower	;wreg free
  4660  000494  5009               	movf	?_tolower^0,w,c
  4661  000496  0100               	movlb	0	; () banked
  4662  000498  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4663  00049A                     l9242:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4667  00049A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4668  00049E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4669  0004A2  CFDE FFF6          	movff	postinc2,tblptrl
  4670  0004A6  CFDD FFF7          	movff	postdec2,tblptrh
  4671  0004AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4672  0004AA  6AF8               	clrf	tblptru,c
  4673  0004AC                     	endif
  4674  0004AC                     	if	0	;tblptru may be non-zero
  4675  0004AC                     	endif
  4676  0004AC  0008               	tblrd		*
  4677  0004AE  50F5               	movf	tablat,w,c
  4678  0004B0  0A63               	xorlw	99
  4679  0004B2  A4D8               	btfss	status,2,c
  4680  0004B4  EF5E  F002         	goto	u11951
  4681  0004B8  EF60  F002         	goto	u11950
  4682  0004BC                     u11951:
  4683  0004BC  EF87  F002         	goto	l9250
  4684  0004C0                     u11950:
  4685  0004C0                     
  4686                           ; BSR set to: 0
  4687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4688  0004C0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4689  0004C4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4690  0004C8  2ADE               	incf	postinc2,f,c
  4691  0004CA  0E00               	movlw	0
  4692  0004CC  22DD               	addwfc	postdec2,f,c
  4693                           
  4694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4695  0004CE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4696  0004D2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4697  0004D6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4698  0004DA  0E02               	movlw	2
  4699  0004DC  26DE               	addwf	postinc2,f,c
  4700  0004DE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4701  0004E2  0E00               	movlw	0
  4702  0004E4  22DD               	addwfc	postdec2,f,c
  4703  0004E6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4704  0004EA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4705  0004EE  50DF               	movf	indf2,w,c
  4706  0004F0  6FB3               	movwf	vfpfcnvrt@c& (0+255),b
  4707  0004F2                     
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4710  0004F2  C045  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  4711  0004F6  C046  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4712  0004FA  C0B3  F020         	movff	vfpfcnvrt@c,ctoa@c
  4713  0004FE  ECE3  F02C         	call	_ctoa	;wreg free
  4714  000502  C01E  F045         	movff	?_ctoa,?_vfpfcnvrt
  4715  000506  C01F  F046         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4716  00050A  EFD1  F00A         	goto	l905
  4717  00050E                     l9250:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4721  00050E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4722  000512  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4723  000516  CFDE F003          	movff	postinc2,strncmp@_l
  4724  00051A  CFDD F004          	movff	postdec2,strncmp@_l+1
  4725  00051E  0EC6               	movlw	low STR_14
  4726  000520  6E05               	movwf	strncmp@_r^0,c
  4727  000522  0EFF               	movlw	high STR_14
  4728  000524  6E06               	movwf	(strncmp@_r+1)^0,c
  4729  000526  0E00               	movlw	0
  4730  000528  6E08               	movwf	(strncmp@n+1)^0,c
  4731  00052A  0E03               	movlw	3
  4732  00052C  6E07               	movwf	strncmp@n^0,c
  4733  00052E  EC79  F025         	call	_strncmp	;wreg free
  4734  000532  5003               	movf	?_strncmp^0,w,c
  4735  000534  1004               	iorwf	(?_strncmp+1)^0,w,c
  4736  000536  B4D8               	btfsc	status,2,c
  4737  000538  EFA0  F002         	goto	u11961
  4738  00053C  EFA2  F002         	goto	u11960
  4739  000540                     u11961:
  4740  000540  EFBD  F002         	goto	l9254
  4741  000544                     u11960:
  4742  000544  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4743  000548  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4744  00054C  CFDE F003          	movff	postinc2,strncmp@_l
  4745  000550  CFDD F004          	movff	postdec2,strncmp@_l+1
  4746  000554  0ECE               	movlw	low STR_18
  4747  000556  6E05               	movwf	strncmp@_r^0,c
  4748  000558  0EFF               	movlw	high STR_18
  4749  00055A  6E06               	movwf	(strncmp@_r+1)^0,c
  4750  00055C  0E00               	movlw	0
  4751  00055E  6E08               	movwf	(strncmp@n+1)^0,c
  4752  000560  0E03               	movlw	3
  4753  000562  6E07               	movwf	strncmp@n^0,c
  4754  000564  EC79  F025         	call	_strncmp	;wreg free
  4755  000568  5003               	movf	?_strncmp^0,w,c
  4756  00056A  1004               	iorwf	(?_strncmp+1)^0,w,c
  4757  00056C  A4D8               	btfss	status,2,c
  4758  00056E  EFBB  F002         	goto	u11971
  4759  000572  EFBD  F002         	goto	u11970
  4760  000576                     u11971:
  4761  000576  EFFE  F002         	goto	l9260
  4762  00057A                     u11970:
  4763  00057A                     l9254:
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4766  00057A  0E03               	movlw	3
  4767  00057C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4768  000580  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4769  000584  26DE               	addwf	postinc2,f,c
  4770  000586  0E00               	movlw	0
  4771  000588  22DD               	addwfc	postdec2,f,c
  4772                           
  4773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4774  00058A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4775  00058E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4776  000592  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4777  000596  0E02               	movlw	2
  4778  000598  26DE               	addwf	postinc2,f,c
  4779  00059A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4780  00059E  0E00               	movlw	0
  4781  0005A0  22DD               	addwfc	postdec2,f,c
  4782  0005A2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4783  0005A6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4784  0005AA  50DF               	movf	indf2,w,c
  4785  0005AC  0100               	movlb	0	; () banked
  4786  0005AE  6FA9               	movwf	vfpfcnvrt@ll& (0+255),b
  4787  0005B0  0E00               	movlw	0
  4788  0005B2  BFA9               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4789  0005B4  0EFF               	movlw	-1
  4790  0005B6  6FAA               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4791  0005B8  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4792  0005BA  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4793  0005BC  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4794  0005BE  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4795  0005C0  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4796  0005C2  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4797  0005C4                     l9256:
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4801  0005C4  C045  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4802  0005C8  C046  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4803  0005CC  C0A9  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4804  0005D0  C0AA  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4805  0005D4  C0AB  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4806  0005D8  C0AC  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4807  0005DC  C0AD  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4808  0005E0  C0AE  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4809  0005E4  C0AF  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4810  0005E8  C0B0  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4811  0005EC  ECB0  F018         	call	_dtoa	;wreg free
  4812  0005F0  C01E  F045         	movff	?_dtoa,?_vfpfcnvrt
  4813  0005F4  C01F  F046         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4814  0005F8  EFD1  F00A         	goto	l905
  4815  0005FC                     l9260:
  4816                           
  4817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4818  0005FC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4819  000600  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4820  000604  CFDE F003          	movff	postinc2,strncmp@_l
  4821  000608  CFDD F004          	movff	postdec2,strncmp@_l+1
  4822  00060C  0EC7               	movlw	low (STR_14+1)
  4823  00060E  6E05               	movwf	strncmp@_r^0,c
  4824  000610  0EFF               	movlw	high (STR_14+1)
  4825  000612  6E06               	movwf	(strncmp@_r+1)^0,c
  4826  000614  0E00               	movlw	0
  4827  000616  6E08               	movwf	(strncmp@n+1)^0,c
  4828  000618  0E02               	movlw	2
  4829  00061A  6E07               	movwf	strncmp@n^0,c
  4830  00061C  EC79  F025         	call	_strncmp	;wreg free
  4831  000620  5003               	movf	?_strncmp^0,w,c
  4832  000622  1004               	iorwf	(?_strncmp+1)^0,w,c
  4833  000624  B4D8               	btfsc	status,2,c
  4834  000626  EF17  F003         	goto	u11981
  4835  00062A  EF19  F003         	goto	u11980
  4836  00062E                     u11981:
  4837  00062E  EF34  F003         	goto	l9264
  4838  000632                     u11980:
  4839  000632  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4840  000636  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4841  00063A  CFDE F003          	movff	postinc2,strncmp@_l
  4842  00063E  CFDD F004          	movff	postdec2,strncmp@_l+1
  4843  000642  0ECF               	movlw	low (STR_18+1)
  4844  000644  6E05               	movwf	strncmp@_r^0,c
  4845  000646  0EFF               	movlw	high (STR_18+1)
  4846  000648  6E06               	movwf	(strncmp@_r+1)^0,c
  4847  00064A  0E00               	movlw	0
  4848  00064C  6E08               	movwf	(strncmp@n+1)^0,c
  4849  00064E  0E02               	movlw	2
  4850  000650  6E07               	movwf	strncmp@n^0,c
  4851  000652  EC79  F025         	call	_strncmp	;wreg free
  4852  000656  5003               	movf	?_strncmp^0,w,c
  4853  000658  1004               	iorwf	(?_strncmp+1)^0,w,c
  4854  00065A  A4D8               	btfss	status,2,c
  4855  00065C  EF32  F003         	goto	u11991
  4856  000660  EF34  F003         	goto	u11990
  4857  000664                     u11991:
  4858  000664  EF5C  F003         	goto	l9270
  4859  000668                     u11990:
  4860  000668                     l9264:
  4861                           
  4862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4863  000668  0E02               	movlw	2
  4864  00066A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4865  00066E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4866  000672  26DE               	addwf	postinc2,f,c
  4867  000674  0E00               	movlw	0
  4868  000676  22DD               	addwfc	postdec2,f,c
  4869                           
  4870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4871  000678  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4872  00067C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4873  000680  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4874  000684  0E02               	movlw	2
  4875  000686  26DE               	addwf	postinc2,f,c
  4876  000688  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4877  00068C  0E00               	movlw	0
  4878  00068E  22DD               	addwfc	postdec2,f,c
  4879  000690  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4880  000694  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4881  000698  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4882  00069C  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4883  0006A0  0100               	movlb	0	; () banked
  4884  0006A2  0E00               	movlw	0
  4885  0006A4  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4886  0006A6  0EFF               	movlw	-1
  4887  0006A8  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4888  0006AA  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4889  0006AC  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4890  0006AE  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4891  0006B0  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4892  0006B2  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4893  0006B4  EFE2  F002         	goto	l9256
  4894  0006B8                     l9270:
  4895                           
  4896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4897  0006B8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4898  0006BC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4899  0006C0  CFDE FFF6          	movff	postinc2,tblptrl
  4900  0006C4  CFDD FFF7          	movff	postdec2,tblptrh
  4901  0006C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4902  0006C8  6AF8               	clrf	tblptru,c
  4903  0006CA                     	endif
  4904  0006CA                     	if	0	;tblptru may be non-zero
  4905  0006CA                     	endif
  4906  0006CA  0008               	tblrd		*
  4907  0006CC  50F5               	movf	tablat,w,c
  4908  0006CE  0A64               	xorlw	100
  4909  0006D0  B4D8               	btfsc	status,2,c
  4910  0006D2  EF6D  F003         	goto	u12001
  4911  0006D6  EF6F  F003         	goto	u12000
  4912  0006DA                     u12001:
  4913  0006DA  EF82  F003         	goto	l9274
  4914  0006DE                     u12000:
  4915  0006DE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4916  0006E2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4917  0006E6  CFDE FFF6          	movff	postinc2,tblptrl
  4918  0006EA  CFDD FFF7          	movff	postdec2,tblptrh
  4919  0006EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4920  0006EE  6AF8               	clrf	tblptru,c
  4921  0006F0                     	endif
  4922  0006F0                     	if	0	;tblptru may be non-zero
  4923  0006F0                     	endif
  4924  0006F0  0008               	tblrd		*
  4925  0006F2  50F5               	movf	tablat,w,c
  4926  0006F4  0A69               	xorlw	105
  4927  0006F6  A4D8               	btfss	status,2,c
  4928  0006F8  EF80  F003         	goto	u12011
  4929  0006FC  EF82  F003         	goto	u12010
  4930  000700                     u12011:
  4931  000700  EFA9  F003         	goto	l9280
  4932  000704                     u12010:
  4933  000704                     l9274:
  4934                           
  4935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4936  000704  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4937  000708  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4938  00070C  2ADE               	incf	postinc2,f,c
  4939  00070E  0E00               	movlw	0
  4940  000710  22DD               	addwfc	postdec2,f,c
  4941                           
  4942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4943  000712  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4944  000716  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4945  00071A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  4946  00071E  0E02               	movlw	2
  4947  000720  26DE               	addwf	postinc2,f,c
  4948  000722  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  4949  000726  0E00               	movlw	0
  4950  000728  22DD               	addwfc	postdec2,f,c
  4951  00072A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4952  00072E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4953  000732  CFDE F0A9          	movff	postinc2,vfpfcnvrt@ll
  4954  000736  CFDD F0AA          	movff	postdec2,vfpfcnvrt@ll+1
  4955  00073A  0100               	movlb	0	; () banked
  4956  00073C  0E00               	movlw	0
  4957  00073E  BFAA               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4958  000740  0EFF               	movlw	-1
  4959  000742  6FAB               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4960  000744  6FAC               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4961  000746  6FAD               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4962  000748  6FAE               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4963  00074A  6FAF               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4964  00074C  6FB0               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4965  00074E  EFE2  F002         	goto	l9256
  4966  000752                     l9280:
  4967                           
  4968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4969  000752  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4970  000756  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4971  00075A  CFDE F003          	movff	postinc2,strncmp@_l
  4972  00075E  CFDD F004          	movff	postdec2,strncmp@_l+1
  4973  000762  0EE9               	movlw	low STR_32
  4974  000764  6E05               	movwf	strncmp@_r^0,c
  4975  000766  0EFF               	movlw	high STR_32
  4976  000768  6E06               	movwf	(strncmp@_r+1)^0,c
  4977  00076A  0E00               	movlw	0
  4978  00076C  6E08               	movwf	(strncmp@n+1)^0,c
  4979  00076E  0E02               	movlw	2
  4980  000770  6E07               	movwf	strncmp@n^0,c
  4981  000772  EC79  F025         	call	_strncmp	;wreg free
  4982  000776  5003               	movf	?_strncmp^0,w,c
  4983  000778  1004               	iorwf	(?_strncmp+1)^0,w,c
  4984  00077A  B4D8               	btfsc	status,2,c
  4985  00077C  EFC2  F003         	goto	u12021
  4986  000780  EFC4  F003         	goto	u12020
  4987  000784                     u12021:
  4988  000784  EFDF  F003         	goto	l9284
  4989  000788                     u12020:
  4990  000788  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4991  00078C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4992  000790  CFDE F003          	movff	postinc2,strncmp@_l
  4993  000794  CFDD F004          	movff	postdec2,strncmp@_l+1
  4994  000798  0EEF               	movlw	low STR_36
  4995  00079A  6E05               	movwf	strncmp@_r^0,c
  4996  00079C  0EFF               	movlw	high STR_36
  4997  00079E  6E06               	movwf	(strncmp@_r+1)^0,c
  4998  0007A0  0E00               	movlw	0
  4999  0007A2  6E08               	movwf	(strncmp@n+1)^0,c
  5000  0007A4  0E02               	movlw	2
  5001  0007A6  6E07               	movwf	strncmp@n^0,c
  5002  0007A8  EC79  F025         	call	_strncmp	;wreg free
  5003  0007AC  5003               	movf	?_strncmp^0,w,c
  5004  0007AE  1004               	iorwf	(?_strncmp+1)^0,w,c
  5005  0007B0  A4D8               	btfss	status,2,c
  5006  0007B2  EFDD  F003         	goto	u12031
  5007  0007B6  EFDF  F003         	goto	u12030
  5008  0007BA                     u12031:
  5009  0007BA  EF08  F004         	goto	l9290
  5010  0007BE                     u12030:
  5011  0007BE                     l9284:
  5012                           
  5013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5014  0007BE  0E02               	movlw	2
  5015  0007C0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5016  0007C4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5017  0007C8  26DE               	addwf	postinc2,f,c
  5018  0007CA  0E00               	movlw	0
  5019  0007CC  22DD               	addwfc	postdec2,f,c
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5022  0007CE  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5023  0007D2  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5024  0007D6  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5025  0007DA  0E02               	movlw	2
  5026  0007DC  26DE               	addwf	postinc2,f,c
  5027  0007DE  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5028  0007E2  0E00               	movlw	0
  5029  0007E4  22DD               	addwfc	postdec2,f,c
  5030  0007E6  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5031  0007EA  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5032  0007EE  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5033  0007F2  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5034  0007F6  C04D  F0A9         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5035  0007FA  C04E  F0AA         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5036  0007FE  0100               	movlb	0	; () banked
  5037  000800  6BAB               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5038  000802  6BAC               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5039  000804  6BAD               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5040  000806  6BAE               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5041  000808  6BAF               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5042  00080A  6BB0               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5043  00080C  EFE2  F002         	goto	l9256
  5044  000810                     l9290:
  5045                           
  5046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5047  000810  0E66               	movlw	102
  5048  000812  0100               	movlb	0	; () banked
  5049  000814  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5050  000816  A4D8               	btfss	status,2,c
  5051  000818  EF10  F004         	goto	u12041
  5052  00081C  EF12  F004         	goto	u12040
  5053  000820                     u12041:
  5054  000820  EF53  F004         	goto	l9302
  5055  000824                     u12040:
  5056  000824                     
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5059  000824  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5060  000828  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5061  00082C  CFDE FFF6          	movff	postinc2,tblptrl
  5062  000830  CFDD FFF7          	movff	postdec2,tblptrh
  5063  000834                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5064  000834  6AF8               	clrf	tblptru,c
  5065  000836                     	endif
  5066  000836                     	if	0	;tblptru may be non-zero
  5067  000836                     	endif
  5068  000836  0008               	tblrd		*
  5069  000838  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5070  00083C                     
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5073  00083C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5074  000840  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5075  000844  2ADE               	incf	postinc2,f,c
  5076  000846  0E00               	movlw	0
  5077  000848  22DD               	addwfc	postdec2,f,c
  5078  00084A                     
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5081  00084A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5082  00084E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5083  000852  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5084  000856  0E04               	movlw	4
  5085  000858  26DE               	addwf	postinc2,f,c
  5086  00085A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5087  00085E  0E00               	movlw	0
  5088  000860  22DD               	addwfc	postdec2,f,c
  5089  000862  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5090  000866  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5091  00086A  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  5092  00086E  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  5093  000872  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  5094  000876  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  5095  00087A                     l9298:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5099  00087A  C045  F036         	movff	vfpfcnvrt@fp,efgtoa@fp
  5100  00087E  C046  F037         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5101  000882  C0A2  F038         	movff	vfpfcnvrt@f,efgtoa@f
  5102  000886  C0A3  F039         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5103  00088A  C0A4  F03A         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5104  00088E  C0A5  F03B         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5105  000892  C0B3  F03C         	movff	vfpfcnvrt@c,efgtoa@c
  5106  000896  ECD2  F00A         	call	_efgtoa	;wreg free
  5107  00089A  C036  F045         	movff	?_efgtoa,?_vfpfcnvrt
  5108  00089E  C037  F046         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5109  0008A2  EFD1  F00A         	goto	l905
  5110  0008A6                     l9302:
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5114  0008A6  0EA6               	movlw	low vfpfcnvrt@ct
  5115  0008A8  6E03               	movwf	strncmp@_l^0,c
  5116  0008AA  0E00               	movlw	high vfpfcnvrt@ct
  5117  0008AC  6E04               	movwf	(strncmp@_l+1)^0,c
  5118  0008AE  0EEC               	movlw	low STR_41
  5119  0008B0  6E05               	movwf	strncmp@_r^0,c
  5120  0008B2  0EFF               	movlw	high STR_41
  5121  0008B4  6E06               	movwf	(strncmp@_r+1)^0,c
  5122  0008B6  0E00               	movlw	0
  5123  0008B8  6E08               	movwf	(strncmp@n+1)^0,c
  5124  0008BA  0E02               	movlw	2
  5125  0008BC  6E07               	movwf	strncmp@n^0,c
  5126  0008BE  EC79  F025         	call	_strncmp	;wreg free
  5127  0008C2  5003               	movf	?_strncmp^0,w,c
  5128  0008C4  1004               	iorwf	(?_strncmp+1)^0,w,c
  5129  0008C6  A4D8               	btfss	status,2,c
  5130  0008C8  EF68  F004         	goto	u12051
  5131  0008CC  EF6A  F004         	goto	u12050
  5132  0008D0                     u12051:
  5133  0008D0  EFE8  F004         	goto	l9318
  5134  0008D4                     u12050:
  5135  0008D4                     
  5136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5137  0008D4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5138  0008D8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5139  0008DC  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  5140  0008E0  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  5141  0008E4  0E01               	movlw	1
  5142  0008E6  264B               	addwf	??_vfpfcnvrt^0,f,c
  5143  0008E8  0E00               	movlw	0
  5144  0008EA  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5145  0008EC  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5146  0008F0  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5147  0008F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5148  0008F4  6AF8               	clrf	tblptru,c
  5149  0008F6                     	endif
  5150  0008F6                     	if	0	;tblptru may be non-zero
  5151  0008F6                     	endif
  5152  0008F6  0008               	tblrd		*
  5153  0008F8  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  5154  0008FC  0EBF               	movlw	191
  5155  0008FE  6E4B               	movwf	??_vfpfcnvrt^0,c
  5156  000900  0EFF               	movlw	255
  5157  000902  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  5158  000904  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5159  000908  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5160  00090C  CFDE FFF6          	movff	postinc2,tblptrl
  5161  000910  CFDD FFF7          	movff	postdec2,tblptrh
  5162  000914                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5163  000914  6AF8               	clrf	tblptru,c
  5164  000916                     	endif
  5165  000916                     	if	0	;tblptru may be non-zero
  5166  000916                     	endif
  5167  000916  0008               	tblrd		*
  5168  000918  50F5               	movf	tablat,w,c
  5169  00091A  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  5170  00091C  6A4E               	clrf	(??_vfpfcnvrt+3)^0,c
  5171  00091E  504B               	movf	??_vfpfcnvrt^0,w,c
  5172  000920  264D               	addwf	(??_vfpfcnvrt+2)^0,f,c
  5173  000922  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  5174  000924  224E               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  5175  000926  504E               	movf	(??_vfpfcnvrt+3)^0,w,c
  5176  000928  E10A               	bnz	u12060
  5177  00092A  0E1A               	movlw	26
  5178  00092C  5C4D               	subwf	(??_vfpfcnvrt+2)^0,w,c
  5179  00092E  A0D8               	btfss	status,0,c
  5180  000930  EF9C  F004         	goto	u12061
  5181  000934  EF9F  F004         	goto	u12060
  5182  000938                     u12061:
  5183  000938  0E01               	movlw	1
  5184  00093A  EFA0  F004         	goto	u12070
  5185  00093E                     u12060:
  5186  00093E  0E00               	movlw	0
  5187  000940                     u12070:
  5188  000940  0100               	movlb	0	; () banked
  5189  000942  6FA0               	movwf	_vfpfcnvrt$1801& (0+255),b
  5190  000944  6BA1               	clrf	(_vfpfcnvrt$1801+1)& (0+255),b
  5191  000946                     
  5192                           ; BSR set to: 0
  5193  000946  51A0               	movf	_vfpfcnvrt$1801& (0+255),w,b
  5194  000948  11A1               	iorwf	(_vfpfcnvrt$1801+1)& (0+255),w,b
  5195  00094A  B4D8               	btfsc	status,2,c
  5196  00094C  EFAA  F004         	goto	u12081
  5197  000950  EFAC  F004         	goto	u12080
  5198  000954                     u12081:
  5199  000954  EFC6  F004         	goto	l9312
  5200  000958                     u12080:
  5201  000958                     
  5202                           ; BSR set to: 0
  5203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5204  000958  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5205  00095C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5206  000960  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5207  000964  0E04               	movlw	4
  5208  000966  26DE               	addwf	postinc2,f,c
  5209  000968  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5210  00096C  0E00               	movlw	0
  5211  00096E  22DD               	addwfc	postdec2,f,c
  5212  000970  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5213  000974  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5214  000978  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  5215  00097C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  5216  000980  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  5217  000984  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  5218                           
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5220  000988  EFDE  F004         	goto	l925
  5221  00098C                     l9312:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5225  00098C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5226  000990  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5227  000994  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5228  000998  0E04               	movlw	4
  5229  00099A  26DE               	addwf	postinc2,f,c
  5230  00099C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5231  0009A0  0E00               	movlw	0
  5232  0009A2  22DD               	addwfc	postdec2,f,c
  5233  0009A4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5234  0009A8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5235  0009AC  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  5236  0009B0  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  5237  0009B4  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  5238  0009B8  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  5239  0009BC                     l925:
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5243  0009BC  0E02               	movlw	2
  5244  0009BE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5245  0009C2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5246  0009C6  26DE               	addwf	postinc2,f,c
  5247  0009C8  0E00               	movlw	0
  5248  0009CA  22DD               	addwfc	postdec2,f,c
  5249  0009CC  EF3D  F004         	goto	l9298
  5250  0009D0                     l9318:
  5251                           
  5252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5253  0009D0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5254  0009D4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5255  0009D8  CFDE F003          	movff	postinc2,strncmp@_l
  5256  0009DC  CFDD F004          	movff	postdec2,strncmp@_l+1
  5257  0009E0  0EDA               	movlw	low STR_46
  5258  0009E2  6E05               	movwf	strncmp@_r^0,c
  5259  0009E4  0EFF               	movlw	high STR_46
  5260  0009E6  6E06               	movwf	(strncmp@_r+1)^0,c
  5261  0009E8  0E00               	movlw	0
  5262  0009EA  6E08               	movwf	(strncmp@n+1)^0,c
  5263  0009EC  0E03               	movlw	3
  5264  0009EE  6E07               	movwf	strncmp@n^0,c
  5265  0009F0  EC79  F025         	call	_strncmp	;wreg free
  5266  0009F4  5003               	movf	?_strncmp^0,w,c
  5267  0009F6  1004               	iorwf	(?_strncmp+1)^0,w,c
  5268  0009F8  A4D8               	btfss	status,2,c
  5269  0009FA  EF01  F005         	goto	u12091
  5270  0009FE  EF03  F005         	goto	u12090
  5271  000A02                     u12091:
  5272  000A02  EF43  F005         	goto	l9326
  5273  000A06                     u12090:
  5274  000A06                     
  5275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5276  000A06  0E03               	movlw	3
  5277  000A08  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5278  000A0C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5279  000A10  26DE               	addwf	postinc2,f,c
  5280  000A12  0E00               	movlw	0
  5281  000A14  22DD               	addwfc	postdec2,f,c
  5282                           
  5283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5284  000A16  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5285  000A1A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5286  000A1E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5287  000A22  0E02               	movlw	2
  5288  000A24  26DE               	addwf	postinc2,f,c
  5289  000A26  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5290  000A2A  0E00               	movlw	0
  5291  000A2C  22DD               	addwfc	postdec2,f,c
  5292  000A2E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5293  000A32  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5294  000A36  50DF               	movf	indf2,w,c
  5295  000A38  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  5296  000A3A  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  5297  000A3C  0100               	movlb	0	; () banked
  5298  000A3E  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5299  000A40  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5300  000A42  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5301  000A44  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5302  000A46  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5303  000A48  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5304  000A4A  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5305  000A4C  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5306  000A4E                     l9322:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5310  000A4E  C045  F01E         	movff	vfpfcnvrt@fp,otoa@fp
  5311  000A52  C046  F01F         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5312  000A56  C0B4  F020         	movff	vfpfcnvrt@llu,otoa@d
  5313  000A5A  C0B5  F021         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5314  000A5E  C0B6  F022         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5315  000A62  C0B7  F023         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5316  000A66  C0B8  F024         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5317  000A6A  C0B9  F025         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5318  000A6E  C0BA  F026         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5319  000A72  C0BB  F027         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5320  000A76  EC9C  F01E         	call	_otoa	;wreg free
  5321  000A7A  C01E  F045         	movff	?_otoa,?_vfpfcnvrt
  5322  000A7E  C01F  F046         	movff	?_otoa+1,?_vfpfcnvrt+1
  5323  000A82  EFD1  F00A         	goto	l905
  5324  000A86                     l9326:
  5325                           
  5326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5327  000A86  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5328  000A8A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5329  000A8E  CFDE F003          	movff	postinc2,strncmp@_l
  5330  000A92  CFDD F004          	movff	postdec2,strncmp@_l+1
  5331  000A96  0EDB               	movlw	low (STR_46+1)
  5332  000A98  6E05               	movwf	strncmp@_r^0,c
  5333  000A9A  0EFF               	movlw	high (STR_46+1)
  5334  000A9C  6E06               	movwf	(strncmp@_r+1)^0,c
  5335  000A9E  0E00               	movlw	0
  5336  000AA0  6E08               	movwf	(strncmp@n+1)^0,c
  5337  000AA2  0E02               	movlw	2
  5338  000AA4  6E07               	movwf	strncmp@n^0,c
  5339  000AA6  EC79  F025         	call	_strncmp	;wreg free
  5340  000AAA  5003               	movf	?_strncmp^0,w,c
  5341  000AAC  1004               	iorwf	(?_strncmp+1)^0,w,c
  5342  000AAE  A4D8               	btfss	status,2,c
  5343  000AB0  EF5C  F005         	goto	u12101
  5344  000AB4  EF5E  F005         	goto	u12100
  5345  000AB8                     u12101:
  5346  000AB8  EF87  F005         	goto	l9334
  5347  000ABC                     u12100:
  5348  000ABC                     
  5349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5350  000ABC  0E02               	movlw	2
  5351  000ABE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5352  000AC2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5353  000AC6  26DE               	addwf	postinc2,f,c
  5354  000AC8  0E00               	movlw	0
  5355  000ACA  22DD               	addwfc	postdec2,f,c
  5356                           
  5357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5358  000ACC  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5359  000AD0  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5360  000AD4  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5361  000AD8  0E02               	movlw	2
  5362  000ADA  26DE               	addwf	postinc2,f,c
  5363  000ADC  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5364  000AE0  0E00               	movlw	0
  5365  000AE2  22DD               	addwfc	postdec2,f,c
  5366  000AE4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5367  000AE8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5368  000AEC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5369  000AF0  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5370  000AF4  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5371  000AF8  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5372  000AFC  0100               	movlb	0	; () banked
  5373  000AFE  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5374  000B00  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5375  000B02  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5376  000B04  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5377  000B06  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5378  000B08  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5379  000B0A  EF27  F005         	goto	l9322
  5380  000B0E                     l9334:
  5381                           
  5382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5383  000B0E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5384  000B12  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5385  000B16  CFDE FFF6          	movff	postinc2,tblptrl
  5386  000B1A  CFDD FFF7          	movff	postdec2,tblptrh
  5387  000B1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5388  000B1E  6AF8               	clrf	tblptru,c
  5389  000B20                     	endif
  5390  000B20                     	if	0	;tblptru may be non-zero
  5391  000B20                     	endif
  5392  000B20  0008               	tblrd		*
  5393  000B22  50F5               	movf	tablat,w,c
  5394  000B24  0A6F               	xorlw	111
  5395  000B26  A4D8               	btfss	status,2,c
  5396  000B28  EF98  F005         	goto	u12111
  5397  000B2C  EF9A  F005         	goto	u12110
  5398  000B30                     u12111:
  5399  000B30  EFC2  F005         	goto	l9342
  5400  000B34                     u12110:
  5401  000B34                     
  5402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5403  000B34  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5404  000B38  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5405  000B3C  2ADE               	incf	postinc2,f,c
  5406  000B3E  0E00               	movlw	0
  5407  000B40  22DD               	addwfc	postdec2,f,c
  5408                           
  5409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5410  000B42  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5411  000B46  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5412  000B4A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5413  000B4E  0E02               	movlw	2
  5414  000B50  26DE               	addwf	postinc2,f,c
  5415  000B52  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5416  000B56  0E00               	movlw	0
  5417  000B58  22DD               	addwfc	postdec2,f,c
  5418  000B5A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5419  000B5E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5420  000B62  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5421  000B66  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5422  000B6A  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5423  000B6E  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5424  000B72  0100               	movlb	0	; () banked
  5425  000B74  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5426  000B76  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5427  000B78  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5428  000B7A  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5429  000B7C  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5430  000B7E  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5431  000B80  EF27  F005         	goto	l9322
  5432  000B84                     l9342:
  5433                           
  5434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5435  000B84  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5436  000B88  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5437  000B8C  CFDE F003          	movff	postinc2,strncmp@_l
  5438  000B90  CFDD F004          	movff	postdec2,strncmp@_l+1
  5439  000B94  0EF5               	movlw	low STR_56
  5440  000B96  6E05               	movwf	strncmp@_r^0,c
  5441  000B98  0EFF               	movlw	high STR_56
  5442  000B9A  6E06               	movwf	(strncmp@_r+1)^0,c
  5443  000B9C  0E00               	movlw	0
  5444  000B9E  6E08               	movwf	(strncmp@n+1)^0,c
  5445  000BA0  0E02               	movlw	2
  5446  000BA2  6E07               	movwf	strncmp@n^0,c
  5447  000BA4  EC79  F025         	call	_strncmp	;wreg free
  5448  000BA8  5003               	movf	?_strncmp^0,w,c
  5449  000BAA  1004               	iorwf	(?_strncmp+1)^0,w,c
  5450  000BAC  A4D8               	btfss	status,2,c
  5451  000BAE  EFDB  F005         	goto	u12121
  5452  000BB2  EFDD  F005         	goto	u12120
  5453  000BB6                     u12121:
  5454  000BB6  EF06  F006         	goto	l9350
  5455  000BBA                     u12120:
  5456  000BBA                     
  5457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5458  000BBA  0E02               	movlw	2
  5459  000BBC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5460  000BC0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5461  000BC4  26DE               	addwf	postinc2,f,c
  5462  000BC6  0E00               	movlw	0
  5463  000BC8  22DD               	addwfc	postdec2,f,c
  5464                           
  5465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5466  000BCA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5467  000BCE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5468  000BD2  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5469  000BD6  0E02               	movlw	2
  5470  000BD8  26DE               	addwf	postinc2,f,c
  5471  000BDA  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5472  000BDE  0E00               	movlw	0
  5473  000BE0  22DD               	addwfc	postdec2,f,c
  5474  000BE2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5475  000BE6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5476  000BEA  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5477  000BEE  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5478  000BF2  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5479  000BF6  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5480  000BFA  0100               	movlb	0	; () banked
  5481  000BFC  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5482  000BFE  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5483  000C00  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5484  000C02  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5485  000C04  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5486  000C06  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5487  000C08  EF27  F005         	goto	l9322
  5488  000C0C                     l9350:
  5489                           
  5490                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5491  000C0C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5492  000C10  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5493  000C14  CFDE F003          	movff	postinc2,strncmp@_l
  5494  000C18  CFDD F004          	movff	postdec2,strncmp@_l+1
  5495  000C1C  0ED6               	movlw	low STR_61
  5496  000C1E  6E05               	movwf	strncmp@_r^0,c
  5497  000C20  0EFF               	movlw	high STR_61
  5498  000C22  6E06               	movwf	(strncmp@_r+1)^0,c
  5499  000C24  0E00               	movlw	0
  5500  000C26  6E08               	movwf	(strncmp@n+1)^0,c
  5501  000C28  0E03               	movlw	3
  5502  000C2A  6E07               	movwf	strncmp@n^0,c
  5503  000C2C  EC79  F025         	call	_strncmp	;wreg free
  5504  000C30  5003               	movf	?_strncmp^0,w,c
  5505  000C32  1004               	iorwf	(?_strncmp+1)^0,w,c
  5506  000C34  A4D8               	btfss	status,2,c
  5507  000C36  EF1F  F006         	goto	u12131
  5508  000C3A  EF21  F006         	goto	u12130
  5509  000C3E                     u12131:
  5510  000C3E  EF49  F006         	goto	l9360
  5511  000C42                     u12130:
  5512  000C42                     
  5513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5514  000C42  0E03               	movlw	3
  5515  000C44  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5516  000C48  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5517  000C4C  26DE               	addwf	postinc2,f,c
  5518  000C4E  0E00               	movlw	0
  5519  000C50  22DD               	addwfc	postdec2,f,c
  5520                           
  5521                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5522  000C52  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5523  000C56  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5524  000C5A  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5525  000C5E  0E02               	movlw	2
  5526  000C60  26DE               	addwf	postinc2,f,c
  5527  000C62  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5528  000C66  0E00               	movlw	0
  5529  000C68  22DD               	addwfc	postdec2,f,c
  5530  000C6A  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5531  000C6E  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5532  000C72  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5533  000C76  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5534  000C7A                     
  5535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5536  000C7A  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5537  000C7E  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5538  000C82  C0EA  FFDF         	movff	_nout,indf2
  5539  000C86                     l9356:
  5540                           
  5541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5542  000C86  0E00               	movlw	0
  5543  000C88  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  5544  000C8A  0E00               	movlw	0
  5545  000C8C  6E45               	movwf	?_vfpfcnvrt^0,c
  5546  000C8E  EFD1  F00A         	goto	l905
  5547  000C92                     l9360:
  5548                           
  5549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5550  000C92  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5551  000C96  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5552  000C9A  CFDE F003          	movff	postinc2,strncmp@_l
  5553  000C9E  CFDD F004          	movff	postdec2,strncmp@_l+1
  5554  000CA2  0ED7               	movlw	low (STR_61+1)
  5555  000CA4  6E05               	movwf	strncmp@_r^0,c
  5556  000CA6  0EFF               	movlw	high (STR_61+1)
  5557  000CA8  6E06               	movwf	(strncmp@_r+1)^0,c
  5558  000CAA  0E00               	movlw	0
  5559  000CAC  6E08               	movwf	(strncmp@n+1)^0,c
  5560  000CAE  0E02               	movlw	2
  5561  000CB0  6E07               	movwf	strncmp@n^0,c
  5562  000CB2  EC79  F025         	call	_strncmp	;wreg free
  5563  000CB6  5003               	movf	?_strncmp^0,w,c
  5564  000CB8  1004               	iorwf	(?_strncmp+1)^0,w,c
  5565  000CBA  A4D8               	btfss	status,2,c
  5566  000CBC  EF62  F006         	goto	u12141
  5567  000CC0  EF64  F006         	goto	u12140
  5568  000CC4                     u12141:
  5569  000CC4  EF8A  F006         	goto	l9370
  5570  000CC8                     u12140:
  5571  000CC8                     
  5572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5573  000CC8  0E02               	movlw	2
  5574  000CCA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5575  000CCE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5576  000CD2  26DE               	addwf	postinc2,f,c
  5577  000CD4  0E00               	movlw	0
  5578  000CD6  22DD               	addwfc	postdec2,f,c
  5579                           
  5580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5581  000CD8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5582  000CDC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5583  000CE0  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5584  000CE4  0E02               	movlw	2
  5585  000CE6  26DE               	addwf	postinc2,f,c
  5586  000CE8  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5587  000CEC  0E00               	movlw	0
  5588  000CEE  22DD               	addwfc	postdec2,f,c
  5589  000CF0  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5590  000CF4  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5591  000CF8  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5592  000CFC  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5593  000D00                     
  5594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5595  000D00  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5596  000D04  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5597  000D08  C0EA  FFDE         	movff	_nout,postinc2
  5598  000D0C  C0EB  FFDD         	movff	_nout+1,postdec2
  5599  000D10  EF43  F006         	goto	l9356
  5600  000D14                     l9370:
  5601                           
  5602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5603  000D14  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5604  000D18  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5605  000D1C  CFDE FFF6          	movff	postinc2,tblptrl
  5606  000D20  CFDD FFF7          	movff	postdec2,tblptrh
  5607  000D24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5608  000D24  6AF8               	clrf	tblptru,c
  5609  000D26                     	endif
  5610  000D26                     	if	0	;tblptru may be non-zero
  5611  000D26                     	endif
  5612  000D26  0008               	tblrd		*
  5613  000D28  50F5               	movf	tablat,w,c
  5614  000D2A  0A6E               	xorlw	110
  5615  000D2C  A4D8               	btfss	status,2,c
  5616  000D2E  EF9B  F006         	goto	u12151
  5617  000D32  EF9D  F006         	goto	u12150
  5618  000D36                     u12151:
  5619  000D36  EFC2  F006         	goto	l9380
  5620  000D3A                     u12150:
  5621  000D3A                     
  5622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5623  000D3A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5624  000D3E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5625  000D42  2ADE               	incf	postinc2,f,c
  5626  000D44  0E00               	movlw	0
  5627  000D46  22DD               	addwfc	postdec2,f,c
  5628                           
  5629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5630  000D48  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5631  000D4C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5632  000D50  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5633  000D54  0E02               	movlw	2
  5634  000D56  26DE               	addwf	postinc2,f,c
  5635  000D58  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5636  000D5C  0E00               	movlw	0
  5637  000D5E  22DD               	addwfc	postdec2,f,c
  5638  000D60  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5639  000D64  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5640  000D68  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5641  000D6C  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5642  000D70                     
  5643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5644  000D70  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5645  000D74  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5646  000D78  C0EA  FFDE         	movff	_nout,postinc2
  5647  000D7C  C0EB  FFDD         	movff	_nout+1,postdec2
  5648  000D80  EF43  F006         	goto	l9356
  5649  000D84                     l9380:
  5650                           
  5651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5652  000D84  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5653  000D88  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5654  000D8C  CFDE F003          	movff	postinc2,strncmp@_l
  5655  000D90  CFDD F004          	movff	postdec2,strncmp@_l+1
  5656  000D94  0EF2               	movlw	low STR_71
  5657  000D96  6E05               	movwf	strncmp@_r^0,c
  5658  000D98  0EFF               	movlw	high STR_71
  5659  000D9A  6E06               	movwf	(strncmp@_r+1)^0,c
  5660  000D9C  0E00               	movlw	0
  5661  000D9E  6E08               	movwf	(strncmp@n+1)^0,c
  5662  000DA0  0E02               	movlw	2
  5663  000DA2  6E07               	movwf	strncmp@n^0,c
  5664  000DA4  EC79  F025         	call	_strncmp	;wreg free
  5665  000DA8  5003               	movf	?_strncmp^0,w,c
  5666  000DAA  1004               	iorwf	(?_strncmp+1)^0,w,c
  5667  000DAC  A4D8               	btfss	status,2,c
  5668  000DAE  EFDB  F006         	goto	u12161
  5669  000DB2  EFDD  F006         	goto	u12160
  5670  000DB6                     u12161:
  5671  000DB6  EF03  F007         	goto	l9390
  5672  000DBA                     u12160:
  5673  000DBA                     
  5674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5675  000DBA  0E02               	movlw	2
  5676  000DBC  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5677  000DC0  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5678  000DC4  26DE               	addwf	postinc2,f,c
  5679  000DC6  0E00               	movlw	0
  5680  000DC8  22DD               	addwfc	postdec2,f,c
  5681                           
  5682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5683  000DCA  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5684  000DCE  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5685  000DD2  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5686  000DD6  0E02               	movlw	2
  5687  000DD8  26DE               	addwf	postinc2,f,c
  5688  000DDA  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5689  000DDE  0E00               	movlw	0
  5690  000DE0  22DD               	addwfc	postdec2,f,c
  5691  000DE2  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5692  000DE6  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5693  000DEA  CFDE F0B1          	movff	postinc2,vfpfcnvrt@vp
  5694  000DEE  CFDD F0B2          	movff	postdec2,vfpfcnvrt@vp+1
  5695  000DF2                     
  5696                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5697  000DF2  C0B1  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5698  000DF6  C0B2  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5699  000DFA  C0EA  FFDE         	movff	_nout,postinc2
  5700  000DFE  C0EB  FFDD         	movff	_nout+1,postdec2
  5701  000E02  EF43  F006         	goto	l9356
  5702  000E06                     l9390:
  5703                           
  5704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5705  000E06  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5706  000E0A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5707  000E0E  CFDE FFF6          	movff	postinc2,tblptrl
  5708  000E12  CFDD FFF7          	movff	postdec2,tblptrh
  5709  000E16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5710  000E16  6AF8               	clrf	tblptru,c
  5711  000E18                     	endif
  5712  000E18                     	if	0	;tblptru may be non-zero
  5713  000E18                     	endif
  5714  000E18  0008               	tblrd		*
  5715  000E1A  50F5               	movf	tablat,w,c
  5716  000E1C  0A70               	xorlw	112
  5717  000E1E  A4D8               	btfss	status,2,c
  5718  000E20  EF14  F007         	goto	u12171
  5719  000E24  EF16  F007         	goto	u12170
  5720  000E28                     u12171:
  5721  000E28  EF5A  F007         	goto	l9398
  5722  000E2C                     u12170:
  5723  000E2C                     
  5724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5725  000E2C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5726  000E30  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5727  000E34  2ADE               	incf	postinc2,f,c
  5728  000E36  0E00               	movlw	0
  5729  000E38  22DD               	addwfc	postdec2,f,c
  5730                           
  5731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5732  000E3A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5733  000E3E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5734  000E42  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5735  000E46  0E02               	movlw	2
  5736  000E48  26DE               	addwf	postinc2,f,c
  5737  000E4A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5738  000E4E  0E00               	movlw	0
  5739  000E50  22DD               	addwfc	postdec2,f,c
  5740  000E52  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5741  000E56  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5742  000E5A  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5743  000E5E  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5744  000E62  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5745  000E66  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5746  000E6A  0100               	movlb	0	; () banked
  5747  000E6C  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5748  000E6E  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5749  000E70  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5750  000E72  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5751  000E74  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5752  000E76  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5753  000E78                     
  5754                           ; BSR set to: 0
  5755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5756  000E78  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  5757  000E7C  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5758  000E80  C0B4  F020         	movff	vfpfcnvrt@llu,xtoa@d
  5759  000E84  C0B5  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5760  000E88  C0B6  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5761  000E8C  C0B7  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5762  000E90  C0B8  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5763  000E94  C0B9  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5764  000E98  C0BA  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5765  000E9C  C0BB  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5766  000EA0  0E78               	movlw	120
  5767  000EA2  6E28               	movwf	xtoa@x^0,c
  5768  000EA4  EC1F  F01A         	call	_xtoa	;wreg free
  5769  000EA8  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  5770  000EAC  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5771  000EB0  EFD1  F00A         	goto	l905
  5772  000EB4                     l9398:
  5773                           
  5774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5775  000EB4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5776  000EB8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5777  000EBC  CFDE FFF6          	movff	postinc2,tblptrl
  5778  000EC0  CFDD FFF7          	movff	postdec2,tblptrh
  5779  000EC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5780  000EC4  6AF8               	clrf	tblptru,c
  5781  000EC6                     	endif
  5782  000EC6                     	if	0	;tblptru may be non-zero
  5783  000EC6                     	endif
  5784  000EC6  0008               	tblrd		*
  5785  000EC8  50F5               	movf	tablat,w,c
  5786  000ECA  0A73               	xorlw	115
  5787  000ECC  A4D8               	btfss	status,2,c
  5788  000ECE  EF6B  F007         	goto	u12181
  5789  000ED2  EF6D  F007         	goto	u12180
  5790  000ED6                     u12181:
  5791  000ED6  EF98  F007         	goto	l9406
  5792  000EDA                     u12180:
  5793  000EDA                     
  5794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5795  000EDA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5796  000EDE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5797  000EE2  2ADE               	incf	postinc2,f,c
  5798  000EE4  0E00               	movlw	0
  5799  000EE6  22DD               	addwfc	postdec2,f,c
  5800                           
  5801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5802  000EE8  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5803  000EEC  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5804  000EF0  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5805  000EF4  0E02               	movlw	2
  5806  000EF6  26DE               	addwf	postinc2,f,c
  5807  000EF8  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5808  000EFC  0E00               	movlw	0
  5809  000EFE  22DD               	addwfc	postdec2,f,c
  5810  000F00  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5811  000F04  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5812  000F08  CFDE F098          	movff	postinc2,vfpfcnvrt@cp
  5813  000F0C  CFDD F099          	movff	postdec2,vfpfcnvrt@cp+1
  5814  000F10                     
  5815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5816  000F10  C045  F00C         	movff	vfpfcnvrt@fp,stoa@fp
  5817  000F14  C046  F00D         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5818  000F18  C098  F00E         	movff	vfpfcnvrt@cp,stoa@s
  5819  000F1C  C099  F00F         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5820  000F20  ECFC  F021         	call	_stoa	;wreg free
  5821  000F24  C00C  F045         	movff	?_stoa,?_vfpfcnvrt
  5822  000F28  C00D  F046         	movff	?_stoa+1,?_vfpfcnvrt+1
  5823  000F2C  EFD1  F00A         	goto	l905
  5824  000F30                     l9406:
  5825                           
  5826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5827  000F30  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5828  000F34  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5829  000F38  CFDE F003          	movff	postinc2,strncmp@_l
  5830  000F3C  CFDD F004          	movff	postdec2,strncmp@_l+1
  5831  000F40  0EDE               	movlw	low STR_76
  5832  000F42  6E05               	movwf	strncmp@_r^0,c
  5833  000F44  0EFF               	movlw	high STR_76
  5834  000F46  6E06               	movwf	(strncmp@_r+1)^0,c
  5835  000F48  0E00               	movlw	0
  5836  000F4A  6E08               	movwf	(strncmp@n+1)^0,c
  5837  000F4C  0E03               	movlw	3
  5838  000F4E  6E07               	movwf	strncmp@n^0,c
  5839  000F50  EC79  F025         	call	_strncmp	;wreg free
  5840  000F54  5003               	movf	?_strncmp^0,w,c
  5841  000F56  1004               	iorwf	(?_strncmp+1)^0,w,c
  5842  000F58  A4D8               	btfss	status,2,c
  5843  000F5A  EFB1  F007         	goto	u12191
  5844  000F5E  EFB3  F007         	goto	u12190
  5845  000F62                     u12191:
  5846  000F62  EFF3  F007         	goto	l9414
  5847  000F66                     u12190:
  5848  000F66                     
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5850  000F66  0E03               	movlw	3
  5851  000F68  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5852  000F6C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5853  000F70  26DE               	addwf	postinc2,f,c
  5854  000F72  0E00               	movlw	0
  5855  000F74  22DD               	addwfc	postdec2,f,c
  5856                           
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5858  000F76  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5859  000F7A  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5860  000F7E  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5861  000F82  0E02               	movlw	2
  5862  000F84  26DE               	addwf	postinc2,f,c
  5863  000F86  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5864  000F8A  0E00               	movlw	0
  5865  000F8C  22DD               	addwfc	postdec2,f,c
  5866  000F8E  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5867  000F92  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5868  000F96  50DF               	movf	indf2,w,c
  5869  000F98  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  5870  000F9A  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  5871  000F9C  0100               	movlb	0	; () banked
  5872  000F9E  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  5873  000FA0  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5874  000FA2  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5875  000FA4  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5876  000FA6  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5877  000FA8  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5878  000FAA  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5879  000FAC  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5880  000FAE                     l9410:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5884  000FAE  C045  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  5885  000FB2  C046  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5886  000FB6  C0B4  F020         	movff	vfpfcnvrt@llu,utoa@d
  5887  000FBA  C0B5  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5888  000FBE  C0B6  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5889  000FC2  C0B7  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5890  000FC6  C0B8  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5891  000FCA  C0B9  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5892  000FCE  C0BA  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5893  000FD2  C0BB  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5894  000FD6  EC9C  F01D         	call	_utoa	;wreg free
  5895  000FDA  C01E  F045         	movff	?_utoa,?_vfpfcnvrt
  5896  000FDE  C01F  F046         	movff	?_utoa+1,?_vfpfcnvrt+1
  5897  000FE2  EFD1  F00A         	goto	l905
  5898  000FE6                     l9414:
  5899                           
  5900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5901  000FE6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5902  000FEA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5903  000FEE  CFDE F003          	movff	postinc2,strncmp@_l
  5904  000FF2  CFDD F004          	movff	postdec2,strncmp@_l+1
  5905  000FF6  0EDF               	movlw	low (STR_76+1)
  5906  000FF8  6E05               	movwf	strncmp@_r^0,c
  5907  000FFA  0EFF               	movlw	high (STR_76+1)
  5908  000FFC  6E06               	movwf	(strncmp@_r+1)^0,c
  5909  000FFE  0E00               	movlw	0
  5910  001000  6E08               	movwf	(strncmp@n+1)^0,c
  5911  001002  0E02               	movlw	2
  5912  001004  6E07               	movwf	strncmp@n^0,c
  5913  001006  EC79  F025         	call	_strncmp	;wreg free
  5914  00100A  5003               	movf	?_strncmp^0,w,c
  5915  00100C  1004               	iorwf	(?_strncmp+1)^0,w,c
  5916  00100E  A4D8               	btfss	status,2,c
  5917  001010  EF0C  F008         	goto	u12201
  5918  001014  EF0E  F008         	goto	u12200
  5919  001018                     u12201:
  5920  001018  EF37  F008         	goto	l9422
  5921  00101C                     u12200:
  5922  00101C                     
  5923                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5924  00101C  0E02               	movlw	2
  5925  00101E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5926  001022  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5927  001026  26DE               	addwf	postinc2,f,c
  5928  001028  0E00               	movlw	0
  5929  00102A  22DD               	addwfc	postdec2,f,c
  5930                           
  5931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5932  00102C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5933  001030  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5934  001034  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5935  001038  0E02               	movlw	2
  5936  00103A  26DE               	addwf	postinc2,f,c
  5937  00103C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5938  001040  0E00               	movlw	0
  5939  001042  22DD               	addwfc	postdec2,f,c
  5940  001044  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5941  001048  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5942  00104C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5943  001050  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5944  001054  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5945  001058  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5946  00105C  0100               	movlb	0	; () banked
  5947  00105E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5948  001060  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5949  001062  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5950  001064  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5951  001066  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5952  001068  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5953  00106A  EFD7  F007         	goto	l9410
  5954  00106E                     l9422:
  5955                           
  5956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  5957  00106E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5958  001072  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5959  001076  CFDE FFF6          	movff	postinc2,tblptrl
  5960  00107A  CFDD FFF7          	movff	postdec2,tblptrh
  5961  00107E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5962  00107E  6AF8               	clrf	tblptru,c
  5963  001080                     	endif
  5964  001080                     	if	0	;tblptru may be non-zero
  5965  001080                     	endif
  5966  001080  0008               	tblrd		*
  5967  001082  50F5               	movf	tablat,w,c
  5968  001084  0A75               	xorlw	117
  5969  001086  A4D8               	btfss	status,2,c
  5970  001088  EF48  F008         	goto	u12211
  5971  00108C  EF4A  F008         	goto	u12210
  5972  001090                     u12211:
  5973  001090  EF72  F008         	goto	l9430
  5974  001094                     u12210:
  5975  001094                     
  5976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  5977  001094  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5978  001098  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5979  00109C  2ADE               	incf	postinc2,f,c
  5980  00109E  0E00               	movlw	0
  5981  0010A0  22DD               	addwfc	postdec2,f,c
  5982                           
  5983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  5984  0010A2  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5985  0010A6  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5986  0010AA  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  5987  0010AE  0E02               	movlw	2
  5988  0010B0  26DE               	addwf	postinc2,f,c
  5989  0010B2  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  5990  0010B6  0E00               	movlw	0
  5991  0010B8  22DD               	addwfc	postdec2,f,c
  5992  0010BA  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5993  0010BE  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5994  0010C2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  5995  0010C6  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  5996  0010CA  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5997  0010CE  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5998  0010D2  0100               	movlb	0	; () banked
  5999  0010D4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6000  0010D6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6001  0010D8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6002  0010DA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6003  0010DC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6004  0010DE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6005  0010E0  EFD7  F007         	goto	l9410
  6006  0010E4                     l9430:
  6007                           
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6009  0010E4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6010  0010E8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6011  0010EC  CFDE F003          	movff	postinc2,strncmp@_l
  6012  0010F0  CFDD F004          	movff	postdec2,strncmp@_l+1
  6013  0010F4  0EF8               	movlw	low STR_86
  6014  0010F6  6E05               	movwf	strncmp@_r^0,c
  6015  0010F8  0EFF               	movlw	high STR_86
  6016  0010FA  6E06               	movwf	(strncmp@_r+1)^0,c
  6017  0010FC  0E00               	movlw	0
  6018  0010FE  6E08               	movwf	(strncmp@n+1)^0,c
  6019  001100  0E02               	movlw	2
  6020  001102  6E07               	movwf	strncmp@n^0,c
  6021  001104  EC79  F025         	call	_strncmp	;wreg free
  6022  001108  5003               	movf	?_strncmp^0,w,c
  6023  00110A  1004               	iorwf	(?_strncmp+1)^0,w,c
  6024  00110C  A4D8               	btfss	status,2,c
  6025  00110E  EF8B  F008         	goto	u12221
  6026  001112  EF8D  F008         	goto	u12220
  6027  001116                     u12221:
  6028  001116  EFB6  F008         	goto	l9438
  6029  00111A                     u12220:
  6030  00111A                     
  6031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6032  00111A  0E02               	movlw	2
  6033  00111C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6034  001120  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6035  001124  26DE               	addwf	postinc2,f,c
  6036  001126  0E00               	movlw	0
  6037  001128  22DD               	addwfc	postdec2,f,c
  6038                           
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6040  00112A  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6041  00112E  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6042  001132  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  6043  001136  0E02               	movlw	2
  6044  001138  26DE               	addwf	postinc2,f,c
  6045  00113A  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  6046  00113E  0E00               	movlw	0
  6047  001140  22DD               	addwfc	postdec2,f,c
  6048  001142  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6049  001146  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6050  00114A  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  6051  00114E  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  6052  001152  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6053  001156  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6054  00115A  0100               	movlb	0	; () banked
  6055  00115C  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6056  00115E  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6057  001160  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6058  001162  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6059  001164  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6060  001166  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6061  001168  EFD7  F007         	goto	l9410
  6062  00116C                     l9438:
  6063                           
  6064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6065  00116C  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6066  001170  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6067  001174  CFDE F003          	movff	postinc2,strncmp@_l
  6068  001178  CFDD F004          	movff	postdec2,strncmp@_l+1
  6069  00117C  0EE2               	movlw	low STR_91
  6070  00117E  6E05               	movwf	strncmp@_r^0,c
  6071  001180  0EFF               	movlw	high STR_91
  6072  001182  6E06               	movwf	(strncmp@_r+1)^0,c
  6073  001184  0E00               	movlw	0
  6074  001186  6E08               	movwf	(strncmp@n+1)^0,c
  6075  001188  0E03               	movlw	3
  6076  00118A  6E07               	movwf	strncmp@n^0,c
  6077  00118C  EC79  F025         	call	_strncmp	;wreg free
  6078  001190  5003               	movf	?_strncmp^0,w,c
  6079  001192  1004               	iorwf	(?_strncmp+1)^0,w,c
  6080  001194  B4D8               	btfsc	status,2,c
  6081  001196  EFCF  F008         	goto	u12231
  6082  00119A  EFD1  F008         	goto	u12230
  6083  00119E                     u12231:
  6084  00119E  EFEC  F008         	goto	l9442
  6085  0011A2                     u12230:
  6086  0011A2  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6087  0011A6  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6088  0011AA  CFDE F003          	movff	postinc2,strncmp@_l
  6089  0011AE  CFDD F004          	movff	postdec2,strncmp@_l+1
  6090  0011B2  0EC2               	movlw	low STR_95
  6091  0011B4  6E05               	movwf	strncmp@_r^0,c
  6092  0011B6  0EFF               	movlw	high STR_95
  6093  0011B8  6E06               	movwf	(strncmp@_r+1)^0,c
  6094  0011BA  0E00               	movlw	0
  6095  0011BC  6E08               	movwf	(strncmp@n+1)^0,c
  6096  0011BE  0E03               	movlw	3
  6097  0011C0  6E07               	movwf	strncmp@n^0,c
  6098  0011C2  EC79  F025         	call	_strncmp	;wreg free
  6099  0011C6  5003               	movf	?_strncmp^0,w,c
  6100  0011C8  1004               	iorwf	(?_strncmp+1)^0,w,c
  6101  0011CA  A4D8               	btfss	status,2,c
  6102  0011CC  EFEA  F008         	goto	u12241
  6103  0011D0  EFEC  F008         	goto	u12240
  6104  0011D4                     u12241:
  6105  0011D4  EF42  F009         	goto	l9452
  6106  0011D8                     u12240:
  6107  0011D8                     l9442:
  6108                           
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6110  0011D8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6111  0011DC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6112  0011E0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  6113  0011E4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  6114  0011E8  0E02               	movlw	2
  6115  0011EA  264B               	addwf	??_vfpfcnvrt^0,f,c
  6116  0011EC  0E00               	movlw	0
  6117  0011EE  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6118  0011F0  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6119  0011F4  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6120  0011F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6121  0011F8  6AF8               	clrf	tblptru,c
  6122  0011FA                     	endif
  6123  0011FA                     	if	0	;tblptru may be non-zero
  6124  0011FA                     	endif
  6125  0011FA  0008               	tblrd		*
  6126  0011FC  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6127  001200                     
  6128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6129  001200  0E03               	movlw	3
  6130  001202  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6131  001206  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6132  00120A  26DE               	addwf	postinc2,f,c
  6133  00120C  0E00               	movlw	0
  6134  00120E  22DD               	addwfc	postdec2,f,c
  6135  001210                     
  6136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6137  001210  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6138  001214  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6139  001218  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  6140  00121C  0E02               	movlw	2
  6141  00121E  26DE               	addwf	postinc2,f,c
  6142  001220  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  6143  001224  0E00               	movlw	0
  6144  001226  22DD               	addwfc	postdec2,f,c
  6145  001228  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6146  00122C  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6147  001230  50DF               	movf	indf2,w,c
  6148  001232  6E4D               	movwf	(??_vfpfcnvrt+2)^0,c
  6149  001234  504D               	movf	(??_vfpfcnvrt+2)^0,w,c
  6150  001236  0100               	movlb	0	; () banked
  6151  001238  6FB4               	movwf	vfpfcnvrt@llu& (0+255),b
  6152  00123A  6BB5               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6153  00123C  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6154  00123E  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6155  001240  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6156  001242  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6157  001244  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6158  001246  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6159  001248                     l9448:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6163  001248  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  6164  00124C  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6165  001250  C0B4  F020         	movff	vfpfcnvrt@llu,xtoa@d
  6166  001254  C0B5  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6167  001258  C0B6  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6168  00125C  C0B7  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6169  001260  C0B8  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6170  001264  C0B9  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6171  001268  C0BA  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6172  00126C  C0BB  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6173  001270  C0B3  F028         	movff	vfpfcnvrt@c,xtoa@x
  6174  001274  EC1F  F01A         	call	_xtoa	;wreg free
  6175  001278  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  6176  00127C  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6177  001280  EFD1  F00A         	goto	l905
  6178  001284                     l9452:
  6179                           
  6180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6181  001284  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6182  001288  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6183  00128C  CFDE F003          	movff	postinc2,strncmp@_l
  6184  001290  CFDD F004          	movff	postdec2,strncmp@_l+1
  6185  001294  0EE3               	movlw	low (STR_91+1)
  6186  001296  6E05               	movwf	strncmp@_r^0,c
  6187  001298  0EFF               	movlw	high (STR_91+1)
  6188  00129A  6E06               	movwf	(strncmp@_r+1)^0,c
  6189  00129C  0E00               	movlw	0
  6190  00129E  6E08               	movwf	(strncmp@n+1)^0,c
  6191  0012A0  0E02               	movlw	2
  6192  0012A2  6E07               	movwf	strncmp@n^0,c
  6193  0012A4  EC79  F025         	call	_strncmp	;wreg free
  6194  0012A8  5003               	movf	?_strncmp^0,w,c
  6195  0012AA  1004               	iorwf	(?_strncmp+1)^0,w,c
  6196  0012AC  B4D8               	btfsc	status,2,c
  6197  0012AE  EF5B  F009         	goto	u12251
  6198  0012B2  EF5D  F009         	goto	u12250
  6199  0012B6                     u12251:
  6200  0012B6  EF78  F009         	goto	l9456
  6201  0012BA                     u12250:
  6202  0012BA  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6203  0012BE  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6204  0012C2  CFDE F003          	movff	postinc2,strncmp@_l
  6205  0012C6  CFDD F004          	movff	postdec2,strncmp@_l+1
  6206  0012CA  0EC3               	movlw	low (STR_95+1)
  6207  0012CC  6E05               	movwf	strncmp@_r^0,c
  6208  0012CE  0EFF               	movlw	high (STR_95+1)
  6209  0012D0  6E06               	movwf	(strncmp@_r+1)^0,c
  6210  0012D2  0E00               	movlw	0
  6211  0012D4  6E08               	movwf	(strncmp@n+1)^0,c
  6212  0012D6  0E02               	movlw	2
  6213  0012D8  6E07               	movwf	strncmp@n^0,c
  6214  0012DA  EC79  F025         	call	_strncmp	;wreg free
  6215  0012DE  5003               	movf	?_strncmp^0,w,c
  6216  0012E0  1004               	iorwf	(?_strncmp+1)^0,w,c
  6217  0012E2  A4D8               	btfss	status,2,c
  6218  0012E4  EF76  F009         	goto	u12261
  6219  0012E8  EF78  F009         	goto	u12260
  6220  0012EC                     u12261:
  6221  0012EC  EFB5  F009         	goto	l9466
  6222  0012F0                     u12260:
  6223  0012F0                     l9456:
  6224                           
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6226  0012F0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6227  0012F4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6228  0012F8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  6229  0012FC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  6230  001300  0E01               	movlw	1
  6231  001302  264B               	addwf	??_vfpfcnvrt^0,f,c
  6232  001304  0E00               	movlw	0
  6233  001306  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6234  001308  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6235  00130C  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6236  001310                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6237  001310  6AF8               	clrf	tblptru,c
  6238  001312                     	endif
  6239  001312                     	if	0	;tblptru may be non-zero
  6240  001312                     	endif
  6241  001312  0008               	tblrd		*
  6242  001314  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6243  001318                     
  6244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6245  001318  0E02               	movlw	2
  6246  00131A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6247  00131E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6248  001322  26DE               	addwf	postinc2,f,c
  6249  001324  0E00               	movlw	0
  6250  001326  22DD               	addwfc	postdec2,f,c
  6251  001328                     
  6252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6253  001328  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6254  00132C  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6255  001330  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  6256  001334  0E02               	movlw	2
  6257  001336  26DE               	addwf	postinc2,f,c
  6258  001338  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  6259  00133C  0E00               	movlw	0
  6260  00133E  22DD               	addwfc	postdec2,f,c
  6261  001340  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6262  001344  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6263  001348  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  6264  00134C  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  6265  001350  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6266  001354  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6267  001358  0100               	movlb	0	; () banked
  6268  00135A  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6269  00135C  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6270  00135E  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6271  001360  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6272  001362  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6273  001364  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6274  001366  EF24  F009         	goto	l9448
  6275  00136A                     l9466:
  6276                           
  6277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6278  00136A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6279  00136E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6280  001372  CFDE FFF6          	movff	postinc2,tblptrl
  6281  001376  CFDD FFF7          	movff	postdec2,tblptrh
  6282  00137A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6283  00137A  6AF8               	clrf	tblptru,c
  6284  00137C                     	endif
  6285  00137C                     	if	0	;tblptru may be non-zero
  6286  00137C                     	endif
  6287  00137C  0008               	tblrd		*
  6288  00137E  50F5               	movf	tablat,w,c
  6289  001380  0A78               	xorlw	120
  6290  001382  B4D8               	btfsc	status,2,c
  6291  001384  EFC6  F009         	goto	u12271
  6292  001388  EFC8  F009         	goto	u12270
  6293  00138C                     u12271:
  6294  00138C  EFDB  F009         	goto	l9470
  6295  001390                     u12270:
  6296  001390  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6297  001394  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6298  001398  CFDE FFF6          	movff	postinc2,tblptrl
  6299  00139C  CFDD FFF7          	movff	postdec2,tblptrh
  6300  0013A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6301  0013A0  6AF8               	clrf	tblptru,c
  6302  0013A2                     	endif
  6303  0013A2                     	if	0	;tblptru may be non-zero
  6304  0013A2                     	endif
  6305  0013A2  0008               	tblrd		*
  6306  0013A4  50F5               	movf	tablat,w,c
  6307  0013A6  0A58               	xorlw	88
  6308  0013A8  A4D8               	btfss	status,2,c
  6309  0013AA  EFD9  F009         	goto	u12281
  6310  0013AE  EFDB  F009         	goto	u12280
  6311  0013B2                     u12281:
  6312  0013B2  EF0F  F00A         	goto	l9480
  6313  0013B6                     u12280:
  6314  0013B6                     l9470:
  6315                           
  6316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6317  0013B6  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6318  0013BA  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6319  0013BE  CFDE FFF6          	movff	postinc2,tblptrl
  6320  0013C2  CFDD FFF7          	movff	postdec2,tblptrh
  6321  0013C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6322  0013C6  6AF8               	clrf	tblptru,c
  6323  0013C8                     	endif
  6324  0013C8                     	if	0	;tblptru may be non-zero
  6325  0013C8                     	endif
  6326  0013C8  0008               	tblrd		*
  6327  0013CA  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6328  0013CE                     
  6329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6330  0013CE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6331  0013D2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6332  0013D6  2ADE               	incf	postinc2,f,c
  6333  0013D8  0E00               	movlw	0
  6334  0013DA  22DD               	addwfc	postdec2,f,c
  6335  0013DC                     
  6336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6337  0013DC  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6338  0013E0  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6339  0013E4  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  6340  0013E8  0E02               	movlw	2
  6341  0013EA  26DE               	addwf	postinc2,f,c
  6342  0013EC  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  6343  0013F0  0E00               	movlw	0
  6344  0013F2  22DD               	addwfc	postdec2,f,c
  6345  0013F4  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6346  0013F8  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6347  0013FC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  6348  001400  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  6349  001404  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6350  001408  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6351  00140C  0100               	movlb	0	; () banked
  6352  00140E  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6353  001410  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6354  001412  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6355  001414  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6356  001416  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6357  001418  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6358  00141A  EF24  F009         	goto	l9448
  6359  00141E                     l9480:
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6362  00141E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6363  001422  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6364  001426  CFDE F003          	movff	postinc2,strncmp@_l
  6365  00142A  CFDD F004          	movff	postdec2,strncmp@_l+1
  6366  00142E  0EFB               	movlw	low STR_109
  6367  001430  6E05               	movwf	strncmp@_r^0,c
  6368  001432  0EFF               	movlw	high STR_109
  6369  001434  6E06               	movwf	(strncmp@_r+1)^0,c
  6370  001436  0E00               	movlw	0
  6371  001438  6E08               	movwf	(strncmp@n+1)^0,c
  6372  00143A  0E02               	movlw	2
  6373  00143C  6E07               	movwf	strncmp@n^0,c
  6374  00143E  EC79  F025         	call	_strncmp	;wreg free
  6375  001442  5003               	movf	?_strncmp^0,w,c
  6376  001444  1004               	iorwf	(?_strncmp+1)^0,w,c
  6377  001446  B4D8               	btfsc	status,2,c
  6378  001448  EF28  F00A         	goto	u12291
  6379  00144C  EF2A  F00A         	goto	u12290
  6380  001450                     u12291:
  6381  001450  EF45  F00A         	goto	l9484
  6382  001454                     u12290:
  6383  001454  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6384  001458  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6385  00145C  CFDE F003          	movff	postinc2,strncmp@_l
  6386  001460  CFDD F004          	movff	postdec2,strncmp@_l+1
  6387  001464  0EE6               	movlw	low STR_113
  6388  001466  6E05               	movwf	strncmp@_r^0,c
  6389  001468  0EFF               	movlw	high STR_113
  6390  00146A  6E06               	movwf	(strncmp@_r+1)^0,c
  6391  00146C  0E00               	movlw	0
  6392  00146E  6E08               	movwf	(strncmp@n+1)^0,c
  6393  001470  0E02               	movlw	2
  6394  001472  6E07               	movwf	strncmp@n^0,c
  6395  001474  EC79  F025         	call	_strncmp	;wreg free
  6396  001478  5003               	movf	?_strncmp^0,w,c
  6397  00147A  1004               	iorwf	(?_strncmp+1)^0,w,c
  6398  00147C  A4D8               	btfss	status,2,c
  6399  00147E  EF43  F00A         	goto	u12301
  6400  001482  EF45  F00A         	goto	u12300
  6401  001486                     u12301:
  6402  001486  EF82  F00A         	goto	l9494
  6403  00148A                     u12300:
  6404  00148A                     l9484:
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6407  00148A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6408  00148E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6409  001492  CFDE F04B          	movff	postinc2,??_vfpfcnvrt
  6410  001496  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+1
  6411  00149A  0E01               	movlw	1
  6412  00149C  264B               	addwf	??_vfpfcnvrt^0,f,c
  6413  00149E  0E00               	movlw	0
  6414  0014A0  224C               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6415  0014A2  C04B  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6416  0014A6  C04C  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6417  0014AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6418  0014AA  6AF8               	clrf	tblptru,c
  6419  0014AC                     	endif
  6420  0014AC                     	if	0	;tblptru may be non-zero
  6421  0014AC                     	endif
  6422  0014AC  0008               	tblrd		*
  6423  0014AE  CFF5 F0B3          	movff	tablat,vfpfcnvrt@c
  6424  0014B2                     
  6425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6426  0014B2  0E02               	movlw	2
  6427  0014B4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6428  0014B8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6429  0014BC  26DE               	addwf	postinc2,f,c
  6430  0014BE  0E00               	movlw	0
  6431  0014C0  22DD               	addwfc	postdec2,f,c
  6432  0014C2                     
  6433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6434  0014C2  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6435  0014C6  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6436  0014CA  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  6437  0014CE  0E02               	movlw	2
  6438  0014D0  26DE               	addwf	postinc2,f,c
  6439  0014D2  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  6440  0014D6  0E00               	movlw	0
  6441  0014D8  22DD               	addwfc	postdec2,f,c
  6442  0014DA  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6443  0014DE  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6444  0014E2  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  6445  0014E6  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  6446  0014EA  C04D  F0B4         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6447  0014EE  C04E  F0B5         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6448  0014F2  0100               	movlb	0	; () banked
  6449  0014F4  6BB6               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6450  0014F6  6BB7               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6451  0014F8  6BB8               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6452  0014FA  6BB9               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6453  0014FC  6BBA               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6454  0014FE  6BBB               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6455  001500  EF24  F009         	goto	l9448
  6456  001504                     l9494:
  6457                           
  6458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6459  001504  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6460  001508  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6461  00150C  CFDE FFF6          	movff	postinc2,tblptrl
  6462  001510  CFDD FFF7          	movff	postdec2,tblptrh
  6463  001514                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6464  001514  6AF8               	clrf	tblptru,c
  6465  001516                     	endif
  6466  001516                     	if	0	;tblptru may be non-zero
  6467  001516                     	endif
  6468  001516  0008               	tblrd		*
  6469  001518  50F5               	movf	tablat,w,c
  6470  00151A  0A25               	xorlw	37
  6471  00151C  A4D8               	btfss	status,2,c
  6472  00151E  EF93  F00A         	goto	u12311
  6473  001522  EF95  F00A         	goto	u12310
  6474  001526                     u12311:
  6475  001526  EFAC  F00A         	goto	l9504
  6476  00152A                     u12310:
  6477  00152A                     
  6478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6479  00152A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6480  00152E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6481  001532  2ADE               	incf	postinc2,f,c
  6482  001534  0E00               	movlw	0
  6483  001536  22DD               	addwfc	postdec2,f,c
  6484  001538                     
  6485                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6486  001538  0E00               	movlw	0
  6487  00153A  6E04               	movwf	(fputc@c+1)^0,c
  6488  00153C  0E25               	movlw	37
  6489  00153E  6E03               	movwf	fputc@c^0,c
  6490  001540  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6491  001544  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6492  001548  EC7E  F029         	call	_fputc	;wreg free
  6493  00154C                     l9500:
  6494                           
  6495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6496  00154C  0E00               	movlw	0
  6497  00154E  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  6498  001550  0E01               	movlw	1
  6499  001552  6E45               	movwf	?_vfpfcnvrt^0,c
  6500  001554  EFD1  F00A         	goto	l905
  6501  001558                     l9504:
  6502                           
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6504  001558  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6505  00155C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6506  001560  2ADE               	incf	postinc2,f,c
  6507  001562  0E00               	movlw	0
  6508  001564  22DD               	addwfc	postdec2,f,c
  6509  001566  EF43  F006         	goto	l9356
  6510  00156A                     l9510:
  6511                           
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6513  00156A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6514  00156E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6515  001572  CFDE FFF6          	movff	postinc2,tblptrl
  6516  001576  CFDD FFF7          	movff	postdec2,tblptrh
  6517  00157A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6518  00157A  6AF8               	clrf	tblptru,c
  6519  00157C                     	endif
  6520  00157C                     	if	0	;tblptru may be non-zero
  6521  00157C                     	endif
  6522  00157C  0008               	tblrd		*
  6523  00157E  50F5               	movf	tablat,w,c
  6524  001580  6E03               	movwf	fputc@c^0,c
  6525  001582  6A04               	clrf	(fputc@c+1)^0,c
  6526  001584  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  6527  001588  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6528  00158C  EC7E  F029         	call	_fputc	;wreg free
  6529  001590                     
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6531  001590  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6532  001594  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6533  001598  2ADE               	incf	postinc2,f,c
  6534  00159A  0E00               	movlw	0
  6535  00159C  22DD               	addwfc	postdec2,f,c
  6536  00159E  EFA6  F00A         	goto	l9500
  6537  0015A2                     l905:
  6538  0015A2  0012               	return		;funcret
  6539  0015A4                     __end_of_vfpfcnvrt:
  6540                           	opt callstack 0
  6541                           
  6542 ;; *************** function _xtoa *****************
  6543 ;; Defined at:
  6544 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  6547 ;;		 -> vsnprintf@f(6), 
  6548 ;;  d               8   31[COMRAM] unsigned long long 
  6549 ;;  x               1   39[COMRAM] unsigned char 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;  n               8   56[COMRAM] unsigned long long 
  6552 ;;  c               2   66[COMRAM] int 
  6553 ;;  i               2   64[COMRAM] int 
  6554 ;;  w               2   54[COMRAM] int 
  6555 ;;  p               2   52[COMRAM] int 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2   29[COMRAM] int 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6565 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;Total ram usage:       39 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    8
  6572 ;; This function calls:
  6573 ;;		_isalpha
  6574 ;;		_isupper
  6575 ;;		_pad
  6576 ;;		_toupper
  6577 ;; This function is called by:
  6578 ;;		_vfpfcnvrt
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text5
  6583  00343E                     __ptext5:
  6584                           	opt callstack 0
  6585  00343E                     _xtoa:
  6586                           	opt callstack 18
  6587  00343E                     
  6588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6589  00343E  BE58               	btfsc	(_prec+1)^0,7,c
  6590  003440  EF24  F01A         	goto	u11491
  6591  003444  EF26  F01A         	goto	u11490
  6592  003448                     u11491:
  6593  003448  EF27  F01A         	goto	l9030
  6594  00344C                     u11490:
  6595  00344C                     
  6596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6597  00344C  9259               	bcf	_flags^0,1,c
  6598  00344E                     l9030:
  6599                           
  6600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6601  00344E  BE58               	btfsc	(_prec+1)^0,7,c
  6602  003450  EF34  F01A         	goto	u11500
  6603  003454  5058               	movf	(_prec+1)^0,w,c
  6604  003456  E106               	bnz	u11501
  6605  003458  0457               	decf	_prec^0,w,c
  6606  00345A  B0D8               	btfsc	status,0,c
  6607  00345C  EF32  F01A         	goto	u11501
  6608  003460  EF34  F01A         	goto	u11500
  6609  003464                     u11501:
  6610  003464  EF3A  F01A         	goto	l841
  6611  003468                     u11500:
  6612  003468  0E00               	movlw	0
  6613  00346A  6E36               	movwf	(xtoa@p+1)^0,c
  6614  00346C  0E01               	movlw	1
  6615  00346E  6E35               	movwf	xtoa@p^0,c
  6616  003470  EF3E  F01A         	goto	l843
  6617  003474                     l841:
  6618  003474  C057  F035         	movff	_prec,xtoa@p
  6619  003478  C058  F036         	movff	_prec+1,xtoa@p+1
  6620  00347C                     l843:
  6621                           
  6622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6623  00347C  C0EC  F037         	movff	_width,xtoa@w
  6624  003480  C0ED  F038         	movff	_width+1,xtoa@w+1
  6625                           
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6627  003484  A859               	btfss	_flags^0,4,c
  6628  003486  EF47  F01A         	goto	u11511
  6629  00348A  EF49  F01A         	goto	u11510
  6630  00348E                     u11511:
  6631  00348E  EF4D  F01A         	goto	l9036
  6632  003492                     u11510:
  6633  003492                     
  6634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6635  003492  0EFE               	movlw	254
  6636  003494  2637               	addwf	xtoa@w^0,f,c
  6637  003496  0EFF               	movlw	255
  6638  003498  2238               	addwfc	(xtoa@w+1)^0,f,c
  6639  00349A                     l9036:
  6640                           
  6641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6642  00349A  C020  F039         	movff	xtoa@d,xtoa@n
  6643  00349E  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  6644  0034A2  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  6645  0034A6  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  6646  0034AA  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  6647  0034AE  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  6648  0034B2  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  6649  0034B6  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  6650  0034BA                     
  6651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6652  0034BA  0E00               	movlw	0
  6653  0034BC  6E42               	movwf	(xtoa@i+1)^0,c
  6654  0034BE  0E4F               	movlw	79
  6655  0034C0  6E41               	movwf	xtoa@i^0,c
  6656  0034C2                     
  6657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6658  0034C2  0E00               	movlw	0
  6659  0034C4  0101               	movlb	1	; () banked
  6660  0034C6  6FB3               	movwf	(_dbuf+79)& (0+255),b
  6661                           
  6662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6663  0034C8  EF19  F01B         	goto	l9072
  6664  0034CC                     l9042:
  6665                           
  6666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6667  0034CC  0641               	decf	xtoa@i^0,f,c
  6668  0034CE  A0D8               	btfss	status,0,c
  6669  0034D0  0642               	decf	(xtoa@i+1)^0,f,c
  6670  0034D2                     
  6671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6672  0034D2  0E0F               	movlw	15
  6673  0034D4  1439               	andwf	xtoa@n^0,w,c
  6674  0034D6  6E43               	movwf	xtoa@c^0,c
  6675  0034D8  6A44               	clrf	(xtoa@c+1)^0,c
  6676  0034DA                     
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6678  0034DA  BE44               	btfsc	(xtoa@c+1)^0,7,c
  6679  0034DC  EF79  F01A         	goto	u11521
  6680  0034E0  5044               	movf	(xtoa@c+1)^0,w,c
  6681  0034E2  E109               	bnz	u11520
  6682  0034E4  0E0A               	movlw	10
  6683  0034E6  5C43               	subwf	xtoa@c^0,w,c
  6684  0034E8  A0D8               	btfss	status,0,c
  6685  0034EA  EF79  F01A         	goto	u11521
  6686  0034EE  EF7B  F01A         	goto	u11520
  6687  0034F2                     u11521:
  6688  0034F2  EF83  F01A         	goto	l9050
  6689  0034F6                     u11520:
  6690  0034F6  0E57               	movlw	87
  6691  0034F8  2443               	addwf	xtoa@c^0,w,c
  6692  0034FA  6E43               	movwf	xtoa@c^0,c
  6693  0034FC  0E00               	movlw	0
  6694  0034FE  2044               	addwfc	(xtoa@c+1)^0,w,c
  6695  003500  6E44               	movwf	(xtoa@c+1)^0,c
  6696  003502  EF89  F01A         	goto	l850
  6697  003506                     l9050:
  6698  003506  0E30               	movlw	48
  6699  003508  2443               	addwf	xtoa@c^0,w,c
  6700  00350A  6E43               	movwf	xtoa@c^0,c
  6701  00350C  0E00               	movlw	0
  6702  00350E  2044               	addwfc	(xtoa@c+1)^0,w,c
  6703  003510  6E44               	movwf	(xtoa@c+1)^0,c
  6704  003512                     l850:
  6705  003512  0EBF               	movlw	191
  6706  003514  6E29               	movwf	??_xtoa^0,c
  6707  003516  0EFF               	movlw	255
  6708  003518  6E2A               	movwf	(??_xtoa+1)^0,c
  6709  00351A  5028               	movf	xtoa@x^0,w,c
  6710  00351C  6E2B               	movwf	(??_xtoa+2)^0,c
  6711  00351E  6A2C               	clrf	(??_xtoa+3)^0,c
  6712  003520  5029               	movf	??_xtoa^0,w,c
  6713  003522  262B               	addwf	(??_xtoa+2)^0,f,c
  6714  003524  502A               	movf	(??_xtoa+1)^0,w,c
  6715  003526  222C               	addwfc	(??_xtoa+3)^0,f,c
  6716  003528  502C               	movf	(??_xtoa+3)^0,w,c
  6717  00352A  E10A               	bnz	u11530
  6718  00352C  0E1A               	movlw	26
  6719  00352E  5C2B               	subwf	(??_xtoa+2)^0,w,c
  6720  003530  A0D8               	btfss	status,0,c
  6721  003532  EF9D  F01A         	goto	u11531
  6722  003536  EFA0  F01A         	goto	u11530
  6723  00353A                     u11531:
  6724  00353A  0E01               	movlw	1
  6725  00353C  EFA1  F01A         	goto	u11540
  6726  003540                     u11530:
  6727  003540  0E00               	movlw	0
  6728  003542                     u11540:
  6729  003542  6E31               	movwf	_xtoa$1764^0,c
  6730  003544  6A32               	clrf	(_xtoa$1764+1)^0,c
  6731  003546  5031               	movf	_xtoa$1764^0,w,c
  6732  003548  1032               	iorwf	(_xtoa$1764+1)^0,w,c
  6733  00354A  B4D8               	btfsc	status,2,c
  6734  00354C  EFAA  F01A         	goto	u11551
  6735  003550  EFAC  F01A         	goto	u11550
  6736  003554                     u11551:
  6737  003554  EFDC  F01A         	goto	l9064
  6738  003558                     u11550:
  6739  003558  0E9F               	movlw	159
  6740  00355A  6E29               	movwf	??_xtoa^0,c
  6741  00355C  0EFF               	movlw	255
  6742  00355E  6E2A               	movwf	(??_xtoa+1)^0,c
  6743  003560  0E20               	movlw	32
  6744  003562  1043               	iorwf	xtoa@c^0,w,c
  6745  003564  6E2B               	movwf	(??_xtoa+2)^0,c
  6746  003566  0E00               	movlw	0
  6747  003568  1044               	iorwf	(xtoa@c+1)^0,w,c
  6748  00356A  6E2C               	movwf	(??_xtoa+3)^0,c
  6749  00356C  5029               	movf	??_xtoa^0,w,c
  6750  00356E  262B               	addwf	(??_xtoa+2)^0,f,c
  6751  003570  502A               	movf	(??_xtoa+1)^0,w,c
  6752  003572  222C               	addwfc	(??_xtoa+3)^0,f,c
  6753  003574  502C               	movf	(??_xtoa+3)^0,w,c
  6754  003576  E10A               	bnz	u11560
  6755  003578  0E1A               	movlw	26
  6756  00357A  5C2B               	subwf	(??_xtoa+2)^0,w,c
  6757  00357C  A0D8               	btfss	status,0,c
  6758  00357E  EFC3  F01A         	goto	u11561
  6759  003582  EFC6  F01A         	goto	u11560
  6760  003586                     u11561:
  6761  003586  0E01               	movlw	1
  6762  003588  EFC7  F01A         	goto	u11570
  6763  00358C                     u11560:
  6764  00358C  0E00               	movlw	0
  6765  00358E                     u11570:
  6766  00358E  6E33               	movwf	_xtoa$1765^0,c
  6767  003590  6A34               	clrf	(_xtoa$1765+1)^0,c
  6768  003592  5033               	movf	_xtoa$1765^0,w,c
  6769  003594  1034               	iorwf	(_xtoa$1765+1)^0,w,c
  6770  003596  B4D8               	btfsc	status,2,c
  6771  003598  EFD0  F01A         	goto	u11581
  6772  00359C  EFD2  F01A         	goto	u11580
  6773  0035A0                     u11581:
  6774  0035A0  EFDC  F01A         	goto	l9064
  6775  0035A4                     u11580:
  6776  0035A4                     
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6778  0035A4  C043  F009         	movff	xtoa@c,toupper@c
  6779  0035A8  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  6780  0035AC  EC85  F02C         	call	_toupper	;wreg free
  6781  0035B0  C009  F043         	movff	?_toupper,xtoa@c
  6782  0035B4  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  6783  0035B8                     l9064:
  6784                           
  6785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6786  0035B8  0E64               	movlw	low _dbuf
  6787  0035BA  2441               	addwf	xtoa@i^0,w,c
  6788  0035BC  6ED9               	movwf	fsr2l,c
  6789  0035BE  0E01               	movlw	high _dbuf
  6790  0035C0  2042               	addwfc	(xtoa@i+1)^0,w,c
  6791  0035C2  6EDA               	movwf	fsr2h,c
  6792  0035C4  C043  FFDF         	movff	xtoa@c,indf2
  6793  0035C8                     
  6794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6795  0035C8  0635               	decf	xtoa@p^0,f,c
  6796  0035CA  A0D8               	btfss	status,0,c
  6797  0035CC  0636               	decf	(xtoa@p+1)^0,f,c
  6798  0035CE                     
  6799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6800  0035CE  0637               	decf	xtoa@w^0,f,c
  6801  0035D0  A0D8               	btfss	status,0,c
  6802  0035D2  0638               	decf	(xtoa@w+1)^0,f,c
  6803  0035D4                     
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6805  0035D4  C039  F029         	movff	xtoa@n,??_xtoa
  6806  0035D8  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  6807  0035DC  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  6808  0035E0  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  6809  0035E4  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  6810  0035E8  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  6811  0035EC  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  6812  0035F0  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  6813  0035F4  0E05               	movlw	5
  6814  0035F6  EF06  F01B         	goto	u11590
  6815  0035FA                     u11595:
  6816  0035FA  90D8               	bcf	status,0,c
  6817  0035FC  3230               	rrcf	(??_xtoa+7)^0,f,c
  6818  0035FE  322F               	rrcf	(??_xtoa+6)^0,f,c
  6819  003600  322E               	rrcf	(??_xtoa+5)^0,f,c
  6820  003602  322D               	rrcf	(??_xtoa+4)^0,f,c
  6821  003604  322C               	rrcf	(??_xtoa+3)^0,f,c
  6822  003606  322B               	rrcf	(??_xtoa+2)^0,f,c
  6823  003608  322A               	rrcf	(??_xtoa+1)^0,f,c
  6824  00360A  3229               	rrcf	??_xtoa^0,f,c
  6825  00360C                     u11590:
  6826  00360C  2EE8               	decfsz	wreg,f,c
  6827  00360E  EFFD  F01A         	goto	u11595
  6828  003612  C029  F039         	movff	??_xtoa,xtoa@n
  6829  003616  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  6830  00361A  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  6831  00361E  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  6832  003622  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  6833  003626  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  6834  00362A  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  6835  00362E  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  6836  003632                     l9072:
  6837                           
  6838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6839  003632  BE42               	btfsc	(xtoa@i+1)^0,7,c
  6840  003634  EF25  F01B         	goto	u11601
  6841  003638  5042               	movf	(xtoa@i+1)^0,w,c
  6842  00363A  E109               	bnz	u11600
  6843  00363C  0E02               	movlw	2
  6844  00363E  5C41               	subwf	xtoa@i^0,w,c
  6845  003640  A0D8               	btfss	status,0,c
  6846  003642  EF25  F01B         	goto	u11601
  6847  003646  EF27  F01B         	goto	u11600
  6848  00364A                     u11601:
  6849  00364A  EF57  F01B         	goto	l864
  6850  00364E                     u11600:
  6851  00364E  5039               	movf	xtoa@n^0,w,c
  6852  003650  103A               	iorwf	(xtoa@n+1)^0,w,c
  6853  003652  103B               	iorwf	(xtoa@n+2)^0,w,c
  6854  003654  103C               	iorwf	(xtoa@n+3)^0,w,c
  6855  003656  103D               	iorwf	(xtoa@n+4)^0,w,c
  6856  003658  103E               	iorwf	(xtoa@n+5)^0,w,c
  6857  00365A  103F               	iorwf	(xtoa@n+6)^0,w,c
  6858  00365C  1040               	iorwf	(xtoa@n+7)^0,w,c
  6859  00365E  A4D8               	btfss	status,2,c
  6860  003660  EF34  F01B         	goto	u11611
  6861  003664  EF36  F01B         	goto	u11610
  6862  003668                     u11611:
  6863  003668  EF66  F01A         	goto	l9042
  6864  00366C                     u11610:
  6865  00366C  BE36               	btfsc	(xtoa@p+1)^0,7,c
  6866  00366E  EF43  F01B         	goto	u11620
  6867  003672  5036               	movf	(xtoa@p+1)^0,w,c
  6868  003674  E106               	bnz	u11621
  6869  003676  0435               	decf	xtoa@p^0,w,c
  6870  003678  B0D8               	btfsc	status,0,c
  6871  00367A  EF41  F01B         	goto	u11621
  6872  00367E  EF43  F01B         	goto	u11620
  6873  003682                     u11621:
  6874  003682  EF66  F01A         	goto	l9042
  6875  003686                     u11620:
  6876  003686  BE38               	btfsc	(xtoa@w+1)^0,7,c
  6877  003688  EF4E  F01B         	goto	u11631
  6878  00368C  5038               	movf	(xtoa@w+1)^0,w,c
  6879  00368E  E108               	bnz	u11630
  6880  003690  0437               	decf	xtoa@w^0,w,c
  6881  003692  A0D8               	btfss	status,0,c
  6882  003694  EF4E  F01B         	goto	u11631
  6883  003698  EF50  F01B         	goto	u11630
  6884  00369C                     u11631:
  6885  00369C  EF57  F01B         	goto	l864
  6886  0036A0                     u11630:
  6887  0036A0  B259               	btfsc	_flags^0,1,c
  6888  0036A2  EF55  F01B         	goto	u11641
  6889  0036A6  EF57  F01B         	goto	u11640
  6890  0036AA                     u11641:
  6891  0036AA  EF66  F01A         	goto	l9042
  6892  0036AE                     u11640:
  6893  0036AE                     l864:
  6894                           
  6895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6896  0036AE  A859               	btfss	_flags^0,4,c
  6897  0036B0  EF5C  F01B         	goto	u11651
  6898  0036B4  EF5E  F01B         	goto	u11650
  6899  0036B8                     u11651:
  6900  0036B8  EF74  F01B         	goto	l9088
  6901  0036BC                     u11650:
  6902  0036BC                     
  6903                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6904  0036BC  0641               	decf	xtoa@i^0,f,c
  6905  0036BE  A0D8               	btfss	status,0,c
  6906  0036C0  0642               	decf	(xtoa@i+1)^0,f,c
  6907  0036C2                     
  6908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6909  0036C2  0E64               	movlw	low _dbuf
  6910  0036C4  2441               	addwf	xtoa@i^0,w,c
  6911  0036C6  6ED9               	movwf	fsr2l,c
  6912  0036C8  0E01               	movlw	high _dbuf
  6913  0036CA  2042               	addwfc	(xtoa@i+1)^0,w,c
  6914  0036CC  6EDA               	movwf	fsr2h,c
  6915  0036CE  C028  FFDF         	movff	xtoa@x,indf2
  6916  0036D2                     
  6917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6918  0036D2  0641               	decf	xtoa@i^0,f,c
  6919  0036D4  A0D8               	btfss	status,0,c
  6920  0036D6  0642               	decf	(xtoa@i+1)^0,f,c
  6921                           
  6922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6923  0036D8  0E64               	movlw	low _dbuf
  6924  0036DA  2441               	addwf	xtoa@i^0,w,c
  6925  0036DC  6ED9               	movwf	fsr2l,c
  6926  0036DE  0E01               	movlw	high _dbuf
  6927  0036E0  2042               	addwfc	(xtoa@i+1)^0,w,c
  6928  0036E2  6EDA               	movwf	fsr2h,c
  6929  0036E4  0E30               	movlw	48
  6930  0036E6  6EDF               	movwf	indf2,c
  6931  0036E8                     l9088:
  6932                           
  6933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6934  0036E8  C01E  F013         	movff	xtoa@fp,pad@fp
  6935  0036EC  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  6936  0036F0  0E64               	movlw	low _dbuf
  6937  0036F2  2441               	addwf	xtoa@i^0,w,c
  6938  0036F4  6E15               	movwf	pad@buf^0,c
  6939  0036F6  0E01               	movlw	high _dbuf
  6940  0036F8  2042               	addwfc	(xtoa@i+1)^0,w,c
  6941  0036FA  6E16               	movwf	(pad@buf+1)^0,c
  6942  0036FC  C037  F017         	movff	xtoa@w,pad@p
  6943  003700  C038  F018         	movff	xtoa@w+1,pad@p+1
  6944  003704  EC45  F02A         	call	_pad	;wreg free
  6945  003708  C013  F01E         	movff	?_pad,?_xtoa
  6946  00370C  C014  F01F         	movff	?_pad+1,?_xtoa+1
  6947  003710  0012               	return		;funcret
  6948  003712                     __end_of_xtoa:
  6949                           	opt callstack 0
  6950                           
  6951 ;; *************** function _toupper *****************
  6952 ;; Defined at:
  6953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  c               2    8[COMRAM] int 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  2    8[COMRAM] int 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6969 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;Total ram usage:        8 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    5
  6974 ;; This function calls:
  6975 ;;		_islower
  6976 ;; This function is called by:
  6977 ;;		_xtoa
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text6
  6982  00590A                     __ptext6:
  6983                           	opt callstack 0
  6984  00590A                     _toupper:
  6985                           	opt callstack 20
  6986  00590A  0E9F               	movlw	159
  6987  00590C  6E0B               	movwf	??_toupper^0,c
  6988  00590E  0EFF               	movlw	255
  6989  005910  6E0C               	movwf	(??_toupper+1)^0,c
  6990  005912  C009  F00D         	movff	toupper@c,??_toupper+2
  6991  005916  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  6992  00591A  500B               	movf	??_toupper^0,w,c
  6993  00591C  260D               	addwf	(??_toupper+2)^0,f,c
  6994  00591E  500C               	movf	(??_toupper+1)^0,w,c
  6995  005920  220E               	addwfc	(??_toupper+3)^0,f,c
  6996  005922  500E               	movf	(??_toupper+3)^0,w,c
  6997  005924  E10A               	bnz	u9580
  6998  005926  0E1A               	movlw	26
  6999  005928  5C0D               	subwf	(??_toupper+2)^0,w,c
  7000  00592A  A0D8               	btfss	status,0,c
  7001  00592C  EF9A  F02C         	goto	u9581
  7002  005930  EF9D  F02C         	goto	u9580
  7003  005934                     u9581:
  7004  005934  0E01               	movlw	1
  7005  005936  EF9E  F02C         	goto	u9590
  7006  00593A                     u9580:
  7007  00593A  0E00               	movlw	0
  7008  00593C                     u9590:
  7009  00593C  6E0F               	movwf	_toupper$2500^0,c
  7010  00593E  6A10               	clrf	(_toupper$2500+1)^0,c
  7011  005940  500F               	movf	_toupper$2500^0,w,c
  7012  005942  1010               	iorwf	(_toupper$2500+1)^0,w,c
  7013  005944  B4D8               	btfsc	status,2,c
  7014  005946  EFA7  F02C         	goto	u9601
  7015  00594A  EFA9  F02C         	goto	u9600
  7016  00594E                     u9601:
  7017  00594E  EFAF  F02C         	goto	l1789
  7018  005952                     u9600:
  7019  005952  0E5F               	movlw	95
  7020  005954  1409               	andwf	toupper@c^0,w,c
  7021  005956  6E09               	movwf	?_toupper^0,c
  7022  005958  6A0A               	clrf	(?_toupper+1)^0,c
  7023  00595A  EFB3  F02C         	goto	l1794
  7024  00595E                     l1789:
  7025  00595E  C009  F009         	movff	toupper@c,?_toupper
  7026  005962  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  7027  005966                     l1794:
  7028  005966  0012               	return		;funcret
  7029  005968                     __end_of_toupper:
  7030                           	opt callstack 0
  7031                           
  7032 ;; *************** function _islower *****************
  7033 ;; Defined at:
  7034 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  c               2    2[COMRAM] int 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  2    2[COMRAM] int 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;Total ram usage:        6 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    4
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_toupper
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text7
  7063  005C92                     __ptext7:
  7064                           	opt callstack 0
  7065  005C92                     _islower:
  7066                           	opt callstack 20
  7067  005C92  0E9F               	movlw	159
  7068  005C94  6E05               	movwf	??_islower^0,c
  7069  005C96  0EFF               	movlw	255
  7070  005C98  6E06               	movwf	(??_islower+1)^0,c
  7071  005C9A  C003  F007         	movff	islower@c,??_islower+2
  7072  005C9E  C004  F008         	movff	islower@c+1,??_islower+3
  7073  005CA2  5005               	movf	??_islower^0,w,c
  7074  005CA4  2607               	addwf	(??_islower+2)^0,f,c
  7075  005CA6  5006               	movf	(??_islower+1)^0,w,c
  7076  005CA8  2208               	addwfc	(??_islower+3)^0,f,c
  7077  005CAA  5008               	movf	(??_islower+3)^0,w,c
  7078  005CAC  E10A               	bnz	u9270
  7079  005CAE  0E1A               	movlw	26
  7080  005CB0  5C07               	subwf	(??_islower+2)^0,w,c
  7081  005CB2  A0D8               	btfss	status,0,c
  7082  005CB4  EF5E  F02E         	goto	u9271
  7083  005CB8  EF61  F02E         	goto	u9270
  7084  005CBC                     u9271:
  7085  005CBC  0E01               	movlw	1
  7086  005CBE  EF62  F02E         	goto	u9280
  7087  005CC2                     u9270:
  7088  005CC2  0E00               	movlw	0
  7089  005CC4                     u9280:
  7090  005CC4  6E03               	movwf	?_islower^0,c
  7091  005CC6  6A04               	clrf	(?_islower+1)^0,c
  7092  005CC8  0012               	return		;funcret
  7093  005CCA                     __end_of_islower:
  7094                           	opt callstack 0
  7095                           
  7096 ;; *************** function _isalpha *****************
  7097 ;; Defined at:
  7098 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;  c               2    2[COMRAM] int 
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  2    2[COMRAM] int 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7116 ;;Total ram usage:        6 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    4
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_xtoa
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text8
  7127  005C56                     __ptext8:
  7128                           	opt callstack 0
  7129  005C56                     _isalpha:
  7130                           	opt callstack 21
  7131  005C56  0E9F               	movlw	159
  7132  005C58  6E05               	movwf	??_isalpha^0,c
  7133  005C5A  0EFF               	movlw	255
  7134  005C5C  6E06               	movwf	(??_isalpha+1)^0,c
  7135  005C5E  0E20               	movlw	32
  7136  005C60  1003               	iorwf	isalpha@c^0,w,c
  7137  005C62  6E07               	movwf	(??_isalpha+2)^0,c
  7138  005C64  0E00               	movlw	0
  7139  005C66  1004               	iorwf	(isalpha@c+1)^0,w,c
  7140  005C68  6E08               	movwf	(??_isalpha+3)^0,c
  7141  005C6A  5005               	movf	??_isalpha^0,w,c
  7142  005C6C  2607               	addwf	(??_isalpha+2)^0,f,c
  7143  005C6E  5006               	movf	(??_isalpha+1)^0,w,c
  7144  005C70  2208               	addwfc	(??_isalpha+3)^0,f,c
  7145  005C72  5008               	movf	(??_isalpha+3)^0,w,c
  7146  005C74  E10A               	bnz	u9560
  7147  005C76  0E1A               	movlw	26
  7148  005C78  5C07               	subwf	(??_isalpha+2)^0,w,c
  7149  005C7A  A0D8               	btfss	status,0,c
  7150  005C7C  EF42  F02E         	goto	u9561
  7151  005C80  EF45  F02E         	goto	u9560
  7152  005C84                     u9561:
  7153  005C84  0E01               	movlw	1
  7154  005C86  EF46  F02E         	goto	u9570
  7155  005C8A                     u9560:
  7156  005C8A  0E00               	movlw	0
  7157  005C8C                     u9570:
  7158  005C8C  6E03               	movwf	?_isalpha^0,c
  7159  005C8E  6A04               	clrf	(?_isalpha+1)^0,c
  7160  005C90  0012               	return		;funcret
  7161  005C92                     __end_of_isalpha:
  7162                           	opt callstack 0
  7163                           
  7164 ;; *************** function _utoa *****************
  7165 ;; Defined at:
  7166 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7169 ;;		 -> vsnprintf@f(6), 
  7170 ;;  d               8   31[COMRAM] unsigned long long 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  n               8   51[COMRAM] unsigned long long 
  7173 ;;  i               2   59[COMRAM] int 
  7174 ;;  w               2   49[COMRAM] int 
  7175 ;;  p               2   47[COMRAM] int 
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  2   29[COMRAM] int 
  7178 ;; Registers used:
  7179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7185 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7189 ;;Total ram usage:       32 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    8
  7192 ;; This function calls:
  7193 ;;		___lodiv
  7194 ;;		___lomod
  7195 ;;		_pad
  7196 ;; This function is called by:
  7197 ;;		_vfpfcnvrt
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text9
  7202  003B38                     __ptext9:
  7203                           	opt callstack 0
  7204  003B38                     _utoa:
  7205                           	opt callstack 18
  7206  003B38                     
  7207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7208  003B38  BE58               	btfsc	(_prec+1)^0,7,c
  7209  003B3A  EFA1  F01D         	goto	u11421
  7210  003B3E  EFA3  F01D         	goto	u11420
  7211  003B42                     u11421:
  7212  003B42  EFA4  F01D         	goto	l8994
  7213  003B46                     u11420:
  7214  003B46                     
  7215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7216  003B46  9259               	bcf	_flags^0,1,c
  7217  003B48                     l8994:
  7218                           
  7219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7220  003B48  BE58               	btfsc	(_prec+1)^0,7,c
  7221  003B4A  EFB1  F01D         	goto	u11430
  7222  003B4E  5058               	movf	(_prec+1)^0,w,c
  7223  003B50  E106               	bnz	u11431
  7224  003B52  0457               	decf	_prec^0,w,c
  7225  003B54  B0D8               	btfsc	status,0,c
  7226  003B56  EFAF  F01D         	goto	u11431
  7227  003B5A  EFB1  F01D         	goto	u11430
  7228  003B5E                     u11431:
  7229  003B5E  EFB7  F01D         	goto	l826
  7230  003B62                     u11430:
  7231  003B62  0E00               	movlw	0
  7232  003B64  6E31               	movwf	(utoa@p+1)^0,c
  7233  003B66  0E01               	movlw	1
  7234  003B68  6E30               	movwf	utoa@p^0,c
  7235  003B6A  EFBB  F01D         	goto	l828
  7236  003B6E                     l826:
  7237  003B6E  C057  F030         	movff	_prec,utoa@p
  7238  003B72  C058  F031         	movff	_prec+1,utoa@p+1
  7239  003B76                     l828:
  7240                           
  7241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7242  003B76  C0EC  F032         	movff	_width,utoa@w
  7243  003B7A  C0ED  F033         	movff	_width+1,utoa@w+1
  7244                           
  7245                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7246  003B7E  C020  F034         	movff	utoa@d,utoa@n
  7247  003B82  C021  F035         	movff	utoa@d+1,utoa@n+1
  7248  003B86  C022  F036         	movff	utoa@d+2,utoa@n+2
  7249  003B8A  C023  F037         	movff	utoa@d+3,utoa@n+3
  7250  003B8E  C024  F038         	movff	utoa@d+4,utoa@n+4
  7251  003B92  C025  F039         	movff	utoa@d+5,utoa@n+5
  7252  003B96  C026  F03A         	movff	utoa@d+6,utoa@n+6
  7253  003B9A  C027  F03B         	movff	utoa@d+7,utoa@n+7
  7254  003B9E                     
  7255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7256  003B9E  0E00               	movlw	0
  7257  003BA0  6E3D               	movwf	(utoa@i+1)^0,c
  7258  003BA2  0E4F               	movlw	79
  7259  003BA4  6E3C               	movwf	utoa@i^0,c
  7260  003BA6                     
  7261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7262  003BA6  0E00               	movlw	0
  7263  003BA8  0101               	movlb	1	; () banked
  7264  003BAA  6FB3               	movwf	(_dbuf+79)& (0+255),b
  7265                           
  7266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7267  003BAC  EF4E  F01E         	goto	l9012
  7268  003BB0                     l9002:
  7269                           
  7270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7271  003BB0  063C               	decf	utoa@i^0,f,c
  7272  003BB2  A0D8               	btfss	status,0,c
  7273  003BB4  063D               	decf	(utoa@i+1)^0,f,c
  7274  003BB6                     
  7275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7276  003BB6  0E64               	movlw	low _dbuf
  7277  003BB8  243C               	addwf	utoa@i^0,w,c
  7278  003BBA  6ED9               	movwf	fsr2l,c
  7279  003BBC  0E01               	movlw	high _dbuf
  7280  003BBE  203D               	addwfc	(utoa@i+1)^0,w,c
  7281  003BC0  6EDA               	movwf	fsr2h,c
  7282  003BC2  C034  F003         	movff	utoa@n,___lomod@dividend
  7283  003BC6  C035  F004         	movff	utoa@n+1,___lomod@dividend+1
  7284  003BCA  C036  F005         	movff	utoa@n+2,___lomod@dividend+2
  7285  003BCE  C037  F006         	movff	utoa@n+3,___lomod@dividend+3
  7286  003BD2  C038  F007         	movff	utoa@n+4,___lomod@dividend+4
  7287  003BD6  C039  F008         	movff	utoa@n+5,___lomod@dividend+5
  7288  003BDA  C03A  F009         	movff	utoa@n+6,___lomod@dividend+6
  7289  003BDE  C03B  F00A         	movff	utoa@n+7,___lomod@dividend+7
  7290  003BE2  0E0A               	movlw	10
  7291  003BE4  6E0B               	movwf	___lomod@divisor^0,c
  7292  003BE6  0E00               	movlw	0
  7293  003BE8  6E0C               	movwf	(___lomod@divisor+1)^0,c
  7294  003BEA  0E00               	movlw	0
  7295  003BEC  6E0D               	movwf	(___lomod@divisor+2)^0,c
  7296  003BEE  0E00               	movlw	0
  7297  003BF0  6E0E               	movwf	(___lomod@divisor+3)^0,c
  7298  003BF2  0E00               	movlw	0
  7299  003BF4  6E0F               	movwf	(___lomod@divisor+4)^0,c
  7300  003BF6  0E00               	movlw	0
  7301  003BF8  6E10               	movwf	(___lomod@divisor+5)^0,c
  7302  003BFA  0E00               	movlw	0
  7303  003BFC  6E11               	movwf	(___lomod@divisor+6)^0,c
  7304  003BFE  0E00               	movlw	0
  7305  003C00  6E12               	movwf	(___lomod@divisor+7)^0,c
  7306  003C02  EC16  F029         	call	___lomod	;wreg free
  7307  003C06  C003  F028         	movff	?___lomod,??_utoa
  7308  003C0A  C004  F029         	movff	?___lomod+1,??_utoa+1
  7309  003C0E  C005  F02A         	movff	?___lomod+2,??_utoa+2
  7310  003C12  C006  F02B         	movff	?___lomod+3,??_utoa+3
  7311  003C16  C007  F02C         	movff	?___lomod+4,??_utoa+4
  7312  003C1A  C008  F02D         	movff	?___lomod+5,??_utoa+5
  7313  003C1E  C009  F02E         	movff	?___lomod+6,??_utoa+6
  7314  003C22  C00A  F02F         	movff	?___lomod+7,??_utoa+7
  7315  003C26  5028               	movf	??_utoa^0,w,c
  7316  003C28  0F30               	addlw	48
  7317  003C2A  6EDF               	movwf	indf2,c
  7318  003C2C                     
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7320  003C2C  0630               	decf	utoa@p^0,f,c
  7321  003C2E  A0D8               	btfss	status,0,c
  7322  003C30  0631               	decf	(utoa@p+1)^0,f,c
  7323  003C32                     
  7324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7325  003C32  0632               	decf	utoa@w^0,f,c
  7326  003C34  A0D8               	btfss	status,0,c
  7327  003C36  0633               	decf	(utoa@w+1)^0,f,c
  7328  003C38                     
  7329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7330  003C38  C034  F003         	movff	utoa@n,___lodiv@dividend
  7331  003C3C  C035  F004         	movff	utoa@n+1,___lodiv@dividend+1
  7332  003C40  C036  F005         	movff	utoa@n+2,___lodiv@dividend+2
  7333  003C44  C037  F006         	movff	utoa@n+3,___lodiv@dividend+3
  7334  003C48  C038  F007         	movff	utoa@n+4,___lodiv@dividend+4
  7335  003C4C  C039  F008         	movff	utoa@n+5,___lodiv@dividend+5
  7336  003C50  C03A  F009         	movff	utoa@n+6,___lodiv@dividend+6
  7337  003C54  C03B  F00A         	movff	utoa@n+7,___lodiv@dividend+7
  7338  003C58  0E0A               	movlw	10
  7339  003C5A  6E0B               	movwf	___lodiv@divisor^0,c
  7340  003C5C  0E00               	movlw	0
  7341  003C5E  6E0C               	movwf	(___lodiv@divisor+1)^0,c
  7342  003C60  0E00               	movlw	0
  7343  003C62  6E0D               	movwf	(___lodiv@divisor+2)^0,c
  7344  003C64  0E00               	movlw	0
  7345  003C66  6E0E               	movwf	(___lodiv@divisor+3)^0,c
  7346  003C68  0E00               	movlw	0
  7347  003C6A  6E0F               	movwf	(___lodiv@divisor+4)^0,c
  7348  003C6C  0E00               	movlw	0
  7349  003C6E  6E10               	movwf	(___lodiv@divisor+5)^0,c
  7350  003C70  0E00               	movlw	0
  7351  003C72  6E11               	movwf	(___lodiv@divisor+6)^0,c
  7352  003C74  0E00               	movlw	0
  7353  003C76  6E12               	movwf	(___lodiv@divisor+7)^0,c
  7354  003C78  EC9E  F028         	call	___lodiv	;wreg free
  7355  003C7C  C003  F034         	movff	?___lodiv,utoa@n
  7356  003C80  C004  F035         	movff	?___lodiv+1,utoa@n+1
  7357  003C84  C005  F036         	movff	?___lodiv+2,utoa@n+2
  7358  003C88  C006  F037         	movff	?___lodiv+3,utoa@n+3
  7359  003C8C  C007  F038         	movff	?___lodiv+4,utoa@n+4
  7360  003C90  C008  F039         	movff	?___lodiv+5,utoa@n+5
  7361  003C94  C009  F03A         	movff	?___lodiv+6,utoa@n+6
  7362  003C98  C00A  F03B         	movff	?___lodiv+7,utoa@n+7
  7363  003C9C                     l9012:
  7364                           
  7365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7366  003C9C  503C               	movf	utoa@i^0,w,c
  7367  003C9E  103D               	iorwf	(utoa@i+1)^0,w,c
  7368  003CA0  B4D8               	btfsc	status,2,c
  7369  003CA2  EF55  F01E         	goto	u11441
  7370  003CA6  EF57  F01E         	goto	u11440
  7371  003CAA                     u11441:
  7372  003CAA  EF87  F01E         	goto	l9022
  7373  003CAE                     u11440:
  7374  003CAE  5034               	movf	utoa@n^0,w,c
  7375  003CB0  1035               	iorwf	(utoa@n+1)^0,w,c
  7376  003CB2  1036               	iorwf	(utoa@n+2)^0,w,c
  7377  003CB4  1037               	iorwf	(utoa@n+3)^0,w,c
  7378  003CB6  1038               	iorwf	(utoa@n+4)^0,w,c
  7379  003CB8  1039               	iorwf	(utoa@n+5)^0,w,c
  7380  003CBA  103A               	iorwf	(utoa@n+6)^0,w,c
  7381  003CBC  103B               	iorwf	(utoa@n+7)^0,w,c
  7382  003CBE  A4D8               	btfss	status,2,c
  7383  003CC0  EF64  F01E         	goto	u11451
  7384  003CC4  EF66  F01E         	goto	u11450
  7385  003CC8                     u11451:
  7386  003CC8  EFD8  F01D         	goto	l9002
  7387  003CCC                     u11450:
  7388  003CCC  BE31               	btfsc	(utoa@p+1)^0,7,c
  7389  003CCE  EF73  F01E         	goto	u11460
  7390  003CD2  5031               	movf	(utoa@p+1)^0,w,c
  7391  003CD4  E106               	bnz	u11461
  7392  003CD6  0430               	decf	utoa@p^0,w,c
  7393  003CD8  B0D8               	btfsc	status,0,c
  7394  003CDA  EF71  F01E         	goto	u11461
  7395  003CDE  EF73  F01E         	goto	u11460
  7396  003CE2                     u11461:
  7397  003CE2  EFD8  F01D         	goto	l9002
  7398  003CE6                     u11460:
  7399  003CE6  BE33               	btfsc	(utoa@w+1)^0,7,c
  7400  003CE8  EF7E  F01E         	goto	u11471
  7401  003CEC  5033               	movf	(utoa@w+1)^0,w,c
  7402  003CEE  E108               	bnz	u11470
  7403  003CF0  0432               	decf	utoa@w^0,w,c
  7404  003CF2  A0D8               	btfss	status,0,c
  7405  003CF4  EF7E  F01E         	goto	u11471
  7406  003CF8  EF80  F01E         	goto	u11470
  7407  003CFC                     u11471:
  7408  003CFC  EF87  F01E         	goto	l9022
  7409  003D00                     u11470:
  7410  003D00  B259               	btfsc	_flags^0,1,c
  7411  003D02  EF85  F01E         	goto	u11481
  7412  003D06  EF87  F01E         	goto	u11480
  7413  003D0A                     u11481:
  7414  003D0A  EFD8  F01D         	goto	l9002
  7415  003D0E                     u11480:
  7416  003D0E                     l9022:
  7417                           
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7419  003D0E  C01E  F013         	movff	utoa@fp,pad@fp
  7420  003D12  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  7421  003D16  0E64               	movlw	low _dbuf
  7422  003D18  243C               	addwf	utoa@i^0,w,c
  7423  003D1A  6E15               	movwf	pad@buf^0,c
  7424  003D1C  0E01               	movlw	high _dbuf
  7425  003D1E  203D               	addwfc	(utoa@i+1)^0,w,c
  7426  003D20  6E16               	movwf	(pad@buf+1)^0,c
  7427  003D22  C032  F017         	movff	utoa@w,pad@p
  7428  003D26  C033  F018         	movff	utoa@w+1,pad@p+1
  7429  003D2A  EC45  F02A         	call	_pad	;wreg free
  7430  003D2E  C013  F01E         	movff	?_pad,?_utoa
  7431  003D32  C014  F01F         	movff	?_pad+1,?_utoa+1
  7432  003D36  0012               	return		;funcret
  7433  003D38                     __end_of_utoa:
  7434                           	opt callstack 0
  7435                           
  7436 ;; *************** function ___lomod *****************
  7437 ;; Defined at:
  7438 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  dividend        8    2[COMRAM] unsigned long long 
  7441 ;;  divisor         8   10[COMRAM] unsigned long long 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  counter         1   18[COMRAM] unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  8    2[COMRAM] unsigned long long 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7453 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7456 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;Total ram usage:       17 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:    4
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_utoa
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text10
  7468  00522C                     __ptext10:
  7469                           	opt callstack 0
  7470  00522C                     ___lomod:
  7471                           	opt callstack 21
  7472  00522C  500B               	movf	___lomod@divisor^0,w,c
  7473  00522E  100C               	iorwf	(___lomod@divisor+1)^0,w,c
  7474  005230  100D               	iorwf	(___lomod@divisor+2)^0,w,c
  7475  005232  100E               	iorwf	(___lomod@divisor+3)^0,w,c
  7476  005234  100F               	iorwf	(___lomod@divisor+4)^0,w,c
  7477  005236  1010               	iorwf	(___lomod@divisor+5)^0,w,c
  7478  005238  1011               	iorwf	(___lomod@divisor+6)^0,w,c
  7479  00523A  1012               	iorwf	(___lomod@divisor+7)^0,w,c
  7480  00523C  B4D8               	btfsc	status,2,c
  7481  00523E  EF23  F029         	goto	u10501
  7482  005242  EF25  F029         	goto	u10500
  7483  005246                     u10501:
  7484  005246  EF6D  F029         	goto	l1409
  7485  00524A                     u10500:
  7486  00524A  0E01               	movlw	1
  7487  00524C  6E13               	movwf	___lomod@counter^0,c
  7488  00524E  EF33  F029         	goto	l8504
  7489  005252                     l8502:
  7490  005252  90D8               	bcf	status,0,c
  7491  005254  360B               	rlcf	___lomod@divisor^0,f,c
  7492  005256  360C               	rlcf	(___lomod@divisor+1)^0,f,c
  7493  005258  360D               	rlcf	(___lomod@divisor+2)^0,f,c
  7494  00525A  360E               	rlcf	(___lomod@divisor+3)^0,f,c
  7495  00525C  360F               	rlcf	(___lomod@divisor+4)^0,f,c
  7496  00525E  3610               	rlcf	(___lomod@divisor+5)^0,f,c
  7497  005260  3611               	rlcf	(___lomod@divisor+6)^0,f,c
  7498  005262  3612               	rlcf	(___lomod@divisor+7)^0,f,c
  7499  005264  2A13               	incf	___lomod@counter^0,f,c
  7500  005266                     l8504:
  7501  005266  AE12               	btfss	(___lomod@divisor+7)^0,7,c
  7502  005268  EF38  F029         	goto	u10511
  7503  00526C  EF3A  F029         	goto	u10510
  7504  005270                     u10511:
  7505  005270  EF29  F029         	goto	l8502
  7506  005274                     u10510:
  7507  005274                     l8506:
  7508  005274  500B               	movf	___lomod@divisor^0,w,c
  7509  005276  5C03               	subwf	___lomod@dividend^0,w,c
  7510  005278  500C               	movf	(___lomod@divisor+1)^0,w,c
  7511  00527A  5804               	subwfb	(___lomod@dividend+1)^0,w,c
  7512  00527C  500D               	movf	(___lomod@divisor+2)^0,w,c
  7513  00527E  5805               	subwfb	(___lomod@dividend+2)^0,w,c
  7514  005280  500E               	movf	(___lomod@divisor+3)^0,w,c
  7515  005282  5806               	subwfb	(___lomod@dividend+3)^0,w,c
  7516  005284  500F               	movf	(___lomod@divisor+4)^0,w,c
  7517  005286  5807               	subwfb	(___lomod@dividend+4)^0,w,c
  7518  005288  5010               	movf	(___lomod@divisor+5)^0,w,c
  7519  00528A  5808               	subwfb	(___lomod@dividend+5)^0,w,c
  7520  00528C  5011               	movf	(___lomod@divisor+6)^0,w,c
  7521  00528E  5809               	subwfb	(___lomod@dividend+6)^0,w,c
  7522  005290  5012               	movf	(___lomod@divisor+7)^0,w,c
  7523  005292  580A               	subwfb	(___lomod@dividend+7)^0,w,c
  7524  005294  A0D8               	btfss	status,0,c
  7525  005296  EF4F  F029         	goto	u10521
  7526  00529A  EF51  F029         	goto	u10520
  7527  00529E                     u10521:
  7528  00529E  EF61  F029         	goto	l8510
  7529  0052A2                     u10520:
  7530  0052A2  500B               	movf	___lomod@divisor^0,w,c
  7531  0052A4  5E03               	subwf	___lomod@dividend^0,f,c
  7532  0052A6  500C               	movf	(___lomod@divisor+1)^0,w,c
  7533  0052A8  5A04               	subwfb	(___lomod@dividend+1)^0,f,c
  7534  0052AA  500D               	movf	(___lomod@divisor+2)^0,w,c
  7535  0052AC  5A05               	subwfb	(___lomod@dividend+2)^0,f,c
  7536  0052AE  500E               	movf	(___lomod@divisor+3)^0,w,c
  7537  0052B0  5A06               	subwfb	(___lomod@dividend+3)^0,f,c
  7538  0052B2  500F               	movf	(___lomod@divisor+4)^0,w,c
  7539  0052B4  5A07               	subwfb	(___lomod@dividend+4)^0,f,c
  7540  0052B6  5010               	movf	(___lomod@divisor+5)^0,w,c
  7541  0052B8  5A08               	subwfb	(___lomod@dividend+5)^0,f,c
  7542  0052BA  5011               	movf	(___lomod@divisor+6)^0,w,c
  7543  0052BC  5A09               	subwfb	(___lomod@dividend+6)^0,f,c
  7544  0052BE  5012               	movf	(___lomod@divisor+7)^0,w,c
  7545  0052C0  5A0A               	subwfb	(___lomod@dividend+7)^0,f,c
  7546  0052C2                     l8510:
  7547  0052C2  90D8               	bcf	status,0,c
  7548  0052C4  3212               	rrcf	(___lomod@divisor+7)^0,f,c
  7549  0052C6  3211               	rrcf	(___lomod@divisor+6)^0,f,c
  7550  0052C8  3210               	rrcf	(___lomod@divisor+5)^0,f,c
  7551  0052CA  320F               	rrcf	(___lomod@divisor+4)^0,f,c
  7552  0052CC  320E               	rrcf	(___lomod@divisor+3)^0,f,c
  7553  0052CE  320D               	rrcf	(___lomod@divisor+2)^0,f,c
  7554  0052D0  320C               	rrcf	(___lomod@divisor+1)^0,f,c
  7555  0052D2  320B               	rrcf	___lomod@divisor^0,f,c
  7556  0052D4  2E13               	decfsz	___lomod@counter^0,f,c
  7557  0052D6  EF3A  F029         	goto	l8506
  7558  0052DA                     l1409:
  7559  0052DA  C003  F003         	movff	___lomod@dividend,?___lomod
  7560  0052DE  C004  F004         	movff	___lomod@dividend+1,?___lomod+1
  7561  0052E2  C005  F005         	movff	___lomod@dividend+2,?___lomod+2
  7562  0052E6  C006  F006         	movff	___lomod@dividend+3,?___lomod+3
  7563  0052EA  C007  F007         	movff	___lomod@dividend+4,?___lomod+4
  7564  0052EE  C008  F008         	movff	___lomod@dividend+5,?___lomod+5
  7565  0052F2  C009  F009         	movff	___lomod@dividend+6,?___lomod+6
  7566  0052F6  C00A  F00A         	movff	___lomod@dividend+7,?___lomod+7
  7567  0052FA  0012               	return		;funcret
  7568  0052FC                     __end_of___lomod:
  7569                           	opt callstack 0
  7570                           
  7571 ;; *************** function ___lodiv *****************
  7572 ;; Defined at:
  7573 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  dividend        8    2[COMRAM] unsigned long long 
  7576 ;;  divisor         8   10[COMRAM] unsigned long long 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  quotient        8   18[COMRAM] unsigned long long 
  7579 ;;  counter         1   26[COMRAM] unsigned char 
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  8    2[COMRAM] unsigned long long 
  7582 ;; Registers used:
  7583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7589 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7590 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7592 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7593 ;;Total ram usage:       25 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    4
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_utoa
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text11
  7604  00513C                     __ptext11:
  7605                           	opt callstack 0
  7606  00513C                     ___lodiv:
  7607                           	opt callstack 21
  7608  00513C  EE20  F013         	lfsr	2,___lodiv@quotient
  7609  005140  0E07               	movlw	7
  7610  005142                     u10461:
  7611  005142  6ADE               	clrf	postinc2,c
  7612  005144  06E8               	decf	wreg,f,c
  7613  005146  E2FD               	bc	u10461
  7614  005148  500B               	movf	___lodiv@divisor^0,w,c
  7615  00514A  100C               	iorwf	(___lodiv@divisor+1)^0,w,c
  7616  00514C  100D               	iorwf	(___lodiv@divisor+2)^0,w,c
  7617  00514E  100E               	iorwf	(___lodiv@divisor+3)^0,w,c
  7618  005150  100F               	iorwf	(___lodiv@divisor+4)^0,w,c
  7619  005152  1010               	iorwf	(___lodiv@divisor+5)^0,w,c
  7620  005154  1011               	iorwf	(___lodiv@divisor+6)^0,w,c
  7621  005156  1012               	iorwf	(___lodiv@divisor+7)^0,w,c
  7622  005158  B4D8               	btfsc	status,2,c
  7623  00515A  EFB1  F028         	goto	u10471
  7624  00515E  EFB3  F028         	goto	u10470
  7625  005162                     u10471:
  7626  005162  EF05  F029         	goto	l1399
  7627  005166                     u10470:
  7628  005166  0E01               	movlw	1
  7629  005168  6E1B               	movwf	___lodiv@counter^0,c
  7630  00516A  EFC1  F028         	goto	l8484
  7631  00516E                     l8482:
  7632  00516E  90D8               	bcf	status,0,c
  7633  005170  360B               	rlcf	___lodiv@divisor^0,f,c
  7634  005172  360C               	rlcf	(___lodiv@divisor+1)^0,f,c
  7635  005174  360D               	rlcf	(___lodiv@divisor+2)^0,f,c
  7636  005176  360E               	rlcf	(___lodiv@divisor+3)^0,f,c
  7637  005178  360F               	rlcf	(___lodiv@divisor+4)^0,f,c
  7638  00517A  3610               	rlcf	(___lodiv@divisor+5)^0,f,c
  7639  00517C  3611               	rlcf	(___lodiv@divisor+6)^0,f,c
  7640  00517E  3612               	rlcf	(___lodiv@divisor+7)^0,f,c
  7641  005180  2A1B               	incf	___lodiv@counter^0,f,c
  7642  005182                     l8484:
  7643  005182  AE12               	btfss	(___lodiv@divisor+7)^0,7,c
  7644  005184  EFC6  F028         	goto	u10481
  7645  005188  EFC8  F028         	goto	u10480
  7646  00518C                     u10481:
  7647  00518C  EFB7  F028         	goto	l8482
  7648  005190                     u10480:
  7649  005190                     l8486:
  7650  005190  90D8               	bcf	status,0,c
  7651  005192  3613               	rlcf	___lodiv@quotient^0,f,c
  7652  005194  3614               	rlcf	(___lodiv@quotient+1)^0,f,c
  7653  005196  3615               	rlcf	(___lodiv@quotient+2)^0,f,c
  7654  005198  3616               	rlcf	(___lodiv@quotient+3)^0,f,c
  7655  00519A  3617               	rlcf	(___lodiv@quotient+4)^0,f,c
  7656  00519C  3618               	rlcf	(___lodiv@quotient+5)^0,f,c
  7657  00519E  3619               	rlcf	(___lodiv@quotient+6)^0,f,c
  7658  0051A0  361A               	rlcf	(___lodiv@quotient+7)^0,f,c
  7659  0051A2  500B               	movf	___lodiv@divisor^0,w,c
  7660  0051A4  5C03               	subwf	___lodiv@dividend^0,w,c
  7661  0051A6  500C               	movf	(___lodiv@divisor+1)^0,w,c
  7662  0051A8  5804               	subwfb	(___lodiv@dividend+1)^0,w,c
  7663  0051AA  500D               	movf	(___lodiv@divisor+2)^0,w,c
  7664  0051AC  5805               	subwfb	(___lodiv@dividend+2)^0,w,c
  7665  0051AE  500E               	movf	(___lodiv@divisor+3)^0,w,c
  7666  0051B0  5806               	subwfb	(___lodiv@dividend+3)^0,w,c
  7667  0051B2  500F               	movf	(___lodiv@divisor+4)^0,w,c
  7668  0051B4  5807               	subwfb	(___lodiv@dividend+4)^0,w,c
  7669  0051B6  5010               	movf	(___lodiv@divisor+5)^0,w,c
  7670  0051B8  5808               	subwfb	(___lodiv@dividend+5)^0,w,c
  7671  0051BA  5011               	movf	(___lodiv@divisor+6)^0,w,c
  7672  0051BC  5809               	subwfb	(___lodiv@dividend+6)^0,w,c
  7673  0051BE  5012               	movf	(___lodiv@divisor+7)^0,w,c
  7674  0051C0  580A               	subwfb	(___lodiv@dividend+7)^0,w,c
  7675  0051C2  A0D8               	btfss	status,0,c
  7676  0051C4  EFE6  F028         	goto	u10491
  7677  0051C8  EFE8  F028         	goto	u10490
  7678  0051CC                     u10491:
  7679  0051CC  EFF9  F028         	goto	l8494
  7680  0051D0                     u10490:
  7681  0051D0  500B               	movf	___lodiv@divisor^0,w,c
  7682  0051D2  5E03               	subwf	___lodiv@dividend^0,f,c
  7683  0051D4  500C               	movf	(___lodiv@divisor+1)^0,w,c
  7684  0051D6  5A04               	subwfb	(___lodiv@dividend+1)^0,f,c
  7685  0051D8  500D               	movf	(___lodiv@divisor+2)^0,w,c
  7686  0051DA  5A05               	subwfb	(___lodiv@dividend+2)^0,f,c
  7687  0051DC  500E               	movf	(___lodiv@divisor+3)^0,w,c
  7688  0051DE  5A06               	subwfb	(___lodiv@dividend+3)^0,f,c
  7689  0051E0  500F               	movf	(___lodiv@divisor+4)^0,w,c
  7690  0051E2  5A07               	subwfb	(___lodiv@dividend+4)^0,f,c
  7691  0051E4  5010               	movf	(___lodiv@divisor+5)^0,w,c
  7692  0051E6  5A08               	subwfb	(___lodiv@dividend+5)^0,f,c
  7693  0051E8  5011               	movf	(___lodiv@divisor+6)^0,w,c
  7694  0051EA  5A09               	subwfb	(___lodiv@dividend+6)^0,f,c
  7695  0051EC  5012               	movf	(___lodiv@divisor+7)^0,w,c
  7696  0051EE  5A0A               	subwfb	(___lodiv@dividend+7)^0,f,c
  7697  0051F0  8013               	bsf	___lodiv@quotient^0,0,c
  7698  0051F2                     l8494:
  7699  0051F2  90D8               	bcf	status,0,c
  7700  0051F4  3212               	rrcf	(___lodiv@divisor+7)^0,f,c
  7701  0051F6  3211               	rrcf	(___lodiv@divisor+6)^0,f,c
  7702  0051F8  3210               	rrcf	(___lodiv@divisor+5)^0,f,c
  7703  0051FA  320F               	rrcf	(___lodiv@divisor+4)^0,f,c
  7704  0051FC  320E               	rrcf	(___lodiv@divisor+3)^0,f,c
  7705  0051FE  320D               	rrcf	(___lodiv@divisor+2)^0,f,c
  7706  005200  320C               	rrcf	(___lodiv@divisor+1)^0,f,c
  7707  005202  320B               	rrcf	___lodiv@divisor^0,f,c
  7708  005204  2E1B               	decfsz	___lodiv@counter^0,f,c
  7709  005206  EFC8  F028         	goto	l8486
  7710  00520A                     l1399:
  7711  00520A  C013  F003         	movff	___lodiv@quotient,?___lodiv
  7712  00520E  C014  F004         	movff	___lodiv@quotient+1,?___lodiv+1
  7713  005212  C015  F005         	movff	___lodiv@quotient+2,?___lodiv+2
  7714  005216  C016  F006         	movff	___lodiv@quotient+3,?___lodiv+3
  7715  00521A  C017  F007         	movff	___lodiv@quotient+4,?___lodiv+4
  7716  00521E  C018  F008         	movff	___lodiv@quotient+5,?___lodiv+5
  7717  005222  C019  F009         	movff	___lodiv@quotient+6,?___lodiv+6
  7718  005226  C01A  F00A         	movff	___lodiv@quotient+7,?___lodiv+7
  7719  00522A  0012               	return		;funcret
  7720  00522C                     __end_of___lodiv:
  7721                           	opt callstack 0
  7722                           
  7723 ;; *************** function _strncmp *****************
  7724 ;; Defined at:
  7725 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  _l              2    2[COMRAM] PTR const unsigned char 
  7728 ;;		 -> vfpfcnvrt@ct(3), STR_5(9), STR_4(20), STR_3(14), 
  7729 ;;  _r              2    4[COMRAM] PTR const unsigned char 
  7730 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7731 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7732 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7733 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7734 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  7735 ;;		 -> STR_20(4), STR_16(4), 
  7736 ;;  n               2    6[COMRAM] unsigned int 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  r               2   11[COMRAM] PTR const unsigned char 
  7739 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7740 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7741 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7742 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7743 ;;		 -> STR_38(3), STR_34(3), STR_29(3), STR_25(3), 
  7744 ;;		 -> STR_20(4), STR_16(4), 
  7745 ;;  l               2    9[COMRAM] PTR const unsigned char 
  7746 ;;		 -> vfpfcnvrt@ct(3), STR_5(9), STR_4(20), STR_3(14), 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  2    2[COMRAM] int 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7756 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7757 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7759 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7760 ;;Total ram usage:       11 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    4
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_vfpfcnvrt
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text12
  7771  004AF2                     __ptext12:
  7772                           	opt callstack 0
  7773  004AF2                     _strncmp:
  7774                           	opt callstack 22
  7775  004AF2  C003  F00A         	movff	strncmp@_l,strncmp@l
  7776  004AF6  C004  F00B         	movff	strncmp@_l+1,strncmp@l+1
  7777  004AFA  C005  F00C         	movff	strncmp@_r,strncmp@r
  7778  004AFE  C006  F00D         	movff	strncmp@_r+1,strncmp@r+1
  7779  004B02  0607               	decf	strncmp@n^0,f,c
  7780  004B04  A0D8               	btfss	status,0,c
  7781  004B06  0608               	decf	(strncmp@n+1)^0,f,c
  7782  004B08  2807               	incf	strncmp@n^0,w,c
  7783  004B0A  E106               	bnz	u11731
  7784  004B0C  2808               	incf	(strncmp@n+1)^0,w,c
  7785  004B0E  A4D8               	btfss	status,2,c
  7786  004B10  EF8C  F025         	goto	u11731
  7787  004B14  EF8E  F025         	goto	u11730
  7788  004B18                     u11731:
  7789  004B18  EF9B  F025         	goto	l9142
  7790  004B1C                     u11730:
  7791  004B1C  0E00               	movlw	0
  7792  004B1E  6E04               	movwf	(?_strncmp+1)^0,c
  7793  004B20  0E00               	movlw	0
  7794  004B22  6E03               	movwf	?_strncmp^0,c
  7795  004B24  EF0B  F026         	goto	l1766
  7796  004B28                     l9140:
  7797  004B28  4A0A               	infsnz	strncmp@l^0,f,c
  7798  004B2A  2A0B               	incf	(strncmp@l+1)^0,f,c
  7799  004B2C  4A0C               	infsnz	strncmp@r^0,f,c
  7800  004B2E  2A0D               	incf	(strncmp@r+1)^0,f,c
  7801  004B30  0607               	decf	strncmp@n^0,f,c
  7802  004B32  A0D8               	btfss	status,0,c
  7803  004B34  0608               	decf	(strncmp@n+1)^0,f,c
  7804  004B36                     l9142:
  7805  004B36  C00A  FFF6         	movff	strncmp@l,tblptrl
  7806  004B3A  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7807  004B3E  0E00               	movlw	low (__mediumconst shr (0+16))
  7808  004B40  6EF8               	movwf	tblptru,c
  7809  004B42  0E0E               	movlw	(high __ramtop+-1)
  7810  004B44  64F7               	cpfsgt	tblptrh,c
  7811  004B46  D003               	bra	u11747
  7812  004B48  0008               	tblrd		*
  7813  004B4A  50F5               	movf	tablat,w,c
  7814  004B4C  D005               	bra	u11740
  7815  004B4E                     u11747:
  7816  004B4E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7817  004B52  CFF7 FFE2          	movff	tblptrh,fsr1h
  7818  004B56  50E7               	movf	indf1,w,c
  7819  004B58                     u11740:
  7820  004B58  0900               	iorlw	0
  7821  004B5A  B4D8               	btfsc	status,2,c
  7822  004B5C  EFB2  F025         	goto	u11751
  7823  004B60  EFB4  F025         	goto	u11750
  7824  004B64                     u11751:
  7825  004B64  EFED  F025         	goto	l9150
  7826  004B68                     u11750:
  7827  004B68  C00C  FFF6         	movff	strncmp@r,tblptrl
  7828  004B6C  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7829  004B70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7830  004B70  6AF8               	clrf	tblptru,c
  7831  004B72                     	endif
  7832  004B72                     	if	0	;tblptru may be non-zero
  7833  004B72                     	endif
  7834  004B72  0008               	tblrd		*
  7835  004B74  50F5               	movf	tablat,w,c
  7836  004B76  0900               	iorlw	0
  7837  004B78  B4D8               	btfsc	status,2,c
  7838  004B7A  EFC1  F025         	goto	u11761
  7839  004B7E  EFC3  F025         	goto	u11760
  7840  004B82                     u11761:
  7841  004B82  EFED  F025         	goto	l9150
  7842  004B86                     u11760:
  7843  004B86  5007               	movf	strncmp@n^0,w,c
  7844  004B88  1008               	iorwf	(strncmp@n+1)^0,w,c
  7845  004B8A  B4D8               	btfsc	status,2,c
  7846  004B8C  EFCA  F025         	goto	u11771
  7847  004B90  EFCC  F025         	goto	u11770
  7848  004B94                     u11771:
  7849  004B94  EFED  F025         	goto	l9150
  7850  004B98                     u11770:
  7851  004B98  C00C  FFF6         	movff	strncmp@r,tblptrl
  7852  004B9C  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7853  004BA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7854  004BA0  6AF8               	clrf	tblptru,c
  7855  004BA2                     	endif
  7856  004BA2                     	if	0	;tblptru may be non-zero
  7857  004BA2                     	endif
  7858  004BA2  0008               	tblrd		*
  7859  004BA4  CFF5 F009          	movff	tablat,??_strncmp
  7860  004BA8  C00A  FFF6         	movff	strncmp@l,tblptrl
  7861  004BAC  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7862  004BB0  0E00               	movlw	low (__mediumconst shr (0+16))
  7863  004BB2  6EF8               	movwf	tblptru,c
  7864  004BB4  0E0E               	movlw	(high __ramtop+-1)
  7865  004BB6  64F7               	cpfsgt	tblptrh,c
  7866  004BB8  D003               	bra	u11787
  7867  004BBA  0008               	tblrd		*
  7868  004BBC  50F5               	movf	tablat,w,c
  7869  004BBE  D005               	bra	u11785
  7870  004BC0                     u11787:
  7871  004BC0  CFF6 FFE1          	movff	tblptrl,fsr1l
  7872  004BC4  CFF7 FFE2          	movff	tblptrh,fsr1h
  7873  004BC8  50E7               	movf	indf1,w,c
  7874  004BCA                     u11785:
  7875  004BCA  1809               	xorwf	??_strncmp^0,w,c
  7876  004BCC  B4D8               	btfsc	status,2,c
  7877  004BCE  EFEB  F025         	goto	u11781
  7878  004BD2  EFED  F025         	goto	u11780
  7879  004BD6                     u11781:
  7880  004BD6  EF94  F025         	goto	l9140
  7881  004BDA                     u11780:
  7882  004BDA                     l9150:
  7883  004BDA  C00A  FFF6         	movff	strncmp@l,tblptrl
  7884  004BDE  C00B  FFF7         	movff	strncmp@l+1,tblptrh
  7885  004BE2  0E00               	movlw	low (__mediumconst shr (0+16))
  7886  004BE4  6EF8               	movwf	tblptru,c
  7887  004BE6  0E0E               	movlw	(high __ramtop+-1)
  7888  004BE8  64F7               	cpfsgt	tblptrh,c
  7889  004BEA  D003               	bra	u11797
  7890  004BEC  0008               	tblrd		*
  7891  004BEE  50F5               	movf	tablat,w,c
  7892  004BF0  D005               	bra	u11790
  7893  004BF2                     u11797:
  7894  004BF2  CFF6 FFE1          	movff	tblptrl,fsr1l
  7895  004BF6  CFF7 FFE2          	movff	tblptrh,fsr1h
  7896  004BFA  50E7               	movf	indf1,w,c
  7897  004BFC                     u11790:
  7898  004BFC  6E09               	movwf	??_strncmp^0,c
  7899  004BFE  C00C  FFF6         	movff	strncmp@r,tblptrl
  7900  004C02  C00D  FFF7         	movff	strncmp@r+1,tblptrh
  7901  004C06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7902  004C06  6AF8               	clrf	tblptru,c
  7903  004C08                     	endif
  7904  004C08                     	if	0	;tblptru may be non-zero
  7905  004C08                     	endif
  7906  004C08  0008               	tblrd		*
  7907  004C0A  50F5               	movf	tablat,w,c
  7908  004C0C  5C09               	subwf	??_strncmp^0,w,c
  7909  004C0E  6E03               	movwf	?_strncmp^0,c
  7910  004C10  6A04               	clrf	(?_strncmp+1)^0,c
  7911  004C12  A0D8               	btfss	status,0,c
  7912  004C14  0604               	decf	(?_strncmp+1)^0,f,c
  7913  004C16                     l1766:
  7914  004C16  0012               	return		;funcret
  7915  004C18                     __end_of_strncmp:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function _stoa *****************
  7919 ;; Defined at:
  7920 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7923 ;;		 -> vsnprintf@f(6), 
  7924 ;;  s               2   13[COMRAM] PTR unsigned char 
  7925 ;;		 -> ?_snprintf(2), ticks(2), 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  nuls            7   16[COMRAM] unsigned char [7]
  7928 ;;  l               2   31[COMRAM] int 
  7929 ;;  p               2   29[COMRAM] int 
  7930 ;;  cp              2   27[COMRAM] PTR unsigned char 
  7931 ;;		 -> ?_snprintf(2), stoa@nuls(7), ticks(2), 
  7932 ;;  w               2   25[COMRAM] int 
  7933 ;;  i               2   23[COMRAM] int 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  2   11[COMRAM] int 
  7936 ;; Registers used:
  7937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;Total ram usage:       22 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    6
  7950 ;; This function calls:
  7951 ;;		_fputc
  7952 ;;		_strlen
  7953 ;; This function is called by:
  7954 ;;		_vfpfcnvrt
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text13
  7959  0043F8                     __ptext13:
  7960                           	opt callstack 0
  7961  0043F8                     _stoa:
  7962                           	opt callstack 20
  7963  0043F8                     
  7964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7965  0043F8  EE21  F0BC         	lfsr	2,stoa@F1174
  7966  0043FC  EE10  F011         	lfsr	1,stoa@nuls
  7967  004400  0E06               	movlw	6
  7968  004402                     u11331:
  7969  004402  CFDB FFE3          	movff	plusw2,plusw1
  7970  004406  06E8               	decf	wreg,f,c
  7971  004408  E2FC               	bc	u11331
  7972  00440A                     
  7973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7974  00440A  C00E  F01C         	movff	stoa@s,stoa@cp
  7975  00440E  C00F  F01D         	movff	stoa@s+1,stoa@cp+1
  7976  004412                     
  7977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7978  004412  501C               	movf	stoa@cp^0,w,c
  7979  004414  101D               	iorwf	(stoa@cp+1)^0,w,c
  7980  004416  A4D8               	btfss	status,2,c
  7981  004418  EF10  F022         	goto	u11341
  7982  00441C  EF12  F022         	goto	u11340
  7983  004420                     u11341:
  7984  004420  EF16  F022         	goto	l8956
  7985  004424                     u11340:
  7986  004424                     
  7987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7988  004424  0E11               	movlw	low stoa@nuls
  7989  004426  6E1C               	movwf	stoa@cp^0,c
  7990  004428  0E00               	movlw	high stoa@nuls
  7991  00442A  6E1D               	movwf	(stoa@cp+1)^0,c
  7992  00442C                     l8956:
  7993                           
  7994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7995  00442C  C01C  F003         	movff	stoa@cp,strlen@s
  7996  004430  C01D  F004         	movff	stoa@cp+1,strlen@s+1
  7997  004434  ECB9  F02E         	call	_strlen	;wreg free
  7998  004438  C003  F020         	movff	?_strlen,stoa@l
  7999  00443C  C004  F021         	movff	?_strlen+1,stoa@l+1
  8000  004440                     
  8001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8002  004440  C057  F01E         	movff	_prec,stoa@p
  8003  004444  C058  F01F         	movff	_prec+1,stoa@p+1
  8004  004448                     
  8005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8006  004448  BE1F               	btfsc	(stoa@p+1)^0,7,c
  8007  00444A  EF29  F022         	goto	u11351
  8008  00444E  EF2B  F022         	goto	u11350
  8009  004452                     u11351:
  8010  004452  EF40  F022         	goto	l807
  8011  004456                     u11350:
  8012  004456  5020               	movf	stoa@l^0,w,c
  8013  004458  5C1E               	subwf	stoa@p^0,w,c
  8014  00445A  501F               	movf	(stoa@p+1)^0,w,c
  8015  00445C  0A80               	xorlw	128
  8016  00445E  6E10               	movwf	??_stoa^0,c
  8017  004460  5021               	movf	(stoa@l+1)^0,w,c
  8018  004462  0A80               	xorlw	128
  8019  004464  5810               	subwfb	??_stoa^0,w,c
  8020  004466  A0D8               	btfss	status,0,c
  8021  004468  EF38  F022         	goto	u11361
  8022  00446C  EF3A  F022         	goto	u11360
  8023  004470                     u11361:
  8024  004470  EF3C  F022         	goto	l805
  8025  004474                     u11360:
  8026  004474  EF40  F022         	goto	l807
  8027  004478                     l805:
  8028  004478  C01E  F020         	movff	stoa@p,stoa@l
  8029  00447C  C01F  F021         	movff	stoa@p+1,stoa@l+1
  8030  004480                     l807:
  8031                           
  8032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8033  004480  C020  F01E         	movff	stoa@l,stoa@p
  8034  004484  C021  F01F         	movff	stoa@l+1,stoa@p+1
  8035                           
  8036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8037  004488  C0EC  F01A         	movff	_width,stoa@w
  8038  00448C  C0ED  F01B         	movff	_width+1,stoa@w+1
  8039                           
  8040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8041  004490  B059               	btfsc	_flags^0,0,c
  8042  004492  EF4D  F022         	goto	u11371
  8043  004496  EF4F  F022         	goto	u11370
  8044  00449A                     u11371:
  8045  00449A  EF6C  F022         	goto	l8972
  8046  00449E                     u11370:
  8047  00449E  EF5D  F022         	goto	l8970
  8048  0044A2                     l8966:
  8049                           
  8050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8051  0044A2  0E00               	movlw	0
  8052  0044A4  6E04               	movwf	(fputc@c+1)^0,c
  8053  0044A6  0E20               	movlw	32
  8054  0044A8  6E03               	movwf	fputc@c^0,c
  8055  0044AA  C00C  F005         	movff	stoa@fp,fputc@fp
  8056  0044AE  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8057  0044B2  EC7E  F029         	call	_fputc	;wreg free
  8058  0044B6                     
  8059                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8060  0044B6  4A20               	infsnz	stoa@l^0,f,c
  8061  0044B8  2A21               	incf	(stoa@l+1)^0,f,c
  8062  0044BA                     l8970:
  8063                           
  8064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8065  0044BA  501A               	movf	stoa@w^0,w,c
  8066  0044BC  5C20               	subwf	stoa@l^0,w,c
  8067  0044BE  5021               	movf	(stoa@l+1)^0,w,c
  8068  0044C0  0A80               	xorlw	128
  8069  0044C2  6E10               	movwf	??_stoa^0,c
  8070  0044C4  501B               	movf	(stoa@w+1)^0,w,c
  8071  0044C6  0A80               	xorlw	128
  8072  0044C8  5810               	subwfb	??_stoa^0,w,c
  8073  0044CA  A0D8               	btfss	status,0,c
  8074  0044CC  EF6A  F022         	goto	u11381
  8075  0044D0  EF6C  F022         	goto	u11380
  8076  0044D4                     u11381:
  8077  0044D4  EF51  F022         	goto	l8966
  8078  0044D8                     u11380:
  8079  0044D8                     l8972:
  8080                           
  8081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8082  0044D8  0E00               	movlw	0
  8083  0044DA  6E19               	movwf	(stoa@i+1)^0,c
  8084  0044DC  0E00               	movlw	0
  8085  0044DE  6E18               	movwf	stoa@i^0,c
  8086                           
  8087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8088  0044E0  EF85  F022         	goto	l8980
  8089  0044E4                     l8974:
  8090                           
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8092  0044E4  C01C  FFD9         	movff	stoa@cp,fsr2l
  8093  0044E8  C01D  FFDA         	movff	stoa@cp+1,fsr2h
  8094  0044EC  50DF               	movf	indf2,w,c
  8095  0044EE  6E10               	movwf	??_stoa^0,c
  8096  0044F0  5010               	movf	??_stoa^0,w,c
  8097  0044F2  6E03               	movwf	fputc@c^0,c
  8098  0044F4  6A04               	clrf	(fputc@c+1)^0,c
  8099  0044F6  C00C  F005         	movff	stoa@fp,fputc@fp
  8100  0044FA  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8101  0044FE  EC7E  F029         	call	_fputc	;wreg free
  8102  004502                     
  8103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8104  004502  4A1C               	infsnz	stoa@cp^0,f,c
  8105  004504  2A1D               	incf	(stoa@cp+1)^0,f,c
  8106  004506                     
  8107                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8108  004506  4A18               	infsnz	stoa@i^0,f,c
  8109  004508  2A19               	incf	(stoa@i+1)^0,f,c
  8110  00450A                     l8980:
  8111                           
  8112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8113  00450A  501E               	movf	stoa@p^0,w,c
  8114  00450C  5C18               	subwf	stoa@i^0,w,c
  8115  00450E  5019               	movf	(stoa@i+1)^0,w,c
  8116  004510  0A80               	xorlw	128
  8117  004512  6E10               	movwf	??_stoa^0,c
  8118  004514  501F               	movf	(stoa@p+1)^0,w,c
  8119  004516  0A80               	xorlw	128
  8120  004518  5810               	subwfb	??_stoa^0,w,c
  8121  00451A  A0D8               	btfss	status,0,c
  8122  00451C  EF92  F022         	goto	u11391
  8123  004520  EF94  F022         	goto	u11390
  8124  004524                     u11391:
  8125  004524  EF72  F022         	goto	l8974
  8126  004528                     u11390:
  8127  004528                     
  8128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8129  004528  A059               	btfss	_flags^0,0,c
  8130  00452A  EF99  F022         	goto	u11401
  8131  00452E  EF9B  F022         	goto	u11400
  8132  004532                     u11401:
  8133  004532  EFB8  F022         	goto	l817
  8134  004536                     u11400:
  8135  004536  EFA9  F022         	goto	l8988
  8136  00453A                     l8984:
  8137                           
  8138                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8139  00453A  0E00               	movlw	0
  8140  00453C  6E04               	movwf	(fputc@c+1)^0,c
  8141  00453E  0E20               	movlw	32
  8142  004540  6E03               	movwf	fputc@c^0,c
  8143  004542  C00C  F005         	movff	stoa@fp,fputc@fp
  8144  004546  C00D  F006         	movff	stoa@fp+1,fputc@fp+1
  8145  00454A  EC7E  F029         	call	_fputc	;wreg free
  8146  00454E                     
  8147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8148  00454E  4A20               	infsnz	stoa@l^0,f,c
  8149  004550  2A21               	incf	(stoa@l+1)^0,f,c
  8150  004552                     l8988:
  8151                           
  8152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8153  004552  501A               	movf	stoa@w^0,w,c
  8154  004554  5C20               	subwf	stoa@l^0,w,c
  8155  004556  5021               	movf	(stoa@l+1)^0,w,c
  8156  004558  0A80               	xorlw	128
  8157  00455A  6E10               	movwf	??_stoa^0,c
  8158  00455C  501B               	movf	(stoa@w+1)^0,w,c
  8159  00455E  0A80               	xorlw	128
  8160  004560  5810               	subwfb	??_stoa^0,w,c
  8161  004562  A0D8               	btfss	status,0,c
  8162  004564  EFB6  F022         	goto	u11411
  8163  004568  EFB8  F022         	goto	u11410
  8164  00456C                     u11411:
  8165  00456C  EF9D  F022         	goto	l8984
  8166  004570                     u11410:
  8167  004570                     l817:
  8168                           
  8169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8170  004570  C020  F00C         	movff	stoa@l,?_stoa
  8171  004574  C021  F00D         	movff	stoa@l+1,?_stoa+1
  8172  004578  0012               	return		;funcret
  8173  00457A                     __end_of_stoa:
  8174                           	opt callstack 0
  8175                           
  8176 ;; *************** function _otoa *****************
  8177 ;; Defined at:
  8178 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  8181 ;;		 -> vsnprintf@f(6), 
  8182 ;;  d               8   31[COMRAM] unsigned long long 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  n               8   53[COMRAM] unsigned long long 
  8185 ;;  i               2   61[COMRAM] int 
  8186 ;;  w               2   51[COMRAM] int 
  8187 ;;  t               2   49[COMRAM] int 
  8188 ;;  p               2   47[COMRAM] int 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  2   29[COMRAM] int 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8198 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8199 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8200 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8201 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8202 ;;Total ram usage:       34 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    8
  8205 ;; This function calls:
  8206 ;;		_pad
  8207 ;; This function is called by:
  8208 ;;		_vfpfcnvrt
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text14
  8213  003D38                     __ptext14:
  8214                           	opt callstack 0
  8215  003D38                     _otoa:
  8216                           	opt callstack 18
  8217  003D38                     
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8219  003D38  BE58               	btfsc	(_prec+1)^0,7,c
  8220  003D3A  EFA1  F01E         	goto	u11231
  8221  003D3E  EFA3  F01E         	goto	u11230
  8222  003D42                     u11231:
  8223  003D42  EFA4  F01E         	goto	l8904
  8224  003D46                     u11230:
  8225  003D46                     
  8226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8227  003D46  9259               	bcf	_flags^0,1,c
  8228  003D48                     l8904:
  8229                           
  8230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8231  003D48  BE58               	btfsc	(_prec+1)^0,7,c
  8232  003D4A  EFB1  F01E         	goto	u11240
  8233  003D4E  5058               	movf	(_prec+1)^0,w,c
  8234  003D50  E106               	bnz	u11241
  8235  003D52  0457               	decf	_prec^0,w,c
  8236  003D54  B0D8               	btfsc	status,0,c
  8237  003D56  EFAF  F01E         	goto	u11241
  8238  003D5A  EFB1  F01E         	goto	u11240
  8239  003D5E                     u11241:
  8240  003D5E  EFB7  F01E         	goto	l787
  8241  003D62                     u11240:
  8242  003D62  0E00               	movlw	0
  8243  003D64  6E31               	movwf	(otoa@p+1)^0,c
  8244  003D66  0E01               	movlw	1
  8245  003D68  6E30               	movwf	otoa@p^0,c
  8246  003D6A  EFBB  F01E         	goto	l789
  8247  003D6E                     l787:
  8248  003D6E  C057  F030         	movff	_prec,otoa@p
  8249  003D72  C058  F031         	movff	_prec+1,otoa@p+1
  8250  003D76                     l789:
  8251                           
  8252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8253  003D76  C0EC  F034         	movff	_width,otoa@w
  8254  003D7A  C0ED  F035         	movff	_width+1,otoa@w+1
  8255                           
  8256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8257  003D7E  C020  F036         	movff	otoa@d,otoa@n
  8258  003D82  C021  F037         	movff	otoa@d+1,otoa@n+1
  8259  003D86  C022  F038         	movff	otoa@d+2,otoa@n+2
  8260  003D8A  C023  F039         	movff	otoa@d+3,otoa@n+3
  8261  003D8E  C024  F03A         	movff	otoa@d+4,otoa@n+4
  8262  003D92  C025  F03B         	movff	otoa@d+5,otoa@n+5
  8263  003D96  C026  F03C         	movff	otoa@d+6,otoa@n+6
  8264  003D9A  C027  F03D         	movff	otoa@d+7,otoa@n+7
  8265  003D9E                     
  8266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8267  003D9E  0E00               	movlw	0
  8268  003DA0  6E3F               	movwf	(otoa@i+1)^0,c
  8269  003DA2  0E4F               	movlw	79
  8270  003DA4  6E3E               	movwf	otoa@i^0,c
  8271  003DA6                     
  8272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8273  003DA6  0E00               	movlw	0
  8274  003DA8  0101               	movlb	1	; () banked
  8275  003DAA  6FB3               	movwf	(_dbuf+79)& (0+255),b
  8276  003DAC                     
  8277                           ; BSR set to: 1
  8278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8279  003DAC  0E00               	movlw	0
  8280  003DAE  6E33               	movwf	(otoa@t+1)^0,c
  8281  003DB0  0E00               	movlw	0
  8282  003DB2  6E32               	movwf	otoa@t^0,c
  8283                           
  8284                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8285  003DB4  EF21  F01F         	goto	l8926
  8286  003DB8                     l8914:
  8287                           
  8288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8289  003DB8  063E               	decf	otoa@i^0,f,c
  8290  003DBA  A0D8               	btfss	status,0,c
  8291  003DBC  063F               	decf	(otoa@i+1)^0,f,c
  8292  003DBE                     
  8293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8294  003DBE  0E07               	movlw	7
  8295  003DC0  1436               	andwf	otoa@n^0,w,c
  8296  003DC2  6E32               	movwf	otoa@t^0,c
  8297  003DC4  6A33               	clrf	(otoa@t+1)^0,c
  8298  003DC6                     
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8300  003DC6  0E64               	movlw	low _dbuf
  8301  003DC8  243E               	addwf	otoa@i^0,w,c
  8302  003DCA  6ED9               	movwf	fsr2l,c
  8303  003DCC  0E01               	movlw	high _dbuf
  8304  003DCE  203F               	addwfc	(otoa@i+1)^0,w,c
  8305  003DD0  6EDA               	movwf	fsr2h,c
  8306  003DD2  5032               	movf	otoa@t^0,w,c
  8307  003DD4  0F30               	addlw	48
  8308  003DD6  6EDF               	movwf	indf2,c
  8309  003DD8                     
  8310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8311  003DD8  0630               	decf	otoa@p^0,f,c
  8312  003DDA  A0D8               	btfss	status,0,c
  8313  003DDC  0631               	decf	(otoa@p+1)^0,f,c
  8314  003DDE                     
  8315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8316  003DDE  0634               	decf	otoa@w^0,f,c
  8317  003DE0  A0D8               	btfss	status,0,c
  8318  003DE2  0635               	decf	(otoa@w+1)^0,f,c
  8319  003DE4                     
  8320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8321  003DE4  C036  F028         	movff	otoa@n,??_otoa
  8322  003DE8  C037  F029         	movff	otoa@n+1,??_otoa+1
  8323  003DEC  C038  F02A         	movff	otoa@n+2,??_otoa+2
  8324  003DF0  C039  F02B         	movff	otoa@n+3,??_otoa+3
  8325  003DF4  C03A  F02C         	movff	otoa@n+4,??_otoa+4
  8326  003DF8  C03B  F02D         	movff	otoa@n+5,??_otoa+5
  8327  003DFC  C03C  F02E         	movff	otoa@n+6,??_otoa+6
  8328  003E00  C03D  F02F         	movff	otoa@n+7,??_otoa+7
  8329  003E04  0E04               	movlw	4
  8330  003E06  EF0E  F01F         	goto	u11250
  8331  003E0A                     u11255:
  8332  003E0A  90D8               	bcf	status,0,c
  8333  003E0C  322F               	rrcf	(??_otoa+7)^0,f,c
  8334  003E0E  322E               	rrcf	(??_otoa+6)^0,f,c
  8335  003E10  322D               	rrcf	(??_otoa+5)^0,f,c
  8336  003E12  322C               	rrcf	(??_otoa+4)^0,f,c
  8337  003E14  322B               	rrcf	(??_otoa+3)^0,f,c
  8338  003E16  322A               	rrcf	(??_otoa+2)^0,f,c
  8339  003E18  3229               	rrcf	(??_otoa+1)^0,f,c
  8340  003E1A  3228               	rrcf	??_otoa^0,f,c
  8341  003E1C                     u11250:
  8342  003E1C  2EE8               	decfsz	wreg,f,c
  8343  003E1E  EF05  F01F         	goto	u11255
  8344  003E22  C028  F036         	movff	??_otoa,otoa@n
  8345  003E26  C029  F037         	movff	??_otoa+1,otoa@n+1
  8346  003E2A  C02A  F038         	movff	??_otoa+2,otoa@n+2
  8347  003E2E  C02B  F039         	movff	??_otoa+3,otoa@n+3
  8348  003E32  C02C  F03A         	movff	??_otoa+4,otoa@n+4
  8349  003E36  C02D  F03B         	movff	??_otoa+5,otoa@n+5
  8350  003E3A  C02E  F03C         	movff	??_otoa+6,otoa@n+6
  8351  003E3E  C02F  F03D         	movff	??_otoa+7,otoa@n+7
  8352  003E42                     l8926:
  8353                           
  8354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8355  003E42  BE3F               	btfsc	(otoa@i+1)^0,7,c
  8356  003E44  EF2C  F01F         	goto	u11261
  8357  003E48  503F               	movf	(otoa@i+1)^0,w,c
  8358  003E4A  E108               	bnz	u11260
  8359  003E4C  043E               	decf	otoa@i^0,w,c
  8360  003E4E  A0D8               	btfss	status,0,c
  8361  003E50  EF2C  F01F         	goto	u11261
  8362  003E54  EF2E  F01F         	goto	u11260
  8363  003E58                     u11261:
  8364  003E58  EF5E  F01F         	goto	l796
  8365  003E5C                     u11260:
  8366  003E5C  5036               	movf	otoa@n^0,w,c
  8367  003E5E  1037               	iorwf	(otoa@n+1)^0,w,c
  8368  003E60  1038               	iorwf	(otoa@n+2)^0,w,c
  8369  003E62  1039               	iorwf	(otoa@n+3)^0,w,c
  8370  003E64  103A               	iorwf	(otoa@n+4)^0,w,c
  8371  003E66  103B               	iorwf	(otoa@n+5)^0,w,c
  8372  003E68  103C               	iorwf	(otoa@n+6)^0,w,c
  8373  003E6A  103D               	iorwf	(otoa@n+7)^0,w,c
  8374  003E6C  A4D8               	btfss	status,2,c
  8375  003E6E  EF3B  F01F         	goto	u11271
  8376  003E72  EF3D  F01F         	goto	u11270
  8377  003E76                     u11271:
  8378  003E76  EFDC  F01E         	goto	l8914
  8379  003E7A                     u11270:
  8380  003E7A  BE31               	btfsc	(otoa@p+1)^0,7,c
  8381  003E7C  EF4A  F01F         	goto	u11280
  8382  003E80  5031               	movf	(otoa@p+1)^0,w,c
  8383  003E82  E106               	bnz	u11281
  8384  003E84  0430               	decf	otoa@p^0,w,c
  8385  003E86  B0D8               	btfsc	status,0,c
  8386  003E88  EF48  F01F         	goto	u11281
  8387  003E8C  EF4A  F01F         	goto	u11280
  8388  003E90                     u11281:
  8389  003E90  EFDC  F01E         	goto	l8914
  8390  003E94                     u11280:
  8391  003E94  BE35               	btfsc	(otoa@w+1)^0,7,c
  8392  003E96  EF55  F01F         	goto	u11291
  8393  003E9A  5035               	movf	(otoa@w+1)^0,w,c
  8394  003E9C  E108               	bnz	u11290
  8395  003E9E  0434               	decf	otoa@w^0,w,c
  8396  003EA0  A0D8               	btfss	status,0,c
  8397  003EA2  EF55  F01F         	goto	u11291
  8398  003EA6  EF57  F01F         	goto	u11290
  8399  003EAA                     u11291:
  8400  003EAA  EF5E  F01F         	goto	l796
  8401  003EAE                     u11290:
  8402  003EAE  B259               	btfsc	_flags^0,1,c
  8403  003EB0  EF5C  F01F         	goto	u11301
  8404  003EB4  EF5E  F01F         	goto	u11300
  8405  003EB8                     u11301:
  8406  003EB8  EFDC  F01E         	goto	l8914
  8407  003EBC                     u11300:
  8408  003EBC                     l796:
  8409                           
  8410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8411  003EBC  A859               	btfss	_flags^0,4,c
  8412  003EBE  EF63  F01F         	goto	u11311
  8413  003EC2  EF65  F01F         	goto	u11310
  8414  003EC6                     u11311:
  8415  003EC6  EF7C  F01F         	goto	l8944
  8416  003ECA                     u11310:
  8417  003ECA  5032               	movf	otoa@t^0,w,c
  8418  003ECC  1033               	iorwf	(otoa@t+1)^0,w,c
  8419  003ECE  B4D8               	btfsc	status,2,c
  8420  003ED0  EF6C  F01F         	goto	u11321
  8421  003ED4  EF6E  F01F         	goto	u11320
  8422  003ED8                     u11321:
  8423  003ED8  EF7C  F01F         	goto	l8944
  8424  003EDC                     u11320:
  8425  003EDC                     
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8427  003EDC  063E               	decf	otoa@i^0,f,c
  8428  003EDE  A0D8               	btfss	status,0,c
  8429  003EE0  063F               	decf	(otoa@i+1)^0,f,c
  8430  003EE2                     
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8432  003EE2  0E64               	movlw	low _dbuf
  8433  003EE4  243E               	addwf	otoa@i^0,w,c
  8434  003EE6  6ED9               	movwf	fsr2l,c
  8435  003EE8  0E01               	movlw	high _dbuf
  8436  003EEA  203F               	addwfc	(otoa@i+1)^0,w,c
  8437  003EEC  6EDA               	movwf	fsr2h,c
  8438  003EEE  0E30               	movlw	48
  8439  003EF0  6EDF               	movwf	indf2,c
  8440  003EF2                     
  8441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8442  003EF2  0634               	decf	otoa@w^0,f,c
  8443  003EF4  A0D8               	btfss	status,0,c
  8444  003EF6  0635               	decf	(otoa@w+1)^0,f,c
  8445  003EF8                     l8944:
  8446                           
  8447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8448  003EF8  C01E  F013         	movff	otoa@fp,pad@fp
  8449  003EFC  C01F  F014         	movff	otoa@fp+1,pad@fp+1
  8450  003F00  0E64               	movlw	low _dbuf
  8451  003F02  243E               	addwf	otoa@i^0,w,c
  8452  003F04  6E15               	movwf	pad@buf^0,c
  8453  003F06  0E01               	movlw	high _dbuf
  8454  003F08  203F               	addwfc	(otoa@i+1)^0,w,c
  8455  003F0A  6E16               	movwf	(pad@buf+1)^0,c
  8456  003F0C  C034  F017         	movff	otoa@w,pad@p
  8457  003F10  C035  F018         	movff	otoa@w+1,pad@p+1
  8458  003F14  EC45  F02A         	call	_pad	;wreg free
  8459  003F18  C013  F01E         	movff	?_pad,?_otoa
  8460  003F1C  C014  F01F         	movff	?_pad+1,?_otoa+1
  8461  003F20  0012               	return		;funcret
  8462  003F22                     __end_of_otoa:
  8463                           	opt callstack 0
  8464                           
  8465 ;; *************** function _efgtoa *****************
  8466 ;; Defined at:
  8467 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  fp              2   53[COMRAM] PTR struct _IO_FILE
  8470 ;;		 -> vsnprintf@f(6), 
  8471 ;;  f               4   55[COMRAM] PTR struct _IO_FILE
  8472 ;;  c               1   59[COMRAM] unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  u               4   52[BANK0 ] unsigned char 
  8475 ;;  g               4   44[BANK0 ] unsigned char 
  8476 ;;  l               4   38[BANK0 ] unsigned char 
  8477 ;;  h               4   34[BANK0 ] unsigned char 
  8478 ;;  ou              4    0[BANK0 ] unsigned char 
  8479 ;;  n               2   50[BANK0 ] int 
  8480 ;;  e               2   48[BANK0 ] int 
  8481 ;;  i               2   42[BANK0 ] int 
  8482 ;;  w               2   31[BANK0 ] int 
  8483 ;;  p               2   28[BANK0 ] int 
  8484 ;;  sign            2   26[BANK0 ] int 
  8485 ;;  d               2   24[BANK0 ] int 
  8486 ;;  ne              2   22[BANK0 ] int 
  8487 ;;  m               2   20[BANK0 ] int 
  8488 ;;  pp              2   18[BANK0 ] int 
  8489 ;;  t               2   16[BANK0 ] int 
  8490 ;;  mode            1   33[BANK0 ] unsigned char 
  8491 ;;  nmode           1   30[BANK0 ] unsigned char 
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  2   53[COMRAM] int 
  8494 ;; Registers used:
  8495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8501 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8502 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;Total ram usage:       68 bytes
  8506 ;; Hardware stack levels used:    1
  8507 ;; Hardware stack levels required when called:    8
  8508 ;; This function calls:
  8509 ;;		___awdiv
  8510 ;;		___awmod
  8511 ;;		___fladd
  8512 ;;		___fldiv
  8513 ;;		___fleq
  8514 ;;		___flge
  8515 ;;		___flmul
  8516 ;;		___flneg
  8517 ;;		___flsub
  8518 ;;		___fltol
  8519 ;;		___fpclassifyf
  8520 ;;		_floorf
  8521 ;;		_isupper
  8522 ;;		_pad
  8523 ;;		_strcpy
  8524 ;;		_tolower
  8525 ;; This function is called by:
  8526 ;;		_vfpfcnvrt
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text15
  8531  0015A4                     __ptext15:
  8532                           	opt callstack 0
  8533  0015A4                     _efgtoa:
  8534                           	opt callstack 18
  8535  0015A4                     
  8536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8537  0015A4  0E00               	movlw	0
  8538  0015A6  0100               	movlb	0	; () banked
  8539  0015A8  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8540  0015AA  0E00               	movlw	0
  8541  0015AC  6F7A               	movwf	efgtoa@sign& (0+255),b
  8542  0015AE                     
  8543                           ; BSR set to: 0
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8545  0015AE  C038  F08C         	movff	efgtoa@f,efgtoa@g
  8546  0015B2  C039  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  8547  0015B6  C03A  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  8548  0015BA  C03B  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  8549  0015BE                     
  8550                           ; BSR set to: 0
  8551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8552  0015BE  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8553  0015C0  EFE6  F00A         	goto	u10710
  8554  0015C4  EFE4  F00A         	goto	u10711
  8555  0015C8                     u10711:
  8556  0015C8  EFFC  F00A         	goto	l8612
  8557  0015CC                     u10710:
  8558  0015CC                     
  8559                           ; BSR set to: 0
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8561  0015CC  0E00               	movlw	0
  8562  0015CE  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  8563  0015D0  0E01               	movlw	1
  8564  0015D2  6F7A               	movwf	efgtoa@sign& (0+255),b
  8565  0015D4                     
  8566                           ; BSR set to: 0
  8567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8568  0015D4  C08C  F003         	movff	efgtoa@g,___flneg@f1
  8569  0015D8  C08D  F004         	movff	efgtoa@g+1,___flneg@f1+1
  8570  0015DC  C08E  F005         	movff	efgtoa@g+2,___flneg@f1+2
  8571  0015E0  C08F  F006         	movff	efgtoa@g+3,___flneg@f1+3
  8572  0015E4  EC81  F02E         	call	___flneg	;wreg free
  8573  0015E8  C003  F08C         	movff	?___flneg,efgtoa@g
  8574  0015EC  C004  F08D         	movff	?___flneg+1,efgtoa@g+1
  8575  0015F0  C005  F08E         	movff	?___flneg+2,efgtoa@g+2
  8576  0015F4  C006  F08F         	movff	?___flneg+3,efgtoa@g+3
  8577  0015F8                     l8612:
  8578                           
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8580  0015F8  0E00               	movlw	0
  8581  0015FA  0100               	movlb	0	; () banked
  8582  0015FC  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  8583  0015FE  0E00               	movlw	0
  8584  001600  6F92               	movwf	efgtoa@n& (0+255),b
  8585  001602                     
  8586                           ; BSR set to: 0
  8587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8588  001602  C0EC  F07F         	movff	_width,efgtoa@w
  8589  001606  C0ED  F080         	movff	_width+1,efgtoa@w+1
  8590  00160A                     
  8591                           ; BSR set to: 0
  8592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8593  00160A  517A               	movf	efgtoa@sign& (0+255),w,b
  8594  00160C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8595  00160E  A4D8               	btfss	status,2,c
  8596  001610  EF0C  F00B         	goto	u10721
  8597  001614  EF0E  F00B         	goto	u10720
  8598  001618                     u10721:
  8599  001618  EF15  F00B         	goto	l8620
  8600  00161C                     u10720:
  8601  00161C                     
  8602                           ; BSR set to: 0
  8603  00161C  A459               	btfss	_flags^0,2,c
  8604  00161E  EF13  F00B         	goto	u10731
  8605  001622  EF15  F00B         	goto	u10730
  8606  001626                     u10731:
  8607  001626  EF2F  F00B         	goto	l8632
  8608  00162A                     u10730:
  8609  00162A                     l8620:
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8613  00162A  517A               	movf	efgtoa@sign& (0+255),w,b
  8614  00162C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8615  00162E  A4D8               	btfss	status,2,c
  8616  001630  EF1C  F00B         	goto	u10741
  8617  001634  EF1E  F00B         	goto	u10740
  8618  001638                     u10741:
  8619  001638  EF24  F00B         	goto	l8624
  8620  00163C                     u10740:
  8621  00163C                     
  8622                           ; BSR set to: 0
  8623  00163C  0E00               	movlw	0
  8624  00163E  6F65               	movwf	(_efgtoa$1717+1)& (0+255),b
  8625  001640  0E2B               	movlw	43
  8626  001642  6F64               	movwf	_efgtoa$1717& (0+255),b
  8627  001644  EF28  F00B         	goto	l8626
  8628  001648                     l8624:
  8629                           
  8630                           ; BSR set to: 0
  8631  001648  0E00               	movlw	0
  8632  00164A  6F65               	movwf	(_efgtoa$1717+1)& (0+255),b
  8633  00164C  0E2D               	movlw	45
  8634  00164E  6F64               	movwf	_efgtoa$1717& (0+255),b
  8635  001650                     l8626:
  8636                           
  8637                           ; BSR set to: 0
  8638  001650  C064  F164         	movff	_efgtoa$1717,_dbuf
  8639  001654                     
  8640                           ; BSR set to: 0
  8641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8642  001654  4B92               	infsnz	efgtoa@n& (0+255),f,b
  8643  001656  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  8644  001658                     
  8645                           ; BSR set to: 0
  8646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8647  001658  077F               	decf	efgtoa@w& (0+255),f,b
  8648  00165A  A0D8               	btfss	status,0,c
  8649  00165C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  8650  00165E                     l8632:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8654  00165E  C08C  F003         	movff	efgtoa@g,___fpclassifyf@x
  8655  001662  C08D  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8656  001666  C08E  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8657  00166A  C08F  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8658  00166E  EC1F  F028         	call	___fpclassifyf	;wreg free
  8659  001672  0403               	decf	?___fpclassifyf^0,w,c
  8660  001674  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  8661  001676  A4D8               	btfss	status,2,c
  8662  001678  EF40  F00B         	goto	u10751
  8663  00167C  EF42  F00B         	goto	u10750
  8664  001680                     u10751:
  8665  001680  EF99  F00B         	goto	l8650
  8666  001684                     u10750:
  8667  001684  0EBF               	movlw	191
  8668  001686  6E3D               	movwf	??_efgtoa^0,c
  8669  001688  0EFF               	movlw	255
  8670  00168A  6E3E               	movwf	(??_efgtoa+1)^0,c
  8671  00168C  503C               	movf	efgtoa@c^0,w,c
  8672  00168E  6E3F               	movwf	(??_efgtoa+2)^0,c
  8673  001690  6A40               	clrf	(??_efgtoa+3)^0,c
  8674  001692  503D               	movf	??_efgtoa^0,w,c
  8675  001694  263F               	addwf	(??_efgtoa+2)^0,f,c
  8676  001696  503E               	movf	(??_efgtoa+1)^0,w,c
  8677  001698  2240               	addwfc	(??_efgtoa+3)^0,f,c
  8678  00169A  5040               	movf	(??_efgtoa+3)^0,w,c
  8679  00169C  E10A               	bnz	u10760
  8680  00169E  0E1A               	movlw	26
  8681  0016A0  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  8682  0016A2  A0D8               	btfss	status,0,c
  8683  0016A4  EF56  F00B         	goto	u10761
  8684  0016A8  EF59  F00B         	goto	u10760
  8685  0016AC                     u10761:
  8686  0016AC  0E01               	movlw	1
  8687  0016AE  EF5A  F00B         	goto	u10770
  8688  0016B2                     u10760:
  8689  0016B2  0E00               	movlw	0
  8690  0016B4                     u10770:
  8691  0016B4  0100               	movlb	0	; () banked
  8692  0016B6  6F66               	movwf	_efgtoa$1718& (0+255),b
  8693  0016B8  6B67               	clrf	(_efgtoa$1718+1)& (0+255),b
  8694  0016BA                     
  8695                           ; BSR set to: 0
  8696  0016BA  5166               	movf	_efgtoa$1718& (0+255),w,b
  8697  0016BC  1167               	iorwf	(_efgtoa$1718+1)& (0+255),w,b
  8698  0016BE  B4D8               	btfsc	status,2,c
  8699  0016C0  EF64  F00B         	goto	u10781
  8700  0016C4  EF66  F00B         	goto	u10780
  8701  0016C8                     u10781:
  8702  0016C8  EF74  F00B         	goto	l8642
  8703  0016CC                     u10780:
  8704  0016CC                     
  8705                           ; BSR set to: 0
  8706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8707  0016CC  0E64               	movlw	low _dbuf
  8708  0016CE  2592               	addwf	efgtoa@n& (0+255),w,b
  8709  0016D0  6E03               	movwf	strcpy@dest^0,c
  8710  0016D2  0E01               	movlw	high _dbuf
  8711  0016D4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8712  0016D6  6E04               	movwf	(strcpy@dest+1)^0,c
  8713  0016D8  0EBA               	movlw	low STR_6
  8714  0016DA  6E05               	movwf	strcpy@src^0,c
  8715  0016DC  0EFF               	movlw	high STR_6
  8716  0016DE  6E06               	movwf	(strcpy@src+1)^0,c
  8717  0016E0  ECB4  F02C         	call	_strcpy	;wreg free
  8718                           
  8719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8720  0016E4  EF80  F00B         	goto	l8644
  8721  0016E8                     l8642:
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8725  0016E8  0E64               	movlw	low _dbuf
  8726  0016EA  2592               	addwf	efgtoa@n& (0+255),w,b
  8727  0016EC  6E03               	movwf	strcpy@dest^0,c
  8728  0016EE  0E01               	movlw	high _dbuf
  8729  0016F0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8730  0016F2  6E04               	movwf	(strcpy@dest+1)^0,c
  8731  0016F4  0ECA               	movlw	low STR_7
  8732  0016F6  6E05               	movwf	strcpy@src^0,c
  8733  0016F8  0EFF               	movlw	high STR_7
  8734  0016FA  6E06               	movwf	(strcpy@src+1)^0,c
  8735  0016FC  ECB4  F02C         	call	_strcpy	;wreg free
  8736  001700                     l8644:
  8737                           
  8738                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8739  001700  0100               	movlb	0	; () banked
  8740  001702  0EFD               	movlw	253
  8741  001704  277F               	addwf	efgtoa@w& (0+255),f,b
  8742  001706  0EFF               	movlw	255
  8743  001708  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8744  00170A                     l8646:
  8745                           
  8746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8747  00170A  C036  F013         	movff	efgtoa@fp,pad@fp
  8748  00170E  C037  F014         	movff	efgtoa@fp+1,pad@fp+1
  8749  001712  0E64               	movlw	low _dbuf
  8750  001714  6E15               	movwf	pad@buf^0,c
  8751  001716  0E01               	movlw	high _dbuf
  8752  001718  6E16               	movwf	(pad@buf+1)^0,c
  8753  00171A  C07F  F017         	movff	efgtoa@w,pad@p
  8754  00171E  C080  F018         	movff	efgtoa@w+1,pad@p+1
  8755  001722  EC45  F02A         	call	_pad	;wreg free
  8756  001726  C013  F036         	movff	?_pad,?_efgtoa
  8757  00172A  C014  F037         	movff	?_pad+1,?_efgtoa+1
  8758  00172E  EFAA  F010         	goto	l709
  8759  001732                     l8650:
  8760                           
  8761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8762  001732  C08C  F003         	movff	efgtoa@g,___fpclassifyf@x
  8763  001736  C08D  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8764  00173A  C08E  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8765  00173E  C08F  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8766  001742  EC1F  F028         	call	___fpclassifyf	;wreg free
  8767  001746  5003               	movf	?___fpclassifyf^0,w,c
  8768  001748  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  8769  00174A  A4D8               	btfss	status,2,c
  8770  00174C  EFAA  F00B         	goto	u10791
  8771  001750  EFAC  F00B         	goto	u10790
  8772  001754                     u10791:
  8773  001754  EFEC  F00B         	goto	l8668
  8774  001758                     u10790:
  8775  001758  0EBF               	movlw	191
  8776  00175A  6E3D               	movwf	??_efgtoa^0,c
  8777  00175C  0EFF               	movlw	255
  8778  00175E  6E3E               	movwf	(??_efgtoa+1)^0,c
  8779  001760  503C               	movf	efgtoa@c^0,w,c
  8780  001762  6E3F               	movwf	(??_efgtoa+2)^0,c
  8781  001764  6A40               	clrf	(??_efgtoa+3)^0,c
  8782  001766  503D               	movf	??_efgtoa^0,w,c
  8783  001768  263F               	addwf	(??_efgtoa+2)^0,f,c
  8784  00176A  503E               	movf	(??_efgtoa+1)^0,w,c
  8785  00176C  2240               	addwfc	(??_efgtoa+3)^0,f,c
  8786  00176E  5040               	movf	(??_efgtoa+3)^0,w,c
  8787  001770  E10A               	bnz	u10800
  8788  001772  0E1A               	movlw	26
  8789  001774  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  8790  001776  A0D8               	btfss	status,0,c
  8791  001778  EFC0  F00B         	goto	u10801
  8792  00177C  EFC3  F00B         	goto	u10800
  8793  001780                     u10801:
  8794  001780  0E01               	movlw	1
  8795  001782  EFC4  F00B         	goto	u10810
  8796  001786                     u10800:
  8797  001786  0E00               	movlw	0
  8798  001788                     u10810:
  8799  001788  0100               	movlb	0	; () banked
  8800  00178A  6F68               	movwf	_efgtoa$1722& (0+255),b
  8801  00178C  6B69               	clrf	(_efgtoa$1722+1)& (0+255),b
  8802  00178E                     
  8803                           ; BSR set to: 0
  8804  00178E  5168               	movf	_efgtoa$1722& (0+255),w,b
  8805  001790  1169               	iorwf	(_efgtoa$1722+1)& (0+255),w,b
  8806  001792  B4D8               	btfsc	status,2,c
  8807  001794  EFCE  F00B         	goto	u10821
  8808  001798  EFD0  F00B         	goto	u10820
  8809  00179C                     u10821:
  8810  00179C  EFDE  F00B         	goto	l8660
  8811  0017A0                     u10820:
  8812  0017A0                     
  8813                           ; BSR set to: 0
  8814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8815  0017A0  0E64               	movlw	low _dbuf
  8816  0017A2  2592               	addwf	efgtoa@n& (0+255),w,b
  8817  0017A4  6E03               	movwf	strcpy@dest^0,c
  8818  0017A6  0E01               	movlw	high _dbuf
  8819  0017A8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8820  0017AA  6E04               	movwf	(strcpy@dest+1)^0,c
  8821  0017AC  0EBE               	movlw	low STR_10
  8822  0017AE  6E05               	movwf	strcpy@src^0,c
  8823  0017B0  0EFF               	movlw	high STR_10
  8824  0017B2  6E06               	movwf	(strcpy@src+1)^0,c
  8825  0017B4  ECB4  F02C         	call	_strcpy	;wreg free
  8826                           
  8827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8828  0017B8  EF80  F00B         	goto	l8644
  8829  0017BC                     l8660:
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8833  0017BC  0E64               	movlw	low _dbuf
  8834  0017BE  2592               	addwf	efgtoa@n& (0+255),w,b
  8835  0017C0  6E03               	movwf	strcpy@dest^0,c
  8836  0017C2  0E01               	movlw	high _dbuf
  8837  0017C4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8838  0017C6  6E04               	movwf	(strcpy@dest+1)^0,c
  8839  0017C8  0ED2               	movlw	low STR_11
  8840  0017CA  6E05               	movwf	strcpy@src^0,c
  8841  0017CC  0EFF               	movlw	high STR_11
  8842  0017CE  6E06               	movwf	(strcpy@src+1)^0,c
  8843  0017D0  ECB4  F02C         	call	_strcpy	;wreg free
  8844  0017D4  EF80  F00B         	goto	l8644
  8845  0017D8                     l8668:
  8846                           
  8847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8848  0017D8  0E00               	movlw	0
  8849  0017DA  0100               	movlb	0	; () banked
  8850  0017DC  6F94               	movwf	efgtoa@u& (0+255),b
  8851  0017DE  0E00               	movlw	0
  8852  0017E0  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  8853  0017E2  0E80               	movlw	128
  8854  0017E4  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  8855  0017E6  0E3F               	movlw	63
  8856  0017E8  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  8857                           
  8858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8859  0017EA  0E00               	movlw	0
  8860  0017EC  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  8861  0017EE  0E00               	movlw	0
  8862  0017F0  6F90               	movwf	efgtoa@e& (0+255),b
  8863  0017F2                     
  8864                           ; BSR set to: 0
  8865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8866  0017F2  C08C  F003         	movff	efgtoa@g,___fleq@ff1
  8867  0017F6  C08D  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  8868  0017FA  C08E  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  8869  0017FE  C08F  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  8870  001802  0E00               	movlw	0
  8871  001804  6E07               	movwf	___fleq@ff2^0,c
  8872  001806  0E00               	movlw	0
  8873  001808  6E08               	movwf	(___fleq@ff2+1)^0,c
  8874  00180A  0E00               	movlw	0
  8875  00180C  6E09               	movwf	(___fleq@ff2+2)^0,c
  8876  00180E  0E00               	movlw	0
  8877  001810  6E0A               	movwf	(___fleq@ff2+3)^0,c
  8878  001812  EC56  F02B         	call	___fleq	;wreg free
  8879  001816  B0D8               	btfsc	status,0,c
  8880  001818  EF10  F00C         	goto	u10831
  8881  00181C  EF12  F00C         	goto	u10830
  8882  001820                     u10831:
  8883  001820  EF95  F00C         	goto	l8686
  8884  001824                     u10830:
  8885  001824  EF31  F00C         	goto	l8678
  8886  001828                     l8674:
  8887                           
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8889  001828  C094  F011         	movff	efgtoa@u,___flmul@b
  8890  00182C  C095  F012         	movff	efgtoa@u+1,___flmul@b+1
  8891  001830  C096  F013         	movff	efgtoa@u+2,___flmul@b+2
  8892  001834  C097  F014         	movff	efgtoa@u+3,___flmul@b+3
  8893  001838  0E00               	movlw	0
  8894  00183A  6E15               	movwf	___flmul@a^0,c
  8895  00183C  0E00               	movlw	0
  8896  00183E  6E16               	movwf	(___flmul@a+1)^0,c
  8897  001840  0E20               	movlw	32
  8898  001842  6E17               	movwf	(___flmul@a+2)^0,c
  8899  001844  0E41               	movlw	65
  8900  001846  6E18               	movwf	(___flmul@a+3)^0,c
  8901  001848  EC0B  F013         	call	___flmul	;wreg free
  8902  00184C  C011  F094         	movff	?___flmul,efgtoa@u
  8903  001850  C012  F095         	movff	?___flmul+1,efgtoa@u+1
  8904  001854  C013  F096         	movff	?___flmul+2,efgtoa@u+2
  8905  001858  C014  F097         	movff	?___flmul+3,efgtoa@u+3
  8906  00185C                     
  8907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8908  00185C  0100               	movlb	0	; () banked
  8909  00185E  4B90               	infsnz	efgtoa@e& (0+255),f,b
  8910  001860  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  8911  001862                     l8678:
  8912                           
  8913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8914  001862  C08C  F02A         	movff	efgtoa@g,___flge@ff1
  8915  001866  C08D  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  8916  00186A  C08E  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  8917  00186E  C08F  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  8918  001872  0E00               	movlw	0
  8919  001874  6E15               	movwf	___flmul@a^0,c
  8920  001876  0E00               	movlw	0
  8921  001878  6E16               	movwf	(___flmul@a+1)^0,c
  8922  00187A  0E20               	movlw	32
  8923  00187C  6E17               	movwf	(___flmul@a+2)^0,c
  8924  00187E  0E41               	movlw	65
  8925  001880  6E18               	movwf	(___flmul@a+3)^0,c
  8926  001882  C094  F011         	movff	efgtoa@u,___flmul@b
  8927  001886  C095  F012         	movff	efgtoa@u+1,___flmul@b+1
  8928  00188A  C096  F013         	movff	efgtoa@u+2,___flmul@b+2
  8929  00188E  C097  F014         	movff	efgtoa@u+3,___flmul@b+3
  8930  001892  EC0B  F013         	call	___flmul	;wreg free
  8931  001896  C011  F02E         	movff	?___flmul,___flge@ff2
  8932  00189A  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  8933  00189E  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  8934  0018A2  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  8935  0018A6  EC9D  F027         	call	___flge	;wreg free
  8936  0018AA  B0D8               	btfsc	status,0,c
  8937  0018AC  EF5A  F00C         	goto	u10841
  8938  0018B0  EF5C  F00C         	goto	u10840
  8939  0018B4                     u10841:
  8940  0018B4  EF14  F00C         	goto	l8674
  8941  0018B8                     u10840:
  8942  0018B8  EF7C  F00C         	goto	l8684
  8943  0018BC                     l8680:
  8944                           
  8945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8946  0018BC  C094  F003         	movff	efgtoa@u,___fldiv@b
  8947  0018C0  C095  F004         	movff	efgtoa@u+1,___fldiv@b+1
  8948  0018C4  C096  F005         	movff	efgtoa@u+2,___fldiv@b+2
  8949  0018C8  C097  F006         	movff	efgtoa@u+3,___fldiv@b+3
  8950  0018CC  0E00               	movlw	0
  8951  0018CE  6E07               	movwf	___fldiv@a^0,c
  8952  0018D0  0E00               	movlw	0
  8953  0018D2  6E08               	movwf	(___fldiv@a+1)^0,c
  8954  0018D4  0E20               	movlw	32
  8955  0018D6  6E09               	movwf	(___fldiv@a+2)^0,c
  8956  0018D8  0E41               	movlw	65
  8957  0018DA  6E0A               	movwf	(___fldiv@a+3)^0,c
  8958  0018DC  EC20  F015         	call	___fldiv	;wreg free
  8959  0018E0  C003  F094         	movff	?___fldiv,efgtoa@u
  8960  0018E4  C004  F095         	movff	?___fldiv+1,efgtoa@u+1
  8961  0018E8  C005  F096         	movff	?___fldiv+2,efgtoa@u+2
  8962  0018EC  C006  F097         	movff	?___fldiv+3,efgtoa@u+3
  8963  0018F0                     
  8964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8965  0018F0  0100               	movlb	0	; () banked
  8966  0018F2  0790               	decf	efgtoa@e& (0+255),f,b
  8967  0018F4  A0D8               	btfss	status,0,c
  8968  0018F6  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  8969  0018F8                     l8684:
  8970                           
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8972  0018F8  C08C  F02A         	movff	efgtoa@g,___flge@ff1
  8973  0018FC  C08D  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  8974  001900  C08E  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  8975  001904  C08F  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  8976  001908  C094  F02E         	movff	efgtoa@u,___flge@ff2
  8977  00190C  C095  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  8978  001910  C096  F030         	movff	efgtoa@u+2,___flge@ff2+2
  8979  001914  C097  F031         	movff	efgtoa@u+3,___flge@ff2+3
  8980  001918  EC9D  F027         	call	___flge	;wreg free
  8981  00191C  A0D8               	btfss	status,0,c
  8982  00191E  EF93  F00C         	goto	u10851
  8983  001922  EF95  F00C         	goto	u10850
  8984  001926                     u10851:
  8985  001926  EF5E  F00C         	goto	l8680
  8986  00192A                     u10850:
  8987  00192A                     l8686:
  8988                           
  8989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8990  00192A  C03C  F009         	movff	efgtoa@c,tolower@c
  8991  00192E  6A0A               	clrf	(tolower@c+1)^0,c
  8992  001930  EC55  F02C         	call	_tolower	;wreg free
  8993  001934  5009               	movf	?_tolower^0,w,c
  8994  001936  0100               	movlb	0	; () banked
  8995  001938  6F81               	movwf	efgtoa@mode& (0+255),b
  8996  00193A                     
  8997                           ; BSR set to: 0
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8999  00193A  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  9000  00193E                     
  9001                           ; BSR set to: 0
  9002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9003  00193E  0E67               	movlw	103
  9004  001940  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9005  001942  A4D8               	btfss	status,2,c
  9006  001944  EFA6  F00C         	goto	u10861
  9007  001948  EFA8  F00C         	goto	u10860
  9008  00194C                     u10861:
  9009  00194C  EFCE  F00C         	goto	l8700
  9010  001950                     u10860:
  9011  001950                     
  9012                           ; BSR set to: 0
  9013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9014  001950  5057               	movf	_prec^0,w,c
  9015  001952  1058               	iorwf	(_prec+1)^0,w,c
  9016  001954  A4D8               	btfss	status,2,c
  9017  001956  EFAF  F00C         	goto	u10871
  9018  00195A  EFB1  F00C         	goto	u10870
  9019  00195E                     u10871:
  9020  00195E  EFB5  F00C         	goto	l8696
  9021  001962                     u10870:
  9022  001962                     
  9023                           ; BSR set to: 0
  9024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9025  001962  0E00               	movlw	0
  9026  001964  6E58               	movwf	(_prec+1)^0,c
  9027  001966  0E01               	movlw	1
  9028  001968  6E57               	movwf	_prec^0,c
  9029  00196A                     l8696:
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9033  00196A  BE58               	btfsc	(_prec+1)^0,7,c
  9034  00196C  EFC2  F00C         	goto	u10880
  9035  001970  5058               	movf	(_prec+1)^0,w,c
  9036  001972  E106               	bnz	u10881
  9037  001974  0457               	decf	_prec^0,w,c
  9038  001976  B0D8               	btfsc	status,0,c
  9039  001978  EFC0  F00C         	goto	u10881
  9040  00197C  EFC2  F00C         	goto	u10880
  9041  001980                     u10881:
  9042  001980  EFC8  F00C         	goto	l727
  9043  001984                     u10880:
  9044  001984                     l8698:
  9045                           
  9046                           ; BSR set to: 0
  9047  001984  0E00               	movlw	0
  9048  001986  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9049  001988  0E06               	movlw	6
  9050  00198A  6F7C               	movwf	efgtoa@p& (0+255),b
  9051  00198C  EFD7  F00C         	goto	l8706
  9052  001990                     l727:
  9053                           
  9054                           ; BSR set to: 0
  9055  001990  C057  F07C         	movff	_prec,efgtoa@p
  9056  001994  C058  F07D         	movff	_prec+1,efgtoa@p+1
  9057  001998  EFD7  F00C         	goto	l8706
  9058  00199C                     l8700:
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9062  00199C  BE58               	btfsc	(_prec+1)^0,7,c
  9063  00199E  EFD3  F00C         	goto	u10891
  9064  0019A2  EFD5  F00C         	goto	u10890
  9065  0019A6                     u10891:
  9066  0019A6  EFC2  F00C         	goto	l8698
  9067  0019AA                     u10890:
  9068  0019AA  EFC8  F00C         	goto	l727
  9069  0019AE                     l8706:
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9073  0019AE  0E67               	movlw	103
  9074  0019B0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9075  0019B2  A4D8               	btfss	status,2,c
  9076  0019B4  EFDE  F00C         	goto	u10901
  9077  0019B8  EFE0  F00C         	goto	u10900
  9078  0019BC                     u10901:
  9079  0019BC  EF0F  F00D         	goto	l8716
  9080  0019C0                     u10900:
  9081  0019C0                     
  9082                           ; BSR set to: 0
  9083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9084  0019C0  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  9085  0019C2  EFEE  F00C         	goto	u10910
  9086  0019C6  0EFC               	movlw	252
  9087  0019C8  5D90               	subwf	efgtoa@e& (0+255),w,b
  9088  0019CA  0EFF               	movlw	255
  9089  0019CC  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9090  0019CE  A0D8               	btfss	status,0,c
  9091  0019D0  EFEC  F00C         	goto	u10911
  9092  0019D4  EFEE  F00C         	goto	u10910
  9093  0019D8                     u10911:
  9094  0019D8  EF0D  F00D         	goto	l8714
  9095  0019DC                     u10910:
  9096  0019DC                     
  9097                           ; BSR set to: 0
  9098  0019DC  0EFF               	movlw	255
  9099  0019DE  6E3D               	movwf	??_efgtoa^0,c
  9100  0019E0  0EFF               	movlw	255
  9101  0019E2  6E3E               	movwf	(??_efgtoa+1)^0,c
  9102  0019E4  C07C  F03F         	movff	efgtoa@p,??_efgtoa+2
  9103  0019E8  C07D  F040         	movff	efgtoa@p+1,??_efgtoa+3
  9104  0019EC  503D               	movf	??_efgtoa^0,w,c
  9105  0019EE  263F               	addwf	(??_efgtoa+2)^0,f,c
  9106  0019F0  503E               	movf	(??_efgtoa+1)^0,w,c
  9107  0019F2  2240               	addwfc	(??_efgtoa+3)^0,f,c
  9108  0019F4  5190               	movf	efgtoa@e& (0+255),w,b
  9109  0019F6  5C3F               	subwf	(??_efgtoa+2)^0,w,c
  9110  0019F8  5040               	movf	(??_efgtoa+3)^0,w,c
  9111  0019FA  0A80               	xorlw	128
  9112  0019FC  6E41               	movwf	(??_efgtoa+4)^0,c
  9113  0019FE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  9114  001A00  0A80               	xorlw	128
  9115  001A02  5841               	subwfb	(??_efgtoa+4)^0,w,c
  9116  001A04  A0D8               	btfss	status,0,c
  9117  001A06  EF07  F00D         	goto	u10921
  9118  001A0A  EF09  F00D         	goto	u10920
  9119  001A0E                     u10921:
  9120  001A0E  EF0D  F00D         	goto	l8714
  9121  001A12                     u10920:
  9122  001A12                     
  9123                           ; BSR set to: 0
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9125  001A12  0E66               	movlw	102
  9126  001A14  6F7E               	movwf	efgtoa@nmode& (0+255),b
  9127                           
  9128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9129  001A16  EF0F  F00D         	goto	l8716
  9130  001A1A                     l8714:
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9134  001A1A  0E65               	movlw	101
  9135  001A1C  6F7E               	movwf	efgtoa@nmode& (0+255),b
  9136  001A1E                     l8716:
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9140  001A1E  C07C  F074         	movff	efgtoa@p,efgtoa@m
  9141  001A22  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  9142  001A26                     
  9143                           ; BSR set to: 0
  9144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9145  001A26  0E67               	movlw	103
  9146  001A28  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9147  001A2A  A4D8               	btfss	status,2,c
  9148  001A2C  EF1A  F00D         	goto	u10931
  9149  001A30  EF1C  F00D         	goto	u10930
  9150  001A34                     u10931:
  9151  001A34  EF2C  F00D         	goto	l8724
  9152  001A38                     u10930:
  9153  001A38                     
  9154                           ; BSR set to: 0
  9155  001A38  0E66               	movlw	102
  9156  001A3A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9157  001A3C  A4D8               	btfss	status,2,c
  9158  001A3E  EF23  F00D         	goto	u10941
  9159  001A42  EF25  F00D         	goto	u10940
  9160  001A46                     u10941:
  9161  001A46  EF2E  F00D         	goto	l8726
  9162  001A4A                     u10940:
  9163  001A4A                     
  9164                           ; BSR set to: 0
  9165  001A4A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9166  001A4C  EF2C  F00D         	goto	u10950
  9167  001A50  EF2A  F00D         	goto	u10951
  9168  001A54                     u10951:
  9169  001A54  EF2E  F00D         	goto	l8726
  9170  001A58                     u10950:
  9171  001A58                     l8724:
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9175  001A58  4B74               	infsnz	efgtoa@m& (0+255),f,b
  9176  001A5A  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  9177  001A5C                     l8726:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9181  001A5C  0E66               	movlw	102
  9182  001A5E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9183  001A60  A4D8               	btfss	status,2,c
  9184  001A62  EF35  F00D         	goto	u10961
  9185  001A66  EF37  F00D         	goto	u10960
  9186  001A6A                     u10961:
  9187  001A6A  EF57  F00D         	goto	l8736
  9188  001A6E                     u10960:
  9189  001A6E                     
  9190                           ; BSR set to: 0
  9191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9192  001A6E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9193  001A70  EF3E  F00D         	goto	u10970
  9194  001A74  EF3C  F00D         	goto	u10971
  9195  001A78                     u10971:
  9196  001A78  EF4A  F00D         	goto	l8732
  9197  001A7C                     u10970:
  9198  001A7C                     
  9199                           ; BSR set to: 0
  9200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9201  001A7C  0E00               	movlw	0
  9202  001A7E  6F94               	movwf	efgtoa@u& (0+255),b
  9203  001A80  0E00               	movlw	0
  9204  001A82  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  9205  001A84  0E80               	movlw	128
  9206  001A86  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  9207  001A88  0E3F               	movlw	63
  9208  001A8A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  9209                           
  9210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9211  001A8C  0E00               	movlw	0
  9212  001A8E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  9213  001A90  0E00               	movlw	0
  9214  001A92  6F90               	movwf	efgtoa@e& (0+255),b
  9215  001A94                     l8732:
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9219  001A94  0E67               	movlw	103
  9220  001A96  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9221  001A98  B4D8               	btfsc	status,2,c
  9222  001A9A  EF51  F00D         	goto	u10981
  9223  001A9E  EF53  F00D         	goto	u10980
  9224  001AA2                     u10981:
  9225  001AA2  EF57  F00D         	goto	l8736
  9226  001AA6                     u10980:
  9227  001AA6                     
  9228                           ; BSR set to: 0
  9229                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9230  001AA6  5190               	movf	efgtoa@e& (0+255),w,b
  9231  001AA8  2774               	addwf	efgtoa@m& (0+255),f,b
  9232  001AAA  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  9233  001AAC  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9234  001AAE                     l8736:
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9238  001AAE  0E00               	movlw	0
  9239  001AB0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9240  001AB2  0E00               	movlw	0
  9241  001AB4  6F8A               	movwf	efgtoa@i& (0+255),b
  9242  001AB6                     
  9243                           ; BSR set to: 0
  9244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9245  001AB6  C08C  F082         	movff	efgtoa@g,efgtoa@h
  9246  001ABA  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  9247  001ABE  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  9248  001AC2  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  9249  001AC6                     
  9250                           ; BSR set to: 0
  9251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9252  001AC6  C094  F060         	movff	efgtoa@u,efgtoa@ou
  9253  001ACA  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  9254  001ACE  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  9255  001AD2  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  9256                           
  9257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9258  001AD6  EFE8  F00D         	goto	l8750
  9259  001ADA                     l8742:
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9263  001ADA  C082  F003         	movff	efgtoa@h,___fldiv@b
  9264  001ADE  C083  F004         	movff	efgtoa@h+1,___fldiv@b+1
  9265  001AE2  C084  F005         	movff	efgtoa@h+2,___fldiv@b+2
  9266  001AE6  C085  F006         	movff	efgtoa@h+3,___fldiv@b+3
  9267  001AEA  C094  F007         	movff	efgtoa@u,___fldiv@a
  9268  001AEE  C095  F008         	movff	efgtoa@u+1,___fldiv@a+1
  9269  001AF2  C096  F009         	movff	efgtoa@u+2,___fldiv@a+2
  9270  001AF6  C097  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  9271  001AFA  EC20  F015         	call	___fldiv	;wreg free
  9272  001AFE  C003  F01C         	movff	?___fldiv,floorf@x
  9273  001B02  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  9274  001B06  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  9275  001B0A  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  9276  001B0E  EC93  F01C         	call	_floorf	;wreg free
  9277  001B12  C01C  F086         	movff	?_floorf,efgtoa@l
  9278  001B16  C01D  F087         	movff	?_floorf+1,efgtoa@l+1
  9279  001B1A  C01E  F088         	movff	?_floorf+2,efgtoa@l+2
  9280  001B1E  C01F  F089         	movff	?_floorf+3,efgtoa@l+3
  9281                           
  9282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9283  001B22  C086  F003         	movff	efgtoa@l,___fltol@f1
  9284  001B26  C087  F004         	movff	efgtoa@l+1,___fltol@f1+1
  9285  001B2A  C088  F005         	movff	efgtoa@l+2,___fltol@f1+2
  9286  001B2E  C089  F006         	movff	efgtoa@l+3,___fltol@f1+3
  9287  001B32  EC1A  F027         	call	___fltol	;wreg free
  9288  001B36  C003  F078         	movff	?___fltol,efgtoa@d
  9289  001B3A  C004  F079         	movff	?___fltol+1,efgtoa@d+1
  9290  001B3E                     
  9291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9292  001B3E  C082  F02A         	movff	efgtoa@h,___flsub@b
  9293  001B42  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  9294  001B46  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  9295  001B4A  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  9296  001B4E  C094  F015         	movff	efgtoa@u,___flmul@a
  9297  001B52  C095  F016         	movff	efgtoa@u+1,___flmul@a+1
  9298  001B56  C096  F017         	movff	efgtoa@u+2,___flmul@a+2
  9299  001B5A  C097  F018         	movff	efgtoa@u+3,___flmul@a+3
  9300  001B5E  C086  F011         	movff	efgtoa@l,___flmul@b
  9301  001B62  C087  F012         	movff	efgtoa@l+1,___flmul@b+1
  9302  001B66  C088  F013         	movff	efgtoa@l+2,___flmul@b+2
  9303  001B6A  C089  F014         	movff	efgtoa@l+3,___flmul@b+3
  9304  001B6E  EC0B  F013         	call	___flmul	;wreg free
  9305  001B72  C011  F02E         	movff	?___flmul,___flsub@a
  9306  001B76  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  9307  001B7A  C013  F030         	movff	?___flmul+2,___flsub@a+2
  9308  001B7E  C014  F031         	movff	?___flmul+3,___flsub@a+3
  9309  001B82  EC82  F02D         	call	___flsub	;wreg free
  9310  001B86  C02A  F082         	movff	?___flsub,efgtoa@h
  9311  001B8A  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  9312  001B8E  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  9313  001B92  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  9314  001B96                     
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9316  001B96  C094  F003         	movff	efgtoa@u,___fldiv@b
  9317  001B9A  C095  F004         	movff	efgtoa@u+1,___fldiv@b+1
  9318  001B9E  C096  F005         	movff	efgtoa@u+2,___fldiv@b+2
  9319  001BA2  C097  F006         	movff	efgtoa@u+3,___fldiv@b+3
  9320  001BA6  0E00               	movlw	0
  9321  001BA8  6E07               	movwf	___fldiv@a^0,c
  9322  001BAA  0E00               	movlw	0
  9323  001BAC  6E08               	movwf	(___fldiv@a+1)^0,c
  9324  001BAE  0E20               	movlw	32
  9325  001BB0  6E09               	movwf	(___fldiv@a+2)^0,c
  9326  001BB2  0E41               	movlw	65
  9327  001BB4  6E0A               	movwf	(___fldiv@a+3)^0,c
  9328  001BB6  EC20  F015         	call	___fldiv	;wreg free
  9329  001BBA  C003  F094         	movff	?___fldiv,efgtoa@u
  9330  001BBE  C004  F095         	movff	?___fldiv+1,efgtoa@u+1
  9331  001BC2  C005  F096         	movff	?___fldiv+2,efgtoa@u+2
  9332  001BC6  C006  F097         	movff	?___fldiv+3,efgtoa@u+3
  9333  001BCA                     
  9334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9335  001BCA  0100               	movlb	0	; () banked
  9336  001BCC  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9337  001BCE  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9338  001BD0                     l8750:
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9342  001BD0  5174               	movf	efgtoa@m& (0+255),w,b
  9343  001BD2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9344  001BD4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9345  001BD6  0A80               	xorlw	128
  9346  001BD8  6E3D               	movwf	??_efgtoa^0,c
  9347  001BDA  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9348  001BDC  0A80               	xorlw	128
  9349  001BDE  583D               	subwfb	??_efgtoa^0,w,c
  9350  001BE0  A0D8               	btfss	status,0,c
  9351  001BE2  EFF5  F00D         	goto	u10991
  9352  001BE6  EFF7  F00D         	goto	u10990
  9353  001BEA                     u10991:
  9354  001BEA  EF6D  F00D         	goto	l8742
  9355  001BEE                     u10990:
  9356  001BEE                     
  9357                           ; BSR set to: 0
  9358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9359  001BEE  C094  F011         	movff	efgtoa@u,___flmul@b
  9360  001BF2  C095  F012         	movff	efgtoa@u+1,___flmul@b+1
  9361  001BF6  C096  F013         	movff	efgtoa@u+2,___flmul@b+2
  9362  001BFA  C097  F014         	movff	efgtoa@u+3,___flmul@b+3
  9363  001BFE  0E00               	movlw	0
  9364  001C00  6E15               	movwf	___flmul@a^0,c
  9365  001C02  0E00               	movlw	0
  9366  001C04  6E16               	movwf	(___flmul@a+1)^0,c
  9367  001C06  0EA0               	movlw	160
  9368  001C08  6E17               	movwf	(___flmul@a+2)^0,c
  9369  001C0A  0E40               	movlw	64
  9370  001C0C  6E18               	movwf	(___flmul@a+3)^0,c
  9371  001C0E  EC0B  F013         	call	___flmul	;wreg free
  9372  001C12  C011  F086         	movff	?___flmul,efgtoa@l
  9373  001C16  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  9374  001C1A  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  9375  001C1E  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  9376  001C22                     
  9377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9378  001C22  C082  F02A         	movff	efgtoa@h,___flge@ff1
  9379  001C26  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  9380  001C2A  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  9381  001C2E  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  9382  001C32  C086  F02E         	movff	efgtoa@l,___flge@ff2
  9383  001C36  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  9384  001C3A  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  9385  001C3E  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  9386  001C42  EC9D  F027         	call	___flge	;wreg free
  9387  001C46  B0D8               	btfsc	status,0,c
  9388  001C48  EF28  F00E         	goto	u11001
  9389  001C4C  EF2A  F00E         	goto	u11000
  9390  001C50                     u11001:
  9391  001C50  EF35  F00E         	goto	l8758
  9392  001C54                     u11000:
  9393  001C54                     
  9394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9395  001C54  0E00               	movlw	0
  9396  001C56  0100               	movlb	0	; () banked
  9397  001C58  6F86               	movwf	efgtoa@l& (0+255),b
  9398  001C5A  0E00               	movlw	0
  9399  001C5C  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9400  001C5E  0E00               	movlw	0
  9401  001C60  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9402  001C62  0E00               	movlw	0
  9403  001C64  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9404                           
  9405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9406  001C66  EF5E  F00E         	goto	l8764
  9407  001C6A                     l8758:
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9410  001C6A  C082  F003         	movff	efgtoa@h,___fleq@ff1
  9411  001C6E  C083  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  9412  001C72  C084  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  9413  001C76  C085  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  9414  001C7A  C086  F007         	movff	efgtoa@l,___fleq@ff2
  9415  001C7E  C087  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  9416  001C82  C088  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  9417  001C86  C089  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  9418  001C8A  EC56  F02B         	call	___fleq	;wreg free
  9419  001C8E  A0D8               	btfss	status,0,c
  9420  001C90  EF4C  F00E         	goto	u11011
  9421  001C94  EF4E  F00E         	goto	u11010
  9422  001C98                     u11011:
  9423  001C98  EF5E  F00E         	goto	l8764
  9424  001C9C                     u11010:
  9425  001C9C  0100               	movlb	0	; () banked
  9426  001C9E  B178               	btfsc	efgtoa@d& (0+255),0,b
  9427  001CA0  EF54  F00E         	goto	u11021
  9428  001CA4  EF56  F00E         	goto	u11020
  9429  001CA8                     u11021:
  9430  001CA8  EF5E  F00E         	goto	l8764
  9431  001CAC                     u11020:
  9432  001CAC                     
  9433                           ; BSR set to: 0
  9434                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9435  001CAC  0E00               	movlw	0
  9436  001CAE  6F86               	movwf	efgtoa@l& (0+255),b
  9437  001CB0  0E00               	movlw	0
  9438  001CB2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  9439  001CB4  0E00               	movlw	0
  9440  001CB6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  9441  001CB8  0E00               	movlw	0
  9442  001CBA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  9443  001CBC                     l8764:
  9444                           
  9445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9446  001CBC  C08C  F003         	movff	efgtoa@g,___fladd@b
  9447  001CC0  C08D  F004         	movff	efgtoa@g+1,___fladd@b+1
  9448  001CC4  C08E  F005         	movff	efgtoa@g+2,___fladd@b+2
  9449  001CC8  C08F  F006         	movff	efgtoa@g+3,___fladd@b+3
  9450  001CCC  C086  F007         	movff	efgtoa@l,___fladd@a
  9451  001CD0  C087  F008         	movff	efgtoa@l+1,___fladd@a+1
  9452  001CD4  C088  F009         	movff	efgtoa@l+2,___fladd@a+2
  9453  001CD8  C089  F00A         	movff	efgtoa@l+3,___fladd@a+3
  9454  001CDC  ECAB  F010         	call	___fladd	;wreg free
  9455  001CE0  C003  F082         	movff	?___fladd,efgtoa@h
  9456  001CE4  C004  F083         	movff	?___fladd+1,efgtoa@h+1
  9457  001CE8  C005  F084         	movff	?___fladd+2,efgtoa@h+2
  9458  001CEC  C006  F085         	movff	?___fladd+3,efgtoa@h+3
  9459  001CF0                     
  9460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9461  001CF0  C060  F094         	movff	efgtoa@ou,efgtoa@u
  9462  001CF4  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  9463  001CF8  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  9464  001CFC  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  9465  001D00                     
  9466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9467  001D00  0E65               	movlw	101
  9468  001D02  0100               	movlb	0	; () banked
  9469  001D04  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9470  001D06  B4D8               	btfsc	status,2,c
  9471  001D08  EF88  F00E         	goto	u11031
  9472  001D0C  EF8A  F00E         	goto	u11030
  9473  001D10                     u11031:
  9474  001D10  EF90  F00E         	goto	l8772
  9475  001D14                     u11030:
  9476  001D14                     
  9477                           ; BSR set to: 0
  9478  001D14  C090  F076         	movff	efgtoa@e,efgtoa@ne
  9479  001D18  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  9480  001D1C  EF94  F00E         	goto	l753
  9481  001D20                     l8772:
  9482                           
  9483                           ; BSR set to: 0
  9484  001D20  0E00               	movlw	0
  9485  001D22  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  9486  001D24  0E00               	movlw	0
  9487  001D26  6F76               	movwf	efgtoa@ne& (0+255),b
  9488  001D28                     l753:
  9489                           
  9490                           ; BSR set to: 0
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9492  001D28  0E00               	movlw	0
  9493  001D2A  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9494  001D2C  0E00               	movlw	0
  9495  001D2E  6F72               	movwf	efgtoa@pp& (0+255),b
  9496                           
  9497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9498  001D30  0E00               	movlw	0
  9499  001D32  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  9500  001D34  0E00               	movlw	0
  9501  001D36  6F70               	movwf	efgtoa@t& (0+255),b
  9502                           
  9503                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9504  001D38  0E00               	movlw	0
  9505  001D3A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9506  001D3C  0E00               	movlw	0
  9507  001D3E  6F8A               	movwf	efgtoa@i& (0+255),b
  9508                           
  9509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9510  001D40  EF90  F00F         	goto	l8822
  9511  001D44                     l8774:
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9515  001D44  C082  F003         	movff	efgtoa@h,___fldiv@b
  9516  001D48  C083  F004         	movff	efgtoa@h+1,___fldiv@b+1
  9517  001D4C  C084  F005         	movff	efgtoa@h+2,___fldiv@b+2
  9518  001D50  C085  F006         	movff	efgtoa@h+3,___fldiv@b+3
  9519  001D54  C094  F007         	movff	efgtoa@u,___fldiv@a
  9520  001D58  C095  F008         	movff	efgtoa@u+1,___fldiv@a+1
  9521  001D5C  C096  F009         	movff	efgtoa@u+2,___fldiv@a+2
  9522  001D60  C097  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  9523  001D64  EC20  F015         	call	___fldiv	;wreg free
  9524  001D68  C003  F01C         	movff	?___fldiv,floorf@x
  9525  001D6C  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  9526  001D70  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  9527  001D74  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  9528  001D78  EC93  F01C         	call	_floorf	;wreg free
  9529  001D7C  C01C  F086         	movff	?_floorf,efgtoa@l
  9530  001D80  C01D  F087         	movff	?_floorf+1,efgtoa@l+1
  9531  001D84  C01E  F088         	movff	?_floorf+2,efgtoa@l+2
  9532  001D88  C01F  F089         	movff	?_floorf+3,efgtoa@l+3
  9533                           
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9535  001D8C  C086  F003         	movff	efgtoa@l,___fltol@f1
  9536  001D90  C087  F004         	movff	efgtoa@l+1,___fltol@f1+1
  9537  001D94  C088  F005         	movff	efgtoa@l+2,___fltol@f1+2
  9538  001D98  C089  F006         	movff	efgtoa@l+3,___fltol@f1+3
  9539  001D9C  EC1A  F027         	call	___fltol	;wreg free
  9540  001DA0  C003  F078         	movff	?___fltol,efgtoa@d
  9541  001DA4  C004  F079         	movff	?___fltol+1,efgtoa@d+1
  9542  001DA8                     
  9543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9544  001DA8  B859               	btfsc	_flags^0,4,c
  9545  001DAA  EFD9  F00E         	goto	u11041
  9546  001DAE  EFDB  F00E         	goto	u11040
  9547  001DB2                     u11041:
  9548  001DB2  EFF9  F00E         	goto	l8786
  9549  001DB6                     u11040:
  9550  001DB6  0100               	movlb	0	; () banked
  9551  001DB8  5178               	movf	efgtoa@d& (0+255),w,b
  9552  001DBA  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9553  001DBC  A4D8               	btfss	status,2,c
  9554  001DBE  EFE3  F00E         	goto	u11051
  9555  001DC2  EFE5  F00E         	goto	u11050
  9556  001DC6                     u11051:
  9557  001DC6  EFF9  F00E         	goto	l8786
  9558  001DCA                     u11050:
  9559  001DCA                     
  9560                           ; BSR set to: 0
  9561  001DCA  0E67               	movlw	103
  9562  001DCC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  9563  001DCE  A4D8               	btfss	status,2,c
  9564  001DD0  EFEC  F00E         	goto	u11061
  9565  001DD4  EFEE  F00E         	goto	u11060
  9566  001DD8                     u11061:
  9567  001DD8  EFF9  F00E         	goto	l8786
  9568  001DDC                     u11060:
  9569  001DDC                     
  9570                           ; BSR set to: 0
  9571  001DDC  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9572  001DDE  EFF5  F00E         	goto	u11070
  9573  001DE2  EFF3  F00E         	goto	u11071
  9574  001DE6                     u11071:
  9575  001DE6  EFF9  F00E         	goto	l8786
  9576  001DEA                     u11070:
  9577  001DEA                     
  9578                           ; BSR set to: 0
  9579                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9580  001DEA  4B70               	infsnz	efgtoa@t& (0+255),f,b
  9581  001DEC  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  9582                           
  9583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9584  001DEE  EF44  F00F         	goto	l8814
  9585  001DF2                     l8786:
  9586                           
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9588  001DF2  0100               	movlb	0	; () banked
  9589  001DF4  5172               	movf	efgtoa@pp& (0+255),w,b
  9590  001DF6  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9591  001DF8  A4D8               	btfss	status,2,c
  9592  001DFA  EF01  F00F         	goto	u11081
  9593  001DFE  EF03  F00F         	goto	u11080
  9594  001E02                     u11081:
  9595  001E02  EF2D  F00F         	goto	l8806
  9596  001E06                     u11080:
  9597  001E06                     
  9598                           ; BSR set to: 0
  9599  001E06  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9600  001E08  EF0A  F00F         	goto	u11090
  9601  001E0C  EF08  F00F         	goto	u11091
  9602  001E10                     u11091:
  9603  001E10  EF2D  F00F         	goto	l8806
  9604  001E14                     u11090:
  9605  001E14                     
  9606                           ; BSR set to: 0
  9607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9608  001E14  0E64               	movlw	low _dbuf
  9609  001E16  2592               	addwf	efgtoa@n& (0+255),w,b
  9610  001E18  6ED9               	movwf	fsr2l,c
  9611  001E1A  0E01               	movlw	high _dbuf
  9612  001E1C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9613  001E1E  6EDA               	movwf	fsr2h,c
  9614  001E20  0E2E               	movlw	46
  9615  001E22  6EDF               	movwf	indf2,c
  9616  001E24                     
  9617                           ; BSR set to: 0
  9618  001E24  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9619  001E26  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9620  001E28                     
  9621                           ; BSR set to: 0
  9622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9623  001E28  077F               	decf	efgtoa@w& (0+255),f,b
  9624  001E2A  A0D8               	btfss	status,0,c
  9625  001E2C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9626  001E2E                     
  9627                           ; BSR set to: 0
  9628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9629  001E2E  0E00               	movlw	0
  9630  001E30  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  9631  001E32  0E01               	movlw	1
  9632  001E34  6F72               	movwf	efgtoa@pp& (0+255),b
  9633  001E36  EF2D  F00F         	goto	l8806
  9634  001E3A                     l8798:
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9638  001E3A  0E64               	movlw	low _dbuf
  9639  001E3C  2592               	addwf	efgtoa@n& (0+255),w,b
  9640  001E3E  6ED9               	movwf	fsr2l,c
  9641  001E40  0E01               	movlw	high _dbuf
  9642  001E42  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9643  001E44  6EDA               	movwf	fsr2h,c
  9644  001E46  0E30               	movlw	48
  9645  001E48  6EDF               	movwf	indf2,c
  9646  001E4A                     
  9647                           ; BSR set to: 0
  9648  001E4A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9649  001E4C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9650  001E4E                     
  9651                           ; BSR set to: 0
  9652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9653  001E4E  077F               	decf	efgtoa@w& (0+255),f,b
  9654  001E50  A0D8               	btfss	status,0,c
  9655  001E52  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9656  001E54                     
  9657                           ; BSR set to: 0
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9659  001E54  0770               	decf	efgtoa@t& (0+255),f,b
  9660  001E56  A0D8               	btfss	status,0,c
  9661  001E58  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  9662  001E5A                     l8806:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9666  001E5A  5170               	movf	efgtoa@t& (0+255),w,b
  9667  001E5C  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9668  001E5E  A4D8               	btfss	status,2,c
  9669  001E60  EF34  F00F         	goto	u11101
  9670  001E64  EF36  F00F         	goto	u11100
  9671  001E68                     u11101:
  9672  001E68  EF1D  F00F         	goto	l8798
  9673  001E6C                     u11100:
  9674  001E6C                     
  9675                           ; BSR set to: 0
  9676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9677  001E6C  0E64               	movlw	low _dbuf
  9678  001E6E  2592               	addwf	efgtoa@n& (0+255),w,b
  9679  001E70  6ED9               	movwf	fsr2l,c
  9680  001E72  0E01               	movlw	high _dbuf
  9681  001E74  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9682  001E76  6EDA               	movwf	fsr2h,c
  9683  001E78  5178               	movf	efgtoa@d& (0+255),w,b
  9684  001E7A  0F30               	addlw	48
  9685  001E7C  6EDF               	movwf	indf2,c
  9686  001E7E                     
  9687                           ; BSR set to: 0
  9688  001E7E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9689  001E80  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9690  001E82                     
  9691                           ; BSR set to: 0
  9692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9693  001E82  077F               	decf	efgtoa@w& (0+255),f,b
  9694  001E84  A0D8               	btfss	status,0,c
  9695  001E86  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9696  001E88                     l8814:
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9700  001E88  C082  F02A         	movff	efgtoa@h,___flsub@b
  9701  001E8C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  9702  001E90  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  9703  001E94  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  9704  001E98  C094  F015         	movff	efgtoa@u,___flmul@a
  9705  001E9C  C095  F016         	movff	efgtoa@u+1,___flmul@a+1
  9706  001EA0  C096  F017         	movff	efgtoa@u+2,___flmul@a+2
  9707  001EA4  C097  F018         	movff	efgtoa@u+3,___flmul@a+3
  9708  001EA8  C086  F011         	movff	efgtoa@l,___flmul@b
  9709  001EAC  C087  F012         	movff	efgtoa@l+1,___flmul@b+1
  9710  001EB0  C088  F013         	movff	efgtoa@l+2,___flmul@b+2
  9711  001EB4  C089  F014         	movff	efgtoa@l+3,___flmul@b+3
  9712  001EB8  EC0B  F013         	call	___flmul	;wreg free
  9713  001EBC  C011  F02E         	movff	?___flmul,___flsub@a
  9714  001EC0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  9715  001EC4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  9716  001EC8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  9717  001ECC  EC82  F02D         	call	___flsub	;wreg free
  9718  001ED0  C02A  F082         	movff	?___flsub,efgtoa@h
  9719  001ED4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  9720  001ED8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  9721  001EDC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  9722  001EE0                     
  9723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9724  001EE0  C094  F003         	movff	efgtoa@u,___fldiv@b
  9725  001EE4  C095  F004         	movff	efgtoa@u+1,___fldiv@b+1
  9726  001EE8  C096  F005         	movff	efgtoa@u+2,___fldiv@b+2
  9727  001EEC  C097  F006         	movff	efgtoa@u+3,___fldiv@b+3
  9728  001EF0  0E00               	movlw	0
  9729  001EF2  6E07               	movwf	___fldiv@a^0,c
  9730  001EF4  0E00               	movlw	0
  9731  001EF6  6E08               	movwf	(___fldiv@a+1)^0,c
  9732  001EF8  0E20               	movlw	32
  9733  001EFA  6E09               	movwf	(___fldiv@a+2)^0,c
  9734  001EFC  0E41               	movlw	65
  9735  001EFE  6E0A               	movwf	(___fldiv@a+3)^0,c
  9736  001F00  EC20  F015         	call	___fldiv	;wreg free
  9737  001F04  C003  F094         	movff	?___fldiv,efgtoa@u
  9738  001F08  C004  F095         	movff	?___fldiv+1,efgtoa@u+1
  9739  001F0C  C005  F096         	movff	?___fldiv+2,efgtoa@u+2
  9740  001F10  C006  F097         	movff	?___fldiv+3,efgtoa@u+3
  9741  001F14                     
  9742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9743  001F14  0100               	movlb	0	; () banked
  9744  001F16  0776               	decf	efgtoa@ne& (0+255),f,b
  9745  001F18  A0D8               	btfss	status,0,c
  9746  001F1A  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  9747  001F1C                     
  9748                           ; BSR set to: 0
  9749                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9750  001F1C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  9751  001F1E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  9752  001F20                     l8822:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9756  001F20  5174               	movf	efgtoa@m& (0+255),w,b
  9757  001F22  5D8A               	subwf	efgtoa@i& (0+255),w,b
  9758  001F24  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  9759  001F26  0A80               	xorlw	128
  9760  001F28  6E3D               	movwf	??_efgtoa^0,c
  9761  001F2A  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  9762  001F2C  0A80               	xorlw	128
  9763  001F2E  583D               	subwfb	??_efgtoa^0,w,c
  9764  001F30  B0D8               	btfsc	status,0,c
  9765  001F32  EF9D  F00F         	goto	u11111
  9766  001F36  EF9F  F00F         	goto	u11110
  9767  001F3A                     u11111:
  9768  001F3A  EFAD  F00F         	goto	l8826
  9769  001F3E                     u11110:
  9770  001F3E                     
  9771                           ; BSR set to: 0
  9772  001F3E  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9773  001F40  EFAB  F00F         	goto	u11121
  9774  001F44  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  9775  001F46  E109               	bnz	u11120
  9776  001F48  0E4B               	movlw	75
  9777  001F4A  5D92               	subwf	efgtoa@n& (0+255),w,b
  9778  001F4C  A0D8               	btfss	status,0,c
  9779  001F4E  EFAB  F00F         	goto	u11121
  9780  001F52  EFAD  F00F         	goto	u11120
  9781  001F56                     u11121:
  9782  001F56  EFA2  F00E         	goto	l8774
  9783  001F5A                     u11120:
  9784  001F5A                     l8826:
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9788  001F5A  5172               	movf	efgtoa@pp& (0+255),w,b
  9789  001F5C  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9790  001F5E  A4D8               	btfss	status,2,c
  9791  001F60  EFB4  F00F         	goto	u11131
  9792  001F64  EFB6  F00F         	goto	u11130
  9793  001F68                     u11131:
  9794  001F68  EFC7  F00F         	goto	l8834
  9795  001F6C                     u11130:
  9796  001F6C                     
  9797                           ; BSR set to: 0
  9798  001F6C  A859               	btfss	_flags^0,4,c
  9799  001F6E  EFBB  F00F         	goto	u11141
  9800  001F72  EFBD  F00F         	goto	u11140
  9801  001F76                     u11141:
  9802  001F76  EFC7  F00F         	goto	l8834
  9803  001F7A                     u11140:
  9804  001F7A                     
  9805                           ; BSR set to: 0
  9806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9807  001F7A  0E64               	movlw	low _dbuf
  9808  001F7C  2592               	addwf	efgtoa@n& (0+255),w,b
  9809  001F7E  6ED9               	movwf	fsr2l,c
  9810  001F80  0E01               	movlw	high _dbuf
  9811  001F82  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9812  001F84  6EDA               	movwf	fsr2h,c
  9813  001F86  0E2E               	movlw	46
  9814  001F88  6EDF               	movwf	indf2,c
  9815  001F8A                     
  9816                           ; BSR set to: 0
  9817  001F8A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  9818  001F8C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  9819  001F8E                     l8834:
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9823  001F8E  0E64               	movlw	low _dbuf
  9824  001F90  2592               	addwf	efgtoa@n& (0+255),w,b
  9825  001F92  6ED9               	movwf	fsr2l,c
  9826  001F94  0E01               	movlw	high _dbuf
  9827  001F96  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9828  001F98  6EDA               	movwf	fsr2h,c
  9829  001F9A  0E00               	movlw	0
  9830  001F9C  6EDF               	movwf	indf2,c
  9831  001F9E                     
  9832                           ; BSR set to: 0
  9833                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9834  001F9E  0E65               	movlw	101
  9835  001FA0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  9836  001FA2  A4D8               	btfss	status,2,c
  9837  001FA4  EFD6  F00F         	goto	u11151
  9838  001FA8  EFD8  F00F         	goto	u11150
  9839  001FAC                     u11151:
  9840  001FAC  EF85  F00B         	goto	l8646
  9841  001FB0                     u11150:
  9842  001FB0                     
  9843                           ; BSR set to: 0
  9844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9845  001FB0  0E00               	movlw	0
  9846  001FB2  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  9847  001FB4  0E4F               	movlw	79
  9848  001FB6  6F8A               	movwf	efgtoa@i& (0+255),b
  9849  001FB8                     
  9850                           ; BSR set to: 0
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9852  001FB8  0E64               	movlw	low _dbuf
  9853  001FBA  258A               	addwf	efgtoa@i& (0+255),w,b
  9854  001FBC  6ED9               	movwf	fsr2l,c
  9855  001FBE  0E01               	movlw	high _dbuf
  9856  001FC0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9857  001FC2  6EDA               	movwf	fsr2h,c
  9858  001FC4  0E00               	movlw	0
  9859  001FC6  6EDF               	movwf	indf2,c
  9860  001FC8                     
  9861                           ; BSR set to: 0
  9862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9863  001FC8  0E00               	movlw	0
  9864  001FCA  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9865  001FCC  0E00               	movlw	0
  9866  001FCE  6F7A               	movwf	efgtoa@sign& (0+255),b
  9867  001FD0                     
  9868                           ; BSR set to: 0
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9870  001FD0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9871  001FD2  EFEF  F00F         	goto	u11160
  9872  001FD6  EFED  F00F         	goto	u11161
  9873  001FDA                     u11161:
  9874  001FDA  EFF7  F00F         	goto	l8850
  9875  001FDE                     u11160:
  9876  001FDE                     
  9877                           ; BSR set to: 0
  9878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9879  001FDE  0E00               	movlw	0
  9880  001FE0  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  9881  001FE2  0E01               	movlw	1
  9882  001FE4  6F7A               	movwf	efgtoa@sign& (0+255),b
  9883  001FE6                     
  9884                           ; BSR set to: 0
  9885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9886  001FE6  6D90               	negf	efgtoa@e& (0+255),b
  9887  001FE8  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  9888  001FEA  B0D8               	btfsc	status,0,c
  9889  001FEC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  9890  001FEE                     l8850:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9894  001FEE  0E00               	movlw	0
  9895  001FF0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  9896  001FF2  0E02               	movlw	2
  9897  001FF4  6F7C               	movwf	efgtoa@p& (0+255),b
  9898                           
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9900  001FF6  EF28  F010         	goto	l8862
  9901  001FFA                     l8852:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9905  001FFA  078A               	decf	efgtoa@i& (0+255),f,b
  9906  001FFC  A0D8               	btfss	status,0,c
  9907  001FFE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9908  002000                     
  9909                           ; BSR set to: 0
  9910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9911  002000  0E64               	movlw	low _dbuf
  9912  002002  258A               	addwf	efgtoa@i& (0+255),w,b
  9913  002004  6ED9               	movwf	fsr2l,c
  9914  002006  0E01               	movlw	high _dbuf
  9915  002008  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9916  00200A  6EDA               	movwf	fsr2h,c
  9917  00200C  C090  F003         	movff	efgtoa@e,___awmod@dividend
  9918  002010  C091  F004         	movff	efgtoa@e+1,___awmod@dividend+1
  9919  002014  0E00               	movlw	0
  9920  002016  6E06               	movwf	(___awmod@divisor+1)^0,c
  9921  002018  0E0A               	movlw	10
  9922  00201A  6E05               	movwf	___awmod@divisor^0,c
  9923  00201C  ECA6  F02A         	call	___awmod	;wreg free
  9924  002020  5003               	movf	?___awmod^0,w,c
  9925  002022  0F30               	addlw	48
  9926  002024  6EDF               	movwf	indf2,c
  9927  002026                     
  9928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9929  002026  C090  F003         	movff	efgtoa@e,___awdiv@dividend
  9930  00202A  C091  F004         	movff	efgtoa@e+1,___awdiv@dividend+1
  9931  00202E  0E00               	movlw	0
  9932  002030  6E06               	movwf	(___awdiv@divisor+1)^0,c
  9933  002032  0E0A               	movlw	10
  9934  002034  6E05               	movwf	___awdiv@divisor^0,c
  9935  002036  ECE3  F029         	call	___awdiv	;wreg free
  9936  00203A  C003  F090         	movff	?___awdiv,efgtoa@e
  9937  00203E  C004  F091         	movff	?___awdiv+1,efgtoa@e+1
  9938  002042                     
  9939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9940  002042  0100               	movlb	0	; () banked
  9941  002044  077C               	decf	efgtoa@p& (0+255),f,b
  9942  002046  A0D8               	btfss	status,0,c
  9943  002048  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  9944  00204A                     
  9945                           ; BSR set to: 0
  9946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9947  00204A  077F               	decf	efgtoa@w& (0+255),f,b
  9948  00204C  A0D8               	btfss	status,0,c
  9949  00204E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  9950  002050                     l8862:
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9954  002050  5190               	movf	efgtoa@e& (0+255),w,b
  9955  002052  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9956  002054  A4D8               	btfss	status,2,c
  9957  002056  EF2F  F010         	goto	u11171
  9958  00205A  EF31  F010         	goto	u11170
  9959  00205E                     u11171:
  9960  00205E  EFFD  F00F         	goto	l8852
  9961  002062                     u11170:
  9962  002062                     
  9963                           ; BSR set to: 0
  9964  002062  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9965  002064  EF3E  F010         	goto	u11180
  9966  002068  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  9967  00206A  E106               	bnz	u11181
  9968  00206C  057C               	decf	efgtoa@p& (0+255),w,b
  9969  00206E  B0D8               	btfsc	status,0,c
  9970  002070  EF3C  F010         	goto	u11181
  9971  002074  EF3E  F010         	goto	u11180
  9972  002078                     u11181:
  9973  002078  EFFD  F00F         	goto	l8852
  9974  00207C                     u11180:
  9975  00207C                     
  9976                           ; BSR set to: 0
  9977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9978  00207C  078A               	decf	efgtoa@i& (0+255),f,b
  9979  00207E  A0D8               	btfss	status,0,c
  9980  002080  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  9981  002082                     
  9982                           ; BSR set to: 0
  9983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9984  002082  517A               	movf	efgtoa@sign& (0+255),w,b
  9985  002084  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9986  002086  A4D8               	btfss	status,2,c
  9987  002088  EF48  F010         	goto	u11191
  9988  00208C  EF4A  F010         	goto	u11190
  9989  002090                     u11191:
  9990  002090  EF50  F010         	goto	l8872
  9991  002094                     u11190:
  9992  002094                     
  9993                           ; BSR set to: 0
  9994  002094  0E00               	movlw	0
  9995  002096  6F6B               	movwf	(_efgtoa$1726+1)& (0+255),b
  9996  002098  0E2B               	movlw	43
  9997  00209A  6F6A               	movwf	_efgtoa$1726& (0+255),b
  9998  00209C  EF54  F010         	goto	l8874
  9999  0020A0                     l8872:
 10000                           
 10001                           ; BSR set to: 0
 10002  0020A0  0E00               	movlw	0
 10003  0020A2  6F6B               	movwf	(_efgtoa$1726+1)& (0+255),b
 10004  0020A4  0E2D               	movlw	45
 10005  0020A6  6F6A               	movwf	_efgtoa$1726& (0+255),b
 10006  0020A8                     l8874:
 10007                           
 10008                           ; BSR set to: 0
 10009  0020A8  0E64               	movlw	low _dbuf
 10010  0020AA  258A               	addwf	efgtoa@i& (0+255),w,b
 10011  0020AC  6ED9               	movwf	fsr2l,c
 10012  0020AE  0E01               	movlw	high _dbuf
 10013  0020B0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10014  0020B2  6EDA               	movwf	fsr2h,c
 10015  0020B4  C06A  FFDF         	movff	_efgtoa$1726,indf2
 10016  0020B8                     
 10017                           ; BSR set to: 0
 10018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10019  0020B8  077F               	decf	efgtoa@w& (0+255),f,b
 10020  0020BA  A0D8               	btfss	status,0,c
 10021  0020BC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
 10022  0020BE                     
 10023                           ; BSR set to: 0
 10024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10025  0020BE  078A               	decf	efgtoa@i& (0+255),f,b
 10026  0020C0  A0D8               	btfss	status,0,c
 10027  0020C2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
 10028  0020C4                     
 10029                           ; BSR set to: 0
 10030  0020C4  0EBF               	movlw	191
 10031  0020C6  6E3D               	movwf	??_efgtoa^0,c
 10032  0020C8  0EFF               	movlw	255
 10033  0020CA  6E3E               	movwf	(??_efgtoa+1)^0,c
 10034  0020CC  503C               	movf	efgtoa@c^0,w,c
 10035  0020CE  6E3F               	movwf	(??_efgtoa+2)^0,c
 10036  0020D0  6A40               	clrf	(??_efgtoa+3)^0,c
 10037  0020D2  503D               	movf	??_efgtoa^0,w,c
 10038  0020D4  263F               	addwf	(??_efgtoa+2)^0,f,c
 10039  0020D6  503E               	movf	(??_efgtoa+1)^0,w,c
 10040  0020D8  2240               	addwfc	(??_efgtoa+3)^0,f,c
 10041  0020DA  5040               	movf	(??_efgtoa+3)^0,w,c
 10042  0020DC  E10A               	bnz	u11200
 10043  0020DE  0E1A               	movlw	26
 10044  0020E0  5C3F               	subwf	(??_efgtoa+2)^0,w,c
 10045  0020E2  A0D8               	btfss	status,0,c
 10046  0020E4  EF76  F010         	goto	u11201
 10047  0020E8  EF79  F010         	goto	u11200
 10048  0020EC                     u11201:
 10049  0020EC  0E01               	movlw	1
 10050  0020EE  EF7A  F010         	goto	u11210
 10051  0020F2                     u11200:
 10052  0020F2  0E00               	movlw	0
 10053  0020F4                     u11210:
 10054  0020F4  6F6E               	movwf	_efgtoa$1728& (0+255),b
 10055  0020F6  6B6F               	clrf	(_efgtoa$1728+1)& (0+255),b
 10056  0020F8                     
 10057                           ; BSR set to: 0
 10058  0020F8  516E               	movf	_efgtoa$1728& (0+255),w,b
 10059  0020FA  116F               	iorwf	(_efgtoa$1728+1)& (0+255),w,b
 10060  0020FC  A4D8               	btfss	status,2,c
 10061  0020FE  EF83  F010         	goto	u11221
 10062  002102  EF85  F010         	goto	u11220
 10063  002106                     u11221:
 10064  002106  EF8B  F010         	goto	l8888
 10065  00210A                     u11220:
 10066  00210A                     
 10067                           ; BSR set to: 0
 10068  00210A  0E00               	movlw	0
 10069  00210C  6F6D               	movwf	(_efgtoa$1727+1)& (0+255),b
 10070  00210E  0E65               	movlw	101
 10071  002110  6F6C               	movwf	_efgtoa$1727& (0+255),b
 10072  002112  EF8F  F010         	goto	l8890
 10073  002116                     l8888:
 10074                           
 10075                           ; BSR set to: 0
 10076  002116  0E00               	movlw	0
 10077  002118  6F6D               	movwf	(_efgtoa$1727+1)& (0+255),b
 10078  00211A  0E45               	movlw	69
 10079  00211C  6F6C               	movwf	_efgtoa$1727& (0+255),b
 10080  00211E                     l8890:
 10081                           
 10082                           ; BSR set to: 0
 10083  00211E  0E64               	movlw	low _dbuf
 10084  002120  258A               	addwf	efgtoa@i& (0+255),w,b
 10085  002122  6ED9               	movwf	fsr2l,c
 10086  002124  0E01               	movlw	high _dbuf
 10087  002126  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10088  002128  6EDA               	movwf	fsr2h,c
 10089  00212A  C06C  FFDF         	movff	_efgtoa$1727,indf2
 10090  00212E                     
 10091                           ; BSR set to: 0
 10092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10093  00212E  077F               	decf	efgtoa@w& (0+255),f,b
 10094  002130  A0D8               	btfss	status,0,c
 10095  002132  0780               	decf	(efgtoa@w+1)& (0+255),f,b
 10096  002134                     
 10097                           ; BSR set to: 0
 10098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10099  002134  0E64               	movlw	low _dbuf
 10100  002136  2592               	addwf	efgtoa@n& (0+255),w,b
 10101  002138  6E03               	movwf	strcpy@dest^0,c
 10102  00213A  0E01               	movlw	high _dbuf
 10103  00213C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10104  00213E  6E04               	movwf	(strcpy@dest+1)^0,c
 10105  002140  0E64               	movlw	low _dbuf
 10106  002142  258A               	addwf	efgtoa@i& (0+255),w,b
 10107  002144  6E05               	movwf	strcpy@src^0,c
 10108  002146  0E01               	movlw	high _dbuf
 10109  002148  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10110  00214A  6E06               	movwf	(strcpy@src+1)^0,c
 10111  00214C  ECB4  F02C         	call	_strcpy	;wreg free
 10112  002150  EF85  F00B         	goto	l8646
 10113  002154                     l709:
 10114  002154  0012               	return		;funcret
 10115  002156                     __end_of_efgtoa:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _tolower *****************
 10119 ;; Defined at:
 10120 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  c               2    8[COMRAM] int 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  2    8[COMRAM] int 
 10127 ;; Registers used:
 10128 ;;		wreg, status,2, status,0
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10138 ;;Total ram usage:        8 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    5
 10141 ;; This function calls:
 10142 ;;		_isupper
 10143 ;; This function is called by:
 10144 ;;		_efgtoa
 10145 ;;		_vfpfcnvrt
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text16
 10150  0058AA                     __ptext16:
 10151                           	opt callstack 0
 10152  0058AA                     _tolower:
 10153                           	opt callstack 21
 10154  0058AA  0EBF               	movlw	191
 10155  0058AC  6E0B               	movwf	??_tolower^0,c
 10156  0058AE  0EFF               	movlw	255
 10157  0058B0  6E0C               	movwf	(??_tolower+1)^0,c
 10158  0058B2  C009  F00D         	movff	tolower@c,??_tolower+2
 10159  0058B6  C00A  F00E         	movff	tolower@c+1,??_tolower+3
 10160  0058BA  500B               	movf	??_tolower^0,w,c
 10161  0058BC  260D               	addwf	(??_tolower+2)^0,f,c
 10162  0058BE  500C               	movf	(??_tolower+1)^0,w,c
 10163  0058C0  220E               	addwfc	(??_tolower+3)^0,f,c
 10164  0058C2  500E               	movf	(??_tolower+3)^0,w,c
 10165  0058C4  E10A               	bnz	u9430
 10166  0058C6  0E1A               	movlw	26
 10167  0058C8  5C0D               	subwf	(??_tolower+2)^0,w,c
 10168  0058CA  A0D8               	btfss	status,0,c
 10169  0058CC  EF6A  F02C         	goto	u9431
 10170  0058D0  EF6D  F02C         	goto	u9430
 10171  0058D4                     u9431:
 10172  0058D4  0E01               	movlw	1
 10173  0058D6  EF6E  F02C         	goto	u9440
 10174  0058DA                     u9430:
 10175  0058DA  0E00               	movlw	0
 10176  0058DC                     u9440:
 10177  0058DC  6E0F               	movwf	_tolower$2485^0,c
 10178  0058DE  6A10               	clrf	(_tolower$2485+1)^0,c
 10179  0058E0  500F               	movf	_tolower$2485^0,w,c
 10180  0058E2  1010               	iorwf	(_tolower$2485+1)^0,w,c
 10181  0058E4  B4D8               	btfsc	status,2,c
 10182  0058E6  EF77  F02C         	goto	u9451
 10183  0058EA  EF79  F02C         	goto	u9450
 10184  0058EE                     u9451:
 10185  0058EE  EF80  F02C         	goto	l1776
 10186  0058F2                     u9450:
 10187  0058F2  0E20               	movlw	32
 10188  0058F4  1009               	iorwf	tolower@c^0,w,c
 10189  0058F6  6E09               	movwf	?_tolower^0,c
 10190  0058F8  500A               	movf	(tolower@c+1)^0,w,c
 10191  0058FA  6E0A               	movwf	(?_tolower+1)^0,c
 10192  0058FC  EF84  F02C         	goto	l1781
 10193  005900                     l1776:
 10194  005900  C009  F009         	movff	tolower@c,?_tolower
 10195  005904  C00A  F00A         	movff	tolower@c+1,?_tolower+1
 10196  005908                     l1781:
 10197  005908  0012               	return		;funcret
 10198  00590A                     __end_of_tolower:
 10199                           	opt callstack 0
 10200                           
 10201 ;; *************** function _isupper *****************
 10202 ;; Defined at:
 10203 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  c               2    2[COMRAM] int 
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;		None
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  2    2[COMRAM] int 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10220 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10221 ;;Total ram usage:        6 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:    4
 10224 ;; This function calls:
 10225 ;;		Nothing
 10226 ;; This function is called by:
 10227 ;;		_efgtoa
 10228 ;;		_xtoa
 10229 ;;		_vfpfcnvrt
 10230 ;;		_tolower
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text17
 10235  005CCA                     __ptext17:
 10236                           	opt callstack 0
 10237  005CCA                     _isupper:
 10238                           	opt callstack 21
 10239  005CCA  0EBF               	movlw	191
 10240  005CCC  6E05               	movwf	??_isupper^0,c
 10241  005CCE  0EFF               	movlw	255
 10242  005CD0  6E06               	movwf	(??_isupper+1)^0,c
 10243  005CD2  C003  F007         	movff	isupper@c,??_isupper+2
 10244  005CD6  C004  F008         	movff	isupper@c+1,??_isupper+3
 10245  005CDA  5005               	movf	??_isupper^0,w,c
 10246  005CDC  2607               	addwf	(??_isupper+2)^0,f,c
 10247  005CDE  5006               	movf	(??_isupper+1)^0,w,c
 10248  005CE0  2208               	addwfc	(??_isupper+3)^0,f,c
 10249  005CE2  5008               	movf	(??_isupper+3)^0,w,c
 10250  005CE4  E10A               	bnz	u8860
 10251  005CE6  0E1A               	movlw	26
 10252  005CE8  5C07               	subwf	(??_isupper+2)^0,w,c
 10253  005CEA  A0D8               	btfss	status,0,c
 10254  005CEC  EF7A  F02E         	goto	u8861
 10255  005CF0  EF7D  F02E         	goto	u8860
 10256  005CF4                     u8861:
 10257  005CF4  0E01               	movlw	1
 10258  005CF6  EF7E  F02E         	goto	u8870
 10259  005CFA                     u8860:
 10260  005CFA  0E00               	movlw	0
 10261  005CFC                     u8870:
 10262  005CFC  6E03               	movwf	?_isupper^0,c
 10263  005CFE  6A04               	clrf	(?_isupper+1)^0,c
 10264  005D00  0012               	return		;funcret
 10265  005D02                     __end_of_isupper:
 10266                           	opt callstack 0
 10267                           
 10268 ;; *************** function _strcpy *****************
 10269 ;; Defined at:
 10270 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;  dest            2    2[COMRAM] PTR unsigned char 
 10273 ;;		 -> dbuf(80), 
 10274 ;;  src             2    4[COMRAM] PTR const unsigned char 
 10275 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
 10276 ;;		 -> dbuf(80), 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  d               2   10[COMRAM] PTR unsigned char 
 10279 ;;		 -> dbuf(80), 
 10280 ;;  s               2    8[COMRAM] PTR const unsigned char 
 10281 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
 10282 ;;		 -> dbuf(80), 
 10283 ;; Return value:  Size  Location     Type
 10284 ;;                  2    2[COMRAM] PTR unsigned char 
 10285 ;; Registers used:
 10286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10287 ;; Tracked objects:
 10288 ;;		On entry : 0/0
 10289 ;;		On exit  : 0/0
 10290 ;;		Unchanged: 0/0
 10291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10293 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10295 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10296 ;;Total ram usage:       10 bytes
 10297 ;; Hardware stack levels used:    1
 10298 ;; Hardware stack levels required when called:    4
 10299 ;; This function calls:
 10300 ;;		Nothing
 10301 ;; This function is called by:
 10302 ;;		_efgtoa
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           	psect	text18
 10307  005968                     __ptext18:
 10308                           	opt callstack 0
 10309  005968                     _strcpy:
 10310                           	opt callstack 21
 10311  005968  C005  F009         	movff	strcpy@src,strcpy@s
 10312  00596C  C006  F00A         	movff	strcpy@src+1,strcpy@s+1
 10313  005970  C003  F00B         	movff	strcpy@dest,strcpy@d
 10314  005974  C004  F00C         	movff	strcpy@dest+1,strcpy@d+1
 10315  005978                     l7888:
 10316  005978  5009               	movf	strcpy@s^0,w,c
 10317  00597A  6E07               	movwf	??_strcpy^0,c
 10318  00597C  500A               	movf	(strcpy@s+1)^0,w,c
 10319  00597E  6E08               	movwf	(??_strcpy+1)^0,c
 10320  005980  4A09               	infsnz	strcpy@s^0,f,c
 10321  005982  2A0A               	incf	(strcpy@s+1)^0,f,c
 10322  005984  C007  FFF6         	movff	??_strcpy,tblptrl
 10323  005988  C008  FFF7         	movff	??_strcpy+1,tblptrh
 10324  00598C  0E00               	movlw	low (__mediumconst shr (0+16))
 10325  00598E  6EF8               	movwf	tblptru,c
 10326  005990  C00B  FFD9         	movff	strcpy@d,fsr2l
 10327  005994  C00C  FFDA         	movff	strcpy@d+1,fsr2h
 10328  005998  4A0B               	infsnz	strcpy@d^0,f,c
 10329  00599A  2A0C               	incf	(strcpy@d+1)^0,f,c
 10330  00599C  0E0E               	movlw	(high __ramtop+-1)
 10331  00599E  64F7               	cpfsgt	tblptrh,c
 10332  0059A0  D003               	bra	u9417
 10333  0059A2  0008               	tblrd		*
 10334  0059A4  50F5               	movf	tablat,w,c
 10335  0059A6  D005               	bra	u9410
 10336  0059A8                     u9417:
 10337  0059A8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10338  0059AC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10339  0059B0  50E7               	movf	indf1,w,c
 10340  0059B2                     u9410:
 10341  0059B2  6EDF               	movwf	indf2,c
 10342  0059B4  50DF               	movf	indf2,w,c
 10343  0059B6  A4D8               	btfss	status,2,c
 10344  0059B8  EFE0  F02C         	goto	u9421
 10345  0059BC  EFE2  F02C         	goto	u9420
 10346  0059C0                     u9421:
 10347  0059C0  EFBC  F02C         	goto	l7888
 10348  0059C4                     u9420:
 10349  0059C4  0012               	return		;funcret
 10350  0059C6                     __end_of_strcpy:
 10351                           	opt callstack 0
 10352                           
 10353 ;; *************** function _floorf *****************
 10354 ;; Defined at:
 10355 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  x               4   27[COMRAM] float 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  u               4   43[COMRAM] struct .
 10360 ;;  m               4   37[COMRAM] unsigned long 
 10361 ;;  e               2   41[COMRAM] int 
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  4   27[COMRAM] float 
 10364 ;; Registers used:
 10365 ;;		wreg, status,2, status,0
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10372 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10373 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10374 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10375 ;;Total ram usage:       20 bytes
 10376 ;; Hardware stack levels used:    1
 10377 ;; Hardware stack levels required when called:    4
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_efgtoa
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text19
 10386  003926                     __ptext19:
 10387                           	opt callstack 0
 10388  003926                     _floorf:
 10389                           	opt callstack 21
 10390  003926  C0DC  F02C         	movff	floorf@F524,floorf@u
 10391  00392A  C0DD  F02D         	movff	floorf@F524+1,floorf@u+1
 10392  00392E  C0DE  F02E         	movff	floorf@F524+2,floorf@u+2
 10393  003932  C0DF  F02F         	movff	floorf@F524+3,floorf@u+3
 10394  003936  C01C  F02C         	movff	floorf@x,floorf@u
 10395  00393A  C01D  F02D         	movff	floorf@x+1,floorf@u+1
 10396  00393E  C01E  F02E         	movff	floorf@x+2,floorf@u+2
 10397  003942  C01F  F02F         	movff	floorf@x+3,floorf@u+3
 10398  003946  0E81               	movlw	129
 10399  003948  6E20               	movwf	??_floorf^0,c
 10400  00394A  0EFF               	movlw	255
 10401  00394C  6E21               	movwf	(??_floorf+1)^0,c
 10402  00394E  C02C  F022         	movff	floorf@u,??_floorf+2
 10403  003952  C02D  F023         	movff	floorf@u+1,??_floorf+3
 10404  003956  C02E  F024         	movff	floorf@u+2,??_floorf+4
 10405  00395A  C02F  F025         	movff	floorf@u+3,??_floorf+5
 10406  00395E  0E18               	movlw	24
 10407  003960  EFB7  F01C         	goto	u9460
 10408  003964                     u9465:
 10409  003964  90D8               	bcf	status,0,c
 10410  003966  3225               	rrcf	(??_floorf+5)^0,f,c
 10411  003968  3224               	rrcf	(??_floorf+4)^0,f,c
 10412  00396A  3223               	rrcf	(??_floorf+3)^0,f,c
 10413  00396C  3222               	rrcf	(??_floorf+2)^0,f,c
 10414  00396E                     u9460:
 10415  00396E  2EE8               	decfsz	wreg,f,c
 10416  003970  EFB2  F01C         	goto	u9465
 10417  003974  5022               	movf	(??_floorf+2)^0,w,c
 10418  003976  2420               	addwf	??_floorf^0,w,c
 10419  003978  6E2A               	movwf	floorf@e^0,c
 10420  00397A  0E00               	movlw	0
 10421  00397C  2021               	addwfc	(??_floorf+1)^0,w,c
 10422  00397E  6E2B               	movwf	(floorf@e+1)^0,c
 10423  003980  BE2B               	btfsc	(floorf@e+1)^0,7,c
 10424  003982  EFCC  F01C         	goto	u9471
 10425  003986  502B               	movf	(floorf@e+1)^0,w,c
 10426  003988  E109               	bnz	u9470
 10427  00398A  0E17               	movlw	23
 10428  00398C  5C2A               	subwf	floorf@e^0,w,c
 10429  00398E  A0D8               	btfss	status,0,c
 10430  003990  EFCC  F01C         	goto	u9471
 10431  003994  EFCE  F01C         	goto	u9470
 10432  003998                     u9471:
 10433  003998  EFD8  F01C         	goto	l7906
 10434  00399C                     u9470:
 10435  00399C                     l7904:
 10436  00399C  C01C  F01C         	movff	floorf@x,?_floorf
 10437  0039A0  C01D  F01D         	movff	floorf@x+1,?_floorf+1
 10438  0039A4  C01E  F01E         	movff	floorf@x+2,?_floorf+2
 10439  0039A8  C01F  F01F         	movff	floorf@x+3,?_floorf+3
 10440  0039AC  EF9B  F01D         	goto	l1687
 10441  0039B0                     l7906:
 10442  0039B0  BE2B               	btfsc	(floorf@e+1)^0,7,c
 10443  0039B2  EFDD  F01C         	goto	u9481
 10444  0039B6  EFDF  F01C         	goto	u9480
 10445  0039BA                     u9481:
 10446  0039BA  EF4F  F01D         	goto	l7916
 10447  0039BE                     u9480:
 10448  0039BE  C02A  F020         	movff	floorf@e,??_floorf
 10449  0039C2  0EFF               	movlw	255
 10450  0039C4  6E21               	movwf	(??_floorf+1)^0,c
 10451  0039C6  0EFF               	movlw	255
 10452  0039C8  6E22               	movwf	(??_floorf+2)^0,c
 10453  0039CA  0E7F               	movlw	127
 10454  0039CC  6E23               	movwf	(??_floorf+3)^0,c
 10455  0039CE  0E00               	movlw	0
 10456  0039D0  6E24               	movwf	(??_floorf+4)^0,c
 10457  0039D2                     u9495:
 10458  0039D2  6620               	tstfsz	??_floorf^0,c
 10459  0039D4  EFEE  F01C         	goto	u9496
 10460  0039D8  EFF6  F01C         	goto	u9497
 10461  0039DC                     u9496:
 10462  0039DC  3424               	rlcf	(??_floorf+4)^0,w,c
 10463  0039DE  3224               	rrcf	(??_floorf+4)^0,f,c
 10464  0039E0  3223               	rrcf	(??_floorf+3)^0,f,c
 10465  0039E2  3222               	rrcf	(??_floorf+2)^0,f,c
 10466  0039E4  3221               	rrcf	(??_floorf+1)^0,f,c
 10467  0039E6  2E20               	decfsz	??_floorf^0,f,c
 10468  0039E8  EFE9  F01C         	goto	u9495
 10469  0039EC                     u9497:
 10470  0039EC  C021  F026         	movff	??_floorf+1,floorf@m
 10471  0039F0  C022  F027         	movff	??_floorf+2,floorf@m+1
 10472  0039F4  C023  F028         	movff	??_floorf+3,floorf@m+2
 10473  0039F8  C024  F029         	movff	??_floorf+4,floorf@m+3
 10474  0039FC  5026               	movf	floorf@m^0,w,c
 10475  0039FE  142C               	andwf	floorf@u^0,w,c
 10476  003A00  6E20               	movwf	??_floorf^0,c
 10477  003A02  5027               	movf	(floorf@m+1)^0,w,c
 10478  003A04  142D               	andwf	(floorf@u+1)^0,w,c
 10479  003A06  6E21               	movwf	(??_floorf+1)^0,c
 10480  003A08  5028               	movf	(floorf@m+2)^0,w,c
 10481  003A0A  142E               	andwf	(floorf@u+2)^0,w,c
 10482  003A0C  6E22               	movwf	(??_floorf+2)^0,c
 10483  003A0E  5029               	movf	(floorf@m+3)^0,w,c
 10484  003A10  142F               	andwf	(floorf@u+3)^0,w,c
 10485  003A12  6E23               	movwf	(??_floorf+3)^0,c
 10486  003A14  5020               	movf	??_floorf^0,w,c
 10487  003A16  1021               	iorwf	(??_floorf+1)^0,w,c
 10488  003A18  1022               	iorwf	(??_floorf+2)^0,w,c
 10489  003A1A  1023               	iorwf	(??_floorf+3)^0,w,c
 10490  003A1C  A4D8               	btfss	status,2,c
 10491  003A1E  EF13  F01D         	goto	u9501
 10492  003A22  EF15  F01D         	goto	u9500
 10493  003A26                     u9501:
 10494  003A26  EF17  F01D         	goto	l7912
 10495  003A2A                     u9500:
 10496  003A2A  EFCE  F01C         	goto	l7904
 10497  003A2E                     l7912:
 10498  003A2E  C02C  F020         	movff	floorf@u,??_floorf
 10499  003A32  C02D  F021         	movff	floorf@u+1,??_floorf+1
 10500  003A36  C02E  F022         	movff	floorf@u+2,??_floorf+2
 10501  003A3A  C02F  F023         	movff	floorf@u+3,??_floorf+3
 10502  003A3E  0E20               	movlw	32
 10503  003A40  EF27  F01D         	goto	u9510
 10504  003A44                     u9515:
 10505  003A44  90D8               	bcf	status,0,c
 10506  003A46  3223               	rrcf	(??_floorf+3)^0,f,c
 10507  003A48  3222               	rrcf	(??_floorf+2)^0,f,c
 10508  003A4A  3221               	rrcf	(??_floorf+1)^0,f,c
 10509  003A4C  3220               	rrcf	??_floorf^0,f,c
 10510  003A4E                     u9510:
 10511  003A4E  2EE8               	decfsz	wreg,f,c
 10512  003A50  EF22  F01D         	goto	u9515
 10513  003A54  5020               	movf	??_floorf^0,w,c
 10514  003A56  1021               	iorwf	(??_floorf+1)^0,w,c
 10515  003A58  1022               	iorwf	(??_floorf+2)^0,w,c
 10516  003A5A  1023               	iorwf	(??_floorf+3)^0,w,c
 10517  003A5C  B4D8               	btfsc	status,2,c
 10518  003A5E  EF33  F01D         	goto	u9521
 10519  003A62  EF35  F01D         	goto	u9520
 10520  003A66                     u9521:
 10521  003A66  EF3D  F01D         	goto	l1690
 10522  003A6A                     u9520:
 10523  003A6A  5026               	movf	floorf@m^0,w,c
 10524  003A6C  262C               	addwf	floorf@u^0,f,c
 10525  003A6E  5027               	movf	(floorf@m+1)^0,w,c
 10526  003A70  222D               	addwfc	(floorf@u+1)^0,f,c
 10527  003A72  5028               	movf	(floorf@m+2)^0,w,c
 10528  003A74  222E               	addwfc	(floorf@u+2)^0,f,c
 10529  003A76  5029               	movf	(floorf@m+3)^0,w,c
 10530  003A78  222F               	addwfc	(floorf@u+3)^0,f,c
 10531  003A7A                     l1690:
 10532  003A7A  1C26               	comf	floorf@m^0,w,c
 10533  003A7C  6E20               	movwf	??_floorf^0,c
 10534  003A7E  1C27               	comf	(floorf@m+1)^0,w,c
 10535  003A80  6E21               	movwf	(??_floorf+1)^0,c
 10536  003A82  1C28               	comf	(floorf@m+2)^0,w,c
 10537  003A84  6E22               	movwf	(??_floorf+2)^0,c
 10538  003A86  1C29               	comf	(floorf@m+3)^0,w,c
 10539  003A88  6E23               	movwf	(??_floorf+3)^0,c
 10540  003A8A  5020               	movf	??_floorf^0,w,c
 10541  003A8C  162C               	andwf	floorf@u^0,f,c
 10542  003A8E  5021               	movf	(??_floorf+1)^0,w,c
 10543  003A90  162D               	andwf	(floorf@u+1)^0,f,c
 10544  003A92  5022               	movf	(??_floorf+2)^0,w,c
 10545  003A94  162E               	andwf	(floorf@u+2)^0,f,c
 10546  003A96  5023               	movf	(??_floorf+3)^0,w,c
 10547  003A98  162F               	andwf	(floorf@u+3)^0,f,c
 10548  003A9A  EF93  F01D         	goto	l7924
 10549  003A9E                     l7916:
 10550  003A9E  C02C  F020         	movff	floorf@u,??_floorf
 10551  003AA2  C02D  F021         	movff	floorf@u+1,??_floorf+1
 10552  003AA6  C02E  F022         	movff	floorf@u+2,??_floorf+2
 10553  003AAA  C02F  F023         	movff	floorf@u+3,??_floorf+3
 10554  003AAE  0E20               	movlw	32
 10555  003AB0  EF5F  F01D         	goto	u9530
 10556  003AB4                     u9535:
 10557  003AB4  90D8               	bcf	status,0,c
 10558  003AB6  3223               	rrcf	(??_floorf+3)^0,f,c
 10559  003AB8  3222               	rrcf	(??_floorf+2)^0,f,c
 10560  003ABA  3221               	rrcf	(??_floorf+1)^0,f,c
 10561  003ABC  3220               	rrcf	??_floorf^0,f,c
 10562  003ABE                     u9530:
 10563  003ABE  2EE8               	decfsz	wreg,f,c
 10564  003AC0  EF5A  F01D         	goto	u9535
 10565  003AC4  5020               	movf	??_floorf^0,w,c
 10566  003AC6  1021               	iorwf	(??_floorf+1)^0,w,c
 10567  003AC8  1022               	iorwf	(??_floorf+2)^0,w,c
 10568  003ACA  1023               	iorwf	(??_floorf+3)^0,w,c
 10569  003ACC  A4D8               	btfss	status,2,c
 10570  003ACE  EF6B  F01D         	goto	u9541
 10571  003AD2  EF6D  F01D         	goto	u9540
 10572  003AD6                     u9541:
 10573  003AD6  EF77  F01D         	goto	l7920
 10574  003ADA                     u9540:
 10575  003ADA  0E00               	movlw	0
 10576  003ADC  6E2C               	movwf	floorf@u^0,c
 10577  003ADE  0E00               	movlw	0
 10578  003AE0  6E2D               	movwf	(floorf@u+1)^0,c
 10579  003AE2  0E00               	movlw	0
 10580  003AE4  6E2E               	movwf	(floorf@u+2)^0,c
 10581  003AE6  0E00               	movlw	0
 10582  003AE8  6E2F               	movwf	(floorf@u+3)^0,c
 10583  003AEA  EF93  F01D         	goto	l7924
 10584  003AEE                     l7920:
 10585  003AEE  90D8               	bcf	status,0,c
 10586  003AF0  342C               	rlcf	floorf@u^0,w,c
 10587  003AF2  6E20               	movwf	??_floorf^0,c
 10588  003AF4  342D               	rlcf	(floorf@u+1)^0,w,c
 10589  003AF6  6E21               	movwf	(??_floorf+1)^0,c
 10590  003AF8  342E               	rlcf	(floorf@u+2)^0,w,c
 10591  003AFA  6E22               	movwf	(??_floorf+2)^0,c
 10592  003AFC  342F               	rlcf	(floorf@u+3)^0,w,c
 10593  003AFE  6E23               	movwf	(??_floorf+3)^0,c
 10594  003B00  5020               	movf	??_floorf^0,w,c
 10595  003B02  1021               	iorwf	(??_floorf+1)^0,w,c
 10596  003B04  1022               	iorwf	(??_floorf+2)^0,w,c
 10597  003B06  1023               	iorwf	(??_floorf+3)^0,w,c
 10598  003B08  B4D8               	btfsc	status,2,c
 10599  003B0A  EF89  F01D         	goto	u9551
 10600  003B0E  EF8B  F01D         	goto	u9550
 10601  003B12                     u9551:
 10602  003B12  EF93  F01D         	goto	l7924
 10603  003B16                     u9550:
 10604  003B16  0E00               	movlw	0
 10605  003B18  6E2C               	movwf	floorf@u^0,c
 10606  003B1A  0E00               	movlw	0
 10607  003B1C  6E2D               	movwf	(floorf@u+1)^0,c
 10608  003B1E  0E80               	movlw	128
 10609  003B20  6E2E               	movwf	(floorf@u+2)^0,c
 10610  003B22  0EBF               	movlw	191
 10611  003B24  6E2F               	movwf	(floorf@u+3)^0,c
 10612  003B26                     l7924:
 10613  003B26  C02C  F01C         	movff	floorf@u,?_floorf
 10614  003B2A  C02D  F01D         	movff	floorf@u+1,?_floorf+1
 10615  003B2E  C02E  F01E         	movff	floorf@u+2,?_floorf+2
 10616  003B32  C02F  F01F         	movff	floorf@u+3,?_floorf+3
 10617  003B36                     l1687:
 10618  003B36  0012               	return		;funcret
 10619  003B38                     __end_of_floorf:
 10620                           	opt callstack 0
 10621                           
 10622 ;; *************** function ___fpclassifyf *****************
 10623 ;; Defined at:
 10624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  x               4    2[COMRAM] float 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;  u               4   12[COMRAM] struct .
 10629 ;;  e               2   10[COMRAM] int 
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  2    2[COMRAM] int 
 10632 ;; Registers used:
 10633 ;;		wreg, status,2, status,0
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10640 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10642 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10643 ;;Total ram usage:       14 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:    4
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_efgtoa
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text20
 10654  00503E                     __ptext20:
 10655                           	opt callstack 0
 10656  00503E                     ___fpclassifyf:
 10657                           	opt callstack 21
 10658  00503E  C0E0  F00D         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10659  005042  C0E1  F00E         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10660  005046  C0E2  F00F         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10661  00504A  C0E3  F010         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10662  00504E  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
 10663  005052  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10664  005056  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10665  00505A  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10666  00505E  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 10667  005062  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10668  005066  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10669  00506A  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10670  00506E  0E18               	movlw	24
 10671  005070  EF3F  F028         	goto	u9340
 10672  005074                     u9345:
 10673  005074  90D8               	bcf	status,0,c
 10674  005076  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
 10675  005078  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
 10676  00507A  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
 10677  00507C  3207               	rrcf	??___fpclassifyf^0,f,c
 10678  00507E                     u9340:
 10679  00507E  2EE8               	decfsz	wreg,f,c
 10680  005080  EF3A  F028         	goto	u9345
 10681  005084  5007               	movf	??___fpclassifyf^0,w,c
 10682  005086  6E0B               	movwf	___fpclassifyf@e^0,c
 10683  005088  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
 10684  00508A  500B               	movf	___fpclassifyf@e^0,w,c
 10685  00508C  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10686  00508E  A4D8               	btfss	status,2,c
 10687  005090  EF4C  F028         	goto	u9351
 10688  005094  EF4E  F028         	goto	u9350
 10689  005098                     u9351:
 10690  005098  EF6E  F028         	goto	l7876
 10691  00509C                     u9350:
 10692  00509C  90D8               	bcf	status,0,c
 10693  00509E  340D               	rlcf	___fpclassifyf@u^0,w,c
 10694  0050A0  6E07               	movwf	??___fpclassifyf^0,c
 10695  0050A2  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10696  0050A4  6E08               	movwf	(??___fpclassifyf+1)^0,c
 10697  0050A6  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10698  0050A8  6E09               	movwf	(??___fpclassifyf+2)^0,c
 10699  0050AA  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10700  0050AC  6E0A               	movwf	(??___fpclassifyf+3)^0,c
 10701  0050AE  5007               	movf	??___fpclassifyf^0,w,c
 10702  0050B0  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 10703  0050B2  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 10704  0050B4  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 10705  0050B6  A4D8               	btfss	status,2,c
 10706  0050B8  EF60  F028         	goto	u9361
 10707  0050BC  EF62  F028         	goto	u9360
 10708  0050C0                     u9361:
 10709  0050C0  EF68  F028         	goto	l7872
 10710  0050C4                     u9360:
 10711  0050C4  0E00               	movlw	0
 10712  0050C6  6E04               	movwf	(?___fpclassifyf+1)^0,c
 10713  0050C8  0E02               	movlw	2
 10714  0050CA  6E03               	movwf	?___fpclassifyf^0,c
 10715  0050CC  EF9D  F028         	goto	l1642
 10716  0050D0                     l7872:
 10717  0050D0  0E00               	movlw	0
 10718  0050D2  6E04               	movwf	(?___fpclassifyf+1)^0,c
 10719  0050D4  0E03               	movlw	3
 10720  0050D6  6E03               	movwf	?___fpclassifyf^0,c
 10721  0050D8  EF9D  F028         	goto	l1642
 10722  0050DC                     l7876:
 10723  0050DC  280B               	incf	___fpclassifyf@e^0,w,c
 10724  0050DE  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10725  0050E0  A4D8               	btfss	status,2,c
 10726  0050E2  EF75  F028         	goto	u9371
 10727  0050E6  EF77  F028         	goto	u9370
 10728  0050EA                     u9371:
 10729  0050EA  EF99  F028         	goto	l7882
 10730  0050EE                     u9370:
 10731  0050EE  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
 10732  0050F2  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10733  0050F6  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10734  0050FA  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10735  0050FE  0E09               	movlw	9
 10736  005100                     u9385:
 10737  005100  90D8               	bcf	status,0,c
 10738  005102  3607               	rlcf	??___fpclassifyf^0,f,c
 10739  005104  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
 10740  005106  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
 10741  005108  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
 10742  00510A  2EE8               	decfsz	wreg,f,c
 10743  00510C  EF80  F028         	goto	u9385
 10744  005110  5007               	movf	??___fpclassifyf^0,w,c
 10745  005112  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
 10746  005114  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
 10747  005116  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
 10748  005118  B4D8               	btfsc	status,2,c
 10749  00511A  EF91  F028         	goto	u9391
 10750  00511E  EF94  F028         	goto	u9390
 10751  005122                     u9391:
 10752  005122  0E01               	movlw	1
 10753  005124  EF95  F028         	goto	u9400
 10754  005128                     u9390:
 10755  005128  0E00               	movlw	0
 10756  00512A                     u9400:
 10757  00512A  6E03               	movwf	?___fpclassifyf^0,c
 10758  00512C  6A04               	clrf	(?___fpclassifyf+1)^0,c
 10759  00512E  EF9D  F028         	goto	l1642
 10760  005132                     l7882:
 10761  005132  0E00               	movlw	0
 10762  005134  6E04               	movwf	(?___fpclassifyf+1)^0,c
 10763  005136  0E04               	movlw	4
 10764  005138  6E03               	movwf	?___fpclassifyf^0,c
 10765  00513A                     l1642:
 10766  00513A  0012               	return		;funcret
 10767  00513C                     __end_of___fpclassifyf:
 10768                           	opt callstack 0
 10769                           
 10770 ;; *************** function ___fltol *****************
 10771 ;; Defined at:
 10772 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  f1              4    2[COMRAM] int 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  exp1            1   11[COMRAM] unsigned char 
 10777 ;;  sign1           1   10[COMRAM] unsigned char 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  4    2[COMRAM] long 
 10780 ;; Registers used:
 10781 ;;		wreg, status,2, status,0
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10790 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10791 ;;Total ram usage:       10 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; Hardware stack levels required when called:    4
 10794 ;; This function calls:
 10795 ;;		Nothing
 10796 ;; This function is called by:
 10797 ;;		_efgtoa
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text21
 10802  004E34                     __ptext21:
 10803                           	opt callstack 0
 10804  004E34                     ___fltol:
 10805                           	opt callstack 21
 10806  004E34  3405               	rlcf	(___fltol@f1+2)^0,w,c
 10807  004E36  3406               	rlcf	(___fltol@f1+3)^0,w,c
 10808  004E38  6E0C               	movwf	___fltol@exp1^0,c
 10809  004E3A  500C               	movf	___fltol@exp1^0,w,c
 10810  004E3C  A4D8               	btfss	status,2,c
 10811  004E3E  EF23  F027         	goto	u10391
 10812  004E42  EF25  F027         	goto	u10390
 10813  004E46                     u10391:
 10814  004E46  EF2F  F027         	goto	l8438
 10815  004E4A                     u10390:
 10816  004E4A                     l8434:
 10817  004E4A  0E00               	movlw	0
 10818  004E4C  6E03               	movwf	?___fltol^0,c
 10819  004E4E  0E00               	movlw	0
 10820  004E50  6E04               	movwf	(?___fltol+1)^0,c
 10821  004E52  0E00               	movlw	0
 10822  004E54  6E05               	movwf	(?___fltol+2)^0,c
 10823  004E56  0E00               	movlw	0
 10824  004E58  6E06               	movwf	(?___fltol+3)^0,c
 10825  004E5A  EF9C  F027         	goto	l1258
 10826  004E5E                     l8438:
 10827  004E5E  C003  F007         	movff	___fltol@f1,??___fltol
 10828  004E62  C004  F008         	movff	___fltol@f1+1,??___fltol+1
 10829  004E66  C005  F009         	movff	___fltol@f1+2,??___fltol+2
 10830  004E6A  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
 10831  004E6E  0E20               	movlw	32
 10832  004E70  EF3F  F027         	goto	u10400
 10833  004E74                     u10405:
 10834  004E74  90D8               	bcf	status,0,c
 10835  004E76  320A               	rrcf	(??___fltol+3)^0,f,c
 10836  004E78  3209               	rrcf	(??___fltol+2)^0,f,c
 10837  004E7A  3208               	rrcf	(??___fltol+1)^0,f,c
 10838  004E7C  3207               	rrcf	??___fltol^0,f,c
 10839  004E7E                     u10400:
 10840  004E7E  2EE8               	decfsz	wreg,f,c
 10841  004E80  EF3A  F027         	goto	u10405
 10842  004E84  5007               	movf	??___fltol^0,w,c
 10843  004E86  6E0B               	movwf	___fltol@sign1^0,c
 10844  004E88  8E05               	bsf	(___fltol@f1+2)^0,7,c
 10845  004E8A  0EFF               	movlw	255
 10846  004E8C  1603               	andwf	___fltol@f1^0,f,c
 10847  004E8E  0EFF               	movlw	255
 10848  004E90  1604               	andwf	(___fltol@f1+1)^0,f,c
 10849  004E92  0EFF               	movlw	255
 10850  004E94  1605               	andwf	(___fltol@f1+2)^0,f,c
 10851  004E96  0E00               	movlw	0
 10852  004E98  1606               	andwf	(___fltol@f1+3)^0,f,c
 10853  004E9A  0E96               	movlw	150
 10854  004E9C  5E0C               	subwf	___fltol@exp1^0,f,c
 10855  004E9E  BE0C               	btfsc	___fltol@exp1^0,7,c
 10856  004EA0  EF56  F027         	goto	u10410
 10857  004EA4  EF54  F027         	goto	u10411
 10858  004EA8                     u10411:
 10859  004EA8  EF6C  F027         	goto	l8458
 10860  004EAC                     u10410:
 10861  004EAC  500C               	movf	___fltol@exp1^0,w,c
 10862  004EAE  0A80               	xorlw	128
 10863  004EB0  0F97               	addlw	151
 10864  004EB2  B0D8               	btfsc	status,0,c
 10865  004EB4  EF5E  F027         	goto	u10421
 10866  004EB8  EF60  F027         	goto	u10420
 10867  004EBC                     u10421:
 10868  004EBC  EF62  F027         	goto	l8454
 10869  004EC0                     u10420:
 10870  004EC0  EF25  F027         	goto	l8434
 10871  004EC4                     l8454:
 10872  004EC4  90D8               	bcf	status,0,c
 10873  004EC6  3206               	rrcf	(___fltol@f1+3)^0,f,c
 10874  004EC8  3205               	rrcf	(___fltol@f1+2)^0,f,c
 10875  004ECA  3204               	rrcf	(___fltol@f1+1)^0,f,c
 10876  004ECC  3203               	rrcf	___fltol@f1^0,f,c
 10877  004ECE  3E0C               	incfsz	___fltol@exp1^0,f,c
 10878  004ED0  EF62  F027         	goto	l8454
 10879  004ED4  EF84  F027         	goto	l8468
 10880  004ED8                     l8458:
 10881  004ED8  0E1F               	movlw	31
 10882  004EDA  640C               	cpfsgt	___fltol@exp1^0,c
 10883  004EDC  EF72  F027         	goto	u10431
 10884  004EE0  EF74  F027         	goto	u10430
 10885  004EE4                     u10431:
 10886  004EE4  EF7C  F027         	goto	l8466
 10887  004EE8                     u10430:
 10888  004EE8  EF25  F027         	goto	l8434
 10889  004EEC                     l8464:
 10890  004EEC  90D8               	bcf	status,0,c
 10891  004EEE  3603               	rlcf	___fltol@f1^0,f,c
 10892  004EF0  3604               	rlcf	(___fltol@f1+1)^0,f,c
 10893  004EF2  3605               	rlcf	(___fltol@f1+2)^0,f,c
 10894  004EF4  3606               	rlcf	(___fltol@f1+3)^0,f,c
 10895  004EF6  060C               	decf	___fltol@exp1^0,f,c
 10896  004EF8                     l8466:
 10897  004EF8  500C               	movf	___fltol@exp1^0,w,c
 10898  004EFA  A4D8               	btfss	status,2,c
 10899  004EFC  EF82  F027         	goto	u10441
 10900  004F00  EF84  F027         	goto	u10440
 10901  004F04                     u10441:
 10902  004F04  EF76  F027         	goto	l8464
 10903  004F08                     u10440:
 10904  004F08                     l8468:
 10905  004F08  500B               	movf	___fltol@sign1^0,w,c
 10906  004F0A  B4D8               	btfsc	status,2,c
 10907  004F0C  EF8A  F027         	goto	u10451
 10908  004F10  EF8C  F027         	goto	u10450
 10909  004F14                     u10451:
 10910  004F14  EF94  F027         	goto	l8472
 10911  004F18                     u10450:
 10912  004F18  1E06               	comf	(___fltol@f1+3)^0,f,c
 10913  004F1A  1E05               	comf	(___fltol@f1+2)^0,f,c
 10914  004F1C  1E04               	comf	(___fltol@f1+1)^0,f,c
 10915  004F1E  6C03               	negf	___fltol@f1^0,c
 10916  004F20  0E00               	movlw	0
 10917  004F22  2204               	addwfc	(___fltol@f1+1)^0,f,c
 10918  004F24  2205               	addwfc	(___fltol@f1+2)^0,f,c
 10919  004F26  2206               	addwfc	(___fltol@f1+3)^0,f,c
 10920  004F28                     l8472:
 10921  004F28  C003  F003         	movff	___fltol@f1,?___fltol
 10922  004F2C  C004  F004         	movff	___fltol@f1+1,?___fltol+1
 10923  004F30  C005  F005         	movff	___fltol@f1+2,?___fltol+2
 10924  004F34  C006  F006         	movff	___fltol@f1+3,?___fltol+3
 10925  004F38                     l1258:
 10926  004F38  0012               	return		;funcret
 10927  004F3A                     __end_of___fltol:
 10928                           	opt callstack 0
 10929                           
 10930 ;; *************** function ___flsub *****************
 10931 ;; Defined at:
 10932 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  b               4   41[COMRAM] long 
 10935 ;;  a               4   45[COMRAM] long 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  4   41[COMRAM] long 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10950 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10951 ;;Total ram usage:        8 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    5
 10954 ;; This function calls:
 10955 ;;		___fladd
 10956 ;; This function is called by:
 10957 ;;		_efgtoa
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           	psect	text22
 10962  005B04                     __ptext22:
 10963                           	opt callstack 0
 10964  005B04                     ___flsub:
 10965                           	opt callstack 20
 10966  005B04  0E00               	movlw	0
 10967  005B06  1A2E               	xorwf	___flsub@a^0,f,c
 10968  005B08  0E00               	movlw	0
 10969  005B0A  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 10970  005B0C  0E00               	movlw	0
 10971  005B0E  1A30               	xorwf	(___flsub@a+2)^0,f,c
 10972  005B10  0E80               	movlw	128
 10973  005B12  1A31               	xorwf	(___flsub@a+3)^0,f,c
 10974  005B14  C02A  F003         	movff	___flsub@b,___fladd@b
 10975  005B18  C02B  F004         	movff	___flsub@b+1,___fladd@b+1
 10976  005B1C  C02C  F005         	movff	___flsub@b+2,___fladd@b+2
 10977  005B20  C02D  F006         	movff	___flsub@b+3,___fladd@b+3
 10978  005B24  C02E  F007         	movff	___flsub@a,___fladd@a
 10979  005B28  C02F  F008         	movff	___flsub@a+1,___fladd@a+1
 10980  005B2C  C030  F009         	movff	___flsub@a+2,___fladd@a+2
 10981  005B30  C031  F00A         	movff	___flsub@a+3,___fladd@a+3
 10982  005B34  ECAB  F010         	call	___fladd	;wreg free
 10983  005B38  C003  F02A         	movff	?___fladd,?___flsub
 10984  005B3C  C004  F02B         	movff	?___fladd+1,?___flsub+1
 10985  005B40  C005  F02C         	movff	?___fladd+2,?___flsub+2
 10986  005B44  C006  F02D         	movff	?___fladd+3,?___flsub+3
 10987  005B48  0012               	return		;funcret
 10988  005B4A                     __end_of___flsub:
 10989                           	opt callstack 0
 10990                           
 10991 ;; *************** function ___fladd *****************
 10992 ;; Defined at:
 10993 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;  b               4    2[COMRAM] long 
 10996 ;;  a               4    6[COMRAM] long 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  grs             1   17[COMRAM] unsigned char 
 10999 ;;  bexp            1   16[COMRAM] unsigned char 
 11000 ;;  aexp            1   15[COMRAM] unsigned char 
 11001 ;;  signs           1   14[COMRAM] unsigned char 
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  4    2[COMRAM] unsigned char 
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11011 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11015 ;;Total ram usage:       16 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    4
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_efgtoa
 11022 ;;		___flsub
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           
 11026                           	psect	text23
 11027  002156                     __ptext23:
 11028                           	opt callstack 0
 11029  002156                     ___fladd:
 11030                           	opt callstack 20
 11031  002156  5006               	movf	(___fladd@b+3)^0,w,c
 11032  002158  0B80               	andlw	128
 11033  00215A  6E0F               	movwf	___fladd@signs^0,c
 11034  00215C  5006               	movf	(___fladd@b+3)^0,w,c
 11035  00215E  2406               	addwf	(___fladd@b+3)^0,w,c
 11036  002160  6E11               	movwf	___fladd@bexp^0,c
 11037  002162  AE05               	btfss	(___fladd@b+2)^0,7,c
 11038  002164  EFB6  F010         	goto	u8881
 11039  002168  EFB8  F010         	goto	u8880
 11040  00216C                     u8881:
 11041  00216C  EFB9  F010         	goto	l7638
 11042  002170                     u8880:
 11043  002170  8011               	bsf	___fladd@bexp^0,0,c
 11044  002172                     l7638:
 11045  002172  5011               	movf	___fladd@bexp^0,w,c
 11046  002174  B4D8               	btfsc	status,2,c
 11047  002176  EFBF  F010         	goto	u8891
 11048  00217A  EFC1  F010         	goto	u8890
 11049  00217E                     u8891:
 11050  00217E  EFD6  F010         	goto	l7648
 11051  002182                     u8890:
 11052  002182  2811               	incf	___fladd@bexp^0,w,c
 11053  002184  A4D8               	btfss	status,2,c
 11054  002186  EFC7  F010         	goto	u8901
 11055  00218A  EFC9  F010         	goto	u8900
 11056  00218E                     u8901:
 11057  00218E  EFD1  F010         	goto	l7644
 11058  002192                     u8900:
 11059  002192  0E00               	movlw	0
 11060  002194  6E03               	movwf	___fladd@b^0,c
 11061  002196  0E00               	movlw	0
 11062  002198  6E04               	movwf	(___fladd@b+1)^0,c
 11063  00219A  0E00               	movlw	0
 11064  00219C  6E05               	movwf	(___fladd@b+2)^0,c
 11065  00219E  0E00               	movlw	0
 11066  0021A0  6E06               	movwf	(___fladd@b+3)^0,c
 11067  0021A2                     l7644:
 11068  0021A2  8E05               	bsf	(___fladd@b+2)^0,7,c
 11069  0021A4  0E00               	movlw	0
 11070  0021A6  6E06               	movwf	(___fladd@b+3)^0,c
 11071  0021A8  EFDE  F010         	goto	l7650
 11072  0021AC                     l7648:
 11073  0021AC  0E00               	movlw	0
 11074  0021AE  6E03               	movwf	___fladd@b^0,c
 11075  0021B0  0E00               	movlw	0
 11076  0021B2  6E04               	movwf	(___fladd@b+1)^0,c
 11077  0021B4  0E00               	movlw	0
 11078  0021B6  6E05               	movwf	(___fladd@b+2)^0,c
 11079  0021B8  0E00               	movlw	0
 11080  0021BA  6E06               	movwf	(___fladd@b+3)^0,c
 11081  0021BC                     l7650:
 11082  0021BC  500A               	movf	(___fladd@a+3)^0,w,c
 11083  0021BE  0B80               	andlw	128
 11084  0021C0  6E10               	movwf	___fladd@aexp^0,c
 11085  0021C2  500F               	movf	___fladd@signs^0,w,c
 11086  0021C4  1810               	xorwf	___fladd@aexp^0,w,c
 11087  0021C6  B4D8               	btfsc	status,2,c
 11088  0021C8  EFE8  F010         	goto	u8911
 11089  0021CC  EFEA  F010         	goto	u8910
 11090  0021D0                     u8911:
 11091  0021D0  EFEB  F010         	goto	l7656
 11092  0021D4                     u8910:
 11093  0021D4  8C0F               	bsf	___fladd@signs^0,6,c
 11094  0021D6                     l7656:
 11095  0021D6  500A               	movf	(___fladd@a+3)^0,w,c
 11096  0021D8  240A               	addwf	(___fladd@a+3)^0,w,c
 11097  0021DA  6E10               	movwf	___fladd@aexp^0,c
 11098  0021DC  AE09               	btfss	(___fladd@a+2)^0,7,c
 11099  0021DE  EFF3  F010         	goto	u8921
 11100  0021E2  EFF5  F010         	goto	u8920
 11101  0021E6                     u8921:
 11102  0021E6  EFF6  F010         	goto	l7662
 11103  0021EA                     u8920:
 11104  0021EA  8010               	bsf	___fladd@aexp^0,0,c
 11105  0021EC                     l7662:
 11106  0021EC  5010               	movf	___fladd@aexp^0,w,c
 11107  0021EE  B4D8               	btfsc	status,2,c
 11108  0021F0  EFFC  F010         	goto	u8931
 11109  0021F4  EFFE  F010         	goto	u8930
 11110  0021F8                     u8931:
 11111  0021F8  EF13  F011         	goto	l7672
 11112  0021FC                     u8930:
 11113  0021FC  2810               	incf	___fladd@aexp^0,w,c
 11114  0021FE  A4D8               	btfss	status,2,c
 11115  002200  EF04  F011         	goto	u8941
 11116  002204  EF06  F011         	goto	u8940
 11117  002208                     u8941:
 11118  002208  EF0E  F011         	goto	l7668
 11119  00220C                     u8940:
 11120  00220C  0E00               	movlw	0
 11121  00220E  6E07               	movwf	___fladd@a^0,c
 11122  002210  0E00               	movlw	0
 11123  002212  6E08               	movwf	(___fladd@a+1)^0,c
 11124  002214  0E00               	movlw	0
 11125  002216  6E09               	movwf	(___fladd@a+2)^0,c
 11126  002218  0E00               	movlw	0
 11127  00221A  6E0A               	movwf	(___fladd@a+3)^0,c
 11128  00221C                     l7668:
 11129  00221C  8E09               	bsf	(___fladd@a+2)^0,7,c
 11130  00221E  0E00               	movlw	0
 11131  002220  6E0A               	movwf	(___fladd@a+3)^0,c
 11132  002222  EF1B  F011         	goto	l7674
 11133  002226                     l7672:
 11134  002226  0E00               	movlw	0
 11135  002228  6E07               	movwf	___fladd@a^0,c
 11136  00222A  0E00               	movlw	0
 11137  00222C  6E08               	movwf	(___fladd@a+1)^0,c
 11138  00222E  0E00               	movlw	0
 11139  002230  6E09               	movwf	(___fladd@a+2)^0,c
 11140  002232  0E00               	movlw	0
 11141  002234  6E0A               	movwf	(___fladd@a+3)^0,c
 11142  002236                     l7674:
 11143  002236  5011               	movf	___fladd@bexp^0,w,c
 11144  002238  5C10               	subwf	___fladd@aexp^0,w,c
 11145  00223A  B0D8               	btfsc	status,0,c
 11146  00223C  EF22  F011         	goto	u8951
 11147  002240  EF24  F011         	goto	u8950
 11148  002244                     u8951:
 11149  002244  EF4B  F011         	goto	l7710
 11150  002248                     u8950:
 11151  002248  AC0F               	btfss	___fladd@signs^0,6,c
 11152  00224A  EF29  F011         	goto	u8961
 11153  00224E  EF2B  F011         	goto	u8960
 11154  002252                     u8961:
 11155  002252  EF2D  F011         	goto	l7680
 11156  002256                     u8960:
 11157  002256  0E80               	movlw	128
 11158  002258  1A0F               	xorwf	___fladd@signs^0,f,c
 11159  00225A                     l7680:
 11160  00225A  C011  F012         	movff	___fladd@bexp,___fladd@grs
 11161  00225E  C010  F011         	movff	___fladd@aexp,___fladd@bexp
 11162  002262  C012  F010         	movff	___fladd@grs,___fladd@aexp
 11163  002266  C003  F012         	movff	___fladd@b,___fladd@grs
 11164  00226A  C007  F003         	movff	___fladd@a,___fladd@b
 11165  00226E  C012  F007         	movff	___fladd@grs,___fladd@a
 11166  002272  C004  F012         	movff	___fladd@b+1,___fladd@grs
 11167  002276  C008  F004         	movff	___fladd@a+1,___fladd@b+1
 11168  00227A  C012  F008         	movff	___fladd@grs,___fladd@a+1
 11169  00227E  C005  F012         	movff	___fladd@b+2,___fladd@grs
 11170  002282  C009  F005         	movff	___fladd@a+2,___fladd@b+2
 11171  002286  C012  F009         	movff	___fladd@grs,___fladd@a+2
 11172  00228A  C006  F012         	movff	___fladd@b+3,___fladd@grs
 11173  00228E  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
 11174  002292  C012  F00A         	movff	___fladd@grs,___fladd@a+3
 11175  002296                     l7710:
 11176  002296  0E00               	movlw	0
 11177  002298  6E12               	movwf	___fladd@grs^0,c
 11178  00229A  5011               	movf	___fladd@bexp^0,w,c
 11179  00229C  C010  F00B         	movff	___fladd@aexp,??___fladd
 11180  0022A0  6A0C               	clrf	(??___fladd+1)^0,c
 11181  0022A2  5E0B               	subwf	??___fladd^0,f,c
 11182  0022A4  0E00               	movlw	0
 11183  0022A6  5A0C               	subwfb	(??___fladd+1)^0,f,c
 11184  0022A8  BE0C               	btfsc	(??___fladd+1)^0,7,c
 11185  0022AA  EF60  F011         	goto	u8971
 11186  0022AE  500C               	movf	(??___fladd+1)^0,w,c
 11187  0022B0  E109               	bnz	u8970
 11188  0022B2  0E1A               	movlw	26
 11189  0022B4  5C0B               	subwf	??___fladd^0,w,c
 11190  0022B6  A0D8               	btfss	status,0,c
 11191  0022B8  EF60  F011         	goto	u8971
 11192  0022BC  EF62  F011         	goto	u8970
 11193  0022C0                     u8971:
 11194  0022C0  EF99  F011         	goto	l1490
 11195  0022C4                     u8970:
 11196  0022C4  5003               	movf	___fladd@b^0,w,c
 11197  0022C6  1004               	iorwf	(___fladd@b+1)^0,w,c
 11198  0022C8  1005               	iorwf	(___fladd@b+2)^0,w,c
 11199  0022CA  1006               	iorwf	(___fladd@b+3)^0,w,c
 11200  0022CC  A4D8               	btfss	status,2,c
 11201  0022CE  EF6B  F011         	goto	u8981
 11202  0022D2  EF6E  F011         	goto	u8980
 11203  0022D6                     u8981:
 11204  0022D6  0E01               	movlw	1
 11205  0022D8  EF6F  F011         	goto	u8990
 11206  0022DC                     u8980:
 11207  0022DC  0E00               	movlw	0
 11208  0022DE                     u8990:
 11209  0022DE  6E12               	movwf	___fladd@grs^0,c
 11210  0022E0  0E00               	movlw	0
 11211  0022E2  6E03               	movwf	___fladd@b^0,c
 11212  0022E4  0E00               	movlw	0
 11213  0022E6  6E04               	movwf	(___fladd@b+1)^0,c
 11214  0022E8  0E00               	movlw	0
 11215  0022EA  6E05               	movwf	(___fladd@b+2)^0,c
 11216  0022EC  0E00               	movlw	0
 11217  0022EE  6E06               	movwf	(___fladd@b+3)^0,c
 11218  0022F0  C010  F011         	movff	___fladd@aexp,___fladd@bexp
 11219  0022F4  EFA2  F011         	goto	l1489
 11220  0022F8                     l1491:
 11221  0022F8  A012               	btfss	___fladd@grs^0,0,c
 11222  0022FA  EF81  F011         	goto	u9001
 11223  0022FE  EF83  F011         	goto	u9000
 11224  002302                     u9001:
 11225  002302  EF89  F011         	goto	l7722
 11226  002306                     u9000:
 11227  002306  90D8               	bcf	status,0,c
 11228  002308  3012               	rrcf	___fladd@grs^0,w,c
 11229  00230A  0901               	iorlw	1
 11230  00230C  6E12               	movwf	___fladd@grs^0,c
 11231  00230E  EF8B  F011         	goto	l7724
 11232  002312                     l7722:
 11233  002312  90D8               	bcf	status,0,c
 11234  002314  3212               	rrcf	___fladd@grs^0,f,c
 11235  002316                     l7724:
 11236  002316  A003               	btfss	___fladd@b^0,0,c
 11237  002318  EF90  F011         	goto	u9011
 11238  00231C  EF92  F011         	goto	u9010
 11239  002320                     u9011:
 11240  002320  EF93  F011         	goto	l7728
 11241  002324                     u9010:
 11242  002324  8E12               	bsf	___fladd@grs^0,7,c
 11243  002326                     l7728:
 11244  002326  3406               	rlcf	(___fladd@b+3)^0,w,c
 11245  002328  3206               	rrcf	(___fladd@b+3)^0,f,c
 11246  00232A  3205               	rrcf	(___fladd@b+2)^0,f,c
 11247  00232C  3204               	rrcf	(___fladd@b+1)^0,f,c
 11248  00232E  3203               	rrcf	___fladd@b^0,f,c
 11249  002330  2A11               	incf	___fladd@bexp^0,f,c
 11250  002332                     l1490:
 11251  002332  5010               	movf	___fladd@aexp^0,w,c
 11252  002334  5C11               	subwf	___fladd@bexp^0,w,c
 11253  002336  A0D8               	btfss	status,0,c
 11254  002338  EFA0  F011         	goto	u9021
 11255  00233C  EFA2  F011         	goto	u9020
 11256  002340                     u9021:
 11257  002340  EF7C  F011         	goto	l1491
 11258  002344                     u9020:
 11259  002344                     l1489:
 11260  002344  BC0F               	btfsc	___fladd@signs^0,6,c
 11261  002346  EFA7  F011         	goto	u9031
 11262  00234A  EFA9  F011         	goto	u9030
 11263  00234E                     u9031:
 11264  00234E  EFE9  F011         	goto	l7756
 11265  002352                     u9030:
 11266  002352  5011               	movf	___fladd@bexp^0,w,c
 11267  002354  A4D8               	btfss	status,2,c
 11268  002356  EFAF  F011         	goto	u9041
 11269  00235A  EFB1  F011         	goto	u9040
 11270  00235E                     u9041:
 11271  00235E  EFBB  F011         	goto	l7738
 11272  002362                     u9040:
 11273  002362  0E00               	movlw	0
 11274  002364  6E03               	movwf	?___fladd^0,c
 11275  002366  0E00               	movlw	0
 11276  002368  6E04               	movwf	(?___fladd+1)^0,c
 11277  00236A  0E00               	movlw	0
 11278  00236C  6E05               	movwf	(?___fladd+2)^0,c
 11279  00236E  0E00               	movlw	0
 11280  002370  6E06               	movwf	(?___fladd+3)^0,c
 11281  002372  EF0A  F013         	goto	l1498
 11282  002376                     l7738:
 11283  002376  5007               	movf	___fladd@a^0,w,c
 11284  002378  2603               	addwf	___fladd@b^0,f,c
 11285  00237A  5008               	movf	(___fladd@a+1)^0,w,c
 11286  00237C  2204               	addwfc	(___fladd@b+1)^0,f,c
 11287  00237E  5009               	movf	(___fladd@a+2)^0,w,c
 11288  002380  2205               	addwfc	(___fladd@b+2)^0,f,c
 11289  002382  500A               	movf	(___fladd@a+3)^0,w,c
 11290  002384  2206               	addwfc	(___fladd@b+3)^0,f,c
 11291  002386  A006               	btfss	(___fladd@b+3)^0,0,c
 11292  002388  EFC8  F011         	goto	u9051
 11293  00238C  EFCA  F011         	goto	u9050
 11294  002390                     u9051:
 11295  002390  EF76  F012         	goto	l7792
 11296  002394                     u9050:
 11297  002394  A012               	btfss	___fladd@grs^0,0,c
 11298  002396  EFCF  F011         	goto	u9061
 11299  00239A  EFD1  F011         	goto	u9060
 11300  00239E                     u9061:
 11301  00239E  EFD7  F011         	goto	l7746
 11302  0023A2                     u9060:
 11303  0023A2  90D8               	bcf	status,0,c
 11304  0023A4  3012               	rrcf	___fladd@grs^0,w,c
 11305  0023A6  0901               	iorlw	1
 11306  0023A8  6E12               	movwf	___fladd@grs^0,c
 11307  0023AA  EFD9  F011         	goto	l7748
 11308  0023AE                     l7746:
 11309  0023AE  90D8               	bcf	status,0,c
 11310  0023B0  3212               	rrcf	___fladd@grs^0,f,c
 11311  0023B2                     l7748:
 11312  0023B2  A003               	btfss	___fladd@b^0,0,c
 11313  0023B4  EFDE  F011         	goto	u9071
 11314  0023B8  EFE0  F011         	goto	u9070
 11315  0023BC                     u9071:
 11316  0023BC  EFE1  F011         	goto	l7752
 11317  0023C0                     u9070:
 11318  0023C0  8E12               	bsf	___fladd@grs^0,7,c
 11319  0023C2                     l7752:
 11320  0023C2  3406               	rlcf	(___fladd@b+3)^0,w,c
 11321  0023C4  3206               	rrcf	(___fladd@b+3)^0,f,c
 11322  0023C6  3205               	rrcf	(___fladd@b+2)^0,f,c
 11323  0023C8  3204               	rrcf	(___fladd@b+1)^0,f,c
 11324  0023CA  3203               	rrcf	___fladd@b^0,f,c
 11325  0023CC  2A11               	incf	___fladd@bexp^0,f,c
 11326  0023CE  EF76  F012         	goto	l7792
 11327  0023D2                     l7756:
 11328  0023D2  5007               	movf	___fladd@a^0,w,c
 11329  0023D4  5C03               	subwf	___fladd@b^0,w,c
 11330  0023D6  5008               	movf	(___fladd@a+1)^0,w,c
 11331  0023D8  5804               	subwfb	(___fladd@b+1)^0,w,c
 11332  0023DA  5009               	movf	(___fladd@a+2)^0,w,c
 11333  0023DC  5805               	subwfb	(___fladd@b+2)^0,w,c
 11334  0023DE  5006               	movf	(___fladd@b+3)^0,w,c
 11335  0023E0  0A80               	xorlw	128
 11336  0023E2  6E0B               	movwf	??___fladd^0,c
 11337  0023E4  500A               	movf	(___fladd@a+3)^0,w,c
 11338  0023E6  0A80               	xorlw	128
 11339  0023E8  580B               	subwfb	??___fladd^0,w,c
 11340  0023EA  B0D8               	btfsc	status,0,c
 11341  0023EC  EFFA  F011         	goto	u9081
 11342  0023F0  EFFC  F011         	goto	u9080
 11343  0023F4                     u9081:
 11344  0023F4  EF27  F012         	goto	l7766
 11345  0023F8                     u9080:
 11346  0023F8  5003               	movf	___fladd@b^0,w,c
 11347  0023FA  5C07               	subwf	___fladd@a^0,w,c
 11348  0023FC  6E0B               	movwf	??___fladd^0,c
 11349  0023FE  5004               	movf	(___fladd@b+1)^0,w,c
 11350  002400  5808               	subwfb	(___fladd@a+1)^0,w,c
 11351  002402  6E0C               	movwf	(??___fladd+1)^0,c
 11352  002404  5005               	movf	(___fladd@b+2)^0,w,c
 11353  002406  5809               	subwfb	(___fladd@a+2)^0,w,c
 11354  002408  6E0D               	movwf	(??___fladd+2)^0,c
 11355  00240A  5006               	movf	(___fladd@b+3)^0,w,c
 11356  00240C  580A               	subwfb	(___fladd@a+3)^0,w,c
 11357  00240E  6E0E               	movwf	(??___fladd+3)^0,c
 11358  002410  0EFF               	movlw	255
 11359  002412  240B               	addwf	??___fladd^0,w,c
 11360  002414  6E03               	movwf	___fladd@b^0,c
 11361  002416  0EFF               	movlw	255
 11362  002418  200C               	addwfc	(??___fladd+1)^0,w,c
 11363  00241A  6E04               	movwf	(___fladd@b+1)^0,c
 11364  00241C  0EFF               	movlw	255
 11365  00241E  200D               	addwfc	(??___fladd+2)^0,w,c
 11366  002420  6E05               	movwf	(___fladd@b+2)^0,c
 11367  002422  0EFF               	movlw	255
 11368  002424  200E               	addwfc	(??___fladd+3)^0,w,c
 11369  002426  6E06               	movwf	(___fladd@b+3)^0,c
 11370  002428  0E80               	movlw	128
 11371  00242A  1A0F               	xorwf	___fladd@signs^0,f,c
 11372  00242C  6C12               	negf	___fladd@grs^0,c
 11373  00242E  5012               	movf	___fladd@grs^0,w,c
 11374  002430  A4D8               	btfss	status,2,c
 11375  002432  EF1D  F012         	goto	u9091
 11376  002436  EF1F  F012         	goto	u9090
 11377  00243A                     u9091:
 11378  00243A  EF2F  F012         	goto	l1506
 11379  00243E                     u9090:
 11380  00243E  0E01               	movlw	1
 11381  002440  2603               	addwf	___fladd@b^0,f,c
 11382  002442  0E00               	movlw	0
 11383  002444  2204               	addwfc	(___fladd@b+1)^0,f,c
 11384  002446  2205               	addwfc	(___fladd@b+2)^0,f,c
 11385  002448  2206               	addwfc	(___fladd@b+3)^0,f,c
 11386  00244A  EF2F  F012         	goto	l1506
 11387  00244E                     l7766:
 11388  00244E  5007               	movf	___fladd@a^0,w,c
 11389  002450  5E03               	subwf	___fladd@b^0,f,c
 11390  002452  5008               	movf	(___fladd@a+1)^0,w,c
 11391  002454  5A04               	subwfb	(___fladd@b+1)^0,f,c
 11392  002456  5009               	movf	(___fladd@a+2)^0,w,c
 11393  002458  5A05               	subwfb	(___fladd@b+2)^0,f,c
 11394  00245A  500A               	movf	(___fladd@a+3)^0,w,c
 11395  00245C  5A06               	subwfb	(___fladd@b+3)^0,f,c
 11396  00245E                     l1506:
 11397  00245E  5003               	movf	___fladd@b^0,w,c
 11398  002460  1004               	iorwf	(___fladd@b+1)^0,w,c
 11399  002462  1005               	iorwf	(___fladd@b+2)^0,w,c
 11400  002464  1006               	iorwf	(___fladd@b+3)^0,w,c
 11401  002466  A4D8               	btfss	status,2,c
 11402  002468  EF38  F012         	goto	u9101
 11403  00246C  EF3A  F012         	goto	u9100
 11404  002470                     u9101:
 11405  002470  EF6F  F012         	goto	l7790
 11406  002474                     u9100:
 11407  002474  5012               	movf	___fladd@grs^0,w,c
 11408  002476  A4D8               	btfss	status,2,c
 11409  002478  EF40  F012         	goto	u9111
 11410  00247C  EF42  F012         	goto	u9110
 11411  002480                     u9111:
 11412  002480  EF6F  F012         	goto	l7790
 11413  002484                     u9110:
 11414  002484  0E00               	movlw	0
 11415  002486  6E03               	movwf	?___fladd^0,c
 11416  002488  0E00               	movlw	0
 11417  00248A  6E04               	movwf	(?___fladd+1)^0,c
 11418  00248C  0E00               	movlw	0
 11419  00248E  6E05               	movwf	(?___fladd+2)^0,c
 11420  002490  0E00               	movlw	0
 11421  002492  6E06               	movwf	(?___fladd+3)^0,c
 11422  002494  EF0A  F013         	goto	l1498
 11423  002498                     l7774:
 11424  002498  90D8               	bcf	status,0,c
 11425  00249A  3603               	rlcf	___fladd@b^0,f,c
 11426  00249C  3604               	rlcf	(___fladd@b+1)^0,f,c
 11427  00249E  3605               	rlcf	(___fladd@b+2)^0,f,c
 11428  0024A0  3606               	rlcf	(___fladd@b+3)^0,f,c
 11429  0024A2  AE12               	btfss	___fladd@grs^0,7,c
 11430  0024A4  EF56  F012         	goto	u9121
 11431  0024A8  EF58  F012         	goto	u9120
 11432  0024AC                     u9121:
 11433  0024AC  EF59  F012         	goto	l7780
 11434  0024B0                     u9120:
 11435  0024B0  8003               	bsf	___fladd@b^0,0,c
 11436  0024B2                     l7780:
 11437  0024B2  A012               	btfss	___fladd@grs^0,0,c
 11438  0024B4  EF5E  F012         	goto	u9131
 11439  0024B8  EF60  F012         	goto	u9130
 11440  0024BC                     u9131:
 11441  0024BC  EF64  F012         	goto	l7784
 11442  0024C0                     u9130:
 11443  0024C0  80D8               	bsf	status,0,c
 11444  0024C2  3612               	rlcf	___fladd@grs^0,f,c
 11445  0024C4  EF66  F012         	goto	l7786
 11446  0024C8                     l7784:
 11447  0024C8  90D8               	bcf	status,0,c
 11448  0024CA  3612               	rlcf	___fladd@grs^0,f,c
 11449  0024CC                     l7786:
 11450  0024CC  5011               	movf	___fladd@bexp^0,w,c
 11451  0024CE  B4D8               	btfsc	status,2,c
 11452  0024D0  EF6C  F012         	goto	u9141
 11453  0024D4  EF6E  F012         	goto	u9140
 11454  0024D8                     u9141:
 11455  0024D8  EF6F  F012         	goto	l7790
 11456  0024DC                     u9140:
 11457  0024DC  0611               	decf	___fladd@bexp^0,f,c
 11458  0024DE                     l7790:
 11459  0024DE  AE05               	btfss	(___fladd@b+2)^0,7,c
 11460  0024E0  EF74  F012         	goto	u9151
 11461  0024E4  EF76  F012         	goto	u9150
 11462  0024E8                     u9151:
 11463  0024E8  EF4C  F012         	goto	l7774
 11464  0024EC                     u9150:
 11465  0024EC                     l7792:
 11466  0024EC  0E00               	movlw	0
 11467  0024EE  6E10               	movwf	___fladd@aexp^0,c
 11468  0024F0  AE12               	btfss	___fladd@grs^0,7,c
 11469  0024F2  EF7D  F012         	goto	u9161
 11470  0024F6  EF7F  F012         	goto	u9160
 11471  0024FA                     u9161:
 11472  0024FA  EF97  F012         	goto	l1515
 11473  0024FE                     u9160:
 11474  0024FE  C012  F00B         	movff	___fladd@grs,??___fladd
 11475  002502  0E7F               	movlw	127
 11476  002504  160B               	andwf	??___fladd^0,f,c
 11477  002506  B4D8               	btfsc	status,2,c
 11478  002508  EF88  F012         	goto	u9171
 11479  00250C  EF8A  F012         	goto	u9170
 11480  002510                     u9171:
 11481  002510  EF8E  F012         	goto	l1516
 11482  002514                     u9170:
 11483  002514                     l7798:
 11484  002514  0E01               	movlw	1
 11485  002516  6E10               	movwf	___fladd@aexp^0,c
 11486  002518  EF97  F012         	goto	l1515
 11487  00251C                     l1516:
 11488  00251C  A003               	btfss	___fladd@b^0,0,c
 11489  00251E  EF93  F012         	goto	u9181
 11490  002522  EF95  F012         	goto	u9180
 11491  002526                     u9181:
 11492  002526  EF97  F012         	goto	l1515
 11493  00252A                     u9180:
 11494  00252A  EF8A  F012         	goto	l7798
 11495  00252E                     l1515:
 11496  00252E  5010               	movf	___fladd@aexp^0,w,c
 11497  002530  B4D8               	btfsc	status,2,c
 11498  002532  EF9D  F012         	goto	u9191
 11499  002536  EF9F  F012         	goto	u9190
 11500  00253A                     u9191:
 11501  00253A  EFCA  F012         	goto	l7810
 11502  00253E                     u9190:
 11503  00253E  0E01               	movlw	1
 11504  002540  2603               	addwf	___fladd@b^0,f,c
 11505  002542  0E00               	movlw	0
 11506  002544  2204               	addwfc	(___fladd@b+1)^0,f,c
 11507  002546  2205               	addwfc	(___fladd@b+2)^0,f,c
 11508  002548  2206               	addwfc	(___fladd@b+3)^0,f,c
 11509  00254A  A006               	btfss	(___fladd@b+3)^0,0,c
 11510  00254C  EFAA  F012         	goto	u9201
 11511  002550  EFAC  F012         	goto	u9200
 11512  002554                     u9201:
 11513  002554  EFCA  F012         	goto	l7810
 11514  002558                     u9200:
 11515  002558  C003  F00B         	movff	___fladd@b,??___fladd
 11516  00255C  C004  F00C         	movff	___fladd@b+1,??___fladd+1
 11517  002560  C005  F00D         	movff	___fladd@b+2,??___fladd+2
 11518  002564  C006  F00E         	movff	___fladd@b+3,??___fladd+3
 11519  002568  340E               	rlcf	(??___fladd+3)^0,w,c
 11520  00256A  320E               	rrcf	(??___fladd+3)^0,f,c
 11521  00256C  320D               	rrcf	(??___fladd+2)^0,f,c
 11522  00256E  320C               	rrcf	(??___fladd+1)^0,f,c
 11523  002570  320B               	rrcf	??___fladd^0,f,c
 11524  002572  C00B  F003         	movff	??___fladd,___fladd@b
 11525  002576  C00C  F004         	movff	??___fladd+1,___fladd@b+1
 11526  00257A  C00D  F005         	movff	??___fladd+2,___fladd@b+2
 11527  00257E  C00E  F006         	movff	??___fladd+3,___fladd@b+3
 11528  002582  2811               	incf	___fladd@bexp^0,w,c
 11529  002584  B4D8               	btfsc	status,2,c
 11530  002586  EFC7  F012         	goto	u9211
 11531  00258A  EFC9  F012         	goto	u9210
 11532  00258E                     u9211:
 11533  00258E  EFCA  F012         	goto	l7810
 11534  002592                     u9210:
 11535  002592  2A11               	incf	___fladd@bexp^0,f,c
 11536  002594                     l7810:
 11537  002594  2811               	incf	___fladd@bexp^0,w,c
 11538  002596  B4D8               	btfsc	status,2,c
 11539  002598  EFD0  F012         	goto	u9221
 11540  00259C  EFD2  F012         	goto	u9220
 11541  0025A0                     u9221:
 11542  0025A0  EFDA  F012         	goto	l7814
 11543  0025A4                     u9220:
 11544  0025A4  5011               	movf	___fladd@bexp^0,w,c
 11545  0025A6  A4D8               	btfss	status,2,c
 11546  0025A8  EFD8  F012         	goto	u9231
 11547  0025AC  EFDA  F012         	goto	u9230
 11548  0025B0                     u9231:
 11549  0025B0  EFEC  F012         	goto	l7818
 11550  0025B4                     u9230:
 11551  0025B4                     l7814:
 11552  0025B4  0E00               	movlw	0
 11553  0025B6  6E03               	movwf	___fladd@b^0,c
 11554  0025B8  0E00               	movlw	0
 11555  0025BA  6E04               	movwf	(___fladd@b+1)^0,c
 11556  0025BC  0E00               	movlw	0
 11557  0025BE  6E05               	movwf	(___fladd@b+2)^0,c
 11558  0025C0  0E00               	movlw	0
 11559  0025C2  6E06               	movwf	(___fladd@b+3)^0,c
 11560  0025C4  5011               	movf	___fladd@bexp^0,w,c
 11561  0025C6  A4D8               	btfss	status,2,c
 11562  0025C8  EFE8  F012         	goto	u9241
 11563  0025CC  EFEA  F012         	goto	u9240
 11564  0025D0                     u9241:
 11565  0025D0  EFEC  F012         	goto	l7818
 11566  0025D4                     u9240:
 11567  0025D4  0E00               	movlw	0
 11568  0025D6  6E0F               	movwf	___fladd@signs^0,c
 11569  0025D8                     l7818:
 11570  0025D8  A011               	btfss	___fladd@bexp^0,0,c
 11571  0025DA  EFF1  F012         	goto	u9251
 11572  0025DE  EFF3  F012         	goto	u9250
 11573  0025E2                     u9251:
 11574  0025E2  EFF6  F012         	goto	l7822
 11575  0025E6                     u9250:
 11576  0025E6  8E05               	bsf	(___fladd@b+2)^0,7,c
 11577  0025E8  EFF7  F012         	goto	l7824
 11578  0025EC                     l7822:
 11579  0025EC  9E05               	bcf	(___fladd@b+2)^0,7,c
 11580  0025EE                     l7824:
 11581  0025EE  90D8               	bcf	status,0,c
 11582  0025F0  3011               	rrcf	___fladd@bexp^0,w,c
 11583  0025F2  6E06               	movwf	(___fladd@b+3)^0,c
 11584  0025F4  AE0F               	btfss	___fladd@signs^0,7,c
 11585  0025F6  EFFF  F012         	goto	u9261
 11586  0025FA  EF01  F013         	goto	u9260
 11587  0025FE                     u9261:
 11588  0025FE  EF02  F013         	goto	l7830
 11589  002602                     u9260:
 11590  002602  8E06               	bsf	(___fladd@b+3)^0,7,c
 11591  002604                     l7830:
 11592  002604  C003  F003         	movff	___fladd@b,?___fladd
 11593  002608  C004  F004         	movff	___fladd@b+1,?___fladd+1
 11594  00260C  C005  F005         	movff	___fladd@b+2,?___fladd+2
 11595  002610  C006  F006         	movff	___fladd@b+3,?___fladd+3
 11596  002614                     l1498:
 11597  002614  0012               	return		;funcret
 11598  002616                     __end_of___fladd:
 11599                           	opt callstack 0
 11600                           
 11601 ;; *************** function ___flneg *****************
 11602 ;; Defined at:
 11603 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  f1              4    2[COMRAM] unsigned char 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  4    2[COMRAM] unsigned char 
 11610 ;; Registers used:
 11611 ;;		wreg, status,2, status,0
 11612 ;; Tracked objects:
 11613 ;;		On entry : 0/0
 11614 ;;		On exit  : 0/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11621 ;;Total ram usage:        4 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    4
 11624 ;; This function calls:
 11625 ;;		Nothing
 11626 ;; This function is called by:
 11627 ;;		_efgtoa
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text24
 11632  005D02                     __ptext24:
 11633                           	opt callstack 0
 11634  005D02                     ___flneg:
 11635                           	opt callstack 21
 11636  005D02  5003               	movf	___flneg@f1^0,w,c
 11637  005D04  1004               	iorwf	(___flneg@f1+1)^0,w,c
 11638  005D06  1005               	iorwf	(___flneg@f1+2)^0,w,c
 11639  005D08  1006               	iorwf	(___flneg@f1+3)^0,w,c
 11640  005D0A  B4D8               	btfsc	status,2,c
 11641  005D0C  EF8A  F02E         	goto	u10381
 11642  005D10  EF8C  F02E         	goto	u10380
 11643  005D14                     u10381:
 11644  005D14  EF94  F02E         	goto	l8428
 11645  005D18                     u10380:
 11646  005D18  0E00               	movlw	0
 11647  005D1A  1A03               	xorwf	___flneg@f1^0,f,c
 11648  005D1C  0E00               	movlw	0
 11649  005D1E  1A04               	xorwf	(___flneg@f1+1)^0,f,c
 11650  005D20  0E00               	movlw	0
 11651  005D22  1A05               	xorwf	(___flneg@f1+2)^0,f,c
 11652  005D24  0E80               	movlw	128
 11653  005D26  1A06               	xorwf	(___flneg@f1+3)^0,f,c
 11654  005D28                     l8428:
 11655  005D28  C003  F003         	movff	___flneg@f1,?___flneg
 11656  005D2C  C004  F004         	movff	___flneg@f1+1,?___flneg+1
 11657  005D30  C005  F005         	movff	___flneg@f1+2,?___flneg+2
 11658  005D34  C006  F006         	movff	___flneg@f1+3,?___flneg+3
 11659  005D38  0012               	return		;funcret
 11660  005D3A                     __end_of___flneg:
 11661                           	opt callstack 0
 11662                           
 11663 ;; *************** function ___flmul *****************
 11664 ;; Defined at:
 11665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  b               4   16[COMRAM] unsigned char 
 11668 ;;  a               4   20[COMRAM] unsigned char 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  prod            4   35[COMRAM] struct .
 11671 ;;  grs             4   30[COMRAM] unsigned long 
 11672 ;;  temp            2   39[COMRAM] struct .
 11673 ;;  bexp            1   34[COMRAM] unsigned char 
 11674 ;;  aexp            1   29[COMRAM] unsigned char 
 11675 ;;  sign            1   28[COMRAM] unsigned char 
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  4   16[COMRAM] unsigned char 
 11678 ;; Registers used:
 11679 ;;		wreg, status,2, status,0, prodl, prodh
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11685 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11686 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11687 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;Total ram usage:       25 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:    4
 11692 ;; This function calls:
 11693 ;;		Nothing
 11694 ;; This function is called by:
 11695 ;;		_main
 11696 ;;		_efgtoa
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text25
 11701  002616                     __ptext25:
 11702                           	opt callstack 0
 11703  002616                     ___flmul:
 11704                           	opt callstack 21
 11705  002616  5014               	movf	(___flmul@b+3)^0,w,c
 11706  002618  0B80               	andlw	128
 11707  00261A  6E1D               	movwf	___flmul@sign^0,c
 11708  00261C  5014               	movf	(___flmul@b+3)^0,w,c
 11709  00261E  2414               	addwf	(___flmul@b+3)^0,w,c
 11710  002620  6E23               	movwf	___flmul@bexp^0,c
 11711  002622  AE13               	btfss	(___flmul@b+2)^0,7,c
 11712  002624  EF16  F013         	goto	u9991
 11713  002628  EF18  F013         	goto	u9990
 11714  00262C                     u9991:
 11715  00262C  EF19  F013         	goto	l8176
 11716  002630                     u9990:
 11717  002630  8023               	bsf	___flmul@bexp^0,0,c
 11718  002632                     l8176:
 11719  002632  5023               	movf	___flmul@bexp^0,w,c
 11720  002634  B4D8               	btfsc	status,2,c
 11721  002636  EF1F  F013         	goto	u10001
 11722  00263A  EF21  F013         	goto	u10000
 11723  00263E                     u10001:
 11724  00263E  EF34  F013         	goto	l8184
 11725  002642                     u10000:
 11726  002642  2823               	incf	___flmul@bexp^0,w,c
 11727  002644  A4D8               	btfss	status,2,c
 11728  002646  EF27  F013         	goto	u10011
 11729  00264A  EF29  F013         	goto	u10010
 11730  00264E                     u10011:
 11731  00264E  EF31  F013         	goto	l8182
 11732  002652                     u10010:
 11733  002652  0E00               	movlw	0
 11734  002654  6E11               	movwf	___flmul@b^0,c
 11735  002656  0E00               	movlw	0
 11736  002658  6E12               	movwf	(___flmul@b+1)^0,c
 11737  00265A  0E00               	movlw	0
 11738  00265C  6E13               	movwf	(___flmul@b+2)^0,c
 11739  00265E  0E00               	movlw	0
 11740  002660  6E14               	movwf	(___flmul@b+3)^0,c
 11741  002662                     l8182:
 11742  002662  8E13               	bsf	(___flmul@b+2)^0,7,c
 11743  002664  EF3C  F013         	goto	l8186
 11744  002668                     l8184:
 11745  002668  0E00               	movlw	0
 11746  00266A  6E11               	movwf	___flmul@b^0,c
 11747  00266C  0E00               	movlw	0
 11748  00266E  6E12               	movwf	(___flmul@b+1)^0,c
 11749  002670  0E00               	movlw	0
 11750  002672  6E13               	movwf	(___flmul@b+2)^0,c
 11751  002674  0E00               	movlw	0
 11752  002676  6E14               	movwf	(___flmul@b+3)^0,c
 11753  002678                     l8186:
 11754  002678  5018               	movf	(___flmul@a+3)^0,w,c
 11755  00267A  0B80               	andlw	128
 11756  00267C  1A1D               	xorwf	___flmul@sign^0,f,c
 11757  00267E  5018               	movf	(___flmul@a+3)^0,w,c
 11758  002680  2418               	addwf	(___flmul@a+3)^0,w,c
 11759  002682  6E1E               	movwf	___flmul@aexp^0,c
 11760  002684  AE17               	btfss	(___flmul@a+2)^0,7,c
 11761  002686  EF47  F013         	goto	u10021
 11762  00268A  EF49  F013         	goto	u10020
 11763  00268E                     u10021:
 11764  00268E  EF4A  F013         	goto	l8194
 11765  002692                     u10020:
 11766  002692  801E               	bsf	___flmul@aexp^0,0,c
 11767  002694                     l8194:
 11768  002694  501E               	movf	___flmul@aexp^0,w,c
 11769  002696  B4D8               	btfsc	status,2,c
 11770  002698  EF50  F013         	goto	u10031
 11771  00269C  EF52  F013         	goto	u10030
 11772  0026A0                     u10031:
 11773  0026A0  EF65  F013         	goto	l8202
 11774  0026A4                     u10030:
 11775  0026A4  281E               	incf	___flmul@aexp^0,w,c
 11776  0026A6  A4D8               	btfss	status,2,c
 11777  0026A8  EF58  F013         	goto	u10041
 11778  0026AC  EF5A  F013         	goto	u10040
 11779  0026B0                     u10041:
 11780  0026B0  EF62  F013         	goto	l8200
 11781  0026B4                     u10040:
 11782  0026B4  0E00               	movlw	0
 11783  0026B6  6E15               	movwf	___flmul@a^0,c
 11784  0026B8  0E00               	movlw	0
 11785  0026BA  6E16               	movwf	(___flmul@a+1)^0,c
 11786  0026BC  0E00               	movlw	0
 11787  0026BE  6E17               	movwf	(___flmul@a+2)^0,c
 11788  0026C0  0E00               	movlw	0
 11789  0026C2  6E18               	movwf	(___flmul@a+3)^0,c
 11790  0026C4                     l8200:
 11791  0026C4  8E17               	bsf	(___flmul@a+2)^0,7,c
 11792  0026C6  EF6D  F013         	goto	l1575
 11793  0026CA                     l8202:
 11794  0026CA  0E00               	movlw	0
 11795  0026CC  6E15               	movwf	___flmul@a^0,c
 11796  0026CE  0E00               	movlw	0
 11797  0026D0  6E16               	movwf	(___flmul@a+1)^0,c
 11798  0026D2  0E00               	movlw	0
 11799  0026D4  6E17               	movwf	(___flmul@a+2)^0,c
 11800  0026D6  0E00               	movlw	0
 11801  0026D8  6E18               	movwf	(___flmul@a+3)^0,c
 11802  0026DA                     l1575:
 11803  0026DA  501E               	movf	___flmul@aexp^0,w,c
 11804  0026DC  B4D8               	btfsc	status,2,c
 11805  0026DE  EF73  F013         	goto	u10051
 11806  0026E2  EF75  F013         	goto	u10050
 11807  0026E6                     u10051:
 11808  0026E6  EF7D  F013         	goto	l8206
 11809  0026EA                     u10050:
 11810  0026EA  5023               	movf	___flmul@bexp^0,w,c
 11811  0026EC  A4D8               	btfss	status,2,c
 11812  0026EE  EF7B  F013         	goto	u10061
 11813  0026F2  EF7D  F013         	goto	u10060
 11814  0026F6                     u10061:
 11815  0026F6  EF87  F013         	goto	l8210
 11816  0026FA                     u10060:
 11817  0026FA                     l8206:
 11818  0026FA  0E00               	movlw	0
 11819  0026FC  6E11               	movwf	?___flmul^0,c
 11820  0026FE  0E00               	movlw	0
 11821  002700  6E12               	movwf	(?___flmul+1)^0,c
 11822  002702  0E00               	movlw	0
 11823  002704  6E13               	movwf	(?___flmul+2)^0,c
 11824  002706  0E00               	movlw	0
 11825  002708  6E14               	movwf	(?___flmul+3)^0,c
 11826  00270A  EF1F  F015         	goto	l1579
 11827  00270E                     l8210:
 11828  00270E  5017               	movf	(___flmul@a+2)^0,w,c
 11829  002710  0211               	mulwf	___flmul@b^0,c
 11830  002712  CFF3 F028          	movff	prodl,___flmul@temp
 11831  002716  CFF4 F029          	movff	prodh,___flmul@temp+1
 11832  00271A  5028               	movf	___flmul@temp^0,w,c
 11833  00271C  6E1F               	movwf	___flmul@grs^0,c
 11834  00271E  6A20               	clrf	(___flmul@grs+1)^0,c
 11835  002720  6A21               	clrf	(___flmul@grs+2)^0,c
 11836  002722  6A22               	clrf	(___flmul@grs+3)^0,c
 11837  002724  5029               	movf	(___flmul@temp+1)^0,w,c
 11838  002726  6E24               	movwf	___flmul@prod^0,c
 11839  002728  6A25               	clrf	(___flmul@prod+1)^0,c
 11840  00272A  6A26               	clrf	(___flmul@prod+2)^0,c
 11841  00272C  6A27               	clrf	(___flmul@prod+3)^0,c
 11842  00272E  5016               	movf	(___flmul@a+1)^0,w,c
 11843  002730  0212               	mulwf	(___flmul@b+1)^0,c
 11844  002732  CFF3 F028          	movff	prodl,___flmul@temp
 11845  002736  CFF4 F029          	movff	prodh,___flmul@temp+1
 11846  00273A  5028               	movf	___flmul@temp^0,w,c
 11847  00273C  261F               	addwf	___flmul@grs^0,f,c
 11848  00273E  0E00               	movlw	0
 11849  002740  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11850  002742  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11851  002744  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11852  002746  5029               	movf	(___flmul@temp+1)^0,w,c
 11853  002748  2624               	addwf	___flmul@prod^0,f,c
 11854  00274A  0E00               	movlw	0
 11855  00274C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11856  00274E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11857  002750  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11858  002752  5015               	movf	___flmul@a^0,w,c
 11859  002754  0213               	mulwf	(___flmul@b+2)^0,c
 11860  002756  CFF3 F028          	movff	prodl,___flmul@temp
 11861  00275A  CFF4 F029          	movff	prodh,___flmul@temp+1
 11862  00275E  5028               	movf	___flmul@temp^0,w,c
 11863  002760  261F               	addwf	___flmul@grs^0,f,c
 11864  002762  0E00               	movlw	0
 11865  002764  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11866  002766  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11867  002768  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11868  00276A  5029               	movf	(___flmul@temp+1)^0,w,c
 11869  00276C  2624               	addwf	___flmul@prod^0,f,c
 11870  00276E  0E00               	movlw	0
 11871  002770  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11872  002772  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11873  002774  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11874  002776  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 11875  00277A  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 11876  00277E  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 11877  002782  6A1F               	clrf	___flmul@grs^0,c
 11878  002784  5015               	movf	___flmul@a^0,w,c
 11879  002786  0212               	mulwf	(___flmul@b+1)^0,c
 11880  002788  CFF3 F028          	movff	prodl,___flmul@temp
 11881  00278C  CFF4 F029          	movff	prodh,___flmul@temp+1
 11882  002790  5028               	movf	___flmul@temp^0,w,c
 11883  002792  261F               	addwf	___flmul@grs^0,f,c
 11884  002794  5029               	movf	(___flmul@temp+1)^0,w,c
 11885  002796  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11886  002798  0E00               	movlw	0
 11887  00279A  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11888  00279C  0E00               	movlw	0
 11889  00279E  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11890  0027A0  5016               	movf	(___flmul@a+1)^0,w,c
 11891  0027A2  0211               	mulwf	___flmul@b^0,c
 11892  0027A4  CFF3 F028          	movff	prodl,___flmul@temp
 11893  0027A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 11894  0027AC  5028               	movf	___flmul@temp^0,w,c
 11895  0027AE  261F               	addwf	___flmul@grs^0,f,c
 11896  0027B0  5029               	movf	(___flmul@temp+1)^0,w,c
 11897  0027B2  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11898  0027B4  0E00               	movlw	0
 11899  0027B6  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11900  0027B8  0E00               	movlw	0
 11901  0027BA  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11902  0027BC  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 11903  0027C0  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 11904  0027C4  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 11905  0027C8  6A1F               	clrf	___flmul@grs^0,c
 11906  0027CA  5015               	movf	___flmul@a^0,w,c
 11907  0027CC  0211               	mulwf	___flmul@b^0,c
 11908  0027CE  CFF3 F028          	movff	prodl,___flmul@temp
 11909  0027D2  CFF4 F029          	movff	prodh,___flmul@temp+1
 11910  0027D6  5028               	movf	___flmul@temp^0,w,c
 11911  0027D8  261F               	addwf	___flmul@grs^0,f,c
 11912  0027DA  5029               	movf	(___flmul@temp+1)^0,w,c
 11913  0027DC  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11914  0027DE  0E00               	movlw	0
 11915  0027E0  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11916  0027E2  0E00               	movlw	0
 11917  0027E4  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11918  0027E6  5017               	movf	(___flmul@a+2)^0,w,c
 11919  0027E8  0212               	mulwf	(___flmul@b+1)^0,c
 11920  0027EA  CFF3 F028          	movff	prodl,___flmul@temp
 11921  0027EE  CFF4 F029          	movff	prodh,___flmul@temp+1
 11922  0027F2  5028               	movf	___flmul@temp^0,w,c
 11923  0027F4  2624               	addwf	___flmul@prod^0,f,c
 11924  0027F6  5029               	movf	(___flmul@temp+1)^0,w,c
 11925  0027F8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11926  0027FA  0E00               	movlw	0
 11927  0027FC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11928  0027FE  0E00               	movlw	0
 11929  002800  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11930  002802  5016               	movf	(___flmul@a+1)^0,w,c
 11931  002804  0213               	mulwf	(___flmul@b+2)^0,c
 11932  002806  CFF3 F028          	movff	prodl,___flmul@temp
 11933  00280A  CFF4 F029          	movff	prodh,___flmul@temp+1
 11934  00280E  5028               	movf	___flmul@temp^0,w,c
 11935  002810  2624               	addwf	___flmul@prod^0,f,c
 11936  002812  5029               	movf	(___flmul@temp+1)^0,w,c
 11937  002814  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11938  002816  0E00               	movlw	0
 11939  002818  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11940  00281A  0E00               	movlw	0
 11941  00281C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11942  00281E  5017               	movf	(___flmul@a+2)^0,w,c
 11943  002820  0213               	mulwf	(___flmul@b+2)^0,c
 11944  002822  CFF3 F028          	movff	prodl,___flmul@temp
 11945  002826  CFF4 F029          	movff	prodh,___flmul@temp+1
 11946  00282A  5028               	movf	___flmul@temp^0,w,c
 11947  00282C  6E19               	movwf	??___flmul^0,c
 11948  00282E  5029               	movf	(___flmul@temp+1)^0,w,c
 11949  002830  6E1A               	movwf	(??___flmul+1)^0,c
 11950  002832  6A1B               	clrf	(??___flmul+2)^0,c
 11951  002834  6A1C               	clrf	(??___flmul+3)^0,c
 11952  002836  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 11953  00283A  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 11954  00283E  C019  F01A         	movff	??___flmul,??___flmul+1
 11955  002842  6A19               	clrf	??___flmul^0,c
 11956  002844  5019               	movf	??___flmul^0,w,c
 11957  002846  2624               	addwf	___flmul@prod^0,f,c
 11958  002848  501A               	movf	(??___flmul+1)^0,w,c
 11959  00284A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11960  00284C  501B               	movf	(??___flmul+2)^0,w,c
 11961  00284E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11962  002850  501C               	movf	(??___flmul+3)^0,w,c
 11963  002852  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11964  002854  C01F  F019         	movff	___flmul@grs,??___flmul
 11965  002858  C020  F01A         	movff	___flmul@grs+1,??___flmul+1
 11966  00285C  C021  F01B         	movff	___flmul@grs+2,??___flmul+2
 11967  002860  C022  F01C         	movff	___flmul@grs+3,??___flmul+3
 11968  002864  0E19               	movlw	25
 11969  002866  EF3A  F014         	goto	u10070
 11970  00286A                     u10075:
 11971  00286A  90D8               	bcf	status,0,c
 11972  00286C  321C               	rrcf	(??___flmul+3)^0,f,c
 11973  00286E  321B               	rrcf	(??___flmul+2)^0,f,c
 11974  002870  321A               	rrcf	(??___flmul+1)^0,f,c
 11975  002872  3219               	rrcf	??___flmul^0,f,c
 11976  002874                     u10070:
 11977  002874  2EE8               	decfsz	wreg,f,c
 11978  002876  EF35  F014         	goto	u10075
 11979  00287A  5019               	movf	??___flmul^0,w,c
 11980  00287C  2624               	addwf	___flmul@prod^0,f,c
 11981  00287E  501A               	movf	(??___flmul+1)^0,w,c
 11982  002880  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11983  002882  501B               	movf	(??___flmul+2)^0,w,c
 11984  002884  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11985  002886  501C               	movf	(??___flmul+3)^0,w,c
 11986  002888  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11987  00288A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 11988  00288E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 11989  002892  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 11990  002896  6A1F               	clrf	___flmul@grs^0,c
 11991  002898  501E               	movf	___flmul@aexp^0,w,c
 11992  00289A  C023  F019         	movff	___flmul@bexp,??___flmul
 11993  00289E  6A1A               	clrf	(??___flmul+1)^0,c
 11994  0028A0  2619               	addwf	??___flmul^0,f,c
 11995  0028A2  0E00               	movlw	0
 11996  0028A4  221A               	addwfc	(??___flmul+1)^0,f,c
 11997  0028A6  0E82               	movlw	130
 11998  0028A8  2419               	addwf	??___flmul^0,w,c
 11999  0028AA  6E28               	movwf	___flmul@temp^0,c
 12000  0028AC  0EFF               	movlw	255
 12001  0028AE  201A               	addwfc	(??___flmul+1)^0,w,c
 12002  0028B0  6E29               	movwf	(___flmul@temp+1)^0,c
 12003  0028B2  EF70  F014         	goto	l8258
 12004  0028B6                     l8252:
 12005  0028B6  90D8               	bcf	status,0,c
 12006  0028B8  3624               	rlcf	___flmul@prod^0,f,c
 12007  0028BA  3625               	rlcf	(___flmul@prod+1)^0,f,c
 12008  0028BC  3626               	rlcf	(___flmul@prod+2)^0,f,c
 12009  0028BE  3627               	rlcf	(___flmul@prod+3)^0,f,c
 12010  0028C0  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12011  0028C2  EF65  F014         	goto	u10081
 12012  0028C6  EF67  F014         	goto	u10080
 12013  0028CA                     u10081:
 12014  0028CA  EF68  F014         	goto	l1582
 12015  0028CE                     u10080:
 12016  0028CE  8024               	bsf	___flmul@prod^0,0,c
 12017  0028D0                     l1582:
 12018  0028D0  90D8               	bcf	status,0,c
 12019  0028D2  361F               	rlcf	___flmul@grs^0,f,c
 12020  0028D4  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12021  0028D6  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12022  0028D8  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12023  0028DA  0628               	decf	___flmul@temp^0,f,c
 12024  0028DC  A0D8               	btfss	status,0,c
 12025  0028DE  0629               	decf	(___flmul@temp+1)^0,f,c
 12026  0028E0                     l8258:
 12027  0028E0  AE26               	btfss	(___flmul@prod+2)^0,7,c
 12028  0028E2  EF75  F014         	goto	u10091
 12029  0028E6  EF77  F014         	goto	u10090
 12030  0028EA                     u10091:
 12031  0028EA  EF5B  F014         	goto	l8252
 12032  0028EE                     u10090:
 12033  0028EE  0E00               	movlw	0
 12034  0028F0  6E1E               	movwf	___flmul@aexp^0,c
 12035  0028F2  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12036  0028F4  EF7E  F014         	goto	u10101
 12037  0028F8  EF80  F014         	goto	u10100
 12038  0028FC                     u10101:
 12039  0028FC  EFA4  F014         	goto	l1584
 12040  002900                     u10100:
 12041  002900  0EFF               	movlw	255
 12042  002902  141F               	andwf	___flmul@grs^0,w,c
 12043  002904  6E19               	movwf	??___flmul^0,c
 12044  002906  0EFF               	movlw	255
 12045  002908  1420               	andwf	(___flmul@grs+1)^0,w,c
 12046  00290A  6E1A               	movwf	(??___flmul+1)^0,c
 12047  00290C  0EFF               	movlw	255
 12048  00290E  1421               	andwf	(___flmul@grs+2)^0,w,c
 12049  002910  6E1B               	movwf	(??___flmul+2)^0,c
 12050  002912  0E7F               	movlw	127
 12051  002914  1422               	andwf	(___flmul@grs+3)^0,w,c
 12052  002916  6E1C               	movwf	(??___flmul+3)^0,c
 12053  002918  5019               	movf	??___flmul^0,w,c
 12054  00291A  101A               	iorwf	(??___flmul+1)^0,w,c
 12055  00291C  101B               	iorwf	(??___flmul+2)^0,w,c
 12056  00291E  101C               	iorwf	(??___flmul+3)^0,w,c
 12057  002920  B4D8               	btfsc	status,2,c
 12058  002922  EF95  F014         	goto	u10111
 12059  002926  EF97  F014         	goto	u10110
 12060  00292A                     u10111:
 12061  00292A  EF9B  F014         	goto	l1585
 12062  00292E                     u10110:
 12063  00292E                     l8266:
 12064  00292E  0E01               	movlw	1
 12065  002930  6E1E               	movwf	___flmul@aexp^0,c
 12066  002932  EFA4  F014         	goto	l1584
 12067  002936                     l1585:
 12068  002936  A024               	btfss	___flmul@prod^0,0,c
 12069  002938  EFA0  F014         	goto	u10121
 12070  00293C  EFA2  F014         	goto	u10120
 12071  002940                     u10121:
 12072  002940  EFA4  F014         	goto	l1584
 12073  002944                     u10120:
 12074  002944  EF97  F014         	goto	l8266
 12075  002948                     l1584:
 12076  002948  501E               	movf	___flmul@aexp^0,w,c
 12077  00294A  B4D8               	btfsc	status,2,c
 12078  00294C  EFAA  F014         	goto	u10131
 12079  002950  EFAC  F014         	goto	u10130
 12080  002954                     u10131:
 12081  002954  EFD0  F014         	goto	l8278
 12082  002958                     u10130:
 12083  002958  0E01               	movlw	1
 12084  00295A  2624               	addwf	___flmul@prod^0,f,c
 12085  00295C  0E00               	movlw	0
 12086  00295E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12087  002960  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12088  002962  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12089  002964  A027               	btfss	(___flmul@prod+3)^0,0,c
 12090  002966  EFB7  F014         	goto	u10141
 12091  00296A  EFB9  F014         	goto	u10140
 12092  00296E                     u10141:
 12093  00296E  EFD0  F014         	goto	l8278
 12094  002972                     u10140:
 12095  002972  C024  F019         	movff	___flmul@prod,??___flmul
 12096  002976  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 12097  00297A  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 12098  00297E  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 12099  002982  341C               	rlcf	(??___flmul+3)^0,w,c
 12100  002984  321C               	rrcf	(??___flmul+3)^0,f,c
 12101  002986  321B               	rrcf	(??___flmul+2)^0,f,c
 12102  002988  321A               	rrcf	(??___flmul+1)^0,f,c
 12103  00298A  3219               	rrcf	??___flmul^0,f,c
 12104  00298C  C019  F024         	movff	??___flmul,___flmul@prod
 12105  002990  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 12106  002994  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 12107  002998  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 12108  00299C  4A28               	infsnz	___flmul@temp^0,f,c
 12109  00299E  2A29               	incf	(___flmul@temp+1)^0,f,c
 12110  0029A0                     l8278:
 12111  0029A0  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12112  0029A2  EFDB  F014         	goto	u10151
 12113  0029A6  5029               	movf	(___flmul@temp+1)^0,w,c
 12114  0029A8  E108               	bnz	u10150
 12115  0029AA  2828               	incf	___flmul@temp^0,w,c
 12116  0029AC  A0D8               	btfss	status,0,c
 12117  0029AE  EFDB  F014         	goto	u10151
 12118  0029B2  EFDD  F014         	goto	u10150
 12119  0029B6                     u10151:
 12120  0029B6  EFE7  F014         	goto	l8282
 12121  0029BA                     u10150:
 12122  0029BA  0E00               	movlw	0
 12123  0029BC  6E24               	movwf	___flmul@prod^0,c
 12124  0029BE  0E00               	movlw	0
 12125  0029C0  6E25               	movwf	(___flmul@prod+1)^0,c
 12126  0029C2  0E80               	movlw	128
 12127  0029C4  6E26               	movwf	(___flmul@prod+2)^0,c
 12128  0029C6  0E7F               	movlw	127
 12129  0029C8  6E27               	movwf	(___flmul@prod+3)^0,c
 12130  0029CA  EF15  F015         	goto	l8294
 12131  0029CE                     l8282:
 12132  0029CE  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 12133  0029D0  EFF4  F014         	goto	u10160
 12134  0029D4  5029               	movf	(___flmul@temp+1)^0,w,c
 12135  0029D6  E106               	bnz	u10161
 12136  0029D8  0428               	decf	___flmul@temp^0,w,c
 12137  0029DA  B0D8               	btfsc	status,0,c
 12138  0029DC  EFF2  F014         	goto	u10161
 12139  0029E0  EFF4  F014         	goto	u10160
 12140  0029E4                     u10161:
 12141  0029E4  EF00  F015         	goto	l1592
 12142  0029E8                     u10160:
 12143  0029E8  0E00               	movlw	0
 12144  0029EA  6E24               	movwf	___flmul@prod^0,c
 12145  0029EC  0E00               	movlw	0
 12146  0029EE  6E25               	movwf	(___flmul@prod+1)^0,c
 12147  0029F0  0E00               	movlw	0
 12148  0029F2  6E26               	movwf	(___flmul@prod+2)^0,c
 12149  0029F4  0E00               	movlw	0
 12150  0029F6  6E27               	movwf	(___flmul@prod+3)^0,c
 12151  0029F8  0E00               	movlw	0
 12152  0029FA  6E1D               	movwf	___flmul@sign^0,c
 12153  0029FC  EF15  F015         	goto	l8294
 12154  002A00                     l1592:
 12155  002A00  C028  F023         	movff	___flmul@temp,___flmul@bexp
 12156  002A04  0EFF               	movlw	255
 12157  002A06  1624               	andwf	___flmul@prod^0,f,c
 12158  002A08  0EFF               	movlw	255
 12159  002A0A  1625               	andwf	(___flmul@prod+1)^0,f,c
 12160  002A0C  0E7F               	movlw	127
 12161  002A0E  1626               	andwf	(___flmul@prod+2)^0,f,c
 12162  002A10  0E00               	movlw	0
 12163  002A12  1627               	andwf	(___flmul@prod+3)^0,f,c
 12164  002A14  A023               	btfss	___flmul@bexp^0,0,c
 12165  002A16  EF0F  F015         	goto	u10171
 12166  002A1A  EF11  F015         	goto	u10170
 12167  002A1E                     u10171:
 12168  002A1E  EF12  F015         	goto	l8292
 12169  002A22                     u10170:
 12170  002A22  8E26               	bsf	(___flmul@prod+2)^0,7,c
 12171  002A24                     l8292:
 12172  002A24  90D8               	bcf	status,0,c
 12173  002A26  3023               	rrcf	___flmul@bexp^0,w,c
 12174  002A28  6E27               	movwf	(___flmul@prod+3)^0,c
 12175  002A2A                     l8294:
 12176  002A2A  501D               	movf	___flmul@sign^0,w,c
 12177  002A2C  1227               	iorwf	(___flmul@prod+3)^0,f,c
 12178  002A2E  C024  F011         	movff	___flmul@prod,?___flmul
 12179  002A32  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 12180  002A36  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 12181  002A3A  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 12182  002A3E                     l1579:
 12183  002A3E  0012               	return		;funcret
 12184  002A40                     __end_of___flmul:
 12185                           	opt callstack 0
 12186                           
 12187 ;; *************** function ___flge *****************
 12188 ;; Defined at:
 12189 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;  ff1             4   41[COMRAM] unsigned char 
 12192 ;;  ff2             4   45[COMRAM] unsigned char 
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;		None
 12195 ;; Return value:  Size  Location     Type
 12196 ;;		None               void
 12197 ;; Registers used:
 12198 ;;		wreg, status,2, status,0
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12204 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12208 ;;Total ram usage:       12 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:    4
 12211 ;; This function calls:
 12212 ;;		Nothing
 12213 ;; This function is called by:
 12214 ;;		_efgtoa
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           
 12218                           	psect	text26
 12219  004F3A                     __ptext26:
 12220                           	opt callstack 0
 12221  004F3A                     ___flge:
 12222                           	opt callstack 21
 12223  004F3A  0E00               	movlw	0
 12224  004F3C  142A               	andwf	___flge@ff1^0,w,c
 12225  004F3E  6E32               	movwf	??___flge^0,c
 12226  004F40  0E00               	movlw	0
 12227  004F42  142B               	andwf	(___flge@ff1+1)^0,w,c
 12228  004F44  6E33               	movwf	(??___flge+1)^0,c
 12229  004F46  0E80               	movlw	128
 12230  004F48  142C               	andwf	(___flge@ff1+2)^0,w,c
 12231  004F4A  6E34               	movwf	(??___flge+2)^0,c
 12232  004F4C  0E7F               	movlw	127
 12233  004F4E  142D               	andwf	(___flge@ff1+3)^0,w,c
 12234  004F50  6E35               	movwf	(??___flge+3)^0,c
 12235  004F52  5032               	movf	??___flge^0,w,c
 12236  004F54  1033               	iorwf	(??___flge+1)^0,w,c
 12237  004F56  1034               	iorwf	(??___flge+2)^0,w,c
 12238  004F58  1035               	iorwf	(??___flge+3)^0,w,c
 12239  004F5A  A4D8               	btfss	status,2,c
 12240  004F5C  EFB2  F027         	goto	u10331
 12241  004F60  EFB4  F027         	goto	u10330
 12242  004F64                     u10331:
 12243  004F64  EFBC  F027         	goto	l8406
 12244  004F68                     u10330:
 12245  004F68  0E00               	movlw	0
 12246  004F6A  6E2A               	movwf	___flge@ff1^0,c
 12247  004F6C  0E00               	movlw	0
 12248  004F6E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12249  004F70  0E00               	movlw	0
 12250  004F72  6E2C               	movwf	(___flge@ff1+2)^0,c
 12251  004F74  0E00               	movlw	0
 12252  004F76  6E2D               	movwf	(___flge@ff1+3)^0,c
 12253  004F78                     l8406:
 12254  004F78  0E00               	movlw	0
 12255  004F7A  142E               	andwf	___flge@ff2^0,w,c
 12256  004F7C  6E32               	movwf	??___flge^0,c
 12257  004F7E  0E00               	movlw	0
 12258  004F80  142F               	andwf	(___flge@ff2+1)^0,w,c
 12259  004F82  6E33               	movwf	(??___flge+1)^0,c
 12260  004F84  0E80               	movlw	128
 12261  004F86  1430               	andwf	(___flge@ff2+2)^0,w,c
 12262  004F88  6E34               	movwf	(??___flge+2)^0,c
 12263  004F8A  0E7F               	movlw	127
 12264  004F8C  1431               	andwf	(___flge@ff2+3)^0,w,c
 12265  004F8E  6E35               	movwf	(??___flge+3)^0,c
 12266  004F90  5032               	movf	??___flge^0,w,c
 12267  004F92  1033               	iorwf	(??___flge+1)^0,w,c
 12268  004F94  1034               	iorwf	(??___flge+2)^0,w,c
 12269  004F96  1035               	iorwf	(??___flge+3)^0,w,c
 12270  004F98  A4D8               	btfss	status,2,c
 12271  004F9A  EFD1  F027         	goto	u10341
 12272  004F9E  EFD3  F027         	goto	u10340
 12273  004FA2                     u10341:
 12274  004FA2  EFDB  F027         	goto	l8410
 12275  004FA6                     u10340:
 12276  004FA6  0E00               	movlw	0
 12277  004FA8  6E2E               	movwf	___flge@ff2^0,c
 12278  004FAA  0E00               	movlw	0
 12279  004FAC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12280  004FAE  0E00               	movlw	0
 12281  004FB0  6E30               	movwf	(___flge@ff2+2)^0,c
 12282  004FB2  0E00               	movlw	0
 12283  004FB4  6E31               	movwf	(___flge@ff2+3)^0,c
 12284  004FB6                     l8410:
 12285  004FB6  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 12286  004FB8  EFE0  F027         	goto	u10351
 12287  004FBC  EFE2  F027         	goto	u10350
 12288  004FC0                     u10351:
 12289  004FC0  EFEB  F027         	goto	l8414
 12290  004FC4                     u10350:
 12291  004FC4  6C2A               	negf	___flge@ff1^0,c
 12292  004FC6  1E2B               	comf	(___flge@ff1+1)^0,f,c
 12293  004FC8  B0D8               	btfsc	status,0,c
 12294  004FCA  2A2B               	incf	(___flge@ff1+1)^0,f,c
 12295  004FCC  1E2C               	comf	(___flge@ff1+2)^0,f,c
 12296  004FCE  B0D8               	btfsc	status,0,c
 12297  004FD0  2A2C               	incf	(___flge@ff1+2)^0,f,c
 12298  004FD2  0E80               	movlw	128
 12299  004FD4  562D               	subfwb	(___flge@ff1+3)^0,f,c
 12300  004FD6                     l8414:
 12301  004FD6  AE31               	btfss	(___flge@ff2+3)^0,7,c
 12302  004FD8  EFF0  F027         	goto	u10361
 12303  004FDC  EFF2  F027         	goto	u10360
 12304  004FE0                     u10361:
 12305  004FE0  EFFB  F027         	goto	l1226
 12306  004FE4                     u10360:
 12307  004FE4  6C2E               	negf	___flge@ff2^0,c
 12308  004FE6  1E2F               	comf	(___flge@ff2+1)^0,f,c
 12309  004FE8  B0D8               	btfsc	status,0,c
 12310  004FEA  2A2F               	incf	(___flge@ff2+1)^0,f,c
 12311  004FEC  1E30               	comf	(___flge@ff2+2)^0,f,c
 12312  004FEE  B0D8               	btfsc	status,0,c
 12313  004FF0  2A30               	incf	(___flge@ff2+2)^0,f,c
 12314  004FF2  0E80               	movlw	128
 12315  004FF4  5631               	subfwb	(___flge@ff2+3)^0,f,c
 12316  004FF6                     l1226:
 12317  004FF6  0E00               	movlw	0
 12318  004FF8  1A2A               	xorwf	___flge@ff1^0,f,c
 12319  004FFA  0E00               	movlw	0
 12320  004FFC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 12321  004FFE  0E00               	movlw	0
 12322  005000  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 12323  005002  0E80               	movlw	128
 12324  005004  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 12325  005006  0E00               	movlw	0
 12326  005008  1A2E               	xorwf	___flge@ff2^0,f,c
 12327  00500A  0E00               	movlw	0
 12328  00500C  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 12329  00500E  0E00               	movlw	0
 12330  005010  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 12331  005012  0E80               	movlw	128
 12332  005014  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 12333  005016  502E               	movf	___flge@ff2^0,w,c
 12334  005018  5C2A               	subwf	___flge@ff1^0,w,c
 12335  00501A  502F               	movf	(___flge@ff2+1)^0,w,c
 12336  00501C  582B               	subwfb	(___flge@ff1+1)^0,w,c
 12337  00501E  5030               	movf	(___flge@ff2+2)^0,w,c
 12338  005020  582C               	subwfb	(___flge@ff1+2)^0,w,c
 12339  005022  5031               	movf	(___flge@ff2+3)^0,w,c
 12340  005024  582D               	subwfb	(___flge@ff1+3)^0,w,c
 12341  005026  B0D8               	btfsc	status,0,c
 12342  005028  EF18  F028         	goto	u10371
 12343  00502C  EF1A  F028         	goto	u10370
 12344  005030                     u10371:
 12345  005030  EF1D  F028         	goto	l8420
 12346  005034                     u10370:
 12347  005034  90D8               	bcf	status,0,c
 12348  005036  EF1E  F028         	goto	l1231
 12349  00503A                     l8420:
 12350  00503A  80D8               	bsf	status,0,c
 12351  00503C                     l1231:
 12352  00503C  0012               	return		;funcret
 12353  00503E                     __end_of___flge:
 12354                           	opt callstack 0
 12355                           
 12356 ;; *************** function ___fleq *****************
 12357 ;; Defined at:
 12358 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  ff1             4    2[COMRAM] unsigned char 
 12361 ;;  ff2             4    6[COMRAM] unsigned char 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;		None
 12364 ;; Return value:  Size  Location     Type
 12365 ;;		None               void
 12366 ;; Registers used:
 12367 ;;		wreg, status,2, status,0
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12373 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12375 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12377 ;;Total ram usage:       12 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; Hardware stack levels required when called:    4
 12380 ;; This function calls:
 12381 ;;		Nothing
 12382 ;; This function is called by:
 12383 ;;		_efgtoa
 12384 ;; This function uses a non-reentrant model
 12385 ;;
 12386                           
 12387                           	psect	text27
 12388  0056AC                     __ptext27:
 12389                           	opt callstack 0
 12390  0056AC                     ___fleq:
 12391                           	opt callstack 21
 12392  0056AC  0E00               	movlw	0
 12393  0056AE  1403               	andwf	___fleq@ff1^0,w,c
 12394  0056B0  6E0B               	movwf	??___fleq^0,c
 12395  0056B2  0E00               	movlw	0
 12396  0056B4  1404               	andwf	(___fleq@ff1+1)^0,w,c
 12397  0056B6  6E0C               	movwf	(??___fleq+1)^0,c
 12398  0056B8  0E80               	movlw	128
 12399  0056BA  1405               	andwf	(___fleq@ff1+2)^0,w,c
 12400  0056BC  6E0D               	movwf	(??___fleq+2)^0,c
 12401  0056BE  0E7F               	movlw	127
 12402  0056C0  1406               	andwf	(___fleq@ff1+3)^0,w,c
 12403  0056C2  6E0E               	movwf	(??___fleq+3)^0,c
 12404  0056C4  500B               	movf	??___fleq^0,w,c
 12405  0056C6  100C               	iorwf	(??___fleq+1)^0,w,c
 12406  0056C8  100D               	iorwf	(??___fleq+2)^0,w,c
 12407  0056CA  100E               	iorwf	(??___fleq+3)^0,w,c
 12408  0056CC  A4D8               	btfss	status,2,c
 12409  0056CE  EF6B  F02B         	goto	u10301
 12410  0056D2  EF6D  F02B         	goto	u10300
 12411  0056D6                     u10301:
 12412  0056D6  EF75  F02B         	goto	l8390
 12413  0056DA                     u10300:
 12414  0056DA  0E00               	movlw	0
 12415  0056DC  6E03               	movwf	___fleq@ff1^0,c
 12416  0056DE  0E00               	movlw	0
 12417  0056E0  6E04               	movwf	(___fleq@ff1+1)^0,c
 12418  0056E2  0E00               	movlw	0
 12419  0056E4  6E05               	movwf	(___fleq@ff1+2)^0,c
 12420  0056E6  0E00               	movlw	0
 12421  0056E8  6E06               	movwf	(___fleq@ff1+3)^0,c
 12422  0056EA                     l8390:
 12423  0056EA  0E00               	movlw	0
 12424  0056EC  1407               	andwf	___fleq@ff2^0,w,c
 12425  0056EE  6E0B               	movwf	??___fleq^0,c
 12426  0056F0  0E00               	movlw	0
 12427  0056F2  1408               	andwf	(___fleq@ff2+1)^0,w,c
 12428  0056F4  6E0C               	movwf	(??___fleq+1)^0,c
 12429  0056F6  0E80               	movlw	128
 12430  0056F8  1409               	andwf	(___fleq@ff2+2)^0,w,c
 12431  0056FA  6E0D               	movwf	(??___fleq+2)^0,c
 12432  0056FC  0E7F               	movlw	127
 12433  0056FE  140A               	andwf	(___fleq@ff2+3)^0,w,c
 12434  005700  6E0E               	movwf	(??___fleq+3)^0,c
 12435  005702  500B               	movf	??___fleq^0,w,c
 12436  005704  100C               	iorwf	(??___fleq+1)^0,w,c
 12437  005706  100D               	iorwf	(??___fleq+2)^0,w,c
 12438  005708  100E               	iorwf	(??___fleq+3)^0,w,c
 12439  00570A  A4D8               	btfss	status,2,c
 12440  00570C  EF8A  F02B         	goto	u10311
 12441  005710  EF8C  F02B         	goto	u10310
 12442  005714                     u10311:
 12443  005714  EF94  F02B         	goto	l8394
 12444  005718                     u10310:
 12445  005718  0E00               	movlw	0
 12446  00571A  6E07               	movwf	___fleq@ff2^0,c
 12447  00571C  0E00               	movlw	0
 12448  00571E  6E08               	movwf	(___fleq@ff2+1)^0,c
 12449  005720  0E00               	movlw	0
 12450  005722  6E09               	movwf	(___fleq@ff2+2)^0,c
 12451  005724  0E00               	movlw	0
 12452  005726  6E0A               	movwf	(___fleq@ff2+3)^0,c
 12453  005728                     l8394:
 12454  005728  5007               	movf	___fleq@ff2^0,w,c
 12455  00572A  1803               	xorwf	___fleq@ff1^0,w,c
 12456  00572C  E10F               	bnz	u10320
 12457  00572E  5008               	movf	(___fleq@ff2+1)^0,w,c
 12458  005730  1804               	xorwf	(___fleq@ff1+1)^0,w,c
 12459  005732  E10C               	bnz	u10320
 12460  005734  5009               	movf	(___fleq@ff2+2)^0,w,c
 12461  005736  1805               	xorwf	(___fleq@ff1+2)^0,w,c
 12462  005738  E109               	bnz	u10320
 12463  00573A  500A               	movf	(___fleq@ff2+3)^0,w,c
 12464  00573C  1806               	xorwf	(___fleq@ff1+3)^0,w,c
 12465  00573E  B4D8               	btfsc	status,2,c
 12466  005740  EFA4  F02B         	goto	u10321
 12467  005744  EFA6  F02B         	goto	u10320
 12468  005748                     u10321:
 12469  005748  EFA9  F02B         	goto	l8398
 12470  00574C                     u10320:
 12471  00574C  90D8               	bcf	status,0,c
 12472  00574E  EFAA  F02B         	goto	l1220
 12473  005752                     l8398:
 12474  005752  80D8               	bsf	status,0,c
 12475  005754                     l1220:
 12476  005754  0012               	return		;funcret
 12477  005756                     __end_of___fleq:
 12478                           	opt callstack 0
 12479                           
 12480 ;; *************** function ___fldiv *****************
 12481 ;; Defined at:
 12482 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  b               4    2[COMRAM] unsigned char 
 12485 ;;  a               4    6[COMRAM] unsigned char 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;  grs             4   21[COMRAM] unsigned long 
 12488 ;;  rem             4   14[COMRAM] unsigned long 
 12489 ;;  new_exp         2   19[COMRAM] short 
 12490 ;;  aexp            1   26[COMRAM] unsigned char 
 12491 ;;  bexp            1   25[COMRAM] unsigned char 
 12492 ;;  sign            1   18[COMRAM] unsigned char 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  4    2[COMRAM] unsigned char 
 12495 ;; Registers used:
 12496 ;;		wreg, status,2, status,0
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12502 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12503 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12504 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12505 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12506 ;;Total ram usage:       25 bytes
 12507 ;; Hardware stack levels used:    1
 12508 ;; Hardware stack levels required when called:    4
 12509 ;; This function calls:
 12510 ;;		Nothing
 12511 ;; This function is called by:
 12512 ;;		_efgtoa
 12513 ;; This function uses a non-reentrant model
 12514 ;;
 12515                           
 12516                           	psect	text28
 12517  002A40                     __ptext28:
 12518                           	opt callstack 0
 12519  002A40                     ___fldiv:
 12520                           	opt callstack 21
 12521  002A40  5006               	movf	(___fldiv@b+3)^0,w,c
 12522  002A42  0B80               	andlw	128
 12523  002A44  6E13               	movwf	___fldiv@sign^0,c
 12524  002A46  5006               	movf	(___fldiv@b+3)^0,w,c
 12525  002A48  2406               	addwf	(___fldiv@b+3)^0,w,c
 12526  002A4A  6E1A               	movwf	___fldiv@bexp^0,c
 12527  002A4C  AE05               	btfss	(___fldiv@b+2)^0,7,c
 12528  002A4E  EF2B  F015         	goto	u9761
 12529  002A52  EF2D  F015         	goto	u9760
 12530  002A56                     u9761:
 12531  002A56  EF2E  F015         	goto	l8038
 12532  002A5A                     u9760:
 12533  002A5A  801A               	bsf	___fldiv@bexp^0,0,c
 12534  002A5C                     l8038:
 12535  002A5C  501A               	movf	___fldiv@bexp^0,w,c
 12536  002A5E  B4D8               	btfsc	status,2,c
 12537  002A60  EF34  F015         	goto	u9771
 12538  002A64  EF36  F015         	goto	u9770
 12539  002A68                     u9771:
 12540  002A68  EF4B  F015         	goto	l8048
 12541  002A6C                     u9770:
 12542  002A6C  281A               	incf	___fldiv@bexp^0,w,c
 12543  002A6E  A4D8               	btfss	status,2,c
 12544  002A70  EF3C  F015         	goto	u9781
 12545  002A74  EF3E  F015         	goto	u9780
 12546  002A78                     u9781:
 12547  002A78  EF46  F015         	goto	l8044
 12548  002A7C                     u9780:
 12549  002A7C  0E00               	movlw	0
 12550  002A7E  6E03               	movwf	___fldiv@b^0,c
 12551  002A80  0E00               	movlw	0
 12552  002A82  6E04               	movwf	(___fldiv@b+1)^0,c
 12553  002A84  0E00               	movlw	0
 12554  002A86  6E05               	movwf	(___fldiv@b+2)^0,c
 12555  002A88  0E00               	movlw	0
 12556  002A8A  6E06               	movwf	(___fldiv@b+3)^0,c
 12557  002A8C                     l8044:
 12558  002A8C  8E05               	bsf	(___fldiv@b+2)^0,7,c
 12559  002A8E  0E00               	movlw	0
 12560  002A90  6E06               	movwf	(___fldiv@b+3)^0,c
 12561  002A92  EF53  F015         	goto	l8050
 12562  002A96                     l8048:
 12563  002A96  0E00               	movlw	0
 12564  002A98  6E03               	movwf	___fldiv@b^0,c
 12565  002A9A  0E00               	movlw	0
 12566  002A9C  6E04               	movwf	(___fldiv@b+1)^0,c
 12567  002A9E  0E00               	movlw	0
 12568  002AA0  6E05               	movwf	(___fldiv@b+2)^0,c
 12569  002AA2  0E00               	movlw	0
 12570  002AA4  6E06               	movwf	(___fldiv@b+3)^0,c
 12571  002AA6                     l8050:
 12572  002AA6  500A               	movf	(___fldiv@a+3)^0,w,c
 12573  002AA8  0B80               	andlw	128
 12574  002AAA  1A13               	xorwf	___fldiv@sign^0,f,c
 12575  002AAC  500A               	movf	(___fldiv@a+3)^0,w,c
 12576  002AAE  240A               	addwf	(___fldiv@a+3)^0,w,c
 12577  002AB0  6E1B               	movwf	___fldiv@aexp^0,c
 12578  002AB2  AE09               	btfss	(___fldiv@a+2)^0,7,c
 12579  002AB4  EF5E  F015         	goto	u9791
 12580  002AB8  EF60  F015         	goto	u9790
 12581  002ABC                     u9791:
 12582  002ABC  EF61  F015         	goto	l8058
 12583  002AC0                     u9790:
 12584  002AC0  801B               	bsf	___fldiv@aexp^0,0,c
 12585  002AC2                     l8058:
 12586  002AC2  501B               	movf	___fldiv@aexp^0,w,c
 12587  002AC4  B4D8               	btfsc	status,2,c
 12588  002AC6  EF67  F015         	goto	u9801
 12589  002ACA  EF69  F015         	goto	u9800
 12590  002ACE                     u9801:
 12591  002ACE  EF7E  F015         	goto	l8068
 12592  002AD2                     u9800:
 12593  002AD2  281B               	incf	___fldiv@aexp^0,w,c
 12594  002AD4  A4D8               	btfss	status,2,c
 12595  002AD6  EF6F  F015         	goto	u9811
 12596  002ADA  EF71  F015         	goto	u9810
 12597  002ADE                     u9811:
 12598  002ADE  EF79  F015         	goto	l8064
 12599  002AE2                     u9810:
 12600  002AE2  0E00               	movlw	0
 12601  002AE4  6E07               	movwf	___fldiv@a^0,c
 12602  002AE6  0E00               	movlw	0
 12603  002AE8  6E08               	movwf	(___fldiv@a+1)^0,c
 12604  002AEA  0E00               	movlw	0
 12605  002AEC  6E09               	movwf	(___fldiv@a+2)^0,c
 12606  002AEE  0E00               	movlw	0
 12607  002AF0  6E0A               	movwf	(___fldiv@a+3)^0,c
 12608  002AF2                     l8064:
 12609  002AF2  8E09               	bsf	(___fldiv@a+2)^0,7,c
 12610  002AF4  0E00               	movlw	0
 12611  002AF6  6E0A               	movwf	(___fldiv@a+3)^0,c
 12612  002AF8  EF86  F015         	goto	l8070
 12613  002AFC                     l8068:
 12614  002AFC  0E00               	movlw	0
 12615  002AFE  6E07               	movwf	___fldiv@a^0,c
 12616  002B00  0E00               	movlw	0
 12617  002B02  6E08               	movwf	(___fldiv@a+1)^0,c
 12618  002B04  0E00               	movlw	0
 12619  002B06  6E09               	movwf	(___fldiv@a+2)^0,c
 12620  002B08  0E00               	movlw	0
 12621  002B0A  6E0A               	movwf	(___fldiv@a+3)^0,c
 12622  002B0C                     l8070:
 12623  002B0C  5007               	movf	___fldiv@a^0,w,c
 12624  002B0E  1008               	iorwf	(___fldiv@a+1)^0,w,c
 12625  002B10  1009               	iorwf	(___fldiv@a+2)^0,w,c
 12626  002B12  100A               	iorwf	(___fldiv@a+3)^0,w,c
 12627  002B14  A4D8               	btfss	status,2,c
 12628  002B16  EF8F  F015         	goto	u9821
 12629  002B1A  EF91  F015         	goto	u9820
 12630  002B1E                     u9821:
 12631  002B1E  EFA9  F015         	goto	l8082
 12632  002B22                     u9820:
 12633  002B22  0E00               	movlw	0
 12634  002B24  6E03               	movwf	___fldiv@b^0,c
 12635  002B26  0E00               	movlw	0
 12636  002B28  6E04               	movwf	(___fldiv@b+1)^0,c
 12637  002B2A  0E00               	movlw	0
 12638  002B2C  6E05               	movwf	(___fldiv@b+2)^0,c
 12639  002B2E  0E00               	movlw	0
 12640  002B30  6E06               	movwf	(___fldiv@b+3)^0,c
 12641  002B32  0E80               	movlw	128
 12642  002B34  1205               	iorwf	(___fldiv@b+2)^0,f,c
 12643  002B36  0E7F               	movlw	127
 12644  002B38  1206               	iorwf	(___fldiv@b+3)^0,f,c
 12645  002B3A                     l8076:
 12646  002B3A  5013               	movf	___fldiv@sign^0,w,c
 12647  002B3C  1206               	iorwf	(___fldiv@b+3)^0,f,c
 12648  002B3E  C003  F003         	movff	___fldiv@b,?___fldiv
 12649  002B42  C004  F004         	movff	___fldiv@b+1,?___fldiv+1
 12650  002B46  C005  F005         	movff	___fldiv@b+2,?___fldiv+2
 12651  002B4A  C006  F006         	movff	___fldiv@b+3,?___fldiv+3
 12652  002B4E  EFEC  F016         	goto	l1543
 12653  002B52                     l8082:
 12654  002B52  501A               	movf	___fldiv@bexp^0,w,c
 12655  002B54  A4D8               	btfss	status,2,c
 12656  002B56  EFAF  F015         	goto	u9831
 12657  002B5A  EFB1  F015         	goto	u9830
 12658  002B5E                     u9831:
 12659  002B5E  EFBB  F015         	goto	l8090
 12660  002B62                     u9830:
 12661  002B62  0E00               	movlw	0
 12662  002B64  6E03               	movwf	?___fldiv^0,c
 12663  002B66  0E00               	movlw	0
 12664  002B68  6E04               	movwf	(?___fldiv+1)^0,c
 12665  002B6A  0E00               	movlw	0
 12666  002B6C  6E05               	movwf	(?___fldiv+2)^0,c
 12667  002B6E  0E00               	movlw	0
 12668  002B70  6E06               	movwf	(?___fldiv+3)^0,c
 12669  002B72  EFEC  F016         	goto	l1543
 12670  002B76                     l8090:
 12671  002B76  501B               	movf	___fldiv@aexp^0,w,c
 12672  002B78  C01A  F00B         	movff	___fldiv@bexp,??___fldiv
 12673  002B7C  6A0C               	clrf	(??___fldiv+1)^0,c
 12674  002B7E  5E0B               	subwf	??___fldiv^0,f,c
 12675  002B80  0E00               	movlw	0
 12676  002B82  5A0C               	subwfb	(??___fldiv+1)^0,f,c
 12677  002B84  0E7F               	movlw	127
 12678  002B86  240B               	addwf	??___fldiv^0,w,c
 12679  002B88  6E14               	movwf	___fldiv@new_exp^0,c
 12680  002B8A  0E00               	movlw	0
 12681  002B8C  200C               	addwfc	(??___fldiv+1)^0,w,c
 12682  002B8E  6E15               	movwf	(___fldiv@new_exp+1)^0,c
 12683  002B90  C003  F00F         	movff	___fldiv@b,___fldiv@rem
 12684  002B94  C004  F010         	movff	___fldiv@b+1,___fldiv@rem+1
 12685  002B98  C005  F011         	movff	___fldiv@b+2,___fldiv@rem+2
 12686  002B9C  C006  F012         	movff	___fldiv@b+3,___fldiv@rem+3
 12687  002BA0  0E00               	movlw	0
 12688  002BA2  6E03               	movwf	___fldiv@b^0,c
 12689  002BA4  0E00               	movlw	0
 12690  002BA6  6E04               	movwf	(___fldiv@b+1)^0,c
 12691  002BA8  0E00               	movlw	0
 12692  002BAA  6E05               	movwf	(___fldiv@b+2)^0,c
 12693  002BAC  0E00               	movlw	0
 12694  002BAE  6E06               	movwf	(___fldiv@b+3)^0,c
 12695  002BB0  0E00               	movlw	0
 12696  002BB2  6E16               	movwf	___fldiv@grs^0,c
 12697  002BB4  0E00               	movlw	0
 12698  002BB6  6E17               	movwf	(___fldiv@grs+1)^0,c
 12699  002BB8  0E00               	movlw	0
 12700  002BBA  6E18               	movwf	(___fldiv@grs+2)^0,c
 12701  002BBC  0E00               	movlw	0
 12702  002BBE  6E19               	movwf	(___fldiv@grs+3)^0,c
 12703  002BC0  0E00               	movlw	0
 12704  002BC2  6E1B               	movwf	___fldiv@aexp^0,c
 12705  002BC4  EF1C  F016         	goto	l1545
 12706  002BC8                     l8100:
 12707  002BC8  501B               	movf	___fldiv@aexp^0,w,c
 12708  002BCA  B4D8               	btfsc	status,2,c
 12709  002BCC  EFEA  F015         	goto	u9841
 12710  002BD0  EFEC  F015         	goto	u9840
 12711  002BD4                     u9841:
 12712  002BD4  EF03  F016         	goto	l8108
 12713  002BD8                     u9840:
 12714  002BD8  90D8               	bcf	status,0,c
 12715  002BDA  360F               	rlcf	___fldiv@rem^0,f,c
 12716  002BDC  3610               	rlcf	(___fldiv@rem+1)^0,f,c
 12717  002BDE  3611               	rlcf	(___fldiv@rem+2)^0,f,c
 12718  002BE0  3612               	rlcf	(___fldiv@rem+3)^0,f,c
 12719  002BE2  90D8               	bcf	status,0,c
 12720  002BE4  3603               	rlcf	___fldiv@b^0,f,c
 12721  002BE6  3604               	rlcf	(___fldiv@b+1)^0,f,c
 12722  002BE8  3605               	rlcf	(___fldiv@b+2)^0,f,c
 12723  002BEA  3606               	rlcf	(___fldiv@b+3)^0,f,c
 12724  002BEC  AE19               	btfss	(___fldiv@grs+3)^0,7,c
 12725  002BEE  EFFB  F015         	goto	u9851
 12726  002BF2  EFFD  F015         	goto	u9850
 12727  002BF6                     u9851:
 12728  002BF6  EFFE  F015         	goto	l1548
 12729  002BFA                     u9850:
 12730  002BFA  8003               	bsf	___fldiv@b^0,0,c
 12731  002BFC                     l1548:
 12732  002BFC  90D8               	bcf	status,0,c
 12733  002BFE  3616               	rlcf	___fldiv@grs^0,f,c
 12734  002C00  3617               	rlcf	(___fldiv@grs+1)^0,f,c
 12735  002C02  3618               	rlcf	(___fldiv@grs+2)^0,f,c
 12736  002C04  3619               	rlcf	(___fldiv@grs+3)^0,f,c
 12737  002C06                     l8108:
 12738  002C06  5007               	movf	___fldiv@a^0,w,c
 12739  002C08  5C0F               	subwf	___fldiv@rem^0,w,c
 12740  002C0A  5008               	movf	(___fldiv@a+1)^0,w,c
 12741  002C0C  5810               	subwfb	(___fldiv@rem+1)^0,w,c
 12742  002C0E  5009               	movf	(___fldiv@a+2)^0,w,c
 12743  002C10  5811               	subwfb	(___fldiv@rem+2)^0,w,c
 12744  002C12  500A               	movf	(___fldiv@a+3)^0,w,c
 12745  002C14  5812               	subwfb	(___fldiv@rem+3)^0,w,c
 12746  002C16  A0D8               	btfss	status,0,c
 12747  002C18  EF10  F016         	goto	u9861
 12748  002C1C  EF12  F016         	goto	u9860
 12749  002C20                     u9861:
 12750  002C20  EF1B  F016         	goto	l8114
 12751  002C24                     u9860:
 12752  002C24  8C19               	bsf	(___fldiv@grs+3)^0,6,c
 12753  002C26  5007               	movf	___fldiv@a^0,w,c
 12754  002C28  5E0F               	subwf	___fldiv@rem^0,f,c
 12755  002C2A  5008               	movf	(___fldiv@a+1)^0,w,c
 12756  002C2C  5A10               	subwfb	(___fldiv@rem+1)^0,f,c
 12757  002C2E  5009               	movf	(___fldiv@a+2)^0,w,c
 12758  002C30  5A11               	subwfb	(___fldiv@rem+2)^0,f,c
 12759  002C32  500A               	movf	(___fldiv@a+3)^0,w,c
 12760  002C34  5A12               	subwfb	(___fldiv@rem+3)^0,f,c
 12761  002C36                     l8114:
 12762  002C36  2A1B               	incf	___fldiv@aexp^0,f,c
 12763  002C38                     l1545:
 12764  002C38  0E19               	movlw	25
 12765  002C3A  641B               	cpfsgt	___fldiv@aexp^0,c
 12766  002C3C  EF22  F016         	goto	u9871
 12767  002C40  EF24  F016         	goto	u9870
 12768  002C44                     u9871:
 12769  002C44  EFE4  F015         	goto	l8100
 12770  002C48                     u9870:
 12771  002C48  500F               	movf	___fldiv@rem^0,w,c
 12772  002C4A  1010               	iorwf	(___fldiv@rem+1)^0,w,c
 12773  002C4C  1011               	iorwf	(___fldiv@rem+2)^0,w,c
 12774  002C4E  1012               	iorwf	(___fldiv@rem+3)^0,w,c
 12775  002C50  B4D8               	btfsc	status,2,c
 12776  002C52  EF2D  F016         	goto	u9881
 12777  002C56  EF2F  F016         	goto	u9880
 12778  002C5A                     u9881:
 12779  002C5A  EF47  F016         	goto	l8126
 12780  002C5E                     u9880:
 12781  002C5E  8016               	bsf	___fldiv@grs^0,0,c
 12782  002C60  EF47  F016         	goto	l8126
 12783  002C64                     l8120:
 12784  002C64  90D8               	bcf	status,0,c
 12785  002C66  3603               	rlcf	___fldiv@b^0,f,c
 12786  002C68  3604               	rlcf	(___fldiv@b+1)^0,f,c
 12787  002C6A  3605               	rlcf	(___fldiv@b+2)^0,f,c
 12788  002C6C  3606               	rlcf	(___fldiv@b+3)^0,f,c
 12789  002C6E  AE19               	btfss	(___fldiv@grs+3)^0,7,c
 12790  002C70  EF3C  F016         	goto	u9891
 12791  002C74  EF3E  F016         	goto	u9890
 12792  002C78                     u9891:
 12793  002C78  EF3F  F016         	goto	l1554
 12794  002C7C                     u9890:
 12795  002C7C  8003               	bsf	___fldiv@b^0,0,c
 12796  002C7E                     l1554:
 12797  002C7E  90D8               	bcf	status,0,c
 12798  002C80  3616               	rlcf	___fldiv@grs^0,f,c
 12799  002C82  3617               	rlcf	(___fldiv@grs+1)^0,f,c
 12800  002C84  3618               	rlcf	(___fldiv@grs+2)^0,f,c
 12801  002C86  3619               	rlcf	(___fldiv@grs+3)^0,f,c
 12802  002C88  0614               	decf	___fldiv@new_exp^0,f,c
 12803  002C8A  A0D8               	btfss	status,0,c
 12804  002C8C  0615               	decf	(___fldiv@new_exp+1)^0,f,c
 12805  002C8E                     l8126:
 12806  002C8E  AE05               	btfss	(___fldiv@b+2)^0,7,c
 12807  002C90  EF4C  F016         	goto	u9901
 12808  002C94  EF4E  F016         	goto	u9900
 12809  002C98                     u9901:
 12810  002C98  EF32  F016         	goto	l8120
 12811  002C9C                     u9900:
 12812  002C9C  0E00               	movlw	0
 12813  002C9E  6E1B               	movwf	___fldiv@aexp^0,c
 12814  002CA0  AE19               	btfss	(___fldiv@grs+3)^0,7,c
 12815  002CA2  EF55  F016         	goto	u9911
 12816  002CA6  EF57  F016         	goto	u9910
 12817  002CAA                     u9911:
 12818  002CAA  EF7B  F016         	goto	l1556
 12819  002CAE                     u9910:
 12820  002CAE  0EFF               	movlw	255
 12821  002CB0  1416               	andwf	___fldiv@grs^0,w,c
 12822  002CB2  6E0B               	movwf	??___fldiv^0,c
 12823  002CB4  0EFF               	movlw	255
 12824  002CB6  1417               	andwf	(___fldiv@grs+1)^0,w,c
 12825  002CB8  6E0C               	movwf	(??___fldiv+1)^0,c
 12826  002CBA  0EFF               	movlw	255
 12827  002CBC  1418               	andwf	(___fldiv@grs+2)^0,w,c
 12828  002CBE  6E0D               	movwf	(??___fldiv+2)^0,c
 12829  002CC0  0E7F               	movlw	127
 12830  002CC2  1419               	andwf	(___fldiv@grs+3)^0,w,c
 12831  002CC4  6E0E               	movwf	(??___fldiv+3)^0,c
 12832  002CC6  500B               	movf	??___fldiv^0,w,c
 12833  002CC8  100C               	iorwf	(??___fldiv+1)^0,w,c
 12834  002CCA  100D               	iorwf	(??___fldiv+2)^0,w,c
 12835  002CCC  100E               	iorwf	(??___fldiv+3)^0,w,c
 12836  002CCE  B4D8               	btfsc	status,2,c
 12837  002CD0  EF6C  F016         	goto	u9921
 12838  002CD4  EF6E  F016         	goto	u9920
 12839  002CD8                     u9921:
 12840  002CD8  EF72  F016         	goto	l1557
 12841  002CDC                     u9920:
 12842  002CDC                     l8134:
 12843  002CDC  0E01               	movlw	1
 12844  002CDE  6E1B               	movwf	___fldiv@aexp^0,c
 12845  002CE0  EF7B  F016         	goto	l1556
 12846  002CE4                     l1557:
 12847  002CE4  A003               	btfss	___fldiv@b^0,0,c
 12848  002CE6  EF77  F016         	goto	u9931
 12849  002CEA  EF79  F016         	goto	u9930
 12850  002CEE                     u9931:
 12851  002CEE  EF7B  F016         	goto	l1556
 12852  002CF2                     u9930:
 12853  002CF2  EF6E  F016         	goto	l8134
 12854  002CF6                     l1556:
 12855  002CF6  501B               	movf	___fldiv@aexp^0,w,c
 12856  002CF8  B4D8               	btfsc	status,2,c
 12857  002CFA  EF81  F016         	goto	u9941
 12858  002CFE  EF83  F016         	goto	u9940
 12859  002D02                     u9941:
 12860  002D02  EFA7  F016         	goto	l8146
 12861  002D06                     u9940:
 12862  002D06  0E01               	movlw	1
 12863  002D08  2603               	addwf	___fldiv@b^0,f,c
 12864  002D0A  0E00               	movlw	0
 12865  002D0C  2204               	addwfc	(___fldiv@b+1)^0,f,c
 12866  002D0E  2205               	addwfc	(___fldiv@b+2)^0,f,c
 12867  002D10  2206               	addwfc	(___fldiv@b+3)^0,f,c
 12868  002D12  A006               	btfss	(___fldiv@b+3)^0,0,c
 12869  002D14  EF8E  F016         	goto	u9951
 12870  002D18  EF90  F016         	goto	u9950
 12871  002D1C                     u9951:
 12872  002D1C  EFA7  F016         	goto	l8146
 12873  002D20                     u9950:
 12874  002D20  C003  F00B         	movff	___fldiv@b,??___fldiv
 12875  002D24  C004  F00C         	movff	___fldiv@b+1,??___fldiv+1
 12876  002D28  C005  F00D         	movff	___fldiv@b+2,??___fldiv+2
 12877  002D2C  C006  F00E         	movff	___fldiv@b+3,??___fldiv+3
 12878  002D30  340E               	rlcf	(??___fldiv+3)^0,w,c
 12879  002D32  320E               	rrcf	(??___fldiv+3)^0,f,c
 12880  002D34  320D               	rrcf	(??___fldiv+2)^0,f,c
 12881  002D36  320C               	rrcf	(??___fldiv+1)^0,f,c
 12882  002D38  320B               	rrcf	??___fldiv^0,f,c
 12883  002D3A  C00B  F003         	movff	??___fldiv,___fldiv@b
 12884  002D3E  C00C  F004         	movff	??___fldiv+1,___fldiv@b+1
 12885  002D42  C00D  F005         	movff	??___fldiv+2,___fldiv@b+2
 12886  002D46  C00E  F006         	movff	??___fldiv+3,___fldiv@b+3
 12887  002D4A  4A14               	infsnz	___fldiv@new_exp^0,f,c
 12888  002D4C  2A15               	incf	(___fldiv@new_exp+1)^0,f,c
 12889  002D4E                     l8146:
 12890  002D4E  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12891  002D50  EFB2  F016         	goto	u9961
 12892  002D54  5015               	movf	(___fldiv@new_exp+1)^0,w,c
 12893  002D56  E108               	bnz	u9960
 12894  002D58  2814               	incf	___fldiv@new_exp^0,w,c
 12895  002D5A  A0D8               	btfss	status,0,c
 12896  002D5C  EFB2  F016         	goto	u9961
 12897  002D60  EFB4  F016         	goto	u9960
 12898  002D64                     u9961:
 12899  002D64  EFBF  F016         	goto	l8150
 12900  002D68                     u9960:
 12901  002D68  0E00               	movlw	0
 12902  002D6A  6E15               	movwf	(___fldiv@new_exp+1)^0,c
 12903  002D6C  6814               	setf	___fldiv@new_exp^0,c
 12904  002D6E  0E00               	movlw	0
 12905  002D70  6E03               	movwf	___fldiv@b^0,c
 12906  002D72  0E00               	movlw	0
 12907  002D74  6E04               	movwf	(___fldiv@b+1)^0,c
 12908  002D76  0E00               	movlw	0
 12909  002D78  6E05               	movwf	(___fldiv@b+2)^0,c
 12910  002D7A  0E00               	movlw	0
 12911  002D7C  6E06               	movwf	(___fldiv@b+3)^0,c
 12912  002D7E                     l8150:
 12913  002D7E  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12914  002D80  EFCC  F016         	goto	u9970
 12915  002D84  5015               	movf	(___fldiv@new_exp+1)^0,w,c
 12916  002D86  E106               	bnz	u9971
 12917  002D88  0414               	decf	___fldiv@new_exp^0,w,c
 12918  002D8A  B0D8               	btfsc	status,0,c
 12919  002D8C  EFCA  F016         	goto	u9971
 12920  002D90  EFCC  F016         	goto	u9970
 12921  002D94                     u9971:
 12922  002D94  EFDA  F016         	goto	l8154
 12923  002D98                     u9970:
 12924  002D98  0E00               	movlw	0
 12925  002D9A  6E15               	movwf	(___fldiv@new_exp+1)^0,c
 12926  002D9C  0E00               	movlw	0
 12927  002D9E  6E14               	movwf	___fldiv@new_exp^0,c
 12928  002DA0  0E00               	movlw	0
 12929  002DA2  6E03               	movwf	___fldiv@b^0,c
 12930  002DA4  0E00               	movlw	0
 12931  002DA6  6E04               	movwf	(___fldiv@b+1)^0,c
 12932  002DA8  0E00               	movlw	0
 12933  002DAA  6E05               	movwf	(___fldiv@b+2)^0,c
 12934  002DAC  0E00               	movlw	0
 12935  002DAE  6E06               	movwf	(___fldiv@b+3)^0,c
 12936  002DB0  0E00               	movlw	0
 12937  002DB2  6E13               	movwf	___fldiv@sign^0,c
 12938  002DB4                     l8154:
 12939  002DB4  C014  F01A         	movff	___fldiv@new_exp,___fldiv@bexp
 12940  002DB8  A01A               	btfss	___fldiv@bexp^0,0,c
 12941  002DBA  EFE1  F016         	goto	u9981
 12942  002DBE  EFE3  F016         	goto	u9980
 12943  002DC2                     u9981:
 12944  002DC2  EFE6  F016         	goto	l8160
 12945  002DC6                     u9980:
 12946  002DC6  8E05               	bsf	(___fldiv@b+2)^0,7,c
 12947  002DC8  EFE7  F016         	goto	l8162
 12948  002DCC                     l8160:
 12949  002DCC  9E05               	bcf	(___fldiv@b+2)^0,7,c
 12950  002DCE                     l8162:
 12951  002DCE  90D8               	bcf	status,0,c
 12952  002DD0  301A               	rrcf	___fldiv@bexp^0,w,c
 12953  002DD2  6E06               	movwf	(___fldiv@b+3)^0,c
 12954  002DD4  EF9D  F015         	goto	l8076
 12955  002DD8                     l1543:
 12956  002DD8  0012               	return		;funcret
 12957  002DDA                     __end_of___fldiv:
 12958                           	opt callstack 0
 12959                           
 12960 ;; *************** function ___awmod *****************
 12961 ;; Defined at:
 12962 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 12963 ;; Parameters:    Size  Location     Type
 12964 ;;  dividend        2    2[COMRAM] int 
 12965 ;;  divisor         2    4[COMRAM] int 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;  sign            1    7[COMRAM] unsigned char 
 12968 ;;  counter         1    6[COMRAM] unsigned char 
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  2    2[COMRAM] int 
 12971 ;; Registers used:
 12972 ;;		wreg, status,2, status,0
 12973 ;; Tracked objects:
 12974 ;;		On entry : 0/0
 12975 ;;		On exit  : 0/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12982 ;;Total ram usage:        6 bytes
 12983 ;; Hardware stack levels used:    1
 12984 ;; Hardware stack levels required when called:    4
 12985 ;; This function calls:
 12986 ;;		Nothing
 12987 ;; This function is called by:
 12988 ;;		_efgtoa
 12989 ;; This function uses a non-reentrant model
 12990 ;;
 12991                           
 12992                           	psect	text29
 12993  00554C                     __ptext29:
 12994                           	opt callstack 0
 12995  00554C                     ___awmod:
 12996                           	opt callstack 21
 12997  00554C  0E00               	movlw	0
 12998  00554E  6E08               	movwf	___awmod@sign^0,c
 12999  005550  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
 13000  005552  EFAF  F02A         	goto	u10240
 13001  005556  EFAD  F02A         	goto	u10241
 13002  00555A                     u10241:
 13003  00555A  EFB5  F02A         	goto	l8358
 13004  00555E                     u10240:
 13005  00555E  6C03               	negf	___awmod@dividend^0,c
 13006  005560  1E04               	comf	(___awmod@dividend+1)^0,f,c
 13007  005562  B0D8               	btfsc	status,0,c
 13008  005564  2A04               	incf	(___awmod@dividend+1)^0,f,c
 13009  005566  0E01               	movlw	1
 13010  005568  6E08               	movwf	___awmod@sign^0,c
 13011  00556A                     l8358:
 13012  00556A  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
 13013  00556C  EFBC  F02A         	goto	u10250
 13014  005570  EFBA  F02A         	goto	u10251
 13015  005574                     u10251:
 13016  005574  EFC0  F02A         	goto	l8362
 13017  005578                     u10250:
 13018  005578  6C05               	negf	___awmod@divisor^0,c
 13019  00557A  1E06               	comf	(___awmod@divisor+1)^0,f,c
 13020  00557C  B0D8               	btfsc	status,0,c
 13021  00557E  2A06               	incf	(___awmod@divisor+1)^0,f,c
 13022  005580                     l8362:
 13023  005580  5005               	movf	___awmod@divisor^0,w,c
 13024  005582  1006               	iorwf	(___awmod@divisor+1)^0,w,c
 13025  005584  B4D8               	btfsc	status,2,c
 13026  005586  EFC7  F02A         	goto	u10261
 13027  00558A  EFC9  F02A         	goto	u10260
 13028  00558E                     u10261:
 13029  00558E  EFED  F02A         	goto	l8378
 13030  005592                     u10260:
 13031  005592  0E01               	movlw	1
 13032  005594  6E07               	movwf	___awmod@counter^0,c
 13033  005596  EFD1  F02A         	goto	l8368
 13034  00559A                     l8366:
 13035  00559A  90D8               	bcf	status,0,c
 13036  00559C  3605               	rlcf	___awmod@divisor^0,f,c
 13037  00559E  3606               	rlcf	(___awmod@divisor+1)^0,f,c
 13038  0055A0  2A07               	incf	___awmod@counter^0,f,c
 13039  0055A2                     l8368:
 13040  0055A2  AE06               	btfss	(___awmod@divisor+1)^0,7,c
 13041  0055A4  EFD6  F02A         	goto	u10271
 13042  0055A8  EFD8  F02A         	goto	u10270
 13043  0055AC                     u10271:
 13044  0055AC  EFCD  F02A         	goto	l8366
 13045  0055B0                     u10270:
 13046  0055B0                     l8370:
 13047  0055B0  5005               	movf	___awmod@divisor^0,w,c
 13048  0055B2  5C03               	subwf	___awmod@dividend^0,w,c
 13049  0055B4  5006               	movf	(___awmod@divisor+1)^0,w,c
 13050  0055B6  5804               	subwfb	(___awmod@dividend+1)^0,w,c
 13051  0055B8  A0D8               	btfss	status,0,c
 13052  0055BA  EFE1  F02A         	goto	u10281
 13053  0055BE  EFE3  F02A         	goto	u10280
 13054  0055C2                     u10281:
 13055  0055C2  EFE7  F02A         	goto	l8374
 13056  0055C6                     u10280:
 13057  0055C6  5005               	movf	___awmod@divisor^0,w,c
 13058  0055C8  5E03               	subwf	___awmod@dividend^0,f,c
 13059  0055CA  5006               	movf	(___awmod@divisor+1)^0,w,c
 13060  0055CC  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
 13061  0055CE                     l8374:
 13062  0055CE  90D8               	bcf	status,0,c
 13063  0055D0  3206               	rrcf	(___awmod@divisor+1)^0,f,c
 13064  0055D2  3205               	rrcf	___awmod@divisor^0,f,c
 13065  0055D4  2E07               	decfsz	___awmod@counter^0,f,c
 13066  0055D6  EFD8  F02A         	goto	l8370
 13067  0055DA                     l8378:
 13068  0055DA  5008               	movf	___awmod@sign^0,w,c
 13069  0055DC  B4D8               	btfsc	status,2,c
 13070  0055DE  EFF3  F02A         	goto	u10291
 13071  0055E2  EFF5  F02A         	goto	u10290
 13072  0055E6                     u10291:
 13073  0055E6  EFF9  F02A         	goto	l8382
 13074  0055EA                     u10290:
 13075  0055EA  6C03               	negf	___awmod@dividend^0,c
 13076  0055EC  1E04               	comf	(___awmod@dividend+1)^0,f,c
 13077  0055EE  B0D8               	btfsc	status,0,c
 13078  0055F0  2A04               	incf	(___awmod@dividend+1)^0,f,c
 13079  0055F2                     l8382:
 13080  0055F2  C003  F003         	movff	___awmod@dividend,?___awmod
 13081  0055F6  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
 13082  0055FA  0012               	return		;funcret
 13083  0055FC                     __end_of___awmod:
 13084                           	opt callstack 0
 13085                           
 13086 ;; *************** function ___awdiv *****************
 13087 ;; Defined at:
 13088 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;  dividend        2    2[COMRAM] int 
 13091 ;;  divisor         2    4[COMRAM] int 
 13092 ;; Auto vars:     Size  Location     Type
 13093 ;;  quotient        2    8[COMRAM] int 
 13094 ;;  sign            1    7[COMRAM] unsigned char 
 13095 ;;  counter         1    6[COMRAM] unsigned char 
 13096 ;; Return value:  Size  Location     Type
 13097 ;;                  2    2[COMRAM] int 
 13098 ;; Registers used:
 13099 ;;		wreg, status,2, status,0
 13100 ;; Tracked objects:
 13101 ;;		On entry : 0/0
 13102 ;;		On exit  : 0/0
 13103 ;;		Unchanged: 0/0
 13104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13106 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13108 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13109 ;;Total ram usage:        8 bytes
 13110 ;; Hardware stack levels used:    1
 13111 ;; Hardware stack levels required when called:    4
 13112 ;; This function calls:
 13113 ;;		Nothing
 13114 ;; This function is called by:
 13115 ;;		_efgtoa
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text30
 13120  0053C6                     __ptext30:
 13121                           	opt callstack 0
 13122  0053C6                     ___awdiv:
 13123                           	opt callstack 21
 13124  0053C6  0E00               	movlw	0
 13125  0053C8  6E08               	movwf	___awdiv@sign^0,c
 13126  0053CA  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
 13127  0053CC  EFEC  F029         	goto	u10180
 13128  0053D0  EFEA  F029         	goto	u10181
 13129  0053D4                     u10181:
 13130  0053D4  EFF2  F029         	goto	l8314
 13131  0053D8                     u10180:
 13132  0053D8  6C05               	negf	___awdiv@divisor^0,c
 13133  0053DA  1E06               	comf	(___awdiv@divisor+1)^0,f,c
 13134  0053DC  B0D8               	btfsc	status,0,c
 13135  0053DE  2A06               	incf	(___awdiv@divisor+1)^0,f,c
 13136  0053E0  0E01               	movlw	1
 13137  0053E2  6E08               	movwf	___awdiv@sign^0,c
 13138  0053E4                     l8314:
 13139  0053E4  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
 13140  0053E6  EFF9  F029         	goto	u10190
 13141  0053EA  EFF7  F029         	goto	u10191
 13142  0053EE                     u10191:
 13143  0053EE  EFFF  F029         	goto	l8320
 13144  0053F2                     u10190:
 13145  0053F2  6C03               	negf	___awdiv@dividend^0,c
 13146  0053F4  1E04               	comf	(___awdiv@dividend+1)^0,f,c
 13147  0053F6  B0D8               	btfsc	status,0,c
 13148  0053F8  2A04               	incf	(___awdiv@dividend+1)^0,f,c
 13149  0053FA  0E01               	movlw	1
 13150  0053FC  1A08               	xorwf	___awdiv@sign^0,f,c
 13151  0053FE                     l8320:
 13152  0053FE  0E00               	movlw	0
 13153  005400  6E0A               	movwf	(___awdiv@quotient+1)^0,c
 13154  005402  0E00               	movlw	0
 13155  005404  6E09               	movwf	___awdiv@quotient^0,c
 13156  005406  5005               	movf	___awdiv@divisor^0,w,c
 13157  005408  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
 13158  00540A  B4D8               	btfsc	status,2,c
 13159  00540C  EF0A  F02A         	goto	u10201
 13160  005410  EF0C  F02A         	goto	u10200
 13161  005414                     u10201:
 13162  005414  EF34  F02A         	goto	l8342
 13163  005418                     u10200:
 13164  005418  0E01               	movlw	1
 13165  00541A  6E07               	movwf	___awdiv@counter^0,c
 13166  00541C  EF14  F02A         	goto	l8328
 13167  005420                     l8326:
 13168  005420  90D8               	bcf	status,0,c
 13169  005422  3605               	rlcf	___awdiv@divisor^0,f,c
 13170  005424  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
 13171  005426  2A07               	incf	___awdiv@counter^0,f,c
 13172  005428                     l8328:
 13173  005428  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
 13174  00542A  EF19  F02A         	goto	u10211
 13175  00542E  EF1B  F02A         	goto	u10210
 13176  005432                     u10211:
 13177  005432  EF10  F02A         	goto	l8326
 13178  005436                     u10210:
 13179  005436                     l8330:
 13180  005436  90D8               	bcf	status,0,c
 13181  005438  3609               	rlcf	___awdiv@quotient^0,f,c
 13182  00543A  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
 13183  00543C  5005               	movf	___awdiv@divisor^0,w,c
 13184  00543E  5C03               	subwf	___awdiv@dividend^0,w,c
 13185  005440  5006               	movf	(___awdiv@divisor+1)^0,w,c
 13186  005442  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
 13187  005444  A0D8               	btfss	status,0,c
 13188  005446  EF27  F02A         	goto	u10221
 13189  00544A  EF29  F02A         	goto	u10220
 13190  00544E                     u10221:
 13191  00544E  EF2E  F02A         	goto	l8338
 13192  005452                     u10220:
 13193  005452  5005               	movf	___awdiv@divisor^0,w,c
 13194  005454  5E03               	subwf	___awdiv@dividend^0,f,c
 13195  005456  5006               	movf	(___awdiv@divisor+1)^0,w,c
 13196  005458  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
 13197  00545A  8009               	bsf	___awdiv@quotient^0,0,c
 13198  00545C                     l8338:
 13199  00545C  90D8               	bcf	status,0,c
 13200  00545E  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
 13201  005460  3205               	rrcf	___awdiv@divisor^0,f,c
 13202  005462  2E07               	decfsz	___awdiv@counter^0,f,c
 13203  005464  EF1B  F02A         	goto	l8330
 13204  005468                     l8342:
 13205  005468  5008               	movf	___awdiv@sign^0,w,c
 13206  00546A  B4D8               	btfsc	status,2,c
 13207  00546C  EF3A  F02A         	goto	u10231
 13208  005470  EF3C  F02A         	goto	u10230
 13209  005474                     u10231:
 13210  005474  EF40  F02A         	goto	l8346
 13211  005478                     u10230:
 13212  005478  6C09               	negf	___awdiv@quotient^0,c
 13213  00547A  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
 13214  00547C  B0D8               	btfsc	status,0,c
 13215  00547E  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
 13216  005480                     l8346:
 13217  005480  C009  F003         	movff	___awdiv@quotient,?___awdiv
 13218  005484  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
 13219  005488  0012               	return		;funcret
 13220  00548A                     __end_of___awdiv:
 13221                           	opt callstack 0
 13222                           
 13223 ;; *************** function _dtoa *****************
 13224 ;; Defined at:
 13225 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13226 ;; Parameters:    Size  Location     Type
 13227 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 13228 ;;		 -> vsnprintf@f(6), 
 13229 ;;  d               8   31[COMRAM] long long 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;  n               8   55[COMRAM] long long 
 13232 ;;  i               2   63[COMRAM] int 
 13233 ;;  s               2   53[COMRAM] int 
 13234 ;;  w               2   51[COMRAM] int 
 13235 ;;  p               2   49[COMRAM] int 
 13236 ;; Return value:  Size  Location     Type
 13237 ;;                  2   29[COMRAM] int 
 13238 ;; Registers used:
 13239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13240 ;; Tracked objects:
 13241 ;;		On entry : 0/0
 13242 ;;		On exit  : 0/0
 13243 ;;		Unchanged: 0/0
 13244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13245 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13246 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13247 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13248 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13249 ;;Total ram usage:       36 bytes
 13250 ;; Hardware stack levels used:    1
 13251 ;; Hardware stack levels required when called:    8
 13252 ;; This function calls:
 13253 ;;		___aodiv
 13254 ;;		___aomod
 13255 ;;		_abs
 13256 ;;		_pad
 13257 ;; This function is called by:
 13258 ;;		_vfpfcnvrt
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           	psect	text31
 13263  003160                     __ptext31:
 13264                           	opt callstack 0
 13265  003160                     _dtoa:
 13266                           	opt callstack 18
 13267  003160                     
 13268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 13269  003160  C020  F038         	movff	dtoa@d,dtoa@n
 13270  003164  C021  F039         	movff	dtoa@d+1,dtoa@n+1
 13271  003168  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
 13272  00316C  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
 13273  003170  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
 13274  003174  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
 13275  003178  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
 13276  00317C  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
 13277  003180                     
 13278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 13279  003180  BE3F               	btfsc	(dtoa@n+7)^0,7,c
 13280  003182  EFC5  F018         	goto	u10561
 13281  003186  EFC8  F018         	goto	u10560
 13282  00318A                     u10561:
 13283  00318A  0E01               	movlw	1
 13284  00318C  EFC9  F018         	goto	u10570
 13285  003190                     u10560:
 13286  003190  0E00               	movlw	0
 13287  003192                     u10570:
 13288  003192  6E36               	movwf	dtoa@s^0,c
 13289  003194  6A37               	clrf	(dtoa@s+1)^0,c
 13290                           
 13291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 13292  003196  5036               	movf	dtoa@s^0,w,c
 13293  003198  1037               	iorwf	(dtoa@s+1)^0,w,c
 13294  00319A  B4D8               	btfsc	status,2,c
 13295  00319C  EFD2  F018         	goto	u10581
 13296  0031A0  EFD4  F018         	goto	u10580
 13297  0031A4                     u10581:
 13298  0031A4  EFE4  F018         	goto	l8546
 13299  0031A8                     u10580:
 13300  0031A8                     
 13301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 13302  0031A8  1E3F               	comf	(dtoa@n+7)^0,f,c
 13303  0031AA  1E3E               	comf	(dtoa@n+6)^0,f,c
 13304  0031AC  1E3D               	comf	(dtoa@n+5)^0,f,c
 13305  0031AE  1E3C               	comf	(dtoa@n+4)^0,f,c
 13306  0031B0  1E3B               	comf	(dtoa@n+3)^0,f,c
 13307  0031B2  1E3A               	comf	(dtoa@n+2)^0,f,c
 13308  0031B4  1E39               	comf	(dtoa@n+1)^0,f,c
 13309  0031B6  6C38               	negf	dtoa@n^0,c
 13310  0031B8  0E00               	movlw	0
 13311  0031BA  2239               	addwfc	(dtoa@n+1)^0,f,c
 13312  0031BC  223A               	addwfc	(dtoa@n+2)^0,f,c
 13313  0031BE  223B               	addwfc	(dtoa@n+3)^0,f,c
 13314  0031C0  223C               	addwfc	(dtoa@n+4)^0,f,c
 13315  0031C2  223D               	addwfc	(dtoa@n+5)^0,f,c
 13316  0031C4  223E               	addwfc	(dtoa@n+6)^0,f,c
 13317  0031C6  223F               	addwfc	(dtoa@n+7)^0,f,c
 13318  0031C8                     l8546:
 13319                           
 13320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13321  0031C8  BE58               	btfsc	(_prec+1)^0,7,c
 13322  0031CA  EFE9  F018         	goto	u10591
 13323  0031CE  EFEB  F018         	goto	u10590
 13324  0031D2                     u10591:
 13325  0031D2  EFEC  F018         	goto	l8550
 13326  0031D6                     u10590:
 13327  0031D6                     
 13328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13329  0031D6  9259               	bcf	_flags^0,1,c
 13330  0031D8                     l8550:
 13331                           
 13332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13333  0031D8  BE58               	btfsc	(_prec+1)^0,7,c
 13334  0031DA  EFF9  F018         	goto	u10600
 13335  0031DE  5058               	movf	(_prec+1)^0,w,c
 13336  0031E0  E106               	bnz	u10601
 13337  0031E2  0457               	decf	_prec^0,w,c
 13338  0031E4  B0D8               	btfsc	status,0,c
 13339  0031E6  EFF7  F018         	goto	u10601
 13340  0031EA  EFF9  F018         	goto	u10600
 13341  0031EE                     u10601:
 13342  0031EE  EFFF  F018         	goto	l671
 13343  0031F2                     u10600:
 13344  0031F2  0E00               	movlw	0
 13345  0031F4  6E33               	movwf	(dtoa@p+1)^0,c
 13346  0031F6  0E01               	movlw	1
 13347  0031F8  6E32               	movwf	dtoa@p^0,c
 13348  0031FA  EF03  F019         	goto	l673
 13349  0031FE                     l671:
 13350  0031FE  C057  F032         	movff	_prec,dtoa@p
 13351  003202  C058  F033         	movff	_prec+1,dtoa@p+1
 13352  003206                     l673:
 13353                           
 13354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13355  003206  C0EC  F034         	movff	_width,dtoa@w
 13356  00320A  C0ED  F035         	movff	_width+1,dtoa@w+1
 13357  00320E                     
 13358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13359  00320E  5036               	movf	dtoa@s^0,w,c
 13360  003210  1037               	iorwf	(dtoa@s+1)^0,w,c
 13361  003212  A4D8               	btfss	status,2,c
 13362  003214  EF0E  F019         	goto	u10611
 13363  003218  EF10  F019         	goto	u10610
 13364  00321C                     u10611:
 13365  00321C  EF17  F019         	goto	l8558
 13366  003220                     u10610:
 13367  003220  A459               	btfss	_flags^0,2,c
 13368  003222  EF15  F019         	goto	u10621
 13369  003226  EF17  F019         	goto	u10620
 13370  00322A                     u10621:
 13371  00322A  EF1A  F019         	goto	l8560
 13372  00322E                     u10620:
 13373  00322E                     l8558:
 13374                           
 13375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13376  00322E  0634               	decf	dtoa@w^0,f,c
 13377  003230  A0D8               	btfss	status,0,c
 13378  003232  0635               	decf	(dtoa@w+1)^0,f,c
 13379  003234                     l8560:
 13380                           
 13381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13382  003234  0E00               	movlw	0
 13383  003236  6E41               	movwf	(dtoa@i+1)^0,c
 13384  003238  0E4F               	movlw	79
 13385  00323A  6E40               	movwf	dtoa@i^0,c
 13386  00323C                     
 13387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13388  00323C  0E00               	movlw	0
 13389  00323E  0101               	movlb	1	; () banked
 13390  003240  6FB3               	movwf	(_dbuf+79)& (0+255),b
 13391                           
 13392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13393  003242  EF9F  F019         	goto	l8574
 13394  003246                     l8564:
 13395                           
 13396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13397  003246  0640               	decf	dtoa@i^0,f,c
 13398  003248  A0D8               	btfss	status,0,c
 13399  00324A  0641               	decf	(dtoa@i+1)^0,f,c
 13400  00324C                     
 13401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13402  00324C  0E64               	movlw	low _dbuf
 13403  00324E  2440               	addwf	dtoa@i^0,w,c
 13404  003250  6ED9               	movwf	fsr2l,c
 13405  003252  0E01               	movlw	high _dbuf
 13406  003254  2041               	addwfc	(dtoa@i+1)^0,w,c
 13407  003256  6EDA               	movwf	fsr2h,c
 13408  003258  C038  F003         	movff	dtoa@n,___aomod@dividend
 13409  00325C  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
 13410  003260  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
 13411  003264  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
 13412  003268  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
 13413  00326C  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
 13414  003270  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
 13415  003274  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
 13416  003278  0E0A               	movlw	10
 13417  00327A  6E0B               	movwf	___aomod@divisor^0,c
 13418  00327C  0E00               	movlw	0
 13419  00327E  6E0C               	movwf	(___aomod@divisor+1)^0,c
 13420  003280  0E00               	movlw	0
 13421  003282  6E0D               	movwf	(___aomod@divisor+2)^0,c
 13422  003284  0E00               	movlw	0
 13423  003286  6E0E               	movwf	(___aomod@divisor+3)^0,c
 13424  003288  0E00               	movlw	0
 13425  00328A  6E0F               	movwf	(___aomod@divisor+4)^0,c
 13426  00328C  0E00               	movlw	0
 13427  00328E  6E10               	movwf	(___aomod@divisor+5)^0,c
 13428  003290  0E00               	movlw	0
 13429  003292  6E11               	movwf	(___aomod@divisor+6)^0,c
 13430  003294  0E00               	movlw	0
 13431  003296  6E12               	movwf	(___aomod@divisor+7)^0,c
 13432  003298  EC2E  F024         	call	___aomod	;wreg free
 13433  00329C  C003  F028         	movff	?___aomod,??_dtoa
 13434  0032A0  C004  F029         	movff	?___aomod+1,??_dtoa+1
 13435  0032A4  C005  F02A         	movff	?___aomod+2,??_dtoa+2
 13436  0032A8  C006  F02B         	movff	?___aomod+3,??_dtoa+3
 13437  0032AC  C007  F02C         	movff	?___aomod+4,??_dtoa+4
 13438  0032B0  C008  F02D         	movff	?___aomod+5,??_dtoa+5
 13439  0032B4  C009  F02E         	movff	?___aomod+6,??_dtoa+6
 13440  0032B8  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
 13441  0032BC  C028  F015         	movff	??_dtoa,abs@a
 13442  0032C0  C02A  F016         	movff	??_dtoa+2,abs@a+1
 13443  0032C4  EC0B  F02E         	call	_abs	;wreg free
 13444  0032C8  5015               	movf	?_abs^0,w,c
 13445  0032CA  0F30               	addlw	48
 13446  0032CC  6EDF               	movwf	indf2,c
 13447  0032CE                     
 13448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13449  0032CE  0632               	decf	dtoa@p^0,f,c
 13450  0032D0  A0D8               	btfss	status,0,c
 13451  0032D2  0633               	decf	(dtoa@p+1)^0,f,c
 13452  0032D4                     
 13453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13454  0032D4  0634               	decf	dtoa@w^0,f,c
 13455  0032D6  A0D8               	btfss	status,0,c
 13456  0032D8  0635               	decf	(dtoa@w+1)^0,f,c
 13457  0032DA                     
 13458                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13459  0032DA  C038  F003         	movff	dtoa@n,___aodiv@dividend
 13460  0032DE  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
 13461  0032E2  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
 13462  0032E6  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
 13463  0032EA  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
 13464  0032EE  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
 13465  0032F2  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
 13466  0032F6  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
 13467  0032FA  0E0A               	movlw	10
 13468  0032FC  6E0B               	movwf	___aodiv@divisor^0,c
 13469  0032FE  0E00               	movlw	0
 13470  003300  6E0C               	movwf	(___aodiv@divisor+1)^0,c
 13471  003302  0E00               	movlw	0
 13472  003304  6E0D               	movwf	(___aodiv@divisor+2)^0,c
 13473  003306  0E00               	movlw	0
 13474  003308  6E0E               	movwf	(___aodiv@divisor+3)^0,c
 13475  00330A  0E00               	movlw	0
 13476  00330C  6E0F               	movwf	(___aodiv@divisor+4)^0,c
 13477  00330E  0E00               	movlw	0
 13478  003310  6E10               	movwf	(___aodiv@divisor+5)^0,c
 13479  003312  0E00               	movlw	0
 13480  003314  6E11               	movwf	(___aodiv@divisor+6)^0,c
 13481  003316  0E00               	movlw	0
 13482  003318  6E12               	movwf	(___aodiv@divisor+7)^0,c
 13483  00331A  EC38  F021         	call	___aodiv	;wreg free
 13484  00331E  C003  F038         	movff	?___aodiv,dtoa@n
 13485  003322  C004  F039         	movff	?___aodiv+1,dtoa@n+1
 13486  003326  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
 13487  00332A  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
 13488  00332E  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
 13489  003332  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
 13490  003336  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
 13491  00333A  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
 13492  00333E                     l8574:
 13493                           
 13494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13495  00333E  BE41               	btfsc	(dtoa@i+1)^0,7,c
 13496  003340  EFAA  F019         	goto	u10631
 13497  003344  5041               	movf	(dtoa@i+1)^0,w,c
 13498  003346  E108               	bnz	u10630
 13499  003348  0440               	decf	dtoa@i^0,w,c
 13500  00334A  A0D8               	btfss	status,0,c
 13501  00334C  EFAA  F019         	goto	u10631
 13502  003350  EFAC  F019         	goto	u10630
 13503  003354                     u10631:
 13504  003354  EFDC  F019         	goto	l8584
 13505  003358                     u10630:
 13506  003358  5038               	movf	dtoa@n^0,w,c
 13507  00335A  1039               	iorwf	(dtoa@n+1)^0,w,c
 13508  00335C  103A               	iorwf	(dtoa@n+2)^0,w,c
 13509  00335E  103B               	iorwf	(dtoa@n+3)^0,w,c
 13510  003360  103C               	iorwf	(dtoa@n+4)^0,w,c
 13511  003362  103D               	iorwf	(dtoa@n+5)^0,w,c
 13512  003364  103E               	iorwf	(dtoa@n+6)^0,w,c
 13513  003366  103F               	iorwf	(dtoa@n+7)^0,w,c
 13514  003368  A4D8               	btfss	status,2,c
 13515  00336A  EFB9  F019         	goto	u10641
 13516  00336E  EFBB  F019         	goto	u10640
 13517  003372                     u10641:
 13518  003372  EF23  F019         	goto	l8564
 13519  003376                     u10640:
 13520  003376  BE33               	btfsc	(dtoa@p+1)^0,7,c
 13521  003378  EFC8  F019         	goto	u10650
 13522  00337C  5033               	movf	(dtoa@p+1)^0,w,c
 13523  00337E  E106               	bnz	u10651
 13524  003380  0432               	decf	dtoa@p^0,w,c
 13525  003382  B0D8               	btfsc	status,0,c
 13526  003384  EFC6  F019         	goto	u10651
 13527  003388  EFC8  F019         	goto	u10650
 13528  00338C                     u10651:
 13529  00338C  EF23  F019         	goto	l8564
 13530  003390                     u10650:
 13531  003390  BE35               	btfsc	(dtoa@w+1)^0,7,c
 13532  003392  EFD3  F019         	goto	u10661
 13533  003396  5035               	movf	(dtoa@w+1)^0,w,c
 13534  003398  E108               	bnz	u10660
 13535  00339A  0434               	decf	dtoa@w^0,w,c
 13536  00339C  A0D8               	btfss	status,0,c
 13537  00339E  EFD3  F019         	goto	u10661
 13538  0033A2  EFD5  F019         	goto	u10660
 13539  0033A6                     u10661:
 13540  0033A6  EFDC  F019         	goto	l8584
 13541  0033AA                     u10660:
 13542  0033AA  B259               	btfsc	_flags^0,1,c
 13543  0033AC  EFDA  F019         	goto	u10671
 13544  0033B0  EFDC  F019         	goto	u10670
 13545  0033B4                     u10671:
 13546  0033B4  EF23  F019         	goto	l8564
 13547  0033B8                     u10670:
 13548  0033B8                     l8584:
 13549                           
 13550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13551  0033B8  5036               	movf	dtoa@s^0,w,c
 13552  0033BA  1037               	iorwf	(dtoa@s+1)^0,w,c
 13553  0033BC  A4D8               	btfss	status,2,c
 13554  0033BE  EFE3  F019         	goto	u10681
 13555  0033C2  EFE5  F019         	goto	u10680
 13556  0033C6                     u10681:
 13557  0033C6  EFEC  F019         	goto	l8588
 13558  0033CA                     u10680:
 13559  0033CA  A459               	btfss	_flags^0,2,c
 13560  0033CC  EFEA  F019         	goto	u10691
 13561  0033D0  EFEC  F019         	goto	u10690
 13562  0033D4                     u10691:
 13563  0033D4  EF0A  F01A         	goto	l8598
 13564  0033D8                     u10690:
 13565  0033D8                     l8588:
 13566                           
 13567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13568  0033D8  0640               	decf	dtoa@i^0,f,c
 13569  0033DA  A0D8               	btfss	status,0,c
 13570  0033DC  0641               	decf	(dtoa@i+1)^0,f,c
 13571  0033DE                     
 13572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13573  0033DE  5036               	movf	dtoa@s^0,w,c
 13574  0033E0  1037               	iorwf	(dtoa@s+1)^0,w,c
 13575  0033E2  A4D8               	btfss	status,2,c
 13576  0033E4  EFF6  F019         	goto	u10701
 13577  0033E8  EFF8  F019         	goto	u10700
 13578  0033EC                     u10701:
 13579  0033EC  EFFE  F019         	goto	l8594
 13580  0033F0                     u10700:
 13581  0033F0  0E00               	movlw	0
 13582  0033F2  6E31               	movwf	(_dtoa$1694+1)^0,c
 13583  0033F4  0E2B               	movlw	43
 13584  0033F6  6E30               	movwf	_dtoa$1694^0,c
 13585  0033F8  EF02  F01A         	goto	l8596
 13586  0033FC                     l8594:
 13587  0033FC  0E00               	movlw	0
 13588  0033FE  6E31               	movwf	(_dtoa$1694+1)^0,c
 13589  003400  0E2D               	movlw	45
 13590  003402  6E30               	movwf	_dtoa$1694^0,c
 13591  003404                     l8596:
 13592  003404  0E64               	movlw	low _dbuf
 13593  003406  2440               	addwf	dtoa@i^0,w,c
 13594  003408  6ED9               	movwf	fsr2l,c
 13595  00340A  0E01               	movlw	high _dbuf
 13596  00340C  2041               	addwfc	(dtoa@i+1)^0,w,c
 13597  00340E  6EDA               	movwf	fsr2h,c
 13598  003410  C030  FFDF         	movff	_dtoa$1694,indf2
 13599  003414                     l8598:
 13600                           
 13601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13602  003414  C01E  F013         	movff	dtoa@fp,pad@fp
 13603  003418  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
 13604  00341C  0E64               	movlw	low _dbuf
 13605  00341E  2440               	addwf	dtoa@i^0,w,c
 13606  003420  6E15               	movwf	pad@buf^0,c
 13607  003422  0E01               	movlw	high _dbuf
 13608  003424  2041               	addwfc	(dtoa@i+1)^0,w,c
 13609  003426  6E16               	movwf	(pad@buf+1)^0,c
 13610  003428  C034  F017         	movff	dtoa@w,pad@p
 13611  00342C  C035  F018         	movff	dtoa@w+1,pad@p+1
 13612  003430  EC45  F02A         	call	_pad	;wreg free
 13613  003434  C013  F01E         	movff	?_pad,?_dtoa
 13614  003438  C014  F01F         	movff	?_pad+1,?_dtoa+1
 13615  00343C  0012               	return		;funcret
 13616  00343E                     __end_of_dtoa:
 13617                           	opt callstack 0
 13618                           
 13619 ;; *************** function _abs *****************
 13620 ;; Defined at:
 13621 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  a               2   20[COMRAM] int 
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;		None
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  2   20[COMRAM] int 
 13628 ;; Registers used:
 13629 ;;		wreg, status,2, status,0
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13639 ;;Total ram usage:        4 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    4
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_dtoa
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           
 13649                           	psect	text32
 13650  005C16                     __ptext32:
 13651                           	opt callstack 0
 13652  005C16                     _abs:
 13653                           	opt callstack 21
 13654  005C16  BE16               	btfsc	(abs@a+1)^0,7,c
 13655  005C18  EF18  F02E         	goto	u9330
 13656  005C1C  5016               	movf	(abs@a+1)^0,w,c
 13657  005C1E  E106               	bnz	u9331
 13658  005C20  0415               	decf	abs@a^0,w,c
 13659  005C22  B0D8               	btfsc	status,0,c
 13660  005C24  EF16  F02E         	goto	u9331
 13661  005C28  EF18  F02E         	goto	u9330
 13662  005C2C                     u9331:
 13663  005C2C  EF26  F02E         	goto	l1647
 13664  005C30                     u9330:
 13665  005C30  C015  F017         	movff	abs@a,??_abs
 13666  005C34  C016  F018         	movff	abs@a+1,??_abs+1
 13667  005C38  1E17               	comf	??_abs^0,f,c
 13668  005C3A  1E18               	comf	(??_abs+1)^0,f,c
 13669  005C3C  4A17               	infsnz	??_abs^0,f,c
 13670  005C3E  2A18               	incf	(??_abs+1)^0,f,c
 13671  005C40  C017  F015         	movff	??_abs,?_abs
 13672  005C44  C018  F016         	movff	??_abs+1,?_abs+1
 13673  005C48  EF2A  F02E         	goto	l1650
 13674  005C4C                     l1647:
 13675  005C4C  C015  F015         	movff	abs@a,?_abs
 13676  005C50  C016  F016         	movff	abs@a+1,?_abs+1
 13677  005C54                     l1650:
 13678  005C54  0012               	return		;funcret
 13679  005C56                     __end_of_abs:
 13680                           	opt callstack 0
 13681                           
 13682 ;; *************** function ___aomod *****************
 13683 ;; Defined at:
 13684 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13685 ;; Parameters:    Size  Location     Type
 13686 ;;  dividend        8    2[COMRAM] long long 
 13687 ;;  divisor         8   10[COMRAM] long long 
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;  sign            1   19[COMRAM] unsigned char 
 13690 ;;  counter         1   18[COMRAM] unsigned char 
 13691 ;; Return value:  Size  Location     Type
 13692 ;;                  8    2[COMRAM] long long 
 13693 ;; Registers used:
 13694 ;;		wreg, status,2, status,0
 13695 ;; Tracked objects:
 13696 ;;		On entry : 0/0
 13697 ;;		On exit  : 0/0
 13698 ;;		Unchanged: 0/0
 13699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13700 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13703 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13704 ;;Total ram usage:       18 bytes
 13705 ;; Hardware stack levels used:    1
 13706 ;; Hardware stack levels required when called:    4
 13707 ;; This function calls:
 13708 ;;		Nothing
 13709 ;; This function is called by:
 13710 ;;		_dtoa
 13711 ;; This function uses a non-reentrant model
 13712 ;;
 13713                           
 13714                           	psect	text33
 13715  00485C                     __ptext33:
 13716                           	opt callstack 0
 13717  00485C                     ___aomod:
 13718                           	opt callstack 21
 13719  00485C  0E00               	movlw	0
 13720  00485E  6E14               	movwf	___aomod@sign^0,c
 13721  004860  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
 13722  004862  EF37  F024         	goto	u9700
 13723  004866  EF35  F024         	goto	u9701
 13724  00486A                     u9701:
 13725  00486A  EF49  F024         	goto	l8004
 13726  00486E                     u9700:
 13727  00486E  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 13728  004870  1E09               	comf	(___aomod@dividend+6)^0,f,c
 13729  004872  1E08               	comf	(___aomod@dividend+5)^0,f,c
 13730  004874  1E07               	comf	(___aomod@dividend+4)^0,f,c
 13731  004876  1E06               	comf	(___aomod@dividend+3)^0,f,c
 13732  004878  1E05               	comf	(___aomod@dividend+2)^0,f,c
 13733  00487A  1E04               	comf	(___aomod@dividend+1)^0,f,c
 13734  00487C  6C03               	negf	___aomod@dividend^0,c
 13735  00487E  0E00               	movlw	0
 13736  004880  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 13737  004882  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 13738  004884  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 13739  004886  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 13740  004888  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 13741  00488A  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 13742  00488C  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 13743  00488E  0E01               	movlw	1
 13744  004890  6E14               	movwf	___aomod@sign^0,c
 13745  004892                     l8004:
 13746  004892  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
 13747  004894  EF50  F024         	goto	u9710
 13748  004898  EF4E  F024         	goto	u9711
 13749  00489C                     u9711:
 13750  00489C  EF60  F024         	goto	l8008
 13751  0048A0                     u9710:
 13752  0048A0  1E12               	comf	(___aomod@divisor+7)^0,f,c
 13753  0048A2  1E11               	comf	(___aomod@divisor+6)^0,f,c
 13754  0048A4  1E10               	comf	(___aomod@divisor+5)^0,f,c
 13755  0048A6  1E0F               	comf	(___aomod@divisor+4)^0,f,c
 13756  0048A8  1E0E               	comf	(___aomod@divisor+3)^0,f,c
 13757  0048AA  1E0D               	comf	(___aomod@divisor+2)^0,f,c
 13758  0048AC  1E0C               	comf	(___aomod@divisor+1)^0,f,c
 13759  0048AE  6C0B               	negf	___aomod@divisor^0,c
 13760  0048B0  0E00               	movlw	0
 13761  0048B2  220C               	addwfc	(___aomod@divisor+1)^0,f,c
 13762  0048B4  220D               	addwfc	(___aomod@divisor+2)^0,f,c
 13763  0048B6  220E               	addwfc	(___aomod@divisor+3)^0,f,c
 13764  0048B8  220F               	addwfc	(___aomod@divisor+4)^0,f,c
 13765  0048BA  2210               	addwfc	(___aomod@divisor+5)^0,f,c
 13766  0048BC  2211               	addwfc	(___aomod@divisor+6)^0,f,c
 13767  0048BE  2212               	addwfc	(___aomod@divisor+7)^0,f,c
 13768  0048C0                     l8008:
 13769  0048C0  500B               	movf	___aomod@divisor^0,w,c
 13770  0048C2  100C               	iorwf	(___aomod@divisor+1)^0,w,c
 13771  0048C4  100D               	iorwf	(___aomod@divisor+2)^0,w,c
 13772  0048C6  100E               	iorwf	(___aomod@divisor+3)^0,w,c
 13773  0048C8  100F               	iorwf	(___aomod@divisor+4)^0,w,c
 13774  0048CA  1010               	iorwf	(___aomod@divisor+5)^0,w,c
 13775  0048CC  1011               	iorwf	(___aomod@divisor+6)^0,w,c
 13776  0048CE  1012               	iorwf	(___aomod@divisor+7)^0,w,c
 13777  0048D0  B4D8               	btfsc	status,2,c
 13778  0048D2  EF6D  F024         	goto	u9721
 13779  0048D6  EF6F  F024         	goto	u9720
 13780  0048DA                     u9721:
 13781  0048DA  EFB7  F024         	goto	l8024
 13782  0048DE                     u9720:
 13783  0048DE  0E01               	movlw	1
 13784  0048E0  6E13               	movwf	___aomod@counter^0,c
 13785  0048E2  EF7D  F024         	goto	l8014
 13786  0048E6                     l8012:
 13787  0048E6  90D8               	bcf	status,0,c
 13788  0048E8  360B               	rlcf	___aomod@divisor^0,f,c
 13789  0048EA  360C               	rlcf	(___aomod@divisor+1)^0,f,c
 13790  0048EC  360D               	rlcf	(___aomod@divisor+2)^0,f,c
 13791  0048EE  360E               	rlcf	(___aomod@divisor+3)^0,f,c
 13792  0048F0  360F               	rlcf	(___aomod@divisor+4)^0,f,c
 13793  0048F2  3610               	rlcf	(___aomod@divisor+5)^0,f,c
 13794  0048F4  3611               	rlcf	(___aomod@divisor+6)^0,f,c
 13795  0048F6  3612               	rlcf	(___aomod@divisor+7)^0,f,c
 13796  0048F8  2A13               	incf	___aomod@counter^0,f,c
 13797  0048FA                     l8014:
 13798  0048FA  AE12               	btfss	(___aomod@divisor+7)^0,7,c
 13799  0048FC  EF82  F024         	goto	u9731
 13800  004900  EF84  F024         	goto	u9730
 13801  004904                     u9731:
 13802  004904  EF73  F024         	goto	l8012
 13803  004908                     u9730:
 13804  004908                     l8016:
 13805  004908  500B               	movf	___aomod@divisor^0,w,c
 13806  00490A  5C03               	subwf	___aomod@dividend^0,w,c
 13807  00490C  500C               	movf	(___aomod@divisor+1)^0,w,c
 13808  00490E  5804               	subwfb	(___aomod@dividend+1)^0,w,c
 13809  004910  500D               	movf	(___aomod@divisor+2)^0,w,c
 13810  004912  5805               	subwfb	(___aomod@dividend+2)^0,w,c
 13811  004914  500E               	movf	(___aomod@divisor+3)^0,w,c
 13812  004916  5806               	subwfb	(___aomod@dividend+3)^0,w,c
 13813  004918  500F               	movf	(___aomod@divisor+4)^0,w,c
 13814  00491A  5807               	subwfb	(___aomod@dividend+4)^0,w,c
 13815  00491C  5010               	movf	(___aomod@divisor+5)^0,w,c
 13816  00491E  5808               	subwfb	(___aomod@dividend+5)^0,w,c
 13817  004920  5011               	movf	(___aomod@divisor+6)^0,w,c
 13818  004922  5809               	subwfb	(___aomod@dividend+6)^0,w,c
 13819  004924  5012               	movf	(___aomod@divisor+7)^0,w,c
 13820  004926  580A               	subwfb	(___aomod@dividend+7)^0,w,c
 13821  004928  A0D8               	btfss	status,0,c
 13822  00492A  EF99  F024         	goto	u9741
 13823  00492E  EF9B  F024         	goto	u9740
 13824  004932                     u9741:
 13825  004932  EFAB  F024         	goto	l8020
 13826  004936                     u9740:
 13827  004936  500B               	movf	___aomod@divisor^0,w,c
 13828  004938  5E03               	subwf	___aomod@dividend^0,f,c
 13829  00493A  500C               	movf	(___aomod@divisor+1)^0,w,c
 13830  00493C  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
 13831  00493E  500D               	movf	(___aomod@divisor+2)^0,w,c
 13832  004940  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
 13833  004942  500E               	movf	(___aomod@divisor+3)^0,w,c
 13834  004944  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
 13835  004946  500F               	movf	(___aomod@divisor+4)^0,w,c
 13836  004948  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
 13837  00494A  5010               	movf	(___aomod@divisor+5)^0,w,c
 13838  00494C  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
 13839  00494E  5011               	movf	(___aomod@divisor+6)^0,w,c
 13840  004950  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
 13841  004952  5012               	movf	(___aomod@divisor+7)^0,w,c
 13842  004954  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
 13843  004956                     l8020:
 13844  004956  90D8               	bcf	status,0,c
 13845  004958  3212               	rrcf	(___aomod@divisor+7)^0,f,c
 13846  00495A  3211               	rrcf	(___aomod@divisor+6)^0,f,c
 13847  00495C  3210               	rrcf	(___aomod@divisor+5)^0,f,c
 13848  00495E  320F               	rrcf	(___aomod@divisor+4)^0,f,c
 13849  004960  320E               	rrcf	(___aomod@divisor+3)^0,f,c
 13850  004962  320D               	rrcf	(___aomod@divisor+2)^0,f,c
 13851  004964  320C               	rrcf	(___aomod@divisor+1)^0,f,c
 13852  004966  320B               	rrcf	___aomod@divisor^0,f,c
 13853  004968  2E13               	decfsz	___aomod@counter^0,f,c
 13854  00496A  EF84  F024         	goto	l8016
 13855  00496E                     l8024:
 13856  00496E  5014               	movf	___aomod@sign^0,w,c
 13857  004970  B4D8               	btfsc	status,2,c
 13858  004972  EFBD  F024         	goto	u9751
 13859  004976  EFBF  F024         	goto	u9750
 13860  00497A                     u9751:
 13861  00497A  EFCF  F024         	goto	l8028
 13862  00497E                     u9750:
 13863  00497E  1E0A               	comf	(___aomod@dividend+7)^0,f,c
 13864  004980  1E09               	comf	(___aomod@dividend+6)^0,f,c
 13865  004982  1E08               	comf	(___aomod@dividend+5)^0,f,c
 13866  004984  1E07               	comf	(___aomod@dividend+4)^0,f,c
 13867  004986  1E06               	comf	(___aomod@dividend+3)^0,f,c
 13868  004988  1E05               	comf	(___aomod@dividend+2)^0,f,c
 13869  00498A  1E04               	comf	(___aomod@dividend+1)^0,f,c
 13870  00498C  6C03               	negf	___aomod@dividend^0,c
 13871  00498E  0E00               	movlw	0
 13872  004990  2204               	addwfc	(___aomod@dividend+1)^0,f,c
 13873  004992  2205               	addwfc	(___aomod@dividend+2)^0,f,c
 13874  004994  2206               	addwfc	(___aomod@dividend+3)^0,f,c
 13875  004996  2207               	addwfc	(___aomod@dividend+4)^0,f,c
 13876  004998  2208               	addwfc	(___aomod@dividend+5)^0,f,c
 13877  00499A  2209               	addwfc	(___aomod@dividend+6)^0,f,c
 13878  00499C  220A               	addwfc	(___aomod@dividend+7)^0,f,c
 13879  00499E                     l8028:
 13880  00499E  C003  F003         	movff	___aomod@dividend,?___aomod
 13881  0049A2  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
 13882  0049A6  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
 13883  0049AA  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
 13884  0049AE  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
 13885  0049B2  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
 13886  0049B6  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
 13887  0049BA  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
 13888  0049BE  0012               	return		;funcret
 13889  0049C0                     __end_of___aomod:
 13890                           	opt callstack 0
 13891                           
 13892 ;; *************** function ___aodiv *****************
 13893 ;; Defined at:
 13894 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  dividend        8    2[COMRAM] long long 
 13897 ;;  divisor         8   10[COMRAM] long long 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  quotient        8   20[COMRAM] long long 
 13900 ;;  sign            1   19[COMRAM] unsigned char 
 13901 ;;  counter         1   18[COMRAM] unsigned char 
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  8    2[COMRAM] long long 
 13904 ;; Registers used:
 13905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13906 ;; Tracked objects:
 13907 ;;		On entry : 0/0
 13908 ;;		On exit  : 0/0
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13911 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13912 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13914 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13915 ;;Total ram usage:       26 bytes
 13916 ;; Hardware stack levels used:    1
 13917 ;; Hardware stack levels required when called:    4
 13918 ;; This function calls:
 13919 ;;		Nothing
 13920 ;; This function is called by:
 13921 ;;		_dtoa
 13922 ;; This function uses a non-reentrant model
 13923 ;;
 13924                           
 13925                           	psect	text34
 13926  004270                     __ptext34:
 13927                           	opt callstack 0
 13928  004270                     ___aodiv:
 13929                           	opt callstack 21
 13930  004270  0E00               	movlw	0
 13931  004272  6E14               	movwf	___aodiv@sign^0,c
 13932  004274  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
 13933  004276  EF41  F021         	goto	u9630
 13934  00427A  EF3F  F021         	goto	u9631
 13935  00427E                     u9631:
 13936  00427E  EF53  F021         	goto	l7960
 13937  004282                     u9630:
 13938  004282  1E12               	comf	(___aodiv@divisor+7)^0,f,c
 13939  004284  1E11               	comf	(___aodiv@divisor+6)^0,f,c
 13940  004286  1E10               	comf	(___aodiv@divisor+5)^0,f,c
 13941  004288  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
 13942  00428A  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
 13943  00428C  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
 13944  00428E  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
 13945  004290  6C0B               	negf	___aodiv@divisor^0,c
 13946  004292  0E00               	movlw	0
 13947  004294  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
 13948  004296  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
 13949  004298  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
 13950  00429A  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
 13951  00429C  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
 13952  00429E  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
 13953  0042A0  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
 13954  0042A2  0E01               	movlw	1
 13955  0042A4  6E14               	movwf	___aodiv@sign^0,c
 13956  0042A6                     l7960:
 13957  0042A6  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
 13958  0042A8  EF5A  F021         	goto	u9640
 13959  0042AC  EF58  F021         	goto	u9641
 13960  0042B0                     u9641:
 13961  0042B0  EF6C  F021         	goto	l7966
 13962  0042B4                     u9640:
 13963  0042B4  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
 13964  0042B6  1E09               	comf	(___aodiv@dividend+6)^0,f,c
 13965  0042B8  1E08               	comf	(___aodiv@dividend+5)^0,f,c
 13966  0042BA  1E07               	comf	(___aodiv@dividend+4)^0,f,c
 13967  0042BC  1E06               	comf	(___aodiv@dividend+3)^0,f,c
 13968  0042BE  1E05               	comf	(___aodiv@dividend+2)^0,f,c
 13969  0042C0  1E04               	comf	(___aodiv@dividend+1)^0,f,c
 13970  0042C2  6C03               	negf	___aodiv@dividend^0,c
 13971  0042C4  0E00               	movlw	0
 13972  0042C6  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
 13973  0042C8  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
 13974  0042CA  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
 13975  0042CC  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
 13976  0042CE  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
 13977  0042D0  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
 13978  0042D2  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
 13979  0042D4  0E01               	movlw	1
 13980  0042D6  1A14               	xorwf	___aodiv@sign^0,f,c
 13981  0042D8                     l7966:
 13982  0042D8  EE20  F015         	lfsr	2,___aodiv@quotient
 13983  0042DC  0E07               	movlw	7
 13984  0042DE                     u9651:
 13985  0042DE  6ADE               	clrf	postinc2,c
 13986  0042E0  06E8               	decf	wreg,f,c
 13987  0042E2  E2FD               	bc	u9651
 13988  0042E4  500B               	movf	___aodiv@divisor^0,w,c
 13989  0042E6  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
 13990  0042E8  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
 13991  0042EA  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
 13992  0042EC  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
 13993  0042EE  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
 13994  0042F0  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
 13995  0042F2  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
 13996  0042F4  B4D8               	btfsc	status,2,c
 13997  0042F6  EF7F  F021         	goto	u9661
 13998  0042FA  EF81  F021         	goto	u9660
 13999  0042FE                     u9661:
 14000  0042FE  EFD3  F021         	goto	l7988
 14001  004302                     u9660:
 14002  004302  0E01               	movlw	1
 14003  004304  6E13               	movwf	___aodiv@counter^0,c
 14004  004306  EF8F  F021         	goto	l7974
 14005  00430A                     l7972:
 14006  00430A  90D8               	bcf	status,0,c
 14007  00430C  360B               	rlcf	___aodiv@divisor^0,f,c
 14008  00430E  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
 14009  004310  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
 14010  004312  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
 14011  004314  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
 14012  004316  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
 14013  004318  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
 14014  00431A  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
 14015  00431C  2A13               	incf	___aodiv@counter^0,f,c
 14016  00431E                     l7974:
 14017  00431E  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
 14018  004320  EF94  F021         	goto	u9671
 14019  004324  EF96  F021         	goto	u9670
 14020  004328                     u9671:
 14021  004328  EF85  F021         	goto	l7972
 14022  00432C                     u9670:
 14023  00432C                     l7976:
 14024  00432C  90D8               	bcf	status,0,c
 14025  00432E  3615               	rlcf	___aodiv@quotient^0,f,c
 14026  004330  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
 14027  004332  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
 14028  004334  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
 14029  004336  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
 14030  004338  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
 14031  00433A  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
 14032  00433C  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
 14033  00433E  500B               	movf	___aodiv@divisor^0,w,c
 14034  004340  5C03               	subwf	___aodiv@dividend^0,w,c
 14035  004342  500C               	movf	(___aodiv@divisor+1)^0,w,c
 14036  004344  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
 14037  004346  500D               	movf	(___aodiv@divisor+2)^0,w,c
 14038  004348  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
 14039  00434A  500E               	movf	(___aodiv@divisor+3)^0,w,c
 14040  00434C  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
 14041  00434E  500F               	movf	(___aodiv@divisor+4)^0,w,c
 14042  004350  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
 14043  004352  5010               	movf	(___aodiv@divisor+5)^0,w,c
 14044  004354  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
 14045  004356  5011               	movf	(___aodiv@divisor+6)^0,w,c
 14046  004358  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
 14047  00435A  5012               	movf	(___aodiv@divisor+7)^0,w,c
 14048  00435C  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
 14049  00435E  A0D8               	btfss	status,0,c
 14050  004360  EFB4  F021         	goto	u9681
 14051  004364  EFB6  F021         	goto	u9680
 14052  004368                     u9681:
 14053  004368  EFC7  F021         	goto	l7984
 14054  00436C                     u9680:
 14055  00436C  500B               	movf	___aodiv@divisor^0,w,c
 14056  00436E  5E03               	subwf	___aodiv@dividend^0,f,c
 14057  004370  500C               	movf	(___aodiv@divisor+1)^0,w,c
 14058  004372  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
 14059  004374  500D               	movf	(___aodiv@divisor+2)^0,w,c
 14060  004376  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
 14061  004378  500E               	movf	(___aodiv@divisor+3)^0,w,c
 14062  00437A  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
 14063  00437C  500F               	movf	(___aodiv@divisor+4)^0,w,c
 14064  00437E  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
 14065  004380  5010               	movf	(___aodiv@divisor+5)^0,w,c
 14066  004382  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
 14067  004384  5011               	movf	(___aodiv@divisor+6)^0,w,c
 14068  004386  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
 14069  004388  5012               	movf	(___aodiv@divisor+7)^0,w,c
 14070  00438A  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
 14071  00438C  8015               	bsf	___aodiv@quotient^0,0,c
 14072  00438E                     l7984:
 14073  00438E  90D8               	bcf	status,0,c
 14074  004390  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
 14075  004392  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
 14076  004394  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
 14077  004396  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
 14078  004398  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
 14079  00439A  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
 14080  00439C  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
 14081  00439E  320B               	rrcf	___aodiv@divisor^0,f,c
 14082  0043A0  2E13               	decfsz	___aodiv@counter^0,f,c
 14083  0043A2  EF96  F021         	goto	l7976
 14084  0043A6                     l7988:
 14085  0043A6  5014               	movf	___aodiv@sign^0,w,c
 14086  0043A8  B4D8               	btfsc	status,2,c
 14087  0043AA  EFD9  F021         	goto	u9691
 14088  0043AE  EFDB  F021         	goto	u9690
 14089  0043B2                     u9691:
 14090  0043B2  EFEB  F021         	goto	l7992
 14091  0043B6                     u9690:
 14092  0043B6  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
 14093  0043B8  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
 14094  0043BA  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
 14095  0043BC  1E19               	comf	(___aodiv@quotient+4)^0,f,c
 14096  0043BE  1E18               	comf	(___aodiv@quotient+3)^0,f,c
 14097  0043C0  1E17               	comf	(___aodiv@quotient+2)^0,f,c
 14098  0043C2  1E16               	comf	(___aodiv@quotient+1)^0,f,c
 14099  0043C4  6C15               	negf	___aodiv@quotient^0,c
 14100  0043C6  0E00               	movlw	0
 14101  0043C8  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
 14102  0043CA  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
 14103  0043CC  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
 14104  0043CE  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
 14105  0043D0  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
 14106  0043D2  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
 14107  0043D4  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
 14108  0043D6                     l7992:
 14109  0043D6  C015  F003         	movff	___aodiv@quotient,?___aodiv
 14110  0043DA  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
 14111  0043DE  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
 14112  0043E2  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
 14113  0043E6  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
 14114  0043EA  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
 14115  0043EE  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
 14116  0043F2  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
 14117  0043F6  0012               	return		;funcret
 14118  0043F8                     __end_of___aodiv:
 14119                           	opt callstack 0
 14120                           
 14121 ;; *************** function _ctoa *****************
 14122 ;; Defined at:
 14123 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 14126 ;;		 -> vsnprintf@f(6), 
 14127 ;;  c               1   31[COMRAM] unsigned char 
 14128 ;; Auto vars:     Size  Location     Type
 14129 ;;  w               2   32[COMRAM] int 
 14130 ;;  l               2    0        int 
 14131 ;; Return value:  Size  Location     Type
 14132 ;;                  2   29[COMRAM] int 
 14133 ;; Registers used:
 14134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14135 ;; Tracked objects:
 14136 ;;		On entry : 0/0
 14137 ;;		On exit  : 0/0
 14138 ;;		Unchanged: 0/0
 14139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14143 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14144 ;;Total ram usage:        5 bytes
 14145 ;; Hardware stack levels used:    1
 14146 ;; Hardware stack levels required when called:    8
 14147 ;; This function calls:
 14148 ;;		_pad
 14149 ;; This function is called by:
 14150 ;;		_vfpfcnvrt
 14151 ;; This function uses a non-reentrant model
 14152 ;;
 14153                           
 14154                           	psect	text35
 14155  0059C6                     __ptext35:
 14156                           	opt callstack 0
 14157  0059C6                     _ctoa:
 14158                           	opt callstack 18
 14159  0059C6                     
 14160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14161  0059C6  0100               	movlb	0	; () banked
 14162  0059C8  51EC               	movf	_width& (0+255),w,b
 14163  0059CA  11ED               	iorwf	(_width+1)& (0+255),w,b
 14164  0059CC  A4D8               	btfss	status,2,c
 14165  0059CE  EFEB  F02C         	goto	u10551
 14166  0059D2  EFED  F02C         	goto	u10550
 14167  0059D6                     u10551:
 14168  0059D6  EFF3  F02C         	goto	l8530
 14169  0059DA                     u10550:
 14170  0059DA                     
 14171                           ; BSR set to: 0
 14172  0059DA  C0EC  F021         	movff	_width,ctoa@w
 14173  0059DE  C0ED  F022         	movff	_width+1,ctoa@w+1
 14174  0059E2  EFF9  F02C         	goto	l8532
 14175  0059E6                     l8530:
 14176                           
 14177                           ; BSR set to: 0
 14178  0059E6  0EFF               	movlw	255
 14179  0059E8  25EC               	addwf	_width& (0+255),w,b
 14180  0059EA  6E21               	movwf	ctoa@w^0,c
 14181  0059EC  0EFF               	movlw	255
 14182  0059EE  21ED               	addwfc	(_width+1)& (0+255),w,b
 14183  0059F0  6E22               	movwf	(ctoa@w+1)^0,c
 14184  0059F2                     l8532:
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14188  0059F2  C020  F164         	movff	ctoa@c,_dbuf
 14189  0059F6                     
 14190                           ; BSR set to: 0
 14191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14192  0059F6  0E00               	movlw	0
 14193  0059F8  0101               	movlb	1	; () banked
 14194  0059FA  6F65               	movwf	(_dbuf+1)& (0+255),b
 14195  0059FC                     
 14196                           ; BSR set to: 1
 14197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14198  0059FC  C01E  F013         	movff	ctoa@fp,pad@fp
 14199  005A00  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
 14200  005A04  0E64               	movlw	low _dbuf
 14201  005A06  6E15               	movwf	pad@buf^0,c
 14202  005A08  0E01               	movlw	high _dbuf
 14203  005A0A  6E16               	movwf	(pad@buf+1)^0,c
 14204  005A0C  C021  F017         	movff	ctoa@w,pad@p
 14205  005A10  C022  F018         	movff	ctoa@w+1,pad@p+1
 14206  005A14  EC45  F02A         	call	_pad	;wreg free
 14207  005A18  C013  F01E         	movff	?_pad,?_ctoa
 14208  005A1C  C014  F01F         	movff	?_pad+1,?_ctoa+1
 14209  005A20  0012               	return		;funcret
 14210  005A22                     __end_of_ctoa:
 14211                           	opt callstack 0
 14212                           
 14213 ;; *************** function _pad *****************
 14214 ;; Defined at:
 14215 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14216 ;; Parameters:    Size  Location     Type
 14217 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 14218 ;;		 -> vsnprintf@f(6), 
 14219 ;;  buf             2   20[COMRAM] PTR unsigned char 
 14220 ;;		 -> dbuf(80), 
 14221 ;;  p               2   22[COMRAM] int 
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;  w               2   27[COMRAM] int 
 14224 ;;  i               2   25[COMRAM] int 
 14225 ;; Return value:  Size  Location     Type
 14226 ;;                  2   18[COMRAM] int 
 14227 ;; Registers used:
 14228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14229 ;; Tracked objects:
 14230 ;;		On entry : 0/0
 14231 ;;		On exit  : 0/0
 14232 ;;		Unchanged: 0/0
 14233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14234 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14237 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14238 ;;Total ram usage:       11 bytes
 14239 ;; Hardware stack levels used:    1
 14240 ;; Hardware stack levels required when called:    7
 14241 ;; This function calls:
 14242 ;;		_fputc
 14243 ;;		_fputs
 14244 ;;		_strlen
 14245 ;; This function is called by:
 14246 ;;		_ctoa
 14247 ;;		_dtoa
 14248 ;;		_efgtoa
 14249 ;;		_otoa
 14250 ;;		_utoa
 14251 ;;		_xtoa
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text36
 14256  00548A                     __ptext36:
 14257                           	opt callstack 0
 14258  00548A                     _pad:
 14259                           	opt callstack 18
 14260  00548A                     
 14261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14262  00548A  A059               	btfss	_flags^0,0,c
 14263  00548C  EF4A  F02A         	goto	u9291
 14264  005490  EF4C  F02A         	goto	u9290
 14265  005494                     u9291:
 14266  005494  EF56  F02A         	goto	l7842
 14267  005498                     u9290:
 14268  005498                     
 14269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14270  005498  C015  F00C         	movff	pad@buf,fputs@s
 14271  00549C  C016  F00D         	movff	pad@buf+1,fputs@s+1
 14272  0054A0  C013  F00E         	movff	pad@fp,fputs@fp
 14273  0054A4  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 14274  0054A8  ECC8  F02D         	call	_fputs	;wreg free
 14275  0054AC                     l7842:
 14276                           
 14277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14278  0054AC  BE18               	btfsc	(pad@p+1)^0,7,c
 14279  0054AE  EF5B  F02A         	goto	u9301
 14280  0054B2  EF5D  F02A         	goto	u9300
 14281  0054B6                     u9301:
 14282  0054B6  EF63  F02A         	goto	l7846
 14283  0054BA                     u9300:
 14284  0054BA  C017  F01C         	movff	pad@p,pad@w
 14285  0054BE  C018  F01D         	movff	pad@p+1,pad@w+1
 14286  0054C2  EF67  F02A         	goto	l653
 14287  0054C6                     l7846:
 14288  0054C6  0E00               	movlw	0
 14289  0054C8  6E1D               	movwf	(pad@w+1)^0,c
 14290  0054CA  0E00               	movlw	0
 14291  0054CC  6E1C               	movwf	pad@w^0,c
 14292  0054CE                     l653:
 14293                           
 14294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14295  0054CE  0E00               	movlw	0
 14296  0054D0  6E1B               	movwf	(pad@i+1)^0,c
 14297  0054D2  0E00               	movlw	0
 14298  0054D4  6E1A               	movwf	pad@i^0,c
 14299                           
 14300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14301  0054D6  EF79  F02A         	goto	l7852
 14302  0054DA                     l7848:
 14303                           
 14304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14305  0054DA  0E00               	movlw	0
 14306  0054DC  6E04               	movwf	(fputc@c+1)^0,c
 14307  0054DE  0E20               	movlw	32
 14308  0054E0  6E03               	movwf	fputc@c^0,c
 14309  0054E2  C013  F005         	movff	pad@fp,fputc@fp
 14310  0054E6  C014  F006         	movff	pad@fp+1,fputc@fp+1
 14311  0054EA  EC7E  F029         	call	_fputc	;wreg free
 14312  0054EE                     
 14313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14314  0054EE  4A1A               	infsnz	pad@i^0,f,c
 14315  0054F0  2A1B               	incf	(pad@i+1)^0,f,c
 14316  0054F2                     l7852:
 14317                           
 14318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14319  0054F2  501C               	movf	pad@w^0,w,c
 14320  0054F4  5C1A               	subwf	pad@i^0,w,c
 14321  0054F6  501B               	movf	(pad@i+1)^0,w,c
 14322  0054F8  0A80               	xorlw	128
 14323  0054FA  6E19               	movwf	??_pad^0,c
 14324  0054FC  501D               	movf	(pad@w+1)^0,w,c
 14325  0054FE  0A80               	xorlw	128
 14326  005500  5819               	subwfb	??_pad^0,w,c
 14327  005502  A0D8               	btfss	status,0,c
 14328  005504  EF86  F02A         	goto	u9311
 14329  005508  EF88  F02A         	goto	u9310
 14330  00550C                     u9311:
 14331  00550C  EF6D  F02A         	goto	l7848
 14332  005510                     u9310:
 14333  005510                     
 14334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14335  005510  B059               	btfsc	_flags^0,0,c
 14336  005512  EF8D  F02A         	goto	u9321
 14337  005516  EF8F  F02A         	goto	u9320
 14338  00551A                     u9321:
 14339  00551A  EF99  F02A         	goto	l7856
 14340  00551E                     u9320:
 14341  00551E                     
 14342                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14343  00551E  C015  F00C         	movff	pad@buf,fputs@s
 14344  005522  C016  F00D         	movff	pad@buf+1,fputs@s+1
 14345  005526  C013  F00E         	movff	pad@fp,fputs@fp
 14346  00552A  C014  F00F         	movff	pad@fp+1,fputs@fp+1
 14347  00552E  ECC8  F02D         	call	_fputs	;wreg free
 14348  005532                     l7856:
 14349                           
 14350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14351  005532  C015  F003         	movff	pad@buf,strlen@s
 14352  005536  C016  F004         	movff	pad@buf+1,strlen@s+1
 14353  00553A  ECB9  F02E         	call	_strlen	;wreg free
 14354  00553E  501C               	movf	pad@w^0,w,c
 14355  005540  2403               	addwf	?_strlen^0,w,c
 14356  005542  6E13               	movwf	?_pad^0,c
 14357  005544  501D               	movf	(pad@w+1)^0,w,c
 14358  005546  2004               	addwfc	(?_strlen+1)^0,w,c
 14359  005548  6E14               	movwf	(?_pad+1)^0,c
 14360  00554A  0012               	return		;funcret
 14361  00554C                     __end_of_pad:
 14362                           	opt callstack 0
 14363                           
 14364 ;; *************** function _strlen *****************
 14365 ;; Defined at:
 14366 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 14367 ;; Parameters:    Size  Location     Type
 14368 ;;  s               2    2[COMRAM] PTR const unsigned char 
 14369 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;  a               2    4[COMRAM] PTR const unsigned char 
 14372 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 14373 ;; Return value:  Size  Location     Type
 14374 ;;                  2    2[COMRAM] unsigned int 
 14375 ;; Registers used:
 14376 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14377 ;; Tracked objects:
 14378 ;;		On entry : 0/0
 14379 ;;		On exit  : 0/0
 14380 ;;		Unchanged: 0/0
 14381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14383 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14386 ;;Total ram usage:        4 bytes
 14387 ;; Hardware stack levels used:    1
 14388 ;; Hardware stack levels required when called:    4
 14389 ;; This function calls:
 14390 ;;		Nothing
 14391 ;; This function is called by:
 14392 ;;		_pad
 14393 ;;		_stoa
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397                           	psect	text37
 14398  005D72                     __ptext37:
 14399                           	opt callstack 0
 14400  005D72                     _strlen:
 14401                           	opt callstack 20
 14402  005D72  C003  F005         	movff	strlen@s,strlen@a
 14403  005D76  C004  F006         	movff	strlen@s+1,strlen@a+1
 14404  005D7A  EFC1  F02E         	goto	l7622
 14405  005D7E                     l7620:
 14406  005D7E  4A03               	infsnz	strlen@s^0,f,c
 14407  005D80  2A04               	incf	(strlen@s+1)^0,f,c
 14408  005D82                     l7622:
 14409  005D82  C003  FFD9         	movff	strlen@s,fsr2l
 14410  005D86  C004  FFDA         	movff	strlen@s+1,fsr2h
 14411  005D8A  50DF               	movf	indf2,w,c
 14412  005D8C  A4D8               	btfss	status,2,c
 14413  005D8E  EFCB  F02E         	goto	u8851
 14414  005D92  EFCD  F02E         	goto	u8850
 14415  005D96                     u8851:
 14416  005D96  EFBF  F02E         	goto	l7620
 14417  005D9A                     u8850:
 14418  005D9A  5005               	movf	strlen@a^0,w,c
 14419  005D9C  5C03               	subwf	strlen@s^0,w,c
 14420  005D9E  6E03               	movwf	?_strlen^0,c
 14421  005DA0  5006               	movf	(strlen@a+1)^0,w,c
 14422  005DA2  5804               	subwfb	(strlen@s+1)^0,w,c
 14423  005DA4  6E04               	movwf	(?_strlen+1)^0,c
 14424  005DA6  0012               	return		;funcret
 14425  005DA8                     __end_of_strlen:
 14426                           	opt callstack 0
 14427                           
 14428 ;; *************** function _fputs *****************
 14429 ;; Defined at:
 14430 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;  s               2   11[COMRAM] PTR const unsigned char 
 14433 ;;		 -> dbuf(80), 
 14434 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 14435 ;;		 -> vsnprintf@f(6), 
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;  i               2   16[COMRAM] int 
 14438 ;;  c               1   15[COMRAM] unsigned char 
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  2   11[COMRAM] int 
 14441 ;; Registers used:
 14442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14443 ;; Tracked objects:
 14444 ;;		On entry : 0/0
 14445 ;;		On exit  : 0/0
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14449 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14451 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14452 ;;Total ram usage:        7 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; Hardware stack levels required when called:    6
 14455 ;; This function calls:
 14456 ;;		_fputc
 14457 ;; This function is called by:
 14458 ;;		_pad
 14459 ;; This function uses a non-reentrant model
 14460 ;;
 14461                           
 14462                           	psect	text38
 14463  005B90                     __ptext38:
 14464                           	opt callstack 0
 14465  005B90                     _fputs:
 14466                           	opt callstack 18
 14467  005B90  0E00               	movlw	0
 14468  005B92  6E12               	movwf	(fputs@i+1)^0,c
 14469  005B94  0E00               	movlw	0
 14470  005B96  6E11               	movwf	fputs@i^0,c
 14471  005B98  EFD9  F02D         	goto	l7616
 14472  005B9C                     l7612:
 14473  005B9C  C010  F003         	movff	fputs@c,fputc@c
 14474  005BA0  6A04               	clrf	(fputc@c+1)^0,c
 14475  005BA2  C00E  F005         	movff	fputs@fp,fputc@fp
 14476  005BA6  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
 14477  005BAA  EC7E  F029         	call	_fputc	;wreg free
 14478  005BAE  4A11               	infsnz	fputs@i^0,f,c
 14479  005BB0  2A12               	incf	(fputs@i+1)^0,f,c
 14480  005BB2                     l7616:
 14481  005BB2  5011               	movf	fputs@i^0,w,c
 14482  005BB4  240C               	addwf	fputs@s^0,w,c
 14483  005BB6  6ED9               	movwf	fsr2l,c
 14484  005BB8  5012               	movf	(fputs@i+1)^0,w,c
 14485  005BBA  200D               	addwfc	(fputs@s+1)^0,w,c
 14486  005BBC  6EDA               	movwf	fsr2h,c
 14487  005BBE  50DF               	movf	indf2,w,c
 14488  005BC0  6E10               	movwf	fputs@c^0,c
 14489  005BC2  5010               	movf	fputs@c^0,w,c
 14490  005BC4  A4D8               	btfss	status,2,c
 14491  005BC6  EFE7  F02D         	goto	u8841
 14492  005BCA  EFE9  F02D         	goto	u8840
 14493  005BCE                     u8841:
 14494  005BCE  EFCE  F02D         	goto	l7612
 14495  005BD2                     u8840:
 14496  005BD2  0012               	return		;funcret
 14497  005BD4                     __end_of_fputs:
 14498                           	opt callstack 0
 14499                           
 14500 ;; *************** function _fputc *****************
 14501 ;; Defined at:
 14502 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;  c               2    2[COMRAM] int 
 14505 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 14506 ;;		 -> vsnprintf@f(6), 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;		None
 14509 ;; Return value:  Size  Location     Type
 14510 ;;                  2    2[COMRAM] int 
 14511 ;; Registers used:
 14512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14513 ;; Tracked objects:
 14514 ;;		On entry : 0/0
 14515 ;;		On exit  : 0/0
 14516 ;;		Unchanged: 0/0
 14517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14520 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14521 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14522 ;;Total ram usage:        9 bytes
 14523 ;; Hardware stack levels used:    1
 14524 ;; Hardware stack levels required when called:    5
 14525 ;; This function calls:
 14526 ;;		_putch
 14527 ;; This function is called by:
 14528 ;;		_pad
 14529 ;;		_stoa
 14530 ;;		_vfpfcnvrt
 14531 ;;		_fputs
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535                           	psect	text39
 14536  0052FC                     __ptext39:
 14537                           	opt callstack 0
 14538  0052FC                     _fputc:
 14539                           	opt callstack 18
 14540  0052FC  5005               	movf	fputc@fp^0,w,c
 14541  0052FE  1006               	iorwf	(fputc@fp+1)^0,w,c
 14542  005300  B4D8               	btfsc	status,2,c
 14543  005302  EF85  F029         	goto	u8801
 14544  005306  EF87  F029         	goto	u8800
 14545  00530A                     u8801:
 14546  00530A  EF90  F029         	goto	l7600
 14547  00530E                     u8800:
 14548  00530E  5005               	movf	fputc@fp^0,w,c
 14549  005310  1006               	iorwf	(fputc@fp+1)^0,w,c
 14550  005312  A4D8               	btfss	status,2,c
 14551  005314  EF8E  F029         	goto	u8811
 14552  005318  EF90  F029         	goto	u8810
 14553  00531C                     u8811:
 14554  00531C  EF95  F029         	goto	l7602
 14555  005320                     u8810:
 14556  005320                     l7600:
 14557  005320  5003               	movf	fputc@c^0,w,c
 14558  005322  EC74  F030         	call	_putch
 14559  005326  EFE2  F029         	goto	l1732
 14560  00532A                     l7602:
 14561  00532A  EE20 F004          	lfsr	2,4
 14562  00532E  5005               	movf	fputc@fp^0,w,c
 14563  005330  26D9               	addwf	fsr2l,f,c
 14564  005332  5006               	movf	(fputc@fp+1)^0,w,c
 14565  005334  22DA               	addwfc	fsr2h,f,c
 14566  005336  50DE               	movf	postinc2,w,c
 14567  005338  10DE               	iorwf	postinc2,w,c
 14568  00533A  B4D8               	btfsc	status,2,c
 14569  00533C  EFA2  F029         	goto	u8821
 14570  005340  EFA4  F029         	goto	u8820
 14571  005344                     u8821:
 14572  005344  EFBF  F029         	goto	l7606
 14573  005348                     u8820:
 14574  005348  EE20 F004          	lfsr	2,4
 14575  00534C  5005               	movf	fputc@fp^0,w,c
 14576  00534E  26D9               	addwf	fsr2l,f,c
 14577  005350  5006               	movf	(fputc@fp+1)^0,w,c
 14578  005352  22DA               	addwfc	fsr2h,f,c
 14579  005354  EE10 F002          	lfsr	1,2
 14580  005358  5005               	movf	fputc@fp^0,w,c
 14581  00535A  26E1               	addwf	fsr1l,f,c
 14582  00535C  5006               	movf	(fputc@fp+1)^0,w,c
 14583  00535E  22E2               	addwfc	fsr1h,f,c
 14584  005360  50DE               	movf	postinc2,w,c
 14585  005362  5CE6               	subwf	postinc1,w,c
 14586  005364  50E6               	movf	postinc1,w,c
 14587  005366  0A80               	xorlw	128
 14588  005368  6E0B               	movwf	(??_fputc+4)^0,c
 14589  00536A  50DE               	movf	postinc2,w,c
 14590  00536C  0A80               	xorlw	128
 14591  00536E  580B               	subwfb	(??_fputc+4)^0,w,c
 14592  005370  B0D8               	btfsc	status,0,c
 14593  005372  EFBD  F029         	goto	u8831
 14594  005376  EFBF  F029         	goto	u8830
 14595  00537A                     u8831:
 14596  00537A  EFE2  F029         	goto	l1732
 14597  00537E                     u8830:
 14598  00537E                     l7606:
 14599  00537E  EE20 F002          	lfsr	2,2
 14600  005382  5005               	movf	fputc@fp^0,w,c
 14601  005384  26D9               	addwf	fsr2l,f,c
 14602  005386  5006               	movf	(fputc@fp+1)^0,w,c
 14603  005388  22DA               	addwfc	fsr2h,f,c
 14604  00538A  CFDE F007          	movff	postinc2,??_fputc
 14605  00538E  CFDD F008          	movff	postdec2,??_fputc+1
 14606  005392  C005  FFD9         	movff	fputc@fp,fsr2l
 14607  005396  C006  FFDA         	movff	fputc@fp+1,fsr2h
 14608  00539A  CFDE F009          	movff	postinc2,??_fputc+2
 14609  00539E  CFDD F00A          	movff	postdec2,??_fputc+3
 14610  0053A2  5007               	movf	??_fputc^0,w,c
 14611  0053A4  2409               	addwf	(??_fputc+2)^0,w,c
 14612  0053A6  6ED9               	movwf	fsr2l,c
 14613  0053A8  5008               	movf	(??_fputc+1)^0,w,c
 14614  0053AA  200A               	addwfc	(??_fputc+3)^0,w,c
 14615  0053AC  6EDA               	movwf	fsr2h,c
 14616  0053AE  C003  FFDF         	movff	fputc@c,indf2
 14617  0053B2  EE20 F002          	lfsr	2,2
 14618  0053B6  5005               	movf	fputc@fp^0,w,c
 14619  0053B8  26D9               	addwf	fsr2l,f,c
 14620  0053BA  5006               	movf	(fputc@fp+1)^0,w,c
 14621  0053BC  22DA               	addwfc	fsr2h,f,c
 14622  0053BE  2ADE               	incf	postinc2,f,c
 14623  0053C0  0E00               	movlw	0
 14624  0053C2  22DD               	addwfc	postdec2,f,c
 14625  0053C4                     l1732:
 14626  0053C4  0012               	return		;funcret
 14627  0053C6                     __end_of_fputc:
 14628                           	opt callstack 0
 14629                           
 14630 ;; *************** function _putch *****************
 14631 ;; Defined at:
 14632 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 14633 ;; Parameters:    Size  Location     Type
 14634 ;;  c               1    wreg     unsigned char 
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;  c               1    0[COMRAM] unsigned char 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      void 
 14639 ;; Registers used:
 14640 ;;		wreg
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14650 ;;Total ram usage:        0 bytes
 14651 ;; Hardware stack levels used:    1
 14652 ;; Hardware stack levels required when called:    4
 14653 ;; This function calls:
 14654 ;;		Nothing
 14655 ;; This function is called by:
 14656 ;;		_fputc
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           	psect	text40
 14661  0060E8                     __ptext40:
 14662                           	opt callstack 0
 14663  0060E8                     _putch:
 14664                           	opt callstack 18
 14665  0060E8  0012               	return		;funcret
 14666  0060EA                     __end_of_putch:
 14667                           	opt callstack 0
 14668                           
 14669 ;; *************** function _atoi *****************
 14670 ;; Defined at:
 14671 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14672 ;; Parameters:    Size  Location     Type
 14673 ;;  s               2    9[COMRAM] PTR const unsigned char 
 14674 ;;		 -> STR_5(9), STR_4(20), STR_3(14), 
 14675 ;; Auto vars:     Size  Location     Type
 14676 ;;  n               2   22[COMRAM] int 
 14677 ;;  neg             2   15[COMRAM] int 
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  2    9[COMRAM] int 
 14680 ;; Registers used:
 14681 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14688 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14689 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14690 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14691 ;;Total ram usage:       15 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:    5
 14694 ;; This function calls:
 14695 ;;		___wmul
 14696 ;;		_isdigit
 14697 ;;		_isspace
 14698 ;; This function is called by:
 14699 ;;		_vfpfcnvrt
 14700 ;; This function uses a non-reentrant model
 14701 ;;
 14702                           
 14703                           	psect	text41
 14704  0040D6                     __ptext41:
 14705                           	opt callstack 0
 14706  0040D6                     _atoi:
 14707                           	opt callstack 21
 14708  0040D6  0E00               	movlw	0
 14709  0040D8  6E18               	movwf	(atoi@n+1)^0,c
 14710  0040DA  0E00               	movlw	0
 14711  0040DC  6E17               	movwf	atoi@n^0,c
 14712  0040DE  0E00               	movlw	0
 14713  0040E0  6E11               	movwf	(atoi@neg+1)^0,c
 14714  0040E2  0E00               	movlw	0
 14715  0040E4  6E10               	movwf	atoi@neg^0,c
 14716  0040E6  EF77  F020         	goto	l9096
 14717  0040EA                     l9094:
 14718  0040EA  4A0A               	infsnz	atoi@s^0,f,c
 14719  0040EC  2A0B               	incf	(atoi@s+1)^0,f,c
 14720  0040EE                     l9096:
 14721  0040EE  0E01               	movlw	1
 14722  0040F0  6E16               	movwf	_atoi$2363^0,c
 14723  0040F2  C00A  FFF6         	movff	atoi@s,tblptrl
 14724  0040F6  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14725  0040FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14726  0040FA  6AF8               	clrf	tblptru,c
 14727  0040FC                     	endif
 14728  0040FC                     	if	0	;tblptru may be non-zero
 14729  0040FC                     	endif
 14730  0040FC  0008               	tblrd		*
 14731  0040FE  50F5               	movf	tablat,w,c
 14732  004100  0A20               	xorlw	32
 14733  004102  B4D8               	btfsc	status,2,c
 14734  004104  EF86  F020         	goto	u11661
 14735  004108  EF88  F020         	goto	u11660
 14736  00410C                     u11661:
 14737  00410C  EFA6  F020         	goto	l9104
 14738  004110                     u11660:
 14739  004110  0EF7               	movlw	247
 14740  004112  6E0C               	movwf	??_atoi^0,c
 14741  004114  0EFF               	movlw	255
 14742  004116  6E0D               	movwf	(??_atoi+1)^0,c
 14743  004118  C00A  FFF6         	movff	atoi@s,tblptrl
 14744  00411C  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14745  004120                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14746  004120  6AF8               	clrf	tblptru,c
 14747  004122                     	endif
 14748  004122                     	if	0	;tblptru may be non-zero
 14749  004122                     	endif
 14750  004122  0008               	tblrd		*
 14751  004124  50F5               	movf	tablat,w,c
 14752  004126  6E0E               	movwf	(??_atoi+2)^0,c
 14753  004128  6A0F               	clrf	(??_atoi+3)^0,c
 14754  00412A  500C               	movf	??_atoi^0,w,c
 14755  00412C  260E               	addwf	(??_atoi+2)^0,f,c
 14756  00412E  500D               	movf	(??_atoi+1)^0,w,c
 14757  004130  220F               	addwfc	(??_atoi+3)^0,f,c
 14758  004132  500F               	movf	(??_atoi+3)^0,w,c
 14759  004134  E109               	bnz	u11670
 14760  004136  0E05               	movlw	5
 14761  004138  5C0E               	subwf	(??_atoi+2)^0,w,c
 14762  00413A  A0D8               	btfss	status,0,c
 14763  00413C  EFA2  F020         	goto	u11671
 14764  004140  EFA4  F020         	goto	u11670
 14765  004144                     u11671:
 14766  004144  EFA6  F020         	goto	l9104
 14767  004148                     u11670:
 14768  004148  0E00               	movlw	0
 14769  00414A  6E16               	movwf	_atoi$2363^0,c
 14770  00414C                     l9104:
 14771  00414C  C016  F012         	movff	_atoi$2363,_atoi$2362
 14772  004150  6A13               	clrf	(_atoi$2362+1)^0,c
 14773  004152  5012               	movf	_atoi$2362^0,w,c
 14774  004154  1013               	iorwf	(_atoi$2362+1)^0,w,c
 14775  004156  A4D8               	btfss	status,2,c
 14776  004158  EFB0  F020         	goto	u11681
 14777  00415C  EFB2  F020         	goto	u11680
 14778  004160                     u11681:
 14779  004160  EF75  F020         	goto	l9094
 14780  004164                     u11680:
 14781  004164  EFBC  F020         	goto	l9114
 14782  004168                     l9110:
 14783  004168  0E00               	movlw	0
 14784  00416A  6E11               	movwf	(atoi@neg+1)^0,c
 14785  00416C  0E01               	movlw	1
 14786  00416E  6E10               	movwf	atoi@neg^0,c
 14787  004170                     l9112:
 14788  004170  4A0A               	infsnz	atoi@s^0,f,c
 14789  004172  2A0B               	incf	(atoi@s+1)^0,f,c
 14790  004174  EFF3  F020         	goto	l9120
 14791  004178                     l9114:
 14792  004178  C00A  FFF6         	movff	atoi@s,tblptrl
 14793  00417C  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14794  004180                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14795  004180  6AF8               	clrf	tblptru,c
 14796  004182                     	endif
 14797  004182                     	if	0	;tblptru may be non-zero
 14798  004182                     	endif
 14799  004182  0008               	tblrd		*
 14800  004184  50F5               	movf	tablat,w,c
 14801  004186  6E0C               	movwf	??_atoi^0,c
 14802  004188  6A0D               	clrf	(??_atoi+1)^0,c
 14803                           
 14804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14805                           ; Switch size 1, requested type "simple"
 14806                           ; Number of cases is 1, Range of values is 0 to 0
 14807                           ; switch strategies available:
 14808                           ; Name         Instructions Cycles
 14809                           ; simple_byte            4     3 (average)
 14810                           ;	Chosen strategy is simple_byte
 14811  00418A  500D               	movf	(??_atoi+1)^0,w,c
 14812  00418C  0A00               	xorlw	0	; case 0
 14813  00418E  B4D8               	btfsc	status,2,c
 14814  004190  EFCC  F020         	goto	l9676
 14815  004194  EFF3  F020         	goto	l9120
 14816  004198                     l9676:
 14817                           
 14818                           ; Switch size 1, requested type "simple"
 14819                           ; Number of cases is 2, Range of values is 43 to 45
 14820                           ; switch strategies available:
 14821                           ; Name         Instructions Cycles
 14822                           ; simple_byte            7     4 (average)
 14823                           ;	Chosen strategy is simple_byte
 14824  004198  500C               	movf	??_atoi^0,w,c
 14825  00419A  0A2B               	xorlw	43	; case 43
 14826  00419C  B4D8               	btfsc	status,2,c
 14827  00419E  EFB8  F020         	goto	l9112
 14828  0041A2  0A06               	xorlw	6	; case 45
 14829  0041A4  B4D8               	btfsc	status,2,c
 14830  0041A6  EFB4  F020         	goto	l9110
 14831  0041AA  EFF3  F020         	goto	l9120
 14832  0041AE                     l9116:
 14833  0041AE  C017  F003         	movff	atoi@n,___wmul@multiplier
 14834  0041B2  C018  F004         	movff	atoi@n+1,___wmul@multiplier+1
 14835  0041B6  0E00               	movlw	0
 14836  0041B8  6E06               	movwf	(___wmul@multiplicand+1)^0,c
 14837  0041BA  0E0A               	movlw	10
 14838  0041BC  6E05               	movwf	___wmul@multiplicand^0,c
 14839  0041BE  ECBC  F02F         	call	___wmul	;wreg free
 14840  0041C2  C00A  FFF6         	movff	atoi@s,tblptrl
 14841  0041C6  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14842  0041CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14843  0041CA  6AF8               	clrf	tblptru,c
 14844  0041CC                     	endif
 14845  0041CC                     	if	0	;tblptru may be non-zero
 14846  0041CC                     	endif
 14847  0041CC  0008               	tblrd		*
 14848  0041CE  50F5               	movf	tablat,w,c
 14849  0041D0  5E03               	subwf	?___wmul^0,f,c
 14850  0041D2  0E00               	movlw	0
 14851  0041D4  5A04               	subwfb	(?___wmul+1)^0,f,c
 14852  0041D6  0E30               	movlw	48
 14853  0041D8  2403               	addwf	?___wmul^0,w,c
 14854  0041DA  6E17               	movwf	atoi@n^0,c
 14855  0041DC  0E00               	movlw	0
 14856  0041DE  2004               	addwfc	(?___wmul+1)^0,w,c
 14857  0041E0  6E18               	movwf	(atoi@n+1)^0,c
 14858  0041E2  EFB8  F020         	goto	l9112
 14859  0041E6                     l9120:
 14860  0041E6  0ED0               	movlw	208
 14861  0041E8  6E0C               	movwf	??_atoi^0,c
 14862  0041EA  0EFF               	movlw	255
 14863  0041EC  6E0D               	movwf	(??_atoi+1)^0,c
 14864  0041EE  C00A  FFF6         	movff	atoi@s,tblptrl
 14865  0041F2  C00B  FFF7         	movff	atoi@s+1,tblptrh
 14866  0041F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14867  0041F6  6AF8               	clrf	tblptru,c
 14868  0041F8                     	endif
 14869  0041F8                     	if	0	;tblptru may be non-zero
 14870  0041F8                     	endif
 14871  0041F8  0008               	tblrd		*
 14872  0041FA  50F5               	movf	tablat,w,c
 14873  0041FC  6E0E               	movwf	(??_atoi+2)^0,c
 14874  0041FE  6A0F               	clrf	(??_atoi+3)^0,c
 14875  004200  500C               	movf	??_atoi^0,w,c
 14876  004202  260E               	addwf	(??_atoi+2)^0,f,c
 14877  004204  500D               	movf	(??_atoi+1)^0,w,c
 14878  004206  220F               	addwfc	(??_atoi+3)^0,f,c
 14879  004208  500F               	movf	(??_atoi+3)^0,w,c
 14880  00420A  E10A               	bnz	u11690
 14881  00420C  0E0A               	movlw	10
 14882  00420E  5C0E               	subwf	(??_atoi+2)^0,w,c
 14883  004210  A0D8               	btfss	status,0,c
 14884  004212  EF0D  F021         	goto	u11691
 14885  004216  EF10  F021         	goto	u11690
 14886  00421A                     u11691:
 14887  00421A  0E01               	movlw	1
 14888  00421C  EF11  F021         	goto	u11700
 14889  004220                     u11690:
 14890  004220  0E00               	movlw	0
 14891  004222                     u11700:
 14892  004222  6E14               	movwf	_atoi$2364^0,c
 14893  004224  6A15               	clrf	(_atoi$2364+1)^0,c
 14894  004226  5014               	movf	_atoi$2364^0,w,c
 14895  004228  1015               	iorwf	(_atoi$2364+1)^0,w,c
 14896  00422A  A4D8               	btfss	status,2,c
 14897  00422C  EF1A  F021         	goto	u11711
 14898  004230  EF1C  F021         	goto	u11710
 14899  004234                     u11711:
 14900  004234  EFD7  F020         	goto	l9116
 14901  004238                     u11710:
 14902  004238  5010               	movf	atoi@neg^0,w,c
 14903  00423A  1011               	iorwf	(atoi@neg+1)^0,w,c
 14904  00423C  A4D8               	btfss	status,2,c
 14905  00423E  EF23  F021         	goto	u11721
 14906  004242  EF25  F021         	goto	u11720
 14907  004246                     u11721:
 14908  004246  EF33  F021         	goto	l1678
 14909  00424A                     u11720:
 14910  00424A  C017  F00C         	movff	atoi@n,??_atoi
 14911  00424E  C018  F00D         	movff	atoi@n+1,??_atoi+1
 14912  004252  1E0C               	comf	??_atoi^0,f,c
 14913  004254  1E0D               	comf	(??_atoi+1)^0,f,c
 14914  004256  4A0C               	infsnz	??_atoi^0,f,c
 14915  004258  2A0D               	incf	(??_atoi+1)^0,f,c
 14916  00425A  C00C  F00A         	movff	??_atoi,?_atoi
 14917  00425E  C00D  F00B         	movff	??_atoi+1,?_atoi+1
 14918  004262  EF37  F021         	goto	l1681
 14919  004266                     l1678:
 14920  004266  C017  F00A         	movff	atoi@n,?_atoi
 14921  00426A  C018  F00B         	movff	atoi@n+1,?_atoi+1
 14922  00426E                     l1681:
 14923  00426E  0012               	return		;funcret
 14924  004270                     __end_of_atoi:
 14925                           	opt callstack 0
 14926                           
 14927 ;; *************** function _isspace *****************
 14928 ;; Defined at:
 14929 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;  c               2    2[COMRAM] int 
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;		None
 14934 ;; Return value:  Size  Location     Type
 14935 ;;                  2    2[COMRAM] int 
 14936 ;; Registers used:
 14937 ;;		wreg, status,2, status,0
 14938 ;; Tracked objects:
 14939 ;;		On entry : 0/0
 14940 ;;		On exit  : 0/0
 14941 ;;		Unchanged: 0/0
 14942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14945 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14946 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14947 ;;Total ram usage:        7 bytes
 14948 ;; Hardware stack levels used:    1
 14949 ;; Hardware stack levels required when called:    4
 14950 ;; This function calls:
 14951 ;;		Nothing
 14952 ;; This function is called by:
 14953 ;;		_atoi
 14954 ;; This function uses a non-reentrant model
 14955 ;;
 14956                           
 14957                           	psect	text42
 14958  005A22                     __ptext42:
 14959                           	opt callstack 0
 14960  005A22                     _isspace:
 14961                           	opt callstack 21
 14962  005A22  0E01               	movlw	1
 14963  005A24  6E09               	movwf	_isspace$2402^0,c
 14964  005A26  0E20               	movlw	32
 14965  005A28  1803               	xorwf	isspace@c^0,w,c
 14966  005A2A  1004               	iorwf	(isspace@c+1)^0,w,c
 14967  005A2C  B4D8               	btfsc	status,2,c
 14968  005A2E  EF1B  F02D         	goto	u10531
 14969  005A32  EF1D  F02D         	goto	u10530
 14970  005A36                     u10531:
 14971  005A36  EF36  F02D         	goto	l8522
 14972  005A3A                     u10530:
 14973  005A3A  0EF7               	movlw	247
 14974  005A3C  6E05               	movwf	??_isspace^0,c
 14975  005A3E  0EFF               	movlw	255
 14976  005A40  6E06               	movwf	(??_isspace+1)^0,c
 14977  005A42  C003  F007         	movff	isspace@c,??_isspace+2
 14978  005A46  C004  F008         	movff	isspace@c+1,??_isspace+3
 14979  005A4A  5005               	movf	??_isspace^0,w,c
 14980  005A4C  2607               	addwf	(??_isspace+2)^0,f,c
 14981  005A4E  5006               	movf	(??_isspace+1)^0,w,c
 14982  005A50  2208               	addwfc	(??_isspace+3)^0,f,c
 14983  005A52  5008               	movf	(??_isspace+3)^0,w,c
 14984  005A54  E109               	bnz	u10540
 14985  005A56  0E05               	movlw	5
 14986  005A58  5C07               	subwf	(??_isspace+2)^0,w,c
 14987  005A5A  A0D8               	btfss	status,0,c
 14988  005A5C  EF32  F02D         	goto	u10541
 14989  005A60  EF34  F02D         	goto	u10540
 14990  005A64                     u10541:
 14991  005A64  EF36  F02D         	goto	l8522
 14992  005A68                     u10540:
 14993  005A68  0E00               	movlw	0
 14994  005A6A  6E09               	movwf	_isspace$2402^0,c
 14995  005A6C                     l8522:
 14996  005A6C  C009  F003         	movff	_isspace$2402,?_isspace
 14997  005A70  6A04               	clrf	(?_isspace+1)^0,c
 14998  005A72  0012               	return		;funcret
 14999  005A74                     __end_of_isspace:
 15000                           	opt callstack 0
 15001                           
 15002 ;; *************** function _isdigit *****************
 15003 ;; Defined at:
 15004 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;  c               2    2[COMRAM] int 
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;		None
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  2    2[COMRAM] int 
 15011 ;; Registers used:
 15012 ;;		wreg, status,2, status,0
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15020 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15021 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15022 ;;Total ram usage:        6 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; Hardware stack levels required when called:    4
 15025 ;; This function calls:
 15026 ;;		Nothing
 15027 ;; This function is called by:
 15028 ;;		_vfpfcnvrt
 15029 ;;		_atoi
 15030 ;; This function uses a non-reentrant model
 15031 ;;
 15032                           
 15033                           	psect	text43
 15034  005D3A                     __ptext43:
 15035                           	opt callstack 0
 15036  005D3A                     _isdigit:
 15037                           	opt callstack 22
 15038  005D3A  0ED0               	movlw	208
 15039  005D3C  6E05               	movwf	??_isdigit^0,c
 15040  005D3E  0EFF               	movlw	255
 15041  005D40  6E06               	movwf	(??_isdigit+1)^0,c
 15042  005D42  C003  F007         	movff	isdigit@c,??_isdigit+2
 15043  005D46  C004  F008         	movff	isdigit@c+1,??_isdigit+3
 15044  005D4A  5005               	movf	??_isdigit^0,w,c
 15045  005D4C  2607               	addwf	(??_isdigit+2)^0,f,c
 15046  005D4E  5006               	movf	(??_isdigit+1)^0,w,c
 15047  005D50  2208               	addwfc	(??_isdigit+3)^0,f,c
 15048  005D52  5008               	movf	(??_isdigit+3)^0,w,c
 15049  005D54  E10A               	bnz	u9610
 15050  005D56  0E0A               	movlw	10
 15051  005D58  5C07               	subwf	(??_isdigit+2)^0,w,c
 15052  005D5A  A0D8               	btfss	status,0,c
 15053  005D5C  EFB2  F02E         	goto	u9611
 15054  005D60  EFB5  F02E         	goto	u9610
 15055  005D64                     u9611:
 15056  005D64  0E01               	movlw	1
 15057  005D66  EFB6  F02E         	goto	u9620
 15058  005D6A                     u9610:
 15059  005D6A  0E00               	movlw	0
 15060  005D6C                     u9620:
 15061  005D6C  6E03               	movwf	?_isdigit^0,c
 15062  005D6E  6A04               	clrf	(?_isdigit+1)^0,c
 15063  005D70  0012               	return		;funcret
 15064  005D72                     __end_of_isdigit:
 15065                           	opt callstack 0
 15066                           
 15067 ;; *************** function ___wmul *****************
 15068 ;; Defined at:
 15069 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;  multiplier      2    2[COMRAM] unsigned int 
 15072 ;;  multiplicand    2    4[COMRAM] unsigned int 
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;  product         2    6[COMRAM] unsigned int 
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  2    2[COMRAM] unsigned int 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0, prodl, prodh
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15087 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15088 ;;Total ram usage:        6 bytes
 15089 ;; Hardware stack levels used:    1
 15090 ;; Hardware stack levels required when called:    4
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_atoi
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text44
 15099  005F78                     __ptext44:
 15100                           	opt callstack 0
 15101  005F78                     ___wmul:
 15102                           	opt callstack 21
 15103  005F78  5003               	movf	___wmul@multiplier^0,w,c
 15104  005F7A  0205               	mulwf	___wmul@multiplicand^0,c
 15105  005F7C  CFF3 F007          	movff	prodl,___wmul@product
 15106  005F80  CFF4 F008          	movff	prodh,___wmul@product+1
 15107  005F84  5003               	movf	___wmul@multiplier^0,w,c
 15108  005F86  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 15109  005F88  50F3               	movf	243,w,c
 15110  005F8A  2608               	addwf	(___wmul@product+1)^0,f,c
 15111  005F8C  5004               	movf	(___wmul@multiplier+1)^0,w,c
 15112  005F8E  0205               	mulwf	___wmul@multiplicand^0,c
 15113  005F90  50F3               	movf	243,w,c
 15114  005F92  2608               	addwf	(___wmul@product+1)^0,f,c
 15115  005F94  C007  F003         	movff	___wmul@product,?___wmul
 15116  005F98  C008  F004         	movff	___wmul@product+1,?___wmul+1
 15117  005F9C  0012               	return		;funcret
 15118  005F9E                     __end_of___wmul:
 15119                           	opt callstack 0
 15120                           
 15121 ;; *************** function _lcd_init *****************
 15122 ;; Defined at:
 15123 ;;		line 32 in file "lib_ili9341.c"
 15124 ;; Parameters:    Size  Location     Type
 15125 ;;		None
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  1    wreg      void 
 15130 ;; Registers used:
 15131 ;;		wreg, status,2, status,0, cstack
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15141 ;;Total ram usage:        0 bytes
 15142 ;; Hardware stack levels used:    1
 15143 ;; Hardware stack levels required when called:    9
 15144 ;; This function calls:
 15145 ;;		_lcd_fill
 15146 ;;		_lcd_send
 15147 ;;		_msDelay
 15148 ;; This function is called by:
 15149 ;;		_main
 15150 ;; This function uses a non-reentrant model
 15151 ;;
 15152                           
 15153                           	psect	text45
 15154  002DDA                     __ptext45:
 15155                           	opt callstack 0
 15156  002DDA                     _lcd_init:
 15157                           	opt callstack 21
 15158  002DDA                     
 15159                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
 15160  002DDA  0E01               	movlw	1
 15161  002DDC  6E04               	movwf	lcd_send@value^0,c
 15162  002DDE  0E00               	movlw	0
 15163  002DE0  EC10  F030         	call	_lcd_send
 15164  002DE4                     
 15165                           ;lib_ili9341.c: 36:     msDelay(150);
 15166  002DE4  0E96               	movlw	150
 15167  002DE6  EC1E  F02F         	call	_msDelay
 15168  002DEA                     
 15169                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
 15170  002DEA  0EEF               	movlw	239
 15171  002DEC  6E04               	movwf	lcd_send@value^0,c
 15172  002DEE  0E00               	movlw	0
 15173  002DF0  EC10  F030         	call	_lcd_send
 15174  002DF4                     
 15175                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
 15176  002DF4  0E03               	movlw	3
 15177  002DF6  6E04               	movwf	lcd_send@value^0,c
 15178  002DF8  0E01               	movlw	1
 15179  002DFA  EC10  F030         	call	_lcd_send
 15180  002DFE                     
 15181                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
 15182  002DFE  0E80               	movlw	128
 15183  002E00  6E04               	movwf	lcd_send@value^0,c
 15184  002E02  0E01               	movlw	1
 15185  002E04  EC10  F030         	call	_lcd_send
 15186  002E08                     
 15187                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
 15188  002E08  0E02               	movlw	2
 15189  002E0A  6E04               	movwf	lcd_send@value^0,c
 15190  002E0C  0E01               	movlw	1
 15191  002E0E  EC10  F030         	call	_lcd_send
 15192  002E12                     
 15193                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
 15194  002E12  0ECF               	movlw	207
 15195  002E14  6E04               	movwf	lcd_send@value^0,c
 15196  002E16  0E00               	movlw	0
 15197  002E18  EC10  F030         	call	_lcd_send
 15198  002E1C                     
 15199                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
 15200  002E1C  0E00               	movlw	0
 15201  002E1E  6E04               	movwf	lcd_send@value^0,c
 15202  002E20  0E01               	movlw	1
 15203  002E22  EC10  F030         	call	_lcd_send
 15204  002E26                     
 15205                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
 15206  002E26  0EC1               	movlw	193
 15207  002E28  6E04               	movwf	lcd_send@value^0,c
 15208  002E2A  0E01               	movlw	1
 15209  002E2C  EC10  F030         	call	_lcd_send
 15210  002E30                     
 15211                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
 15212  002E30  0E30               	movlw	48
 15213  002E32  6E04               	movwf	lcd_send@value^0,c
 15214  002E34  0E01               	movlw	1
 15215  002E36  EC10  F030         	call	_lcd_send
 15216  002E3A                     
 15217                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
 15218  002E3A  0EED               	movlw	237
 15219  002E3C  6E04               	movwf	lcd_send@value^0,c
 15220  002E3E  0E00               	movlw	0
 15221  002E40  EC10  F030         	call	_lcd_send
 15222  002E44                     
 15223                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
 15224  002E44  0E64               	movlw	100
 15225  002E46  6E04               	movwf	lcd_send@value^0,c
 15226  002E48  0E01               	movlw	1
 15227  002E4A  EC10  F030         	call	_lcd_send
 15228  002E4E                     
 15229                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
 15230  002E4E  0E03               	movlw	3
 15231  002E50  6E04               	movwf	lcd_send@value^0,c
 15232  002E52  0E01               	movlw	1
 15233  002E54  EC10  F030         	call	_lcd_send
 15234  002E58                     
 15235                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
 15236  002E58  0E12               	movlw	18
 15237  002E5A  6E04               	movwf	lcd_send@value^0,c
 15238  002E5C  0E01               	movlw	1
 15239  002E5E  EC10  F030         	call	_lcd_send
 15240  002E62                     
 15241                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
 15242  002E62  0E81               	movlw	129
 15243  002E64  6E04               	movwf	lcd_send@value^0,c
 15244  002E66  0E01               	movlw	1
 15245  002E68  EC10  F030         	call	_lcd_send
 15246  002E6C                     
 15247                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
 15248  002E6C  0EE8               	movlw	232
 15249  002E6E  6E04               	movwf	lcd_send@value^0,c
 15250  002E70  0E00               	movlw	0
 15251  002E72  EC10  F030         	call	_lcd_send
 15252  002E76                     
 15253                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
 15254  002E76  0E85               	movlw	133
 15255  002E78  6E04               	movwf	lcd_send@value^0,c
 15256  002E7A  0E01               	movlw	1
 15257  002E7C  EC10  F030         	call	_lcd_send
 15258  002E80                     
 15259                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
 15260  002E80  0E00               	movlw	0
 15261  002E82  6E04               	movwf	lcd_send@value^0,c
 15262  002E84  0E01               	movlw	1
 15263  002E86  EC10  F030         	call	_lcd_send
 15264  002E8A                     
 15265                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
 15266  002E8A  0E78               	movlw	120
 15267  002E8C  6E04               	movwf	lcd_send@value^0,c
 15268  002E8E  0E01               	movlw	1
 15269  002E90  EC10  F030         	call	_lcd_send
 15270  002E94                     
 15271                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
 15272  002E94  0ECB               	movlw	203
 15273  002E96  6E04               	movwf	lcd_send@value^0,c
 15274  002E98  0E00               	movlw	0
 15275  002E9A  EC10  F030         	call	_lcd_send
 15276  002E9E                     
 15277                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
 15278  002E9E  0E39               	movlw	57
 15279  002EA0  6E04               	movwf	lcd_send@value^0,c
 15280  002EA2  0E01               	movlw	1
 15281  002EA4  EC10  F030         	call	_lcd_send
 15282  002EA8                     
 15283                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
 15284  002EA8  0E2C               	movlw	44
 15285  002EAA  6E04               	movwf	lcd_send@value^0,c
 15286  002EAC  0E01               	movlw	1
 15287  002EAE  EC10  F030         	call	_lcd_send
 15288  002EB2                     
 15289                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
 15290  002EB2  0E00               	movlw	0
 15291  002EB4  6E04               	movwf	lcd_send@value^0,c
 15292  002EB6  0E01               	movlw	1
 15293  002EB8  EC10  F030         	call	_lcd_send
 15294  002EBC                     
 15295                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
 15296  002EBC  0E34               	movlw	52
 15297  002EBE  6E04               	movwf	lcd_send@value^0,c
 15298  002EC0  0E01               	movlw	1
 15299  002EC2  EC10  F030         	call	_lcd_send
 15300  002EC6                     
 15301                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
 15302  002EC6  0E02               	movlw	2
 15303  002EC8  6E04               	movwf	lcd_send@value^0,c
 15304  002ECA  0E01               	movlw	1
 15305  002ECC  EC10  F030         	call	_lcd_send
 15306  002ED0                     
 15307                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
 15308  002ED0  0EF7               	movlw	247
 15309  002ED2  6E04               	movwf	lcd_send@value^0,c
 15310  002ED4  0E00               	movlw	0
 15311  002ED6  EC10  F030         	call	_lcd_send
 15312  002EDA                     
 15313                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
 15314  002EDA  0E20               	movlw	32
 15315  002EDC  6E04               	movwf	lcd_send@value^0,c
 15316  002EDE  0E01               	movlw	1
 15317  002EE0  EC10  F030         	call	_lcd_send
 15318  002EE4                     
 15319                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
 15320  002EE4  0EEA               	movlw	234
 15321  002EE6  6E04               	movwf	lcd_send@value^0,c
 15322  002EE8  0E00               	movlw	0
 15323  002EEA  EC10  F030         	call	_lcd_send
 15324  002EEE                     
 15325                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
 15326  002EEE  0E00               	movlw	0
 15327  002EF0  6E04               	movwf	lcd_send@value^0,c
 15328  002EF2  0E01               	movlw	1
 15329  002EF4  EC10  F030         	call	_lcd_send
 15330  002EF8                     
 15331                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
 15332  002EF8  0E00               	movlw	0
 15333  002EFA  6E04               	movwf	lcd_send@value^0,c
 15334  002EFC  0E01               	movlw	1
 15335  002EFE  EC10  F030         	call	_lcd_send
 15336  002F02                     
 15337                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
 15338  002F02  0EC0               	movlw	192
 15339  002F04  6E04               	movwf	lcd_send@value^0,c
 15340  002F06  0E00               	movlw	0
 15341  002F08  EC10  F030         	call	_lcd_send
 15342  002F0C                     
 15343                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
 15344  002F0C  0E23               	movlw	35
 15345  002F0E  6E04               	movwf	lcd_send@value^0,c
 15346  002F10  0E01               	movlw	1
 15347  002F12  EC10  F030         	call	_lcd_send
 15348  002F16                     
 15349                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
 15350  002F16  0EC1               	movlw	193
 15351  002F18  6E04               	movwf	lcd_send@value^0,c
 15352  002F1A  0E00               	movlw	0
 15353  002F1C  EC10  F030         	call	_lcd_send
 15354  002F20                     
 15355                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
 15356  002F20  0E10               	movlw	16
 15357  002F22  6E04               	movwf	lcd_send@value^0,c
 15358  002F24  0E01               	movlw	1
 15359  002F26  EC10  F030         	call	_lcd_send
 15360  002F2A                     
 15361                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
 15362  002F2A  0EC5               	movlw	197
 15363  002F2C  6E04               	movwf	lcd_send@value^0,c
 15364  002F2E  0E00               	movlw	0
 15365  002F30  EC10  F030         	call	_lcd_send
 15366  002F34                     
 15367                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
 15368  002F34  0E3E               	movlw	62
 15369  002F36  6E04               	movwf	lcd_send@value^0,c
 15370  002F38  0E01               	movlw	1
 15371  002F3A  EC10  F030         	call	_lcd_send
 15372  002F3E                     
 15373                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
 15374  002F3E  0E28               	movlw	40
 15375  002F40  6E04               	movwf	lcd_send@value^0,c
 15376  002F42  0E01               	movlw	1
 15377  002F44  EC10  F030         	call	_lcd_send
 15378  002F48                     
 15379                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
 15380  002F48  0EC7               	movlw	199
 15381  002F4A  6E04               	movwf	lcd_send@value^0,c
 15382  002F4C  0E00               	movlw	0
 15383  002F4E  EC10  F030         	call	_lcd_send
 15384  002F52                     
 15385                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
 15386  002F52  0E86               	movlw	134
 15387  002F54  6E04               	movwf	lcd_send@value^0,c
 15388  002F56  0E01               	movlw	1
 15389  002F58  EC10  F030         	call	_lcd_send
 15390  002F5C                     
 15391                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
 15392  002F5C  0E36               	movlw	54
 15393  002F5E  6E04               	movwf	lcd_send@value^0,c
 15394  002F60  0E00               	movlw	0
 15395  002F62  EC10  F030         	call	_lcd_send
 15396  002F66                     
 15397                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
 15398  002F66  0E48               	movlw	72
 15399  002F68  6E04               	movwf	lcd_send@value^0,c
 15400  002F6A  0E01               	movlw	1
 15401  002F6C  EC10  F030         	call	_lcd_send
 15402  002F70                     
 15403                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
 15404  002F70  0E3A               	movlw	58
 15405  002F72  6E04               	movwf	lcd_send@value^0,c
 15406  002F74  0E00               	movlw	0
 15407  002F76  EC10  F030         	call	_lcd_send
 15408  002F7A                     
 15409                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
 15410  002F7A  0E55               	movlw	85
 15411  002F7C  6E04               	movwf	lcd_send@value^0,c
 15412  002F7E  0E01               	movlw	1
 15413  002F80  EC10  F030         	call	_lcd_send
 15414  002F84                     
 15415                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
 15416  002F84  0EB1               	movlw	177
 15417  002F86  6E04               	movwf	lcd_send@value^0,c
 15418  002F88  0E00               	movlw	0
 15419  002F8A  EC10  F030         	call	_lcd_send
 15420  002F8E                     
 15421                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
 15422  002F8E  0E00               	movlw	0
 15423  002F90  6E04               	movwf	lcd_send@value^0,c
 15424  002F92  0E01               	movlw	1
 15425  002F94  EC10  F030         	call	_lcd_send
 15426  002F98                     
 15427                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
 15428  002F98  0E18               	movlw	24
 15429  002F9A  6E04               	movwf	lcd_send@value^0,c
 15430  002F9C  0E01               	movlw	1
 15431  002F9E  EC10  F030         	call	_lcd_send
 15432  002FA2                     
 15433                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
 15434  002FA2  0EB6               	movlw	182
 15435  002FA4  6E04               	movwf	lcd_send@value^0,c
 15436  002FA6  0E00               	movlw	0
 15437  002FA8  EC10  F030         	call	_lcd_send
 15438  002FAC                     
 15439                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
 15440  002FAC  0E08               	movlw	8
 15441  002FAE  6E04               	movwf	lcd_send@value^0,c
 15442  002FB0  0E01               	movlw	1
 15443  002FB2  EC10  F030         	call	_lcd_send
 15444  002FB6                     
 15445                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
 15446  002FB6  0E82               	movlw	130
 15447  002FB8  6E04               	movwf	lcd_send@value^0,c
 15448  002FBA  0E01               	movlw	1
 15449  002FBC  EC10  F030         	call	_lcd_send
 15450  002FC0                     
 15451                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
 15452  002FC0  0E27               	movlw	39
 15453  002FC2  6E04               	movwf	lcd_send@value^0,c
 15454  002FC4  0E01               	movlw	1
 15455  002FC6  EC10  F030         	call	_lcd_send
 15456  002FCA                     
 15457                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
 15458  002FCA  0EF2               	movlw	242
 15459  002FCC  6E04               	movwf	lcd_send@value^0,c
 15460  002FCE  0E00               	movlw	0
 15461  002FD0  EC10  F030         	call	_lcd_send
 15462  002FD4                     
 15463                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
 15464  002FD4  0E00               	movlw	0
 15465  002FD6  6E04               	movwf	lcd_send@value^0,c
 15466  002FD8  0E01               	movlw	1
 15467  002FDA  EC10  F030         	call	_lcd_send
 15468  002FDE                     
 15469                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
 15470  002FDE  0E26               	movlw	38
 15471  002FE0  6E04               	movwf	lcd_send@value^0,c
 15472  002FE2  0E00               	movlw	0
 15473  002FE4  EC10  F030         	call	_lcd_send
 15474  002FE8                     
 15475                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
 15476  002FE8  0E01               	movlw	1
 15477  002FEA  6E04               	movwf	lcd_send@value^0,c
 15478  002FEC  0E01               	movlw	1
 15479  002FEE  EC10  F030         	call	_lcd_send
 15480  002FF2                     
 15481                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
 15482  002FF2  0EE0               	movlw	224
 15483  002FF4  6E04               	movwf	lcd_send@value^0,c
 15484  002FF6  0E00               	movlw	0
 15485  002FF8  EC10  F030         	call	_lcd_send
 15486  002FFC                     
 15487                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
 15488  002FFC  0E0F               	movlw	15
 15489  002FFE  6E04               	movwf	lcd_send@value^0,c
 15490  003000  0E01               	movlw	1
 15491  003002  EC10  F030         	call	_lcd_send
 15492  003006                     
 15493                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
 15494  003006  0E31               	movlw	49
 15495  003008  6E04               	movwf	lcd_send@value^0,c
 15496  00300A  0E01               	movlw	1
 15497  00300C  EC10  F030         	call	_lcd_send
 15498  003010                     
 15499                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
 15500  003010  0E2B               	movlw	43
 15501  003012  6E04               	movwf	lcd_send@value^0,c
 15502  003014  0E01               	movlw	1
 15503  003016  EC10  F030         	call	_lcd_send
 15504  00301A                     
 15505                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
 15506  00301A  0E0C               	movlw	12
 15507  00301C  6E04               	movwf	lcd_send@value^0,c
 15508  00301E  0E01               	movlw	1
 15509  003020  EC10  F030         	call	_lcd_send
 15510  003024                     
 15511                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
 15512  003024  0E0E               	movlw	14
 15513  003026  6E04               	movwf	lcd_send@value^0,c
 15514  003028  0E01               	movlw	1
 15515  00302A  EC10  F030         	call	_lcd_send
 15516  00302E                     
 15517                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
 15518  00302E  0E08               	movlw	8
 15519  003030  6E04               	movwf	lcd_send@value^0,c
 15520  003032  0E01               	movlw	1
 15521  003034  EC10  F030         	call	_lcd_send
 15522  003038                     
 15523                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
 15524  003038  0E4E               	movlw	78
 15525  00303A  6E04               	movwf	lcd_send@value^0,c
 15526  00303C  0E01               	movlw	1
 15527  00303E  EC10  F030         	call	_lcd_send
 15528  003042                     
 15529                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
 15530  003042  0EF1               	movlw	241
 15531  003044  6E04               	movwf	lcd_send@value^0,c
 15532  003046  0E01               	movlw	1
 15533  003048  EC10  F030         	call	_lcd_send
 15534  00304C                     
 15535                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
 15536  00304C  0E37               	movlw	55
 15537  00304E  6E04               	movwf	lcd_send@value^0,c
 15538  003050  0E01               	movlw	1
 15539  003052  EC10  F030         	call	_lcd_send
 15540  003056                     
 15541                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
 15542  003056  0E07               	movlw	7
 15543  003058  6E04               	movwf	lcd_send@value^0,c
 15544  00305A  0E01               	movlw	1
 15545  00305C  EC10  F030         	call	_lcd_send
 15546  003060                     
 15547                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
 15548  003060  0E10               	movlw	16
 15549  003062  6E04               	movwf	lcd_send@value^0,c
 15550  003064  0E01               	movlw	1
 15551  003066  EC10  F030         	call	_lcd_send
 15552  00306A                     
 15553                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
 15554  00306A  0E03               	movlw	3
 15555  00306C  6E04               	movwf	lcd_send@value^0,c
 15556  00306E  0E01               	movlw	1
 15557  003070  EC10  F030         	call	_lcd_send
 15558  003074                     
 15559                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
 15560  003074  0E0E               	movlw	14
 15561  003076  6E04               	movwf	lcd_send@value^0,c
 15562  003078  0E01               	movlw	1
 15563  00307A  EC10  F030         	call	_lcd_send
 15564  00307E                     
 15565                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
 15566  00307E  0E09               	movlw	9
 15567  003080  6E04               	movwf	lcd_send@value^0,c
 15568  003082  0E01               	movlw	1
 15569  003084  EC10  F030         	call	_lcd_send
 15570  003088                     
 15571                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
 15572  003088  0E00               	movlw	0
 15573  00308A  6E04               	movwf	lcd_send@value^0,c
 15574  00308C  0E01               	movlw	1
 15575  00308E  EC10  F030         	call	_lcd_send
 15576  003092                     
 15577                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
 15578  003092  0EE1               	movlw	225
 15579  003094  6E04               	movwf	lcd_send@value^0,c
 15580  003096  0E00               	movlw	0
 15581  003098  EC10  F030         	call	_lcd_send
 15582  00309C                     
 15583                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 15584  00309C  0E00               	movlw	0
 15585  00309E  6E04               	movwf	lcd_send@value^0,c
 15586  0030A0  0E01               	movlw	1
 15587  0030A2  EC10  F030         	call	_lcd_send
 15588  0030A6                     
 15589                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
 15590  0030A6  0E0E               	movlw	14
 15591  0030A8  6E04               	movwf	lcd_send@value^0,c
 15592  0030AA  0E01               	movlw	1
 15593  0030AC  EC10  F030         	call	_lcd_send
 15594  0030B0                     
 15595                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
 15596  0030B0  0E14               	movlw	20
 15597  0030B2  6E04               	movwf	lcd_send@value^0,c
 15598  0030B4  0E01               	movlw	1
 15599  0030B6  EC10  F030         	call	_lcd_send
 15600  0030BA                     
 15601                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 15602  0030BA  0E03               	movlw	3
 15603  0030BC  6E04               	movwf	lcd_send@value^0,c
 15604  0030BE  0E01               	movlw	1
 15605  0030C0  EC10  F030         	call	_lcd_send
 15606  0030C4                     
 15607                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 15608  0030C4  0E11               	movlw	17
 15609  0030C6  6E04               	movwf	lcd_send@value^0,c
 15610  0030C8  0E01               	movlw	1
 15611  0030CA  EC10  F030         	call	_lcd_send
 15612  0030CE                     
 15613                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 15614  0030CE  0E07               	movlw	7
 15615  0030D0  6E04               	movwf	lcd_send@value^0,c
 15616  0030D2  0E01               	movlw	1
 15617  0030D4  EC10  F030         	call	_lcd_send
 15618  0030D8                     
 15619                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 15620  0030D8  0E31               	movlw	49
 15621  0030DA  6E04               	movwf	lcd_send@value^0,c
 15622  0030DC  0E01               	movlw	1
 15623  0030DE  EC10  F030         	call	_lcd_send
 15624  0030E2                     
 15625                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 15626  0030E2  0EC1               	movlw	193
 15627  0030E4  6E04               	movwf	lcd_send@value^0,c
 15628  0030E6  0E01               	movlw	1
 15629  0030E8  EC10  F030         	call	_lcd_send
 15630  0030EC                     
 15631                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 15632  0030EC  0E48               	movlw	72
 15633  0030EE  6E04               	movwf	lcd_send@value^0,c
 15634  0030F0  0E01               	movlw	1
 15635  0030F2  EC10  F030         	call	_lcd_send
 15636  0030F6                     
 15637                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 15638  0030F6  0E08               	movlw	8
 15639  0030F8  6E04               	movwf	lcd_send@value^0,c
 15640  0030FA  0E01               	movlw	1
 15641  0030FC  EC10  F030         	call	_lcd_send
 15642  003100                     
 15643                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 15644  003100  0E0F               	movlw	15
 15645  003102  6E04               	movwf	lcd_send@value^0,c
 15646  003104  0E01               	movlw	1
 15647  003106  EC10  F030         	call	_lcd_send
 15648  00310A                     
 15649                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 15650  00310A  0E0C               	movlw	12
 15651  00310C  6E04               	movwf	lcd_send@value^0,c
 15652  00310E  0E01               	movlw	1
 15653  003110  EC10  F030         	call	_lcd_send
 15654  003114                     
 15655                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 15656  003114  0E31               	movlw	49
 15657  003116  6E04               	movwf	lcd_send@value^0,c
 15658  003118  0E01               	movlw	1
 15659  00311A  EC10  F030         	call	_lcd_send
 15660  00311E                     
 15661                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 15662  00311E  0E36               	movlw	54
 15663  003120  6E04               	movwf	lcd_send@value^0,c
 15664  003122  0E01               	movlw	1
 15665  003124  EC10  F030         	call	_lcd_send
 15666  003128                     
 15667                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 15668  003128  0E0F               	movlw	15
 15669  00312A  6E04               	movwf	lcd_send@value^0,c
 15670  00312C  0E01               	movlw	1
 15671  00312E  EC10  F030         	call	_lcd_send
 15672  003132                     
 15673                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 15674  003132  0E11               	movlw	17
 15675  003134  6E04               	movwf	lcd_send@value^0,c
 15676  003136  0E00               	movlw	0
 15677  003138  EC10  F030         	call	_lcd_send
 15678                           
 15679                           ;lib_ili9341.c: 123:     msDelay(120);
 15680  00313C  0E78               	movlw	120
 15681  00313E  EC1E  F02F         	call	_msDelay
 15682  003142                     
 15683                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 15684  003142  0E29               	movlw	41
 15685  003144  6E04               	movwf	lcd_send@value^0,c
 15686  003146  0E00               	movlw	0
 15687  003148  EC10  F030         	call	_lcd_send
 15688  00314C                     
 15689                           ;lib_ili9341.c: 125:     msDelay(120);
 15690  00314C  0E78               	movlw	120
 15691  00314E  EC1E  F02F         	call	_msDelay
 15692  003152                     
 15693                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 15694  003152  0E00               	movlw	0
 15695  003154  6E0D               	movwf	(lcd_fill@bg_color+1)^0,c
 15696  003156  0E00               	movlw	0
 15697  003158  6E0C               	movwf	lcd_fill@bg_color^0,c
 15698  00315A  ECAB  F02B         	call	_lcd_fill	;wreg free
 15699  00315E  0012               	return		;funcret
 15700  003160                     __end_of_lcd_init:
 15701                           	opt callstack 0
 15702                           
 15703 ;; *************** function _msDelay *****************
 15704 ;; Defined at:
 15705 ;;		line 14 in file "lib_ili9341.c"
 15706 ;; Parameters:    Size  Location     Type
 15707 ;;  ms              1    wreg     unsigned char 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;  ms              1    3[COMRAM] unsigned char 
 15710 ;;  k               1    4[COMRAM] unsigned char 
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  1    wreg      void 
 15713 ;; Registers used:
 15714 ;;		wreg, status,2, status,0
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15724 ;;Total ram usage:        3 bytes
 15725 ;; Hardware stack levels used:    1
 15726 ;; Hardware stack levels required when called:    4
 15727 ;; This function calls:
 15728 ;;		Nothing
 15729 ;; This function is called by:
 15730 ;;		_lcd_init
 15731 ;; This function uses a non-reentrant model
 15732 ;;
 15733                           
 15734                           	psect	text46
 15735  005E3C                     __ptext46:
 15736                           	opt callstack 0
 15737  005E3C                     _msDelay:
 15738                           	opt callstack 25
 15739                           
 15740                           ;incstack = 0
 15741                           ;msDelay@ms stored from wreg
 15742  005E3C  6E04               	movwf	msDelay@ms^0,c
 15743  005E3E                     
 15744                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 15745  005E3E  0E00               	movlw	0
 15746  005E40  6E05               	movwf	msDelay@k^0,c
 15747  005E42  EF2B  F02F         	goto	l6824
 15748  005E46                     l6820:
 15749                           
 15750                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 15751  005E46  0E03               	movlw	3
 15752  005E48  6E03               	movwf	??_msDelay^0,c
 15753  005E4A  0E98               	movlw	152
 15754  005E4C                     u12387:
 15755  005E4C  2EE8               	decfsz	wreg,f,c
 15756  005E4E  D7FE               	bra	u12387
 15757  005E50  2E03               	decfsz	??_msDelay^0,f,c
 15758  005E52  D7FC               	bra	u12387
 15759  005E54                     
 15760                           ;lib_ili9341.c: 21:     }
 15761  005E54  2A05               	incf	msDelay@k^0,f,c
 15762  005E56                     l6824:
 15763  005E56  5004               	movf	msDelay@ms^0,w,c
 15764  005E58  5C05               	subwf	msDelay@k^0,w,c
 15765  005E5A  A0D8               	btfss	status,0,c
 15766  005E5C  EF32  F02F         	goto	u8071
 15767  005E60  EF34  F02F         	goto	u8070
 15768  005E64                     u8071:
 15769  005E64  EF23  F02F         	goto	l6820
 15770  005E68                     u8070:
 15771  005E68  0012               	return		;funcret
 15772  005E6A                     __end_of_msDelay:
 15773                           	opt callstack 0
 15774                           
 15775 ;; *************** function _lcd_fill *****************
 15776 ;; Defined at:
 15777 ;;		line 191 in file "lib_ili9341.c"
 15778 ;; Parameters:    Size  Location     Type
 15779 ;;  bg_color        2   11[COMRAM] unsigned short 
 15780 ;; Auto vars:     Size  Location     Type
 15781 ;;  width           2   15[COMRAM] unsigned short 
 15782 ;;  height          2   13[COMRAM] unsigned short 
 15783 ;; Return value:  Size  Location     Type
 15784 ;;                  1    wreg      void 
 15785 ;; Registers used:
 15786 ;;		wreg, status,2, status,0, cstack
 15787 ;; Tracked objects:
 15788 ;;		On entry : 0/0
 15789 ;;		On exit  : 0/0
 15790 ;;		Unchanged: 0/0
 15791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15793 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15795 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15796 ;;Total ram usage:        6 bytes
 15797 ;; Hardware stack levels used:    1
 15798 ;; Hardware stack levels required when called:    8
 15799 ;; This function calls:
 15800 ;;		_lcd_draw_pixel
 15801 ;;		_lcd_set_cursor
 15802 ;; This function is called by:
 15803 ;;		_lcd_init
 15804 ;; This function uses a non-reentrant model
 15805 ;;
 15806                           
 15807                           	psect	text47
 15808  005756                     __ptext47:
 15809                           	opt callstack 0
 15810  005756                     _lcd_fill:
 15811                           	opt callstack 21
 15812  005756                     
 15813                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 15814  005756  0E01               	movlw	1
 15815  005758  6E11               	movwf	(lcd_fill@width+1)^0,c
 15816  00575A  0E40               	movlw	64
 15817  00575C  6E10               	movwf	lcd_fill@width^0,c
 15818  00575E  0E00               	movlw	0
 15819  005760  6E0F               	movwf	(lcd_fill@height+1)^0,c
 15820  005762  0EF0               	movlw	240
 15821  005764  6E0E               	movwf	lcd_fill@height^0,c
 15822  005766                     
 15823                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 15824  005766  0E00               	movlw	0
 15825  005768  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 15826  00576A  0E00               	movlw	0
 15827  00576C  6E08               	movwf	lcd_set_cursor@x^0,c
 15828  00576E  0E00               	movlw	0
 15829  005770  6E0B               	movwf	(lcd_set_cursor@y+1)^0,c
 15830  005772  0E00               	movlw	0
 15831  005774  6E0A               	movwf	lcd_set_cursor@y^0,c
 15832  005776  ECEA  F02D         	call	_lcd_set_cursor	;wreg free
 15833  00577A  0900               	iorlw	0
 15834  00577C  B4D8               	btfsc	status,2,c
 15835  00577E  EFC3  F02B         	goto	u8081
 15836  005782  EFC5  F02B         	goto	u8080
 15837  005786                     u8081:
 15838  005786  EFDE  F02B         	goto	l6838
 15839  00578A                     u8080:
 15840  00578A  EFEB  F02B         	goto	l483
 15841  00578E                     l6832:
 15842                           
 15843                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 15844  00578E  C00C  F006         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 15845  005792  C00D  F007         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 15846  005796  EC28  F030         	call	_lcd_draw_pixel	;wreg free
 15847  00579A                     l6834:
 15848                           
 15849                           ;lib_ili9341.c: 202:         while(width--)
 15850  00579A  0610               	decf	lcd_fill@width^0,f,c
 15851  00579C  A0D8               	btfss	status,0,c
 15852  00579E  0611               	decf	(lcd_fill@width+1)^0,f,c
 15853  0057A0  2810               	incf	lcd_fill@width^0,w,c
 15854  0057A2  E106               	bnz	u8091
 15855  0057A4  2811               	incf	(lcd_fill@width+1)^0,w,c
 15856  0057A6  A4D8               	btfss	status,2,c
 15857  0057A8  EFD8  F02B         	goto	u8091
 15858  0057AC  EFDA  F02B         	goto	u8090
 15859  0057B0                     u8091:
 15860  0057B0  EFC7  F02B         	goto	l6832
 15861  0057B4                     u8090:
 15862  0057B4                     
 15863                           ;lib_ili9341.c: 206:         width = 320;
 15864  0057B4  0E01               	movlw	1
 15865  0057B6  6E11               	movwf	(lcd_fill@width+1)^0,c
 15866  0057B8  0E40               	movlw	64
 15867  0057BA  6E10               	movwf	lcd_fill@width^0,c
 15868  0057BC                     l6838:
 15869                           
 15870                           ;lib_ili9341.c: 200:     while(height--)
 15871  0057BC  060E               	decf	lcd_fill@height^0,f,c
 15872  0057BE  A0D8               	btfss	status,0,c
 15873  0057C0  060F               	decf	(lcd_fill@height+1)^0,f,c
 15874  0057C2  280E               	incf	lcd_fill@height^0,w,c
 15875  0057C4  E106               	bnz	u8101
 15876  0057C6  280F               	incf	(lcd_fill@height+1)^0,w,c
 15877  0057C8  A4D8               	btfss	status,2,c
 15878  0057CA  EFE9  F02B         	goto	u8101
 15879  0057CE  EFEB  F02B         	goto	u8100
 15880  0057D2                     u8101:
 15881  0057D2  EFCD  F02B         	goto	l6834
 15882  0057D6                     u8100:
 15883  0057D6                     l483:
 15884  0057D6  0012               	return		;funcret
 15885  0057D8                     __end_of_lcd_fill:
 15886                           	opt callstack 0
 15887                           
 15888 ;; *************** function _lcd_draw_string *****************
 15889 ;; Defined at:
 15890 ;;		line 378 in file "lib_ili9341.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;  x               2   33[COMRAM] unsigned short 
 15893 ;;  y               2   35[COMRAM] unsigned short 
 15894 ;;  pS              2   37[COMRAM] PTR const unsigned char 
 15895 ;;		 -> steste(100), string(100), string_rpm(100), STR_2(11), 
 15896 ;;		 -> STR_1(33), 
 15897 ;;  fg_color        2   39[COMRAM] unsigned short 
 15898 ;;  bg_color        2   41[COMRAM] unsigned short 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  lIndex          2   49[COMRAM] unsigned short 
 15901 ;;  k               2   47[COMRAM] unsigned short 
 15902 ;; Return value:  Size  Location     Type
 15903 ;;                  1    wreg      void 
 15904 ;; Registers used:
 15905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15906 ;; Tracked objects:
 15907 ;;		On entry : 0/0
 15908 ;;		On exit  : 0/0
 15909 ;;		Unchanged: 0/0
 15910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15911 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15912 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15913 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15914 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15915 ;;Total ram usage:       18 bytes
 15916 ;; Hardware stack levels used:    1
 15917 ;; Hardware stack levels required when called:    9
 15918 ;; This function calls:
 15919 ;;		_lcd_draw_char
 15920 ;; This function is called by:
 15921 ;;		_main
 15922 ;; This function uses a non-reentrant model
 15923 ;;
 15924                           
 15925                           	psect	text48
 15926  0049C0                     __ptext48:
 15927                           	opt callstack 0
 15928  0049C0                     _lcd_draw_string:
 15929                           	opt callstack 21
 15930  0049C0                     
 15931                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 15932  0049C0  EF5F  F025         	goto	l7226
 15933  0049C4                     l7212:
 15934                           
 15935                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 15936  0049C4  0E00               	movlw	0
 15937  0049C6  6E33               	movwf	(lcd_draw_string@lIndex+1)^0,c
 15938  0049C8  0E00               	movlw	0
 15939  0049CA  6E32               	movwf	lcd_draw_string@lIndex^0,c
 15940                           
 15941                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 15942  0049CC  0E00               	movlw	0
 15943  0049CE  6E31               	movwf	(lcd_draw_string@k+1)^0,c
 15944  0049D0  0E00               	movlw	0
 15945  0049D2  6E30               	movwf	lcd_draw_string@k^0,c
 15946  0049D4  EF0B  F025         	goto	l7218
 15947  0049D8                     l7214:
 15948                           
 15949                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 15950  0049D8  90D8               	bcf	status,0,c
 15951  0049DA  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 15952  0049DC  6EF6               	movwf	tblptrl,c
 15953  0049DE  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 15954  0049E0  6EF7               	movwf	tblptrh,c
 15955  0049E2  0E93               	movlw	low _font
 15956  0049E4  26F6               	addwf	tblptrl,f,c
 15957  0049E6  0EF1               	movlw	high _font
 15958  0049E8  22F7               	addwfc	tblptrh,f,c
 15959  0049EA                     	if	1	;There are 3 active tblptr bytes
 15960  0049EA  6AF8               	clrf	tblptru,c
 15961  0049EC  0E00               	movlw	low (__mediumconst shr (0+16))
 15962  0049EE  22F8               	addwfc	tblptru,f,c
 15963  0049F0                     	endif
 15964  0049F0  0009               	tblrd		*+
 15965  0049F2  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 15966  0049F6  0009               	tblrd		*+
 15967  0049F8  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 15968  0049FC  90D8               	bcf	status,0,c
 15969  0049FE  362C               	rlcf	??_lcd_draw_string^0,f,c
 15970  004A00  362D               	rlcf	(??_lcd_draw_string+1)^0,f,c
 15971  004A02  0E01               	movlw	1
 15972  004A04  262C               	addwf	??_lcd_draw_string^0,f,c
 15973  004A06  0E00               	movlw	0
 15974  004A08  222D               	addwfc	(??_lcd_draw_string+1)^0,f,c
 15975  004A0A  502C               	movf	??_lcd_draw_string^0,w,c
 15976  004A0C  2632               	addwf	lcd_draw_string@lIndex^0,f,c
 15977  004A0E  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 15978  004A10  2233               	addwfc	(lcd_draw_string@lIndex+1)^0,f,c
 15979  004A12                     
 15980                           ;lib_ili9341.c: 388:         }
 15981  004A12  4A30               	infsnz	lcd_draw_string@k^0,f,c
 15982  004A14  2A31               	incf	(lcd_draw_string@k+1)^0,f,c
 15983  004A16                     l7218:
 15984  004A16  0EE0               	movlw	224
 15985  004A18  6E2C               	movwf	??_lcd_draw_string^0,c
 15986  004A1A  0EFF               	movlw	255
 15987  004A1C  6E2D               	movwf	(??_lcd_draw_string+1)^0,c
 15988  004A1E  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 15989  004A22  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 15990  004A26  0E00               	movlw	low (__mediumconst shr (0+16))
 15991  004A28  6EF8               	movwf	tblptru,c
 15992  004A2A  0E0E               	movlw	(high __ramtop+-1)
 15993  004A2C  64F7               	cpfsgt	tblptrh,c
 15994  004A2E  D003               	bra	u8367
 15995  004A30  0008               	tblrd		*
 15996  004A32  50F5               	movf	tablat,w,c
 15997  004A34  D005               	bra	u8360
 15998  004A36                     u8367:
 15999  004A36  CFF6 FFE1          	movff	tblptrl,fsr1l
 16000  004A3A  CFF7 FFE2          	movff	tblptrh,fsr1h
 16001  004A3E  50E7               	movf	indf1,w,c
 16002  004A40                     u8360:
 16003  004A40  6E2E               	movwf	(??_lcd_draw_string+2)^0,c
 16004  004A42  6A2F               	clrf	(??_lcd_draw_string+3)^0,c
 16005  004A44  502C               	movf	??_lcd_draw_string^0,w,c
 16006  004A46  262E               	addwf	(??_lcd_draw_string+2)^0,f,c
 16007  004A48  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16008  004A4A  222F               	addwfc	(??_lcd_draw_string+3)^0,f,c
 16009  004A4C  502E               	movf	(??_lcd_draw_string+2)^0,w,c
 16010  004A4E  5C30               	subwf	lcd_draw_string@k^0,w,c
 16011  004A50  502F               	movf	(??_lcd_draw_string+3)^0,w,c
 16012  004A52  5831               	subwfb	(lcd_draw_string@k+1)^0,w,c
 16013  004A54  A0D8               	btfss	status,0,c
 16014  004A56  EF2F  F025         	goto	u8371
 16015  004A5A  EF31  F025         	goto	u8370
 16016  004A5E                     u8371:
 16017  004A5E  EFEC  F024         	goto	l7214
 16018  004A62                     u8370:
 16019  004A62                     
 16020                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 16021  004A62  C022  F00C         	movff	lcd_draw_string@x,lcd_draw_char@x
 16022  004A66  C023  F00D         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 16023  004A6A  C024  F00E         	movff	lcd_draw_string@y,lcd_draw_char@y
 16024  004A6E  C025  F00F         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 16025  004A72  C032  F010         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 16026  004A76  C033  F011         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 16027  004A7A  C028  F012         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 16028  004A7E  C029  F013         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 16029  004A82  C02A  F014         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 16030  004A86  C02B  F015         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 16031  004A8A  ECBD  F022         	call	_lcd_draw_char	;wreg free
 16032  004A8E                     
 16033                           ;lib_ili9341.c: 392:         x += font[lIndex];
 16034  004A8E  90D8               	bcf	status,0,c
 16035  004A90  3432               	rlcf	lcd_draw_string@lIndex^0,w,c
 16036  004A92  6EF6               	movwf	tblptrl,c
 16037  004A94  3433               	rlcf	(lcd_draw_string@lIndex+1)^0,w,c
 16038  004A96  6EF7               	movwf	tblptrh,c
 16039  004A98  0E93               	movlw	low _font
 16040  004A9A  26F6               	addwf	tblptrl,f,c
 16041  004A9C  0EF1               	movlw	high _font
 16042  004A9E  22F7               	addwfc	tblptrh,f,c
 16043  004AA0                     	if	1	;There are 3 active tblptr bytes
 16044  004AA0  6AF8               	clrf	tblptru,c
 16045  004AA2  0E00               	movlw	low (__mediumconst shr (0+16))
 16046  004AA4  22F8               	addwfc	tblptru,f,c
 16047  004AA6                     	endif
 16048  004AA6  0009               	tblrd		*+
 16049  004AA8  CFF5 F02C          	movff	tablat,??_lcd_draw_string
 16050  004AAC  0009               	tblrd		*+
 16051  004AAE  CFF5 F02D          	movff	tablat,??_lcd_draw_string+1
 16052  004AB2  502C               	movf	??_lcd_draw_string^0,w,c
 16053  004AB4  2622               	addwf	lcd_draw_string@x^0,f,c
 16054  004AB6  502D               	movf	(??_lcd_draw_string+1)^0,w,c
 16055  004AB8  2223               	addwfc	(lcd_draw_string@x+1)^0,f,c
 16056  004ABA                     
 16057                           ;lib_ili9341.c: 394:         pS++;
 16058  004ABA  4A26               	infsnz	lcd_draw_string@pS^0,f,c
 16059  004ABC  2A27               	incf	(lcd_draw_string@pS+1)^0,f,c
 16060  004ABE                     l7226:
 16061                           
 16062                           ;lib_ili9341.c: 382:     while(*pS)
 16063  004ABE  C026  FFF6         	movff	lcd_draw_string@pS,tblptrl
 16064  004AC2  C027  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 16065  004AC6  0E00               	movlw	low (__mediumconst shr (0+16))
 16066  004AC8  6EF8               	movwf	tblptru,c
 16067  004ACA  0E0E               	movlw	(high __ramtop+-1)
 16068  004ACC  64F7               	cpfsgt	tblptrh,c
 16069  004ACE  D003               	bra	u8387
 16070  004AD0  0008               	tblrd		*
 16071  004AD2  50F5               	movf	tablat,w,c
 16072  004AD4  D005               	bra	u8380
 16073  004AD6                     u8387:
 16074  004AD6  CFF6 FFE1          	movff	tblptrl,fsr1l
 16075  004ADA  CFF7 FFE2          	movff	tblptrh,fsr1h
 16076  004ADE  50E7               	movf	indf1,w,c
 16077  004AE0                     u8380:
 16078  004AE0  0900               	iorlw	0
 16079  004AE2  A4D8               	btfss	status,2,c
 16080  004AE4  EF76  F025         	goto	u8391
 16081  004AE8  EF78  F025         	goto	u8390
 16082  004AEC                     u8391:
 16083  004AEC  EFE2  F024         	goto	l7212
 16084  004AF0                     u8390:
 16085  004AF0  0012               	return		;funcret
 16086  004AF2                     __end_of_lcd_draw_string:
 16087                           	opt callstack 0
 16088                           
 16089 ;; *************** function _lcd_draw_char *****************
 16090 ;; Defined at:
 16091 ;;		line 353 in file "lib_ili9341.c"
 16092 ;; Parameters:    Size  Location     Type
 16093 ;;  x               2   11[COMRAM] unsigned short 
 16094 ;;  y               2   13[COMRAM] unsigned short 
 16095 ;;  fIndex          2   15[COMRAM] unsigned short 
 16096 ;;  fg_color        2   17[COMRAM] unsigned short 
 16097 ;;  bg_color        2   19[COMRAM] unsigned short 
 16098 ;; Auto vars:     Size  Location     Type
 16099 ;;  i               1   32[COMRAM] unsigned char 
 16100 ;;  k               1   31[COMRAM] unsigned char 
 16101 ;;  j               1   30[COMRAM] unsigned char 
 16102 ;; Return value:  Size  Location     Type
 16103 ;;                  1    wreg      void 
 16104 ;; Registers used:
 16105 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16106 ;; Tracked objects:
 16107 ;;		On entry : 0/0
 16108 ;;		On exit  : 0/0
 16109 ;;		Unchanged: 0/0
 16110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16111 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16112 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16113 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16114 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16115 ;;Total ram usage:       22 bytes
 16116 ;; Hardware stack levels used:    1
 16117 ;; Hardware stack levels required when called:    8
 16118 ;; This function calls:
 16119 ;;		_lcd_draw_pixel
 16120 ;;		_lcd_set_cursor
 16121 ;; This function is called by:
 16122 ;;		_lcd_draw_string
 16123 ;; This function uses a non-reentrant model
 16124 ;;
 16125                           
 16126                           	psect	text49
 16127  00457A                     __ptext49:
 16128                           	opt callstack 0
 16129  00457A                     _lcd_draw_char:
 16130                           	opt callstack 21
 16131  00457A                     
 16132                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 16133  00457A  0E00               	movlw	0
 16134  00457C  6E1F               	movwf	lcd_draw_char@j^0,c
 16135  00457E  EF5D  F023         	goto	l6876
 16136  004582                     l6846:
 16137                           
 16138                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 16139  004582  90D8               	bcf	status,0,c
 16140  004584  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16141  004586  6EF6               	movwf	tblptrl,c
 16142  004588  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16143  00458A  6EF7               	movwf	tblptrh,c
 16144  00458C  0E93               	movlw	low _font
 16145  00458E  26F6               	addwf	tblptrl,f,c
 16146  004590  0EF1               	movlw	high _font
 16147  004592  22F7               	addwfc	tblptrh,f,c
 16148  004594                     	if	1	;There are 3 active tblptr bytes
 16149  004594  6AF8               	clrf	tblptru,c
 16150  004596  0E00               	movlw	low (__mediumconst shr (0+16))
 16151  004598  22F8               	addwfc	tblptru,f,c
 16152  00459A                     	endif
 16153  00459A  0009               	tblrd		*+
 16154  00459C  CFF5 F016          	movff	tablat,??_lcd_draw_char
 16155  0045A0  0009               	tblrd		*+
 16156  0045A2  CFF5 F017          	movff	tablat,??_lcd_draw_char+1
 16157  0045A6  501F               	movf	lcd_draw_char@j^0,w,c
 16158  0045A8  5E16               	subwf	??_lcd_draw_char^0,f,c
 16159  0045AA  0E00               	movlw	0
 16160  0045AC  5A17               	subwfb	(??_lcd_draw_char+1)^0,f,c
 16161  0045AE  500C               	movf	lcd_draw_char@x^0,w,c
 16162  0045B0  2416               	addwf	??_lcd_draw_char^0,w,c
 16163  0045B2  6E08               	movwf	lcd_set_cursor@x^0,c
 16164  0045B4  500D               	movf	(lcd_draw_char@x+1)^0,w,c
 16165  0045B6  2017               	addwfc	(??_lcd_draw_char+1)^0,w,c
 16166  0045B8  6E09               	movwf	(lcd_set_cursor@x+1)^0,c
 16167  0045BA  C00E  F00A         	movff	lcd_draw_char@y,lcd_set_cursor@y
 16168  0045BE  C00F  F00B         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 16169  0045C2  ECEA  F02D         	call	_lcd_set_cursor	;wreg free
 16170  0045C6                     
 16171                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 16172  0045C6  0E00               	movlw	0
 16173  0045C8  6E20               	movwf	lcd_draw_char@k^0,c
 16174  0045CA                     l6854:
 16175                           
 16176                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 16177  0045CA  0E00               	movlw	0
 16178  0045CC  6E21               	movwf	lcd_draw_char@i^0,c
 16179  0045CE                     l6860:
 16180                           
 16181                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 16182  0045CE  501F               	movf	lcd_draw_char@j^0,w,c
 16183  0045D0  6E16               	movwf	??_lcd_draw_char^0,c
 16184  0045D2  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 16185  0045D4  90D8               	bcf	status,0,c
 16186  0045D6  3616               	rlcf	??_lcd_draw_char^0,f,c
 16187  0045D8  3617               	rlcf	(??_lcd_draw_char+1)^0,f,c
 16188  0045DA  90D8               	bcf	status,0,c
 16189  0045DC  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16190  0045DE  6EF6               	movwf	tblptrl,c
 16191  0045E0  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16192  0045E2  6EF7               	movwf	tblptrh,c
 16193  0045E4  0E93               	movlw	low _font
 16194  0045E6  26F6               	addwf	tblptrl,f,c
 16195  0045E8  0EF1               	movlw	high _font
 16196  0045EA  22F7               	addwfc	tblptrh,f,c
 16197  0045EC                     	if	1	;There are 3 active tblptr bytes
 16198  0045EC  6AF8               	clrf	tblptru,c
 16199  0045EE  0E00               	movlw	low (__mediumconst shr (0+16))
 16200  0045F0  22F8               	addwfc	tblptru,f,c
 16201  0045F2                     	endif
 16202  0045F2  0009               	tblrd		*+
 16203  0045F4  CFF5 F018          	movff	tablat,??_lcd_draw_char+2
 16204  0045F8  0009               	tblrd		*+
 16205  0045FA  CFF5 F019          	movff	tablat,??_lcd_draw_char+3
 16206  0045FE  90D8               	bcf	status,0,c
 16207  004600  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16208  004602  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16209  004604  5016               	movf	??_lcd_draw_char^0,w,c
 16210  004606  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 16211  004608  5017               	movf	(??_lcd_draw_char+1)^0,w,c
 16212  00460A  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16213  00460C  5020               	movf	lcd_draw_char@k^0,w,c
 16214  00460E  5E18               	subwf	(??_lcd_draw_char+2)^0,f,c
 16215  004610  0E00               	movlw	0
 16216  004612  5A19               	subwfb	(??_lcd_draw_char+3)^0,f,c
 16217  004614  5010               	movf	lcd_draw_char@fIndex^0,w,c
 16218  004616  2618               	addwf	(??_lcd_draw_char+2)^0,f,c
 16219  004618  5011               	movf	(lcd_draw_char@fIndex+1)^0,w,c
 16220  00461A  2219               	addwfc	(??_lcd_draw_char+3)^0,f,c
 16221  00461C  90D8               	bcf	status,0,c
 16222  00461E  3618               	rlcf	(??_lcd_draw_char+2)^0,f,c
 16223  004620  3619               	rlcf	(??_lcd_draw_char+3)^0,f,c
 16224  004622  0E93               	movlw	low _font
 16225  004624  2418               	addwf	(??_lcd_draw_char+2)^0,w,c
 16226  004626  6EF6               	movwf	tblptrl,c
 16227  004628  0EF1               	movlw	high _font
 16228  00462A  2019               	addwfc	(??_lcd_draw_char+3)^0,w,c
 16229  00462C  6EF7               	movwf	tblptrh,c
 16230  00462E                     	if	1	;There are 3 active tblptr bytes
 16231  00462E  6AF8               	clrf	tblptru,c
 16232  004630  0E00               	movlw	low (__mediumconst shr (0+16))
 16233  004632  22F8               	addwfc	tblptru,f,c
 16234  004634                     	endif
 16235  004634  0009               	tblrd		*+
 16236  004636  CFF5 F01A          	movff	tablat,??_lcd_draw_char+4
 16237  00463A  0009               	tblrd		*+
 16238  00463C  CFF5 F01B          	movff	tablat,??_lcd_draw_char+5
 16239  004640  C021  F01C         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 16240  004644  0E80               	movlw	128
 16241  004646  6E1D               	movwf	(??_lcd_draw_char+7)^0,c
 16242  004648  0E00               	movlw	0
 16243  00464A  6E1E               	movwf	(??_lcd_draw_char+8)^0,c
 16244  00464C  2A1C               	incf	(??_lcd_draw_char+6)^0,f,c
 16245  00464E  EF2C  F023         	goto	u8124
 16246  004652                     u8125:
 16247  004652  341E               	rlcf	(??_lcd_draw_char+8)^0,w,c
 16248  004654  321E               	rrcf	(??_lcd_draw_char+8)^0,f,c
 16249  004656  321D               	rrcf	(??_lcd_draw_char+7)^0,f,c
 16250  004658                     u8124:
 16251  004658  2E1C               	decfsz	(??_lcd_draw_char+6)^0,f,c
 16252  00465A  EF29  F023         	goto	u8125
 16253  00465E  501A               	movf	(??_lcd_draw_char+4)^0,w,c
 16254  004660  161D               	andwf	(??_lcd_draw_char+7)^0,f,c
 16255  004662  501B               	movf	(??_lcd_draw_char+5)^0,w,c
 16256  004664  161E               	andwf	(??_lcd_draw_char+8)^0,f,c
 16257  004666  501D               	movf	(??_lcd_draw_char+7)^0,w,c
 16258  004668  101E               	iorwf	(??_lcd_draw_char+8)^0,w,c
 16259  00466A  B4D8               	btfsc	status,2,c
 16260  00466C  EF3A  F023         	goto	u8131
 16261  004670  EF3C  F023         	goto	u8130
 16262  004674                     u8131:
 16263  004674  EF44  F023         	goto	l6864
 16264  004678                     u8130:
 16265  004678                     
 16266                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 16267  004678  C012  F006         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 16268  00467C  C013  F007         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 16269  004680  EC28  F030         	call	_lcd_draw_pixel	;wreg free
 16270                           
 16271                           ;lib_ili9341.c: 368:                 }
 16272  004684  EF4A  F023         	goto	l6866
 16273  004688                     l6864:
 16274                           
 16275                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 16276  004688  C014  F006         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 16277  00468C  C015  F007         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 16278  004690  EC28  F030         	call	_lcd_draw_pixel	;wreg free
 16279  004694                     l6866:
 16280                           
 16281                           ;lib_ili9341.c: 373:             }
 16282  004694  2A21               	incf	lcd_draw_char@i^0,f,c
 16283  004696  0E07               	movlw	7
 16284  004698  6421               	cpfsgt	lcd_draw_char@i^0,c
 16285  00469A  EF51  F023         	goto	u8141
 16286  00469E  EF53  F023         	goto	u8140
 16287  0046A2                     u8141:
 16288  0046A2  EFE7  F022         	goto	l6860
 16289  0046A6                     u8140:
 16290  0046A6                     
 16291                           ;lib_ili9341.c: 374:         }
 16292  0046A6  2A20               	incf	lcd_draw_char@k^0,f,c
 16293  0046A8  0E01               	movlw	1
 16294  0046AA  6420               	cpfsgt	lcd_draw_char@k^0,c
 16295  0046AC  EF5A  F023         	goto	u8151
 16296  0046B0  EF5C  F023         	goto	u8150
 16297  0046B4                     u8151:
 16298  0046B4  EFE5  F022         	goto	l6854
 16299  0046B8                     u8150:
 16300  0046B8                     
 16301                           ;lib_ili9341.c: 375:     }
 16302  0046B8  2A1F               	incf	lcd_draw_char@j^0,f,c
 16303  0046BA                     l6876:
 16304  0046BA  90D8               	bcf	status,0,c
 16305  0046BC  3410               	rlcf	lcd_draw_char@fIndex^0,w,c
 16306  0046BE  6EF6               	movwf	tblptrl,c
 16307  0046C0  3411               	rlcf	(lcd_draw_char@fIndex+1)^0,w,c
 16308  0046C2  6EF7               	movwf	tblptrh,c
 16309  0046C4  0E93               	movlw	low _font
 16310  0046C6  26F6               	addwf	tblptrl,f,c
 16311  0046C8  0EF1               	movlw	high _font
 16312  0046CA  22F7               	addwfc	tblptrh,f,c
 16313  0046CC                     	if	1	;There are 3 active tblptr bytes
 16314  0046CC  6AF8               	clrf	tblptru,c
 16315  0046CE  0E00               	movlw	low (__mediumconst shr (0+16))
 16316  0046D0  22F8               	addwfc	tblptru,f,c
 16317  0046D2                     	endif
 16318  0046D2  501F               	movf	lcd_draw_char@j^0,w,c
 16319  0046D4  6E16               	movwf	??_lcd_draw_char^0,c
 16320  0046D6  6A17               	clrf	(??_lcd_draw_char+1)^0,c
 16321  0046D8  0009               	tblrd		*+
 16322  0046DA  50F5               	movf	tablat,w,c
 16323  0046DC  5C16               	subwf	??_lcd_draw_char^0,w,c
 16324  0046DE  0009               	tblrd		*+
 16325  0046E0  50F5               	movf	tablat,w,c
 16326  0046E2  5817               	subwfb	(??_lcd_draw_char+1)^0,w,c
 16327  0046E4  A0D8               	btfss	status,0,c
 16328  0046E6  EF77  F023         	goto	u8161
 16329  0046EA  EF79  F023         	goto	u8160
 16330  0046EE                     u8161:
 16331  0046EE  EFC1  F022         	goto	l6846
 16332  0046F2                     u8160:
 16333  0046F2  0012               	return		;funcret
 16334  0046F4                     __end_of_lcd_draw_char:
 16335                           	opt callstack 0
 16336                           
 16337 ;; *************** function _lcd_draw_line *****************
 16338 ;; Defined at:
 16339 ;;		line 210 in file "lib_ili9341.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  x0              2   17[COMRAM] unsigned short 
 16342 ;;  y0              2   19[COMRAM] unsigned short 
 16343 ;;  x1              2   21[COMRAM] unsigned short 
 16344 ;;  y1              2   23[COMRAM] unsigned short 
 16345 ;;  color           2   25[COMRAM] unsigned short 
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;  dy              2   38[COMRAM] short 
 16348 ;;  dx              2   36[COMRAM] short 
 16349 ;;  e2              2   34[COMRAM] short 
 16350 ;;  err             2   32[COMRAM] short 
 16351 ;;  sy              2   30[COMRAM] short 
 16352 ;;  sx              2   28[COMRAM] short 
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  1    wreg      void 
 16355 ;; Registers used:
 16356 ;;		wreg, status,2, status,0, cstack
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16362 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16363 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16365 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16366 ;;Total ram usage:       23 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:    9
 16369 ;; This function calls:
 16370 ;;		_lcd_draw_pixel_at
 16371 ;; This function is called by:
 16372 ;;		_main
 16373 ;;		_lcd_draw_filled_circle
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           	psect	text50
 16378  0046F4                     __ptext50:
 16379                           	opt callstack 0
 16380  0046F4                     _lcd_draw_line:
 16381                           	opt callstack 21
 16382  0046F4                     
 16383                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 16384  0046F4  5012               	movf	lcd_draw_line@x0^0,w,c
 16385  0046F6  5C16               	subwf	lcd_draw_line@x1^0,w,c
 16386  0046F8  6E25               	movwf	lcd_draw_line@dx^0,c
 16387  0046FA  5013               	movf	(lcd_draw_line@x0+1)^0,w,c
 16388  0046FC  5817               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 16389  0046FE  6E26               	movwf	(lcd_draw_line@dx+1)^0,c
 16390  004700  5016               	movf	lcd_draw_line@x1^0,w,c
 16391  004702  5C12               	subwf	lcd_draw_line@x0^0,w,c
 16392  004704  5017               	movf	(lcd_draw_line@x1+1)^0,w,c
 16393  004706  5813               	subwfb	(lcd_draw_line@x0+1)^0,w,c
 16394  004708  A0D8               	btfss	status,0,c
 16395  00470A  EF89  F023         	goto	u8281
 16396  00470E  EF8B  F023         	goto	u8280
 16397  004712                     u8281:
 16398  004712  EF8F  F023         	goto	l7176
 16399  004716                     u8280:
 16400  004716  681D               	setf	lcd_draw_line@sx^0,c
 16401  004718  681E               	setf	(lcd_draw_line@sx+1)^0,c
 16402  00471A  EF93  F023         	goto	l7178
 16403  00471E                     l7176:
 16404  00471E  0E00               	movlw	0
 16405  004720  6E1E               	movwf	(lcd_draw_line@sx+1)^0,c
 16406  004722  0E01               	movlw	1
 16407  004724  6E1D               	movwf	lcd_draw_line@sx^0,c
 16408  004726                     l7178:
 16409                           
 16410                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 16411  004726  5014               	movf	lcd_draw_line@y0^0,w,c
 16412  004728  5C18               	subwf	lcd_draw_line@y1^0,w,c
 16413  00472A  6E27               	movwf	lcd_draw_line@dy^0,c
 16414  00472C  5015               	movf	(lcd_draw_line@y0+1)^0,w,c
 16415  00472E  5819               	subwfb	(lcd_draw_line@y1+1)^0,w,c
 16416  004730  6E28               	movwf	(lcd_draw_line@dy+1)^0,c
 16417  004732  5018               	movf	lcd_draw_line@y1^0,w,c
 16418  004734  5C14               	subwf	lcd_draw_line@y0^0,w,c
 16419  004736  5019               	movf	(lcd_draw_line@y1+1)^0,w,c
 16420  004738  5815               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 16421  00473A  A0D8               	btfss	status,0,c
 16422  00473C  EFA2  F023         	goto	u8291
 16423  004740  EFA4  F023         	goto	u8290
 16424  004744                     u8291:
 16425  004744  EFA8  F023         	goto	l7184
 16426  004748                     u8290:
 16427  004748  681F               	setf	lcd_draw_line@sy^0,c
 16428  00474A  6820               	setf	(lcd_draw_line@sy+1)^0,c
 16429  00474C  EFAC  F023         	goto	l7186
 16430  004750                     l7184:
 16431  004750  0E00               	movlw	0
 16432  004752  6E20               	movwf	(lcd_draw_line@sy+1)^0,c
 16433  004754  0E01               	movlw	1
 16434  004756  6E1F               	movwf	lcd_draw_line@sy^0,c
 16435  004758                     l7186:
 16436                           
 16437                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 16438  004758  5012               	movf	lcd_draw_line@x0^0,w,c
 16439  00475A  5C16               	subwf	lcd_draw_line@x1^0,w,c
 16440  00475C  5013               	movf	(lcd_draw_line@x0+1)^0,w,c
 16441  00475E  5817               	subwfb	(lcd_draw_line@x1+1)^0,w,c
 16442  004760  B0D8               	btfsc	status,0,c
 16443  004762  EFB5  F023         	goto	u8301
 16444  004766  EFB7  F023         	goto	u8300
 16445  00476A                     u8301:
 16446  00476A  EFBB  F023         	goto	l7190
 16447  00476E                     u8300:
 16448  00476E                     
 16449                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 16450  00476E  6C25               	negf	lcd_draw_line@dx^0,c
 16451  004770  1E26               	comf	(lcd_draw_line@dx+1)^0,f,c
 16452  004772  B0D8               	btfsc	status,0,c
 16453  004774  2A26               	incf	(lcd_draw_line@dx+1)^0,f,c
 16454  004776                     l7190:
 16455                           
 16456                           ;lib_ili9341.c: 221:     if(y1 > y0)
 16457  004776  5018               	movf	lcd_draw_line@y1^0,w,c
 16458  004778  5C14               	subwf	lcd_draw_line@y0^0,w,c
 16459  00477A  5019               	movf	(lcd_draw_line@y1+1)^0,w,c
 16460  00477C  5815               	subwfb	(lcd_draw_line@y0+1)^0,w,c
 16461  00477E  B0D8               	btfsc	status,0,c
 16462  004780  EFC4  F023         	goto	u8311
 16463  004784  EFC6  F023         	goto	u8310
 16464  004788                     u8311:
 16465  004788  EFCA  F023         	goto	l7194
 16466  00478C                     u8310:
 16467  00478C                     
 16468                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 16469  00478C  6C27               	negf	lcd_draw_line@dy^0,c
 16470  00478E  1E28               	comf	(lcd_draw_line@dy+1)^0,f,c
 16471  004790  B0D8               	btfsc	status,0,c
 16472  004792  2A28               	incf	(lcd_draw_line@dy+1)^0,f,c
 16473  004794                     l7194:
 16474                           
 16475                           ;lib_ili9341.c: 226:     err = dx + dy;
 16476  004794  5027               	movf	lcd_draw_line@dy^0,w,c
 16477  004796  2425               	addwf	lcd_draw_line@dx^0,w,c
 16478  004798  6E21               	movwf	lcd_draw_line@err^0,c
 16479  00479A  5028               	movf	(lcd_draw_line@dy+1)^0,w,c
 16480  00479C  2026               	addwfc	(lcd_draw_line@dx+1)^0,w,c
 16481  00479E  6E22               	movwf	(lcd_draw_line@err+1)^0,c
 16482  0047A0                     l7196:
 16483                           
 16484                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 16485  0047A0  C012  F00C         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 16486  0047A4  C013  F00D         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 16487  0047A8  C014  F00E         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 16488  0047AC  C015  F00F         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 16489  0047B0  C01A  F010         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 16490  0047B4  C01B  F011         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 16491  0047B8  ECED  F02E         	call	_lcd_draw_pixel_at	;wreg free
 16492  0047BC                     
 16493                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 16494  0047BC  5016               	movf	lcd_draw_line@x1^0,w,c
 16495  0047BE  1812               	xorwf	lcd_draw_line@x0^0,w,c
 16496  0047C0  E107               	bnz	u8321
 16497  0047C2  5017               	movf	(lcd_draw_line@x1+1)^0,w,c
 16498  0047C4  1813               	xorwf	(lcd_draw_line@x0+1)^0,w,c
 16499  0047C6  A4D8               	btfss	status,2,c
 16500  0047C8  EFE8  F023         	goto	u8321
 16501  0047CC  EFEA  F023         	goto	u8320
 16502  0047D0                     u8321:
 16503  0047D0  EFF8  F023         	goto	l7204
 16504  0047D4                     u8320:
 16505  0047D4  5018               	movf	lcd_draw_line@y1^0,w,c
 16506  0047D6  1814               	xorwf	lcd_draw_line@y0^0,w,c
 16507  0047D8  E107               	bnz	u8331
 16508  0047DA  5019               	movf	(lcd_draw_line@y1+1)^0,w,c
 16509  0047DC  1815               	xorwf	(lcd_draw_line@y0+1)^0,w,c
 16510  0047DE  A4D8               	btfss	status,2,c
 16511  0047E0  EFF4  F023         	goto	u8331
 16512  0047E4  EFF6  F023         	goto	u8330
 16513  0047E8                     u8331:
 16514  0047E8  EFF8  F023         	goto	l7204
 16515  0047EC                     u8330:
 16516  0047EC  EF2D  F024         	goto	l508
 16517  0047F0                     l7204:
 16518                           
 16519                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 16520  0047F0  90D8               	bcf	status,0,c
 16521  0047F2  3421               	rlcf	lcd_draw_line@err^0,w,c
 16522  0047F4  6E23               	movwf	lcd_draw_line@e2^0,c
 16523  0047F6  3422               	rlcf	(lcd_draw_line@err+1)^0,w,c
 16524  0047F8  6E24               	movwf	(lcd_draw_line@e2+1)^0,c
 16525                           
 16526                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 16527  0047FA  5027               	movf	lcd_draw_line@dy^0,w,c
 16528  0047FC  5C23               	subwf	lcd_draw_line@e2^0,w,c
 16529  0047FE  5024               	movf	(lcd_draw_line@e2+1)^0,w,c
 16530  004800  0A80               	xorlw	128
 16531  004802  6E1C               	movwf	??_lcd_draw_line^0,c
 16532  004804  5028               	movf	(lcd_draw_line@dy+1)^0,w,c
 16533  004806  0A80               	xorlw	128
 16534  004808  581C               	subwfb	??_lcd_draw_line^0,w,c
 16535  00480A  A0D8               	btfss	status,0,c
 16536  00480C  EF0A  F024         	goto	u8341
 16537  004810  EF0C  F024         	goto	u8340
 16538  004814                     u8341:
 16539  004814  EF14  F024         	goto	l505
 16540  004818                     u8340:
 16541  004818                     
 16542                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 16543  004818  5027               	movf	lcd_draw_line@dy^0,w,c
 16544  00481A  2621               	addwf	lcd_draw_line@err^0,f,c
 16545  00481C  5028               	movf	(lcd_draw_line@dy+1)^0,w,c
 16546  00481E  2222               	addwfc	(lcd_draw_line@err+1)^0,f,c
 16547                           
 16548                           ;lib_ili9341.c: 242:             x0 += sx;
 16549  004820  501D               	movf	lcd_draw_line@sx^0,w,c
 16550  004822  2612               	addwf	lcd_draw_line@x0^0,f,c
 16551  004824  501E               	movf	(lcd_draw_line@sx+1)^0,w,c
 16552  004826  2213               	addwfc	(lcd_draw_line@x0+1)^0,f,c
 16553  004828                     l505:
 16554                           
 16555                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 16556  004828  5023               	movf	lcd_draw_line@e2^0,w,c
 16557  00482A  5C25               	subwf	lcd_draw_line@dx^0,w,c
 16558  00482C  5026               	movf	(lcd_draw_line@dx+1)^0,w,c
 16559  00482E  0A80               	xorlw	128
 16560  004830  6E1C               	movwf	??_lcd_draw_line^0,c
 16561  004832  5024               	movf	(lcd_draw_line@e2+1)^0,w,c
 16562  004834  0A80               	xorlw	128
 16563  004836  581C               	subwfb	??_lcd_draw_line^0,w,c
 16564  004838  A0D8               	btfss	status,0,c
 16565  00483A  EF21  F024         	goto	u8351
 16566  00483E  EF23  F024         	goto	u8350
 16567  004842                     u8351:
 16568  004842  EFD0  F023         	goto	l7196
 16569  004846                     u8350:
 16570  004846                     
 16571                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 16572  004846  5025               	movf	lcd_draw_line@dx^0,w,c
 16573  004848  2621               	addwf	lcd_draw_line@err^0,f,c
 16574  00484A  5026               	movf	(lcd_draw_line@dx+1)^0,w,c
 16575  00484C  2222               	addwfc	(lcd_draw_line@err+1)^0,f,c
 16576                           
 16577                           ;lib_ili9341.c: 248:             y0 += sy;
 16578  00484E  501F               	movf	lcd_draw_line@sy^0,w,c
 16579  004850  2614               	addwf	lcd_draw_line@y0^0,f,c
 16580  004852  5020               	movf	(lcd_draw_line@sy+1)^0,w,c
 16581  004854  2215               	addwfc	(lcd_draw_line@y0+1)^0,f,c
 16582  004856  EFD0  F023         	goto	l7196
 16583  00485A                     l508:
 16584  00485A  0012               	return		;funcret
 16585  00485C                     __end_of_lcd_draw_line:
 16586                           	opt callstack 0
 16587                           
 16588 ;; *************** function _lcd_draw_pixel_at *****************
 16589 ;; Defined at:
 16590 ;;		line 253 in file "lib_ili9341.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  x               2   11[COMRAM] unsigned short 
 16593 ;;  y               2   13[COMRAM] unsigned short 
 16594 ;;  color           2   15[COMRAM] unsigned short 
 16595 ;; Auto vars:     Size  Location     Type
 16596 ;;		None
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  1    wreg      void 
 16599 ;; Registers used:
 16600 ;;		wreg, status,2, status,0, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16609 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16610 ;;Total ram usage:        6 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; Hardware stack levels required when called:    8
 16613 ;; This function calls:
 16614 ;;		_lcd_draw_pixel
 16615 ;;		_lcd_set_cursor
 16616 ;; This function is called by:
 16617 ;;		_lcd_draw_line
 16618 ;;		_lcd_draw_circle
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           	psect	text51
 16623  005DDA                     __ptext51:
 16624                           	opt callstack 0
 16625  005DDA                     _lcd_draw_pixel_at:
 16626                           	opt callstack 21
 16627  005DDA                     
 16628                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 16629  005DDA  C00C  F008         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 16630  005DDE  C00D  F009         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 16631  005DE2  C00E  F00A         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 16632  005DE6  C00F  F00B         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 16633  005DEA  ECEA  F02D         	call	_lcd_set_cursor	;wreg free
 16634  005DEE  0900               	iorlw	0
 16635  005DF0  A4D8               	btfss	status,2,c
 16636  005DF2  EFFD  F02E         	goto	u8111
 16637  005DF6  EFFF  F02E         	goto	u8110
 16638  005DFA                     u8111:
 16639  005DFA  EF05  F02F         	goto	l512
 16640  005DFE                     u8110:
 16641  005DFE                     
 16642                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 16643  005DFE  C010  F006         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 16644  005E02  C011  F007         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 16645  005E06  EC28  F030         	call	_lcd_draw_pixel	;wreg free
 16646  005E0A                     l512:
 16647  005E0A  0012               	return		;funcret
 16648  005E0C                     __end_of_lcd_draw_pixel_at:
 16649                           	opt callstack 0
 16650                           
 16651 ;; *************** function _lcd_set_cursor *****************
 16652 ;; Defined at:
 16653 ;;		line 142 in file "lib_ili9341.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;  x               2    7[COMRAM] unsigned short 
 16656 ;;  y               2    9[COMRAM] unsigned short 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;		None
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  1    wreg      unsigned char 
 16661 ;; Registers used:
 16662 ;;		wreg, status,2, status,0, cstack
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16671 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16672 ;;Total ram usage:        4 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    7
 16675 ;; This function calls:
 16676 ;;		_lcd_set_cursor_x
 16677 ;;		_lcd_set_cursor_y
 16678 ;; This function is called by:
 16679 ;;		_lcd_fill
 16680 ;;		_lcd_draw_pixel_at
 16681 ;;		_lcd_draw_char
 16682 ;;		_lcd_fill_rect
 16683 ;; This function uses a non-reentrant model
 16684 ;;
 16685                           
 16686                           	psect	text52
 16687  005BD4                     __ptext52:
 16688                           	opt callstack 0
 16689  005BD4                     _lcd_set_cursor:
 16690                           	opt callstack 21
 16691  005BD4                     
 16692                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 16693  005BD4  C008  F006         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 16694  005BD8  C009  F007         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 16695  005BDC  EC5E  F02D         	call	_lcd_set_cursor_x	;wreg free
 16696  005BE0  0900               	iorlw	0
 16697  005BE2  A4D8               	btfss	status,2,c
 16698  005BE4  EFF6  F02D         	goto	u7981
 16699  005BE8  EFF8  F02D         	goto	u7980
 16700  005BEC                     u7981:
 16701  005BEC  EF06  F02E         	goto	l6722
 16702  005BF0                     u7980:
 16703  005BF0  C00A  F006         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 16704  005BF4  C00B  F007         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 16705  005BF8  EC3A  F02D         	call	_lcd_set_cursor_y	;wreg free
 16706  005BFC  0900               	iorlw	0
 16707  005BFE  B4D8               	btfsc	status,2,c
 16708  005C00  EF04  F02E         	goto	u7991
 16709  005C04  EF06  F02E         	goto	u7990
 16710  005C08                     u7991:
 16711  005C08  EF09  F02E         	goto	l6726
 16712  005C0C                     u7990:
 16713  005C0C                     l6722:
 16714                           
 16715                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 16716  005C0C  0E01               	movlw	1
 16717  005C0E  EF0A  F02E         	goto	l468
 16718  005C12                     l6726:
 16719                           
 16720                           ;lib_ili9341.c: 149:     return 0;
 16721  005C12  0E00               	movlw	0
 16722  005C14                     l468:
 16723  005C14  0012               	return		;funcret
 16724  005C16                     __end_of_lcd_set_cursor:
 16725                           	opt callstack 0
 16726                           
 16727 ;; *************** function _lcd_set_cursor_y *****************
 16728 ;; Defined at:
 16729 ;;		line 168 in file "lib_ili9341.c"
 16730 ;; Parameters:    Size  Location     Type
 16731 ;;  y               2    5[COMRAM] unsigned short 
 16732 ;; Auto vars:     Size  Location     Type
 16733 ;;		None
 16734 ;; Return value:  Size  Location     Type
 16735 ;;                  1    wreg      unsigned char 
 16736 ;; Registers used:
 16737 ;;		wreg, status,2, status,0, cstack
 16738 ;; Tracked objects:
 16739 ;;		On entry : 0/0
 16740 ;;		On exit  : 0/0
 16741 ;;		Unchanged: 0/0
 16742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16747 ;;Total ram usage:        2 bytes
 16748 ;; Hardware stack levels used:    1
 16749 ;; Hardware stack levels required when called:    6
 16750 ;; This function calls:
 16751 ;;		_lcd_send
 16752 ;; This function is called by:
 16753 ;;		_lcd_set_cursor
 16754 ;; This function uses a non-reentrant model
 16755 ;;
 16756                           
 16757                           	psect	text53
 16758  005A74                     __ptext53:
 16759                           	opt callstack 0
 16760  005A74                     _lcd_set_cursor_y:
 16761                           	opt callstack 21
 16762  005A74                     
 16763                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 16764  005A74  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16765  005A76  E109               	bnz	u7450
 16766  005A78  0EF0               	movlw	240
 16767  005A7A  5C06               	subwf	lcd_set_cursor_y@y^0,w,c
 16768  005A7C  A0D8               	btfss	status,0,c
 16769  005A7E  EF43  F02D         	goto	u7451
 16770  005A82  EF45  F02D         	goto	u7450
 16771  005A86                     u7451:
 16772  005A86  EF48  F02D         	goto	l6328
 16773  005A8A                     u7450:
 16774  005A8A                     
 16775                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 16776  005A8A  0E01               	movlw	1
 16777  005A8C  EF5D  F02D         	goto	l476
 16778  005A90                     l6328:
 16779                           
 16780                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 16781  005A90  0E2A               	movlw	42
 16782  005A92  6E04               	movwf	lcd_send@value^0,c
 16783  005A94  0E00               	movlw	0
 16784  005A96  EC10  F030         	call	_lcd_send
 16785                           
 16786                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 16787  005A9A  5007               	movf	(lcd_set_cursor_y@y+1)^0,w,c
 16788  005A9C  6E04               	movwf	lcd_send@value^0,c
 16789  005A9E  0E01               	movlw	1
 16790  005AA0  EC10  F030         	call	_lcd_send
 16791                           
 16792                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 16793  005AA4  C006  F004         	movff	lcd_set_cursor_y@y,lcd_send@value
 16794  005AA8  0E01               	movlw	1
 16795  005AAA  EC10  F030         	call	_lcd_send
 16796                           
 16797                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 16798  005AAE  0E2C               	movlw	44
 16799  005AB0  6E04               	movwf	lcd_send@value^0,c
 16800  005AB2  0E00               	movlw	0
 16801  005AB4  EC10  F030         	call	_lcd_send
 16802  005AB8                     
 16803                           ;lib_ili9341.c: 180:     return 0;
 16804  005AB8  0E00               	movlw	0
 16805  005ABA                     l476:
 16806  005ABA  0012               	return		;funcret
 16807  005ABC                     __end_of_lcd_set_cursor_y:
 16808                           	opt callstack 0
 16809                           
 16810 ;; *************** function _lcd_set_cursor_x *****************
 16811 ;; Defined at:
 16812 ;;		line 153 in file "lib_ili9341.c"
 16813 ;; Parameters:    Size  Location     Type
 16814 ;;  x               2    5[COMRAM] unsigned short 
 16815 ;; Auto vars:     Size  Location     Type
 16816 ;;		None
 16817 ;; Return value:  Size  Location     Type
 16818 ;;                  1    wreg      unsigned char 
 16819 ;; Registers used:
 16820 ;;		wreg, status,2, status,0, cstack
 16821 ;; Tracked objects:
 16822 ;;		On entry : 0/0
 16823 ;;		On exit  : 0/0
 16824 ;;		Unchanged: 0/0
 16825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16830 ;;Total ram usage:        2 bytes
 16831 ;; Hardware stack levels used:    1
 16832 ;; Hardware stack levels required when called:    6
 16833 ;; This function calls:
 16834 ;;		_lcd_send
 16835 ;; This function is called by:
 16836 ;;		_lcd_set_cursor
 16837 ;; This function uses a non-reentrant model
 16838 ;;
 16839                           
 16840                           	psect	text54
 16841  005ABC                     __ptext54:
 16842                           	opt callstack 0
 16843  005ABC                     _lcd_set_cursor_x:
 16844                           	opt callstack 21
 16845  005ABC                     
 16846                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 16847  005ABC  0E40               	movlw	64
 16848  005ABE  5C06               	subwf	lcd_set_cursor_x@x^0,w,c
 16849  005AC0  0E01               	movlw	1
 16850  005AC2  5807               	subwfb	(lcd_set_cursor_x@x+1)^0,w,c
 16851  005AC4  A0D8               	btfss	status,0,c
 16852  005AC6  EF67  F02D         	goto	u7441
 16853  005ACA  EF69  F02D         	goto	u7440
 16854  005ACE                     u7441:
 16855  005ACE  EF6C  F02D         	goto	l6316
 16856  005AD2                     u7440:
 16857  005AD2                     
 16858                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 16859  005AD2  0E01               	movlw	1
 16860  005AD4  EF81  F02D         	goto	l472
 16861  005AD8                     l6316:
 16862                           
 16863                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 16864  005AD8  0E2B               	movlw	43
 16865  005ADA  6E04               	movwf	lcd_send@value^0,c
 16866  005ADC  0E00               	movlw	0
 16867  005ADE  EC10  F030         	call	_lcd_send
 16868                           
 16869                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 16870  005AE2  5007               	movf	(lcd_set_cursor_x@x+1)^0,w,c
 16871  005AE4  6E04               	movwf	lcd_send@value^0,c
 16872  005AE6  0E01               	movlw	1
 16873  005AE8  EC10  F030         	call	_lcd_send
 16874                           
 16875                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 16876  005AEC  C006  F004         	movff	lcd_set_cursor_x@x,lcd_send@value
 16877  005AF0  0E01               	movlw	1
 16878  005AF2  EC10  F030         	call	_lcd_send
 16879                           
 16880                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 16881  005AF6  0E2C               	movlw	44
 16882  005AF8  6E04               	movwf	lcd_send@value^0,c
 16883  005AFA  0E00               	movlw	0
 16884  005AFC  EC10  F030         	call	_lcd_send
 16885  005B00                     
 16886                           ;lib_ili9341.c: 165:     return 0;
 16887  005B00  0E00               	movlw	0
 16888  005B02                     l472:
 16889  005B02  0012               	return		;funcret
 16890  005B04                     __end_of_lcd_set_cursor_x:
 16891                           	opt callstack 0
 16892                           
 16893 ;; *************** function _lcd_draw_pixel *****************
 16894 ;; Defined at:
 16895 ;;		line 183 in file "lib_ili9341.c"
 16896 ;; Parameters:    Size  Location     Type
 16897 ;;  color           2    5[COMRAM] unsigned short 
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;		None
 16900 ;; Return value:  Size  Location     Type
 16901 ;;                  1    wreg      unsigned char 
 16902 ;; Registers used:
 16903 ;;		wreg, status,2, cstack
 16904 ;; Tracked objects:
 16905 ;;		On entry : 0/0
 16906 ;;		On exit  : 0/0
 16907 ;;		Unchanged: 0/0
 16908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16913 ;;Total ram usage:        2 bytes
 16914 ;; Hardware stack levels used:    1
 16915 ;; Hardware stack levels required when called:    6
 16916 ;; This function calls:
 16917 ;;		_lcd_send
 16918 ;; This function is called by:
 16919 ;;		_lcd_fill
 16920 ;;		_lcd_draw_pixel_at
 16921 ;;		_lcd_draw_char
 16922 ;;		_lcd_fill_rect
 16923 ;; This function uses a non-reentrant model
 16924 ;;
 16925                           
 16926                           	psect	text55
 16927  006050                     __ptext55:
 16928                           	opt callstack 0
 16929  006050                     _lcd_draw_pixel:
 16930                           	opt callstack 22
 16931  006050                     
 16932                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 16933  006050  5007               	movf	(lcd_draw_pixel@color+1)^0,w,c
 16934  006052  6E04               	movwf	lcd_send@value^0,c
 16935  006054  0E01               	movlw	1
 16936  006056  EC10  F030         	call	_lcd_send
 16937                           
 16938                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 16939  00605A  C006  F004         	movff	lcd_draw_pixel@color,lcd_send@value
 16940  00605E  0E01               	movlw	1
 16941  006060  EC10  F030         	call	_lcd_send
 16942  006064  0012               	return		;funcret
 16943  006066                     __end_of_lcd_draw_pixel:
 16944                           	opt callstack 0
 16945                           
 16946 ;; *************** function _lcd_send *****************
 16947 ;; Defined at:
 16948 ;;		line 132 in file "lib_ili9341.c"
 16949 ;; Parameters:    Size  Location     Type
 16950 ;;  dc              1    wreg     _Bool 
 16951 ;;  value           1    3[COMRAM] unsigned char 
 16952 ;; Auto vars:     Size  Location     Type
 16953 ;;  dc              1    4[COMRAM] _Bool 
 16954 ;; Return value:  Size  Location     Type
 16955 ;;                  1    wreg      void 
 16956 ;; Registers used:
 16957 ;;		wreg, status,2, cstack
 16958 ;; Tracked objects:
 16959 ;;		On entry : 0/0
 16960 ;;		On exit  : 0/0
 16961 ;;		Unchanged: 0/0
 16962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16966 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16967 ;;Total ram usage:        2 bytes
 16968 ;; Hardware stack levels used:    1
 16969 ;; Hardware stack levels required when called:    5
 16970 ;; This function calls:
 16971 ;;		_SPI_ExchangeByte
 16972 ;; This function is called by:
 16973 ;;		_lcd_init
 16974 ;;		_lcd_set_cursor_x
 16975 ;;		_lcd_set_cursor_y
 16976 ;;		_lcd_draw_pixel
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text56
 16981  006020                     __ptext56:
 16982                           	opt callstack 0
 16983  006020                     _lcd_send:
 16984                           	opt callstack 24
 16985                           
 16986                           ;incstack = 0
 16987                           ;lcd_send@dc stored from wreg
 16988  006020  6E05               	movwf	lcd_send@dc^0,c
 16989  006022                     
 16990                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 16991  006022  B005               	btfsc	lcd_send@dc^0,0,c
 16992  006024  D002               	bra	u6185
 16993  006026  908D               	bcf	141,0,c	;volatile
 16994  006028  D001               	bra	u6186
 16995  00602A                     u6185:
 16996  00602A  808D               	bsf	141,0,c	;volatile
 16997  00602C                     u6186:
 16998  00602C                     
 16999                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 17000  00602C  928D               	bcf	141,1,c	;volatile
 17001  00602E                     
 17002                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 17003  00602E  5004               	movf	lcd_send@value^0,w,c
 17004  006030  EC03  F030         	call	_SPI_ExchangeByte
 17005  006034                     
 17006                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 17007  006034  828D               	bsf	141,1,c	;volatile
 17008  006036  0012               	return		;funcret
 17009  006038                     __end_of_lcd_send:
 17010                           	opt callstack 0
 17011                           
 17012 ;; *************** function _SPI_ExchangeByte *****************
 17013 ;; Defined at:
 17014 ;;		line 92 in file "mcc_generated_files/spi.c"
 17015 ;; Parameters:    Size  Location     Type
 17016 ;;  data            1    wreg     unsigned char 
 17017 ;; Auto vars:     Size  Location     Type
 17018 ;;  data            1    2[COMRAM] unsigned char 
 17019 ;; Return value:  Size  Location     Type
 17020 ;;                  1    wreg      unsigned char 
 17021 ;; Registers used:
 17022 ;;		wreg, status,2
 17023 ;; Tracked objects:
 17024 ;;		On entry : 0/0
 17025 ;;		On exit  : 0/0
 17026 ;;		Unchanged: 0/0
 17027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17032 ;;Total ram usage:        1 bytes
 17033 ;; Hardware stack levels used:    1
 17034 ;; Hardware stack levels required when called:    4
 17035 ;; This function calls:
 17036 ;;		Nothing
 17037 ;; This function is called by:
 17038 ;;		_lcd_send
 17039 ;;		_SPI_WriteBlock
 17040 ;;		_SPI_ReadBlock
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           	psect	text57
 17045  006006                     __ptext57:
 17046                           	opt callstack 0
 17047  006006                     _SPI_ExchangeByte:
 17048                           	opt callstack 24
 17049                           
 17050                           ;incstack = 0
 17051                           ;SPI_ExchangeByte@data stored from wreg
 17052  006006  6E03               	movwf	SPI_ExchangeByte@data^0,c
 17053  006008                     
 17054                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 17055  006008  C003  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 17056  00600C                     l154:
 17057  00600C  A69E               	btfss	158,3,c	;volatile
 17058  00600E  EF0B  F030         	goto	u4911
 17059  006012  EF0D  F030         	goto	u4910
 17060  006016                     u4911:
 17061  006016  EF06  F030         	goto	l154
 17062  00601A                     u4910:
 17063  00601A                     
 17064                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 17065  00601A  969E               	bcf	158,3,c	;volatile
 17066                           
 17067                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 17068  00601C  50C9               	movf	201,w,c	;volatile
 17069  00601E  0012               	return		;funcret
 17070  006020                     __end_of_SPI_ExchangeByte:
 17071                           	opt callstack 0
 17072                           
 17073 ;; *************** function ___xxtofl *****************
 17074 ;; Defined at:
 17075 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 17076 ;; Parameters:    Size  Location     Type
 17077 ;;  sign            1    wreg     unsigned char 
 17078 ;;  val             4    2[COMRAM] long 
 17079 ;; Auto vars:     Size  Location     Type
 17080 ;;  sign            1   10[COMRAM] unsigned char 
 17081 ;;  arg             4   12[COMRAM] unsigned long 
 17082 ;;  exp             1   11[COMRAM] unsigned char 
 17083 ;; Return value:  Size  Location     Type
 17084 ;;                  4    2[COMRAM] unsigned char 
 17085 ;; Registers used:
 17086 ;;		wreg, status,2, status,0
 17087 ;; Tracked objects:
 17088 ;;		On entry : 0/0
 17089 ;;		On exit  : 0/0
 17090 ;;		Unchanged: 0/0
 17091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17095 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;Total ram usage:       14 bytes
 17097 ;; Hardware stack levels used:    1
 17098 ;; Hardware stack levels required when called:    4
 17099 ;; This function calls:
 17100 ;;		Nothing
 17101 ;; This function is called by:
 17102 ;;		_main
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           	psect	text58
 17107  003F22                     __ptext58:
 17108                           	opt callstack 0
 17109  003F22                     ___xxtofl:
 17110                           	opt callstack 26
 17111                           
 17112                           ;incstack = 0
 17113                           ;___xxtofl@sign stored from wreg
 17114  003F22  6E0B               	movwf	___xxtofl@sign^0,c
 17115  003F24  500B               	movf	___xxtofl@sign^0,w,c
 17116  003F26  B4D8               	btfsc	status,2,c
 17117  003F28  EF98  F01F         	goto	u8471
 17118  003F2C  EF9A  F01F         	goto	u8470
 17119  003F30                     u8471:
 17120  003F30  EFBC  F01F         	goto	l1616
 17121  003F34                     u8470:
 17122  003F34  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 17123  003F36  EFA1  F01F         	goto	u8480
 17124  003F3A  EF9F  F01F         	goto	u8481
 17125  003F3E                     u8481:
 17126  003F3E  EFBC  F01F         	goto	l1616
 17127  003F42                     u8480:
 17128  003F42  C003  F007         	movff	___xxtofl@val,??___xxtofl
 17129  003F46  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 17130  003F4A  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 17131  003F4E  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 17132  003F52  1E07               	comf	??___xxtofl^0,f,c
 17133  003F54  1E08               	comf	(??___xxtofl+1)^0,f,c
 17134  003F56  1E09               	comf	(??___xxtofl+2)^0,f,c
 17135  003F58  1E0A               	comf	(??___xxtofl+3)^0,f,c
 17136  003F5A  2A07               	incf	??___xxtofl^0,f,c
 17137  003F5C  0E00               	movlw	0
 17138  003F5E  2208               	addwfc	(??___xxtofl+1)^0,f,c
 17139  003F60  2209               	addwfc	(??___xxtofl+2)^0,f,c
 17140  003F62  220A               	addwfc	(??___xxtofl+3)^0,f,c
 17141  003F64  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 17142  003F68  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 17143  003F6C  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 17144  003F70  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 17145  003F74  EFC4  F01F         	goto	l7298
 17146  003F78                     l1616:
 17147  003F78  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 17148  003F7C  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 17149  003F80  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 17150  003F84  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 17151  003F88                     l7298:
 17152  003F88  5003               	movf	___xxtofl@val^0,w,c
 17153  003F8A  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 17154  003F8C  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 17155  003F8E  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 17156  003F90  A4D8               	btfss	status,2,c
 17157  003F92  EFCD  F01F         	goto	u8491
 17158  003F96  EFCF  F01F         	goto	u8490
 17159  003F9A                     u8491:
 17160  003F9A  EFD9  F01F         	goto	l7304
 17161  003F9E                     u8490:
 17162  003F9E  0E00               	movlw	0
 17163  003FA0  6E03               	movwf	?___xxtofl^0,c
 17164  003FA2  0E00               	movlw	0
 17165  003FA4  6E04               	movwf	(?___xxtofl+1)^0,c
 17166  003FA6  0E00               	movlw	0
 17167  003FA8  6E05               	movwf	(?___xxtofl+2)^0,c
 17168  003FAA  0E00               	movlw	0
 17169  003FAC  6E06               	movwf	(?___xxtofl+3)^0,c
 17170  003FAE  EF6A  F020         	goto	l1619
 17171  003FB2                     l7304:
 17172  003FB2  0E96               	movlw	150
 17173  003FB4  6E0C               	movwf	___xxtofl@exp^0,c
 17174  003FB6  EFE3  F01F         	goto	l7308
 17175  003FBA                     l7306:
 17176  003FBA  2A0C               	incf	___xxtofl@exp^0,f,c
 17177  003FBC  90D8               	bcf	status,0,c
 17178  003FBE  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 17179  003FC0  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 17180  003FC2  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 17181  003FC4  320D               	rrcf	___xxtofl@arg^0,f,c
 17182  003FC6                     l7308:
 17183  003FC6  0E00               	movlw	0
 17184  003FC8  140D               	andwf	___xxtofl@arg^0,w,c
 17185  003FCA  6E07               	movwf	??___xxtofl^0,c
 17186  003FCC  0E00               	movlw	0
 17187  003FCE  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 17188  003FD0  6E08               	movwf	(??___xxtofl+1)^0,c
 17189  003FD2  0E00               	movlw	0
 17190  003FD4  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 17191  003FD6  6E09               	movwf	(??___xxtofl+2)^0,c
 17192  003FD8  0EFE               	movlw	254
 17193  003FDA  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 17194  003FDC  6E0A               	movwf	(??___xxtofl+3)^0,c
 17195  003FDE  5007               	movf	??___xxtofl^0,w,c
 17196  003FE0  1008               	iorwf	(??___xxtofl+1)^0,w,c
 17197  003FE2  1009               	iorwf	(??___xxtofl+2)^0,w,c
 17198  003FE4  100A               	iorwf	(??___xxtofl+3)^0,w,c
 17199  003FE6  A4D8               	btfss	status,2,c
 17200  003FE8  EFF8  F01F         	goto	u8501
 17201  003FEC  EFFA  F01F         	goto	u8500
 17202  003FF0                     u8501:
 17203  003FF0  EFDD  F01F         	goto	l7306
 17204  003FF4                     u8500:
 17205  003FF4  EF08  F020         	goto	l1623
 17206  003FF8                     l7310:
 17207  003FF8  2A0C               	incf	___xxtofl@exp^0,f,c
 17208  003FFA  0E01               	movlw	1
 17209  003FFC  260D               	addwf	___xxtofl@arg^0,f,c
 17210  003FFE  0E00               	movlw	0
 17211  004000  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 17212  004002  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 17213  004004  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 17214  004006  90D8               	bcf	status,0,c
 17215  004008  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 17216  00400A  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 17217  00400C  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 17218  00400E  320D               	rrcf	___xxtofl@arg^0,f,c
 17219  004010                     l1623:
 17220  004010  0E00               	movlw	0
 17221  004012  140D               	andwf	___xxtofl@arg^0,w,c
 17222  004014  6E07               	movwf	??___xxtofl^0,c
 17223  004016  0E00               	movlw	0
 17224  004018  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 17225  00401A  6E08               	movwf	(??___xxtofl+1)^0,c
 17226  00401C  0E00               	movlw	0
 17227  00401E  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 17228  004020  6E09               	movwf	(??___xxtofl+2)^0,c
 17229  004022  0EFF               	movlw	255
 17230  004024  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 17231  004026  6E0A               	movwf	(??___xxtofl+3)^0,c
 17232  004028  5007               	movf	??___xxtofl^0,w,c
 17233  00402A  1008               	iorwf	(??___xxtofl+1)^0,w,c
 17234  00402C  1009               	iorwf	(??___xxtofl+2)^0,w,c
 17235  00402E  100A               	iorwf	(??___xxtofl+3)^0,w,c
 17236  004030  A4D8               	btfss	status,2,c
 17237  004032  EF1D  F020         	goto	u8511
 17238  004036  EF1F  F020         	goto	u8510
 17239  00403A                     u8511:
 17240  00403A  EFFC  F01F         	goto	l7310
 17241  00403E                     u8510:
 17242  00403E  EF27  F020         	goto	l7318
 17243  004042                     l7316:
 17244  004042  060C               	decf	___xxtofl@exp^0,f,c
 17245  004044  90D8               	bcf	status,0,c
 17246  004046  360D               	rlcf	___xxtofl@arg^0,f,c
 17247  004048  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 17248  00404A  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 17249  00404C  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 17250  00404E                     l7318:
 17251  00404E  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 17252  004050  EF2C  F020         	goto	u8521
 17253  004054  EF2E  F020         	goto	u8520
 17254  004058                     u8521:
 17255  004058  EF36  F020         	goto	l1630
 17256  00405C                     u8520:
 17257  00405C  0E02               	movlw	2
 17258  00405E  600C               	cpfslt	___xxtofl@exp^0,c
 17259  004060  EF34  F020         	goto	u8531
 17260  004064  EF36  F020         	goto	u8530
 17261  004068                     u8531:
 17262  004068  EF21  F020         	goto	l7316
 17263  00406C                     u8530:
 17264  00406C                     l1630:
 17265  00406C  B00C               	btfsc	___xxtofl@exp^0,0,c
 17266  00406E  EF3B  F020         	goto	u8541
 17267  004072  EF3D  F020         	goto	u8540
 17268  004076                     u8541:
 17269  004076  EF3E  F020         	goto	l7324
 17270  00407A                     u8540:
 17271  00407A  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 17272  00407C                     l7324:
 17273  00407C  90D8               	bcf	status,0,c
 17274  00407E  320C               	rrcf	___xxtofl@exp^0,f,c
 17275  004080  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 17276  004084  6A08               	clrf	(??___xxtofl+1)^0,c
 17277  004086  6A09               	clrf	(??___xxtofl+2)^0,c
 17278  004088  6A0A               	clrf	(??___xxtofl+3)^0,c
 17279  00408A  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 17280  00408E  6A09               	clrf	(??___xxtofl+2)^0,c
 17281  004090  6A08               	clrf	(??___xxtofl+1)^0,c
 17282  004092  6A07               	clrf	??___xxtofl^0,c
 17283  004094  5007               	movf	??___xxtofl^0,w,c
 17284  004096  120D               	iorwf	___xxtofl@arg^0,f,c
 17285  004098  5008               	movf	(??___xxtofl+1)^0,w,c
 17286  00409A  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 17287  00409C  5009               	movf	(??___xxtofl+2)^0,w,c
 17288  00409E  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 17289  0040A0  500A               	movf	(??___xxtofl+3)^0,w,c
 17290  0040A2  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 17291  0040A4  500B               	movf	___xxtofl@sign^0,w,c
 17292  0040A6  B4D8               	btfsc	status,2,c
 17293  0040A8  EF58  F020         	goto	u8551
 17294  0040AC  EF5A  F020         	goto	u8550
 17295  0040B0                     u8551:
 17296  0040B0  EF62  F020         	goto	l7334
 17297  0040B4                     u8550:
 17298  0040B4  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 17299  0040B6  EF61  F020         	goto	u8560
 17300  0040BA  EF5F  F020         	goto	u8561
 17301  0040BE                     u8561:
 17302  0040BE  EF62  F020         	goto	l7334
 17303  0040C2                     u8560:
 17304  0040C2  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 17305  0040C4                     l7334:
 17306  0040C4  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 17307  0040C8  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 17308  0040CC  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 17309  0040D0  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 17310  0040D4                     l1619:
 17311  0040D4  0012               	return		;funcret
 17312  0040D6                     __end_of___xxtofl:
 17313                           	opt callstack 0
 17314                           
 17315 ;; *************** function ___aldiv *****************
 17316 ;; Defined at:
 17317 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 17318 ;; Parameters:    Size  Location     Type
 17319 ;;  dividend        4    2[COMRAM] long 
 17320 ;;  divisor         4    6[COMRAM] long 
 17321 ;; Auto vars:     Size  Location     Type
 17322 ;;  quotient        4   12[COMRAM] long 
 17323 ;;  sign            1   11[COMRAM] unsigned char 
 17324 ;;  counter         1   10[COMRAM] unsigned char 
 17325 ;; Return value:  Size  Location     Type
 17326 ;;                  4    2[COMRAM] long 
 17327 ;; Registers used:
 17328 ;;		wreg, status,2, status,0
 17329 ;; Tracked objects:
 17330 ;;		On entry : 0/0
 17331 ;;		On exit  : 0/0
 17332 ;;		Unchanged: 0/0
 17333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17334 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17335 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17337 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17338 ;;Total ram usage:       14 bytes
 17339 ;; Hardware stack levels used:    1
 17340 ;; Hardware stack levels required when called:    4
 17341 ;; This function calls:
 17342 ;;		Nothing
 17343 ;; This function is called by:
 17344 ;;		_main
 17345 ;; This function uses a non-reentrant model
 17346 ;;
 17347                           
 17348                           	psect	text59
 17349  004D28                     __ptext59:
 17350                           	opt callstack 0
 17351  004D28                     ___aldiv:
 17352                           	opt callstack 26
 17353  004D28  0E00               	movlw	0
 17354  004D2A  6E0C               	movwf	___aldiv@sign^0,c
 17355  004D2C  BE0A               	btfsc	(___aldiv@divisor+3)^0,7,c
 17356  004D2E  EF9D  F026         	goto	u8410
 17357  004D32  EF9B  F026         	goto	u8411
 17358  004D36                     u8411:
 17359  004D36  EFA7  F026         	goto	l7256
 17360  004D3A                     u8410:
 17361  004D3A  1E0A               	comf	(___aldiv@divisor+3)^0,f,c
 17362  004D3C  1E09               	comf	(___aldiv@divisor+2)^0,f,c
 17363  004D3E  1E08               	comf	(___aldiv@divisor+1)^0,f,c
 17364  004D40  6C07               	negf	___aldiv@divisor^0,c
 17365  004D42  0E00               	movlw	0
 17366  004D44  2208               	addwfc	(___aldiv@divisor+1)^0,f,c
 17367  004D46  2209               	addwfc	(___aldiv@divisor+2)^0,f,c
 17368  004D48  220A               	addwfc	(___aldiv@divisor+3)^0,f,c
 17369  004D4A  0E01               	movlw	1
 17370  004D4C  6E0C               	movwf	___aldiv@sign^0,c
 17371  004D4E                     l7256:
 17372  004D4E  BE06               	btfsc	(___aldiv@dividend+3)^0,7,c
 17373  004D50  EFAE  F026         	goto	u8420
 17374  004D54  EFAC  F026         	goto	u8421
 17375  004D58                     u8421:
 17376  004D58  EFB8  F026         	goto	l7262
 17377  004D5C                     u8420:
 17378  004D5C  1E06               	comf	(___aldiv@dividend+3)^0,f,c
 17379  004D5E  1E05               	comf	(___aldiv@dividend+2)^0,f,c
 17380  004D60  1E04               	comf	(___aldiv@dividend+1)^0,f,c
 17381  004D62  6C03               	negf	___aldiv@dividend^0,c
 17382  004D64  0E00               	movlw	0
 17383  004D66  2204               	addwfc	(___aldiv@dividend+1)^0,f,c
 17384  004D68  2205               	addwfc	(___aldiv@dividend+2)^0,f,c
 17385  004D6A  2206               	addwfc	(___aldiv@dividend+3)^0,f,c
 17386  004D6C  0E01               	movlw	1
 17387  004D6E  1A0C               	xorwf	___aldiv@sign^0,f,c
 17388  004D70                     l7262:
 17389  004D70  0E00               	movlw	0
 17390  004D72  6E0D               	movwf	___aldiv@quotient^0,c
 17391  004D74  0E00               	movlw	0
 17392  004D76  6E0E               	movwf	(___aldiv@quotient+1)^0,c
 17393  004D78  0E00               	movlw	0
 17394  004D7A  6E0F               	movwf	(___aldiv@quotient+2)^0,c
 17395  004D7C  0E00               	movlw	0
 17396  004D7E  6E10               	movwf	(___aldiv@quotient+3)^0,c
 17397  004D80  5007               	movf	___aldiv@divisor^0,w,c
 17398  004D82  1008               	iorwf	(___aldiv@divisor+1)^0,w,c
 17399  004D84  1009               	iorwf	(___aldiv@divisor+2)^0,w,c
 17400  004D86  100A               	iorwf	(___aldiv@divisor+3)^0,w,c
 17401  004D88  B4D8               	btfsc	status,2,c
 17402  004D8A  EFC9  F026         	goto	u8431
 17403  004D8E  EFCB  F026         	goto	u8430
 17404  004D92                     u8431:
 17405  004D92  EF01  F027         	goto	l7284
 17406  004D96                     u8430:
 17407  004D96  0E01               	movlw	1
 17408  004D98  6E0B               	movwf	___aldiv@counter^0,c
 17409  004D9A  EFD5  F026         	goto	l7270
 17410  004D9E                     l7268:
 17411  004D9E  90D8               	bcf	status,0,c
 17412  004DA0  3607               	rlcf	___aldiv@divisor^0,f,c
 17413  004DA2  3608               	rlcf	(___aldiv@divisor+1)^0,f,c
 17414  004DA4  3609               	rlcf	(___aldiv@divisor+2)^0,f,c
 17415  004DA6  360A               	rlcf	(___aldiv@divisor+3)^0,f,c
 17416  004DA8  2A0B               	incf	___aldiv@counter^0,f,c
 17417  004DAA                     l7270:
 17418  004DAA  AE0A               	btfss	(___aldiv@divisor+3)^0,7,c
 17419  004DAC  EFDA  F026         	goto	u8441
 17420  004DB0  EFDC  F026         	goto	u8440
 17421  004DB4                     u8441:
 17422  004DB4  EFCF  F026         	goto	l7268
 17423  004DB8                     u8440:
 17424  004DB8                     l7272:
 17425  004DB8  90D8               	bcf	status,0,c
 17426  004DBA  360D               	rlcf	___aldiv@quotient^0,f,c
 17427  004DBC  360E               	rlcf	(___aldiv@quotient+1)^0,f,c
 17428  004DBE  360F               	rlcf	(___aldiv@quotient+2)^0,f,c
 17429  004DC0  3610               	rlcf	(___aldiv@quotient+3)^0,f,c
 17430  004DC2  5007               	movf	___aldiv@divisor^0,w,c
 17431  004DC4  5C03               	subwf	___aldiv@dividend^0,w,c
 17432  004DC6  5008               	movf	(___aldiv@divisor+1)^0,w,c
 17433  004DC8  5804               	subwfb	(___aldiv@dividend+1)^0,w,c
 17434  004DCA  5009               	movf	(___aldiv@divisor+2)^0,w,c
 17435  004DCC  5805               	subwfb	(___aldiv@dividend+2)^0,w,c
 17436  004DCE  500A               	movf	(___aldiv@divisor+3)^0,w,c
 17437  004DD0  5806               	subwfb	(___aldiv@dividend+3)^0,w,c
 17438  004DD2  A0D8               	btfss	status,0,c
 17439  004DD4  EFEE  F026         	goto	u8451
 17440  004DD8  EFF0  F026         	goto	u8450
 17441  004DDC                     u8451:
 17442  004DDC  EFF9  F026         	goto	l7280
 17443  004DE0                     u8450:
 17444  004DE0  5007               	movf	___aldiv@divisor^0,w,c
 17445  004DE2  5E03               	subwf	___aldiv@dividend^0,f,c
 17446  004DE4  5008               	movf	(___aldiv@divisor+1)^0,w,c
 17447  004DE6  5A04               	subwfb	(___aldiv@dividend+1)^0,f,c
 17448  004DE8  5009               	movf	(___aldiv@divisor+2)^0,w,c
 17449  004DEA  5A05               	subwfb	(___aldiv@dividend+2)^0,f,c
 17450  004DEC  500A               	movf	(___aldiv@divisor+3)^0,w,c
 17451  004DEE  5A06               	subwfb	(___aldiv@dividend+3)^0,f,c
 17452  004DF0  800D               	bsf	___aldiv@quotient^0,0,c
 17453  004DF2                     l7280:
 17454  004DF2  90D8               	bcf	status,0,c
 17455  004DF4  320A               	rrcf	(___aldiv@divisor+3)^0,f,c
 17456  004DF6  3209               	rrcf	(___aldiv@divisor+2)^0,f,c
 17457  004DF8  3208               	rrcf	(___aldiv@divisor+1)^0,f,c
 17458  004DFA  3207               	rrcf	___aldiv@divisor^0,f,c
 17459  004DFC  2E0B               	decfsz	___aldiv@counter^0,f,c
 17460  004DFE  EFDC  F026         	goto	l7272
 17461  004E02                     l7284:
 17462  004E02  500C               	movf	___aldiv@sign^0,w,c
 17463  004E04  B4D8               	btfsc	status,2,c
 17464  004E06  EF07  F027         	goto	u8461
 17465  004E0A  EF09  F027         	goto	u8460
 17466  004E0E                     u8461:
 17467  004E0E  EF11  F027         	goto	l7288
 17468  004E12                     u8460:
 17469  004E12  1E10               	comf	(___aldiv@quotient+3)^0,f,c
 17470  004E14  1E0F               	comf	(___aldiv@quotient+2)^0,f,c
 17471  004E16  1E0E               	comf	(___aldiv@quotient+1)^0,f,c
 17472  004E18  6C0D               	negf	___aldiv@quotient^0,c
 17473  004E1A  0E00               	movlw	0
 17474  004E1C  220E               	addwfc	(___aldiv@quotient+1)^0,f,c
 17475  004E1E  220F               	addwfc	(___aldiv@quotient+2)^0,f,c
 17476  004E20  2210               	addwfc	(___aldiv@quotient+3)^0,f,c
 17477  004E22                     l7288:
 17478  004E22  C00D  F003         	movff	___aldiv@quotient,?___aldiv
 17479  004E26  C00E  F004         	movff	___aldiv@quotient+1,?___aldiv+1
 17480  004E2A  C00F  F005         	movff	___aldiv@quotient+2,?___aldiv+2
 17481  004E2E  C010  F006         	movff	___aldiv@quotient+3,?___aldiv+3
 17482  004E32  0012               	return		;funcret
 17483  004E34                     __end_of___aldiv:
 17484                           	opt callstack 0
 17485                           
 17486 ;; *************** function _SYSTEM_Initialize *****************
 17487 ;; Defined at:
 17488 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;		None
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;		None
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  1    wreg      void 
 17495 ;; Registers used:
 17496 ;;		wreg, status,2, status,0, cstack
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17506 ;;Total ram usage:        0 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:    6
 17509 ;; This function calls:
 17510 ;;		_ADC_Initialize
 17511 ;;		_EXT_INT_Initialize
 17512 ;;		_INTERRUPT_Initialize
 17513 ;;		_OSCILLATOR_Initialize
 17514 ;;		_PIN_MANAGER_Initialize
 17515 ;;		_SPI_Initialize
 17516 ;;		_TMR0_Initialize
 17517 ;;		_TMR1_Initialize
 17518 ;;		_TMR2_Initialize
 17519 ;; This function is called by:
 17520 ;;		_main
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           	psect	text60
 17525  005F9E                     __ptext60:
 17526                           	opt callstack 0
 17527  005F9E                     _SYSTEM_Initialize:
 17528                           	opt callstack 24
 17529  005F9E                     
 17530                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 17531  005F9E  EC71  F030         	call	_INTERRUPT_Initialize	;wreg free
 17532  005FA2                     
 17533                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 17534  005FA2  EC3D  F030         	call	_SPI_Initialize	;wreg free
 17535  005FA6                     
 17536                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17537  005FA6  ECA5  F02D         	call	_PIN_MANAGER_Initialize	;wreg free
 17538  005FAA                     
 17539                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17540  005FAA  EC46  F030         	call	_OSCILLATOR_Initialize	;wreg free
 17541  005FAE                     
 17542                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 17543  005FAE  ECE2  F02F         	call	_ADC_Initialize	;wreg free
 17544  005FB2                     
 17545                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 17546  005FB2  ECF4  F02F         	call	_TMR2_Initialize	;wreg free
 17547  005FB6                     
 17548                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 17549  005FB6  EC33  F030         	call	_EXT_INT_Initialize	;wreg free
 17550  005FBA                     
 17551                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
 17552  005FBA  EC91  F02F         	call	_TMR1_Initialize	;wreg free
 17553  005FBE                     
 17554                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
 17555  005FBE  ECA7  F02F         	call	_TMR0_Initialize	;wreg free
 17556  005FC2  0012               	return		;funcret
 17557  005FC4                     __end_of_SYSTEM_Initialize:
 17558                           	opt callstack 0
 17559                           
 17560 ;; *************** function _TMR2_Initialize *****************
 17561 ;; Defined at:
 17562 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17563 ;; Parameters:    Size  Location     Type
 17564 ;;		None
 17565 ;; Auto vars:     Size  Location     Type
 17566 ;;		None
 17567 ;; Return value:  Size  Location     Type
 17568 ;;                  1    wreg      void 
 17569 ;; Registers used:
 17570 ;;		wreg, status,2, status,0, cstack
 17571 ;; Tracked objects:
 17572 ;;		On entry : 0/0
 17573 ;;		On exit  : 0/0
 17574 ;;		Unchanged: 0/0
 17575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17580 ;;Total ram usage:        0 bytes
 17581 ;; Hardware stack levels used:    1
 17582 ;; Hardware stack levels required when called:    5
 17583 ;; This function calls:
 17584 ;;		_TMR2_SetInterruptHandler
 17585 ;; This function is called by:
 17586 ;;		_SYSTEM_Initialize
 17587 ;; This function uses a non-reentrant model
 17588 ;;
 17589                           
 17590                           	psect	text61
 17591  005FE8                     __ptext61:
 17592                           	opt callstack 0
 17593  005FE8                     _TMR2_Initialize:
 17594                           	opt callstack 24
 17595  005FE8                     
 17596                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xF9;
 17597  005FE8  0EF9               	movlw	249
 17598  005FEA  6ECB               	movwf	203,c	;volatile
 17599                           
 17600                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 17601  005FEC  0E00               	movlw	0
 17602  005FEE  6ECC               	movwf	204,c	;volatile
 17603  005FF0                     
 17604                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 17605  005FF0  929E               	bcf	158,1,c	;volatile
 17606  005FF2                     
 17607                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 17608  005FF2  829D               	bsf	157,1,c	;volatile
 17609  005FF4                     
 17610                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17611  005FF4  0EEA               	movlw	low _TMR2_DefaultInterruptHandler
 17612  005FF6  6E03               	movwf	TMR2_SetInterruptHandler@InterruptHandler^0,c
 17613  005FF8  0E60               	movlw	high _TMR2_DefaultInterruptHandler
 17614  005FFA  6E04               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^0,c
 17615  005FFC  EC55  F030         	call	_TMR2_SetInterruptHandler	;wreg free
 17616  006000                     
 17617                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x0D;
 17618  006000  0E0D               	movlw	13
 17619  006002  6ECA               	movwf	202,c	;volatile
 17620  006004  0012               	return		;funcret
 17621  006006                     __end_of_TMR2_Initialize:
 17622                           	opt callstack 0
 17623                           
 17624 ;; *************** function _TMR2_SetInterruptHandler *****************
 17625 ;; Defined at:
 17626 ;;		line 147 in file "mcc_generated_files/tmr2.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 17629 ;;		 -> led_inter(1), TMR2_DefaultInterruptHandler(1), 
 17630 ;; Auto vars:     Size  Location     Type
 17631 ;;		None
 17632 ;; Return value:  Size  Location     Type
 17633 ;;                  1    wreg      void 
 17634 ;; Registers used:
 17635 ;;		wreg, status,2, status,0
 17636 ;; Tracked objects:
 17637 ;;		On entry : 0/0
 17638 ;;		On exit  : 0/0
 17639 ;;		Unchanged: 0/0
 17640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17645 ;;Total ram usage:        2 bytes
 17646 ;; Hardware stack levels used:    1
 17647 ;; Hardware stack levels required when called:    4
 17648 ;; This function calls:
 17649 ;;		Nothing
 17650 ;; This function is called by:
 17651 ;;		_TMR2_Initialize
 17652 ;;		_main
 17653 ;; This function uses a non-reentrant model
 17654 ;;
 17655                           
 17656                           	psect	text62
 17657  0060AA                     __ptext62:
 17658                           	opt callstack 0
 17659  0060AA                     _TMR2_SetInterruptHandler:
 17660                           	opt callstack 26
 17661  0060AA                     
 17662                           ;mcc_generated_files/tmr2.c: 148:     TMR2_InterruptHandler = InterruptHandler;
 17663  0060AA  C003  F1B6         	movff	TMR2_SetInterruptHandler@InterruptHandler,_TMR2_InterruptHandler
 17664  0060AE  C004  F1B7         	movff	TMR2_SetInterruptHandler@InterruptHandler+1,_TMR2_InterruptHandler+1
 17665  0060B2  0012               	return		;funcret
 17666  0060B4                     __end_of_TMR2_SetInterruptHandler:
 17667                           	opt callstack 0
 17668                           
 17669 ;; *************** function _TMR1_Initialize *****************
 17670 ;; Defined at:
 17671 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 17672 ;; Parameters:    Size  Location     Type
 17673 ;;		None
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;		None
 17676 ;; Return value:  Size  Location     Type
 17677 ;;                  1    wreg      void 
 17678 ;; Registers used:
 17679 ;;		wreg, status,2, status,0
 17680 ;; Tracked objects:
 17681 ;;		On entry : 0/0
 17682 ;;		On exit  : 0/0
 17683 ;;		Unchanged: 0/0
 17684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17689 ;;Total ram usage:        2 bytes
 17690 ;; Hardware stack levels used:    1
 17691 ;; Hardware stack levels required when called:    4
 17692 ;; This function calls:
 17693 ;;		Nothing
 17694 ;; This function is called by:
 17695 ;;		_SYSTEM_Initialize
 17696 ;; This function uses a non-reentrant model
 17697 ;;
 17698                           
 17699                           	psect	text63
 17700  005F22                     __ptext63:
 17701                           	opt callstack 0
 17702  005F22                     _TMR1_Initialize:
 17703                           	opt callstack 25
 17704  005F22                     
 17705                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 17706  005F22  0E00               	movlw	0
 17707  005F24  6EAA               	movwf	170,c	;volatile
 17708                           
 17709                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
 17710  005F26  0E00               	movlw	0
 17711  005F28  6ECF               	movwf	207,c	;volatile
 17712                           
 17713                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
 17714  005F2A  0E00               	movlw	0
 17715  005F2C  6ECE               	movwf	206,c	;volatile
 17716  005F2E                     
 17717                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 17718  005F2E  909E               	bcf	158,0,c	;volatile
 17719  005F30                     
 17720                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17721  005F30  50CE               	movf	206,w,c	;volatile
 17722  005F32  CFCF F003          	movff	4047,??_TMR1_Initialize	;volatile
 17723  005F36  6A04               	clrf	(??_TMR1_Initialize+1)^0,c
 17724  005F38  C003  F004         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 17725  005F3C  6A03               	clrf	??_TMR1_Initialize^0,c
 17726  005F3E  1003               	iorwf	??_TMR1_Initialize^0,w,c
 17727  005F40  0101               	movlb	1	; () banked
 17728  005F42  6FB4               	movwf	_timer1ReloadVal& (0+255),b	;volatile
 17729  005F44  5004               	movf	(??_TMR1_Initialize+1)^0,w,c
 17730  005F46  6FB5               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
 17731  005F48                     
 17732                           ; BSR set to: 1
 17733                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
 17734  005F48  0E01               	movlw	1
 17735  005F4A  6ECD               	movwf	205,c	;volatile
 17736  005F4C                     
 17737                           ; BSR set to: 1
 17738  005F4C  0012               	return		;funcret
 17739  005F4E                     __end_of_TMR1_Initialize:
 17740                           	opt callstack 0
 17741                           
 17742 ;; *************** function _TMR0_Initialize *****************
 17743 ;; Defined at:
 17744 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;		None
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;		None
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  1    wreg      void 
 17751 ;; Registers used:
 17752 ;;		wreg, status,2, status,0
 17753 ;; Tracked objects:
 17754 ;;		On entry : 0/0
 17755 ;;		On exit  : 0/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17762 ;;Total ram usage:        2 bytes
 17763 ;; Hardware stack levels used:    1
 17764 ;; Hardware stack levels required when called:    4
 17765 ;; This function calls:
 17766 ;;		Nothing
 17767 ;; This function is called by:
 17768 ;;		_SYSTEM_Initialize
 17769 ;; This function uses a non-reentrant model
 17770 ;;
 17771                           
 17772                           	psect	text64
 17773  005F4E                     __ptext64:
 17774                           	opt callstack 0
 17775  005F4E                     _TMR0_Initialize:
 17776                           	opt callstack 25
 17777  005F4E                     
 17778                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 17779  005F4E  9CD5               	bcf	213,6,c	;volatile
 17780  005F50                     
 17781                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x0B;
 17782  005F50  0E0B               	movlw	11
 17783  005F52  6ED7               	movwf	215,c	;volatile
 17784                           
 17785                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xDB;
 17786  005F54  0EDB               	movlw	219
 17787  005F56  6ED6               	movwf	214,c	;volatile
 17788  005F58                     
 17789                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 17790  005F58  50D6               	movf	214,w,c	;volatile
 17791  005F5A  CFD7 F003          	movff	4055,??_TMR0_Initialize	;volatile
 17792  005F5E  6A04               	clrf	(??_TMR0_Initialize+1)^0,c
 17793  005F60  C003  F004         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 17794  005F64  6A03               	clrf	??_TMR0_Initialize^0,c
 17795  005F66  1003               	iorwf	??_TMR0_Initialize^0,w,c
 17796  005F68  0100               	movlb	0	; () banked
 17797  005F6A  6FFA               	movwf	_timer0ReloadVal& (0+255),b	;volatile
 17798  005F6C  5004               	movf	(??_TMR0_Initialize+1)^0,w,c
 17799  005F6E  6FFB               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
 17800  005F70                     
 17801                           ; BSR set to: 0
 17802                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 17803  005F70  94F2               	bcf	242,2,c	;volatile
 17804  005F72                     
 17805                           ; BSR set to: 0
 17806                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
 17807  005F72  0E97               	movlw	151
 17808  005F74  6ED5               	movwf	213,c	;volatile
 17809  005F76                     
 17810                           ; BSR set to: 0
 17811  005F76  0012               	return		;funcret
 17812  005F78                     __end_of_TMR0_Initialize:
 17813                           	opt callstack 0
 17814                           
 17815 ;; *************** function _SPI_Initialize *****************
 17816 ;; Defined at:
 17817 ;;		line 62 in file "mcc_generated_files/spi.c"
 17818 ;; Parameters:    Size  Location     Type
 17819 ;;		None
 17820 ;; Auto vars:     Size  Location     Type
 17821 ;;		None
 17822 ;; Return value:  Size  Location     Type
 17823 ;;                  1    wreg      void 
 17824 ;; Registers used:
 17825 ;;		wreg, status,2
 17826 ;; Tracked objects:
 17827 ;;		On entry : 0/0
 17828 ;;		On exit  : 0/0
 17829 ;;		Unchanged: 0/0
 17830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17835 ;;Total ram usage:        0 bytes
 17836 ;; Hardware stack levels used:    1
 17837 ;; Hardware stack levels required when called:    4
 17838 ;; This function calls:
 17839 ;;		Nothing
 17840 ;; This function is called by:
 17841 ;;		_SYSTEM_Initialize
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           	psect	text65
 17846  00607A                     __ptext65:
 17847                           	opt callstack 0
 17848  00607A                     _SPI_Initialize:
 17849                           	opt callstack 25
 17850  00607A                     
 17851                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 17852  00607A  0E40               	movlw	64
 17853  00607C  6EC7               	movwf	199,c	;volatile
 17854                           
 17855                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 17856  00607E  0E00               	movlw	0
 17857  006080  6EC6               	movwf	198,c	;volatile
 17858                           
 17859                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 17860  006082  0E01               	movlw	1
 17861  006084  6EC8               	movwf	200,c	;volatile
 17862  006086                     
 17863                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 17864  006086  9694               	bcf	148,3,c	;volatile
 17865  006088                     
 17866                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 17867  006088  9AC6               	bcf	198,5,c	;volatile
 17868  00608A  0012               	return		;funcret
 17869  00608C                     __end_of_SPI_Initialize:
 17870                           	opt callstack 0
 17871                           
 17872 ;; *************** function _PIN_MANAGER_Initialize *****************
 17873 ;; Defined at:
 17874 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 17875 ;; Parameters:    Size  Location     Type
 17876 ;;		None
 17877 ;; Auto vars:     Size  Location     Type
 17878 ;;		None
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      void 
 17881 ;; Registers used:
 17882 ;;		wreg, status,2, status,0, cstack
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17892 ;;Total ram usage:        0 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:    5
 17895 ;; This function calls:
 17896 ;;		_IOCB4_SetInterruptHandler
 17897 ;; This function is called by:
 17898 ;;		_SYSTEM_Initialize
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           	psect	text66
 17903  005B4A                     __ptext66:
 17904                           	opt callstack 0
 17905  005B4A                     _PIN_MANAGER_Initialize:
 17906                           	opt callstack 24
 17907  005B4A                     
 17908                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 17909  005B4A  0E00               	movlw	0
 17910  005B4C  6E8D               	movwf	141,c	;volatile
 17911                           
 17912                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 17913  005B4E  0E00               	movlw	0
 17914  005B50  6E8C               	movwf	140,c	;volatile
 17915                           
 17916                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17917  005B52  0E00               	movlw	0
 17918  005B54  6E89               	movwf	137,c	;volatile
 17919                           
 17920                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 17921  005B56  0E00               	movlw	0
 17922  005B58  6E8A               	movwf	138,c	;volatile
 17923                           
 17924                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 17925  005B5A  0E00               	movlw	0
 17926  005B5C  6E8B               	movwf	139,c	;volatile
 17927                           
 17928                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 17929  005B5E  0E04               	movlw	4
 17930  005B60  6E96               	movwf	150,c	;volatile
 17931                           
 17932                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0x8F;
 17933  005B62  0E8F               	movlw	143
 17934  005B64  6E92               	movwf	146,c	;volatile
 17935  005B66                     
 17936                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 17937  005B66  6893               	setf	147,c	;volatile
 17938                           
 17939                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 17940  005B68  0ED7               	movlw	215
 17941  005B6A  6E94               	movwf	148,c	;volatile
 17942  005B6C                     
 17943                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 17944  005B6C  6895               	setf	149,c	;volatile
 17945                           
 17946                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8F;
 17947  005B6E  0E8F               	movlw	143
 17948  005B70  010F               	movlb	15	; () banked
 17949  005B72  6F5D               	movwf	93,b	;volatile
 17950                           
 17951                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 17952  005B74  0E79               	movlw	121
 17953  005B76  6F5C               	movwf	92,b	;volatile
 17954                           
 17955                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 17956  005B78  0E00               	movlw	0
 17957  005B7A  6F5B               	movwf	91,b	;volatile
 17958  005B7C                     
 17959                           ; BSR set to: 15
 17960                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 17961  005B7C  8EF1               	bsf	241,7,c	;volatile
 17962  005B7E                     
 17963                           ; BSR set to: 15
 17964                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 17965  005B7E  895A               	bsf	90,4,b	;volatile
 17966  005B80                     
 17967                           ; BSR set to: 15
 17968                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 17969  005B80  0EEC               	movlw	low _IOCB4_DefaultInterruptHandler
 17970  005B82  6E03               	movwf	IOCB4_SetInterruptHandler@InterruptHandler^0,c
 17971  005B84  0E60               	movlw	high _IOCB4_DefaultInterruptHandler
 17972  005B86  6E04               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)^0,c
 17973  005B88  EC5A  F030         	call	_IOCB4_SetInterruptHandler	;wreg free
 17974  005B8C                     
 17975                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 17976  005B8C  86F2               	bsf	242,3,c	;volatile
 17977  005B8E  0012               	return		;funcret
 17978  005B90                     __end_of_PIN_MANAGER_Initialize:
 17979                           	opt callstack 0
 17980                           
 17981 ;; *************** function _IOCB4_SetInterruptHandler *****************
 17982 ;; Defined at:
 17983 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 17984 ;; Parameters:    Size  Location     Type
 17985 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 17986 ;;		 -> IOCB4_DefaultInterruptHandler(1), 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;		None
 17989 ;; Return value:  Size  Location     Type
 17990 ;;                  1    wreg      void 
 17991 ;; Registers used:
 17992 ;;		wreg, status,2, status,0
 17993 ;; Tracked objects:
 17994 ;;		On entry : 0/0
 17995 ;;		On exit  : 0/0
 17996 ;;		Unchanged: 0/0
 17997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18002 ;;Total ram usage:        2 bytes
 18003 ;; Hardware stack levels used:    1
 18004 ;; Hardware stack levels required when called:    4
 18005 ;; This function calls:
 18006 ;;		Nothing
 18007 ;; This function is called by:
 18008 ;;		_PIN_MANAGER_Initialize
 18009 ;; This function uses a non-reentrant model
 18010 ;;
 18011                           
 18012                           	psect	text67
 18013  0060B4                     __ptext67:
 18014                           	opt callstack 0
 18015  0060B4                     _IOCB4_SetInterruptHandler:
 18016                           	opt callstack 24
 18017  0060B4                     
 18018                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 18019  0060B4  C003  F0FC         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 18020  0060B8  C004  F0FD         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 18021  0060BC  0012               	return		;funcret
 18022  0060BE                     __end_of_IOCB4_SetInterruptHandler:
 18023                           	opt callstack 0
 18024                           
 18025 ;; *************** function _OSCILLATOR_Initialize *****************
 18026 ;; Defined at:
 18027 ;;		line 64 in file "mcc_generated_files/mcc.c"
 18028 ;; Parameters:    Size  Location     Type
 18029 ;;		None
 18030 ;; Auto vars:     Size  Location     Type
 18031 ;;		None
 18032 ;; Return value:  Size  Location     Type
 18033 ;;                  1    wreg      void 
 18034 ;; Registers used:
 18035 ;;		wreg, status,2
 18036 ;; Tracked objects:
 18037 ;;		On entry : 0/0
 18038 ;;		On exit  : 0/0
 18039 ;;		Unchanged: 0/0
 18040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18045 ;;Total ram usage:        0 bytes
 18046 ;; Hardware stack levels used:    1
 18047 ;; Hardware stack levels required when called:    4
 18048 ;; This function calls:
 18049 ;;		Nothing
 18050 ;; This function is called by:
 18051 ;;		_SYSTEM_Initialize
 18052 ;; This function uses a non-reentrant model
 18053 ;;
 18054                           
 18055                           	psect	text68
 18056  00608C                     __ptext68:
 18057                           	opt callstack 0
 18058  00608C                     _OSCILLATOR_Initialize:
 18059                           	opt callstack 25
 18060  00608C                     
 18061                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x62;
 18062  00608C  0E62               	movlw	98
 18063  00608E  6ED3               	movwf	211,c	;volatile
 18064                           
 18065                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x00;
 18066  006090  0E00               	movlw	0
 18067  006092  6ED2               	movwf	210,c	;volatile
 18068                           
 18069                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 18070  006094  0E00               	movlw	0
 18071  006096  6E9B               	movwf	155,c	;volatile
 18072                           
 18073                           ;mcc_generated_files/mcc.c: 73:     REFOCON = 0x00;
 18074  006098  0E00               	movlw	0
 18075  00609A  6E9A               	movwf	154,c	;volatile
 18076  00609C  0012               	return		;funcret
 18077  00609E                     __end_of_OSCILLATOR_Initialize:
 18078                           	opt callstack 0
 18079                           
 18080 ;; *************** function _INTERRUPT_Initialize *****************
 18081 ;; Defined at:
 18082 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18083 ;; Parameters:    Size  Location     Type
 18084 ;;		None
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;		None
 18087 ;; Return value:  Size  Location     Type
 18088 ;;                  1    wreg      void 
 18089 ;; Registers used:
 18090 ;;		None
 18091 ;; Tracked objects:
 18092 ;;		On entry : 0/0
 18093 ;;		On exit  : 0/0
 18094 ;;		Unchanged: 0/0
 18095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18100 ;;Total ram usage:        0 bytes
 18101 ;; Hardware stack levels used:    1
 18102 ;; Hardware stack levels required when called:    4
 18103 ;; This function calls:
 18104 ;;		Nothing
 18105 ;; This function is called by:
 18106 ;;		_SYSTEM_Initialize
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110                           	psect	text69
 18111  0060E2                     __ptext69:
 18112                           	opt callstack 0
 18113  0060E2                     _INTERRUPT_Initialize:
 18114                           	opt callstack 25
 18115  0060E2                     
 18116                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 18117  0060E2  9ED0               	bcf	208,7,c	;volatile
 18118  0060E4  0012               	return		;funcret
 18119  0060E6                     __end_of_INTERRUPT_Initialize:
 18120                           	opt callstack 0
 18121                           
 18122 ;; *************** function _EXT_INT_Initialize *****************
 18123 ;; Defined at:
 18124 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 18125 ;; Parameters:    Size  Location     Type
 18126 ;;		None
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;		None
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  1    wreg      void 
 18131 ;; Registers used:
 18132 ;;		wreg, status,2, status,0, cstack
 18133 ;; Tracked objects:
 18134 ;;		On entry : 0/0
 18135 ;;		On exit  : 0/0
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18142 ;;Total ram usage:        0 bytes
 18143 ;; Hardware stack levels used:    1
 18144 ;; Hardware stack levels required when called:    5
 18145 ;; This function calls:
 18146 ;;		_INT0_SetInterruptHandler
 18147 ;; This function is called by:
 18148 ;;		_SYSTEM_Initialize
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           	psect	text70
 18153  006066                     __ptext70:
 18154                           	opt callstack 0
 18155  006066                     _EXT_INT_Initialize:
 18156                           	opt callstack 24
 18157  006066                     
 18158                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 18159  006066  92F2               	bcf	242,1,c	;volatile
 18160                           
 18161                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 1);
 18162  006068  8CF1               	bsf	241,6,c	;volatile
 18163  00606A                     
 18164                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 18165  00606A  0EEE               	movlw	low _INT0_DefaultInterruptHandler
 18166  00606C  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
 18167  00606E  0E60               	movlw	high _INT0_DefaultInterruptHandler
 18168  006070  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
 18169  006072  EC5F  F030         	call	_INT0_SetInterruptHandler	;wreg free
 18170  006076                     
 18171                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 18172  006076  88F2               	bsf	242,4,c	;volatile
 18173  006078  0012               	return		;funcret
 18174  00607A                     __end_of_EXT_INT_Initialize:
 18175                           	opt callstack 0
 18176                           
 18177 ;; *************** function _INT0_SetInterruptHandler *****************
 18178 ;; Defined at:
 18179 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 18180 ;; Parameters:    Size  Location     Type
 18181 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 18182 ;;		 -> INT0_DefaultInterruptHandler(1), 
 18183 ;; Auto vars:     Size  Location     Type
 18184 ;;		None
 18185 ;; Return value:  Size  Location     Type
 18186 ;;                  1    wreg      void 
 18187 ;; Registers used:
 18188 ;;		wreg, status,2, status,0
 18189 ;; Tracked objects:
 18190 ;;		On entry : 0/0
 18191 ;;		On exit  : 0/0
 18192 ;;		Unchanged: 0/0
 18193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18198 ;;Total ram usage:        2 bytes
 18199 ;; Hardware stack levels used:    1
 18200 ;; Hardware stack levels required when called:    4
 18201 ;; This function calls:
 18202 ;;		Nothing
 18203 ;; This function is called by:
 18204 ;;		_EXT_INT_Initialize
 18205 ;; This function uses a non-reentrant model
 18206 ;;
 18207                           
 18208                           	psect	text71
 18209  0060BE                     __ptext71:
 18210                           	opt callstack 0
 18211  0060BE                     _INT0_SetInterruptHandler:
 18212                           	opt callstack 24
 18213  0060BE                     
 18214                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 18215  0060BE  C003  F1B8         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 18216  0060C2  C004  F1B9         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 18217  0060C6  0012               	return		;funcret
 18218  0060C8                     __end_of_INT0_SetInterruptHandler:
 18219                           	opt callstack 0
 18220                           
 18221 ;; *************** function _ADC_Initialize *****************
 18222 ;; Defined at:
 18223 ;;		line 62 in file "mcc_generated_files/adc.c"
 18224 ;; Parameters:    Size  Location     Type
 18225 ;;		None
 18226 ;; Auto vars:     Size  Location     Type
 18227 ;;		None
 18228 ;; Return value:  Size  Location     Type
 18229 ;;                  1    wreg      void 
 18230 ;; Registers used:
 18231 ;;		wreg, status,2, status,0, cstack
 18232 ;; Tracked objects:
 18233 ;;		On entry : 0/0
 18234 ;;		On exit  : 0/0
 18235 ;;		Unchanged: 0/0
 18236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18241 ;;Total ram usage:        0 bytes
 18242 ;; Hardware stack levels used:    1
 18243 ;; Hardware stack levels required when called:    5
 18244 ;; This function calls:
 18245 ;;		_ADC_SetInterruptHandler
 18246 ;; This function is called by:
 18247 ;;		_SYSTEM_Initialize
 18248 ;; This function uses a non-reentrant model
 18249 ;;
 18250                           
 18251                           	psect	text72
 18252  005FC4                     __ptext72:
 18253                           	opt callstack 0
 18254  005FC4                     _ADC_Initialize:
 18255                           	opt callstack 24
 18256  005FC4                     
 18257                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x03;
 18258  005FC4  0E03               	movlw	3
 18259  005FC6  6EC2               	movwf	194,c	;volatile
 18260                           
 18261                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 18262  005FC8  0E80               	movlw	128
 18263  005FCA  6EC1               	movwf	193,c	;volatile
 18264                           
 18265                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 18266  005FCC  0EA1               	movlw	161
 18267  005FCE  6EC0               	movwf	192,c	;volatile
 18268                           
 18269                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 18270  005FD0  0E00               	movlw	0
 18271  005FD2  6EC4               	movwf	196,c	;volatile
 18272                           
 18273                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 18274  005FD4  0E00               	movlw	0
 18275  005FD6  6EC3               	movwf	195,c	;volatile
 18276  005FD8                     
 18277                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 18278  005FD8  8C9D               	bsf	157,6,c	;volatile
 18279  005FDA                     
 18280                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 18281  005FDA  0EF0               	movlw	low _ADC_DefaultInterruptHandler
 18282  005FDC  6E03               	movwf	ADC_SetInterruptHandler@InterruptHandler^0,c
 18283  005FDE  0E60               	movlw	high _ADC_DefaultInterruptHandler
 18284  005FE0  6E04               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)^0,c
 18285  005FE2  EC64  F030         	call	_ADC_SetInterruptHandler	;wreg free
 18286  005FE6  0012               	return		;funcret
 18287  005FE8                     __end_of_ADC_Initialize:
 18288                           	opt callstack 0
 18289                           
 18290 ;; *************** function _ADC_SetInterruptHandler *****************
 18291 ;; Defined at:
 18292 ;;		line 150 in file "mcc_generated_files/adc.c"
 18293 ;; Parameters:    Size  Location     Type
 18294 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 18295 ;;		 -> ADC_DefaultInterruptHandler(1), 
 18296 ;; Auto vars:     Size  Location     Type
 18297 ;;		None
 18298 ;; Return value:  Size  Location     Type
 18299 ;;                  1    wreg      void 
 18300 ;; Registers used:
 18301 ;;		wreg, status,2, status,0
 18302 ;; Tracked objects:
 18303 ;;		On entry : 0/0
 18304 ;;		On exit  : 0/0
 18305 ;;		Unchanged: 0/0
 18306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18311 ;;Total ram usage:        2 bytes
 18312 ;; Hardware stack levels used:    1
 18313 ;; Hardware stack levels required when called:    4
 18314 ;; This function calls:
 18315 ;;		Nothing
 18316 ;; This function is called by:
 18317 ;;		_ADC_Initialize
 18318 ;; This function uses a non-reentrant model
 18319 ;;
 18320                           
 18321                           	psect	text73
 18322  0060C8                     __ptext73:
 18323                           	opt callstack 0
 18324  0060C8                     _ADC_SetInterruptHandler:
 18325                           	opt callstack 24
 18326  0060C8                     
 18327                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 18328  0060C8  C003  F1BA         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 18329  0060CC  C004  F1BB         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 18330  0060D0  0012               	return		;funcret
 18331  0060D2                     __end_of_ADC_SetInterruptHandler:
 18332                           	opt callstack 0
 18333                           
 18334 ;; *************** function _SPI_Open *****************
 18335 ;; Defined at:
 18336 ;;		line 72 in file "mcc_generated_files/spi.c"
 18337 ;; Parameters:    Size  Location     Type
 18338 ;;  spiUniqueCon    1    wreg     enum E353
 18339 ;; Auto vars:     Size  Location     Type
 18340 ;;  spiUniqueCon    1    3[COMRAM] enum E353
 18341 ;; Return value:  Size  Location     Type
 18342 ;;                  1    wreg      _Bool 
 18343 ;; Registers used:
 18344 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18345 ;; Tracked objects:
 18346 ;;		On entry : 0/0
 18347 ;;		On exit  : 0/0
 18348 ;;		Unchanged: 0/0
 18349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18354 ;;Total ram usage:        2 bytes
 18355 ;; Hardware stack levels used:    1
 18356 ;; Hardware stack levels required when called:    4
 18357 ;; This function calls:
 18358 ;;		Nothing
 18359 ;; This function is called by:
 18360 ;;		_main
 18361 ;; This function uses a non-reentrant model
 18362 ;;
 18363                           
 18364                           	psect	text74
 18365  0055FC                     __ptext74:
 18366                           	opt callstack 0
 18367  0055FC                     _SPI_Open:
 18368                           	opt callstack 26
 18369                           
 18370                           ;incstack = 0
 18371                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 18372  0055FC  6E04               	movwf	SPI_Open@spiUniqueConfiguration^0,c
 18373  0055FE                     
 18374                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 18375  0055FE  BAC6               	btfsc	198,5,c	;volatile
 18376  005600  EF04  F02B         	goto	u8261
 18377  005604  EF06  F02B         	goto	u8260
 18378  005608                     u8261:
 18379  005608  EF55  F02B         	goto	l148
 18380  00560C                     u8260:
 18381  00560C                     
 18382                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 18383  00560C  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18384  00560E  0D04               	mullw	4
 18385  005610  0E01               	movlw	1
 18386  005612  26F3               	addwf	243,f,c
 18387  005614  0E00               	movlw	0
 18388  005616  22F4               	addwfc	244,f,c
 18389  005618  0E5F               	movlw	low _spi_configuration
 18390  00561A  24F3               	addwf	243,w,c
 18391  00561C  6EF6               	movwf	tblptrl,c
 18392  00561E  0EFF               	movlw	high _spi_configuration
 18393  005620  20F4               	addwfc	244,w,c
 18394  005622  6EF7               	movwf	tblptrh,c
 18395  005624                     	if	1	;There are 3 active tblptr bytes
 18396  005624  6AF8               	clrf	tblptru,c
 18397  005626  0E00               	movlw	low (__mediumconst shr (0+16))
 18398  005628  22F8               	addwfc	tblptru,f,c
 18399  00562A                     	endif
 18400  00562A  0008               	tblrd		*
 18401  00562C  CFF5 FFC7          	movff	tablat,4039	;volatile
 18402                           
 18403                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 18404  005630  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18405  005632  0D04               	mullw	4
 18406  005634  0E5F               	movlw	low _spi_configuration
 18407  005636  24F3               	addwf	243,w,c
 18408  005638  6EF6               	movwf	tblptrl,c
 18409  00563A  0EFF               	movlw	high _spi_configuration
 18410  00563C  20F4               	addwfc	244,w,c
 18411  00563E  6EF7               	movwf	tblptrh,c
 18412  005640                     	if	1	;There are 3 active tblptr bytes
 18413  005640  6AF8               	clrf	tblptru,c
 18414  005642  0E00               	movlw	low (__mediumconst shr (0+16))
 18415  005644  22F8               	addwfc	tblptru,f,c
 18416  005646                     	endif
 18417  005646  0008               	tblrd		*
 18418  005648  CFF5 FFC6          	movff	tablat,4038	;volatile
 18419  00564C                     
 18420                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 18421  00564C  0E00               	movlw	0
 18422  00564E  6EC5               	movwf	197,c	;volatile
 18423  005650                     
 18424                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 18425  005650  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18426  005652  0D04               	mullw	4
 18427  005654  0E02               	movlw	2
 18428  005656  26F3               	addwf	243,f,c
 18429  005658  0E00               	movlw	0
 18430  00565A  22F4               	addwfc	244,f,c
 18431  00565C  0E5F               	movlw	low _spi_configuration
 18432  00565E  24F3               	addwf	243,w,c
 18433  005660  6EF6               	movwf	tblptrl,c
 18434  005662  0EFF               	movlw	high _spi_configuration
 18435  005664  20F4               	addwfc	244,w,c
 18436  005666  6EF7               	movwf	tblptrh,c
 18437  005668                     	if	1	;There are 3 active tblptr bytes
 18438  005668  6AF8               	clrf	tblptru,c
 18439  00566A  0E00               	movlw	low (__mediumconst shr (0+16))
 18440  00566C  22F8               	addwfc	tblptru,f,c
 18441  00566E                     	endif
 18442  00566E  0008               	tblrd		*
 18443  005670  CFF5 FFC8          	movff	tablat,4040	;volatile
 18444  005674                     
 18445                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 18446  005674  5004               	movf	SPI_Open@spiUniqueConfiguration^0,w,c
 18447  005676  0D04               	mullw	4
 18448  005678  0E03               	movlw	3
 18449  00567A  26F3               	addwf	243,f,c
 18450  00567C  0E00               	movlw	0
 18451  00567E  22F4               	addwfc	244,f,c
 18452  005680  0E5F               	movlw	low _spi_configuration
 18453  005682  24F3               	addwf	243,w,c
 18454  005684  6EF6               	movwf	tblptrl,c
 18455  005686  0EFF               	movlw	high _spi_configuration
 18456  005688  20F4               	addwfc	244,w,c
 18457  00568A  6EF7               	movwf	tblptrh,c
 18458  00568C                     	if	1	;There are 3 active tblptr bytes
 18459  00568C  6AF8               	clrf	tblptru,c
 18460  00568E  0E00               	movlw	low (__mediumconst shr (0+16))
 18461  005690  22F8               	addwfc	tblptru,f,c
 18462  005692                     	endif
 18463  005692  0008               	tblrd		*
 18464  005694  CFF5 F003          	movff	tablat,??_SPI_Open
 18465  005698  4603               	rlncf	??_SPI_Open^0,f,c
 18466  00569A  4603               	rlncf	??_SPI_Open^0,f,c
 18467  00569C  4603               	rlncf	??_SPI_Open^0,f,c
 18468  00569E  5094               	movf	148,w,c	;volatile
 18469  0056A0  1803               	xorwf	??_SPI_Open^0,w,c
 18470  0056A2  0BF7               	andlw	-9
 18471  0056A4  1803               	xorwf	??_SPI_Open^0,w,c
 18472  0056A6  6E94               	movwf	148,c	;volatile
 18473  0056A8                     
 18474                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 18475  0056A8  8AC6               	bsf	198,5,c	;volatile
 18476  0056AA                     l148:
 18477  0056AA  0012               	return		;funcret
 18478  0056AC                     __end_of_SPI_Open:
 18479                           	opt callstack 0
 18480                           
 18481 ;; *************** function _INTERRUPT_InterruptManager *****************
 18482 ;; Defined at:
 18483 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;		None
 18486 ;; Auto vars:     Size  Location     Type
 18487 ;;		None
 18488 ;; Return value:  Size  Location     Type
 18489 ;;                  1    wreg      void 
 18490 ;; Registers used:
 18491 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18492 ;; Tracked objects:
 18493 ;;		On entry : 0/0
 18494 ;;		On exit  : 0/0
 18495 ;;		Unchanged: 0/0
 18496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18501 ;;Total ram usage:        2 bytes
 18502 ;; Hardware stack levels used:    1
 18503 ;; Hardware stack levels required when called:    3
 18504 ;; This function calls:
 18505 ;;		_ADC_ISR
 18506 ;;		_INT0_ISR
 18507 ;;		_PIN_MANAGER_IOC
 18508 ;;		_TMR2_ISR
 18509 ;; This function is called by:
 18510 ;;		Interrupt level 2
 18511 ;; This function uses a non-reentrant model
 18512 ;;
 18513                           
 18514                           	psect	intcode
 18515  000008                     __pintcode:
 18516                           	opt callstack 0
 18517  000008                     _INTERRUPT_InterruptManager:
 18518                           	opt callstack 18
 18519                           
 18520                           ;incstack = 0
 18521  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 18522  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 18523  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 18524  000012                     
 18525                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 18526  000012  A8F2               	btfss	242,4,c	;volatile
 18527  000014  EF0E  F000         	goto	i2u857_41
 18528  000018  EF10  F000         	goto	i2u857_40
 18529  00001C                     i2u857_41:
 18530  00001C  EF1B  F000         	goto	i2l113
 18531  000020                     i2u857_40:
 18532  000020  A2F2               	btfss	242,1,c	;volatile
 18533  000022  EF15  F000         	goto	i2u858_41
 18534  000026  EF17  F000         	goto	i2u858_40
 18535  00002A                     i2u858_41:
 18536  00002A  EF1B  F000         	goto	i2l113
 18537  00002E                     i2u858_40:
 18538  00002E                     
 18539                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 18540  00002E  EC69  F030         	call	_INT0_ISR	;wreg free
 18541                           
 18542                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 18543  000032  EF58  F000         	goto	i2l123
 18544  000036                     i2l113:
 18545  000036  A6F2               	btfss	242,3,c	;volatile
 18546  000038  EF20  F000         	goto	i2u859_41
 18547  00003C  EF22  F000         	goto	i2u859_40
 18548  000040                     i2u859_41:
 18549  000040  EF2D  F000         	goto	i2l115
 18550  000044                     i2u859_40:
 18551  000044  A0F2               	btfss	242,0,c	;volatile
 18552  000046  EF27  F000         	goto	i2u860_41
 18553  00004A  EF29  F000         	goto	i2u860_40
 18554  00004E                     i2u860_41:
 18555  00004E  EF2D  F000         	goto	i2l115
 18556  000052                     i2u860_40:
 18557  000052                     
 18558                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 18559  000052  EC1C  F030         	call	_PIN_MANAGER_IOC	;wreg free
 18560                           
 18561                           ;mcc_generated_files/interrupt_manager.c: 68:     }
 18562  000056  EF58  F000         	goto	i2l123
 18563  00005A                     i2l115:
 18564  00005A  ACF2               	btfss	242,6,c	;volatile
 18565  00005C  EF32  F000         	goto	i2u861_41
 18566  000060  EF34  F000         	goto	i2u861_40
 18567  000064                     i2u861_41:
 18568  000064  EF58  F000         	goto	i2l122
 18569  000068                     i2u861_40:
 18570  000068                     
 18571                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 18572  000068  AC9D               	btfss	157,6,c	;volatile
 18573  00006A  EF39  F000         	goto	i2u862_41
 18574  00006E  EF3B  F000         	goto	i2u862_40
 18575  000072                     i2u862_41:
 18576  000072  EF46  F000         	goto	i2l118
 18577  000076                     i2u862_40:
 18578  000076  AC9E               	btfss	158,6,c	;volatile
 18579  000078  EF40  F000         	goto	i2u863_41
 18580  00007C  EF42  F000         	goto	i2u863_40
 18581  000080                     i2u863_41:
 18582  000080  EF46  F000         	goto	i2l118
 18583  000084                     i2u863_40:
 18584  000084                     
 18585                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADC_ISR();
 18586  000084  EC06  F02F         	call	_ADC_ISR	;wreg free
 18587                           
 18588                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 18589  000088  EF58  F000         	goto	i2l123
 18590  00008C                     i2l118:
 18591  00008C  A29D               	btfss	157,1,c	;volatile
 18592  00008E  EF4B  F000         	goto	i2u864_41
 18593  000092  EF4D  F000         	goto	i2u864_40
 18594  000096                     i2u864_41:
 18595  000096  EF58  F000         	goto	i2l122
 18596  00009A                     i2u864_40:
 18597  00009A  A29E               	btfss	158,1,c	;volatile
 18598  00009C  EF52  F000         	goto	i2u865_41
 18599  0000A0  EF54  F000         	goto	i2u865_40
 18600  0000A4                     i2u865_41:
 18601  0000A4  EF58  F000         	goto	i2l122
 18602  0000A8                     i2u865_40:
 18603  0000A8                     
 18604                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             TMR2_ISR();
 18605  0000A8  EC35  F02F         	call	_TMR2_ISR	;wreg free
 18606                           
 18607                           ;mcc_generated_files/interrupt_manager.c: 78:         }
 18608  0000AC  EF58  F000         	goto	i2l123
 18609  0000B0                     i2l122:
 18610  0000B0                     i2l123:
 18611  0000B0  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 18612  0000B4  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 18613  0000B8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 18614  0000BA  0011               	retfie		f
 18615  0000BC                     __end_of_INTERRUPT_InterruptManager:
 18616                           	opt callstack 0
 18617                           
 18618 ;; *************** function _TMR2_ISR *****************
 18619 ;; Defined at:
 18620 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 18621 ;; Parameters:    Size  Location     Type
 18622 ;;		None
 18623 ;; Auto vars:     Size  Location     Type
 18624 ;;		None
 18625 ;; Return value:  Size  Location     Type
 18626 ;;                  1    wreg      void 
 18627 ;; Registers used:
 18628 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18629 ;; Tracked objects:
 18630 ;;		On entry : 0/0
 18631 ;;		On exit  : 0/0
 18632 ;;		Unchanged: 0/0
 18633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18638 ;;Total ram usage:        0 bytes
 18639 ;; Hardware stack levels used:    1
 18640 ;; Hardware stack levels required when called:    2
 18641 ;; This function calls:
 18642 ;;		_TMR2_CallBack
 18643 ;; This function is called by:
 18644 ;;		_INTERRUPT_InterruptManager
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           	psect	text76
 18649  005E6A                     __ptext76:
 18650                           	opt callstack 0
 18651  005E6A                     _TMR2_ISR:
 18652                           	opt callstack 18
 18653  005E6A                     
 18654                           ;mcc_generated_files/tmr2.c: 121:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr2.c: 124:     PIR1bits.TMR2IF = 0;
 18655  005E6A  929E               	bcf	158,1,c	;volatile
 18656  005E6C                     
 18657                           ;mcc_generated_files/tmr2.c: 127:     if (++CountCallBack >= 250)
 18658  005E6C  0100               	movlb	0	; () banked
 18659  005E6E  4BF6               	infsnz	TMR2_ISR@CountCallBack& (0+255),f,b	;volatile
 18660  005E70  2BF7               	incf	(TMR2_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 18661  005E72  51F7               	movf	(TMR2_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 18662  005E74  E109               	bnz	i2u825_40
 18663  005E76  0EFA               	movlw	250
 18664  005E78  5DF6               	subwf	TMR2_ISR@CountCallBack& (0+255),w,b	;volatile
 18665  005E7A  A0D8               	btfss	status,0,c
 18666  005E7C  EF42  F02F         	goto	i2u825_41
 18667  005E80  EF44  F02F         	goto	i2u825_40
 18668  005E84                     i2u825_41:
 18669  005E84  EF4B  F02F         	goto	i2l340
 18670  005E88                     i2u825_40:
 18671  005E88                     
 18672                           ; BSR set to: 0
 18673                           ;mcc_generated_files/tmr2.c: 128:     {;mcc_generated_files/tmr2.c: 130:         TMR2_Ca
      +                          llBack();
 18674  005E88  EC4C  F02F         	call	_TMR2_CallBack	;wreg free
 18675  005E8C                     
 18676                           ;mcc_generated_files/tmr2.c: 133:         CountCallBack = 0;
 18677  005E8C  0E00               	movlw	0
 18678  005E8E  0100               	movlb	0	; () banked
 18679  005E90  6FF7               	movwf	(TMR2_ISR@CountCallBack+1)& (0+255),b	;volatile
 18680  005E92  0E00               	movlw	0
 18681  005E94  6FF6               	movwf	TMR2_ISR@CountCallBack& (0+255),b	;volatile
 18682  005E96                     i2l340:
 18683                           
 18684                           ; BSR set to: 0
 18685  005E96  0012               	return		;funcret
 18686  005E98                     __end_of_TMR2_ISR:
 18687                           	opt callstack 0
 18688                           
 18689 ;; *************** function _TMR2_CallBack *****************
 18690 ;; Defined at:
 18691 ;;		line 137 in file "mcc_generated_files/tmr2.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;		None
 18694 ;; Auto vars:     Size  Location     Type
 18695 ;;		None
 18696 ;; Return value:  Size  Location     Type
 18697 ;;                  1    wreg      void 
 18698 ;; Registers used:
 18699 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18700 ;; Tracked objects:
 18701 ;;		On entry : 0/0
 18702 ;;		On exit  : 0/0
 18703 ;;		Unchanged: 0/0
 18704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18709 ;;Total ram usage:        0 bytes
 18710 ;; Hardware stack levels used:    1
 18711 ;; Hardware stack levels required when called:    1
 18712 ;; This function calls:
 18713 ;;		Absolute function
 18714 ;;		_TMR2_DefaultInterruptHandler
 18715 ;;		_led_inter
 18716 ;; This function is called by:
 18717 ;;		_TMR2_ISR
 18718 ;; This function uses a non-reentrant model
 18719 ;;
 18720                           
 18721                           	psect	text77
 18722  005E98                     __ptext77:
 18723                           	opt callstack 0
 18724  005E98                     _TMR2_CallBack:
 18725                           	opt callstack 18
 18726  005E98                     
 18727                           ;mcc_generated_files/tmr2.c: 141:     if(TMR2_InterruptHandler)
 18728  005E98  0101               	movlb	1	; () banked
 18729  005E9A  51B6               	movf	_TMR2_InterruptHandler& (0+255),w,b
 18730  005E9C  11B7               	iorwf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 18731  005E9E  B4D8               	btfsc	status,2,c
 18732  005EA0  EF54  F02F         	goto	i2u805_41
 18733  005EA4  EF56  F02F         	goto	i2u805_40
 18734  005EA8                     i2u805_41:
 18735  005EA8  EF62  F02F         	goto	i2l344
 18736  005EAC                     i2u805_40:
 18737  005EAC                     
 18738                           ; BSR set to: 1
 18739                           ;mcc_generated_files/tmr2.c: 142:     {;mcc_generated_files/tmr2.c: 143:         TMR2_In
      +                          terruptHandler();
 18740  005EAC  D802               	call	i2u806_48
 18741  005EAE  EF62  F02F         	goto	i2u806_49
 18742  005EB2                     i2u806_48:
 18743  005EB2  0005               	push	
 18744  005EB4  6EFA               	movwf	pclath,c
 18745  005EB6  51B6               	movf	_TMR2_InterruptHandler& (0+255),w,b
 18746  005EB8  6EFD               	movwf	tosl,c
 18747  005EBA  51B7               	movf	(_TMR2_InterruptHandler+1)& (0+255),w,b
 18748  005EBC  6EFE               	movwf	tosh,c
 18749  005EBE  6AFF               	clrf	tosu,c
 18750  005EC0  50FA               	movf	pclath,w,c
 18751  005EC2  0012               	return		;indir
 18752  005EC4                     i2u806_49:
 18753  005EC4                     i2l344:
 18754  005EC4  0012               	return		;funcret
 18755  005EC6                     __end_of_TMR2_CallBack:
 18756                           	opt callstack 0
 18757                           
 18758 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 18759 ;; Defined at:
 18760 ;;		line 151 in file "mcc_generated_files/tmr2.c"
 18761 ;; Parameters:    Size  Location     Type
 18762 ;;		None
 18763 ;; Auto vars:     Size  Location     Type
 18764 ;;		None
 18765 ;; Return value:  Size  Location     Type
 18766 ;;                  1    wreg      void 
 18767 ;; Registers used:
 18768 ;;		None
 18769 ;; Tracked objects:
 18770 ;;		On entry : 0/0
 18771 ;;		On exit  : 0/0
 18772 ;;		Unchanged: 0/0
 18773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18778 ;;Total ram usage:        0 bytes
 18779 ;; Hardware stack levels used:    1
 18780 ;; This function calls:
 18781 ;;		Nothing
 18782 ;; This function is called by:
 18783 ;;		_TMR2_Initialize
 18784 ;;		_TMR2_CallBack
 18785 ;; This function uses a non-reentrant model
 18786 ;;
 18787                           
 18788                           	psect	text78
 18789  0060EA                     __ptext78:
 18790                           	opt callstack 0
 18791  0060EA                     _TMR2_DefaultInterruptHandler:
 18792                           	opt callstack 18
 18793  0060EA  0012               	return		;funcret
 18794  0060EC                     __end_of_TMR2_DefaultInterruptHandler:
 18795                           	opt callstack 0
 18796                           
 18797 ;; *************** function _led_inter *****************
 18798 ;; Defined at:
 18799 ;;		line 41 in file "main.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; This function calls:
 18820 ;;		Nothing
 18821 ;; This function is called by:
 18822 ;;		_main
 18823 ;;		_TMR2_CallBack
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text79
 18828  00609E                     __ptext79:
 18829                           	opt callstack 0
 18830  00609E                     _led_inter:
 18831                           	opt callstack 18
 18832  00609E                     
 18833                           ;main.c: 48:     teste = 42;
 18834  00609E  0E00               	movlw	0
 18835  0060A0  0100               	movlb	0	; () banked
 18836  0060A2  6FF1               	movwf	(_teste+1)& (0+255),b
 18837  0060A4  0E2A               	movlw	42
 18838  0060A6  6FF0               	movwf	_teste& (0+255),b
 18839  0060A8                     
 18840                           ; BSR set to: 0
 18841  0060A8  0012               	return		;funcret
 18842  0060AA                     __end_of_led_inter:
 18843                           	opt callstack 0
 18844                           
 18845 ;; *************** function _PIN_MANAGER_IOC *****************
 18846 ;; Defined at:
 18847 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 18848 ;; Parameters:    Size  Location     Type
 18849 ;;		None
 18850 ;; Auto vars:     Size  Location     Type
 18851 ;;		None
 18852 ;; Return value:  Size  Location     Type
 18853 ;;                  1    wreg      void 
 18854 ;; Registers used:
 18855 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18856 ;; Tracked objects:
 18857 ;;		On entry : 0/0
 18858 ;;		On exit  : 0/0
 18859 ;;		Unchanged: 0/0
 18860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;Total ram usage:        0 bytes
 18866 ;; Hardware stack levels used:    1
 18867 ;; Hardware stack levels required when called:    2
 18868 ;; This function calls:
 18869 ;;		_IOCB4_ISR
 18870 ;; This function is called by:
 18871 ;;		_INTERRUPT_InterruptManager
 18872 ;; This function uses a non-reentrant model
 18873 ;;
 18874                           
 18875                           	psect	text80
 18876  006038                     __ptext80:
 18877                           	opt callstack 0
 18878  006038                     _PIN_MANAGER_IOC:
 18879                           	opt callstack 18
 18880  006038                     
 18881                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 18882  006038  010F               	movlb	15	; () banked
 18883  00603A  A95A               	btfss	90,4,b	;volatile
 18884  00603C  EF22  F030         	goto	i2u822_41
 18885  006040  EF24  F030         	goto	i2u822_40
 18886  006044                     i2u822_41:
 18887  006044  EF26  F030         	goto	i2l6914
 18888  006048                     i2u822_40:
 18889  006048                     
 18890                           ; BSR set to: 15
 18891                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 18892  006048  EC63  F02F         	call	_IOCB4_ISR	;wreg free
 18893  00604C                     i2l6914:
 18894                           
 18895                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 18896  00604C  90F2               	bcf	242,0,c	;volatile
 18897  00604E  0012               	return		;funcret
 18898  006050                     __end_of_PIN_MANAGER_IOC:
 18899                           	opt callstack 0
 18900                           
 18901 ;; *************** function _IOCB4_ISR *****************
 18902 ;; Defined at:
 18903 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 18904 ;; Parameters:    Size  Location     Type
 18905 ;;		None
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;		None
 18908 ;; Return value:  Size  Location     Type
 18909 ;;                  1    wreg      void 
 18910 ;; Registers used:
 18911 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18912 ;; Tracked objects:
 18913 ;;		On entry : 0/0
 18914 ;;		On exit  : 0/0
 18915 ;;		Unchanged: 0/0
 18916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18921 ;;Total ram usage:        0 bytes
 18922 ;; Hardware stack levels used:    1
 18923 ;; Hardware stack levels required when called:    1
 18924 ;; This function calls:
 18925 ;;		Absolute function
 18926 ;;		_IOCB4_DefaultInterruptHandler
 18927 ;; This function is called by:
 18928 ;;		_PIN_MANAGER_IOC
 18929 ;; This function uses a non-reentrant model
 18930 ;;
 18931                           
 18932                           	psect	text81
 18933  005EC6                     __ptext81:
 18934                           	opt callstack 0
 18935  005EC6                     _IOCB4_ISR:
 18936                           	opt callstack 18
 18937  005EC6                     
 18938                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 18939  005EC6  0100               	movlb	0	; () banked
 18940  005EC8  51FC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18941  005ECA  11FD               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18942  005ECC  B4D8               	btfsc	status,2,c
 18943  005ECE  EF6B  F02F         	goto	i2u801_41
 18944  005ED2  EF6D  F02F         	goto	i2u801_40
 18945  005ED6                     i2u801_41:
 18946  005ED6  EF79  F02F         	goto	i2l51
 18947  005EDA                     i2u801_40:
 18948  005EDA                     
 18949                           ; BSR set to: 0
 18950                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 18951  005EDA  D802               	call	i2u802_48
 18952  005EDC  EF79  F02F         	goto	i2u802_49
 18953  005EE0                     i2u802_48:
 18954  005EE0  0005               	push	
 18955  005EE2  6EFA               	movwf	pclath,c
 18956  005EE4  51FC               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 18957  005EE6  6EFD               	movwf	tosl,c
 18958  005EE8  51FD               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 18959  005EEA  6EFE               	movwf	tosh,c
 18960  005EEC  6AFF               	clrf	tosu,c
 18961  005EEE  50FA               	movf	pclath,w,c
 18962  005EF0  0012               	return		;indir
 18963  005EF2                     i2u802_49:
 18964  005EF2                     i2l51:
 18965  005EF2  0012               	return		;funcret
 18966  005EF4                     __end_of_IOCB4_ISR:
 18967                           	opt callstack 0
 18968                           
 18969 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 18970 ;; Defined at:
 18971 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 18972 ;; Parameters:    Size  Location     Type
 18973 ;;		None
 18974 ;; Auto vars:     Size  Location     Type
 18975 ;;		None
 18976 ;; Return value:  Size  Location     Type
 18977 ;;                  1    wreg      void 
 18978 ;; Registers used:
 18979 ;;		None
 18980 ;; Tracked objects:
 18981 ;;		On entry : 0/0
 18982 ;;		On exit  : 0/0
 18983 ;;		Unchanged: 0/0
 18984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18989 ;;Total ram usage:        0 bytes
 18990 ;; Hardware stack levels used:    1
 18991 ;; This function calls:
 18992 ;;		Nothing
 18993 ;; This function is called by:
 18994 ;;		_PIN_MANAGER_Initialize
 18995 ;;		_IOCB4_ISR
 18996 ;; This function uses a non-reentrant model
 18997 ;;
 18998                           
 18999                           	psect	text82
 19000  0060EC                     __ptext82:
 19001                           	opt callstack 0
 19002  0060EC                     _IOCB4_DefaultInterruptHandler:
 19003                           	opt callstack 18
 19004  0060EC  0012               	return		;funcret
 19005  0060EE                     __end_of_IOCB4_DefaultInterruptHandler:
 19006                           	opt callstack 0
 19007                           
 19008 ;; *************** function _INT0_ISR *****************
 19009 ;; Defined at:
 19010 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 19011 ;; Parameters:    Size  Location     Type
 19012 ;;		None
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;		None
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  1    wreg      void 
 19017 ;; Registers used:
 19018 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19019 ;; Tracked objects:
 19020 ;;		On entry : 0/0
 19021 ;;		On exit  : 0/0
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19028 ;;Total ram usage:        0 bytes
 19029 ;; Hardware stack levels used:    1
 19030 ;; Hardware stack levels required when called:    2
 19031 ;; This function calls:
 19032 ;;		_INT0_CallBack
 19033 ;; This function is called by:
 19034 ;;		_INTERRUPT_InterruptManager
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           
 19038                           	psect	text83
 19039  0060D2                     __ptext83:
 19040                           	opt callstack 0
 19041  0060D2                     _INT0_ISR:
 19042                           	opt callstack 18
 19043  0060D2                     
 19044                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 19045  0060D2  92F2               	bcf	242,1,c	;volatile
 19046  0060D4                     
 19047                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 19048  0060D4  EC7A  F02F         	call	_INT0_CallBack	;wreg free
 19049  0060D8  0012               	return		;funcret
 19050  0060DA                     __end_of_INT0_ISR:
 19051                           	opt callstack 0
 19052                           
 19053 ;; *************** function _INT0_CallBack *****************
 19054 ;; Defined at:
 19055 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 19056 ;; Parameters:    Size  Location     Type
 19057 ;;		None
 19058 ;; Auto vars:     Size  Location     Type
 19059 ;;		None
 19060 ;; Return value:  Size  Location     Type
 19061 ;;                  1    wreg      void 
 19062 ;; Registers used:
 19063 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19064 ;; Tracked objects:
 19065 ;;		On entry : 0/0
 19066 ;;		On exit  : 0/0
 19067 ;;		Unchanged: 0/0
 19068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19073 ;;Total ram usage:        0 bytes
 19074 ;; Hardware stack levels used:    1
 19075 ;; Hardware stack levels required when called:    1
 19076 ;; This function calls:
 19077 ;;		Absolute function
 19078 ;;		_INT0_DefaultInterruptHandler
 19079 ;; This function is called by:
 19080 ;;		_INT0_ISR
 19081 ;; This function uses a non-reentrant model
 19082 ;;
 19083                           
 19084                           	psect	text84
 19085  005EF4                     __ptext84:
 19086                           	opt callstack 0
 19087  005EF4                     _INT0_CallBack:
 19088                           	opt callstack 18
 19089  005EF4                     
 19090                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 19091  005EF4  0101               	movlb	1	; () banked
 19092  005EF6  51B8               	movf	_INT0_InterruptHandler& (0+255),w,b
 19093  005EF8  11B9               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 19094  005EFA  B4D8               	btfsc	status,2,c
 19095  005EFC  EF82  F02F         	goto	i2u803_41
 19096  005F00  EF84  F02F         	goto	i2u803_40
 19097  005F04                     i2u803_41:
 19098  005F04  EF90  F02F         	goto	i2l287
 19099  005F08                     i2u803_40:
 19100  005F08                     
 19101                           ; BSR set to: 1
 19102                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 19103  005F08  D802               	call	i2u804_48
 19104  005F0A  EF90  F02F         	goto	i2u804_49
 19105  005F0E                     i2u804_48:
 19106  005F0E  0005               	push	
 19107  005F10  6EFA               	movwf	pclath,c
 19108  005F12  51B8               	movf	_INT0_InterruptHandler& (0+255),w,b
 19109  005F14  6EFD               	movwf	tosl,c
 19110  005F16  51B9               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 19111  005F18  6EFE               	movwf	tosh,c
 19112  005F1A  6AFF               	clrf	tosu,c
 19113  005F1C  50FA               	movf	pclath,w,c
 19114  005F1E  0012               	return		;indir
 19115  005F20                     i2u804_49:
 19116  005F20                     i2l287:
 19117  005F20  0012               	return		;funcret
 19118  005F22                     __end_of_INT0_CallBack:
 19119                           	opt callstack 0
 19120                           
 19121 ;; *************** function _INT0_DefaultInterruptHandler *****************
 19122 ;; Defined at:
 19123 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 19124 ;; Parameters:    Size  Location     Type
 19125 ;;		None
 19126 ;; Auto vars:     Size  Location     Type
 19127 ;;		None
 19128 ;; Return value:  Size  Location     Type
 19129 ;;                  1    wreg      void 
 19130 ;; Registers used:
 19131 ;;		None
 19132 ;; Tracked objects:
 19133 ;;		On entry : 0/0
 19134 ;;		On exit  : 0/0
 19135 ;;		Unchanged: 0/0
 19136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19141 ;;Total ram usage:        0 bytes
 19142 ;; Hardware stack levels used:    1
 19143 ;; This function calls:
 19144 ;;		Nothing
 19145 ;; This function is called by:
 19146 ;;		_EXT_INT_Initialize
 19147 ;;		_INT0_CallBack
 19148 ;; This function uses a non-reentrant model
 19149 ;;
 19150                           
 19151                           	psect	text85
 19152  0060EE                     __ptext85:
 19153                           	opt callstack 0
 19154  0060EE                     _INT0_DefaultInterruptHandler:
 19155                           	opt callstack 18
 19156  0060EE  0012               	return		;funcret
 19157  0060F0                     __end_of_INT0_DefaultInterruptHandler:
 19158                           	opt callstack 0
 19159                           
 19160 ;; *************** function _ADC_ISR *****************
 19161 ;; Defined at:
 19162 ;;		line 139 in file "mcc_generated_files/adc.c"
 19163 ;; Parameters:    Size  Location     Type
 19164 ;;		None
 19165 ;; Auto vars:     Size  Location     Type
 19166 ;;		None
 19167 ;; Return value:  Size  Location     Type
 19168 ;;                  1    wreg      void 
 19169 ;; Registers used:
 19170 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 19171 ;; Tracked objects:
 19172 ;;		On entry : 0/0
 19173 ;;		On exit  : 0/0
 19174 ;;		Unchanged: 0/0
 19175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19180 ;;Total ram usage:        0 bytes
 19181 ;; Hardware stack levels used:    1
 19182 ;; Hardware stack levels required when called:    1
 19183 ;; This function calls:
 19184 ;;		Absolute function
 19185 ;;		_ADC_DefaultInterruptHandler
 19186 ;; This function is called by:
 19187 ;;		_INTERRUPT_InterruptManager
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           	psect	text86
 19192  005E0C                     __ptext86:
 19193                           	opt callstack 0
 19194  005E0C                     _ADC_ISR:
 19195                           	opt callstack 19
 19196  005E0C                     
 19197                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 19198  005E0C  9C9E               	bcf	158,6,c	;volatile
 19199  005E0E                     
 19200                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 19201  005E0E  0101               	movlb	1	; () banked
 19202  005E10  51BA               	movf	_ADC_InterruptHandler& (0+255),w,b
 19203  005E12  11BB               	iorwf	(_ADC_InterruptHandler+1)& (0+255),w,b
 19204  005E14  B4D8               	btfsc	status,2,c
 19205  005E16  EF0F  F02F         	goto	i2u823_41
 19206  005E1A  EF11  F02F         	goto	i2u823_40
 19207  005E1E                     i2u823_41:
 19208  005E1E  EF1D  F02F         	goto	i2l233
 19209  005E22                     i2u823_40:
 19210  005E22                     
 19211                           ; BSR set to: 1
 19212                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 19213  005E22  D802               	call	i2u824_48
 19214  005E24  EF1D  F02F         	goto	i2u824_49
 19215  005E28                     i2u824_48:
 19216  005E28  0005               	push	
 19217  005E2A  6EFA               	movwf	pclath,c
 19218  005E2C  51BA               	movf	_ADC_InterruptHandler& (0+255),w,b
 19219  005E2E  6EFD               	movwf	tosl,c
 19220  005E30  51BB               	movf	(_ADC_InterruptHandler+1)& (0+255),w,b
 19221  005E32  6EFE               	movwf	tosh,c
 19222  005E34  6AFF               	clrf	tosu,c
 19223  005E36  50FA               	movf	pclath,w,c
 19224  005E38  0012               	return		;indir
 19225  005E3A                     i2u824_49:
 19226  005E3A                     i2l233:
 19227  005E3A  0012               	return		;funcret
 19228  005E3C                     __end_of_ADC_ISR:
 19229                           	opt callstack 0
 19230                           
 19231 ;; *************** function _ADC_DefaultInterruptHandler *****************
 19232 ;; Defined at:
 19233 ;;		line 154 in file "mcc_generated_files/adc.c"
 19234 ;; Parameters:    Size  Location     Type
 19235 ;;		None
 19236 ;; Auto vars:     Size  Location     Type
 19237 ;;		None
 19238 ;; Return value:  Size  Location     Type
 19239 ;;                  1    wreg      void 
 19240 ;; Registers used:
 19241 ;;		None
 19242 ;; Tracked objects:
 19243 ;;		On entry : 0/0
 19244 ;;		On exit  : 0/0
 19245 ;;		Unchanged: 0/0
 19246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;Total ram usage:        0 bytes
 19252 ;; Hardware stack levels used:    1
 19253 ;; This function calls:
 19254 ;;		Nothing
 19255 ;; This function is called by:
 19256 ;;		_ADC_Initialize
 19257 ;;		_ADC_ISR
 19258 ;; This function uses a non-reentrant model
 19259 ;;
 19260                           
 19261                           	psect	text87
 19262  0060F0                     __ptext87:
 19263                           	opt callstack 0
 19264  0060F0                     _ADC_DefaultInterruptHandler:
 19265                           	opt callstack 19
 19266  0060F0  0012               	return		;funcret
 19267  0060F2                     __end_of_ADC_DefaultInterruptHandler:
 19268                           	opt callstack 0
 19269                           
 19270                           	psect	text88
 19271  000000                     __ptext88:
 19272                           	opt callstack 0
 19273  000000                     
 19274                           	psect	rparam
 19275  0000                     
 19276                           	psect	temp
 19277  00005B                     btemp:
 19278                           	opt callstack 0
 19279  00005B                     	ds	1
 19280  0000                     int$flags	set	btemp
 19281  0000                     wtemp8	set	btemp+1
 19282  0000                     ttemp5	set	btemp+1
 19283  0000                     ttemp6	set	btemp+4
 19284  0000                     ttemp7	set	btemp+8
 19285                           tosu	equ	0xFFF
 19286                           tosh	equ	0xFFE
 19287                           tosl	equ	0xFFD
 19288                           stkptr	equ	0xFFC
 19289                           pclatu	equ	0xFFB
 19290                           pclath	equ	0xFFA
 19291                           pcl	equ	0xFF9
 19292                           tblptru	equ	0xFF8
 19293                           tblptrh	equ	0xFF7
 19294                           tblptrl	equ	0xFF6
 19295                           tablat	equ	0xFF5
 19296                           prodh	equ	0xFF4
 19297                           prodl	equ	0xFF3
 19298                           indf0	equ	0xFEF
 19299                           postinc0	equ	0xFEE
 19300                           postdec0	equ	0xFED
 19301                           preinc0	equ	0xFEC
 19302                           plusw0	equ	0xFEB
 19303                           fsr0h	equ	0xFEA
 19304                           fsr0l	equ	0xFE9
 19305                           wreg	equ	0xFE8
 19306                           indf1	equ	0xFE7
 19307                           postinc1	equ	0xFE6
 19308                           postdec1	equ	0xFE5
 19309                           preinc1	equ	0xFE4
 19310                           plusw1	equ	0xFE3
 19311                           fsr1h	equ	0xFE2
 19312                           fsr1l	equ	0xFE1
 19313                           bsr	equ	0xFE0
 19314                           indf2	equ	0xFDF
 19315                           postinc2	equ	0xFDE
 19316                           postdec2	equ	0xFDD
 19317                           preinc2	equ	0xFDC
 19318                           plusw2	equ	0xFDB
 19319                           fsr2h	equ	0xFDA
 19320                           fsr2l	equ	0xFD9
 19321                           status	equ	0xFD8


Data Sizes:
    Strings     155
    Constant    3536
    Data        9
    BSS         414
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160    124     160
    BANK1           256      4     199
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[4]), STR_16(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_38(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_20(CODE[4]), STR_16(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ticks(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), ticks(BANK0[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2415_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), ticks(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), ticks(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), ticks(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK0[2]), stoa@nuls(COMRAM[7]), ticks(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> steste(BANK2[100]), string(BANK1[100]), string_rpm(BANK2[100]), STR_2(CODE[11]), 
		 -> STR_1(CODE[33]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_inter(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led_inter(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  190686
                           _SPI_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                            ___aldiv
                            ___flmul
                           ___xxtofl
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   98128
                                            114 BANK0     10     0     10
                                              0 BANK1      4     4      0
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   97013
                                             92 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   95976
                                             78 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95149
                                             68 COMRAM    10     4      6
                                             56 BANK0     36    36      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                             11 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             29 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31747
                                             53 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              8 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                              9 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   31303
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      46
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   23819
                                             11 COMRAM     6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   26560
                                             33 COMRAM    18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   24434
                                             11 COMRAM    22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   29702
                                             17 COMRAM    23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   26704
                                             11 COMRAM     6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   15812
                                              7 COMRAM     4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    7580
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    7862
                                              5 COMRAM     2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    7438
                                              3 COMRAM     2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      98
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0      98
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0      88
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                            _ADC_ISR
                           _INT0_ISR
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _led_inter *
 ---------------------------------------------------------------------------------
 (13) _led_inter                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR2_SetInterruptHandler
   ___aldiv
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _led_inter *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C8      10       78.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100      4      C7       8       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     289       6        0.0%
DATA                 0      0     289       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 27 14:57:11 2020

                           _SPI_Initialize 607A           __end_of_TMR2_SetInterruptHandler 60B4  
                             ___fldiv@aexp 001B                               ___fldiv@bexp 001A  
                             ___fldiv@sign 0013                                _SSPSTATbits 000FC7  
                                       l43 5B8E                                         l54 60BC  
                                       l86 5FC2                                         l89 609C  
                             ___awdiv@sign 0008                        ___wmul@multiplicand 0005  
       __size_of_IOCB4_SetInterruptHandler 000A                                __CFG_BORV$3 000000  
                          _timer0ReloadVal 00FA                 ?_IOCB4_SetInterruptHandler 0003  
                             __CFG_CP0$OFF 000000                               __CFG_CP1$OFF 000000  
                             __CFG_CP2$OFF 000000                               __CFG_CP3$OFF 000000  
                                      l211 5FE6                                        l108 60E4  
                                      l144 608A                                        l154 600C  
                                      l148 56AA                                        l236 60D0  
                                      l156 601A                                        l157 601E  
                                      l254 5F76                                        l319 6004  
                                      l512 5E0A                                        l505 4828  
                                      l290 60C6                                        l450 5E68  
                                      l347 60B2                                        l508 485A  
                                      l462 6036                                        l296 6078  
                                      l472 5B02                                        l552 46F2  
                                      l561 4AF0                                        l483 57D6  
                                      l459 315E                                        l580 5F4C  
                                      l476 5ABA                                        l468 5C14  
                                      l653 54CE                                        l709 2154  
                                      l821 4578                                        l805 4478  
                                      l479 6064                                        l671 31FE  
                                      l727 1990                                        l807 4480  
                                      l656 5510                                        l816 4528  
                                      l665 5A20                                        l673 3206  
                                      l753 1D28                                        l817 4570  
                                      l841 3474                                        l905 15A2  
                                      l658 554A                                        l826 3B6E  
                                      l850 3512                                        l691 343C  
                                      l843 347C                                        l836 3D36  
                                      l828 3B76                                        l925 09BC  
                                      l864 36AE                                        l880 01B6  
                                      l961 5F9C                                        l866 3710  
                                      l787 3D6E                                        l796 3EBC  
                                      l789 3D76                                        l957 58A0  
                                      l798 3F20                                        l958 58A8  
                             __CFG_CPB$OFF 000000                                        _PR2 000FCB  
                             __CFG_CPD$OFF 000000                 ??_INT0_SetInterruptHandler 0005  
                          _timer1ReloadVal 01B4                                        _abs 5C16  
                                      _pad 548A                            __end_of_ADC_ISR 5E3C  
                                      _rpm 00F2            __end_of_ADC_SetInterruptHandler 60D2  
                             ___awmod@sign 0008                            _TMR2_Initialize 5FE8  
                                      tosl 000FFD                                        wreg 000FE8  
                            _INT0_CallBack 5EF4                               ___flmul@aexp 001E  
                             ___flmul@bexp 0023               ?_ADC_DefaultInterruptHandler 0001  
                             ___flmul@sign 001D                               ___flmul@temp 0028  
                             ___flmul@prod 0024                            ?_lcd_set_cursor 0008  
                             ___fltol@exp1 000C                         __size_of_IOCB4_ISR 002E  
                                     l1040 4E32                                       ?_abs 0015  
                                     l1220 5754                                       l1205 55FA  
                                     l1231 503C                                       l1226 4FF6  
                                     l1075 43F6                                       l1235 5D38  
                                     l1406 522A                                       l1088 49BE  
                                     l1192 5488                                       l1416 52FA  
                                     l1409 52DA                                       l1506 245E  
                                     l1258 4F38                                       l1515 252E  
                                     l1531 5B48                                       l1516 251C  
                                     l1630 406C                                       l1623 4010  
                                     l1703 5D70                                       l1711 5A72  
                                     l1543 2DD8                                       l1616 3F78  
                                     l1800 5CC8                                       l1545 2C38  
                                     l1650 5C54                                       l1554 2C7E  
                                     l1490 2332                                       l1642 513A  
                                     l1619 40D4                                       l1491 22F8  
                                     l1811 4D26                                       l1732 53C4  
                                     l1740 5BD2                                       l1556 2CF6  
                                     l1548 2BFC                                       l1557 2CE4  
                                     l1717 5D00                                       l1582 28D0  
                                     l1750 5DD8                                       l1743 60E8  
                                     l1647 5C4C                                       l1575 26DA  
                                     l1399 520A                                       l1592 2A00  
                                     l1584 2948                                       l1816 4D06  
                                     l1681 426E                                       l1585 2936  
                                     l1489 2344                                       l1762 5DA6  
                                     l1498 2614                                       l1690 3A7A  
                                     l1579 2A3E                                       l1756 59C4  
                                     l1781 5908                                       l1678 4266  
                                     l1766 4C16                                       l1687 3B36  
                                     l7000 2DFE                                       l1776 5900  
                                     l1697 5C90                                       l7010 2E30  
                                     l7002 2E08                                       l1794 5966  
                                     l7100 2FF2                                       l7020 2E62  
                                     l7012 2E3A                                       l7004 2E12  
                                     l1789 595E                                       l6310 5ABC  
                                     l7110 3024                                       l7102 2FFC  
                                     l7030 2E94                                       l7022 2E6C  
                                     l7014 2E44                                       l7006 2E1C  
                                     ?_pad 0013                                       l6312 5AD2  
                                     l7200 47D4                                       l7120 3056  
                                     l7112 302E                                       l7104 3006  
                                     l7040 2EC6                                       l7032 2E9E  
                                     l7024 2E76                                       l7016 2E4E  
                                     l7008 2E26                                       l8000 486E  
                                     l6330 5AB8                                       l6322 5A74  
                                     l7210 49C0                                       l7130 3088  
                                     l7122 3060                                       l7114 3038  
                                     l7106 3010                                       l7050 2EF8  
                                     l7042 2ED0                                       l7034 2EA8  
                                     l7026 2E80                                       l7018 2E58  
                                     l8010 48DE                                       l8002 488E  
                                     l7300 3F9E                                       l6316 5AD8  
                                     l6324 5A8A                                       l7204 47F0  
                                     l7220 4A62                                       l7212 49C4  
                                     l7140 30BA                                       l7132 3092  
                                     l7124 306A                                       l7116 3042  
                                     l7108 301A                                       l7060 2F2A  
                                     l7052 2F02                                       l7044 2EDA  
                                     l7036 2EB2                                       l7028 2E8A  
                                     l8020 4956                                       l8012 48E6  
                                     l8004 4892                                       l8100 2BC8  
                                     l7310 3FF8                                       l6318 5B00  
                                     l7206 4818                                       l7222 4A8E  
                                     l7214 49D8                                       l7150 30EC  
                                     l7142 30C4                                       l7134 309C  
                                     l7126 3074                                       l7118 304C  
                                     l7070 2F5C                                       l7062 2F34  
                                     l7054 2F0C                                       l7046 2EE4  
                                     l7038 2EBC                                       l8022 4968  
                                     l8014 48FA                                       l8006 48A0  
                                     l8110 2C24                                       l8102 2BD8  
                                     l7320 405C                                       l7312 3FFA  
                                     l7304 3FB2                                       l6328 5A90  
                                     l7208 4846                                       l7224 4ABA  
                                     l7216 4A12                                       l7160 311E  
                                     l7152 30F6                                       l7144 30CE  
                                     l7136 30A6                                       l7128 307E  
                                     l7080 2F8E                                       l7072 2F66  
                                     l7064 2F3E                                       l7056 2F16  
                                     l7048 2EEE                                       l8016 4908  
                                     l8024 496E                                       l8008 48C0  
                                     l8120 2C64                                       l8112 2C26  
                                     l8104 2BEC                                       l8040 2A6C  
                                     l8032 2A40                                       l8200 26C4  
                                     l9000 3BA6                                       l7250 4D2C  
                                     l7330 40B4                                       l7322 407A  
                                     l7314 4006                                       l7306 3FBA  
                                     l7218 4A16                                       l7226 4ABE  
                                     l7170 3152                                       l7162 3128  
                                     l7154 3100                                       l7146 30D8  
                                     l7138 30B0                                       l7090 2FC0  
                                     l7082 2F98                                       l7074 2F70  
                                     l7066 2F48                                       l7058 2F20  
                                     l8026 497E                                       l8018 4936  
                                     l8130 2CA0                                       l8122 2C6E  
                                     l8114 2C36                                       l8106 2BFA  
                                     l8050 2AA6                                       l8042 2A7C  
                                     l8034 2A4C                                       l8210 270E  
                                     l8202 26CA                                       l9010 3C38  
                                     l9002 3BB0                                       l7260 4D6C  
                                     l7252 4D3A                                       l7332 40C2  
                                     l7324 407C                                       l7316 4042  
                                     l7308 3FC6                                       l7180 4732  
                                     l7172 46F4                                       l7164 3132  
                                     l7156 310A                                       l7148 30E2  
                                     l7092 2FCA                                       l7084 2FA2  
                                     l7076 2F7A                                       l7068 2F52  
                                     l9100 4110                                       l8028 499E  
                                     l8140 2D12                                       l8132 2CAE  
                                     l8124 2C7C                                       l8116 2C48  
                                     l8108 2C06                                       l8060 2AD2  
                                     l8052 2AAC                                       l8044 2A8C  
                                     l8036 2A5A                                       l8220 275E  
                                     l8212 271A                                       l8204 26EA  
                                     l8300 5B04                                       l9020 3D00  
                                     l9004 3BB6                                       l9012 3C9C  
                                     l6710 60C8                                       l7270 4DAA  
                                     l7262 4D70                                       l7254 4D4A  
                                     l7334 40C4                                       l7326 4080  
                                     l7318 404E                                       l7190 4776  
                                     l7182 4748                                       l7174 4716  
                                     l7166 3142                                       l7158 3114  
                                     l7094 2FD4                                       l7086 2FAC  
                                     l7078 2F84                                       l9110 4168  
                                     l9102 4148                                       l8310 53D8  
                                     l8150 2D7E                                       l8142 2D20  
                                     l8134 2CDC                                       l8118 2C5E  
                                     l8126 2C8E                                       l8070 2B0C  
                                     l8062 2AE2                                       l8054 2AB2  
                                     l8046 2A8E                                       l8038 2A5C  
                                     l8230 27A0                                       l8222 276A  
                                     l8214 2724                                       l8206 26FA  
                                     l8302 5B14                                       l9014 3CAE  
                                     l9022 3D0E                                       l9006 3C2C  
                                     l9030 344E                                       l6712 60BE  
                                     l6800 5F4E                                       l7280 4DF2  
                                     l7272 4DB8                                       l7264 4D80  
                                     l7256 4D4E                                       l7248 4D28  
                                     l7328 40A4                                       l5680 6034  
                                     l6720 5BF0                                       l7192 478C  
                                     l7184 4750                                       l7176 471E  
                                     l7168 314C                                       l7096 2FDE  
                                     l7088 2FB6                                       l9120 41E6  
                                     l9112 4170                                       l9104 414C  
                                     l7600 5320                                       l8320 53FE  
                                     l8312 53E0                                       l8160 2DCC  
                                     l8152 2D98                                       l8144 2D4A  
                                     l8128 2C9C                                       l8072 2B22  
                                     l8064 2AF2                                       l8056 2AC0  
                                     l8048 2A96                                       l8240 2802  
                                     l8232 27AC                                       l8224 2776  
                                     l8216 273A                                       l9016 3CCC  
                                     l9008 3C32                                       l9040 34C2  
                                     l9032 3468                                       l9200 0230  
                                     l6802 5F50                                       l6714 60AA  
                                     l7282 4DFC                                       l7274 4DC2  
                                     l7266 4D96                                       l7258 4D5C  
                                     l5674 6022                                       l6730 6050  
                                     l6722 5C0C                                       l7194 4794  
                                     l7186 4758                                       l7178 4726  
                                     l7098 2FE8                                       l9114 4178  
                                     l7602 532A                                       l7610 5B90  
                                     l8330 5436                                       l8322 5406  
                                     l8314 53E4                                       l8306 53C6  
                                     l8162 2DCE                                       l8154 2DB4  
                                     l8138 2D06                                       l8146 2D4E  
                                     l8090 2B76                                       l8074 2B32  
                                     l8082 2B52                                       l8066 2AF4  
                                     l8058 2AC2                                       l8410 4FB6  
                                     l8402 4F3A                                       l8250 2898  
                                     l8242 280E                                       l8234 27BC  
                                     l8226 2784                                       l8218 2746  
                                     l8170 2616                                       l9018 3CE6  
                                     l9050 3506                                       l9042 34CC  
                                     l9034 3492                                       l9026 343E  
                                     l9210 02B6                                       l9202 023E  
                                     l6708 60B4                                       l6804 5F58  
                                     l7276 4DE0                                       l7268 4D9E  
                                     l7284 4E02                                       l7292 3F24  
                                     l5676 602C                                       l7196 47A0  
                                     l7188 476E                                       l6820 5E46  
                                     l9124 4226                                       l9116 41AE  
                                     l9108 4152                                       l7604 5348  
                                     l7612 5B9C                                       l7620 5D7E  
                                     l8340 5462                                       l8332 543C  
                                     l8324 5418                                       l8316 53F2  
                                     l8308 53CA                                       l8156 2DB8  
                                     l8148 2D68                                       l8092 2B90  
                                     l8084 2B62                                       l8076 2B3A  
                                     l8068 2AFC                                       l8420 503A  
                                     l8412 4FC4                                       l8404 4F68  
                                     l8260 28EE                                       l8252 28B6  
                                     l8244 282A                                       l8236 27D6  
                                     l8228 2790                                       l8180 2652  
                                     l8172 2622                                       l7700 2282  
                                     l9140 4B28                                       l8500 524A  
                                     l9060 3592                                       l9044 34D2  
                                     l9036 349A                                       l9028 344C  
                                     l9220 032A                                       l9204 025E  
                                     l9212 02C8                                       l6750 5B7E  
                                     l6742 5B4A                                       l6806 5F70  
                                     l7286 4E12                                       l7278 4DF0  
                                     l7294 3F34                                       l5678 602E  
                                     l6726 5C12                                       l6718 5BD4  
                                     l7198 47BC                                       l6822 5E54  
                                     l9126 4238                                       l7606 537E  
                                     l7614 5BAE                                       l7622 5D82  
                                     l8334 5452                                       l8326 5420  
                                     l8342 5468                                       l8318 53FA  
                                     l8350 554C                                       l8158 2DC6  
                                     l8094 2BA0                                       l8086 2B62  
                                     l8078 2B3E                                       l8414 4FD6  
                                     l8406 4F78                                       l8270 2958  
                                     l8262 28F2                                       l8254 28C0  
                                     l8246 2854                                       l8238 27E6  
                                     l8190 2684                                       l8182 2662  
                                     l8174 2630                                       l7702 2286  
                                     l7710 2296                                       l9150 4BDA  
                                     l9142 4B36                                       l9134 4AF2  
                                     l8510 52C2                                       l8502 5252  
                                     l9070 35D4                                       l9062 35A4  
                                     l9054 3546                                       l9046 34DA  
                                     l9038 34BA                                       l9310 0958  
                                     l9302 08A6                                       l9230 03DC  
                                     l9222 0364                                       l9214 02EE  
                                     l9206 026C                                       l6760 60E2  
                                     l6752 5B80                                       l6744 5B66  
                                     l6808 5F72                                       l6920 5FA6  
                                     l7288 4E22                                       l7296 3F42  
                                     l4984 6008                                       l6840 5DDA  
                                     l6832 578E                                       l6824 5E56  
                                     l8520 5A68                                       l9128 424A  
                                     l7616 5BB2                                       l7624 5D9A  
                                     l8344 5478                                       l8336 545A  
                                     l8328 5428                                       l8360 5578  
                                     l8352 5550                                       l8096 2BB0  
                                     l8416 4FE4                                       l8408 4FA6  
                                     l8280 29BA                                       l8272 2964  
                                     l8264 2900                                       l8256 28CE  
                                     l8248 288A                                       l8192 2692  
                                     l8184 2668                                       l8176 2632  
                                     l8424 5D02                                       l7720 2306  
                                     l7712 229A                                       l7704 228A  
                                     l7640 2182                                       l7632 2156  
                                     l8440 4E88                                       l8432 4E34  
                                     l9144 4B68                                       l9136 4B1C  
                                     l8512 52D4                                       l8504 5266  
                                     l9080 36A0                                       l9056 3558  
                                     l9064 35B8                                       l9048 34F6  
                                     l9072 3632                                       l9400 0EDA  
                                     l9320 0A06                                       l9312 098C  
                                     l9304 08D4                                       l9240 0466  
                                     l9224 0384                                       l9216 02F6  
                                     l9232 03EE                                       l9160 0106  
                                     l6770 5FC4                                       l6754 5B8C  
                                     l6746 5B6C                                       l6762 607A  
                                     l6930 5FBA                                       l6922 5FAA  
                                     l7298 3F88                                       l6842 5DFE  
                                     l6834 579A                                       l6826 5756  
                                     l6818 5E3E                                       l8522 5A6C  
                                     l8514 5A22                                       l7618 5D72  
                                     l8530 59E6                                       l8346 5480  
                                     l8338 545C                                       l8370 55B0  
                                     l8362 5580                                       l8354 555E  
                                     l8098 2BC0                                       l8418 5034  
                                     l8290 2A22                                       l8282 29CE  
                                     l8274 2972                                       l8266 292E  
                                     l8258 28E0                                       l8194 2694  
                                     l8186 2678                                       l8178 2642  
                                     l8426 5D18                                       l7802 253E  
                                     l7810 2594                                       l7730 2330  
                                     l7722 2312                                       l7714 22C4  
                                     l7706 228E                                       l7650 21BC  
                                     l7642 2192                                       l7634 2162  
                                     l8442 4E8A                                       l8434 4E4A  
                                     l8610 15D4                                       l8602 15A4  
                                     l9146 4B86                                       l8506 5274  
                                     l9082 36BC                                       l9074 364E  
                                     l9066 35C8                                       l9410 0FAE  
                                     l9402 0F10                                       l9322 0A4E  
                                     l9250 050E                                       l9242 049A  
                                     l9234 0412                                       l9226 0392  
                                     l9218 0304                                       l9162 010A  
                                     l9154 00C0                                       l6772 5FD8  
                                     l6748 5B7C                                       l6764 6086  
                                     l6780 5FF2                                       l6932 5FBE  
                                     l6924 5FAE                                       l6916 5F9E  
                                     l6860 45CE                                       l6844 457A  
                                     l6836 57B4                                       l6828 5766  
                                     l8516 5A26                                       l9092 40D6  
                                     l8532 59F2                                       l8540 3160  
                                     l8380 55EA                                       l8372 55C6  
                                     l8364 5592                                       l8356 5566  
                                     l8292 2A24                                       l8284 29E8  
                                     l8276 299C                                       l8196 26A4  
                                     l8188 267E                                       l8428 5D28  
                                     l7820 25E6                                       l7812 25A4  
                                     l7804 254A                                       l7740 2386  
                                     l7732 2352                                       l7724 2316  
                                     l7716 22E0                                       l7708 2292  
                                     l7660 21EA                                       l7652 21C2  
                                     l7644 21A2                                       l7636 2170  
                                     l8444 4E9A                                       l7900 3926  
                                     l7628 5CCA                                       l8700 199C  
                                     l8620 162A                                       l8612 15F8  
                                     l8604 15AE                                       l9148 4B98  
                                     l8508 52A2                                       l9084 36C2  
                                     l9076 366C                                       l9068 35CE  
                                     l9500 154C                                       l9308 0946  
                                     l9260 05FC                                       l9252 0544  
                                     l9244 04C0                                       l9236 0422  
                                     l9180 013C                                       l9172 0130  
                                     l9164 0116                                       l9156 00E6  
                                     l6774 5FDA                                       l6790 6076  
                                     l6766 6088                                       l6782 5FF4  
                                     l6926 5FB2                                       l6918 5FA2  
                                     l6870 46A6                                       l6862 4678  
                                     l6854 45CA                                       l6846 4582  
                                     l6838 57BC                                       l8518 5A3A  
                                     l9094 40EA                                       l8534 59F6  
                                     l8526 59C6                                       l8550 31D8  
                                     l8542 3180                                       l8382 55F2  
                                     l8374 55CE                                       l8366 559A  
                                     l8358 556A                                       l8390 56EA  
                                     l8286 2A04                                       l8294 2A2A  
                                     l8278 29A0                                       l8198 26B4  
                                     l7830 2604                                       l7822 25EC  
                                     l7814 25B4                                       l7806 2558  
                                     l7750 23C0                                       l7742 2394  
                                     l7734 2362                                       l7726 2324  
                                     l7718 22F0                                       l7670 221E  
                                     l7662 21EC                                       l7654 21D4  
                                     l7646 21A4                                       l7638 2172  
                                     l8470 4F18                                       l8454 4EC4  
                                     l8446 4E9E                                       l8438 4E5E  
                                     l7902 3946                                       l8710 19DC  
                                     l8630 1658                                       l8622 163C  
                                     l8614 1602                                       l8606 15BE  
                                     l9086 36D2                                       l9078 3686  
                                     l9430 10E4                                       l9422 106E  
                                     l9414 0FE6                                       l9406 0F30  
                                     l9350 0C0C                                       l9342 0B84  
                                     l9334 0B0E                                       l9326 0A86  
                                     l9318 09D0                                       l9270 06B8  
                                     l9262 0632                                       l9254 057A  
                                     l9246 04F2                                       l9238 0456  
                                     l9166 0118                                       l9190 01A4  
                                     l9158 00F4                                       l9510 156A  
                                     l6960 5674                                       l6952 55FE  
                                     l6768 608C                                       l6792 5F22  
                                     l6784 6000                                       l6776 5FE8  
                                     l6928 5FB6                                       l6872 46A8  
                                     l6864 4688                                       l6848 45C6  
                                     l9096 40EE                                       l7840 5498  
                                     l8536 59FC                                       l8528 59DA  
                                     l8560 3234                                       l8552 31F2  
                                     l8544 31A8                                       l8376 55D4  
                                     l8368 55A2                                       l8392 5718  
                                     l8296 2A2E                                       l8288 2A14  
                                     l7824 25EE                                       l7816 25D4  
                                     l7808 2592                                       l7760 242C  
                                     l7752 23C2                                       l7744 23A2  
                                     l7728 2326                                       l7680 225A  
                                     l7664 21FC                                       l7672 2226  
                                     l7656 21D6                                       l7648 21AC  
                                     l8472 4F28                                       l8464 4EEC  
                                     l8456 4ECE                                       l8448 4EAC  
                                     l7920 3AEE                                       l7912 3A2E  
                                     l7904 399C                                       l8800 1E4A  
                                     l8720 1A38                                       l8712 1A12  
                                     l8640 16CC                                       l8624 1648  
                                     l8632 165E                                       l8616 160A  
                                     l8608 15CC                                       l8480 5166  
                                     l9088 36E8                                       l9512 1590  
                                     l9504 1558                                       l9440 11A2  
                                     l9432 111A                                       l9424 1094  
                                     l9416 101C                                       l9408 0F66  
                                     l9352 0C42                                       l9360 0C92  
                                     l9344 0BBA                                       l9336 0B34  
                                     l9328 0ABC                                       l9280 0752  
                                     l9272 06DE                                       l9264 0668  
                                     l9256 05C4                                       l9192 01C4  
                                     l9184 0142                                       l9176 0136  
                                     l9168 012A                                       l9600 38CC  
                                     l6962 56A8                                       l6954 560C  
                                     l6786 6066                                       l6794 5F2E  
                                     l6778 5FF0                                       l6874 46B8  
                                     l6866 4694                                       l9098 40F2  
                                     l7850 54EE                                       l7842 54AC  
                                     l8570 32D4                                       l8562 323C  
                                     l8554 320E                                       l8546 31C8  
                                     l8378 55DA                                       l8394 5728  
                                     l8386 56AC                                       l7826 25F4  
                                     l7818 25D8                                       l7770 2484  
                                     l7762 242E                                       l7754 23CC  
                                     l7746 23AE                                       l7738 2376  
                                     l7690 226E                                       l7682 225E  
                                     l7674 2236                                       l7666 220C  
                                     l7658 21DC                                       l8466 4EF8  
                                     l8458 4ED8                                       l7922 3B16  
                                     l7914 3A6A                                       l7906 39B0  
                                     l8810 1E7E                                       l8802 1E4E  
                                     l8730 1A7C                                       l8722 1A4A  
                                     l8714 1A1A                                       l8706 19AE  
                                     l8642 16E8                                       l8634 1684  
                                     l8650 1732                                       l8626 1650  
                                     l8618 161C                                       l8490 51D0  
                                     l8482 516E                                       l7834 5C92  
                                     l9442 11D8                                       l9362 0CC8  
                                     l9370 0D14                                       l9354 0C7A  
                                     l9290 0810                                       l9282 0788  
                                     l9274 0704                                       l9194 01C6  
                                     l9530 584E                                       l9602 38F2  
                                     l6956 564C                                       l6788 606A  
                                     l6796 5F30                                       l6868 4696  
                                     l6876 46BA                                       l7596 52FC  
                                     l7852 54F2                                       l7844 54BA  
                                     l7860 5C16                                       l8580 3390  
                                     l8572 32DA                                       l8564 3246  
                                     l8556 3220                                       l8548 31D6  
                                     l8396 574C                                       l8388 56DA  
                                     l7828 2602                                       l7780 24B2  
                                     l7764 243E                                       l7748 23B2  
                                     l7756 23D2                                       l7692 2272  
                                     l7684 2262                                       l7676 2248  
                                     l7668 221C                                       l8468 4F08  
                                     l7924 3B26                                       l7908 39BE  
                                     l7916 3A9E                                       l8820 1F1C  
                                     l8812 1E82                                       l8804 1E54  
                                     l8740 1AC6                                       l8732 1A94  
                                     l8724 1A58                                       l8708 19C0  
                                     l8716 1A1E                                       l8660 17BC  
                                     l8652 1758                                       l8644 1700  
                                     l8628 1654                                       l8900 3D38  
                                     l8492 51F0                                       l8484 5182  
                                     l8476 513C                                       l7932 590A  
                                     l9460 1328                                       l9444 1200  
                                     l9452 1284                                       l9372 0D3A  
                                     l9380 0D84                                       l9364 0D00  
                                     l9356 0C86                                       l9292 0824  
                                     l9284 07BE                                       l9196 01EC  
                                     l9188 014E                                       l9532 585C  
                                     l9540 4C34                                       l6958 5650  
                                     l6798 5F48                                       l7942 5D3A  
                                     l7598 530E                                       l7854 551E  
                                     l7846 54C6                                       l7838 548A  
                                     l7862 5C30                                       l8590 33DE  
                                     l8582 33AA                                       l8566 324C  
                                     l8574 333E                                       l8558 322E  
                                     l8398 5752                                       l7782 24C0  
                                     l7774 2498                                       l7790 24DE  
                                     l7758 23F8                                       l7766 244E  
                                     l7694 2276                                       l7686 2266  
                                     l7678 2256                                       l7870 50C4  
                                     l7918 3ADA                                       l8830 1F7A  
                                     l8806 1E5A                                       l8814 1E88  
                                     l8822 1F20                                       l8742 1ADA  
                                     l8750 1BD0                                       l8734 1AA6  
                                     l8726 1A5C                                       l8718 1A26  
                                     l8670 17F2                                       l8646 170A  
                                     l8638 16BA                                       l8910 3DA6  
                                     l8902 3D46                                       l8494 51F2  
                                     l8486 5190                                       l8478 5148  
                                     l9470 13B6                                       l9454 12BA  
                                     l9446 1210                                       l9438 116C  
                                     l9382 0DBA                                       l9390 0E06  
                                     l9374 0D70                                       l9294 083C  
                                     l9198 0222                                       l9534 5882  
                                     l9550 4C72                                       l6992 2DDA  
                                     l7856 5532                                       l7848 54DA  
                                     l7960 42A6                                       l7952 4270  
                                     l8592 33F0                                       l8576 3358  
                                     l8584 33B8                                       l8568 32CE  
                                     l7784 24C8                                       l7776 24A2  
                                     l7768 2474                                       l7792 24EC  
                                     l7696 227A                                       l7688 226A  
                                     l7872 50D0                                       l7864 503E  
                                     l8840 1FB8                                       l8832 1F8A  
                                     l8824 1F3E                                       l8816 1EE0  
                                     l8808 1E6C                                       l8760 1C9C  
                                     l8752 1BEE                                       l8744 1B3E  
                                     l8728 1A6E                                       l8736 1AAE  
                                     l8680 18BC                                       l8656 178E  
                                     l8920 3DD8                                       l8912 3DAC  
                                     l8904 3D48                                       l8496 5204  
                                     l8488 51A2                                       l7928 5C56  
                                     l7936 5940                                       l9472 13CE  
                                     l9480 141E                                       l9456 12F0  
                                     l9448 1248                                       l9392 0E2C  
                                     l9384 0DF2                                       l9296 084A  
                                     l9528 5846                                       l9560 4CF6  
                                     l9552 4C82                                       l9544 4C3C  
                                     l9536 4C18                                       l6994 2DE4  
                                     l7946 5F78                                       l7970 4302  
                                     l7962 42B4                                       l7954 4274  
                                     l8594 33FC                                       l8586 33CA  
                                     l8578 3376                                       l7794 24F0  
                                     l7786 24CC                                       l7778 24B0  
                                     l7698 227E                                       l7882 5132  
                                     l7866 505E                                       l7890 58AA  
                                     l8850 1FEE                                       l8842 1FC8  
                                     l8834 1F8E                                       l8826 1F5A  
                                     l8818 1F14                                       l8770 1D14  
                                     l8762 1CAC                                       l8754 1C22  
                                     l8746 1B96                                       l8738 1AB6  
                                     l8690 193E                                       l8682 18F0  
                                     l8674 1828                                       l8658 17A0  
                                     l8930 3E7A                                       l8922 3DDE  
                                     l8914 3DB8                                       l8906 3D62  
                                     l8498 522C                                       l7938 5952  
                                     l9482 1454                                       l9474 13DC  
                                     l9458 1318                                       l9466 136A  
                                     l9394 0E78                                       l9298 087A  
                                     l9562 4D0E                                       l9554 4CA6  
                                     l9546 4C5A                                       l9538 4C2C  
                                     l9570 5DB2                                       l6996 2DEA  
                                     l7948 5F94                                       l7980 436C  
                                     l7972 430A                                       l7964 42D4  
                                     l7956 4282                                       l8596 3404  
                                     l8588 33D8                                       l7796 24FE  
                                     l7788 24DC                                       l7868 509C  
                                     l7876 50DC                                       l8860 204A  
                                     l8852 1FFA                                       l8844 1FD0  
                                     l8836 1F9E                                       l8828 1F6C  
                                     l8780 1DCA                                       l8772 1D20  
                                     l8764 1CBC                                       l8756 1C54  
                                     l8748 1BCA                                       l8692 1950  
                                     l8684 18F8                                       l8676 185C  
                                     l8668 17D8                                       l8940 3EE2  
                                     l8932 3E94                                       l8924 3DE4  
                                     l8916 3DBE                                       l8908 3D9E  
                                     l9484 148A                                       l9468 1390  
                                     l9556 4CBA                                       l9564 4D1E  
                                     l9548 4C66                                       l9580 372C  
                                     l6998 2DF4                                       l7990 43B6  
                                     l7982 438C                                       l7974 431E  
                                     l7966 42D8                                       l7958 42A2  
                                     l8598 3414                                       l7798 2514  
                                     l7878 50EE                                       l7886 5968  
                                     l7894 58E0                                       l8870 2094  
                                     l8854 2000                                       l8862 2050  
                                     l8846 1FDE                                       l8838 1FB0  
                                     l8790 1E14                                       l8782 1DDC  
                                     l8774 1D44                                       l8766 1CF0  
                                     l8758 1C6A                                       l8694 1962  
                                     l8678 1862                                       l8686 192A  
                                     l8942 3EF2                                       l8934 3EAE  
                                     l8918 3DC6                                       l8926 3E42  
                                     l8950 440A                                       l9486 14B2  
                                     l9494 1504                                       l9398 0EB4  
                                     l9558 4CC8                                       l9590 37F8  
                                     l9582 3758                                       l9574 3712  
                                     l7992 43D6                                       l7984 438E  
                                     l7976 432C                                       l7968 42E4  
                                     l7888 5978                                       l7896 58F2  
                                     l8880 20C4                                       l8872 20A0  
                                     l8864 2062                                       l8856 2026  
                                     l8848 1FE6                                       l8792 1E24  
                                     l8784 1DEA                                       l8776 1DA8  
                                     l8768 1D00                                       l8696 196A  
                                     l8688 193A                                       l8936 3ECA  
                                     l8944 3EF8                                       l8928 3E5C  
                                     l8960 4448                                       l8952 4412  
                                     l9496 152A                                       l9488 14C2  
                                     l9568 5DA8                                       l9592 3820  
                                     l9584 3784                                       l9576 3722  
                                     l7986 43A0                                       l7978 433E  
                                     l8890 211E                                       l8874 20A8  
                                     l8866 207C                                       l8858 2042  
                                     l8794 1E28                                       l8778 1DB6  
                                     l8786 1DF2                                       l8698 1984  
                                     l8938 3EDC                                       l8970 44BA  
                                     l8962 4456                                       l8954 4424  
                                     l9498 1538                                       l9674 0176  
                                     l9594 3846                                       l9586 37B0  
                                     l9578 3728                                       l9676 4198  
                                     l7988 43A6                                       l7996 485C  
                                     l8892 212E                                       l8884 20F8  
                                     l8876 20B8                                       l8868 2082  
                                     l8796 1E2E                                       l8788 1E06  
                                     l8980 450A                                       l8972 44D8  
                                     l8956 442C                                       l8948 43F8  
                                     l9596 3872                                       l9588 37B2  
                                     l7998 4860                                       l8894 2134  
                                     l8886 210A                                       l8878 20BE  
                                     l8798 1E3A                                       l8974 44E4  
                                     l8966 44A2                                       l8958 4440  
                                     l8990 3B38                                       l9598 38A0  
                                     STR_1 FF63                                       l8888 2116  
                                     l8984 453A                                       l8976 4502  
                                     l8968 44B6                                       l8992 3B46  
                                     STR_2 FFA6                                       STR_3 FF98  
                                     l8986 454E                                       l8978 4506  
                                     l8994 3B48                                       STR_4 FF84  
                                     STR_5 FFB1                                       l8988 4552  
                                     l8996 3B62                                       STR_6 FFBA  
                                     STR_7 FFCA                                       l8998 3B9E  
                                     _LATA 000F89                                       _LATB 000F8A  
                                     _LATC 000F8B                                       _LATD 000F8C  
                                     _LATE 000F8D                                       u8100 57D6  
                                     u8101 57D2                                       u4910 601A  
                                     u8110 5DFE                                       u4911 6016  
                                     u8111 5DFA                                       u9000 2306  
                                     u6185 602A                                       u9001 2302  
                                     u6186 602C                                       u8130 4678  
                                     u9010 2324                                       i2l51 5EF2  
                                     u8131 4674                                       u9011 2320  
                                     u8300 476E                                       u8140 46A6  
                                     u8124 4658                                       u9100 2474  
                                     u9020 2344                                       u8301 476A  
                                     u8141 46A2                                       u8125 4652  
                                     u9101 2470                                       u9021 2340  
                                     u8310 478C                                       u8150 46B8  
                                     u8070 5E68                                       u9110 2484  
                                     u9030 2352                                       i2l47 604E  
                                     u8311 4788                                       u8151 46B4  
                                     u8071 5E64                                       u9111 2480  
                                     u9031 234E                                       u7440 5AD2  
                                     u8320 47D4                                       u8160 46F2  
                                     u8080 578A                                       u9200 2558  
                                     u9120 24B0                                       u9040 2362  
                                     i2l57 60EC                                       u7441 5ACE  
                                     u8321 47D0                                       u8161 46EE  
                                     u8081 5786                                       u9201 2554  
                                     u9121 24AC                                       u9041 235E  
                                     u8410 4D3A                                       u7450 5A8A  
                                     u8330 47EC                                       u8090 57B4  
                                     u9210 2592                                       u9130 24C0  
                                     u9050 2394                                       u8411 4D36  
                                     u7451 5A86                                       u8331 47E8  
                                     u8091 57B0                                       u9211 258E  
                                     u9131 24BC                                       u9051 2390  
                                     u8260 560C                                       u8420 4D5C  
                                     u8500 3FF4                                       u8340 4818  
                                     u9300 54BA                                       u9220 25A4  
                                     u9140 24DC                                       u9060 23A2  
                                     u8261 5608                                       u8421 4D58  
                                     u8501 3FF0                                       u8341 4814  
                                     u9301 54B6                                       u9221 25A0  
                                     u9141 24D8                                       u9061 239E  
                                     u8430 4D96                                       u8510 403E  
                                     u8350 4846                                       u9310 5510  
                                     u9230 25B4                                       u9150 24EC  
                                     u9070 23C0                                       u8431 4D92  
                                     u8511 403A                                       u8351 4842  
                                     u9311 550C                                       u9231 25B0  
                                     u9151 24E8                                       u9071 23BC  
                                     u8440 4DB8                                       u8520 405C  
                                     u8280 4716                                       u8360 4A40  
                                     u9320 551E                                       u9240 25D4  
                                     u9160 24FE                                       u9080 23F8  
                                     u9400 512A                                       u8441 4DB4  
                                     u8521 4058                                       u8281 4712  
                                     u9321 551A                                       u9241 25D0  
                                     u9161 24FA                                       u9081 23F4  
                                     u8450 4DE0                                       u8530 406C  
                                     u8290 4748                                       u8370 4A62  
                                     u9330 5C30                                       u9250 25E6  
                                     u9170 2514                                       u9090 243E  
                                     u9410 59B2                                       u8451 4DDC  
                                     u8531 4068                                       u8291 4744  
                                     u8371 4A5E                                       u9331 5C2C  
                                     u9251 25E2                                       u9171 2510  
                                     u9091 243A                                       u8460 4E12  
                                     u8540 407A                                       u8380 4AE0  
                                     u9260 2602                                       u9180 252A  
                                     u9340 507E                                       u9500 3A2A  
                                     u9420 59C4                                       u8461 4E0E  
                                     u8541 4076                                       u9261 25FE  
                                     u9181 2526                                       u9501 3A26  
                                     u9421 59C0                                       u8550 40B4  
                                     u8470 3F34                                       u8390 4AF0  
                                     u9190 253E                                       u9350 509C  
                                     u9510 3A4E                                       u9430 58DA  
                                     u9270 5CC2                                       u8551 40B0  
                                     u8471 3F30                                       u8391 4AEC  
                                     u8367 4A36                                       u9191 253A  
                                     u9351 5098                                       u9431 58D4  
                                     u9271 5CBC                                       u8560 40C2  
                                     u8480 3F42                                       u8800 530E  
                                     u9360 50C4                                       u9520 3A6A  
                                     u9440 58DC                                       u9280 5CC4  
                                     u9600 5952                                       u8561 40BE  
                                     u8481 3F3E                                       u8801 530A  
                                     u9361 50C0                                       u9345 5074  
                                     u9521 3A66                                       u9417 59A8  
                                     u9601 594E                                       u8490 3F9E  
                                     u9610 5D6A                                       u8810 5320  
                                     u9290 5498                                       u9370 50EE  
                                     u9530 3ABE                                       u9450 58F2  
                                     u8491 3F9A                                       u8387 4AD6  
                                     u9611 5D64                                       u8811 531C  
                                     u9291 5494                                       u9371 50EA  
                                     u9515 3A44                                       u9451 58EE  
                                     u9620 5D6C                                       u8820 5348  
                                     u9700 486E                                       u8900 2192  
                                     u9540 3ADA                                       u9460 396E  
                                     u8821 5344                                       u9701 486A  
                                     u8901 218E                                       u9541 3AD6  
                                     u8830 537E                                       u9630 4282  
                                     u9710 48A0                                       u8910 21D4  
                                     u9390 5128                                       u9550 3B16  
                                     u9470 399C                                       u8831 537A  
                                     u9631 427E                                       u9711 489C  
                                     u8911 21D0                                       u9391 5122  
                                     u9551 3B12                                       u9535 3AB4  
                                     u9471 3998                                       u8840 5BD2  
                                     u9640 42B4                                       u9720 48DE  
                                     u9800 2AD2                                       u8920 21EA  
                                     u9480 39BE                                       u9560 5C8A  
                                     u8841 5BCE                                       u9641 42B0  
                                     u9721 48DA                                       u9801 2ACE  
                                     u8921 21E6                                       u9385 5100  
                                     u9481 39BA                                       u9465 3964  
                                     u9561 5C84                                       u8850 5D9A  
                                     u9730 4908                                       u9810 2AE2  
                                     u8930 21FC                                       u9570 5C8C  
                                     u8851 5D96                                       u9651 42DE  
                                     u9731 4904                                       u9811 2ADE  
                                     u8931 21F8                                       u7980 5BF0  
                                     u9660 4302                                       u9740 4936  
                                     u9900 2C9C                                       u9820 2B22  
                                     u8940 220C                                       u8860 5CFA  
                                     u9580 593A                                       u7981 5BEC  
                                     u9661 42FE                                       u9741 4932  
                                     u9901 2C98                                       u9821 2B1E  
                                     u8941 2208                                       u8861 5CF4  
                                     u9581 5934                                       u7990 5C0C  
                                     u9670 432C                                       u9750 497E  
                                     u9910 2CAE                                       u9830 2B62  
                                     u8950 2248                                       u8870 5CFC  
                                     u9590 593C                                       u7991 5C08  
                                     u9671 4328                                       u9751 497A  
                                     u9911 2CAA                                       u9831 2B5E  
                                     u8951 2244                                       u9495 39D2  
                                     u9680 436C                                       u9920 2CDC  
                                     u9840 2BD8                                       u9760 2A5A  
                                     u8960 2256                                       u8880 2170  
                                     u9496 39DC                                       u9681 4368  
                                     u9921 2CD8                                       u9841 2BD4  
                                     u9761 2A56                                       u8961 2252  
                                     u8881 216C                                       u9497 39EC  
                                     u9690 43B6                                       u9930 2CF2  
                                     u9850 2BFA                                       u9770 2A6C  
                                     u8970 22C4                                       u8890 2182  
                                     u9691 43B2                                       u9931 2CEE  
                                     u9851 2BF6                                       u9771 2A68  
                                     u8971 22C0                                       u8891 217E  
                                     u9940 2D06                                       u9860 2C24  
                                     u9780 2A7C                                       u8980 22DC  
                                     u9941 2D02                                       u9861 2C20  
                                     u9781 2A78                                       u8981 22D6  
                                     u9950 2D20                                       u9870 2C48  
                                     u9790 2AC0                                       u8990 22DE  
                                     u9951 2D1C                                       u9871 2C44  
                                     u9791 2ABC                                       u9960 2D68  
                                     u9880 2C5E                                       u9961 2D64  
                                     u9881 2C5A                                       u9970 2D98  
                                     u9890 2C7C                                       _TMR2 000FCC  
                                     u9971 2D94                                       u9891 2C78  
                                     u9980 2DC6                                       u9981 2DC2  
                                     u9990 2630                                       u9991 262C  
                                     _WPUB 000F5B                                       abs@a 0015  
                                     _dbuf 0164                                       _atoi 40D6  
                                     _ctoa 59C6                                       _main 3712  
                                     _dtoa 3160                                       _font F193  
                                     _prec 0057                                       _otoa 3D38  
                                     _nout 00EA                                       pad@i 001A  
                                     pad@p 0017                                       fsr1h 000FE2  
                                     fsr2h 000FDA                                       indf1 000FE7  
                                     indf2 000FDF                                       fsr1l 000FE1  
                                     pad@w 001C                                       fsr2l 000FD9  
                                     _stoa 43F8                                       btemp 005B  
                                     _utoa 3B38                                       _xtoa 343E  
                            ___fpclassifyf 503E                                       prodh 000FF4  
                                     prodl 000FF3                                       start 00BC  
                            __CFG_IESO$OFF 000000                            ___fldiv@new_exp 0014  
                   __end_of_SPI_Initialize 608C                               _tolower$2485 000F  
                            lcd_fill@width 0010                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000000                                      ??_abs 0017  
                                    ??_pad 0019                    __end_of_TMR0_Initialize 5F78  
                         __end_of_INT0_ISR 60DA             __size_of_OSCILLATOR_Initialize 0012  
            __end_of_OSCILLATOR_Initialize 609E                              ___fltol@sign1 000B  
                          __end_of___aldiv 4E34                            __end_of___aodiv 43F8  
                                    ?_atoi 000A                                      ?_ctoa 001E  
                          __end_of___fladd 2616                                      ?_main 0001  
                                    ?_dtoa 001E                            __end_of___aomod 49C0  
                          __end_of___fldiv 2DDA                            __end_of___awdiv 548A  
                          __end_of___flneg 5D3A                                      STR_10 FFBE  
                                    STR_11 FFD2                                      STR_20 FFCE  
                                    STR_14 FFC6                                      STR_16 FFC6  
                                    STR_32 FFE9                                      STR_25 FFC7  
                                    STR_41 FFEC                                      STR_34 FFE9  
                                    STR_18 FFCE                                      STR_43 FFEC  
                                    STR_36 FFEF                            __end_of___awmod 55FC  
                                    STR_29 FFCF                                      STR_53 FFDB  
                                    STR_61 FFD6                                      STR_38 FFEF  
                                    STR_46 FFDA                                      STR_63 FFD6  
                                    STR_71 FFF2                                      STR_48 FFDA  
                                    STR_56 FFF5                                      STR_73 FFF2  
                                    STR_58 FFF5                                      STR_83 FFDF  
                                    STR_91 FFE2                                      STR_68 FFD7  
                                    STR_76 FFDE                                      STR_93 FFE2  
                                    STR_78 FFDE                                      STR_86 FFF8  
                                    STR_95 FFC2                                      STR_88 FFF8  
                          __end_of___flmul 2A40                                      STR_97 FFC2  
                                    ?_otoa 001E                            __end_of___flsub 5B4A  
                          __end_of___fltol 4F3A          __end_of_IOCB4_SetInterruptHandler 60BE  
                                    ?_stoa 000C                                      u10000 2642  
                                    u10001 263E                                      u10010 2652  
                                    u10011 264E                                      u10100 2900  
                                    u10020 2692                                      u10101 28FC  
                                    u10021 268E                                      u10110 292E  
                                    u10030 26A4                                      u10111 292A  
                                    u10031 26A0                                      ?_utoa 001E  
                                    u10200 5418                                      u10120 2944  
                                    u10040 26B4                                      u11000 1C54  
                                    u10201 5414                                      u10121 2940  
                                    u10041 26B0                                      u11001 1C50  
                                    u10210 5436                                      u10130 2958  
                                    u10050 26EA                                      u11010 1C9C  
                                    u10211 5432                                      u10131 2954  
                                    u10051 26E6                                      u11011 1C98  
                                    u10220 5452                                      u10300 56DA  
                                    u10140 2972                                      u10060 26FA  
                                    u11100 1E6C                                      u11020 1CAC  
                                    u10221 544E                                      u10301 56D6  
                                    u10141 296E                                      u10061 26F6  
                                    u11101 1E68                                      u11021 1CA8  
                                    u10230 5478                                      u10310 5718  
                                    u10150 29BA                                      u10070 2874  
                                    u11110 1F3E                                      u11030 1D14  
                                    u10231 5474                                      u10311 5714  
                                    u10151 29B6                                      u11111 1F3A  
                                    u11031 1D10                                      u10240 555E  
                                    u10320 574C                                      u10160 29E8  
                                    u10080 28CE                                      u10400 4E7E  
                                    u11200 20F2                                      u11120 1F5A  
                                    u11040 1DB6                                      u12000 06DE  
                                    u10241 555A                                      u10321 5748  
                                    u10161 29E4                                      u10081 28CA  
                                    u11201 20EC                                      u11121 1F56  
                                    u11041 1DB2                                      u12001 06DA  
                                    u10250 5578                                      u10330 4F68  
                                    u10170 2A22                                      u10090 28EE  
                                    u10410 4EAC                                      u11210 20F4  
                                    u11130 1F6C                                      u11050 1DCA  
                                    u12010 0704                                      u10251 5574  
                                    u10331 4F64                                      u10171 2A1E  
                                    u10091 28EA                                      u10075 286A  
                                    u10411 4EA8                                      u11131 1F68  
                                    u11051 1DC6                                      u12011 0700  
                                    u10180 53D8                                      u10260 5592  
                                    u10340 4FA6                                      u10420 4EC0  
                                    u11220 210A                                      u11140 1F7A  
                                    u11060 1DDC                                      u11300 3EBC  
                                    u10500 524A                                      u12100 0ABC  
                                    u12020 0788                                      u10181 53D4  
                                    u10261 558E                                      u10341 4FA2  
                                    u10421 4EBC                                      u10405 4E74  
                                    u11221 2106                                      u11141 1F76  
                                    u11061 1DD8                                      u11301 3EB8  
                                    u10501 5246                                      u12101 0AB8  
                                    u12021 0784                                      u10190 53F2  
                                    u10270 55B0                                      u10350 4FC4  
                                    u10430 4EE8                                      u11150 1FB0  
                                    u11070 1DEA                                      u11310 3ECA  
                                    u11230 3D46                                      u10510 5274  
                                    u12110 0B34                                      u12030 07BE  
                                    u10191 53EE                                      u10271 55AC  
                                    u10351 4FC0                                      u10431 4EE4  
                                    u11151 1FAC                                      u11071 1DE6  
                                    u11311 3EC6                                      u11231 3D42  
                                    u10511 5270                                      u12111 0B30  
                                    u12031 07BA                                      u10600 31F2  
                                    u10280 55C6                                      u10360 4FE4  
                                    u10440 4F08                                      u11160 1FDE  
                                    u11080 1E06                                      u11320 3EDC  
                                    u11240 3D62                                      u11400 4536  
                                    u10520 52A2                                      u12200 101C  
                                    u12120 0BBA                                      u12040 0824  
                                    _T0CON 000FD5                                      u10601 31EE  
                                    u10281 55C2                                      u10361 4FE0  
                                    u10441 4F04                                      u11161 1FDA  
                                    u11081 1E02                                      u11321 3ED8  
                                    u11241 3D5E                                      u11401 4532  
                                    u10521 529E                                      u12201 1018  
                                    u12121 0BB6                                      u12041 0820  
                                    u10530 5A3A                                      u10610 3220  
                                    u10290 55EA                                      u10370 5034  
                                    u10450 4F18                                      u11170 2062  
                                    u11090 1E14                                      u11250 3E1C  
                                    u11410 4570                                      u12210 1094  
                                    u12130 0C42                                      u12050 08D4  
                                    u10531 5A36                                      u10611 321C  
                                    u10291 55E6                                      u10371 5030  
                                    u10451 4F14                                      u11171 205E  
                                    u11091 1E10                                      u11411 456C  
                                    u11331 4402                            __end_of___lodiv 522C  
                                    u12211 1090                                      u12131 0C3E  
                                    u12051 08D0                                      u10540 5A68  
                                    u10700 33F0                                      u10620 322E  
                                    u10380 5D18                                      u11180 207C  
                                    u11260 3E5C                                      u11340 4424  
                                    u11420 3B46                                      u11500 3468  
                                    u12300 148A                                      u12220 111A  
                                    u12140 0CC8                                      u12060 093E  
                          ___awdiv@divisor 0005                                      u10541 5A64  
                                    u10701 33EC                                      u10621 322A  
                                    u10381 5D14                                      u11181 2078  
                                    u11261 3E58                                      u11341 4420  
                                    u10461 5142                                      u11421 3B42  
                                    u11501 3464                                      u12301 1486  
                                    u12221 1116                                      u12141 0CC4  
                                    u12061 0938                                      u10550 59DA  
                                    u10630 3358                                      u10390 4E4A  
                                    u11190 2094                                      u10710 15CC  
                                    u11270 3E7A                                      u11350 4456  
                                    u10470 5166                                      u11430 3B62  
                                    u11510 3492                                      u12310 152A  
                                    u12230 11A2                                      u12150 0D3A  
                                    u12070 0940                                      u10551 59D6  
                                    u10631 3354                                      u10391 4E46  
                                    u11191 2090                                      u10711 15C8  
                                    u11271 3E76                                      u11255 3E0A  
                                    u11351 4452                                      u10471 5162  
                                    u11431 3B5E                                      u11511 348E  
                                    u12311 1526                                      u12231 119E  
                                    u12151 0D36                                      ?_xtoa 001E  
                                    u10640 3376                                      u10560 3190  
                                    u10800 1786                                      u10720 161C  
                                    u11280 3E94                                      u11360 4474  
                                    u10480 5190                                      u11440 3CAE  
                                    u11600 364E                                      u11520 34F6  
                                    u12240 11D8                                      u12160 0DBA  
                                    u12080 0958                                      u12320 58A0  
                                    _T1CON 000FCD                                      u10641 3372  
                                    u10561 318A                                      u10801 1780  
                                    u10721 1618                                      u11281 3E90  
                                    u11361 4470                                      u10481 518C  
                                    u11441 3CAA                                      u11601 364A  
                                    u11521 34F2                                      u12241 11D4  
                                    u12161 0DB6                                      u12081 0954  
                                    u12321 589C                                      u10650 3390  
                                    u10570 3192                                      u10810 1788  
                                    u10730 162A                                      u11290 3EAE  
                                    u11370 449E                                      u10490 51D0  
                                    u11450 3CCC                                      u11610 366C  
                                    u11530 3540                                      u12250 12BA  
                                    u12170 0E2C                                      u12090 0A06  
                                    u12330 4C2C                                      u10651 338C  
                                    u10731 1626                                      u11291 3EAA  
                                    u11371 449A                                      u10491 51CC  
                                    u11451 3CC8                                      u11611 3668  
                                    u11531 353A                                      u12251 12B6  
                                    u12171 0E28                                      u12091 0A02  
                                    u12331 4C28                                      u11700 4222  
                                    u10660 33AA                                      u10580 31A8  
                                    u10900 19C0                                      u10820 17A0  
                                    u10740 163C                                      u11380 44D8  
                                    u11460 3CE6                                      u11620 3686  
                                    u11540 3542                                      u12260 12F0  
                                    u12180 0EDA                                      u12340 4C5A  
                                    u10661 33A6                                      u10581 31A4  
                                    u10901 19BC                                      u10821 179C  
                                    u10741 1638                                      u11381 44D4  
                                    u11461 3CE2                                      u11621 3682  
                                    u12261 12EC                                      u12181 0ED6  
                                    u12341 4C56                                      u11710 4238  
                                    u10670 33B8                                      u10590 31D6  
                                    u10910 19DC                                      u10830 1824  
                                    u10750 1684                                      u11390 4528  
                                    u11470 3D00                                      u11630 36A0  
                                    u11550 3558                                      u12270 1390  
                                    u12190 0F66                                      u12350 4CBA  
                                    u11711 4234                                      u10671 33B4  
                                    u10591 31D2                                      u10911 19D8  
                                    u10831 1820                                      u10751 1680  
                                    u11391 4524                                      u11471 3CFC  
                                    u11631 369C                                      u11551 3554  
                                    u12271 138C                                      u12191 0F62  
                                    u12351 4CB6                                      u11720 424A  
                                    u10680 33CA                                      u10920 1A12  
                                    u10840 18B8                                      u10760 16B2  
                                    u11480 3D0E                                      u11640 36AE  
                                    u11560 358C                                      u12280 13B6  
                                    u11800 00E6                                      u12360 4CC8  
                                    _T2CON 000FCA                                      u11721 4246  
                                    u10681 33C6                                      u10921 1A0E  
                                    u10841 18B4                                      u10761 16AC  
                                    u11481 3D0A                                      u11641 36AA  
                                    u11561 3586                                      u12281 13B2  
                                    u11801 00E2                                      u12361 4CC4  
                                    u10690 33D8                                      u10930 1A38  
                                    u10850 192A                                      u10770 16B4  
                                    u11730 4B1C                                      u11650 36BC  
                                    u11570 358E                                      u11490 344C  
                                    u12290 1454                                      u11810 01B6  
                                    u12370 4CF6                                      u10691 33D4  
                                    u10931 1A34                                      u10851 1926  
                                    u11731 4B18                                      u11651 36B8  
                                    u11491 3448                                      u12291 1450  
                                    u11811 01B2                                      u12371 4CF2  
                                    u11660 4110                                      u10940 1A4A  
                                    u10860 1950                                      u10780 16CC  
                                    u11740 4B58                                      u11580 35A4  
                                    u11900 03D4                                      u11820 01C4  
                                    u11661 410C                                      u10941 1A46  
                                    u10861 194C                                      u10781 16C8  
                                    u11581 35A0                                      u11901 03CE  
                                    u11821 01C0                                      u11670 4148  
                                    u10950 1A58                                      u10870 1962  
                                    u10790 1758                                      u11750 4B68  
                                    u11590 360C                                      u11910 03D6  
                                    u11830 01EC                                      u11671 4144  
                                    u10951 1A54                                      u10871 195E  
                                    u10791 1754                                      u11751 4B64  
                                    u11831 01E8                                      u11680 4164  
                                    u10960 1A6E                                      u10880 1984  
                                    u11760 4B86                                      u11920 03EE  
                                    u11840 0230                                      u11681 4160  
                                    u10961 1A6A                                      u10881 1980  
                                    u11761 4B82                                      u11921 03EA  
                                    u11841 022C                                      u11690 4220  
                                    u10970 1A7C                                      u10890 19AA  
                                    u11770 4B98                                      u11930 0422  
                                    u11850 02AE                                      u12387 5E4C  
                                    u11691 421A                                      u10971 1A78  
                                    u10891 19A6                                      u11771 4B94  
                                    u11747 4B4E                                      u11595 35FA  
                                    u11931 041E                                      u11851 02A8  
                                    u10980 1AA6                                      u11780 4BDA  
                                    u11940 0466                                      u11860 02B0  
                                    u10981 1AA2                                      u11781 4BD6  
                                    u11941 0462                                      u10990 1BEE  
                                    u11790 4BFC                                      u11950 04C0  
                                    u11870 02C8                                      u10991 1BEA  
                                    u11951 04BC                                      u11871 02C4  
                                    u11960 0544                                      u11880 02EE  
                                    u11785 4BCA                            __end_of___lomod 52FC  
                                    u11961 0540                                      u11881 02EA  
                                    u11970 057A                                      u11890 032A  
                                    u11787 4BC0                                      u11971 0576  
                                    u11891 0326                                      u11980 0632  
                                    u11797 4BF2                                      u11981 062E  
                                    u11990 0668                                      u11991 0664  
                                    i2l113 0036                                      i2l122 00B0  
                                    i2l115 005A                                      i2l123 00B0  
                                    i2l118 008C                                      i2l233 5E3A  
                                    i2l412 60A8                                      i2l340 5E96  
                                    i2l350 60EA                                      i2l239 60F0  
                                    i2l344 5EC4                                      i2l283 60D8  
                                    i2l293 60EE                                      i2l287 5F20  
                          ___awdiv@counter 0007                               vfpfcnvrt@fmt 0047  
                                    _TMR0H 000FD7                               vfpfcnvrt@llu 00B4  
                                    _TMR1H 000FCF                                      _TMR0L 000FD6  
                                    _TMR1L 000FCE                                      _TRISA 000F92  
                                    _TRISB 000F93                             ?_INT0_CallBack 0001  
                                    _TRISC 000F94                                      _TRISD 000F95  
                                    _TRISE 000F96                              __CFG_WRT0$OFF 000000  
                          ??_lcd_draw_char 0016                              __CFG_WRT1$OFF 000000  
                            __CFG_WRT2$OFF 000000                              __CFG_WRT3$OFF 000000  
                          ??_lcd_draw_line 001C                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                         __end_of_TMR2_ISR 5E98                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                          __end_of_msDelay 5E6A                             __CFG_EBTRB$OFF 000000  
                  __end_of_PIN_MANAGER_IOC 6050                                      _flags 0059  
                                    _errno 00E8                                      _fputc 52FC  
                          __end_of_isalpha 5C92                                      _fputs 5B90  
                          __end_of_isdigit 5D72                                      _ticks 00F8  
                                    _teste 00F0                                      atoi@n 0017  
                                    pad@fp 0013                                      atoi@s 000A  
                                    _width 00EC                                      ctoa@c 0020  
                                    _putch 60E8                                      ctoa@w 0021  
                                    dtoa@d 0020                                      dtoa@i 0040  
                                    dtoa@n 0038                                      dtoa@p 0032  
                                    dtoa@s 0036                                      dtoa@w 0034  
                         __end_of_SPI_Open 56AC                            __end_of_islower 5CCA  
                          __end_of_isspace 5A74                    __end_of_TMR1_Initialize 5F4E  
                          __end_of_isupper 5D02                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 0020  
                                    otoa@i 003E                                      otoa@n 0036  
                                    otoa@p 0030                                      otoa@t 0032  
                                    otoa@w 0034                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0018  
                                    stoa@l 0020                                      stoa@p 001E  
                                    stoa@s 000E                                      stoa@w 001A  
                                    ttemp5 005C                                      ttemp6 005F  
                                    ttemp7 0063                                      utoa@d 0020  
                                    utoa@i 003C                                      utoa@n 0034  
                                    utoa@p 0030                                      utoa@w 0032  
                                    status 000FD8                                      wtemp8 005C  
                           ?___fpclassifyf 0003                            __end_of_tolower 590A  
                                    xtoa@c 0043                                      xtoa@d 0020  
                                    xtoa@i 0041                                      xtoa@n 0039  
                                    xtoa@p 0035                                      xtoa@w 0037  
                                    xtoa@x 0028                            __end_of_strncmp 4C18  
                          __end_of_toupper 5968                             lcd_fill@height 000E  
                         ___lodiv@dividend 0003                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$2500 000F  
                          __initialization 57D8                               __end_of_atoi 4270  
                             __end_of_ctoa 5A22                               __end_of_main 3926  
                             __end_of_dtoa 343E                               __end_of_font FF5F  
                             __end_of_otoa 3F22                               __end_of_stoa 457A  
                             __end_of_utoa 3D38                               __end_of_xtoa 3712  
                        __end_of_IOCB4_ISR 5EF4                    __end_of_TMR2_Initialize 6006  
                                ??_ADC_ISR 0001                ?_INTERRUPT_InterruptManager 0001  
                                   ??_atoi 000C                                     ??_ctoa 0021  
                 _TMR2_SetInterruptHandler 60AA                                     ??_main 0057  
                                   ??_dtoa 0028                          ?_lcd_set_cursor_x 0006  
                        ?_lcd_set_cursor_y 0006                              lcd_send@value 0004  
                                   ??_otoa 0028                                     ??_stoa 0010  
                                   ??_utoa 0028                                     ??_xtoa 0029  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0008  
                       ??_lcd_set_cursor_y 0008                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0013                             lcd_draw_char@i 0021  
                           lcd_draw_char@j 001F                             lcd_draw_char@k 0020  
                 __end_of_SPI_ExchangeByte 6020                             lcd_draw_char@x 000C  
                           lcd_draw_char@y 000E                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0003                                     STR_102 FFE3  
                                   ?_fputs 000C                                     STR_111 FFFB  
                                   STR_113 FFE6                                     STR_106 FFC3  
                                   _ADRESH 000FC4                                     STR_115 FFE6  
                                   STR_109 FFFB                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0003                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                           __CFG_WDTEN$OFF 000000                                     i2l7340 0020  
                                   i2l7350 0076                                     i2l7342 002E  
                                   i2l7352 0084                                     i2l7344 0044  
                                   i2l6810 5EF4                                     i2l7354 009A  
                                   i2l7346 0052                                     i2l7338 0012  
                                   i2l6812 5F08                                     i2l6716 609E  
                                   i2l7356 00A8                                     i2l7348 0068  
                                   i2l6910 6038                                     i2l6814 5E98  
                                   i2l6912 6048                                     i2l6816 5EAC  
                                   i2l6914 604C                                     i2l6940 5E0E  
                                   i2l6756 5EC6                                     i2l6942 5E22  
                                   i2l6934 60D2                                     i2l6758 5EDA  
                                   i2l6950 5E8C                                     i2l6936 60D4  
                                   i2l6944 5E6A                                     i2l6938 5E0C  
                                   i2l6946 5E6C                                     i2l6948 5E88  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 009A  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 40D6                            _global_bg_color 00EE  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0008  
                         __end_of_lcd_fill 57D8                               vfprintf@cfmt 0055  
                         __end_of_lcd_init 3160       __size_of_ADC_DefaultInterruptHandler 0002  
         __size_of_ADC_SetInterruptHandler 000A                           __end_of_lcd_send 6038  
                                   ___flge 4F3A                                     ___fleq 56AC  
                                ??___aldiv 000B                                  ??___aodiv 0013  
                                ??___fladd 000B                                  ??___aomod 0013  
                                   ___wmul 5F78                                  ??___fldiv 000B  
                                ??___awdiv 0007                                  ??___flneg 0007  
                           __CFG_STVREN$ON 000000                                  ??___awmod 0007  
                                ??___flmul 0019                                  ??___flsub 0032  
                                ??___fltol 0007                                  ??___lodiv 0013  
                                ??___lomod 0013                                     _efgtoa 15A4  
                                   _floorf 3926                           ?_TMR0_Initialize 0001  
                                   clear_0 5816                                     clear_1 5822  
                                   clear_2 582E                           ___awdiv@quotient 0009  
                          ___awmod@divisor 0005                            ___awmod@counter 0007  
                                   pad@buf 0015                                     ctoa@fp 001E  
                          ??_INT0_CallBack 0001                                     _steste 0200  
                                   dtoa@fp 001E                                     _strcpy 5968  
                                   _string 0100                                     _strlen 5D72  
                                ??_msDelay 0003                                     fputc@c 0003  
                                   fputs@c 0010                                     fputs@i 0011  
                                   fputs@s 000C                                  ??_isalpha 0005  
                                ??_isdigit 0005                            ___fpclassifyf@e 000B  
                          ___fpclassifyf@u 000D                            ___fpclassifyf@x 0003  
                                ??_islower 0005                               __mediumconst F192  
                                ??_isspace 0005                                     otoa@fp 001E  
                                   tblptrh 000FF7                                  ??_isupper 0005  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                                   stoa@cp 001C                                     stoa@fp 000C  
                                   putch@c 0001                           __end_of_vfprintf 58AA  
                                   utoa@fp 001E   TMR2_SetInterruptHandler@InterruptHandler 0003  
 INT0_SetInterruptHandler@InterruptHandler 0003    ADC_SetInterruptHandler@InterruptHandler 0003  
IOCB4_SetInterruptHandler@InterruptHandler 0003                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 5DDA                                  ??_tolower 000B  
                                   xtoa@fp 001E                                  ??_strncmp 0009  
                                ??_toupper 000B              __size_of_INTERRUPT_Initialize 0004  
                               ___flge@ff1 002A                                 ___flge@ff2 002E  
                          ??___fpclassifyf 0007                           ?_TMR1_Initialize 0001  
                             ___xxtofl@arg 000D                               ___xxtofl@exp 000C  
                        _SYSTEM_Initialize 5F9E                               ___xxtofl@val 0003  
                               ___fleq@ff1 0003                                 ___fleq@ff2 0007  
                               __accesstop 0060                   __size_of_lcd_draw_string 0132  
                  __end_of__initialization 583C                                  ?_INT0_ISR 0001  
                               ___flneg@f1 0003                      __end_of_TMR2_CallBack 5EC6  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0003                             __pcstackCOMRAM 0001  
                             __pidataBANK0 60E6                               __pidataBANK1 60DA  
                      ??_SYSTEM_Initialize 0005                                  ?_TMR2_ISR 0001  
                            __end_of_fputc 53C6                              __end_of_fputs 5BD4  
    __end_of_IOCB4_DefaultInterruptHandler 60EE     __size_of_IOCB4_DefaultInterruptHandler 0002  
            _IOCB4_DefaultInterruptHandler 60EC                              __end_of_putch 60EA  
                         ?_TMR2_Initialize 0001                                  ?_SPI_Open 0001  
              ??_IOCB4_SetInterruptHandler 0005                           ??_lcd_set_cursor 000C  
              __size_of_EXT_INT_Initialize 0014                         __size_of_led_inter 000C  
                                  ??_fputc 0007                  __end_of_SYSTEM_Initialize 5FC4  
                                  ??_fputs 0010                                    ??_putch 0003  
                               __pbssBANK0 00DC                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                            __CFG_PLLCFG$OFF 000000  
                    _INT0_InterruptHandler 01B8                                 ??_INT0_ISR 0001  
                                  ?___flge 002A                                    ?___fleq 0003  
                                  ?___wmul 0003                                 ??_TMR2_ISR 0001  
                                  ?_efgtoa 0036                                    ?_floorf 001C  
                                  _ADC_ISR 5E0C                                 ??_SPI_Open 0003  
                          lcd_draw_line@e2 0023                            lcd_draw_line@x0 0012  
                          lcd_draw_line@x1 0016                            lcd_draw_line@y0 0014  
                          lcd_draw_line@y1 0018                    __size_of_ADC_Initialize 0024  
                          lcd_draw_line@dx 0025                            lcd_draw_line@dy 0027  
                                  ?_strcpy 0003                            lcd_draw_line@sx 001D  
                          lcd_draw_line@sy 001F                                    ?_strlen 0003  
                         __CFG_CANMX$PORTB 000000                                  ?___xxtofl 0003  
                                  _REFOCON 000F9A                                    _OSCCON2 000FD2  
                       __size_of_vfpfcnvrt 14E4                                    _OSCTUNE 000F9B  
                                  _SSPCON1 000FC6                                    _SSPCON2 000FC5  
                                ?_lcd_fill 000C                                  ?_lcd_init 0001  
                                ?_lcd_send 0004                                    _SSPSTAT 000FC7  
                         ___lomod@dividend 0003                           ??_SPI_Initialize 0003  
                _IOCB4_SetInterruptHandler 60B4          __size_of_INT0_SetInterruptHandler 000A  
                ?_INT0_SetInterruptHandler 0003                            __CFG_PWRTEN$OFF 000000  
                     _ADC_InterruptHandler 01BA                                    __Hparam 0000  
                  _ADC_SetInterruptHandler 60C8                                    __Lparam 0000  
               ??_TMR2_SetInterruptHandler 0005                         __size_of_vsnprintf 0110  
                        ??_lcd_draw_string 002C                                    ___aldiv 4D28  
                          __size_of___flge 0104                            __size_of___fleq 00AA  
                                  ___aodiv 4270                                    ___fladd 2156  
                                  ___aomod 485C                                    ___fldiv 2A40  
                                  ___awdiv 53C6                                    ___flneg 5D02  
                                  ___awmod 554C                                    ___flmul 2616  
                                  ___flsub 5B04                                    ___fltol 4E34  
                        __end_of_led_inter 60AA                            __size_of___wmul 0026  
                                  ___lodiv 513C                                    ___lomod 522C  
                                ?_vfprintf 004F                            __size_of_efgtoa 0BB2  
                                ?_snprintf 00D2                            __size_of_floorf 0212  
                                  __pcinit 57D8                                    __ramtop 0F00  
                                  __ptext0 3712                                    __ptext1 5DA8  
                                  __ptext2 4C18                                    __ptext3 5846  
                                  __ptext4 00C0                                    __ptext5 343E  
                                  __ptext6 590A                                    __ptext7 5C92  
                                  __ptext8 5C56                                    __ptext9 3B38  
                                _T0CONbits 000FD5                                    _msDelay 5E3C  
                                _IOCB4_ISR 5EC6                            __size_of_strcpy 005E  
                          __size_of_strlen 0036                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 608C                                  _T2CONbits 000FCA  
                             __size_of_abs 0040                               __size_of_pad 00C2  
                                  _isalpha 5C56                                    _isdigit 5D3A  
                               ??___xxtofl 0007                           ___awmod@dividend 0003  
                         ___aldiv@dividend 0003                                    _islower 5C92  
                 ??_PIN_MANAGER_Initialize 0005                                    _isspace 5A22  
                        __CFG_MSSPMSK$MSK7 000000                                    _isupper 5CCA  
                                  efgtoa@c 003C                                    efgtoa@d 0078  
                                  efgtoa@e 0090                                    efgtoa@f 0038  
                                  efgtoa@g 008C                                    efgtoa@h 0082  
                                  efgtoa@i 008A                                    efgtoa@l 0086  
                                  efgtoa@m 0074                                    efgtoa@n 0092  
                                  efgtoa@p 007C                                    efgtoa@t 0070  
                                  efgtoa@u 0094                                    efgtoa@w 007F  
                                  atoi@neg 0010                      __end_of_lcd_draw_char 46F4  
                    __end_of_lcd_draw_line 485C                 __size_of_SYSTEM_Initialize 0026  
                               ??_lcd_fill 000E                                    _tolower 58AA  
                        ?_SPI_ExchangeByte 0001                                 ??_lcd_init 0012  
                               ??_lcd_send 0005                                    _strncmp 4AF2  
                                  _toupper 590A                       end_of_initialization 583C  
                                  floorf@e 002A                                    floorf@m 0026  
                                  floorf@u 002C                                    floorf@x 001C  
                       ??_SPI_ExchangeByte 0003                  __size_of_lcd_set_cursor_x 0048  
                __size_of_lcd_set_cursor_y 0048                                    fputc@fp 0005  
                                  fputs@fp 000E                        lcd_draw_char@fIndex 0010  
                        __end_of_vfpfcnvrt 15A4                                 efgtoa@mode 0081  
                               efgtoa@sign 007A                           ___aldiv@quotient 000D  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 0010                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 000C                                 ??_vfprintf 0055  
                               ??_snprintf 0057                                    strcpy@d 000B  
                                  strlen@a 0005                                    strcpy@s 0009  
                                  strlen@s 0003                          lcd_draw_string@pS 0026  
                                _PORTBbits 000F81                          _spi_configuration FF5F  
                               ?_IOCB4_ISR 0001                                ___fladd@grs 0012  
                         __CFG_FOSC$INTIO2 000000        __end_of_ADC_DefaultInterruptHandler 60F2  
              _ADC_DefaultInterruptHandler 60F0                              ___xxtofl@sign 000B  
                                _TRISCbits 000F94                          __end_of_vsnprintf 4D28  
                              ___fldiv@grs 0016                                ___fldiv@rem 000F  
                              ___flmul@grs 001F              ??_ADC_DefaultInterruptHandler 0001  
                               lcd_send@dc 0005                  ??_ADC_SetInterruptHandler 0005  
                        __size_of_INT0_ISR 0008                                 _string_rpm 0264  
             __end_of_INTERRUPT_Initialize 60E6                       SPI_ExchangeByte@data 0003  
     __end_of_TMR2_DefaultInterruptHandler 60EC      __size_of_TMR2_DefaultInterruptHandler 0002  
             _TMR2_DefaultInterruptHandler 60EA                             __end_of___flge 503E  
                           __end_of___fleq 5756       __end_of_INT0_DefaultInterruptHandler 60F0  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 60EE  
                __end_of_spi_configuration FF63                                vfpfcnvrt@ap 0049  
                              vfpfcnvrt@cp 0098                                vfpfcnvrt@ct 00A6  
                              vfpfcnvrt@fp 0045                                vfpfcnvrt@ll 00A9  
                           __end_of___wmul 5F9E                                vfpfcnvrt@vp 00B1  
                           __end_of_efgtoa 2156                          __size_of_TMR2_ISR 002E  
                           _ADC_Initialize 5FC4                             __end_of_floorf 3B38  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 00DC  
                    __end_of_INT0_CallBack 5F22                          __size_of_SPI_Open 00B0  
                           __end_of_strcpy 59C6                             __end_of_strlen 5DA8  
                      start_initialization 57D8                            ___lodiv@divisor 000B  
                          ___lodiv@counter 001B                          _lcd_draw_pixel_at 5DDA  
                 __size_of_TMR0_Initialize 002A            __size_of_PIN_MANAGER_Initialize 0046  
                              __end_of_abs 5C56                                __end_of_pad 554C  
                       ?_lcd_draw_pixel_at 000C                             _codigo_digital 00F4  
                    __end_of___fpclassifyf 513C                        ??_lcd_draw_pixel_at 0012  
                 __size_of_PIN_MANAGER_IOC 0018             SPI_Open@spiUniqueConfiguration 0004  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 0051  
                                 ??___flge 0032                                   ??___fleq 000B  
                                 ??___wmul 0007                                   ??_efgtoa 003D  
                   __end_of_ADC_Initialize 5FE8                                __pdataBANK0 00FE  
                              __pdataBANK1 01BC                                   ??_floorf 0020  
                                 ?_ADC_ISR 0001                 __end_of_EXT_INT_Initialize 607A  
          fp__TMR2_DefaultInterruptHandler 0000              ?_TMR2_DefaultInterruptHandler 0001  
          fp__INT0_DefaultInterruptHandler 0000              ?_INT0_DefaultInterruptHandler 0001  
                                 ??_strcpy 0007                                   ??_strlen 0005  
                              ??_IOCB4_ISR 0001                                  ___fladd@a 0007  
                                ___fladd@b 0003                    __size_of_lcd_draw_pixel 0016  
                __end_of_lcd_draw_pixel_at 5E0C                               vsnprintf@cnt 00CA  
                             vsnprintf@fmt 00C0                                  ___fldiv@a 0007  
                                ___fldiv@b 0003                     __size_of_TMR2_CallBack 002E  
                                ___flmul@a 0015                                  ___flmul@b 0011  
                              __pbssCOMRAM 0057                                  ___flsub@a 002E  
                                ___flsub@b 002A           __end_of_INT0_SetInterruptHandler 60C8  
                            __pcstackBANK0 0060                              __pcstackBANK1 01C3  
                         ___aodiv@dividend 0003                   __size_of_TMR2_Initialize 001E  
                              snprintf@fmt 00D6                          __size_of___xxtofl 01B4  
                          _lcd_draw_string 49C0                           _lcd_set_cursor_x 5ABC  
                         _lcd_set_cursor_y 5A74                          __size_of_lcd_fill 0082  
                        __size_of_lcd_init 0386                          __size_of_lcd_send 0018  
                                _atoi$2362 0012                                  _atoi$2363 0016  
                                _atoi$2364 0014                                  __pnvBANK0 00FA  
                                __pnvBANK1 01B4                                _efgtoa$1722 0068  
                              _efgtoa$1717 0064                                _efgtoa$1726 006A  
                              _efgtoa$1718 0066                                _efgtoa$1727 006C  
                              _efgtoa$1728 006E                     _PIN_MANAGER_Initialize 5B4A  
                                _dtoa$1694 0030                                  __pintcode 0008  
                            __pmediumconst F192                                   ?___aldiv 0003  
                                 ?___aodiv 0003                                   ?___fladd 0003  
                                 ?___aomod 0003                                   ?___fldiv 0003  
                                 ?___awdiv 0003                           ___aodiv@quotient 0015  
                                 ?___flneg 0003                                   ?___awmod 0003  
                                 ?___flmul 0011                                   ?___flsub 002A  
                                 ?___fltol 0003                                   ?___lodiv 0003  
                                 ?___lomod 0003                            ?_ADC_Initialize 0001  
             ??_INTERRUPT_InterruptManager 0001                          __size_of_vfprintf 0064  
                                _led_inter 609E                          __size_of_snprintf 0032  
                                 ?_msDelay 0001                            ___lomod@divisor 000B  
                          ___lomod@counter 0013                                   ?_isalpha 0003  
                                 ?_isdigit 0003                                   ?_islower 0003  
                                 ?_isspace 0003                                   ?_isupper 0003  
                                 ?_tolower 0009                           lcd_draw_line@err 0021  
                           __size_of_fputc 00CA                             __size_of_fputs 0044  
                                 ?_strncmp 0003                                   ?_toupper 0009  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 60E2  
                           _pot_comparacao 00FE                    __size_of_lcd_set_cursor 0042  
                          ___aldiv@divisor 0007                          ??_TMR0_Initialize 0003  
                          ___aldiv@counter 000B                                   _INT0_ISR 60D2  
                           ___wmul@product 0007                                   _IOCBbits 000F5A  
                                 _LATAbits 000F89                                   _LATEbits 000F8D  
                            _TMR2_CallBack 5E98                                   _PIE1bits 000F9D  
                          lcd_set_cursor@x 0008                            lcd_set_cursor@y 000A  
      __size_of_INTERRUPT_InterruptManager 00B4                                   _PIR1bits 000F9E  
                                 i2u801_40 5EDA                                   i2u801_41 5ED6  
                    lcd_draw_string@lIndex 0032                                   i2u803_40 5F08  
                                 i2u802_48 5EE0                                   i2u803_41 5F04  
                                 i2u802_49 5EF2                                   i2u804_48 5F0E  
                                 i2u805_40 5EAC                                   i2u804_49 5F20  
                                 i2u805_41 5EA8                                   i2u822_40 6048  
                                 i2u822_41 6044                                   i2u823_40 5E22  
                                 i2u806_48 5EB2                                   i2u823_41 5E1E  
                                 i2u806_49 5EC4                                   i2u824_48 5E28  
                                 i2u825_40 5E88                                   i2u824_49 5E3A  
                                 i2u825_41 5E84                                   i2u860_40 0052  
                                 i2u860_41 004E                                   i2u861_40 0068  
                                 i2u861_41 0064                                   i2u862_40 0076  
                                 i2u862_41 0072                                   i2u863_40 0084  
                                 i2u863_41 0080                                   i2u864_40 009A  
                                 i2u864_41 0096                                   i2u865_40 00A8  
                                 i2u857_40 0020                                   i2u865_41 00A4  
                                 i2u857_41 001C                                   i2u858_40 002E  
                                 i2u858_41 002A                                   i2u859_40 0044  
                                 i2u859_41 0040                                   _RCONbits 000FD0  
                __size_of_SPI_ExchangeByte 001A             fp__ADC_DefaultInterruptHandler 0000  
                                 _TMR2_ISR 5E6A                           lcd_draw_string@k 0030  
                         lcd_draw_string@x 0022                           lcd_draw_string@y 0024  
                        ??_PIN_MANAGER_IOC 0001                                  _vfpfcnvrt 00C0  
                                _xtoa$1764 0031                                  _xtoa$1765 0033  
                                 _SPI_Open 55FC                          ??_TMR1_Initialize 0003  
                         __size_of_ADC_ISR 0030                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0003                                 ?_led_inter 0001  
                         __CFG_SOSCSEL$DIG 000000                 __size_of_lcd_draw_pixel_at 0032  
                  __end_of_lcd_draw_string 4AF2             ??_TMR2_DefaultInterruptHandler 0001  
        __size_of_TMR2_SetInterruptHandler 000A             ??_INT0_DefaultInterruptHandler 0001  
                ?_TMR2_SetInterruptHandler 0003                               _isspace$2402 0009  
                                msDelay@ms 0004                                 vfpfcnvrt@c 00B3  
                               vfpfcnvrt@f 00A2                                _INTCON2bits 000FF1  
                                copy_data0 57EC                      ?_INTERRUPT_Initialize 0001  
                 _INT0_SetInterruptHandler 60BE                                  _vsnprintf 4C18  
                        ??_TMR2_Initialize 0005                             ?_TMR2_CallBack 0001  
                      lcd_draw_pixel@color 0006                                   __Hrparam 0000  
                               vfprintf@ap 0053                                   __Lrparam 0000  
                               vfprintf@fp 004F                         __CFG_BOREN$SBORDIS 000000  
                  __size_of_SPI_Initialize 0012                    ??_OSCILLATOR_Initialize 0003  
                   __size_of_lcd_draw_char 017A                           __size_of___aldiv 010C  
                         __size_of___aodiv 0188                     __size_of_lcd_draw_line 0168  
                         __size_of___fladd 04C0                           __size_of___aomod 0164  
                         __size_of___fldiv 039A                           __size_of___awdiv 00C4  
                         __size_of___flneg 0038                           __size_of___awmod 00B0  
                              vsnprintf@ap 00C2                           __size_of___flmul 042A  
                         __size_of___flsub 0046                           __size_of___fltol 0106  
                         __size_of___lodiv 00F0                           __size_of___lomod 00D0  
                               ?_vfpfcnvrt 0045                                 snprintf@ap 01C5  
                          ___aodiv@divisor 000B                            ___aodiv@counter 0013  
                   _IOCB4_InterruptHandler 00FC                             _lcd_draw_pixel 6050  
                       ___fpclassifyf@F463 00E0                           __size_of_msDelay 002E  
                                 ___xxtofl 3F22                         lcd_draw_line@color 001A  
                         __size_of_isalpha 003C                           __size_of_isdigit 0038  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 0038                           __size_of_isspace 0052  
                                 __ptext10 522C                                   __ptext11 513C  
                                 __ptext20 503E                                   __ptext12 4AF2  
                                 __ptext21 4E34                                   __ptext13 43F8  
                               _T1GCONbits 000FAA                                   __ptext30 53C6  
                                 __ptext22 5B04                                   __ptext14 3D38  
                                 __ptext31 3160                                   __ptext23 2156  
                                 __ptext15 15A4                                   __ptext40 60E8  
                                 __ptext32 5C16                                   __ptext24 5D02  
                                 __ptext16 58AA                                   __ptext41 40D6  
                                 __ptext33 485C                                   __ptext25 2616  
                                 __ptext17 5CCA                                   __ptext50 46F4  
                                 __ptext42 5A22                                   __ptext34 4270  
                                 __ptext26 4F3A                                   __ptext18 5968  
                                 __ptext51 5DDA                                   __ptext43 5D3A  
                                 __ptext35 59C6                                   __ptext27 56AC  
                                 __ptext19 3926                                   __ptext60 5F9E  
                                 __ptext52 5BD4                                   __ptext44 5F78  
                                 __ptext36 548A                                   __ptext28 2A40  
                                 __ptext61 5FE8                                   __ptext53 5A74  
                                 __ptext45 2DDA                                   __ptext37 5D72  
                                 __ptext29 554C                                   __ptext70 6066  
                                 __ptext62 60AA                                   __ptext54 5ABC  
                                 __ptext46 5E3C                                   __ptext38 5B90  
                                 __ptext71 60BE                                   __ptext63 5F22  
                                 __ptext55 6050                                   __ptext47 5756  
                                 __ptext39 52FC                                   __ptext80 6038  
                                 __ptext72 5FC4                                   __ptext64 5F4E  
                                 __ptext56 6020                                   __ptext48 49C0  
                                 __ptext81 5EC6                                   __ptext73 60C8  
                                 __ptext65 607A                                   __ptext57 6006  
                                 __ptext49 457A                                   __ptext82 60EC  
                                 __ptext74 55FC                                   __ptext66 5B4A  
                                 __ptext58 3F22                                   __ptext83 60D2  
                                 __ptext67 60B4                                   __ptext59 4D28  
                                 __ptext84 5EF4                                   __ptext76 5E6A  
                                 __ptext68 608C                                   __ptext85 60EE  
                                 __ptext77 5E98                                   __ptext69 60E2  
                                 __ptext86 5E0C                                   __ptext78 60EA  
                                 __ptext87 60F0                                   __ptext79 609E  
                                 __ptext88 0000                           __size_of_isupper 0038  
                                 _lcd_fill 5756                                   _lcd_init 2DDA  
                                 _lcd_send 6020                           __size_of_tolower 0060  
                               strcpy@dest 0003                           __size_of_strncmp 0126  
                         __size_of_toupper 005E                                 ?_vsnprintf 00BC  
                            __size_of_atoi 019A                              __size_of_ctoa 005C  
                            __size_of_main 0214                              __size_of_dtoa 02DE  
                            __size_of_otoa 01EA                              __size_of_stoa 0182  
                            __size_of_utoa 0200                              __size_of_xtoa 02D4  
                                 efgtoa@fp 0036                                   efgtoa@ne 0076  
                                 efgtoa@pp 0072                                   efgtoa@ou 0060  
                                stoa@F1174 01BC                      lcd_draw_char@bg_color 0014  
                                 int$flags 005B                                   _vfprintf 5846  
                    lcd_draw_char@fg_color 0012         __end_of_INTERRUPT_InterruptManager 00BC  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 6066  
                                 _snprintf 5DA8                                _percentagem 00E4  
                 __end_of_lcd_set_cursor_x 5B04                   __end_of_lcd_set_cursor_y 5ABC  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0005  
                              ??_led_inter 0001                           ___aomod@dividend 0003  
                           _vfpfcnvrt$1801 00A0                             _vfpfcnvrt$1780 009E  
                           _vfpfcnvrt$1779 009C                                 _INTCONbits 000FF2  
                         ?_lcd_draw_string 0022                                   isalpha@c 0003  
                                 isdigit@c 0003                     ??_INTERRUPT_Initialize 0003  
                       lcd_draw_pixel_at@x 000C                         lcd_draw_pixel_at@y 000E  
                               vsnprintf@f 00CC                                 vsnprintf@n 00BE  
                               vsnprintf@s 00BC                         _EXT_INT_Initialize 6066  
                 ?_ADC_SetInterruptHandler 0003                              _lcd_draw_char 457A  
                                snprintf@n 00D4                                  snprintf@s 00D2  
                            _lcd_draw_line 46F4                                   intlevel2 0000  
                           _lcd_set_cursor 5BD4                            ??_TMR2_CallBack 0001  
                        lcd_set_cursor_x@x 0006                          lcd_set_cursor_y@y 0006  
                                 islower@c 0003                                   isspace@c 0003  
                  ?_PIN_MANAGER_Initialize 0001                        ?_EXT_INT_Initialize 0001  
                                strcpy@src 0005                                   isupper@c 0003  
                                strncmp@_l 0003                                  strncmp@_r 0005  
                         ??_ADC_Initialize 0005                     __size_of_INT0_CallBack 002E  
                         _SPI_ExchangeByte 6006                    lcd_draw_string@bg_color 002A  
                              efgtoa@nmode 007E                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 000B                    lcd_draw_string@fg_color 0028  
                          ?_lcd_draw_pixel 0006                                ??_vfpfcnvrt 004B  
                                 stoa@nuls 0011                            ___aomod@counter 0013  
                     ??_EXT_INT_Initialize 0005                                   tolower@c 0009  
                           _vsnprintf$2532 00C8                     __size_of___fpclassifyf 00FE  
                    TMR2_ISR@CountCallBack 00F6                            _TMR0_Initialize 5F4E  
                                 strncmp@l 000A                                   strncmp@n 0007  
                                 strncmp@r 000C                                   toupper@c 0009  
                             ___aldiv@sign 000C                                _SSPCON1bits 000FC6  
                   __end_of_lcd_set_cursor 5C16                             ?_lcd_draw_char 000C  
                           ?_lcd_draw_line 0012                              ___fladd@signs 000F  
                             ___aodiv@sign 0014             __end_of_PIN_MANAGER_Initialize 5B90  
                              ??_vsnprintf 00C4                               ___fladd@aexp 0010  
                             ___fladd@bexp 0011                        __CFG_BORPWR$ZPBORMV 000000  
                          _PIN_MANAGER_IOC 6038                      _TMR2_InterruptHandler 01B6  
                             fp__led_inter 0000                               ___aomod@sign 0014  
                          _TMR1_Initialize 5F22  
