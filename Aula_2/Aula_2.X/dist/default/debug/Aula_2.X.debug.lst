

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 26 17:51:58 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F46K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111  0000                     
   112                           ; Version 2.10
   113                           ; Generated 31/07/2019 GMT
   114                           ; 
   115                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F46K80 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     
   147                           	psect	idataCOMRAM
   148  0066AA                     __pidataCOMRAM:
   149                           	opt callstack 0
   150                           
   151                           ;initializer for stoa@F1174
   152  0066AA  28                 	db	40
   153  0066AB  6E                 	db	110
   154  0066AC  75                 	db	117
   155  0066AD  6C                 	db	108
   156  0066AE  6C                 	db	108
   157  0066AF  29                 	db	41
   158  0066B0  00                 	db	0
   159                           
   160                           	psect	mediumconst
   161  00F19C                     __pmediumconst:
   162                           	opt callstack 0
   163  00F19C  00                 	db	0
   164  00F19D                     _font:
   165                           	opt callstack 0
   166  00F19D  0004               	dw	4
   167  00F19F  0000               	dw	0
   168  00F1A1  0000               	dw	0
   169  00F1A3  0000               	dw	0
   170  00F1A5  0000               	dw	0
   171  00F1A7  0000               	dw	0
   172  00F1A9  0000               	dw	0
   173  00F1AB  0000               	dw	0
   174  00F1AD  0000               	dw	0
   175  00F1AF  0003               	dw	3
   176  00F1B1  0000               	dw	0
   177  00F1B3  0000               	dw	0
   178  00F1B5  00FE               	dw	254
   179  00F1B7  001B               	dw	27
   180  00F1B9  0000               	dw	0
   181  00F1BB  0000               	dw	0
   182  00F1BD  0005               	dw	5
   183  00F1BF  001E               	dw	30
   184  00F1C1  0000               	dw	0
   185  00F1C3  0000               	dw	0
   186  00F1C5  0000               	dw	0
   187  00F1C7  0000               	dw	0
   188  00F1C9  0000               	dw	0
   189  00F1CB  001E               	dw	30
   190  00F1CD  0000               	dw	0
   191  00F1CF  0000               	dw	0
   192  00F1D1  0000               	dw	0
   193  00F1D3  000B               	dw	11
   194  00F1D5  0000               	dw	0
   195  00F1D7  0000               	dw	0
   196  00F1D9  0010               	dw	16
   197  00F1DB  0001               	dw	1
   198  00F1DD  0010               	dw	16
   199  00F1DF  001D               	dw	29
   200  00F1E1  00F0               	dw	240
   201  00F1E3  0003               	dw	3
   202  00F1E5  001E               	dw	30
   203  00F1E7  0001               	dw	1
   204  00F1E9  0010               	dw	16
   205  00F1EB  0001               	dw	1
   206  00F1ED  0010               	dw	16
   207  00F1EF  001D               	dw	29
   208  00F1F1  00F0               	dw	240
   209  00F1F3  0003               	dw	3
   210  00F1F5  001E               	dw	30
   211  00F1F7  0001               	dw	1
   212  00F1F9  0010               	dw	16
   213  00F1FB  0001               	dw	1
   214  00F1FD  0000               	dw	0
   215  00F1FF  0000               	dw	0
   216  00F201  0009               	dw	9
   217  00F203  0000               	dw	0
   218  00F205  0004               	dw	4
   219  00F207  001C               	dw	28
   220  00F209  0008               	dw	8
   221  00F20B  0022               	dw	34
   222  00F20D  0010               	dw	16
   223  00F20F  0042               	dw	66
   224  00F211  0010               	dw	16
   225  00F213  00FF               	dw	255
   226  00F215  007F               	dw	127
   227  00F217  0042               	dw	66
   228  00F219  0010               	dw	16
   229  00F21B  0084               	dw	132
   230  00F21D  0010               	dw	16
   231  00F21F  0000               	dw	0
   232  00F221  000F               	dw	15
   233  00F223  0000               	dw	0
   234  00F225  0000               	dw	0
   235  00F227  000C               	dw	12
   236  00F229  001C               	dw	28
   237  00F22B  0000               	dw	0
   238  00F22D  0022               	dw	34
   239  00F22F  0010               	dw	16
   240  00F231  0022               	dw	34
   241  00F233  0008               	dw	8
   242  00F235  0022               	dw	34
   243  00F237  0006               	dw	6
   244  00F239  001C               	dw	28
   245  00F23B  0001               	dw	1
   246  00F23D  00C0               	dw	192
   247  00F23F  0000               	dw	0
   248  00F241  0020               	dw	32
   249  00F243  000E               	dw	14
   250  00F245  0018               	dw	24
   251  00F247  0011               	dw	17
   252  00F249  0004               	dw	4
   253  00F24B  0011               	dw	17
   254  00F24D  0002               	dw	2
   255  00F24F  0011               	dw	17
   256  00F251  0000               	dw	0
   257  00F253  000E               	dw	14
   258  00F255  0000               	dw	0
   259  00F257  0000               	dw	0
   260  00F259  000B               	dw	11
   261  00F25B  0000               	dw	0
   262  00F25D  0000               	dw	0
   263  00F25F  0000               	dw	0
   264  00F261  000E               	dw	14
   265  00F263  001C               	dw	28
   266  00F265  0011               	dw	17
   267  00F267  00A2               	dw	162
   268  00F269  0010               	dw	16
   269  00F26B  00C2               	dw	194
   270  00F26D  0010               	dw	16
   271  00F26F  0022               	dw	34
   272  00F271  0011               	dw	17
   273  00F273  001C               	dw	28
   274  00F275  000A               	dw	10
   275  00F277  0000               	dw	0
   276  00F279  000C               	dw	12
   277  00F27B  0000               	dw	0
   278  00F27D  000C               	dw	12
   279  00F27F  0000               	dw	0
   280  00F281  0012               	dw	18
   281  00F283  0000               	dw	0
   282  00F285  0000               	dw	0
   283  00F287  0003               	dw	3
   284  00F289  0000               	dw	0
   285  00F28B  0000               	dw	0
   286  00F28D  001E               	dw	30
   287  00F28F  0000               	dw	0
   288  00F291  0000               	dw	0
   289  00F293  0000               	dw	0
   290  00F295  0006               	dw	6
   291  00F297  0000               	dw	0
   292  00F299  0000               	dw	0
   293  00F29B  0000               	dw	0
   294  00F29D  0000               	dw	0
   295  00F29F  00E0               	dw	224
   296  00F2A1  001F               	dw	31
   297  00F2A3  001C               	dw	28
   298  00F2A5  0060               	dw	96
   299  00F2A7  0002               	dw	2
   300  00F2A9  0080               	dw	128
   301  00F2AB  0000               	dw	0
   302  00F2AD  0000               	dw	0
   303  00F2AF  0004               	dw	4
   304  00F2B1  0000               	dw	0
   305  00F2B3  0000               	dw	0
   306  00F2B5  0006               	dw	6
   307  00F2B7  00C0               	dw	192
   308  00F2B9  00F8               	dw	248
   309  00F2BB  003F               	dw	63
   310  00F2BD  0000               	dw	0
   311  00F2BF  0000               	dw	0
   312  00F2C1  0006               	dw	6
   313  00F2C3  0024               	dw	36
   314  00F2C5  0000               	dw	0
   315  00F2C7  0018               	dw	24
   316  00F2C9  0000               	dw	0
   317  00F2CB  007E               	dw	126
   318  00F2CD  0000               	dw	0
   319  00F2CF  0018               	dw	24
   320  00F2D1  0000               	dw	0
   321  00F2D3  0024               	dw	36
   322  00F2D5  0000               	dw	0
   323  00F2D7  0000               	dw	0
   324  00F2D9  0000               	dw	0
   325  00F2DB  0009               	dw	9
   326  00F2DD  0000               	dw	0
   327  00F2DF  0000               	dw	0
   328  00F2E1  0080               	dw	128
   329  00F2E3  0000               	dw	0
   330  00F2E5  0080               	dw	128
   331  00F2E7  0000               	dw	0
   332  00F2E9  0080               	dw	128
   333  00F2EB  0000               	dw	0
   334  00F2ED  00F0               	dw	240
   335  00F2EF  0007               	dw	7
   336  00F2F1  0080               	dw	128
   337  00F2F3  0000               	dw	0
   338  00F2F5  0080               	dw	128
   339  00F2F7  0000               	dw	0
   340  00F2F9  0080               	dw	128
   341  00F2FB  0000               	dw	0
   342  00F2FD  0000               	dw	0
   343  00F2FF  0000               	dw	0
   344  00F301  0004               	dw	4
   345  00F303  0000               	dw	0
   346  00F305  0000               	dw	0
   347  00F307  0000               	dw	0
   348  00F309  0060               	dw	96
   349  00F30B  0000               	dw	0
   350  00F30D  0018               	dw	24
   351  00F30F  0000               	dw	0
   352  00F311  0000               	dw	0
   353  00F313  0005               	dw	5
   354  00F315  0000               	dw	0
   355  00F317  0001               	dw	1
   356  00F319  0000               	dw	0
   357  00F31B  0001               	dw	1
   358  00F31D  0000               	dw	0
   359  00F31F  0001               	dw	1
   360  00F321  0000               	dw	0
   361  00F323  0001               	dw	1
   362  00F325  0000               	dw	0
   363  00F327  0000               	dw	0
   364  00F329  0004               	dw	4
   365  00F32B  0000               	dw	0
   366  00F32D  0000               	dw	0
   367  00F32F  0000               	dw	0
   368  00F331  0018               	dw	24
   369  00F333  0000               	dw	0
   370  00F335  0018               	dw	24
   371  00F337  0000               	dw	0
   372  00F339  0000               	dw	0
   373  00F33B  0008               	dw	8
   374  00F33D  0000               	dw	0
   375  00F33F  0000               	dw	0
   376  00F341  0000               	dw	0
   377  00F343  0040               	dw	64
   378  00F345  0000               	dw	0
   379  00F347  0038               	dw	56
   380  00F349  0000               	dw	0
   381  00F34B  0007               	dw	7
   382  00F34D  00E0               	dw	224
   383  00F34F  0000               	dw	0
   384  00F351  001C               	dw	28
   385  00F353  0000               	dw	0
   386  00F355  0002               	dw	2
   387  00F357  0000               	dw	0
   388  00F359  0000               	dw	0
   389  00F35B  0000               	dw	0
   390  00F35D  0009               	dw	9
   391  00F35F  00F8               	dw	248
   392  00F361  0007               	dw	7
   393  00F363  0004               	dw	4
   394  00F365  0008               	dw	8
   395  00F367  0002               	dw	2
   396  00F369  0010               	dw	16
   397  00F36B  0002               	dw	2
   398  00F36D  0010               	dw	16
   399  00F36F  0002               	dw	2
   400  00F371  0010               	dw	16
   401  00F373  0002               	dw	2
   402  00F375  0010               	dw	16
   403  00F377  0004               	dw	4
   404  00F379  0008               	dw	8
   405  00F37B  00F8               	dw	248
   406  00F37D  0007               	dw	7
   407  00F37F  0000               	dw	0
   408  00F381  0000               	dw	0
   409  00F383  0006               	dw	6
   410  00F385  0000               	dw	0
   411  00F387  0000               	dw	0
   412  00F389  0000               	dw	0
   413  00F38B  0000               	dw	0
   414  00F38D  0002               	dw	2
   415  00F38F  0000               	dw	0
   416  00F391  0002               	dw	2
   417  00F393  0000               	dw	0
   418  00F395  00FE               	dw	254
   419  00F397  001F               	dw	31
   420  00F399  0000               	dw	0
   421  00F39B  0000               	dw	0
   422  00F39D  0009               	dw	9
   423  00F39F  0018               	dw	24
   424  00F3A1  0010               	dw	16
   425  00F3A3  0004               	dw	4
   426  00F3A5  0018               	dw	24
   427  00F3A7  0002               	dw	2
   428  00F3A9  0014               	dw	20
   429  00F3AB  0002               	dw	2
   430  00F3AD  0012               	dw	18
   431  00F3AF  0002               	dw	2
   432  00F3B1  0011               	dw	17
   433  00F3B3  0082               	dw	130
   434  00F3B5  0010               	dw	16
   435  00F3B7  0044               	dw	68
   436  00F3B9  0010               	dw	16
   437  00F3BB  0038               	dw	56
   438  00F3BD  0010               	dw	16
   439  00F3BF  0000               	dw	0
   440  00F3C1  0000               	dw	0
   441  00F3C3  0009               	dw	9
   442  00F3C5  0008               	dw	8
   443  00F3C7  000C               	dw	12
   444  00F3C9  0004               	dw	4
   445  00F3CB  0010               	dw	16
   446  00F3CD  0002               	dw	2
   447  00F3CF  0010               	dw	16
   448  00F3D1  0042               	dw	66
   449  00F3D3  0010               	dw	16
   450  00F3D5  0042               	dw	66
   451  00F3D7  0010               	dw	16
   452  00F3D9  0044               	dw	68
   453  00F3DB  0010               	dw	16
   454  00F3DD  00B8               	dw	184
   455  00F3DF  0008               	dw	8
   456  00F3E1  0000               	dw	0
   457  00F3E3  0007               	dw	7
   458  00F3E5  0000               	dw	0
   459  00F3E7  0000               	dw	0
   460  00F3E9  0009               	dw	9
   461  00F3EB  0000               	dw	0
   462  00F3ED  0002               	dw	2
   463  00F3EF  0000               	dw	0
   464  00F3F1  0003               	dw	3
   465  00F3F3  0080               	dw	128
   466  00F3F5  0002               	dw	2
   467  00F3F7  0060               	dw	96
   468  00F3F9  0002               	dw	2
   469  00F3FB  0010               	dw	16
   470  00F3FD  0002               	dw	2
   471  00F3FF  0008               	dw	8
   472  00F401  0002               	dw	2
   473  00F403  00FE               	dw	254
   474  00F405  001F               	dw	31
   475  00F407  0000               	dw	0
   476  00F409  0002               	dw	2
   477  00F40B  0000               	dw	0
   478  00F40D  0000               	dw	0
   479  00F40F  0009               	dw	9
   480  00F411  0000               	dw	0
   481  00F413  0004               	dw	4
   482  00F415  0070               	dw	112
   483  00F417  0008               	dw	8
   484  00F419  002E               	dw	46
   485  00F41B  0010               	dw	16
   486  00F41D  0022               	dw	34
   487  00F41F  0010               	dw	16
   488  00F421  0022               	dw	34
   489  00F423  0010               	dw	16
   490  00F425  0022               	dw	34
   491  00F427  0010               	dw	16
   492  00F429  0042               	dw	66
   493  00F42B  0008               	dw	8
   494  00F42D  0082               	dw	130
   495  00F42F  0007               	dw	7
   496  00F431  0000               	dw	0
   497  00F433  0000               	dw	0
   498  00F435  0009               	dw	9
   499  00F437  0000               	dw	0
   500  00F439  0000               	dw	0
   501  00F43B  0000               	dw	0
   502  00F43D  0007               	dw	7
   503  00F43F  00C0               	dw	192
   504  00F441  0008               	dw	8
   505  00F443  0060               	dw	96
   506  00F445  0010               	dw	16
   507  00F447  0058               	dw	88
   508  00F449  0010               	dw	16
   509  00F44B  0044               	dw	68
   510  00F44D  0010               	dw	16
   511  00F44F  0082               	dw	130
   512  00F451  0008               	dw	8
   513  00F453  0000               	dw	0
   514  00F455  0007               	dw	7
   515  00F457  0000               	dw	0
   516  00F459  0000               	dw	0
   517  00F45B  0009               	dw	9
   518  00F45D  0000               	dw	0
   519  00F45F  0000               	dw	0
   520  00F461  0002               	dw	2
   521  00F463  0010               	dw	16
   522  00F465  0002               	dw	2
   523  00F467  000C               	dw	12
   524  00F469  0002               	dw	2
   525  00F46B  0003               	dw	3
   526  00F46D  00C2               	dw	194
   527  00F46F  0000               	dw	0
   528  00F471  0032               	dw	50
   529  00F473  0000               	dw	0
   530  00F475  000E               	dw	14
   531  00F477  0000               	dw	0
   532  00F479  0002               	dw	2
   533  00F47B  0000               	dw	0
   534  00F47D  0000               	dw	0
   535  00F47F  0000               	dw	0
   536  00F481  0009               	dw	9
   537  00F483  0000               	dw	0
   538  00F485  0007               	dw	7
   539  00F487  0098               	dw	152
   540  00F489  0008               	dw	8
   541  00F48B  0064               	dw	100
   542  00F48D  0010               	dw	16
   543  00F48F  0042               	dw	66
   544  00F491  0010               	dw	16
   545  00F493  0042               	dw	66
   546  00F495  0010               	dw	16
   547  00F497  0064               	dw	100
   548  00F499  0010               	dw	16
   549  00F49B  0098               	dw	152
   550  00F49D  0008               	dw	8
   551  00F49F  0000               	dw	0
   552  00F4A1  0007               	dw	7
   553  00F4A3  0000               	dw	0
   554  00F4A5  0000               	dw	0
   555  00F4A7  0009               	dw	9
   556  00F4A9  0000               	dw	0
   557  00F4AB  0000               	dw	0
   558  00F4AD  0038               	dw	56
   559  00F4AF  0000               	dw	0
   560  00F4B1  0044               	dw	68
   561  00F4B3  0010               	dw	16
   562  00F4B5  0082               	dw	130
   563  00F4B7  0008               	dw	8
   564  00F4B9  0082               	dw	130
   565  00F4BB  0004               	dw	4
   566  00F4BD  0082               	dw	130
   567  00F4BF  0003               	dw	3
   568  00F4C1  0084               	dw	132
   569  00F4C3  0000               	dw	0
   570  00F4C5  0078               	dw	120
   571  00F4C7  0000               	dw	0
   572  00F4C9  0000               	dw	0
   573  00F4CB  0000               	dw	0
   574  00F4CD  0004               	dw	4
   575  00F4CF  0000               	dw	0
   576  00F4D1  0000               	dw	0
   577  00F4D3  0030               	dw	48
   578  00F4D5  0018               	dw	24
   579  00F4D7  0030               	dw	48
   580  00F4D9  0018               	dw	24
   581  00F4DB  0000               	dw	0
   582  00F4DD  0000               	dw	0
   583  00F4DF  0004               	dw	4
   584  00F4E1  0000               	dw	0
   585  00F4E3  0000               	dw	0
   586  00F4E5  0030               	dw	48
   587  00F4E7  0060               	dw	96
   588  00F4E9  0030               	dw	48
   589  00F4EB  0018               	dw	24
   590  00F4ED  0000               	dw	0
   591  00F4EF  0000               	dw	0
   592  00F4F1  000A               	dw	10
   593  00F4F3  0000               	dw	0
   594  00F4F5  0000               	dw	0
   595  00F4F7  0080               	dw	128
   596  00F4F9  0000               	dw	0
   597  00F4FB  0080               	dw	128
   598  00F4FD  0000               	dw	0
   599  00F4FF  0040               	dw	64
   600  00F501  0001               	dw	1
   601  00F503  0020               	dw	32
   602  00F505  0002               	dw	2
   603  00F507  0020               	dw	32
   604  00F509  0002               	dw	2
   605  00F50B  0010               	dw	16
   606  00F50D  0004               	dw	4
   607  00F50F  0010               	dw	16
   608  00F511  0004               	dw	4
   609  00F513  0008               	dw	8
   610  00F515  0008               	dw	8
   611  00F517  0000               	dw	0
   612  00F519  0000               	dw	0
   613  00F51B  000A               	dw	10
   614  00F51D  0000               	dw	0
   615  00F51F  0000               	dw	0
   616  00F521  0020               	dw	32
   617  00F523  0001               	dw	1
   618  00F525  0020               	dw	32
   619  00F527  0001               	dw	1
   620  00F529  0020               	dw	32
   621  00F52B  0001               	dw	1
   622  00F52D  0020               	dw	32
   623  00F52F  0001               	dw	1
   624  00F531  0020               	dw	32
   625  00F533  0001               	dw	1
   626  00F535  0020               	dw	32
   627  00F537  0001               	dw	1
   628  00F539  0020               	dw	32
   629  00F53B  0001               	dw	1
   630  00F53D  0020               	dw	32
   631  00F53F  0001               	dw	1
   632  00F541  0000               	dw	0
   633  00F543  0000               	dw	0
   634  00F545  000A               	dw	10
   635  00F547  0000               	dw	0
   636  00F549  0000               	dw	0
   637  00F54B  0008               	dw	8
   638  00F54D  0008               	dw	8
   639  00F54F  0010               	dw	16
   640  00F551  0004               	dw	4
   641  00F553  0010               	dw	16
   642  00F555  0004               	dw	4
   643  00F557  0020               	dw	32
   644  00F559  0002               	dw	2
   645  00F55B  0020               	dw	32
   646  00F55D  0002               	dw	2
   647  00F55F  0040               	dw	64
   648  00F561  0001               	dw	1
   649  00F563  0080               	dw	128
   650  00F565  0000               	dw	0
   651  00F567  0080               	dw	128
   652  00F569  0000               	dw	0
   653  00F56B  0000               	dw	0
   654  00F56D  0000               	dw	0
   655  00F56F  0008               	dw	8
   656  00F571  0000               	dw	0
   657  00F573  0000               	dw	0
   658  00F575  000C               	dw	12
   659  00F577  0000               	dw	0
   660  00F579  0082               	dw	130
   661  00F57B  0001               	dw	1
   662  00F57D  0042               	dw	66
   663  00F57F  0002               	dw	2
   664  00F581  0022               	dw	34
   665  00F583  001A               	dw	26
   666  00F585  0022               	dw	34
   667  00F587  001A               	dw	26
   668  00F589  009C               	dw	156
   669  00F58B  0001               	dw	1
   670  00F58D  0000               	dw	0
   671  00F58F  0000               	dw	0
   672  00F591  000E               	dw	14
   673  00F593  0000               	dw	0
   674  00F595  0000               	dw	0
   675  00F597  00F0               	dw	240
   676  00F599  0003               	dw	3
   677  00F59B  0008               	dw	8
   678  00F59D  0004               	dw	4
   679  00F59F  0004               	dw	4
   680  00F5A1  0008               	dw	8
   681  00F5A3  00C2               	dw	194
   682  00F5A5  0011               	dw	17
   683  00F5A7  0022               	dw	34
   684  00F5A9  0012               	dw	18
   685  00F5AB  0012               	dw	18
   686  00F5AD  0012               	dw	18
   687  00F5AF  0012               	dw	18
   688  00F5B1  0012               	dw	18
   689  00F5B3  00E2               	dw	226
   690  00F5B5  0011               	dw	17
   691  00F5B7  0012               	dw	18
   692  00F5B9  0012               	dw	18
   693  00F5BB  0004               	dw	4
   694  00F5BD  0012               	dw	18
   695  00F5BF  0008               	dw	8
   696  00F5C1  0009               	dw	9
   697  00F5C3  00F0               	dw	240
   698  00F5C5  0004               	dw	4
   699  00F5C7  0000               	dw	0
   700  00F5C9  0000               	dw	0
   701  00F5CB  000D               	dw	13
   702  00F5CD  0000               	dw	0
   703  00F5CF  0000               	dw	0
   704  00F5D1  0000               	dw	0
   705  00F5D3  0010               	dw	16
   706  00F5D5  0000               	dw	0
   707  00F5D7  000E               	dw	14
   708  00F5D9  0080               	dw	128
   709  00F5DB  0001               	dw	1
   710  00F5DD  0060               	dw	96
   711  00F5DF  0001               	dw	1
   712  00F5E1  001C               	dw	28
   713  00F5E3  0001               	dw	1
   714  00F5E5  0002               	dw	2
   715  00F5E7  0001               	dw	1
   716  00F5E9  001C               	dw	28
   717  00F5EB  0001               	dw	1
   718  00F5ED  0060               	dw	96
   719  00F5EF  0001               	dw	1
   720  00F5F1  0080               	dw	128
   721  00F5F3  0001               	dw	1
   722  00F5F5  0000               	dw	0
   723  00F5F7  000E               	dw	14
   724  00F5F9  0000               	dw	0
   725  00F5FB  0010               	dw	16
   726  00F5FD  0000               	dw	0
   727  00F5FF  0000               	dw	0
   728  00F601  0009               	dw	9
   729  00F603  0000               	dw	0
   730  00F605  0000               	dw	0
   731  00F607  0000               	dw	0
   732  00F609  0000               	dw	0
   733  00F60B  00FE               	dw	254
   734  00F60D  001F               	dw	31
   735  00F60F  0042               	dw	66
   736  00F611  0010               	dw	16
   737  00F613  0042               	dw	66
   738  00F615  0010               	dw	16
   739  00F617  0064               	dw	100
   740  00F619  0010               	dw	16
   741  00F61B  0098               	dw	152
   742  00F61D  0008               	dw	8
   743  00F61F  0000               	dw	0
   744  00F621  0007               	dw	7
   745  00F623  0000               	dw	0
   746  00F625  0000               	dw	0
   747  00F627  000D               	dw	13
   748  00F629  0000               	dw	0
   749  00F62B  0000               	dw	0
   750  00F62D  00F0               	dw	240
   751  00F62F  0003               	dw	3
   752  00F631  0008               	dw	8
   753  00F633  0004               	dw	4
   754  00F635  0004               	dw	4
   755  00F637  0008               	dw	8
   756  00F639  0002               	dw	2
   757  00F63B  0010               	dw	16
   758  00F63D  0002               	dw	2
   759  00F63F  0010               	dw	16
   760  00F641  0002               	dw	2
   761  00F643  0010               	dw	16
   762  00F645  0002               	dw	2
   763  00F647  0010               	dw	16
   764  00F649  0002               	dw	2
   765  00F64B  0010               	dw	16
   766  00F64D  0004               	dw	4
   767  00F64F  0008               	dw	8
   768  00F651  0004               	dw	4
   769  00F653  0008               	dw	8
   770  00F655  0008               	dw	8
   771  00F657  0004               	dw	4
   772  00F659  0000               	dw	0
   773  00F65B  0000               	dw	0
   774  00F65D  000C               	dw	12
   775  00F65F  0000               	dw	0
   776  00F661  0000               	dw	0
   777  00F663  0000               	dw	0
   778  00F665  0000               	dw	0
   779  00F667  00FE               	dw	254
   780  00F669  001F               	dw	31
   781  00F66B  0002               	dw	2
   782  00F66D  0010               	dw	16
   783  00F66F  0002               	dw	2
   784  00F671  0010               	dw	16
   785  00F673  0002               	dw	2
   786  00F675  0010               	dw	16
   787  00F677  0002               	dw	2
   788  00F679  0010               	dw	16
   789  00F67B  0002               	dw	2
   790  00F67D  0010               	dw	16
   791  00F67F  0004               	dw	4
   792  00F681  0008               	dw	8
   793  00F683  0008               	dw	8
   794  00F685  0004               	dw	4
   795  00F687  00F0               	dw	240
   796  00F689  0003               	dw	3
   797  00F68B  0000               	dw	0
   798  00F68D  0000               	dw	0
   799  00F68F  0009               	dw	9
   800  00F691  0000               	dw	0
   801  00F693  0000               	dw	0
   802  00F695  0000               	dw	0
   803  00F697  0000               	dw	0
   804  00F699  00FE               	dw	254
   805  00F69B  001F               	dw	31
   806  00F69D  0042               	dw	66
   807  00F69F  0010               	dw	16
   808  00F6A1  0042               	dw	66
   809  00F6A3  0010               	dw	16
   810  00F6A5  0042               	dw	66
   811  00F6A7  0010               	dw	16
   812  00F6A9  0042               	dw	66
   813  00F6AB  0010               	dw	16
   814  00F6AD  0042               	dw	66
   815  00F6AF  0010               	dw	16
   816  00F6B1  0000               	dw	0
   817  00F6B3  0000               	dw	0
   818  00F6B5  0008               	dw	8
   819  00F6B7  0000               	dw	0
   820  00F6B9  0000               	dw	0
   821  00F6BB  0000               	dw	0
   822  00F6BD  0000               	dw	0
   823  00F6BF  00FE               	dw	254
   824  00F6C1  001F               	dw	31
   825  00F6C3  0042               	dw	66
   826  00F6C5  0000               	dw	0
   827  00F6C7  0042               	dw	66
   828  00F6C9  0000               	dw	0
   829  00F6CB  0042               	dw	66
   830  00F6CD  0000               	dw	0
   831  00F6CF  0042               	dw	66
   832  00F6D1  0000               	dw	0
   833  00F6D3  0000               	dw	0
   834  00F6D5  0000               	dw	0
   835  00F6D7  000E               	dw	14
   836  00F6D9  0000               	dw	0
   837  00F6DB  0000               	dw	0
   838  00F6DD  00F0               	dw	240
   839  00F6DF  0003               	dw	3
   840  00F6E1  0008               	dw	8
   841  00F6E3  0004               	dw	4
   842  00F6E5  0004               	dw	4
   843  00F6E7  0008               	dw	8
   844  00F6E9  0002               	dw	2
   845  00F6EB  0010               	dw	16
   846  00F6ED  0002               	dw	2
   847  00F6EF  0010               	dw	16
   848  00F6F1  0002               	dw	2
   849  00F6F3  0010               	dw	16
   850  00F6F5  0002               	dw	2
   851  00F6F7  0010               	dw	16
   852  00F6F9  0082               	dw	130
   853  00F6FB  0010               	dw	16
   854  00F6FD  0084               	dw	132
   855  00F6FF  0010               	dw	16
   856  00F701  0084               	dw	132
   857  00F703  0008               	dw	8
   858  00F705  0088               	dw	136
   859  00F707  0004               	dw	4
   860  00F709  0080               	dw	128
   861  00F70B  0003               	dw	3
   862  00F70D  0000               	dw	0
   863  00F70F  0000               	dw	0
   864  00F711  000A               	dw	10
   865  00F713  0000               	dw	0
   866  00F715  0000               	dw	0
   867  00F717  0000               	dw	0
   868  00F719  0000               	dw	0
   869  00F71B  00FE               	dw	254
   870  00F71D  001F               	dw	31
   871  00F71F  0040               	dw	64
   872  00F721  0000               	dw	0
   873  00F723  0040               	dw	64
   874  00F725  0000               	dw	0
   875  00F727  0040               	dw	64
   876  00F729  0000               	dw	0
   877  00F72B  0040               	dw	64
   878  00F72D  0000               	dw	0
   879  00F72F  0040               	dw	64
   880  00F731  0000               	dw	0
   881  00F733  00FE               	dw	254
   882  00F735  001F               	dw	31
   883  00F737  0000               	dw	0
   884  00F739  0000               	dw	0
   885  00F73B  0004               	dw	4
   886  00F73D  0000               	dw	0
   887  00F73F  0000               	dw	0
   888  00F741  0000               	dw	0
   889  00F743  0000               	dw	0
   890  00F745  00FE               	dw	254
   891  00F747  001F               	dw	31
   892  00F749  0000               	dw	0
   893  00F74B  0000               	dw	0
   894  00F74D  0007               	dw	7
   895  00F74F  0000               	dw	0
   896  00F751  0000               	dw	0
   897  00F753  0000               	dw	0
   898  00F755  0008               	dw	8
   899  00F757  0000               	dw	0
   900  00F759  0010               	dw	16
   901  00F75B  0000               	dw	0
   902  00F75D  0010               	dw	16
   903  00F75F  0000               	dw	0
   904  00F761  0008               	dw	8
   905  00F763  00FE               	dw	254
   906  00F765  0007               	dw	7
   907  00F767  0000               	dw	0
   908  00F769  0000               	dw	0
   909  00F76B  0009               	dw	9
   910  00F76D  0000               	dw	0
   911  00F76F  0000               	dw	0
   912  00F771  0000               	dw	0
   913  00F773  0000               	dw	0
   914  00F775  00FE               	dw	254
   915  00F777  001F               	dw	31
   916  00F779  0060               	dw	96
   917  00F77B  0000               	dw	0
   918  00F77D  0090               	dw	144
   919  00F77F  0001               	dw	1
   920  00F781  0008               	dw	8
   921  00F783  0002               	dw	2
   922  00F785  0004               	dw	4
   923  00F787  000C               	dw	12
   924  00F789  0002               	dw	2
   925  00F78B  0010               	dw	16
   926  00F78D  0000               	dw	0
   927  00F78F  0000               	dw	0
   928  00F791  0008               	dw	8
   929  00F793  0000               	dw	0
   930  00F795  0000               	dw	0
   931  00F797  0000               	dw	0
   932  00F799  0000               	dw	0
   933  00F79B  00FE               	dw	254
   934  00F79D  001F               	dw	31
   935  00F79F  0000               	dw	0
   936  00F7A1  0010               	dw	16
   937  00F7A3  0000               	dw	0
   938  00F7A5  0010               	dw	16
   939  00F7A7  0000               	dw	0
   940  00F7A9  0010               	dw	16
   941  00F7AB  0000               	dw	0
   942  00F7AD  0010               	dw	16
   943  00F7AF  0000               	dw	0
   944  00F7B1  0000               	dw	0
   945  00F7B3  000F               	dw	15
   946  00F7B5  0000               	dw	0
   947  00F7B7  0000               	dw	0
   948  00F7B9  0000               	dw	0
   949  00F7BB  001C               	dw	28
   950  00F7BD  00F8               	dw	248
   951  00F7BF  0003               	dw	3
   952  00F7C1  0006               	dw	6
   953  00F7C3  0000               	dw	0
   954  00F7C5  0038               	dw	56
   955  00F7C7  0000               	dw	0
   956  00F7C9  00C0               	dw	192
   957  00F7CB  0001               	dw	1
   958  00F7CD  0000               	dw	0
   959  00F7CF  000E               	dw	14
   960  00F7D1  0000               	dw	0
   961  00F7D3  0010               	dw	16
   962  00F7D5  0000               	dw	0
   963  00F7D7  000E               	dw	14
   964  00F7D9  00C0               	dw	192
   965  00F7DB  0001               	dw	1
   966  00F7DD  0038               	dw	56
   967  00F7DF  0000               	dw	0
   968  00F7E1  0006               	dw	6
   969  00F7E3  0000               	dw	0
   970  00F7E5  00F8               	dw	248
   971  00F7E7  0003               	dw	3
   972  00F7E9  0000               	dw	0
   973  00F7EB  001C               	dw	28
   974  00F7ED  0000               	dw	0
   975  00F7EF  0000               	dw	0
   976  00F7F1  000B               	dw	11
   977  00F7F3  0000               	dw	0
   978  00F7F5  0000               	dw	0
   979  00F7F7  0000               	dw	0
   980  00F7F9  0000               	dw	0
   981  00F7FB  00FE               	dw	254
   982  00F7FD  001F               	dw	31
   983  00F7FF  0008               	dw	8
   984  00F801  0000               	dw	0
   985  00F803  0030               	dw	48
   986  00F805  0000               	dw	0
   987  00F807  0040               	dw	64
   988  00F809  0000               	dw	0
   989  00F80B  0080               	dw	128
   990  00F80D  0000               	dw	0
   991  00F80F  0000               	dw	0
   992  00F811  0003               	dw	3
   993  00F813  0000               	dw	0
   994  00F815  0004               	dw	4
   995  00F817  00FE               	dw	254
   996  00F819  001F               	dw	31
   997  00F81B  0000               	dw	0
   998  00F81D  0000               	dw	0
   999  00F81F  000E               	dw	14
  1000  00F821  0000               	dw	0
  1001  00F823  0000               	dw	0
  1002  00F825  00F0               	dw	240
  1003  00F827  0003               	dw	3
  1004  00F829  0008               	dw	8
  1005  00F82B  0004               	dw	4
  1006  00F82D  0004               	dw	4
  1007  00F82F  0008               	dw	8
  1008  00F831  0002               	dw	2
  1009  00F833  0010               	dw	16
  1010  00F835  0002               	dw	2
  1011  00F837  0010               	dw	16
  1012  00F839  0002               	dw	2
  1013  00F83B  0010               	dw	16
  1014  00F83D  0002               	dw	2
  1015  00F83F  0010               	dw	16
  1016  00F841  0002               	dw	2
  1017  00F843  0010               	dw	16
  1018  00F845  0002               	dw	2
  1019  00F847  0010               	dw	16
  1020  00F849  0004               	dw	4
  1021  00F84B  0008               	dw	8
  1022  00F84D  0008               	dw	8
  1023  00F84F  0004               	dw	4
  1024  00F851  00F0               	dw	240
  1025  00F853  0003               	dw	3
  1026  00F855  0000               	dw	0
  1027  00F857  0000               	dw	0
  1028  00F859  0009               	dw	9
  1029  00F85B  0000               	dw	0
  1030  00F85D  0000               	dw	0
  1031  00F85F  0000               	dw	0
  1032  00F861  0000               	dw	0
  1033  00F863  00FE               	dw	254
  1034  00F865  001F               	dw	31
  1035  00F867  0042               	dw	66
  1036  00F869  0000               	dw	0
  1037  00F86B  0042               	dw	66
  1038  00F86D  0000               	dw	0
  1039  00F86F  0042               	dw	66
  1040  00F871  0000               	dw	0
  1041  00F873  0024               	dw	36
  1042  00F875  0000               	dw	0
  1043  00F877  0018               	dw	24
  1044  00F879  0000               	dw	0
  1045  00F87B  0000               	dw	0
  1046  00F87D  0000               	dw	0
  1047  00F87F  000E               	dw	14
  1048  00F881  0000               	dw	0
  1049  00F883  0000               	dw	0
  1050  00F885  00F0               	dw	240
  1051  00F887  0003               	dw	3
  1052  00F889  0008               	dw	8
  1053  00F88B  0004               	dw	4
  1054  00F88D  0004               	dw	4
  1055  00F88F  0008               	dw	8
  1056  00F891  0002               	dw	2
  1057  00F893  0010               	dw	16
  1058  00F895  0002               	dw	2
  1059  00F897  0010               	dw	16
  1060  00F899  0002               	dw	2
  1061  00F89B  0010               	dw	16
  1062  00F89D  0002               	dw	2
  1063  00F89F  0011               	dw	17
  1064  00F8A1  0002               	dw	2
  1065  00F8A3  0012               	dw	18
  1066  00F8A5  0002               	dw	2
  1067  00F8A7  000C               	dw	12
  1068  00F8A9  0004               	dw	4
  1069  00F8AB  0008               	dw	8
  1070  00F8AD  0008               	dw	8
  1071  00F8AF  0016               	dw	22
  1072  00F8B1  00F0               	dw	240
  1073  00F8B3  0021               	dw	33
  1074  00F8B5  0000               	dw	0
  1075  00F8B7  0000               	dw	0
  1076  00F8B9  000A               	dw	10
  1077  00F8BB  0000               	dw	0
  1078  00F8BD  0000               	dw	0
  1079  00F8BF  0000               	dw	0
  1080  00F8C1  0000               	dw	0
  1081  00F8C3  00FE               	dw	254
  1082  00F8C5  001F               	dw	31
  1083  00F8C7  0042               	dw	66
  1084  00F8C9  0000               	dw	0
  1085  00F8CB  00C2               	dw	194
  1086  00F8CD  0000               	dw	0
  1087  00F8CF  0042               	dw	66
  1088  00F8D1  0001               	dw	1
  1089  00F8D3  0042               	dw	66
  1090  00F8D5  0006               	dw	6
  1091  00F8D7  0024               	dw	36
  1092  00F8D9  0008               	dw	8
  1093  00F8DB  0018               	dw	24
  1094  00F8DD  0010               	dw	16
  1095  00F8DF  0000               	dw	0
  1096  00F8E1  0000               	dw	0
  1097  00F8E3  0008               	dw	8
  1098  00F8E5  0000               	dw	0
  1099  00F8E7  0004               	dw	4
  1100  00F8E9  0018               	dw	24
  1101  00F8EB  0008               	dw	8
  1102  00F8ED  0024               	dw	36
  1103  00F8EF  0010               	dw	16
  1104  00F8F1  0042               	dw	66
  1105  00F8F3  0010               	dw	16
  1106  00F8F5  0042               	dw	66
  1107  00F8F7  0010               	dw	16
  1108  00F8F9  0084               	dw	132
  1109  00F8FB  0008               	dw	8
  1110  00F8FD  0008               	dw	8
  1111  00F8FF  0007               	dw	7
  1112  00F901  0000               	dw	0
  1113  00F903  0000               	dw	0
  1114  00F905  0008               	dw	8
  1115  00F907  0002               	dw	2
  1116  00F909  0000               	dw	0
  1117  00F90B  0002               	dw	2
  1118  00F90D  0000               	dw	0
  1119  00F90F  0002               	dw	2
  1120  00F911  0000               	dw	0
  1121  00F913  00FE               	dw	254
  1122  00F915  001F               	dw	31
  1123  00F917  0002               	dw	2
  1124  00F919  0000               	dw	0
  1125  00F91B  0002               	dw	2
  1126  00F91D  0000               	dw	0
  1127  00F91F  0002               	dw	2
  1128  00F921  0000               	dw	0
  1129  00F923  0000               	dw	0
  1130  00F925  0000               	dw	0
  1131  00F927  000A               	dw	10
  1132  00F929  0000               	dw	0
  1133  00F92B  0000               	dw	0
  1134  00F92D  0000               	dw	0
  1135  00F92F  0000               	dw	0
  1136  00F931  00FE               	dw	254
  1137  00F933  0007               	dw	7
  1138  00F935  0000               	dw	0
  1139  00F937  0008               	dw	8
  1140  00F939  0000               	dw	0
  1141  00F93B  0010               	dw	16
  1142  00F93D  0000               	dw	0
  1143  00F93F  0010               	dw	16
  1144  00F941  0000               	dw	0
  1145  00F943  0010               	dw	16
  1146  00F945  0000               	dw	0
  1147  00F947  0008               	dw	8
  1148  00F949  00FE               	dw	254
  1149  00F94B  0007               	dw	7
  1150  00F94D  0000               	dw	0
  1151  00F94F  0000               	dw	0
  1152  00F951  000C               	dw	12
  1153  00F953  0002               	dw	2
  1154  00F955  0000               	dw	0
  1155  00F957  001C               	dw	28
  1156  00F959  0000               	dw	0
  1157  00F95B  0060               	dw	96
  1158  00F95D  0000               	dw	0
  1159  00F95F  0080               	dw	128
  1160  00F961  0001               	dw	1
  1161  00F963  0000               	dw	0
  1162  00F965  000E               	dw	14
  1163  00F967  0000               	dw	0
  1164  00F969  0010               	dw	16
  1165  00F96B  0000               	dw	0
  1166  00F96D  000E               	dw	14
  1167  00F96F  0080               	dw	128
  1168  00F971  0001               	dw	1
  1169  00F973  0060               	dw	96
  1170  00F975  0000               	dw	0
  1171  00F977  001C               	dw	28
  1172  00F979  0000               	dw	0
  1173  00F97B  0002               	dw	2
  1174  00F97D  0000               	dw	0
  1175  00F97F  0000               	dw	0
  1176  00F981  0000               	dw	0
  1177  00F983  000F               	dw	15
  1178  00F985  0000               	dw	0
  1179  00F987  0000               	dw	0
  1180  00F989  0006               	dw	6
  1181  00F98B  0000               	dw	0
  1182  00F98D  0078               	dw	120
  1183  00F98F  0000               	dw	0
  1184  00F991  0080               	dw	128
  1185  00F993  0007               	dw	7
  1186  00F995  0000               	dw	0
  1187  00F997  0018               	dw	24
  1188  00F999  0080               	dw	128
  1189  00F99B  0007               	dw	7
  1190  00F99D  0078               	dw	120
  1191  00F99F  0000               	dw	0
  1192  00F9A1  0006               	dw	6
  1193  00F9A3  0000               	dw	0
  1194  00F9A5  0078               	dw	120
  1195  00F9A7  0000               	dw	0
  1196  00F9A9  0080               	dw	128
  1197  00F9AB  0007               	dw	7
  1198  00F9AD  0000               	dw	0
  1199  00F9AF  0018               	dw	24
  1200  00F9B1  0080               	dw	128
  1201  00F9B3  0007               	dw	7
  1202  00F9B5  0078               	dw	120
  1203  00F9B7  0000               	dw	0
  1204  00F9B9  0006               	dw	6
  1205  00F9BB  0000               	dw	0
  1206  00F9BD  0000               	dw	0
  1207  00F9BF  0000               	dw	0
  1208  00F9C1  0009               	dw	9
  1209  00F9C3  0000               	dw	0
  1210  00F9C5  0000               	dw	0
  1211  00F9C7  0006               	dw	6
  1212  00F9C9  0018               	dw	24
  1213  00F9CB  0008               	dw	8
  1214  00F9CD  0004               	dw	4
  1215  00F9CF  0030               	dw	48
  1216  00F9D1  0003               	dw	3
  1217  00F9D3  00C0               	dw	192
  1218  00F9D5  0000               	dw	0
  1219  00F9D7  0030               	dw	48
  1220  00F9D9  0003               	dw	3
  1221  00F9DB  0008               	dw	8
  1222  00F9DD  0004               	dw	4
  1223  00F9DF  0006               	dw	6
  1224  00F9E1  0018               	dw	24
  1225  00F9E3  0000               	dw	0
  1226  00F9E5  0000               	dw	0
  1227  00F9E7  000B               	dw	11
  1228  00F9E9  0000               	dw	0
  1229  00F9EB  0000               	dw	0
  1230  00F9ED  0002               	dw	2
  1231  00F9EF  0000               	dw	0
  1232  00F9F1  0004               	dw	4
  1233  00F9F3  0000               	dw	0
  1234  00F9F5  0018               	dw	24
  1235  00F9F7  0000               	dw	0
  1236  00F9F9  0060               	dw	96
  1237  00F9FB  0000               	dw	0
  1238  00F9FD  0080               	dw	128
  1239  00F9FF  001F               	dw	31
  1240  00FA01  0060               	dw	96
  1241  00FA03  0000               	dw	0
  1242  00FA05  0018               	dw	24
  1243  00FA07  0000               	dw	0
  1244  00FA09  0004               	dw	4
  1245  00FA0B  0000               	dw	0
  1246  00FA0D  0002               	dw	2
  1247  00FA0F  0000               	dw	0
  1248  00FA11  0000               	dw	0
  1249  00FA13  0000               	dw	0
  1250  00FA15  0008               	dw	8
  1251  00FA17  0002               	dw	2
  1252  00FA19  0010               	dw	16
  1253  00FA1B  0002               	dw	2
  1254  00FA1D  001C               	dw	28
  1255  00FA1F  0002               	dw	2
  1256  00FA21  0013               	dw	19
  1257  00FA23  00C2               	dw	194
  1258  00FA25  0010               	dw	16
  1259  00FA27  0032               	dw	50
  1260  00FA29  0010               	dw	16
  1261  00FA2B  000E               	dw	14
  1262  00FA2D  0010               	dw	16
  1263  00FA2F  0002               	dw	2
  1264  00FA31  0010               	dw	16
  1265  00FA33  0000               	dw	0
  1266  00FA35  0000               	dw	0
  1267  00FA37  0006               	dw	6
  1268  00FA39  0000               	dw	0
  1269  00FA3B  0000               	dw	0
  1270  00FA3D  0000               	dw	0
  1271  00FA3F  0000               	dw	0
  1272  00FA41  00FE               	dw	254
  1273  00FA43  00FF               	dw	255
  1274  00FA45  0002               	dw	2
  1275  00FA47  0080               	dw	128
  1276  00FA49  0002               	dw	2
  1277  00FA4B  0080               	dw	128
  1278  00FA4D  0000               	dw	0
  1279  00FA4F  0000               	dw	0
  1280  00FA51  000A               	dw	10
  1281  00FA53  0002               	dw	2
  1282  00FA55  0000               	dw	0
  1283  00FA57  000C               	dw	12
  1284  00FA59  0000               	dw	0
  1285  00FA5B  0010               	dw	16
  1286  00FA5D  0000               	dw	0
  1287  00FA5F  0060               	dw	96
  1288  00FA61  0000               	dw	0
  1289  00FA63  0080               	dw	128
  1290  00FA65  0001               	dw	1
  1291  00FA67  0000               	dw	0
  1292  00FA69  0006               	dw	6
  1293  00FA6B  0000               	dw	0
  1294  00FA6D  0008               	dw	8
  1295  00FA6F  0000               	dw	0
  1296  00FA71  0030               	dw	48
  1297  00FA73  0000               	dw	0
  1298  00FA75  0040               	dw	64
  1299  00FA77  0000               	dw	0
  1300  00FA79  0000               	dw	0
  1301  00FA7B  0005               	dw	5
  1302  00FA7D  0000               	dw	0
  1303  00FA7F  0000               	dw	0
  1304  00FA81  0002               	dw	2
  1305  00FA83  0080               	dw	128
  1306  00FA85  0002               	dw	2
  1307  00FA87  0080               	dw	128
  1308  00FA89  00FE               	dw	254
  1309  00FA8B  00FF               	dw	255
  1310  00FA8D  0000               	dw	0
  1311  00FA8F  0000               	dw	0
  1312  00FA91  000B               	dw	11
  1313  00FA93  0000               	dw	0
  1314  00FA95  0000               	dw	0
  1315  00FA97  0000               	dw	0
  1316  00FA99  0002               	dw	2
  1317  00FA9B  0080               	dw	128
  1318  00FA9D  0001               	dw	1
  1319  00FA9F  0070               	dw	112
  1320  00FAA1  0000               	dw	0
  1321  00FAA3  000C               	dw	12
  1322  00FAA5  0000               	dw	0
  1323  00FAA7  0002               	dw	2
  1324  00FAA9  0000               	dw	0
  1325  00FAAB  000C               	dw	12
  1326  00FAAD  0000               	dw	0
  1327  00FAAF  0070               	dw	112
  1328  00FAB1  0000               	dw	0
  1329  00FAB3  0080               	dw	128
  1330  00FAB5  0001               	dw	1
  1331  00FAB7  0000               	dw	0
  1332  00FAB9  0002               	dw	2
  1333  00FABB  0000               	dw	0
  1334  00FABD  0000               	dw	0
  1335  00FABF  0009               	dw	9
  1336  00FAC1  0000               	dw	0
  1337  00FAC3  0040               	dw	64
  1338  00FAC5  0000               	dw	0
  1339  00FAC7  0040               	dw	64
  1340  00FAC9  0000               	dw	0
  1341  00FACB  0040               	dw	64
  1342  00FACD  0000               	dw	0
  1343  00FACF  0040               	dw	64
  1344  00FAD1  0000               	dw	0
  1345  00FAD3  0040               	dw	64
  1346  00FAD5  0000               	dw	0
  1347  00FAD7  0040               	dw	64
  1348  00FAD9  0000               	dw	0
  1349  00FADB  0040               	dw	64
  1350  00FADD  0000               	dw	0
  1351  00FADF  0040               	dw	64
  1352  00FAE1  0000               	dw	0
  1353  00FAE3  0000               	dw	0
  1354  00FAE5  0005               	dw	5
  1355  00FAE7  0000               	dw	0
  1356  00FAE9  0000               	dw	0
  1357  00FAEB  0000               	dw	0
  1358  00FAED  0000               	dw	0
  1359  00FAEF  0002               	dw	2
  1360  00FAF1  0000               	dw	0
  1361  00FAF3  0004               	dw	4
  1362  00FAF5  0000               	dw	0
  1363  00FAF7  0000               	dw	0
  1364  00FAF9  0000               	dw	0
  1365  00FAFB  000B               	dw	11
  1366  00FAFD  0000               	dw	0
  1367  00FAFF  0000               	dw	0
  1368  00FB01  00C0               	dw	192
  1369  00FB03  0007               	dw	7
  1370  00FB05  0020               	dw	32
  1371  00FB07  0008               	dw	8
  1372  00FB09  0010               	dw	16
  1373  00FB0B  0010               	dw	16
  1374  00FB0D  0010               	dw	16
  1375  00FB0F  0010               	dw	16
  1376  00FB11  0010               	dw	16
  1377  00FB13  0010               	dw	16
  1378  00FB15  0010               	dw	16
  1379  00FB17  0010               	dw	16
  1380  00FB19  0010               	dw	16
  1381  00FB1B  0010               	dw	16
  1382  00FB1D  0020               	dw	32
  1383  00FB1F  0008               	dw	8
  1384  00FB21  00F0               	dw	240
  1385  00FB23  001F               	dw	31
  1386  00FB25  0000               	dw	0
  1387  00FB27  0000               	dw	0
  1388  00FB29  000B               	dw	11
  1389  00FB2B  0000               	dw	0
  1390  00FB2D  0000               	dw	0
  1391  00FB2F  00FE               	dw	254
  1392  00FB31  001F               	dw	31
  1393  00FB33  0020               	dw	32
  1394  00FB35  0008               	dw	8
  1395  00FB37  0010               	dw	16
  1396  00FB39  0010               	dw	16
  1397  00FB3B  0010               	dw	16
  1398  00FB3D  0010               	dw	16
  1399  00FB3F  0010               	dw	16
  1400  00FB41  0010               	dw	16
  1401  00FB43  0010               	dw	16
  1402  00FB45  0010               	dw	16
  1403  00FB47  0010               	dw	16
  1404  00FB49  0010               	dw	16
  1405  00FB4B  0020               	dw	32
  1406  00FB4D  0008               	dw	8
  1407  00FB4F  00C0               	dw	192
  1408  00FB51  0007               	dw	7
  1409  00FB53  0000               	dw	0
  1410  00FB55  0000               	dw	0
  1411  00FB57  000A               	dw	10
  1412  00FB59  0000               	dw	0
  1413  00FB5B  0000               	dw	0
  1414  00FB5D  00C0               	dw	192
  1415  00FB5F  0007               	dw	7
  1416  00FB61  0020               	dw	32
  1417  00FB63  0008               	dw	8
  1418  00FB65  0010               	dw	16
  1419  00FB67  0010               	dw	16
  1420  00FB69  0010               	dw	16
  1421  00FB6B  0010               	dw	16
  1422  00FB6D  0010               	dw	16
  1423  00FB6F  0010               	dw	16
  1424  00FB71  0010               	dw	16
  1425  00FB73  0010               	dw	16
  1426  00FB75  0020               	dw	32
  1427  00FB77  0008               	dw	8
  1428  00FB79  0040               	dw	64
  1429  00FB7B  0004               	dw	4
  1430  00FB7D  0000               	dw	0
  1431  00FB7F  0000               	dw	0
  1432  00FB81  000B               	dw	11
  1433  00FB83  0000               	dw	0
  1434  00FB85  0000               	dw	0
  1435  00FB87  00C0               	dw	192
  1436  00FB89  0007               	dw	7
  1437  00FB8B  0020               	dw	32
  1438  00FB8D  0008               	dw	8
  1439  00FB8F  0010               	dw	16
  1440  00FB91  0010               	dw	16
  1441  00FB93  0010               	dw	16
  1442  00FB95  0010               	dw	16
  1443  00FB97  0010               	dw	16
  1444  00FB99  0010               	dw	16
  1445  00FB9B  0010               	dw	16
  1446  00FB9D  0010               	dw	16
  1447  00FB9F  0010               	dw	16
  1448  00FBA1  0010               	dw	16
  1449  00FBA3  0020               	dw	32
  1450  00FBA5  0008               	dw	8
  1451  00FBA7  00FE               	dw	254
  1452  00FBA9  001F               	dw	31
  1453  00FBAB  0000               	dw	0
  1454  00FBAD  0000               	dw	0
  1455  00FBAF  000A               	dw	10
  1456  00FBB1  0000               	dw	0
  1457  00FBB3  0000               	dw	0
  1458  00FBB5  00C0               	dw	192
  1459  00FBB7  0007               	dw	7
  1460  00FBB9  0020               	dw	32
  1461  00FBBB  0009               	dw	9
  1462  00FBBD  0010               	dw	16
  1463  00FBBF  0011               	dw	17
  1464  00FBC1  0010               	dw	16
  1465  00FBC3  0011               	dw	17
  1466  00FBC5  0010               	dw	16
  1467  00FBC7  0011               	dw	17
  1468  00FBC9  0010               	dw	16
  1469  00FBCB  0011               	dw	17
  1470  00FBCD  0020               	dw	32
  1471  00FBCF  0009               	dw	9
  1472  00FBD1  00C0               	dw	192
  1473  00FBD3  0005               	dw	5
  1474  00FBD5  0000               	dw	0
  1475  00FBD7  0000               	dw	0
  1476  00FBD9  0006               	dw	6
  1477  00FBDB  0000               	dw	0
  1478  00FBDD  0000               	dw	0
  1479  00FBDF  0010               	dw	16
  1480  00FBE1  0000               	dw	0
  1481  00FBE3  00FC               	dw	252
  1482  00FBE5  001F               	dw	31
  1483  00FBE7  0012               	dw	18
  1484  00FBE9  0000               	dw	0
  1485  00FBEB  0012               	dw	18
  1486  00FBED  0000               	dw	0
  1487  00FBEF  0000               	dw	0
  1488  00FBF1  0000               	dw	0
  1489  00FBF3  000B               	dw	11
  1490  00FBF5  0000               	dw	0
  1491  00FBF7  0000               	dw	0
  1492  00FBF9  00C0               	dw	192
  1493  00FBFB  0027               	dw	39
  1494  00FBFD  0020               	dw	32
  1495  00FBFF  0048               	dw	72
  1496  00FC01  0010               	dw	16
  1497  00FC03  0090               	dw	144
  1498  00FC05  0010               	dw	16
  1499  00FC07  0090               	dw	144
  1500  00FC09  0010               	dw	16
  1501  00FC0B  0090               	dw	144
  1502  00FC0D  0010               	dw	16
  1503  00FC0F  0090               	dw	144
  1504  00FC11  0010               	dw	16
  1505  00FC13  0090               	dw	144
  1506  00FC15  0020               	dw	32
  1507  00FC17  0048               	dw	72
  1508  00FC19  00F0               	dw	240
  1509  00FC1B  003F               	dw	63
  1510  00FC1D  0000               	dw	0
  1511  00FC1F  0000               	dw	0
  1512  00FC21  000A               	dw	10
  1513  00FC23  0000               	dw	0
  1514  00FC25  0000               	dw	0
  1515  00FC27  00FE               	dw	254
  1516  00FC29  001F               	dw	31
  1517  00FC2B  0020               	dw	32
  1518  00FC2D  0000               	dw	0
  1519  00FC2F  0010               	dw	16
  1520  00FC31  0000               	dw	0
  1521  00FC33  0010               	dw	16
  1522  00FC35  0000               	dw	0
  1523  00FC37  0010               	dw	16
  1524  00FC39  0000               	dw	0
  1525  00FC3B  0010               	dw	16
  1526  00FC3D  0000               	dw	0
  1527  00FC3F  0020               	dw	32
  1528  00FC41  0000               	dw	0
  1529  00FC43  00C0               	dw	192
  1530  00FC45  001F               	dw	31
  1531  00FC47  0000               	dw	0
  1532  00FC49  0000               	dw	0
  1533  00FC4B  0003               	dw	3
  1534  00FC4D  0000               	dw	0
  1535  00FC4F  0000               	dw	0
  1536  00FC51  00F6               	dw	246
  1537  00FC53  001F               	dw	31
  1538  00FC55  0000               	dw	0
  1539  00FC57  0000               	dw	0
  1540  00FC59  0003               	dw	3
  1541  00FC5B  0000               	dw	0
  1542  00FC5D  0080               	dw	128
  1543  00FC5F  00F6               	dw	246
  1544  00FC61  007F               	dw	127
  1545  00FC63  0000               	dw	0
  1546  00FC65  0000               	dw	0
  1547  00FC67  0008               	dw	8
  1548  00FC69  0000               	dw	0
  1549  00FC6B  0000               	dw	0
  1550  00FC6D  00FE               	dw	254
  1551  00FC6F  001F               	dw	31
  1552  00FC71  0000               	dw	0
  1553  00FC73  0001               	dw	1
  1554  00FC75  0080               	dw	128
  1555  00FC77  0002               	dw	2
  1556  00FC79  0040               	dw	64
  1557  00FC7B  0004               	dw	4
  1558  00FC7D  0020               	dw	32
  1559  00FC7F  0008               	dw	8
  1560  00FC81  0010               	dw	16
  1561  00FC83  0010               	dw	16
  1562  00FC85  0000               	dw	0
  1563  00FC87  0000               	dw	0
  1564  00FC89  0003               	dw	3
  1565  00FC8B  0000               	dw	0
  1566  00FC8D  0000               	dw	0
  1567  00FC8F  00FE               	dw	254
  1568  00FC91  001F               	dw	31
  1569  00FC93  0000               	dw	0
  1570  00FC95  0000               	dw	0
  1571  00FC97  000F               	dw	15
  1572  00FC99  0000               	dw	0
  1573  00FC9B  0000               	dw	0
  1574  00FC9D  00F0               	dw	240
  1575  00FC9F  001F               	dw	31
  1576  00FCA1  0020               	dw	32
  1577  00FCA3  0000               	dw	0
  1578  00FCA5  0010               	dw	16
  1579  00FCA7  0000               	dw	0
  1580  00FCA9  0010               	dw	16
  1581  00FCAB  0000               	dw	0
  1582  00FCAD  0010               	dw	16
  1583  00FCAF  0000               	dw	0
  1584  00FCB1  0020               	dw	32
  1585  00FCB3  0000               	dw	0
  1586  00FCB5  00C0               	dw	192
  1587  00FCB7  001F               	dw	31
  1588  00FCB9  0020               	dw	32
  1589  00FCBB  0000               	dw	0
  1590  00FCBD  0010               	dw	16
  1591  00FCBF  0000               	dw	0
  1592  00FCC1  0010               	dw	16
  1593  00FCC3  0000               	dw	0
  1594  00FCC5  0010               	dw	16
  1595  00FCC7  0000               	dw	0
  1596  00FCC9  0020               	dw	32
  1597  00FCCB  0000               	dw	0
  1598  00FCCD  00C0               	dw	192
  1599  00FCCF  001F               	dw	31
  1600  00FCD1  0000               	dw	0
  1601  00FCD3  0000               	dw	0
  1602  00FCD5  000A               	dw	10
  1603  00FCD7  0000               	dw	0
  1604  00FCD9  0000               	dw	0
  1605  00FCDB  00F0               	dw	240
  1606  00FCDD  001F               	dw	31
  1607  00FCDF  0020               	dw	32
  1608  00FCE1  0000               	dw	0
  1609  00FCE3  0010               	dw	16
  1610  00FCE5  0000               	dw	0
  1611  00FCE7  0010               	dw	16
  1612  00FCE9  0000               	dw	0
  1613  00FCEB  0010               	dw	16
  1614  00FCED  0000               	dw	0
  1615  00FCEF  0010               	dw	16
  1616  00FCF1  0000               	dw	0
  1617  00FCF3  0020               	dw	32
  1618  00FCF5  0000               	dw	0
  1619  00FCF7  00C0               	dw	192
  1620  00FCF9  001F               	dw	31
  1621  00FCFB  0000               	dw	0
  1622  00FCFD  0000               	dw	0
  1623  00FCFF  000A               	dw	10
  1624  00FD01  0000               	dw	0
  1625  00FD03  0000               	dw	0
  1626  00FD05  00C0               	dw	192
  1627  00FD07  0007               	dw	7
  1628  00FD09  0020               	dw	32
  1629  00FD0B  0008               	dw	8
  1630  00FD0D  0010               	dw	16
  1631  00FD0F  0010               	dw	16
  1632  00FD11  0010               	dw	16
  1633  00FD13  0010               	dw	16
  1634  00FD15  0010               	dw	16
  1635  00FD17  0010               	dw	16
  1636  00FD19  0010               	dw	16
  1637  00FD1B  0010               	dw	16
  1638  00FD1D  0020               	dw	32
  1639  00FD1F  0008               	dw	8
  1640  00FD21  00C0               	dw	192
  1641  00FD23  0007               	dw	7
  1642  00FD25  0000               	dw	0
  1643  00FD27  0000               	dw	0
  1644  00FD29  000B               	dw	11
  1645  00FD2B  0000               	dw	0
  1646  00FD2D  0000               	dw	0
  1647  00FD2F  00F0               	dw	240
  1648  00FD31  00FF               	dw	255
  1649  00FD33  0020               	dw	32
  1650  00FD35  0008               	dw	8
  1651  00FD37  0010               	dw	16
  1652  00FD39  0010               	dw	16
  1653  00FD3B  0010               	dw	16
  1654  00FD3D  0010               	dw	16
  1655  00FD3F  0010               	dw	16
  1656  00FD41  0010               	dw	16
  1657  00FD43  0010               	dw	16
  1658  00FD45  0010               	dw	16
  1659  00FD47  0010               	dw	16
  1660  00FD49  0010               	dw	16
  1661  00FD4B  0020               	dw	32
  1662  00FD4D  0008               	dw	8
  1663  00FD4F  00C0               	dw	192
  1664  00FD51  0007               	dw	7
  1665  00FD53  0000               	dw	0
  1666  00FD55  0000               	dw	0
  1667  00FD57  000B               	dw	11
  1668  00FD59  0000               	dw	0
  1669  00FD5B  0000               	dw	0
  1670  00FD5D  00C0               	dw	192
  1671  00FD5F  0007               	dw	7
  1672  00FD61  0020               	dw	32
  1673  00FD63  0008               	dw	8
  1674  00FD65  0010               	dw	16
  1675  00FD67  0010               	dw	16
  1676  00FD69  0010               	dw	16
  1677  00FD6B  0010               	dw	16
  1678  00FD6D  0010               	dw	16
  1679  00FD6F  0010               	dw	16
  1680  00FD71  0010               	dw	16
  1681  00FD73  0010               	dw	16
  1682  00FD75  0010               	dw	16
  1683  00FD77  0010               	dw	16
  1684  00FD79  0020               	dw	32
  1685  00FD7B  0008               	dw	8
  1686  00FD7D  00F0               	dw	240
  1687  00FD7F  00FF               	dw	255
  1688  00FD81  0000               	dw	0
  1689  00FD83  0000               	dw	0
  1690  00FD85  0006               	dw	6
  1691  00FD87  0000               	dw	0
  1692  00FD89  0000               	dw	0
  1693  00FD8B  00F0               	dw	240
  1694  00FD8D  001F               	dw	31
  1695  00FD8F  0020               	dw	32
  1696  00FD91  0000               	dw	0
  1697  00FD93  0010               	dw	16
  1698  00FD95  0000               	dw	0
  1699  00FD97  0010               	dw	16
  1700  00FD99  0000               	dw	0
  1701  00FD9B  0000               	dw	0
  1702  00FD9D  0000               	dw	0
  1703  00FD9F  0006               	dw	6
  1704  00FDA1  0060               	dw	96
  1705  00FDA3  0008               	dw	8
  1706  00FDA5  0090               	dw	144
  1707  00FDA7  0010               	dw	16
  1708  00FDA9  0010               	dw	16
  1709  00FDAB  0011               	dw	17
  1710  00FDAD  0010               	dw	16
  1711  00FDAF  0011               	dw	17
  1712  00FDB1  0020               	dw	32
  1713  00FDB3  000E               	dw	14
  1714  00FDB5  0000               	dw	0
  1715  00FDB7  0000               	dw	0
  1716  00FDB9  0007               	dw	7
  1717  00FDBB  0000               	dw	0
  1718  00FDBD  0000               	dw	0
  1719  00FDBF  0010               	dw	16
  1720  00FDC1  0000               	dw	0
  1721  00FDC3  0010               	dw	16
  1722  00FDC5  0000               	dw	0
  1723  00FDC7  00FE               	dw	254
  1724  00FDC9  001F               	dw	31
  1725  00FDCB  0010               	dw	16
  1726  00FDCD  0000               	dw	0
  1727  00FDCF  0010               	dw	16
  1728  00FDD1  0000               	dw	0
  1729  00FDD3  0000               	dw	0
  1730  00FDD5  0000               	dw	0
  1731  00FDD7  000A               	dw	10
  1732  00FDD9  0000               	dw	0
  1733  00FDDB  0000               	dw	0
  1734  00FDDD  00F0               	dw	240
  1735  00FDDF  0007               	dw	7
  1736  00FDE1  0000               	dw	0
  1737  00FDE3  0008               	dw	8
  1738  00FDE5  0000               	dw	0
  1739  00FDE7  0010               	dw	16
  1740  00FDE9  0000               	dw	0
  1741  00FDEB  0010               	dw	16
  1742  00FDED  0000               	dw	0
  1743  00FDEF  0010               	dw	16
  1744  00FDF1  0000               	dw	0
  1745  00FDF3  0010               	dw	16
  1746  00FDF5  0000               	dw	0
  1747  00FDF7  0008               	dw	8
  1748  00FDF9  00F0               	dw	240
  1749  00FDFB  0007               	dw	7
  1750  00FDFD  0000               	dw	0
  1751  00FDFF  0000               	dw	0
  1752  00FE01  000A               	dw	10
  1753  00FE03  0010               	dw	16
  1754  00FE05  0000               	dw	0
  1755  00FE07  0060               	dw	96
  1756  00FE09  0000               	dw	0
  1757  00FE0B  0080               	dw	128
  1758  00FE0D  0003               	dw	3
  1759  00FE0F  0000               	dw	0
  1760  00FE11  000C               	dw	12
  1761  00FE13  0000               	dw	0
  1762  00FE15  0010               	dw	16
  1763  00FE17  0000               	dw	0
  1764  00FE19  000C               	dw	12
  1765  00FE1B  0080               	dw	128
  1766  00FE1D  0003               	dw	3
  1767  00FE1F  0060               	dw	96
  1768  00FE21  0000               	dw	0
  1769  00FE23  0010               	dw	16
  1770  00FE25  0000               	dw	0
  1771  00FE27  0000               	dw	0
  1772  00FE29  0000               	dw	0
  1773  00FE2B  000E               	dw	14
  1774  00FE2D  0010               	dw	16
  1775  00FE2F  0000               	dw	0
  1776  00FE31  00E0               	dw	224
  1777  00FE33  0000               	dw	0
  1778  00FE35  0000               	dw	0
  1779  00FE37  0007               	dw	7
  1780  00FE39  0000               	dw	0
  1781  00FE3B  0018               	dw	24
  1782  00FE3D  0000               	dw	0
  1783  00FE3F  0007               	dw	7
  1784  00FE41  00E0               	dw	224
  1785  00FE43  0000               	dw	0
  1786  00FE45  0010               	dw	16
  1787  00FE47  0000               	dw	0
  1788  00FE49  00E0               	dw	224
  1789  00FE4B  0000               	dw	0
  1790  00FE4D  0000               	dw	0
  1791  00FE4F  0007               	dw	7
  1792  00FE51  0000               	dw	0
  1793  00FE53  0018               	dw	24
  1794  00FE55  0000               	dw	0
  1795  00FE57  0007               	dw	7
  1796  00FE59  00E0               	dw	224
  1797  00FE5B  0000               	dw	0
  1798  00FE5D  0010               	dw	16
  1799  00FE5F  0000               	dw	0
  1800  00FE61  0000               	dw	0
  1801  00FE63  0000               	dw	0
  1802  00FE65  0009               	dw	9
  1803  00FE67  0010               	dw	16
  1804  00FE69  0010               	dw	16
  1805  00FE6B  0020               	dw	32
  1806  00FE6D  0008               	dw	8
  1807  00FE6F  0040               	dw	64
  1808  00FE71  0004               	dw	4
  1809  00FE73  0080               	dw	128
  1810  00FE75  0003               	dw	3
  1811  00FE77  0080               	dw	128
  1812  00FE79  0003               	dw	3
  1813  00FE7B  0040               	dw	64
  1814  00FE7D  0004               	dw	4
  1815  00FE7F  0020               	dw	32
  1816  00FE81  0008               	dw	8
  1817  00FE83  0010               	dw	16
  1818  00FE85  0010               	dw	16
  1819  00FE87  0000               	dw	0
  1820  00FE89  0000               	dw	0
  1821  00FE8B  0009               	dw	9
  1822  00FE8D  0010               	dw	16
  1823  00FE8F  0000               	dw	0
  1824  00FE91  00E0               	dw	224
  1825  00FE93  0000               	dw	0
  1826  00FE95  0000               	dw	0
  1827  00FE97  0083               	dw	131
  1828  00FE99  0000               	dw	0
  1829  00FE9B  007C               	dw	124
  1830  00FE9D  0000               	dw	0
  1831  00FE9F  000C               	dw	12
  1832  00FEA1  0000               	dw	0
  1833  00FEA3  0003               	dw	3
  1834  00FEA5  00E0               	dw	224
  1835  00FEA7  0000               	dw	0
  1836  00FEA9  0010               	dw	16
  1837  00FEAB  0000               	dw	0
  1838  00FEAD  0000               	dw	0
  1839  00FEAF  0000               	dw	0
  1840  00FEB1  0008               	dw	8
  1841  00FEB3  0010               	dw	16
  1842  00FEB5  0010               	dw	16
  1843  00FEB7  0010               	dw	16
  1844  00FEB9  0018               	dw	24
  1845  00FEBB  0010               	dw	16
  1846  00FEBD  0016               	dw	22
  1847  00FEBF  0010               	dw	16
  1848  00FEC1  0011               	dw	17
  1849  00FEC3  00D0               	dw	208
  1850  00FEC5  0010               	dw	16
  1851  00FEC7  0030               	dw	48
  1852  00FEC9  0010               	dw	16
  1853  00FECB  0010               	dw	16
  1854  00FECD  0010               	dw	16
  1855  00FECF  0000               	dw	0
  1856  00FED1  0000               	dw	0
  1857  00FED3  0007               	dw	7
  1858  00FED5  0000               	dw	0
  1859  00FED7  0000               	dw	0
  1860  00FED9  0000               	dw	0
  1861  00FEDB  0001               	dw	1
  1862  00FEDD  0080               	dw	128
  1863  00FEDF  0002               	dw	2
  1864  00FEE1  00FC               	dw	252
  1865  00FEE3  007E               	dw	126
  1866  00FEE5  0002               	dw	2
  1867  00FEE7  0080               	dw	128
  1868  00FEE9  0002               	dw	2
  1869  00FEEB  0080               	dw	128
  1870  00FEED  0000               	dw	0
  1871  00FEEF  0000               	dw	0
  1872  00FEF1  0007               	dw	7
  1873  00FEF3  0000               	dw	0
  1874  00FEF5  0000               	dw	0
  1875  00FEF7  0000               	dw	0
  1876  00FEF9  0000               	dw	0
  1877  00FEFB  0000               	dw	0
  1878  00FEFD  0000               	dw	0
  1879  00FEFF  0000               	dw	0
  1880  00FF01  0000               	dw	0
  1881  00FF03  0000               	dw	0
  1882  00FF05  0000               	dw	0
  1883  00FF07  00FE               	dw	254
  1884  00FF09  00FF               	dw	255
  1885  00FF0B  0000               	dw	0
  1886  00FF0D  0000               	dw	0
  1887  00FF0F  0006               	dw	6
  1888  00FF11  0002               	dw	2
  1889  00FF13  0080               	dw	128
  1890  00FF15  0002               	dw	2
  1891  00FF17  0080               	dw	128
  1892  00FF19  00FC               	dw	252
  1893  00FF1B  007E               	dw	126
  1894  00FF1D  0080               	dw	128
  1895  00FF1F  0002               	dw	2
  1896  00FF21  0000               	dw	0
  1897  00FF23  0001               	dw	1
  1898  00FF25  0000               	dw	0
  1899  00FF27  0000               	dw	0
  1900  00FF29  000A               	dw	10
  1901  00FF2B  0000               	dw	0
  1902  00FF2D  0000               	dw	0
  1903  00FF2F  0080               	dw	128
  1904  00FF31  0000               	dw	0
  1905  00FF33  0040               	dw	64
  1906  00FF35  0000               	dw	0
  1907  00FF37  0040               	dw	64
  1908  00FF39  0000               	dw	0
  1909  00FF3B  0040               	dw	64
  1910  00FF3D  0000               	dw	0
  1911  00FF3F  0080               	dw	128
  1912  00FF41  0000               	dw	0
  1913  00FF43  0080               	dw	128
  1914  00FF45  0000               	dw	0
  1915  00FF47  0080               	dw	128
  1916  00FF49  0000               	dw	0
  1917  00FF4B  0040               	dw	64
  1918  00FF4D  0000               	dw	0
  1919  00FF4F  0000               	dw	0
  1920  00FF51  0000               	dw	0
  1921  00FF53  0005               	dw	5
  1922  00FF55  00FF               	dw	255
  1923  00FF57  000F               	dw	15
  1924  00FF59  0001               	dw	1
  1925  00FF5B  0008               	dw	8
  1926  00FF5D  0001               	dw	1
  1927  00FF5F  0008               	dw	8
  1928  00FF61  00FF               	dw	255
  1929  00FF63  000F               	dw	15
  1930  00FF65  0000               	dw	0
  1931  00FF67  0000               	dw	0
  1932  00FF69                     __end_of_font:
  1933                           	opt callstack 0
  1934  00FF69                     _spi_configuration:
  1935                           	opt callstack 0
  1936  00FF69  00                 	db	0
  1937  00FF6A  40                 	db	64
  1938  00FF6B  01                 	db	1
  1939  00FF6C  00                 	db	0
  1940  00FF6D                     __end_of_spi_configuration:
  1941                           	opt callstack 0
  1942  00FF6D                     STR_1:
  1943  00FF6D  58                 	db	88	;'X'
  1944  00FF6E  43                 	db	67	;'C'
  1945  00FF6F  38                 	db	56	;'8'
  1946  00FF70  20                 	db	32
  1947  00FF71  2D                 	db	45
  1948  00FF72  20                 	db	32
  1949  00FF73  42                 	db	66	;'B'
  1950  00FF74  69                 	db	105	;'i'
  1951  00FF75  62                 	db	98	;'b'
  1952  00FF76  6C                 	db	108	;'l'
  1953  00FF77  69                 	db	105	;'i'
  1954  00FF78  6F                 	db	111	;'o'
  1955  00FF79  74                 	db	116	;'t'
  1956  00FF7A  65                 	db	101	;'e'
  1957  00FF7B  63                 	db	99	;'c'
  1958  00FF7C  61                 	db	97	;'a'
  1959  00FF7D  20                 	db	32
  1960  00FF7E  2D                 	db	45
  1961  00FF7F  20                 	db	32
  1962  00FF80  4C                 	db	76	;'L'
  1963  00FF81  43                 	db	67	;'C'
  1964  00FF82  44                 	db	68	;'D'
  1965  00FF83  20                 	db	32
  1966  00FF84  2D                 	db	45
  1967  00FF85  20                 	db	32
  1968  00FF86  49                 	db	73	;'I'
  1969  00FF87  4C                 	db	76	;'L'
  1970  00FF88  49                 	db	73	;'I'
  1971  00FF89  39                 	db	57	;'9'
  1972  00FF8A  33                 	db	51	;'3'
  1973  00FF8B  34                 	db	52	;'4'
  1974  00FF8C  31                 	db	49	;'1'
  1975  00FF8D  00                 	db	0
  1976  00FF8E                     STR_4:
  1977  00FF8E  70                 	db	112	;'p'
  1978  00FF8F  65                 	db	101	;'e'
  1979  00FF90  72                 	db	114	;'r'
  1980  00FF91  63                 	db	99	;'c'
  1981  00FF92  65                 	db	101	;'e'
  1982  00FF93  6E                 	db	110	;'n'
  1983  00FF94  74                 	db	116	;'t'
  1984  00FF95  61                 	db	97	;'a'
  1985  00FF96  67                 	db	103	;'g'
  1986  00FF97  65                 	db	101	;'e'
  1987  00FF98  6D                 	db	109	;'m'
  1988  00FF99  20                 	db	32
  1989  00FF9A  3D                 	db	61	;'='
  1990  00FF9B  20                 	db	32
  1991  00FF9C  25                 	db	37
  1992  00FF9D  2E                 	db	46
  1993  00FF9E  66                 	db	102	;'f'
  1994  00FF9F  20                 	db	32
  1995  00FFA0  20                 	db	32
  1996  00FFA1  00                 	db	0
  1997  00FFA2                     STR_3:
  1998  00FFA2  52                 	db	82	;'R'
  1999  00FFA3  50                 	db	80	;'P'
  2000  00FFA4  4D                 	db	77	;'M'
  2001  00FFA5  3D                 	db	61	;'='
  2002  00FFA6  20                 	db	32
  2003  00FFA7  25                 	db	37
  2004  00FFA8  64                 	db	100	;'d'
  2005  00FFA9  20                 	db	32
  2006  00FFAA  20                 	db	32
  2007  00FFAB  20                 	db	32
  2008  00FFAC  20                 	db	32
  2009  00FFAD  20                 	db	32
  2010  00FFAE  20                 	db	32
  2011  00FFAF  00                 	db	0
  2012  00FFB0                     STR_2:
  2013  00FFB0  50                 	db	80	;'P'
  2014  00FFB1  49                 	db	73	;'I'
  2015  00FFB2  43                 	db	67	;'C'
  2016  00FFB3  20                 	db	32
  2017  00FFB4  2D                 	db	45
  2018  00FFB5  20                 	db	32
  2019  00FFB6  53                 	db	83	;'S'
  2020  00FFB7  45                 	db	69	;'E'
  2021  00FFB8  45                 	db	69	;'E'
  2022  00FFB9  56                 	db	86	;'V'
  2023  00FFBA  00                 	db	0
  2024  00FFBB                     STR_5:
  2025  00FFBB  49                 	db	73	;'I'
  2026  00FFBC  4E                 	db	78	;'N'
  2027  00FFBD  46                 	db	70	;'F'
  2028  00FFBE  00                 	db	0
  2029  00FFBF                     STR_9:
  2030  00FFBF  4E                 	db	78	;'N'
  2031  00FFC0  41                 	db	65	;'A'
  2032  00FFC1  4E                 	db	78	;'N'
  2033  00FFC2  00                 	db	0
  2034  00FFC3                     STR_94:
  2035  00FFC3  68                 	db	104	;'h'
  2036  00FFC4  68                 	db	104	;'h'
  2037  00FFC5  58                 	db	88	;'X'
  2038  00FFC6  00                 	db	0
  2039  00FFC7                     STR_13:
  2040  00FFC7  68                 	db	104	;'h'
  2041  00FFC8  68                 	db	104	;'h'
  2042  00FFC9  64                 	db	100	;'d'
  2043  00FFCA  00                 	db	0
  2044  00FFCB                     STR_6:
  2045  00FFCB  69                 	db	105	;'i'
  2046  00FFCC  6E                 	db	110	;'n'
  2047  00FFCD  66                 	db	102	;'f'
  2048  00FFCE  00                 	db	0
  2049  00FFCF                     STR_17:
  2050  00FFCF  68                 	db	104	;'h'
  2051  00FFD0  68                 	db	104	;'h'
  2052  00FFD1  69                 	db	105	;'i'
  2053  00FFD2  00                 	db	0
  2054  00FFD3                     STR_10:
  2055  00FFD3  6E                 	db	110	;'n'
  2056  00FFD4  61                 	db	97	;'a'
  2057  00FFD5  6E                 	db	110	;'n'
  2058  00FFD6  00                 	db	0
  2059  00FFD7                     STR_60:
  2060  00FFD7  68                 	db	104	;'h'
  2061  00FFD8  68                 	db	104	;'h'
  2062  00FFD9  6E                 	db	110	;'n'
  2063  00FFDA  00                 	db	0
  2064  00FFDB                     STR_45:
  2065  00FFDB  68                 	db	104	;'h'
  2066  00FFDC  68                 	db	104	;'h'
  2067  00FFDD  6F                 	db	111	;'o'
  2068  00FFDE  00                 	db	0
  2069  00FFDF                     STR_75:
  2070  00FFDF  68                 	db	104	;'h'
  2071  00FFE0  68                 	db	104	;'h'
  2072  00FFE1  75                 	db	117	;'u'
  2073  00FFE2  00                 	db	0
  2074  00FFE3                     STR_90:
  2075  00FFE3  68                 	db	104	;'h'
  2076  00FFE4  68                 	db	104	;'h'
  2077  00FFE5  78                 	db	120	;'x'
  2078  00FFE6  00                 	db	0
  2079  00FFE7                     STR_112:
  2080  00FFE7  7A                 	db	122	;'z'
  2081  00FFE8  58                 	db	88	;'X'
  2082  00FFE9  00                 	db	0
  2083  00FFEA                     STR_31:
  2084  00FFEA  7A                 	db	122	;'z'
  2085  00FFEB  64                 	db	100	;'d'
  2086  00FFEC  00                 	db	0
  2087  00FFED                     STR_40:
  2088  00FFED  6C                 	db	108	;'l'
  2089  00FFEE  66                 	db	102	;'f'
  2090  00FFEF  00                 	db	0
  2091  00FFF0                     STR_35:
  2092  00FFF0  7A                 	db	122	;'z'
  2093  00FFF1  69                 	db	105	;'i'
  2094  00FFF2  00                 	db	0
  2095  00FFF3                     STR_70:
  2096  00FFF3  7A                 	db	122	;'z'
  2097  00FFF4  6E                 	db	110	;'n'
  2098  00FFF5  00                 	db	0
  2099  00FFF6                     STR_55:
  2100  00FFF6  7A                 	db	122	;'z'
  2101  00FFF7  6F                 	db	111	;'o'
  2102  00FFF8  00                 	db	0
  2103  00FFF9                     STR_85:
  2104  00FFF9  7A                 	db	122	;'z'
  2105  00FFFA  75                 	db	117	;'u'
  2106  00FFFB  00                 	db	0
  2107  00FFFC                     STR_108:
  2108  00FFFC  7A                 	db	122	;'z'
  2109  00FFFD  78                 	db	120	;'x'
  2110  00FFFE  00                 	db	0
  2111  0000                     
  2112                           ; #config settings
  2113  00FFFF  00                 	db	0	; dummy byte at the end
  2114  0000                     
  2115                           	psect	nvCOMRAM
  2116  00003F                     __pnvCOMRAM:
  2117                           	opt callstack 0
  2118  00003F                     _INT0_InterruptHandler:
  2119                           	opt callstack 0
  2120  00003F                     	ds	2
  2121  000041                     _timer0ReloadVal:
  2122                           	opt callstack 0
  2123  000041                     	ds	2
  2124  000043                     _timer1ReloadVal:
  2125                           	opt callstack 0
  2126  000043                     	ds	2
  2127  000045                     _ADC_InterruptHandler:
  2128                           	opt callstack 0
  2129  000045                     	ds	2
  2130  000047                     _IOCB4_InterruptHandler:
  2131                           	opt callstack 0
  2132  000047                     	ds	2
  2133  0000                     _IOCBbits	set	3930
  2134  0000                     _WPUB	set	3931
  2135  0000                     _ANCON1	set	3932
  2136  0000                     _ANCON0	set	3933
  2137  0000                     _LATEbits	set	3981
  2138  0000                     _SSPSTATbits	set	4039
  2139  0000                     _LATAbits	set	3977
  2140  0000                     _PORTBbits	set	3969
  2141  0000                     _T0CON	set	4053
  2142  0000                     _TMR0L	set	4054
  2143  0000                     _TMR0H	set	4055
  2144  0000                     _T0CONbits	set	4053
  2145  0000                     _T1GCONbits	set	4010
  2146  0000                     _T1CONbits	set	4045
  2147  0000                     _T1CON	set	4045
  2148  0000                     _TMR1L	set	4046
  2149  0000                     _TMR1H	set	4047
  2150  0000                     _T1GCON	set	4010
  2151  0000                     _ADCON0bits	set	4034
  2152  0000                     _ADRESL	set	4035
  2153  0000                     _ADRESH	set	4036
  2154  0000                     _ADCON2	set	4032
  2155  0000                     _ADCON1	set	4033
  2156  0000                     _ADCON0	set	4034
  2157  0000                     _SSPBUF	set	4041
  2158  0000                     _SSPCON2	set	4037
  2159  0000                     _SSPCON1bits	set	4038
  2160  0000                     _TRISCbits	set	3988
  2161  0000                     _SSPADD	set	4040
  2162  0000                     _SSPCON1	set	4038
  2163  0000                     _SSPSTAT	set	4039
  2164  0000                     _PIR1bits	set	3998
  2165  0000                     _PIE1bits	set	3997
  2166  0000                     _RCONbits	set	4048
  2167  0000                     _REFOCON	set	3994
  2168  0000                     _OSCTUNE	set	3995
  2169  0000                     _OSCCON2	set	4050
  2170  0000                     _OSCCON	set	4051
  2171  0000                     _INTCONbits	set	4082
  2172  0000                     _INTCON2bits	set	4081
  2173  0000                     _TRISD	set	3989
  2174  0000                     _TRISC	set	3988
  2175  0000                     _TRISB	set	3987
  2176  0000                     _TRISA	set	3986
  2177  0000                     _TRISE	set	3990
  2178  0000                     _LATC	set	3979
  2179  0000                     _LATB	set	3978
  2180  0000                     _LATA	set	3977
  2181  0000                     _LATD	set	3980
  2182  0000                     _LATE	set	3981
  2183                           
  2184                           	psect	cinit
  2185  005F74                     __pcinit:
  2186                           	opt callstack 0
  2187  005F74                     start_initialization:
  2188                           	opt callstack 0
  2189  005F74                     __initialization:
  2190                           	opt callstack 0
  2191                           
  2192                           ; Initialize objects allocated to COMRAM (7 bytes)
  2193                           ; load TBLPTR registers with __pidataCOMRAM
  2194  005F74  0EAA               	movlw	low __pidataCOMRAM
  2195  005F76  6EF6               	movwf	tblptrl,c
  2196  005F78  0E66               	movlw	high __pidataCOMRAM
  2197  005F7A  6EF7               	movwf	tblptrh,c
  2198  005F7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2199  005F7E  6EF8               	movwf	tblptru,c
  2200  005F80  EE00  F049         	lfsr	0,__pdataCOMRAM
  2201  005F84  EE10 F007          	lfsr	1,7
  2202  005F88                     copy_data0:
  2203  005F88  0009               	tblrd		*+
  2204  005F8A  CFF5 FFEE          	movff	tablat,postinc0
  2205  005F8E  50E5               	movf	postdec1,w,c
  2206  005F90  50E1               	movf	fsr1l,w,c
  2207  005F92  E1FA               	bnz	copy_data0
  2208                           
  2209                           ; Clear objects allocated to BANK2 (100 bytes)
  2210  005F94  EE02  F000         	lfsr	0,__pbssBANK2
  2211  005F98  0E64               	movlw	100
  2212  005F9A                     clear_0:
  2213  005F9A  6AEE               	clrf	postinc0,c
  2214  005F9C  06E8               	decf	wreg,f,c
  2215  005F9E  E1FD               	bnz	clear_0
  2216                           
  2217                           ; Clear objects allocated to BANK1 (190 bytes)
  2218  005FA0  EE01  F000         	lfsr	0,__pbssBANK1
  2219  005FA4  0EBE               	movlw	190
  2220  005FA6                     clear_1:
  2221  005FA6  6AEE               	clrf	postinc0,c
  2222  005FA8  06E8               	decf	wreg,f,c
  2223  005FAA  E1FD               	bnz	clear_1
  2224                           
  2225                           ; Clear objects allocated to BANK0 (2 bytes)
  2226  005FAC  0100               	movlb	0
  2227  005FAE  6BF0               	clrf	(__pbssBANK0+1)& (0+255),b
  2228  005FB0  6BEF               	clrf	__pbssBANK0& (0+255),b
  2229                           
  2230                           ; Clear objects allocated to COMRAM (18 bytes)
  2231  005FB2  EE00  F02D         	lfsr	0,__pbssCOMRAM
  2232  005FB6  0E12               	movlw	18
  2233  005FB8                     clear_2:
  2234  005FB8  6AEE               	clrf	postinc0,c
  2235  005FBA  06E8               	decf	wreg,f,c
  2236  005FBC  E1FD               	bnz	clear_2
  2237  005FBE                     end_of_initialization:
  2238                           	opt callstack 0
  2239  005FBE                     __end_of__initialization:
  2240                           	opt callstack 0
  2241  005FBE  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2242  005FC0  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2243  005FC2  0100               	movlb	0
  2244  005FC4  EFD1  F022         	goto	_main	;jump to C main() function
  2245                           
  2246                           	psect	bssCOMRAM
  2247  00002D                     __pbssCOMRAM:
  2248                           	opt callstack 0
  2249  00002D                     floorf@F524:
  2250                           	opt callstack 0
  2251  00002D                     	ds	4
  2252  000031                     ___fpclassifyf@F463:
  2253                           	opt callstack 0
  2254  000031                     	ds	4
  2255  000035                     _nout:
  2256                           	opt callstack 0
  2257  000035                     	ds	2
  2258  000037                     _width:
  2259                           	opt callstack 0
  2260  000037                     	ds	2
  2261  000039                     _flags:
  2262                           	opt callstack 0
  2263  000039                     	ds	2
  2264  00003B                     _global_bg_color:
  2265                           	opt callstack 0
  2266  00003B                     	ds	2
  2267  00003D                     _codigo_digital:
  2268                           	opt callstack 0
  2269  00003D                     	ds	2
  2270                           
  2271                           	psect	dataCOMRAM
  2272  000049                     __pdataCOMRAM:
  2273                           	opt callstack 0
  2274  000049                     stoa@F1174:
  2275                           	opt callstack 0
  2276  000049                     	ds	7
  2277                           
  2278                           	psect	bssBANK0
  2279  0000EF                     __pbssBANK0:
  2280                           	opt callstack 0
  2281  0000EF                     _prec:
  2282                           	opt callstack 0
  2283  0000EF                     	ds	2
  2284                           
  2285                           	psect	bssBANK1
  2286  000100                     __pbssBANK1:
  2287                           	opt callstack 0
  2288  000100                     _percentagem:
  2289                           	opt callstack 0
  2290  000100                     	ds	4
  2291  000104                     _errno:
  2292                           	opt callstack 0
  2293  000104                     	ds	2
  2294  000106                     _rpm:
  2295                           	opt callstack 0
  2296  000106                     	ds	2
  2297  000108                     _string:
  2298                           	opt callstack 0
  2299  000108                     	ds	100
  2300  00016C                     _dbuf:
  2301                           	opt callstack 0
  2302  00016C                     	ds	80
  2303  0001BC                     _ticks:
  2304                           	opt callstack 0
  2305  0001BC                     	ds	2
  2306                           
  2307                           	psect	bssBANK2
  2308  000200                     __pbssBANK2:
  2309                           	opt callstack 0
  2310  000200                     _string_rpm:
  2311                           	opt callstack 0
  2312  000200                     	ds	100
  2313                           
  2314                           	psect	cstackBANK1
  2315  0001BE                     __pcstackBANK1:
  2316                           	opt callstack 0
  2317  0001BE                     vfpfcnvrt@cp:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 2 bytes @ 0x0
  2321  0001BE                     	ds	2
  2322  0001C0                     vfpfcnvrt@done:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x2
  2326  0001C0                     	ds	2
  2327  0001C2                     _vfpfcnvrt$1665:
  2328                           	opt callstack 0
  2329                           
  2330                           ; 2 bytes @ 0x4
  2331  0001C2                     	ds	2
  2332  0001C4                     _vfpfcnvrt$1666:
  2333                           	opt callstack 0
  2334                           
  2335                           ; 2 bytes @ 0x6
  2336  0001C4                     	ds	2
  2337  0001C6                     _vfpfcnvrt$1687:
  2338                           	opt callstack 0
  2339                           
  2340                           ; 2 bytes @ 0x8
  2341  0001C6                     	ds	2
  2342  0001C8                     vfpfcnvrt@f:
  2343                           	opt callstack 0
  2344                           
  2345                           ; 4 bytes @ 0xA
  2346  0001C8                     	ds	4
  2347  0001CC                     vfpfcnvrt@ct:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 3 bytes @ 0xE
  2351  0001CC                     	ds	3
  2352  0001CF                     vfpfcnvrt@ll:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 8 bytes @ 0x11
  2356  0001CF                     	ds	8
  2357  0001D7                     vfpfcnvrt@vp:
  2358                           	opt callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x19
  2361  0001D7                     	ds	2
  2362  0001D9                     vfpfcnvrt@c:
  2363                           	opt callstack 0
  2364                           
  2365                           ; 1 bytes @ 0x1B
  2366  0001D9                     	ds	1
  2367  0001DA                     vfpfcnvrt@llu:
  2368                           	opt callstack 0
  2369                           
  2370                           ; 8 bytes @ 0x1C
  2371  0001DA                     	ds	8
  2372  0001E2                     ?_vfprintf:
  2373                           	opt callstack 0
  2374  0001E2                     vfprintf@fp:
  2375                           	opt callstack 0
  2376                           
  2377                           ; 2 bytes @ 0x24
  2378  0001E2                     	ds	2
  2379  0001E4                     vfprintf@fmt:
  2380                           	opt callstack 0
  2381                           
  2382                           ; 2 bytes @ 0x26
  2383  0001E4                     	ds	2
  2384  0001E6                     vfprintf@ap:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 2 bytes @ 0x28
  2388  0001E6                     	ds	2
  2389  0001E8                     ?_vsnprintf:
  2390                           	opt callstack 0
  2391  0001E8                     vsnprintf@s:
  2392                           	opt callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x2A
  2395  0001E8                     	ds	2
  2396  0001EA                     vsnprintf@n:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x2C
  2400  0001EA                     	ds	2
  2401  0001EC                     vsnprintf@fmt:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x2E
  2405  0001EC                     	ds	2
  2406  0001EE                     vsnprintf@ap:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x30
  2410  0001EE                     	ds	2
  2411  0001F0                     ?_snprintf:
  2412                           	opt callstack 0
  2413  0001F0                     snprintf@s:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x32
  2417  0001F0                     	ds	2
  2418  0001F2                     snprintf@n:
  2419                           	opt callstack 0
  2420                           
  2421                           ; 2 bytes @ 0x34
  2422  0001F2                     	ds	2
  2423  0001F4                     snprintf@fmt:
  2424                           	opt callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x36
  2427  0001F4                     	ds	6
  2428                           
  2429                           	psect	cstackBANK0
  2430  000060                     __pcstackBANK0:
  2431                           	opt callstack 0
  2432  000060                     ??_TMR1_Initialize:
  2433  000060                     ??_TMR0_Initialize:
  2434  000060                     ??_SPI_Open:
  2435  000060                     ??_msDelay:
  2436  000060                     ?_strlen:
  2437                           	opt callstack 0
  2438  000060                     ?___fpclassifyf:
  2439                           	opt callstack 0
  2440  000060                     ?_isupper:
  2441                           	opt callstack 0
  2442  000060                     ?_isalpha:
  2443                           	opt callstack 0
  2444  000060                     ?_isdigit:
  2445                           	opt callstack 0
  2446  000060                     ?_strncmp:
  2447                           	opt callstack 0
  2448  000060                     ?_isspace:
  2449                           	opt callstack 0
  2450  000060                     ?_islower:
  2451                           	opt callstack 0
  2452  000060                     ?___wmul:
  2453                           	opt callstack 0
  2454  000060                     ?___awdiv:
  2455                           	opt callstack 0
  2456  000060                     ?___awmod:
  2457                           	opt callstack 0
  2458  000060                     ?___fladd:
  2459                           	opt callstack 0
  2460  000060                     ?___fldiv:
  2461                           	opt callstack 0
  2462  000060                     ?___flmul:
  2463                           	opt callstack 0
  2464  000060                     ?___aldiv:
  2465                           	opt callstack 0
  2466  000060                     ?___flneg:
  2467                           	opt callstack 0
  2468  000060                     ?___fltol:
  2469                           	opt callstack 0
  2470  000060                     ?___aodiv:
  2471                           	opt callstack 0
  2472  000060                     ?___aomod:
  2473                           	opt callstack 0
  2474  000060                     ?___lodiv:
  2475                           	opt callstack 0
  2476  000060                     ?___lomod:
  2477                           	opt callstack 0
  2478  000060                     SPI_ExchangeByte@data:
  2479                           	opt callstack 0
  2480  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  2481                           	opt callstack 0
  2482  000060                     ADC_SetInterruptHandler@InterruptHandler:
  2483                           	opt callstack 0
  2484  000060                     INT0_SetInterruptHandler@InterruptHandler:
  2485                           	opt callstack 0
  2486  000060                     ___wmul@multiplier:
  2487                           	opt callstack 0
  2488  000060                     ___awdiv@dividend:
  2489                           	opt callstack 0
  2490  000060                     ___awmod@dividend:
  2491                           	opt callstack 0
  2492  000060                     isalpha@c:
  2493                           	opt callstack 0
  2494  000060                     isdigit@c:
  2495                           	opt callstack 0
  2496  000060                     isspace@c:
  2497                           	opt callstack 0
  2498  000060                     isupper@c:
  2499                           	opt callstack 0
  2500  000060                     fputc@c:
  2501                           	opt callstack 0
  2502  000060                     strcpy@dest:
  2503                           	opt callstack 0
  2504  000060                     strlen@s:
  2505                           	opt callstack 0
  2506  000060                     strncmp@_l:
  2507                           	opt callstack 0
  2508  000060                     islower@c:
  2509                           	opt callstack 0
  2510  000060                     ___aldiv@dividend:
  2511                           	opt callstack 0
  2512  000060                     ___fleq@ff1:
  2513                           	opt callstack 0
  2514  000060                     ___flneg@f1:
  2515                           	opt callstack 0
  2516  000060                     ___fltol@f1:
  2517                           	opt callstack 0
  2518  000060                     ___fladd@b:
  2519                           	opt callstack 0
  2520  000060                     ___fldiv@b:
  2521                           	opt callstack 0
  2522  000060                     ___flmul@b:
  2523                           	opt callstack 0
  2524  000060                     ___fpclassifyf@x:
  2525                           	opt callstack 0
  2526  000060                     ___aodiv@dividend:
  2527                           	opt callstack 0
  2528  000060                     ___aomod@dividend:
  2529                           	opt callstack 0
  2530  000060                     ___lodiv@dividend:
  2531                           	opt callstack 0
  2532  000060                     ___lomod@dividend:
  2533                           	opt callstack 0
  2534                           
  2535                           ; 8 bytes @ 0x0
  2536  000060                     	ds	1
  2537  000061                     SPI_Open@spiUniqueConfiguration:
  2538                           	opt callstack 0
  2539  000061                     msDelay@ms:
  2540                           	opt callstack 0
  2541  000061                     lcd_send@value:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 1 bytes @ 0x1
  2545  000061                     	ds	1
  2546  000062                     ??_isupper:
  2547  000062                     ??_isalpha:
  2548  000062                     ??_isdigit:
  2549  000062                     ??_isspace:
  2550  000062                     ??_islower:
  2551  000062                     msDelay@k:
  2552                           	opt callstack 0
  2553  000062                     lcd_send@dc:
  2554                           	opt callstack 0
  2555  000062                     ___wmul@multiplicand:
  2556                           	opt callstack 0
  2557  000062                     ___awdiv@divisor:
  2558                           	opt callstack 0
  2559  000062                     ___awmod@divisor:
  2560                           	opt callstack 0
  2561  000062                     fputc@fp:
  2562                           	opt callstack 0
  2563  000062                     strcpy@src:
  2564                           	opt callstack 0
  2565  000062                     strlen@a:
  2566                           	opt callstack 0
  2567  000062                     strncmp@_r:
  2568                           	opt callstack 0
  2569                           
  2570                           ; 2 bytes @ 0x2
  2571  000062                     	ds	1
  2572  000063                     lcd_set_cursor_x@x:
  2573                           	opt callstack 0
  2574  000063                     lcd_set_cursor_y@y:
  2575                           	opt callstack 0
  2576  000063                     lcd_draw_pixel@color:
  2577                           	opt callstack 0
  2578                           
  2579                           ; 2 bytes @ 0x3
  2580  000063                     	ds	1
  2581  000064                     ??_fputc:
  2582  000064                     ??___fpclassifyf:
  2583  000064                     ??_strcpy:
  2584  000064                     ??___fltol:
  2585  000064                     ___awdiv@counter:
  2586                           	opt callstack 0
  2587  000064                     ___awmod@counter:
  2588                           	opt callstack 0
  2589  000064                     ___wmul@product:
  2590                           	opt callstack 0
  2591  000064                     strncmp@n:
  2592                           	opt callstack 0
  2593  000064                     ___aldiv@divisor:
  2594                           	opt callstack 0
  2595  000064                     ___fleq@ff2:
  2596                           	opt callstack 0
  2597  000064                     ___fladd@a:
  2598                           	opt callstack 0
  2599  000064                     ___fldiv@a:
  2600                           	opt callstack 0
  2601  000064                     ___flmul@a:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 4 bytes @ 0x4
  2605  000064                     	ds	1
  2606  000065                     ___awdiv@sign:
  2607                           	opt callstack 0
  2608  000065                     ___awmod@sign:
  2609                           	opt callstack 0
  2610  000065                     lcd_set_cursor@x:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0x5
  2614  000065                     	ds	1
  2615  000066                     ??_strncmp:
  2616  000066                     ?_tolower:
  2617                           	opt callstack 0
  2618  000066                     ?_toupper:
  2619                           	opt callstack 0
  2620  000066                     _isspace$2288:
  2621                           	opt callstack 0
  2622  000066                     ___awdiv@quotient:
  2623                           	opt callstack 0
  2624  000066                     strcpy@s:
  2625                           	opt callstack 0
  2626  000066                     tolower@c:
  2627                           	opt callstack 0
  2628  000066                     toupper@c:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 2 bytes @ 0x6
  2632  000066                     	ds	1
  2633  000067                     ?_atoi:
  2634                           	opt callstack 0
  2635  000067                     lcd_set_cursor@y:
  2636                           	opt callstack 0
  2637  000067                     atoi@s:
  2638                           	opt callstack 0
  2639  000067                     strncmp@l:
  2640                           	opt callstack 0
  2641                           
  2642                           ; 2 bytes @ 0x7
  2643  000067                     	ds	1
  2644  000068                     ??_tolower:
  2645  000068                     ??_toupper:
  2646  000068                     ??___fladd:
  2647  000068                     ??___fldiv:
  2648  000068                     ??___flmul:
  2649  000068                     ??___fleq:
  2650  000068                     ___aldiv@counter:
  2651                           	opt callstack 0
  2652  000068                     ___fltol@sign1:
  2653                           	opt callstack 0
  2654  000068                     ___fpclassifyf@e:
  2655                           	opt callstack 0
  2656  000068                     strcpy@d:
  2657                           	opt callstack 0
  2658  000068                     ___aodiv@divisor:
  2659                           	opt callstack 0
  2660  000068                     ___aomod@divisor:
  2661                           	opt callstack 0
  2662  000068                     ___lodiv@divisor:
  2663                           	opt callstack 0
  2664  000068                     ___lomod@divisor:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 8 bytes @ 0x8
  2668  000068                     	ds	1
  2669  000069                     ??_atoi:
  2670  000069                     ?_stoa:
  2671                           	opt callstack 0
  2672  000069                     ___aldiv@sign:
  2673                           	opt callstack 0
  2674  000069                     ___fltol@exp1:
  2675                           	opt callstack 0
  2676  000069                     lcd_fill@bg_color:
  2677                           	opt callstack 0
  2678  000069                     lcd_draw_pixel_at@x:
  2679                           	opt callstack 0
  2680  000069                     lcd_draw_char@x:
  2681                           	opt callstack 0
  2682  000069                     stoa@fp:
  2683                           	opt callstack 0
  2684  000069                     fputs@s:
  2685                           	opt callstack 0
  2686  000069                     strncmp@r:
  2687                           	opt callstack 0
  2688                           
  2689                           ; 2 bytes @ 0x9
  2690  000069                     	ds	1
  2691  00006A                     ___aldiv@quotient:
  2692                           	opt callstack 0
  2693  00006A                     ___fpclassifyf@u:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 4 bytes @ 0xA
  2697  00006A                     	ds	1
  2698  00006B                     lcd_fill@height:
  2699                           	opt callstack 0
  2700  00006B                     lcd_draw_pixel_at@y:
  2701                           	opt callstack 0
  2702  00006B                     lcd_draw_char@y:
  2703                           	opt callstack 0
  2704  00006B                     stoa@s:
  2705                           	opt callstack 0
  2706  00006B                     fputs@fp:
  2707                           	opt callstack 0
  2708                           
  2709                           ; 2 bytes @ 0xB
  2710  00006B                     	ds	1
  2711  00006C                     ___fladd@signs:
  2712                           	opt callstack 0
  2713  00006C                     ___flmul@sign:
  2714                           	opt callstack 0
  2715  00006C                     _tolower$2371:
  2716                           	opt callstack 0
  2717  00006C                     _toupper$2386:
  2718                           	opt callstack 0
  2719  00006C                     ___fldiv@rem:
  2720                           	opt callstack 0
  2721                           
  2722                           ; 4 bytes @ 0xC
  2723  00006C                     	ds	1
  2724  00006D                     ??_stoa:
  2725  00006D                     ___fladd@aexp:
  2726                           	opt callstack 0
  2727  00006D                     ___flmul@aexp:
  2728                           	opt callstack 0
  2729  00006D                     fputs@c:
  2730                           	opt callstack 0
  2731  00006D                     lcd_fill@width:
  2732                           	opt callstack 0
  2733  00006D                     lcd_draw_pixel_at@color:
  2734                           	opt callstack 0
  2735  00006D                     lcd_draw_char@fIndex:
  2736                           	opt callstack 0
  2737  00006D                     atoi@neg:
  2738                           	opt callstack 0
  2739                           
  2740                           ; 2 bytes @ 0xD
  2741  00006D                     	ds	1
  2742  00006E                     ___fladd@bexp:
  2743                           	opt callstack 0
  2744  00006E                     fputs@i:
  2745                           	opt callstack 0
  2746  00006E                     ___flmul@grs:
  2747                           	opt callstack 0
  2748  00006E                     stoa@nuls:
  2749                           	opt callstack 0
  2750                           
  2751                           ; 7 bytes @ 0xE
  2752  00006E                     	ds	1
  2753  00006F                     ___fladd@grs:
  2754                           	opt callstack 0
  2755  00006F                     lcd_draw_line@x0:
  2756                           	opt callstack 0
  2757  00006F                     lcd_draw_char@fg_color:
  2758                           	opt callstack 0
  2759  00006F                     _atoi$2248:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 2 bytes @ 0xF
  2763  00006F                     	ds	1
  2764  000070                     ?_pad:
  2765                           	opt callstack 0
  2766  000070                     ___aodiv@counter:
  2767                           	opt callstack 0
  2768  000070                     ___aomod@counter:
  2769                           	opt callstack 0
  2770  000070                     ___lomod@counter:
  2771                           	opt callstack 0
  2772  000070                     ___fldiv@sign:
  2773                           	opt callstack 0
  2774  000070                     pad@fp:
  2775                           	opt callstack 0
  2776  000070                     ___lodiv@quotient:
  2777                           	opt callstack 0
  2778                           
  2779                           ; 8 bytes @ 0x10
  2780  000070                     	ds	1
  2781  000071                     ___aodiv@sign:
  2782                           	opt callstack 0
  2783  000071                     ___aomod@sign:
  2784                           	opt callstack 0
  2785  000071                     lcd_draw_line@y0:
  2786                           	opt callstack 0
  2787  000071                     lcd_draw_char@bg_color:
  2788                           	opt callstack 0
  2789  000071                     ___fldiv@new_exp:
  2790                           	opt callstack 0
  2791  000071                     _atoi$2250:
  2792                           	opt callstack 0
  2793                           
  2794                           ; 2 bytes @ 0x11
  2795  000071                     	ds	1
  2796  000072                     ?_abs:
  2797                           	opt callstack 0
  2798  000072                     ___flmul@bexp:
  2799                           	opt callstack 0
  2800  000072                     pad@buf:
  2801                           	opt callstack 0
  2802  000072                     abs@a:
  2803                           	opt callstack 0
  2804  000072                     ___aodiv@quotient:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 8 bytes @ 0x12
  2808  000072                     	ds	1
  2809  000073                     ??_lcd_draw_char:
  2810  000073                     _atoi$2249:
  2811                           	opt callstack 0
  2812  000073                     lcd_draw_line@x1:
  2813                           	opt callstack 0
  2814  000073                     ___fldiv@grs:
  2815                           	opt callstack 0
  2816  000073                     ___flmul@prod:
  2817                           	opt callstack 0
  2818                           
  2819                           ; 4 bytes @ 0x13
  2820  000073                     	ds	1
  2821  000074                     ??_abs:
  2822  000074                     pad@p:
  2823                           	opt callstack 0
  2824  000074                     atoi@n:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x14
  2828  000074                     	ds	1
  2829  000075                     lcd_draw_line@y1:
  2830                           	opt callstack 0
  2831  000075                     stoa@i:
  2832                           	opt callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x15
  2835  000075                     	ds	1
  2836  000076                     ??_pad:
  2837                           
  2838                           ; 1 bytes @ 0x16
  2839  000076                     	ds	1
  2840  000077                     ___fldiv@bexp:
  2841                           	opt callstack 0
  2842  000077                     lcd_draw_line@color:
  2843                           	opt callstack 0
  2844  000077                     pad@i:
  2845                           	opt callstack 0
  2846  000077                     stoa@w:
  2847                           	opt callstack 0
  2848  000077                     ___flmul@temp:
  2849                           	opt callstack 0
  2850                           
  2851                           ; 2 bytes @ 0x17
  2852  000077                     	ds	1
  2853  000078                     ___lodiv@counter:
  2854                           	opt callstack 0
  2855  000078                     ___fldiv@aexp:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 1 bytes @ 0x18
  2859  000078                     	ds	1
  2860  000079                     ??_lcd_draw_line:
  2861  000079                     ?_floorf:
  2862                           	opt callstack 0
  2863  000079                     ?___flsub:
  2864                           	opt callstack 0
  2865  000079                     pad@w:
  2866                           	opt callstack 0
  2867  000079                     stoa@cp:
  2868                           	opt callstack 0
  2869  000079                     ___flge@ff1:
  2870                           	opt callstack 0
  2871  000079                     ___flsub@b:
  2872                           	opt callstack 0
  2873  000079                     floorf@x:
  2874                           	opt callstack 0
  2875                           
  2876                           ; 4 bytes @ 0x19
  2877  000079                     	ds	1
  2878  00007A                     lcd_draw_line@sx:
  2879                           	opt callstack 0
  2880                           
  2881                           ; 2 bytes @ 0x1A
  2882  00007A                     	ds	1
  2883  00007B                     ?_ctoa:
  2884                           	opt callstack 0
  2885  00007B                     ?_dtoa:
  2886                           	opt callstack 0
  2887  00007B                     ?_otoa:
  2888                           	opt callstack 0
  2889  00007B                     ?_utoa:
  2890                           	opt callstack 0
  2891  00007B                     ?_xtoa:
  2892                           	opt callstack 0
  2893  00007B                     ctoa@fp:
  2894                           	opt callstack 0
  2895  00007B                     dtoa@fp:
  2896                           	opt callstack 0
  2897  00007B                     otoa@fp:
  2898                           	opt callstack 0
  2899  00007B                     stoa@p:
  2900                           	opt callstack 0
  2901  00007B                     utoa@fp:
  2902                           	opt callstack 0
  2903  00007B                     xtoa@fp:
  2904                           	opt callstack 0
  2905                           
  2906                           ; 2 bytes @ 0x1B
  2907  00007B                     	ds	1
  2908  00007C                     lcd_draw_char@j:
  2909                           	opt callstack 0
  2910  00007C                     lcd_draw_line@sy:
  2911                           	opt callstack 0
  2912                           
  2913                           ; 2 bytes @ 0x1C
  2914  00007C                     	ds	1
  2915  00007D                     ??_floorf:
  2916  00007D                     lcd_draw_char@k:
  2917                           	opt callstack 0
  2918  00007D                     ctoa@c:
  2919                           	opt callstack 0
  2920  00007D                     stoa@l:
  2921                           	opt callstack 0
  2922  00007D                     ___flge@ff2:
  2923                           	opt callstack 0
  2924  00007D                     ___flsub@a:
  2925                           	opt callstack 0
  2926  00007D                     dtoa@d:
  2927                           	opt callstack 0
  2928  00007D                     otoa@d:
  2929                           	opt callstack 0
  2930  00007D                     utoa@d:
  2931                           	opt callstack 0
  2932  00007D                     xtoa@d:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 8 bytes @ 0x1D
  2936  00007D                     	ds	1
  2937  00007E                     lcd_draw_char@i:
  2938                           	opt callstack 0
  2939  00007E                     lcd_draw_line@err:
  2940                           	opt callstack 0
  2941  00007E                     ctoa@w:
  2942                           	opt callstack 0
  2943                           
  2944                           ; 2 bytes @ 0x1E
  2945  00007E                     	ds	1
  2946  00007F                     lcd_draw_string@x:
  2947                           	opt callstack 0
  2948                           
  2949                           ; 2 bytes @ 0x1F
  2950  00007F                     	ds	1
  2951  000080                     lcd_draw_line@e2:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 2 bytes @ 0x20
  2955  000080                     	ds	1
  2956  000081                     ??___flge:
  2957  000081                     lcd_draw_string@y:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x21
  2961  000081                     	ds	1
  2962  000082                     lcd_draw_line@dx:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x22
  2966  000082                     	ds	1
  2967  000083                     lcd_draw_string@pS:
  2968                           	opt callstack 0
  2969  000083                     floorf@m:
  2970                           	opt callstack 0
  2971                           
  2972                           ; 4 bytes @ 0x23
  2973  000083                     	ds	1
  2974  000084                     lcd_draw_line@dy:
  2975                           	opt callstack 0
  2976                           
  2977                           ; 2 bytes @ 0x24
  2978  000084                     	ds	1
  2979  000085                     ??_dtoa:
  2980  000085                     ??_otoa:
  2981  000085                     ??_utoa:
  2982  000085                     xtoa@x:
  2983                           	opt callstack 0
  2984  000085                     lcd_draw_string@fg_color:
  2985                           	opt callstack 0
  2986                           
  2987                           ; 2 bytes @ 0x25
  2988  000085                     	ds	1
  2989  000086                     ??_xtoa:
  2990                           
  2991                           ; 1 bytes @ 0x26
  2992  000086                     	ds	1
  2993  000087                     lcd_draw_string@bg_color:
  2994                           	opt callstack 0
  2995  000087                     floorf@e:
  2996                           	opt callstack 0
  2997                           
  2998                           ; 2 bytes @ 0x27
  2999  000087                     	ds	2
  3000  000089                     ??_lcd_draw_string:
  3001  000089                     floorf@u:
  3002                           	opt callstack 0
  3003                           
  3004                           ; 4 bytes @ 0x29
  3005  000089                     	ds	4
  3006  00008D                     ?_efgtoa:
  3007                           	opt callstack 0
  3008  00008D                     lcd_draw_string@k:
  3009                           	opt callstack 0
  3010  00008D                     _dtoa$1580:
  3011                           	opt callstack 0
  3012  00008D                     efgtoa@fp:
  3013                           	opt callstack 0
  3014  00008D                     otoa@p:
  3015                           	opt callstack 0
  3016  00008D                     utoa@p:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 2 bytes @ 0x2D
  3020  00008D                     	ds	1
  3021  00008E                     _xtoa$1650:
  3022                           	opt callstack 0
  3023                           
  3024                           ; 2 bytes @ 0x2E
  3025  00008E                     	ds	1
  3026  00008F                     lcd_draw_string@lIndex:
  3027                           	opt callstack 0
  3028  00008F                     dtoa@p:
  3029                           	opt callstack 0
  3030  00008F                     otoa@t:
  3031                           	opt callstack 0
  3032  00008F                     utoa@w:
  3033                           	opt callstack 0
  3034  00008F                     efgtoa@f:
  3035                           	opt callstack 0
  3036                           
  3037                           ; 4 bytes @ 0x2F
  3038  00008F                     	ds	1
  3039  000090                     _xtoa$1651:
  3040                           	opt callstack 0
  3041                           
  3042                           ; 2 bytes @ 0x30
  3043  000090                     	ds	1
  3044  000091                     dtoa@w:
  3045                           	opt callstack 0
  3046  000091                     otoa@w:
  3047                           	opt callstack 0
  3048  000091                     utoa@n:
  3049                           	opt callstack 0
  3050                           
  3051                           ; 8 bytes @ 0x31
  3052  000091                     	ds	1
  3053  000092                     xtoa@p:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 2 bytes @ 0x32
  3057  000092                     	ds	1
  3058  000093                     efgtoa@c:
  3059                           	opt callstack 0
  3060  000093                     dtoa@s:
  3061                           	opt callstack 0
  3062  000093                     otoa@n:
  3063                           	opt callstack 0
  3064                           
  3065                           ; 8 bytes @ 0x33
  3066  000093                     	ds	1
  3067  000094                     ??_efgtoa:
  3068  000094                     xtoa@w:
  3069                           	opt callstack 0
  3070                           
  3071                           ; 2 bytes @ 0x34
  3072  000094                     	ds	1
  3073  000095                     dtoa@n:
  3074                           	opt callstack 0
  3075                           
  3076                           ; 8 bytes @ 0x35
  3077  000095                     	ds	1
  3078  000096                     xtoa@n:
  3079                           	opt callstack 0
  3080                           
  3081                           ; 8 bytes @ 0x36
  3082  000096                     	ds	3
  3083  000099                     utoa@i:
  3084                           	opt callstack 0
  3085  000099                     efgtoa@ou:
  3086                           	opt callstack 0
  3087                           
  3088                           ; 4 bytes @ 0x39
  3089  000099                     	ds	2
  3090  00009B                     otoa@i:
  3091                           	opt callstack 0
  3092                           
  3093                           ; 2 bytes @ 0x3B
  3094  00009B                     	ds	2
  3095  00009D                     dtoa@i:
  3096                           	opt callstack 0
  3097  00009D                     _efgtoa$1603:
  3098                           	opt callstack 0
  3099                           
  3100                           ; 2 bytes @ 0x3D
  3101  00009D                     	ds	1
  3102  00009E                     xtoa@i:
  3103                           	opt callstack 0
  3104                           
  3105                           ; 2 bytes @ 0x3E
  3106  00009E                     	ds	1
  3107  00009F                     _efgtoa$1604:
  3108                           	opt callstack 0
  3109                           
  3110                           ; 2 bytes @ 0x3F
  3111  00009F                     	ds	1
  3112  0000A0                     xtoa@c:
  3113                           	opt callstack 0
  3114                           
  3115                           ; 2 bytes @ 0x40
  3116  0000A0                     	ds	1
  3117  0000A1                     _efgtoa$1608:
  3118                           	opt callstack 0
  3119                           
  3120                           ; 2 bytes @ 0x41
  3121  0000A1                     	ds	2
  3122  0000A3                     _efgtoa$1612:
  3123                           	opt callstack 0
  3124                           
  3125                           ; 2 bytes @ 0x43
  3126  0000A3                     	ds	2
  3127  0000A5                     _efgtoa$1613:
  3128                           	opt callstack 0
  3129                           
  3130                           ; 2 bytes @ 0x45
  3131  0000A5                     	ds	2
  3132  0000A7                     _efgtoa$1614:
  3133                           	opt callstack 0
  3134                           
  3135                           ; 2 bytes @ 0x47
  3136  0000A7                     	ds	2
  3137  0000A9                     efgtoa@t:
  3138                           	opt callstack 0
  3139                           
  3140                           ; 2 bytes @ 0x49
  3141  0000A9                     	ds	2
  3142  0000AB                     efgtoa@pp:
  3143                           	opt callstack 0
  3144                           
  3145                           ; 2 bytes @ 0x4B
  3146  0000AB                     	ds	2
  3147  0000AD                     efgtoa@m:
  3148                           	opt callstack 0
  3149                           
  3150                           ; 2 bytes @ 0x4D
  3151  0000AD                     	ds	2
  3152  0000AF                     efgtoa@ne:
  3153                           	opt callstack 0
  3154                           
  3155                           ; 2 bytes @ 0x4F
  3156  0000AF                     	ds	2
  3157  0000B1                     efgtoa@d:
  3158                           	opt callstack 0
  3159                           
  3160                           ; 2 bytes @ 0x51
  3161  0000B1                     	ds	2
  3162  0000B3                     efgtoa@sign:
  3163                           	opt callstack 0
  3164                           
  3165                           ; 2 bytes @ 0x53
  3166  0000B3                     	ds	2
  3167  0000B5                     efgtoa@p:
  3168                           	opt callstack 0
  3169                           
  3170                           ; 2 bytes @ 0x55
  3171  0000B5                     	ds	2
  3172  0000B7                     efgtoa@nmode:
  3173                           	opt callstack 0
  3174                           
  3175                           ; 1 bytes @ 0x57
  3176  0000B7                     	ds	1
  3177  0000B8                     efgtoa@w:
  3178                           	opt callstack 0
  3179                           
  3180                           ; 2 bytes @ 0x58
  3181  0000B8                     	ds	2
  3182  0000BA                     efgtoa@mode:
  3183                           	opt callstack 0
  3184                           
  3185                           ; 1 bytes @ 0x5A
  3186  0000BA                     	ds	1
  3187  0000BB                     efgtoa@h:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 4 bytes @ 0x5B
  3191  0000BB                     	ds	4
  3192  0000BF                     efgtoa@l:
  3193                           	opt callstack 0
  3194                           
  3195                           ; 4 bytes @ 0x5F
  3196  0000BF                     	ds	4
  3197  0000C3                     efgtoa@i:
  3198                           	opt callstack 0
  3199                           
  3200                           ; 2 bytes @ 0x63
  3201  0000C3                     	ds	2
  3202  0000C5                     efgtoa@g:
  3203                           	opt callstack 0
  3204                           
  3205                           ; 4 bytes @ 0x65
  3206  0000C5                     	ds	4
  3207  0000C9                     efgtoa@e:
  3208                           	opt callstack 0
  3209                           
  3210                           ; 2 bytes @ 0x69
  3211  0000C9                     	ds	2
  3212  0000CB                     efgtoa@n:
  3213                           	opt callstack 0
  3214                           
  3215                           ; 2 bytes @ 0x6B
  3216  0000CB                     	ds	2
  3217  0000CD                     efgtoa@u:
  3218                           	opt callstack 0
  3219                           
  3220                           ; 4 bytes @ 0x6D
  3221  0000CD                     	ds	4
  3222  0000D1                     ?_vfpfcnvrt:
  3223                           	opt callstack 0
  3224  0000D1                     vfpfcnvrt@fp:
  3225                           	opt callstack 0
  3226                           
  3227                           ; 2 bytes @ 0x71
  3228  0000D1                     	ds	2
  3229  0000D3                     vfpfcnvrt@fmt:
  3230                           	opt callstack 0
  3231                           
  3232                           ; 2 bytes @ 0x73
  3233  0000D3                     	ds	2
  3234  0000D5                     vfpfcnvrt@ap:
  3235                           	opt callstack 0
  3236                           
  3237                           ; 2 bytes @ 0x75
  3238  0000D5                     	ds	2
  3239  0000D7                     ??_vfpfcnvrt:
  3240                           
  3241                           ; 1 bytes @ 0x77
  3242  0000D7                     	ds	4
  3243  0000DB                     vfprintf@cfmt:
  3244                           	opt callstack 0
  3245                           
  3246                           ; 2 bytes @ 0x7B
  3247  0000DB                     	ds	2
  3248  0000DD                     ??_vsnprintf:
  3249                           
  3250                           ; 1 bytes @ 0x7D
  3251  0000DD                     	ds	4
  3252  0000E1                     _vsnprintf$2418:
  3253                           	opt callstack 0
  3254                           
  3255                           ; 2 bytes @ 0x81
  3256  0000E1                     	ds	2
  3257  0000E3                     vsnprintf@cnt:
  3258                           	opt callstack 0
  3259                           
  3260                           ; 2 bytes @ 0x83
  3261  0000E3                     	ds	2
  3262  0000E5                     vsnprintf@f:
  3263                           	opt callstack 0
  3264                           
  3265                           ; 6 bytes @ 0x85
  3266  0000E5                     	ds	6
  3267  0000EB                     
  3268                           ; 1 bytes @ 0x8B
  3269  0000EB                     	ds	2
  3270  0000ED                     snprintf@ap:
  3271                           	opt callstack 0
  3272                           
  3273                           ; 2 bytes @ 0x8D
  3274  0000ED                     	ds	2
  3275  0000EF                     
  3276                           ; 1 bytes @ 0x8F
  3277                           
  3278                           	psect	cstackCOMRAM
  3279  000001                     __pcstackCOMRAM:
  3280                           	opt callstack 0
  3281  000001                     ?_ADC_GetConversion:
  3282                           	opt callstack 0
  3283  000001                     ?_TMR0_ReadTimer:
  3284                           	opt callstack 0
  3285  000001                     ?___xxtofl:
  3286                           	opt callstack 0
  3287  000001                     TMR0_WriteTimer@timerVal:
  3288                           	opt callstack 0
  3289  000001                     ___xxtofl@val:
  3290                           	opt callstack 0
  3291                           
  3292                           ; 4 bytes @ 0x0
  3293  000001                     	ds	2
  3294  000003                     ??_ADC_GetConversion:
  3295  000003                     ??_TMR0_ReadTimer:
  3296  000003                     
  3297                           ; 1 bytes @ 0x2
  3298  000003                     	ds	2
  3299  000005                     ??___xxtofl:
  3300  000005                     ADC_GetConversion@channel:
  3301                           	opt callstack 0
  3302  000005                     TMR0_ReadTimer@readVal:
  3303                           	opt callstack 0
  3304                           
  3305                           ; 2 bytes @ 0x4
  3306  000005                     	ds	2
  3307  000007                     TMR0_ReadTimer@readValLow:
  3308                           	opt callstack 0
  3309                           
  3310                           ; 1 bytes @ 0x6
  3311  000007                     	ds	1
  3312  000008                     TMR0_ReadTimer@readValHigh:
  3313                           	opt callstack 0
  3314                           
  3315                           ; 1 bytes @ 0x7
  3316  000008                     	ds	1
  3317  000009                     ___xxtofl@sign:
  3318                           	opt callstack 0
  3319                           
  3320                           ; 1 bytes @ 0x8
  3321  000009                     	ds	1
  3322  00000A                     ___xxtofl@exp:
  3323                           	opt callstack 0
  3324                           
  3325                           ; 1 bytes @ 0x9
  3326  00000A                     	ds	1
  3327  00000B                     ___xxtofl@arg:
  3328                           	opt callstack 0
  3329                           
  3330                           ; 4 bytes @ 0xA
  3331  00000B                     	ds	4
  3332  00000F                     ?i2___flmul:
  3333                           	opt callstack 0
  3334  00000F                     i2___flmul@b:
  3335                           	opt callstack 0
  3336                           
  3337                           ; 4 bytes @ 0xE
  3338  00000F                     	ds	4
  3339  000013                     i2___flmul@a:
  3340                           	opt callstack 0
  3341                           
  3342                           ; 4 bytes @ 0x12
  3343  000013                     	ds	4
  3344  000017                     ??i2___flmul:
  3345                           
  3346                           ; 1 bytes @ 0x16
  3347  000017                     	ds	4
  3348  00001B                     i2___flmul@sign:
  3349                           	opt callstack 0
  3350                           
  3351                           ; 1 bytes @ 0x1A
  3352  00001B                     	ds	1
  3353  00001C                     i2___flmul@grs:
  3354                           	opt callstack 0
  3355                           
  3356                           ; 4 bytes @ 0x1B
  3357  00001C                     	ds	4
  3358  000020                     i2___flmul@aexp:
  3359                           	opt callstack 0
  3360                           
  3361                           ; 1 bytes @ 0x1F
  3362  000020                     	ds	1
  3363  000021                     i2___flmul@bexp:
  3364                           	opt callstack 0
  3365                           
  3366                           ; 1 bytes @ 0x20
  3367  000021                     	ds	1
  3368  000022                     i2___flmul@prod:
  3369                           	opt callstack 0
  3370                           
  3371                           ; 4 bytes @ 0x21
  3372  000022                     	ds	4
  3373  000026                     i2___flmul@temp:
  3374                           	opt callstack 0
  3375                           
  3376                           ; 2 bytes @ 0x25
  3377  000026                     	ds	2
  3378  000028                     ??_acende_led:
  3379                           
  3380                           ; 1 bytes @ 0x27
  3381  000028                     	ds	1
  3382  000029                     ??_INTERRUPT_InterruptManager:
  3383                           
  3384                           ; 1 bytes @ 0x28
  3385  000029                     	ds	4
  3386                           
  3387 ;;
  3388 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3389 ;;
  3390 ;; *************** function _main *****************
  3391 ;; Defined at:
  3392 ;;		line 42 in file "main.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;		None
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;		None
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3410 ;;Total ram usage:        0 bytes
  3411 ;; Hardware stack levels required when called:   14
  3412 ;; This function calls:
  3413 ;;		_INT0_SetInterruptHandler
  3414 ;;		_IOCB4_SetInterruptHandler
  3415 ;;		_SPI_Open
  3416 ;;		_SYSTEM_Initialize
  3417 ;;		___aldiv
  3418 ;;		_lcd_draw_line
  3419 ;;		_lcd_draw_string
  3420 ;;		_lcd_init
  3421 ;;		_snprintf
  3422 ;; This function is called by:
  3423 ;;		Startup code after reset
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text0
  3428  0045A2                     __ptext0:
  3429                           	opt callstack 0
  3430  0045A2                     _main:
  3431                           	opt callstack 17
  3432  0045A2                     
  3433                           ;main.c: 45:     SYSTEM_Initialize();
  3434  0045A2  ECBA  F032         	call	_SYSTEM_Initialize	;wreg free
  3435                           
  3436                           ;main.c: 51:     IOCB4_SetInterruptHandler(acende_led);
  3437  0045A6  0E08               	movlw	low _acende_led
  3438  0045A8  0100               	movlb	0	; () banked
  3439  0045AA  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3440  0045AC  0E5D               	movlw	high _acende_led
  3441  0045AE  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3442  0045B0  EC3D  F033         	call	_IOCB4_SetInterruptHandler	;wreg free
  3443                           
  3444                           ;main.c: 52:     INT0_SetInterruptHandler(pulso_encoder);
  3445  0045B4  0E96               	movlw	low _pulso_encoder
  3446  0045B6  0100               	movlb	0	; () banked
  3447  0045B8  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  3448  0045BA  0E65               	movlw	high _pulso_encoder
  3449  0045BC  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3450  0045BE  EC42  F033         	call	_INT0_SetInterruptHandler	;wreg free
  3451  0045C2                     
  3452                           ;main.c: 53:     SPI_Open(SPI_DEFAULT);
  3453  0045C2  0E00               	movlw	0
  3454  0045C4  EC37  F02D         	call	_SPI_Open
  3455  0045C8                     
  3456                           ;main.c: 55:     lcd_init ();
  3457  0045C8  EC30  F013         	call	_lcd_init	;wreg free
  3458  0045CC                     
  3459                           ;main.c: 57:     lcd_draw_line(40,150,280,150,0xFFE0);
  3460  0045CC  0E00               	movlw	0
  3461  0045CE  0100               	movlb	0	; () banked
  3462  0045D0  6F70               	movwf	(lcd_draw_line@x0+1)& (0+255),b
  3463  0045D2  0E28               	movlw	40
  3464  0045D4  6F6F               	movwf	lcd_draw_line@x0& (0+255),b
  3465  0045D6  0E00               	movlw	0
  3466  0045D8  6F72               	movwf	(lcd_draw_line@y0+1)& (0+255),b
  3467  0045DA  0E96               	movlw	150
  3468  0045DC  6F71               	movwf	lcd_draw_line@y0& (0+255),b
  3469  0045DE  0E01               	movlw	1
  3470  0045E0  6F74               	movwf	(lcd_draw_line@x1+1)& (0+255),b
  3471  0045E2  0E18               	movlw	24
  3472  0045E4  6F73               	movwf	lcd_draw_line@x1& (0+255),b
  3473  0045E6  0E00               	movlw	0
  3474  0045E8  6F76               	movwf	(lcd_draw_line@y1+1)& (0+255),b
  3475  0045EA  0E96               	movlw	150
  3476  0045EC  6F75               	movwf	lcd_draw_line@y1& (0+255),b
  3477  0045EE  0EFF               	movlw	255
  3478  0045F0  6F78               	movwf	(lcd_draw_line@color+1)& (0+255),b
  3479  0045F2  0EE0               	movlw	224
  3480  0045F4  6F77               	movwf	lcd_draw_line@color& (0+255),b
  3481  0045F6  ECE9  F025         	call	_lcd_draw_line	;wreg free
  3482  0045FA                     
  3483                           ;main.c: 59:     lcd_draw_string (45,155,"XC8 - Biblioteca - LCD - ILI9341",0x001F,0x000
      +                          0);
  3484  0045FA  0E00               	movlw	0
  3485  0045FC  0100               	movlb	0	; () banked
  3486  0045FE  6F80               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3487  004600  0E2D               	movlw	45
  3488  004602  6F7F               	movwf	lcd_draw_string@x& (0+255),b
  3489  004604  0E00               	movlw	0
  3490  004606  6F82               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3491  004608  0E9B               	movlw	155
  3492  00460A  6F81               	movwf	lcd_draw_string@y& (0+255),b
  3493  00460C  0E6D               	movlw	low STR_1
  3494  00460E  6F83               	movwf	lcd_draw_string@pS& (0+255),b
  3495  004610  0EFF               	movlw	high STR_1
  3496  004612  6F84               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3497  004614  0E00               	movlw	0
  3498  004616  6F86               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3499  004618  0E1F               	movlw	31
  3500  00461A  6F85               	movwf	lcd_draw_string@fg_color& (0+255),b
  3501  00461C  0E00               	movlw	0
  3502  00461E  6F88               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3503  004620  0E00               	movlw	0
  3504  004622  6F87               	movwf	lcd_draw_string@bg_color& (0+255),b
  3505  004624  EC52  F027         	call	_lcd_draw_string	;wreg free
  3506  004628                     
  3507                           ;main.c: 61:     lcd_draw_string (120,120,"PIC - SEEV",0x0400,0x0000);
  3508  004628  0E00               	movlw	0
  3509  00462A  0100               	movlb	0	; () banked
  3510  00462C  6F80               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3511  00462E  0E78               	movlw	120
  3512  004630  6F7F               	movwf	lcd_draw_string@x& (0+255),b
  3513  004632  0E00               	movlw	0
  3514  004634  6F82               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3515  004636  0E78               	movlw	120
  3516  004638  6F81               	movwf	lcd_draw_string@y& (0+255),b
  3517  00463A  0EB0               	movlw	low STR_2
  3518  00463C  6F83               	movwf	lcd_draw_string@pS& (0+255),b
  3519  00463E  0EFF               	movlw	high STR_2
  3520  004640  6F84               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3521  004642  0E04               	movlw	4
  3522  004644  6F86               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3523  004646  0E00               	movlw	0
  3524  004648  6F85               	movwf	lcd_draw_string@fg_color& (0+255),b
  3525  00464A  0E00               	movlw	0
  3526  00464C  6F88               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3527  00464E  0E00               	movlw	0
  3528  004650  6F87               	movwf	lcd_draw_string@bg_color& (0+255),b
  3529  004652  EC52  F027         	call	_lcd_draw_string	;wreg free
  3530  004656                     
  3531                           ;main.c: 65:     (INTCONbits.GIE = 1);
  3532  004656  8EF2               	bsf	242,7,c	;volatile
  3533  004658                     l10155:
  3534                           
  3535                           ;main.c: 78:     {;main.c: 79:         rpm=4687500/ticks;
  3536  004658  0E8C               	movlw	140
  3537  00465A  0100               	movlb	0	; () banked
  3538  00465C  6F60               	movwf	___aldiv@dividend& (0+255),b
  3539  00465E  0E86               	movlw	134
  3540  004660  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  3541  004662  0E47               	movlw	71
  3542  004664  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  3543  004666  0E00               	movlw	0
  3544  004668  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  3545  00466A  C1BC  F064         	movff	_ticks,___aldiv@divisor
  3546  00466E  C1BD  F065         	movff	_ticks+1,___aldiv@divisor+1
  3547  004672  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
  3548  004674  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
  3549  004676  EC1A  F029         	call	___aldiv	;wreg free
  3550  00467A  C060  F106         	movff	?___aldiv,_rpm
  3551  00467E  C061  F107         	movff	?___aldiv+1,_rpm+1
  3552  004682                     
  3553                           ;main.c: 80:         snprintf(string_rpm,sizeof(string_rpm),"RPM= %d      ",rpm);
  3554  004682  0E00               	movlw	low _string_rpm
  3555  004684  0101               	movlb	1	; () banked
  3556  004686  6FF0               	movwf	snprintf@s& (0+255),b
  3557  004688  0E02               	movlw	high _string_rpm
  3558  00468A  6FF1               	movwf	(snprintf@s+1)& (0+255),b
  3559  00468C  0E00               	movlw	0
  3560  00468E  6FF3               	movwf	(snprintf@n+1)& (0+255),b
  3561  004690  0E64               	movlw	100
  3562  004692  6FF2               	movwf	snprintf@n& (0+255),b
  3563  004694  0EA2               	movlw	low STR_3
  3564  004696  6FF4               	movwf	snprintf@fmt& (0+255),b
  3565  004698  0EFF               	movlw	high STR_3
  3566  00469A  6FF5               	movwf	(snprintf@fmt+1)& (0+255),b
  3567  00469C  C106  F1F6         	movff	_rpm,?_snprintf+6
  3568  0046A0  C107  F1F7         	movff	_rpm+1,?_snprintf+7
  3569  0046A4  ECF3  F031         	call	_snprintf	;wreg free
  3570  0046A8                     
  3571                           ;main.c: 81:         lcd_draw_string (10,80,string_rpm,0x0400,0x0000);
  3572  0046A8  0E00               	movlw	0
  3573  0046AA  0100               	movlb	0	; () banked
  3574  0046AC  6F80               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3575  0046AE  0E0A               	movlw	10
  3576  0046B0  6F7F               	movwf	lcd_draw_string@x& (0+255),b
  3577  0046B2  0E00               	movlw	0
  3578  0046B4  6F82               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3579  0046B6  0E50               	movlw	80
  3580  0046B8  6F81               	movwf	lcd_draw_string@y& (0+255),b
  3581  0046BA  0E00               	movlw	low _string_rpm
  3582  0046BC  6F83               	movwf	lcd_draw_string@pS& (0+255),b
  3583  0046BE  0E02               	movlw	high _string_rpm
  3584  0046C0  6F84               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3585  0046C2  0E04               	movlw	4
  3586  0046C4  6F86               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3587  0046C6  0E00               	movlw	0
  3588  0046C8  6F85               	movwf	lcd_draw_string@fg_color& (0+255),b
  3589  0046CA  0E00               	movlw	0
  3590  0046CC  6F88               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3591  0046CE  0E00               	movlw	0
  3592  0046D0  6F87               	movwf	lcd_draw_string@bg_color& (0+255),b
  3593  0046D2  EC52  F027         	call	_lcd_draw_string	;wreg free
  3594  0046D6                     
  3595                           ;main.c: 83:         snprintf(string,sizeof(string),"percentagem = %.f  ",percentagem);
  3596  0046D6  0E08               	movlw	low _string
  3597  0046D8  0101               	movlb	1	; () banked
  3598  0046DA  6FF0               	movwf	snprintf@s& (0+255),b
  3599  0046DC  0E01               	movlw	high _string
  3600  0046DE  6FF1               	movwf	(snprintf@s+1)& (0+255),b
  3601  0046E0  0E00               	movlw	0
  3602  0046E2  6FF3               	movwf	(snprintf@n+1)& (0+255),b
  3603  0046E4  0E64               	movlw	100
  3604  0046E6  6FF2               	movwf	snprintf@n& (0+255),b
  3605  0046E8  0E8E               	movlw	low STR_4
  3606  0046EA  6FF4               	movwf	snprintf@fmt& (0+255),b
  3607  0046EC  0EFF               	movlw	high STR_4
  3608  0046EE  6FF5               	movwf	(snprintf@fmt+1)& (0+255),b
  3609  0046F0  C100  F1F6         	movff	_percentagem,?_snprintf+6
  3610  0046F4  C101  F1F7         	movff	_percentagem+1,?_snprintf+7
  3611  0046F8  C102  F1F8         	movff	_percentagem+2,?_snprintf+8
  3612  0046FC  C103  F1F9         	movff	_percentagem+3,?_snprintf+9
  3613  004700  ECF3  F031         	call	_snprintf	;wreg free
  3614  004704                     
  3615                           ;main.c: 84:         lcd_draw_string (150,80,string,0x0400,0x0000);
  3616  004704  0E00               	movlw	0
  3617  004706  0100               	movlb	0	; () banked
  3618  004708  6F80               	movwf	(lcd_draw_string@x+1)& (0+255),b
  3619  00470A  0E96               	movlw	150
  3620  00470C  6F7F               	movwf	lcd_draw_string@x& (0+255),b
  3621  00470E  0E00               	movlw	0
  3622  004710  6F82               	movwf	(lcd_draw_string@y+1)& (0+255),b
  3623  004712  0E50               	movlw	80
  3624  004714  6F81               	movwf	lcd_draw_string@y& (0+255),b
  3625  004716  0E08               	movlw	low _string
  3626  004718  6F83               	movwf	lcd_draw_string@pS& (0+255),b
  3627  00471A  0E01               	movlw	high _string
  3628  00471C  6F84               	movwf	(lcd_draw_string@pS+1)& (0+255),b
  3629  00471E  0E04               	movlw	4
  3630  004720  6F86               	movwf	(lcd_draw_string@fg_color+1)& (0+255),b
  3631  004722  0E00               	movlw	0
  3632  004724  6F85               	movwf	lcd_draw_string@fg_color& (0+255),b
  3633  004726  0E00               	movlw	0
  3634  004728  6F88               	movwf	(lcd_draw_string@bg_color+1)& (0+255),b
  3635  00472A  0E00               	movlw	0
  3636  00472C  6F87               	movwf	lcd_draw_string@bg_color& (0+255),b
  3637  00472E  EC52  F027         	call	_lcd_draw_string	;wreg free
  3638  004732  EF2C  F023         	goto	l10155
  3639  004736  EF54  F000         	goto	start
  3640  00473A                     __end_of_main:
  3641                           	opt callstack 0
  3642                           
  3643 ;; *************** function _snprintf *****************
  3644 ;; Defined at:
  3645 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\snprintf.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  s               2   50[BANK1 ] PTR unsigned char 
  3648 ;;		 -> string(100), string_rpm(100), 
  3649 ;;  n               2   52[BANK1 ] unsigned int 
  3650 ;;  fmt             2   54[BANK1 ] PTR const unsigned char 
  3651 ;;		 -> STR_4(20), STR_3(14), 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  ap              2  141[BANK0 ] PTR void [1]
  3654 ;;		 -> ?_snprintf(2), 
  3655 ;;  ret             2    0        int 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  2   50[BANK1 ] int 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3665 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3668 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3669 ;;Total ram usage:       14 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:   13
  3672 ;; This function calls:
  3673 ;;		_vsnprintf
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text1
  3680  0063E6                     __ptext1:
  3681                           	opt callstack 0
  3682  0063E6                     _snprintf:
  3683                           	opt callstack 17
  3684  0063E6  0EF6               	movlw	low (?_snprintf+6)
  3685  0063E8  0100               	movlb	0	; () banked
  3686  0063EA  6FED               	movwf	snprintf@ap& (0+255),b
  3687  0063EC  0E01               	movlw	high (?_snprintf+6)
  3688  0063EE  6FEE               	movwf	(snprintf@ap+1)& (0+255),b
  3689  0063F0                     
  3690                           ; BSR set to: 0
  3691  0063F0  C1F0  F1E8         	movff	snprintf@s,vsnprintf@s
  3692  0063F4  C1F1  F1E9         	movff	snprintf@s+1,vsnprintf@s+1
  3693  0063F8  C1F2  F1EA         	movff	snprintf@n,vsnprintf@n
  3694  0063FC  C1F3  F1EB         	movff	snprintf@n+1,vsnprintf@n+1
  3695  006400  C1F4  F1EC         	movff	snprintf@fmt,vsnprintf@fmt
  3696  006404  C1F5  F1ED         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3697  006408  0EED               	movlw	low snprintf@ap
  3698  00640A  0101               	movlb	1	; () banked
  3699  00640C  6FEE               	movwf	vsnprintf@ap& (0+255),b
  3700  00640E  0E00               	movlw	high snprintf@ap
  3701  006410  6FEF               	movwf	(vsnprintf@ap+1)& (0+255),b
  3702  006412  EC85  F028         	call	_vsnprintf	;wreg free
  3703  006416  0012               	return		;funcret
  3704  006418                     __end_of_snprintf:
  3705                           	opt callstack 0
  3706                           
  3707 ;; *************** function _vsnprintf *****************
  3708 ;; Defined at:
  3709 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_vsnprintf.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  s               2   42[BANK1 ] PTR unsigned char 
  3712 ;;		 -> string(100), string_rpm(100), 
  3713 ;;  n               2   44[BANK1 ] unsigned int 
  3714 ;;  fmt             2   46[BANK1 ] PTR const unsigned char 
  3715 ;;		 -> STR_4(20), STR_3(14), 
  3716 ;;  ap              2   48[BANK1 ] PTR PTR void 
  3717 ;;		 -> snprintf@ap(2), 
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;  f               6  133[BANK0 ] struct _IO_FILE
  3720 ;;  cnt             2  131[BANK0 ] int 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2   42[BANK1 ] int 
  3723 ;; Registers used:
  3724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3730 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Totals:         0      14       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;Total ram usage:       22 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:   12
  3737 ;; This function calls:
  3738 ;;		_vfprintf
  3739 ;; This function is called by:
  3740 ;;		_snprintf
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text2
  3745  00510A                     __ptext2:
  3746                           	opt callstack 0
  3747  00510A                     _vsnprintf:
  3748                           	opt callstack 17
  3749  00510A  0E80               	movlw	128
  3750  00510C  0101               	movlb	1	; () banked
  3751  00510E  5DEB               	subwf	(vsnprintf@n+1)& (0+255),w,b
  3752  005110  A0D8               	btfss	status,0,c
  3753  005112  EF8D  F028         	goto	u12741
  3754  005116  EF8F  F028         	goto	u12740
  3755  00511A                     u12741:
  3756  00511A  EF97  F028         	goto	l9785
  3757  00511E                     u12740:
  3758  00511E                     
  3759                           ; BSR set to: 1
  3760  00511E  0E00               	movlw	0
  3761  005120  6F05               	movwf	(_errno+1)& (0+255),b
  3762  005122  0E4B               	movlw	75
  3763  005124  6F04               	movwf	_errno& (0+255),b
  3764  005126                     
  3765                           ; BSR set to: 1
  3766  005126  69E8               	setf	?_vsnprintf& (0+255),b
  3767  005128  69E9               	setf	(?_vsnprintf+1)& (0+255),b
  3768  00512A  EF19  F029         	goto	l1744
  3769  00512E                     l9785:
  3770                           
  3771                           ; BSR set to: 1
  3772  00512E  C1E8  F0E5         	movff	vsnprintf@s,vsnprintf@f
  3773  005132  C1E9  F0E6         	movff	vsnprintf@s+1,vsnprintf@f+1
  3774  005136  51EB               	movf	(vsnprintf@n+1)& (0+255),w,b
  3775  005138  E109               	bnz	u12750
  3776  00513A  0E02               	movlw	2
  3777  00513C  5DEA               	subwf	vsnprintf@n& (0+255),w,b
  3778  00513E  A0D8               	btfss	status,0,c
  3779  005140  EFA4  F028         	goto	u12751
  3780  005144  EFA6  F028         	goto	u12750
  3781  005148                     u12751:
  3782  005148  EFB5  F028         	goto	l9791
  3783  00514C                     u12750:
  3784  00514C                     
  3785                           ; BSR set to: 1
  3786  00514C  0EFF               	movlw	255
  3787  00514E  25EA               	addwf	vsnprintf@n& (0+255),w,b
  3788  005150  0100               	movlb	0	; () banked
  3789  005152  6FE9               	movwf	(vsnprintf@f+4)& (0+255),b
  3790  005154  0EFF               	movlw	255
  3791  005156  0101               	movlb	1	; () banked
  3792  005158  21EB               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3793  00515A  0100               	movlb	0	; () banked
  3794  00515C  6FEA               	movwf	(vsnprintf@f+5)& (0+255),b
  3795  00515E                     
  3796                           ; BSR set to: 0
  3797  00515E  0E00               	movlw	0
  3798  005160  6FE8               	movwf	(vsnprintf@f+3)& (0+255),b
  3799  005162  0E00               	movlw	0
  3800  005164  6FE7               	movwf	(vsnprintf@f+2)& (0+255),b
  3801  005166  EFBE  F028         	goto	l9793
  3802  00516A                     l9791:
  3803                           
  3804                           ; BSR set to: 1
  3805  00516A  0E00               	movlw	0
  3806  00516C  0100               	movlb	0	; () banked
  3807  00516E  6FEA               	movwf	(vsnprintf@f+5)& (0+255),b
  3808  005170  0E01               	movlw	1
  3809  005172  6FE9               	movwf	(vsnprintf@f+4)& (0+255),b
  3810  005174  0E00               	movlw	0
  3811  005176  6FE8               	movwf	(vsnprintf@f+3)& (0+255),b
  3812  005178  0E01               	movlw	1
  3813  00517A  6FE7               	movwf	(vsnprintf@f+2)& (0+255),b
  3814  00517C                     l9793:
  3815                           
  3816                           ; BSR set to: 0
  3817  00517C  0EE5               	movlw	low vsnprintf@f
  3818  00517E  0101               	movlb	1	; () banked
  3819  005180  6FE2               	movwf	vfprintf@fp& (0+255),b
  3820  005182  0E00               	movlw	high vsnprintf@f
  3821  005184  6FE3               	movwf	(vfprintf@fp+1)& (0+255),b
  3822  005186  C1EC  F1E4         	movff	vsnprintf@fmt,vfprintf@fmt
  3823  00518A  C1ED  F1E5         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3824  00518E  C1EE  F1E6         	movff	vsnprintf@ap,vfprintf@ap
  3825  005192  C1EF  F1E7         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3826  005196  ECC8  F02E         	call	_vfprintf	;wreg free
  3827  00519A  C1E2  F0E3         	movff	?_vfprintf,vsnprintf@cnt
  3828  00519E  C1E3  F0E4         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3829  0051A2  0101               	movlb	1	; () banked
  3830  0051A4  51EA               	movf	vsnprintf@n& (0+255),w,b
  3831  0051A6  11EB               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  3832  0051A8  B4D8               	btfsc	status,2,c
  3833  0051AA  EFD9  F028         	goto	u12761
  3834  0051AE  EFDB  F028         	goto	u12760
  3835  0051B2                     u12761:
  3836  0051B2  EF15  F029         	goto	l9805
  3837  0051B6                     u12760:
  3838  0051B6                     
  3839                           ; BSR set to: 1
  3840  0051B6  0100               	movlb	0	; () banked
  3841  0051B8  BFE4               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3842  0051BA  EFE1  F028         	goto	u12771
  3843  0051BE  EFE3  F028         	goto	u12770
  3844  0051C2                     u12771:
  3845  0051C2  EF15  F029         	goto	l9805
  3846  0051C6                     u12770:
  3847  0051C6                     
  3848                           ; BSR set to: 0
  3849  0051C6  0EFF               	movlw	255
  3850  0051C8  6FDD               	movwf	??_vsnprintf& (0+255),b
  3851  0051CA  0EFF               	movlw	255
  3852  0051CC  6FDE               	movwf	(??_vsnprintf+1)& (0+255),b
  3853  0051CE  C1EA  F0DF         	movff	vsnprintf@n,??_vsnprintf+2
  3854  0051D2  C1EB  F0E0         	movff	vsnprintf@n+1,??_vsnprintf+3
  3855  0051D6  51DD               	movf	??_vsnprintf& (0+255),w,b
  3856  0051D8  27DF               	addwf	(??_vsnprintf+2)& (0+255),f,b
  3857  0051DA  51DE               	movf	(??_vsnprintf+1)& (0+255),w,b
  3858  0051DC  23E0               	addwfc	(??_vsnprintf+3)& (0+255),f,b
  3859  0051DE  51DF               	movf	(??_vsnprintf+2)& (0+255),w,b
  3860  0051E0  5DE3               	subwf	vsnprintf@cnt& (0+255),w,b
  3861  0051E2  51E0               	movf	(??_vsnprintf+3)& (0+255),w,b
  3862  0051E4  59E4               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3863  0051E6  A0D8               	btfss	status,0,c
  3864  0051E8  EFF8  F028         	goto	u12781
  3865  0051EC  EFFA  F028         	goto	u12780
  3866  0051F0                     u12781:
  3867  0051F0  EF06  F029         	goto	l1749
  3868  0051F4                     u12780:
  3869  0051F4                     
  3870                           ; BSR set to: 0
  3871  0051F4  0EFF               	movlw	255
  3872  0051F6  0101               	movlb	1	; () banked
  3873  0051F8  25EA               	addwf	vsnprintf@n& (0+255),w,b
  3874  0051FA  0100               	movlb	0	; () banked
  3875  0051FC  6FE1               	movwf	_vsnprintf$2418& (0+255),b
  3876  0051FE  0EFF               	movlw	255
  3877  005200  0101               	movlb	1	; () banked
  3878  005202  21EB               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  3879  005204  0100               	movlb	0	; () banked
  3880  005206  6FE2               	movwf	(_vsnprintf$2418+1)& (0+255),b
  3881  005208  EF0A  F029         	goto	l9803
  3882  00520C                     l1749:
  3883                           
  3884                           ; BSR set to: 0
  3885  00520C  C0E3  F0E1         	movff	vsnprintf@cnt,_vsnprintf$2418
  3886  005210  C0E4  F0E2         	movff	vsnprintf@cnt+1,_vsnprintf$2418+1
  3887  005214                     l9803:
  3888                           
  3889                           ; BSR set to: 0
  3890  005214  51E1               	movf	_vsnprintf$2418& (0+255),w,b
  3891  005216  0101               	movlb	1	; () banked
  3892  005218  25E8               	addwf	vsnprintf@s& (0+255),w,b
  3893  00521A  6ED9               	movwf	fsr2l,c
  3894  00521C  0100               	movlb	0	; () banked
  3895  00521E  51E2               	movf	(_vsnprintf$2418+1)& (0+255),w,b
  3896  005220  0101               	movlb	1	; () banked
  3897  005222  21E9               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  3898  005224  6EDA               	movwf	fsr2h,c
  3899  005226  0E00               	movlw	0
  3900  005228  6EDF               	movwf	indf2,c
  3901  00522A                     l9805:
  3902  00522A  C0E3  F1E8         	movff	vsnprintf@cnt,?_vsnprintf
  3903  00522E  C0E4  F1E9         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3904  005232                     l1744:
  3905  005232  0012               	return		;funcret
  3906  005234                     __end_of_vsnprintf:
  3907                           	opt callstack 0
  3908                           
  3909 ;; *************** function _vfprintf *****************
  3910 ;; Defined at:
  3911 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  fp              2   36[BANK1 ] PTR struct _IO_FILE
  3914 ;;		 -> vsnprintf@f(6), 
  3915 ;;  fmt             2   38[BANK1 ] PTR const unsigned char 
  3916 ;;		 -> STR_4(20), STR_3(14), 
  3917 ;;  ap              2   40[BANK1 ] PTR PTR void 
  3918 ;;		 -> snprintf@ap(2), 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  cfmt            2  123[BANK0 ] PTR unsigned char 
  3921 ;;		 -> STR_4(20), STR_3(14), 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2   36[BANK1 ] int 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3931 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3934 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3935 ;;Total ram usage:        8 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:   11
  3938 ;; This function calls:
  3939 ;;		_vfpfcnvrt
  3940 ;; This function is called by:
  3941 ;;		_vsnprintf
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text3
  3946  005D90                     __ptext3:
  3947                           	opt callstack 0
  3948  005D90                     _vfprintf:
  3949                           	opt callstack 17
  3950  005D90                     
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3952  005D90  C1E4  F0DB         	movff	vfprintf@fmt,vfprintf@cfmt
  3953  005D94  C1E5  F0DC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3954  005D98                     
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3956  005D98  0E00               	movlw	0
  3957  005D9A  6E36               	movwf	(_nout+1)^0,c
  3958  005D9C  0E00               	movlw	0
  3959  005D9E  6E35               	movwf	_nout^0,c
  3960                           
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3962  005DA0  EFE6  F02E         	goto	l9661
  3963  005DA4                     l9659:
  3964                           
  3965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3966  005DA4  C1E2  F0D1         	movff	vfprintf@fp,vfpfcnvrt@fp
  3967  005DA8  C1E3  F0D2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3968  005DAC  0EDB               	movlw	low vfprintf@cfmt
  3969  005DAE  0100               	movlb	0	; () banked
  3970  005DB0  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  3971  005DB2  0E00               	movlw	high vfprintf@cfmt
  3972  005DB4  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3973  005DB6  C1E6  F0D5         	movff	vfprintf@ap,vfpfcnvrt@ap
  3974  005DBA  C1E7  F0D6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3975  005DBE  EC56  F000         	call	_vfpfcnvrt	;wreg free
  3976  005DC2  0100               	movlb	0	; () banked
  3977  005DC4  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  3978  005DC6  2635               	addwf	_nout^0,f,c
  3979  005DC8  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3980  005DCA  2236               	addwfc	(_nout+1)^0,f,c
  3981  005DCC                     l9661:
  3982                           
  3983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3984  005DCC  C0DB  FFF6         	movff	vfprintf@cfmt,tblptrl
  3985  005DD0  C0DC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3986  005DD4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3987  005DD4  6AF8               	clrf	tblptru,c
  3988  005DD6                     	endif
  3989  005DD6                     	if	0	;tblptru may be non-zero
  3990  005DD6                     	endif
  3991  005DD6  0008               	tblrd		*
  3992  005DD8  50F5               	movf	tablat,w,c
  3993  005DDA  0900               	iorlw	0
  3994  005DDC  A4D8               	btfss	status,2,c
  3995  005DDE  EFF3  F02E         	goto	u12631
  3996  005DE2  EFF5  F02E         	goto	u12630
  3997  005DE6                     u12631:
  3998  005DE6  EFD2  F02E         	goto	l9659
  3999  005DEA                     u12630:
  4000  005DEA                     
  4001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4002  005DEA  C035  F1E2         	movff	_nout,?_vfprintf
  4003  005DEE  C036  F1E3         	movff	_nout+1,?_vfprintf+1
  4004  005DF2  0012               	return		;funcret
  4005  005DF4                     __end_of_vfprintf:
  4006                           	opt callstack 0
  4007                           
  4008 ;; *************** function _vfpfcnvrt *****************
  4009 ;; Defined at:
  4010 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  4013 ;;		 -> vsnprintf@f(6), 
  4014 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  4015 ;;		 -> vfprintf@cfmt(2), 
  4016 ;;  ap              2  117[BANK0 ] PTR PTR void 
  4017 ;;		 -> snprintf@ap(2), 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  llu             8   28[BANK1 ] unsigned long long 
  4020 ;;  ll              8   17[BANK1 ] long long 
  4021 ;;  f               4   10[BANK1 ] long long 
  4022 ;;  ct              3   14[BANK1 ] unsigned char [3]
  4023 ;;  vp              2   25[BANK1 ] PTR void 
  4024 ;;		 -> ?_snprintf(2), ticks(2), 
  4025 ;;  done            2    2[BANK1 ] int 
  4026 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  4027 ;;		 -> ?_snprintf(2), ticks(2), 
  4028 ;;  i               2    0        int 
  4029 ;;  c               1   27[BANK1 ] unsigned char 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  2  113[BANK0 ] int 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4042 ;;      Totals:         0      10      36       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;Total ram usage:       46 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:   10
  4046 ;; This function calls:
  4047 ;;		_atoi
  4048 ;;		_ctoa
  4049 ;;		_dtoa
  4050 ;;		_efgtoa
  4051 ;;		_fputc
  4052 ;;		_isdigit
  4053 ;;		_isupper
  4054 ;;		_otoa
  4055 ;;		_stoa
  4056 ;;		_strncmp
  4057 ;;		_tolower
  4058 ;;		_utoa
  4059 ;;		_xtoa
  4060 ;; This function is called by:
  4061 ;;		_vfprintf
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text4
  4066  0000AC                     __ptext4:
  4067                           	opt callstack 0
  4068  0000AC                     _vfpfcnvrt:
  4069                           	opt callstack 17
  4070  0000AC                     
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4072  0000AC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4073  0000B0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4074  0000B4  CFDE FFF6          	movff	postinc2,tblptrl
  4075  0000B8  CFDD FFF7          	movff	postdec2,tblptrh
  4076  0000BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4077  0000BC  6AF8               	clrf	tblptru,c
  4078  0000BE                     	endif
  4079  0000BE                     	if	0	;tblptru may be non-zero
  4080  0000BE                     	endif
  4081  0000BE  0008               	tblrd		*
  4082  0000C0  50F5               	movf	tablat,w,c
  4083  0000C2  0A25               	xorlw	37
  4084  0000C4  A4D8               	btfss	status,2,c
  4085  0000C6  EF67  F000         	goto	u12091
  4086  0000CA  EF69  F000         	goto	u12090
  4087  0000CE                     u12091:
  4088  0000CE  EFD2  F00A         	goto	l9617
  4089  0000D2                     u12090:
  4090  0000D2                     
  4091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4092  0000D2  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4093  0000D6  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4094  0000DA  2ADE               	incf	postinc2,f,c
  4095  0000DC  0E00               	movlw	0
  4096  0000DE  22DD               	addwfc	postdec2,f,c
  4097  0000E0                     
  4098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4099  0000E0  0E00               	movlw	0
  4100  0000E2  6E38               	movwf	(_width+1)^0,c
  4101  0000E4  0E00               	movlw	0
  4102  0000E6  6E37               	movwf	_width^0,c
  4103  0000E8  C037  F039         	movff	_width,_flags
  4104  0000EC  C038  F03A         	movff	_width+1,_flags+1
  4105  0000F0                     
  4106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4107  0000F0  0100               	movlb	0	; () banked
  4108  0000F2  69EF               	setf	_prec& (0+255),b
  4109  0000F4  69F0               	setf	(_prec+1)& (0+255),b
  4110  0000F6                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4113  0000F6  0E00               	movlw	0
  4114  0000F8  0101               	movlb	1	; () banked
  4115  0000FA  6FC1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4116  0000FC  0E00               	movlw	0
  4117  0000FE  6FC0               	movwf	vfpfcnvrt@done& (0+255),b
  4118                           
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4120  000100  EFCB  F000         	goto	l9297
  4121  000104                     l9271:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4125  000104  8039               	bsf	_flags^0,0,c
  4126  000106                     l9273:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4130  000106  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4131  00010A  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4132  00010E  2ADE               	incf	postinc2,f,c
  4133  000110  0E00               	movlw	0
  4134  000112  22DD               	addwfc	postdec2,f,c
  4135                           
  4136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4137  000114  EFCB  F000         	goto	l9297
  4138  000118                     l9275:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4142  000118  8239               	bsf	_flags^0,1,c
  4143  00011A  EF83  F000         	goto	l9273
  4144  00011E                     l9279:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4148  00011E  8439               	bsf	_flags^0,2,c
  4149  000120  EF83  F000         	goto	l9273
  4150  000124                     l9283:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4154  000124  8639               	bsf	_flags^0,3,c
  4155  000126  EF83  F000         	goto	l9273
  4156  00012A                     l9287:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4160  00012A  8839               	bsf	_flags^0,4,c
  4161  00012C  EF83  F000         	goto	l9273
  4162  000130                     l9291:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4166  000130  0E00               	movlw	0
  4167  000132  0101               	movlb	1	; () banked
  4168  000134  6FC1               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4169  000136  0E01               	movlw	1
  4170  000138  6FC0               	movwf	vfpfcnvrt@done& (0+255),b
  4171                           
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4173  00013A  EFCB  F000         	goto	l9297
  4174  00013E                     l9295:
  4175                           
  4176                           ; BSR set to: 1
  4177  00013E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4178  000142  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4179  000146  CFDE FFF6          	movff	postinc2,tblptrl
  4180  00014A  CFDD FFF7          	movff	postdec2,tblptrh
  4181  00014E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4182  00014E  6AF8               	clrf	tblptru,c
  4183  000150                     	endif
  4184  000150                     	if	0	;tblptru may be non-zero
  4185  000150                     	endif
  4186  000150  0008               	tblrd		*
  4187  000152  50F5               	movf	tablat,w,c
  4188  000154  0100               	movlb	0	; () banked
  4189  000156  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  4190  000158  6BD8               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4191                           
  4192                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4193                           ; Switch size 1, requested type "simple"
  4194                           ; Number of cases is 1, Range of values is 0 to 0
  4195                           ; switch strategies available:
  4196                           ; Name         Instructions Cycles
  4197                           ; simple_byte            4     3 (average)
  4198                           ;	Chosen strategy is simple_byte
  4199  00015A  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4200  00015C  0A00               	xorlw	0	; case 0
  4201  00015E  B4D8               	btfsc	status,2,c
  4202  000160  EFB4  F000         	goto	l10329
  4203  000164  EF98  F000         	goto	l9291
  4204  000168                     l10329:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ; Switch size 1, requested type "simple"
  4208                           ; Number of cases is 5, Range of values is 32 to 48
  4209                           ; switch strategies available:
  4210                           ; Name         Instructions Cycles
  4211                           ; simple_byte           16     9 (average)
  4212                           ;	Chosen strategy is simple_byte
  4213  000168  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  4214  00016A  0A20               	xorlw	32	; case 32
  4215  00016C  B4D8               	btfsc	status,2,c
  4216  00016E  EF92  F000         	goto	l9283
  4217  000172  0A03               	xorlw	3	; case 35
  4218  000174  B4D8               	btfsc	status,2,c
  4219  000176  EF95  F000         	goto	l9287
  4220  00017A  0A08               	xorlw	8	; case 43
  4221  00017C  B4D8               	btfsc	status,2,c
  4222  00017E  EF8F  F000         	goto	l9279
  4223  000182  0A06               	xorlw	6	; case 45
  4224  000184  B4D8               	btfsc	status,2,c
  4225  000186  EF82  F000         	goto	l9271
  4226  00018A  0A1D               	xorlw	29	; case 48
  4227  00018C  B4D8               	btfsc	status,2,c
  4228  00018E  EF8C  F000         	goto	l9275
  4229  000192  EF98  F000         	goto	l9291
  4230  000196                     l9297:
  4231                           
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4233  000196  0101               	movlb	1	; () banked
  4234  000198  51C0               	movf	vfpfcnvrt@done& (0+255),w,b
  4235  00019A  11C1               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4236  00019C  B4D8               	btfsc	status,2,c
  4237  00019E  EFD3  F000         	goto	u12101
  4238  0001A2  EFD5  F000         	goto	u12100
  4239  0001A6                     u12101:
  4240  0001A6  EF9F  F000         	goto	l9295
  4241  0001AA                     u12100:
  4242  0001AA                     
  4243                           ; BSR set to: 1
  4244                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4245  0001AA  A039               	btfss	_flags^0,0,c
  4246  0001AC  EFDA  F000         	goto	u12111
  4247  0001B0  EFDC  F000         	goto	u12110
  4248  0001B4                     u12111:
  4249  0001B4  EFDD  F000         	goto	l9301
  4250  0001B8                     u12110:
  4251  0001B8                     
  4252                           ; BSR set to: 1
  4253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4254  0001B8  9239               	bcf	_flags^0,1,c
  4255  0001BA                     l9301:
  4256                           
  4257                           ; BSR set to: 1
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4259  0001BA  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4260  0001BE  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4261  0001C2  CFDE FFF6          	movff	postinc2,tblptrl
  4262  0001C6  CFDD FFF7          	movff	postdec2,tblptrh
  4263  0001CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4264  0001CA  6AF8               	clrf	tblptru,c
  4265  0001CC                     	endif
  4266  0001CC                     	if	0	;tblptru may be non-zero
  4267  0001CC                     	endif
  4268  0001CC  0008               	tblrd		*
  4269  0001CE  50F5               	movf	tablat,w,c
  4270  0001D0  0A2A               	xorlw	42
  4271  0001D2  A4D8               	btfss	status,2,c
  4272  0001D4  EFEE  F000         	goto	u12121
  4273  0001D8  EFF0  F000         	goto	u12120
  4274  0001DC                     u12121:
  4275  0001DC  EF19  F001         	goto	l9309
  4276  0001E0                     u12120:
  4277  0001E0                     
  4278                           ; BSR set to: 1
  4279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4280  0001E0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4281  0001E4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4282  0001E8  2ADE               	incf	postinc2,f,c
  4283  0001EA  0E00               	movlw	0
  4284  0001EC  22DD               	addwfc	postdec2,f,c
  4285                           
  4286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4287  0001EE  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4288  0001F2  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4289  0001F6  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  4290  0001FA  0E02               	movlw	2
  4291  0001FC  26DE               	addwf	postinc2,f,c
  4292  0001FE  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  4293  000202  0E00               	movlw	0
  4294  000204  22DD               	addwfc	postdec2,f,c
  4295  000206  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4296  00020A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4297  00020E  CFDE F037          	movff	postinc2,_width
  4298  000212  CFDD F038          	movff	postdec2,_width+1
  4299  000216                     
  4300                           ; BSR set to: 1
  4301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4302  000216  BE38               	btfsc	(_width+1)^0,7,c
  4303  000218  EF12  F001         	goto	u12130
  4304  00021C  EF10  F001         	goto	u12131
  4305  000220                     u12131:
  4306  000220  EF5F  F001         	goto	l9319
  4307  000224                     u12130:
  4308  000224                     
  4309                           ; BSR set to: 1
  4310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4311  000224  8039               	bsf	_flags^0,0,c
  4312                           
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4314  000226  6C37               	negf	_width^0,c
  4315  000228  1E38               	comf	(_width+1)^0,f,c
  4316  00022A  B0D8               	btfsc	status,0,c
  4317  00022C  2A38               	incf	(_width+1)^0,f,c
  4318  00022E  EF5F  F001         	goto	l9319
  4319  000232                     l9309:
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4323  000232  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4324  000236  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4325  00023A  CFDE F067          	movff	postinc2,atoi@s
  4326  00023E  CFDD F068          	movff	postdec2,atoi@s+1
  4327  000242  EC02  F022         	call	_atoi	;wreg free
  4328  000246  C067  F037         	movff	?_atoi,_width
  4329  00024A  C068  F038         	movff	?_atoi+1,_width+1
  4330                           
  4331                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4332  00024E  EF30  F001         	goto	l9313
  4333  000252                     l9311:
  4334                           
  4335                           ; BSR set to: 1
  4336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4337  000252  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4338  000256  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4339  00025A  2ADE               	incf	postinc2,f,c
  4340  00025C  0E00               	movlw	0
  4341  00025E  22DD               	addwfc	postdec2,f,c
  4342  000260                     l9313:
  4343  000260  0ED0               	movlw	208
  4344  000262  0100               	movlb	0	; () banked
  4345  000264  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  4346  000266  0EFF               	movlw	255
  4347  000268  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4348  00026A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4349  00026E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4350  000272  CFDE FFF6          	movff	postinc2,tblptrl
  4351  000276  CFDD FFF7          	movff	postdec2,tblptrh
  4352  00027A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4353  00027A  6AF8               	clrf	tblptru,c
  4354  00027C                     	endif
  4355  00027C                     	if	0	;tblptru may be non-zero
  4356  00027C                     	endif
  4357  00027C  0008               	tblrd		*
  4358  00027E  50F5               	movf	tablat,w,c
  4359  000280  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4360  000282  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4361  000284  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  4362  000286  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4363  000288  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4364  00028A  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4365  00028C  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4366  00028E  E10A               	bnz	u12140
  4367  000290  0E0A               	movlw	10
  4368  000292  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4369  000294  A0D8               	btfss	status,0,c
  4370  000296  EF4F  F001         	goto	u12141
  4371  00029A  EF52  F001         	goto	u12140
  4372  00029E                     u12141:
  4373  00029E  0E01               	movlw	1
  4374  0002A0  EF53  F001         	goto	u12150
  4375  0002A4                     u12140:
  4376  0002A4  0E00               	movlw	0
  4377  0002A6                     u12150:
  4378  0002A6  0101               	movlb	1	; () banked
  4379  0002A8  6FC2               	movwf	_vfpfcnvrt$1665& (0+255),b
  4380  0002AA  6BC3               	clrf	(_vfpfcnvrt$1665+1)& (0+255),b
  4381  0002AC                     
  4382                           ; BSR set to: 1
  4383  0002AC  51C2               	movf	_vfpfcnvrt$1665& (0+255),w,b
  4384  0002AE  11C3               	iorwf	(_vfpfcnvrt$1665+1)& (0+255),w,b
  4385  0002B0  A4D8               	btfss	status,2,c
  4386  0002B2  EF5D  F001         	goto	u12161
  4387  0002B6  EF5F  F001         	goto	u12160
  4388  0002BA                     u12161:
  4389  0002BA  EF29  F001         	goto	l9311
  4390  0002BE                     u12160:
  4391  0002BE                     l9319:
  4392                           
  4393                           ; BSR set to: 1
  4394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4395  0002BE  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4396  0002C2  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4397  0002C6  CFDE FFF6          	movff	postinc2,tblptrl
  4398  0002CA  CFDD FFF7          	movff	postdec2,tblptrh
  4399  0002CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4400  0002CE  6AF8               	clrf	tblptru,c
  4401  0002D0                     	endif
  4402  0002D0                     	if	0	;tblptru may be non-zero
  4403  0002D0                     	endif
  4404  0002D0  0008               	tblrd		*
  4405  0002D2  50F5               	movf	tablat,w,c
  4406  0002D4  0A2E               	xorlw	46
  4407  0002D6  A4D8               	btfss	status,2,c
  4408  0002D8  EF70  F001         	goto	u12171
  4409  0002DC  EF72  F001         	goto	u12170
  4410  0002E0                     u12171:
  4411  0002E0  EFF4  F001         	goto	l9339
  4412  0002E4                     u12170:
  4413  0002E4                     
  4414                           ; BSR set to: 1
  4415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4416  0002E4  0E00               	movlw	0
  4417  0002E6  0100               	movlb	0	; () banked
  4418  0002E8  6FF0               	movwf	(_prec+1)& (0+255),b
  4419  0002EA  0E00               	movlw	0
  4420  0002EC  6FEF               	movwf	_prec& (0+255),b
  4421  0002EE                     
  4422                           ; BSR set to: 0
  4423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4424  0002EE  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4425  0002F2  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4426  0002F6  2ADE               	incf	postinc2,f,c
  4427  0002F8  0E00               	movlw	0
  4428  0002FA  22DD               	addwfc	postdec2,f,c
  4429  0002FC                     
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4432  0002FC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4433  000300  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4434  000304  CFDE FFF6          	movff	postinc2,tblptrl
  4435  000308  CFDD FFF7          	movff	postdec2,tblptrh
  4436  00030C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4437  00030C  6AF8               	clrf	tblptru,c
  4438  00030E                     	endif
  4439  00030E                     	if	0	;tblptru may be non-zero
  4440  00030E                     	endif
  4441  00030E  0008               	tblrd		*
  4442  000310  50F5               	movf	tablat,w,c
  4443  000312  0A2A               	xorlw	42
  4444  000314  A4D8               	btfss	status,2,c
  4445  000316  EF8F  F001         	goto	u12181
  4446  00031A  EF91  F001         	goto	u12180
  4447  00031E                     u12181:
  4448  00031E  EFAE  F001         	goto	l9329
  4449  000322                     u12180:
  4450  000322                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4453  000322  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4454  000326  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4455  00032A  2ADE               	incf	postinc2,f,c
  4456  00032C  0E00               	movlw	0
  4457  00032E  22DD               	addwfc	postdec2,f,c
  4458                           
  4459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4460  000330  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4461  000334  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4462  000338  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  4463  00033C  0E02               	movlw	2
  4464  00033E  26DE               	addwf	postinc2,f,c
  4465  000340  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  4466  000344  0E00               	movlw	0
  4467  000346  22DD               	addwfc	postdec2,f,c
  4468  000348  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4469  00034C  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4470  000350  CFDE F0EF          	movff	postinc2,_prec
  4471  000354  CFDD F0F0          	movff	postdec2,_prec+1
  4472                           
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4474  000358  EFF4  F001         	goto	l9339
  4475  00035C                     l9329:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4479  00035C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4480  000360  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4481  000364  CFDE F067          	movff	postinc2,atoi@s
  4482  000368  CFDD F068          	movff	postdec2,atoi@s+1
  4483  00036C  EC02  F022         	call	_atoi	;wreg free
  4484  000370  C067  F0EF         	movff	?_atoi,_prec
  4485  000374  C068  F0F0         	movff	?_atoi+1,_prec+1
  4486                           
  4487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4488  000378  EFC5  F001         	goto	l9333
  4489  00037C                     l9331:
  4490                           
  4491                           ; BSR set to: 1
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4493  00037C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4494  000380  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4495  000384  2ADE               	incf	postinc2,f,c
  4496  000386  0E00               	movlw	0
  4497  000388  22DD               	addwfc	postdec2,f,c
  4498  00038A                     l9333:
  4499  00038A  0ED0               	movlw	208
  4500  00038C  0100               	movlb	0	; () banked
  4501  00038E  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  4502  000390  0EFF               	movlw	255
  4503  000392  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4504  000394  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4505  000398  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4506  00039C  CFDE FFF6          	movff	postinc2,tblptrl
  4507  0003A0  CFDD FFF7          	movff	postdec2,tblptrh
  4508  0003A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4509  0003A4  6AF8               	clrf	tblptru,c
  4510  0003A6                     	endif
  4511  0003A6                     	if	0	;tblptru may be non-zero
  4512  0003A6                     	endif
  4513  0003A6  0008               	tblrd		*
  4514  0003A8  50F5               	movf	tablat,w,c
  4515  0003AA  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4516  0003AC  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4517  0003AE  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  4518  0003B0  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4519  0003B2  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4520  0003B4  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4521  0003B6  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4522  0003B8  E10A               	bnz	u12190
  4523  0003BA  0E0A               	movlw	10
  4524  0003BC  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4525  0003BE  A0D8               	btfss	status,0,c
  4526  0003C0  EFE4  F001         	goto	u12191
  4527  0003C4  EFE7  F001         	goto	u12190
  4528  0003C8                     u12191:
  4529  0003C8  0E01               	movlw	1
  4530  0003CA  EFE8  F001         	goto	u12200
  4531  0003CE                     u12190:
  4532  0003CE  0E00               	movlw	0
  4533  0003D0                     u12200:
  4534  0003D0  0101               	movlb	1	; () banked
  4535  0003D2  6FC4               	movwf	_vfpfcnvrt$1666& (0+255),b
  4536  0003D4  6BC5               	clrf	(_vfpfcnvrt$1666+1)& (0+255),b
  4537  0003D6                     
  4538                           ; BSR set to: 1
  4539  0003D6  51C4               	movf	_vfpfcnvrt$1666& (0+255),w,b
  4540  0003D8  11C5               	iorwf	(_vfpfcnvrt$1666+1)& (0+255),w,b
  4541  0003DA  A4D8               	btfss	status,2,c
  4542  0003DC  EFF2  F001         	goto	u12211
  4543  0003E0  EFF4  F001         	goto	u12210
  4544  0003E4                     u12211:
  4545  0003E4  EFBE  F001         	goto	l9331
  4546  0003E8                     u12210:
  4547  0003E8                     l9339:
  4548                           
  4549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4550  0003E8  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4551  0003EC  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4552  0003F0  CFDE FFF6          	movff	postinc2,tblptrl
  4553  0003F4  CFDD FFF7          	movff	postdec2,tblptrh
  4554  0003F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4555  0003F8  6AF8               	clrf	tblptru,c
  4556  0003FA                     	endif
  4557  0003FA                     	if	0	;tblptru may be non-zero
  4558  0003FA                     	endif
  4559  0003FA  0008               	tblrd		*
  4560  0003FC  50F5               	movf	tablat,w,c
  4561  0003FE  0100               	movlb	0	; () banked
  4562  000400  6F66               	movwf	tolower@c& (0+255),b
  4563  000402  6B67               	clrf	(tolower@c+1)& (0+255),b
  4564  000404  ECFA  F02E         	call	_tolower	;wreg free
  4565  000408  0100               	movlb	0	; () banked
  4566  00040A  5166               	movf	?_tolower& (0+255),w,b
  4567  00040C  0101               	movlb	1	; () banked
  4568  00040E  6FCC               	movwf	vfpfcnvrt@ct& (0+255),b
  4569  000410                     
  4570                           ; BSR set to: 1
  4571                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4572  000410  51CC               	movf	vfpfcnvrt@ct& (0+255),w,b
  4573  000412  B4D8               	btfsc	status,2,c
  4574  000414  EF0E  F002         	goto	u12221
  4575  000418  EF10  F002         	goto	u12220
  4576  00041C                     u12221:
  4577  00041C  EF50  F002         	goto	l9349
  4578  000420                     u12220:
  4579  000420                     
  4580                           ; BSR set to: 1
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4582  000420  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4583  000424  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4584  000428  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  4585  00042C  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  4586  000430  0E01               	movlw	1
  4587  000432  0100               	movlb	0	; () banked
  4588  000434  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4589  000436  0E00               	movlw	0
  4590  000438  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4591  00043A  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4592  00043E  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4593  000442                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4594  000442  6AF8               	clrf	tblptru,c
  4595  000444                     	endif
  4596  000444                     	if	0	;tblptru may be non-zero
  4597  000444                     	endif
  4598  000444  0008               	tblrd		*
  4599  000446  50F5               	movf	tablat,w,c
  4600  000448  6F66               	movwf	tolower@c& (0+255),b
  4601  00044A  6B67               	clrf	(tolower@c+1)& (0+255),b
  4602  00044C  ECFA  F02E         	call	_tolower	;wreg free
  4603  000450  0100               	movlb	0	; () banked
  4604  000452  5166               	movf	?_tolower& (0+255),w,b
  4605  000454  0101               	movlb	1	; () banked
  4606  000456  6FCD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4607  000458                     
  4608                           ; BSR set to: 1
  4609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4610  000458  51CD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4611  00045A  B4D8               	btfsc	status,2,c
  4612  00045C  EF32  F002         	goto	u12231
  4613  000460  EF34  F002         	goto	u12230
  4614  000464                     u12231:
  4615  000464  EF50  F002         	goto	l9349
  4616  000468                     u12230:
  4617  000468                     
  4618                           ; BSR set to: 1
  4619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4620  000468  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4621  00046C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4622  000470  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  4623  000474  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  4624  000478  0E02               	movlw	2
  4625  00047A  0100               	movlb	0	; () banked
  4626  00047C  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4627  00047E  0E00               	movlw	0
  4628  000480  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4629  000482  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4630  000486  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4631  00048A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4632  00048A  6AF8               	clrf	tblptru,c
  4633  00048C                     	endif
  4634  00048C                     	if	0	;tblptru may be non-zero
  4635  00048C                     	endif
  4636  00048C  0008               	tblrd		*
  4637  00048E  50F5               	movf	tablat,w,c
  4638  000490  6F66               	movwf	tolower@c& (0+255),b
  4639  000492  6B67               	clrf	(tolower@c+1)& (0+255),b
  4640  000494  ECFA  F02E         	call	_tolower	;wreg free
  4641  000498  0100               	movlb	0	; () banked
  4642  00049A  5166               	movf	?_tolower& (0+255),w,b
  4643  00049C  0101               	movlb	1	; () banked
  4644  00049E  6FCE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4645  0004A0                     l9349:
  4646                           
  4647                           ; BSR set to: 1
  4648                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4649  0004A0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4650  0004A4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4651  0004A8  CFDE FFF6          	movff	postinc2,tblptrl
  4652  0004AC  CFDD FFF7          	movff	postdec2,tblptrh
  4653  0004B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4654  0004B0  6AF8               	clrf	tblptru,c
  4655  0004B2                     	endif
  4656  0004B2                     	if	0	;tblptru may be non-zero
  4657  0004B2                     	endif
  4658  0004B2  0008               	tblrd		*
  4659  0004B4  50F5               	movf	tablat,w,c
  4660  0004B6  0A63               	xorlw	99
  4661  0004B8  A4D8               	btfss	status,2,c
  4662  0004BA  EF61  F002         	goto	u12241
  4663  0004BE  EF63  F002         	goto	u12240
  4664  0004C2                     u12241:
  4665  0004C2  EF8A  F002         	goto	l9357
  4666  0004C6                     u12240:
  4667  0004C6                     
  4668                           ; BSR set to: 1
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4670  0004C6  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4671  0004CA  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4672  0004CE  2ADE               	incf	postinc2,f,c
  4673  0004D0  0E00               	movlw	0
  4674  0004D2  22DD               	addwfc	postdec2,f,c
  4675                           
  4676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4677  0004D4  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4678  0004D8  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4679  0004DC  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  4680  0004E0  0E02               	movlw	2
  4681  0004E2  26DE               	addwf	postinc2,f,c
  4682  0004E4  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  4683  0004E8  0E00               	movlw	0
  4684  0004EA  22DD               	addwfc	postdec2,f,c
  4685  0004EC  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4686  0004F0  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4687  0004F4  50DF               	movf	indf2,w,c
  4688  0004F6  6FD9               	movwf	vfpfcnvrt@c& (0+255),b
  4689  0004F8                     
  4690                           ; BSR set to: 1
  4691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4692  0004F8  C0D1  F07B         	movff	vfpfcnvrt@fp,ctoa@fp
  4693  0004FC  C0D2  F07C         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4694  000500  C1D9  F07D         	movff	vfpfcnvrt@c,ctoa@c
  4695  000504  EC8B  F02F         	call	_ctoa	;wreg free
  4696  000508  C07B  F0D1         	movff	?_ctoa,?_vfpfcnvrt
  4697  00050C  C07C  F0D2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4698  000510  EFEF  F00A         	goto	l838
  4699  000514                     l9357:
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
  4703  000514  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4704  000518  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4705  00051C  CFDE F060          	movff	postinc2,strncmp@_l
  4706  000520  CFDD F061          	movff	postdec2,strncmp@_l+1
  4707  000524  0EC7               	movlw	low STR_13
  4708  000526  0100               	movlb	0	; () banked
  4709  000528  6F62               	movwf	strncmp@_r& (0+255),b
  4710  00052A  0EFF               	movlw	high STR_13
  4711  00052C  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4712  00052E  0E00               	movlw	0
  4713  000530  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4714  000532  0E03               	movlw	3
  4715  000534  6F64               	movwf	strncmp@n& (0+255),b
  4716  000536  ECEE  F027         	call	_strncmp	;wreg free
  4717  00053A  0100               	movlb	0	; () banked
  4718  00053C  5160               	movf	?_strncmp& (0+255),w,b
  4719  00053E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4720  000540  B4D8               	btfsc	status,2,c
  4721  000542  EFA5  F002         	goto	u12251
  4722  000546  EFA7  F002         	goto	u12250
  4723  00054A                     u12251:
  4724  00054A  EFC3  F002         	goto	l9361
  4725  00054E                     u12250:
  4726  00054E                     
  4727                           ; BSR set to: 0
  4728  00054E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  000552  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  000556  CFDE F060          	movff	postinc2,strncmp@_l
  4731  00055A  CFDD F061          	movff	postdec2,strncmp@_l+1
  4732  00055E  0ECF               	movlw	low STR_17
  4733  000560  6F62               	movwf	strncmp@_r& (0+255),b
  4734  000562  0EFF               	movlw	high STR_17
  4735  000564  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4736  000566  0E00               	movlw	0
  4737  000568  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4738  00056A  0E03               	movlw	3
  4739  00056C  6F64               	movwf	strncmp@n& (0+255),b
  4740  00056E  ECEE  F027         	call	_strncmp	;wreg free
  4741  000572  0100               	movlb	0	; () banked
  4742  000574  5160               	movf	?_strncmp& (0+255),w,b
  4743  000576  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4744  000578  A4D8               	btfss	status,2,c
  4745  00057A  EFC1  F002         	goto	u12261
  4746  00057E  EFC3  F002         	goto	u12260
  4747  000582                     u12261:
  4748  000582  EF04  F003         	goto	l9367
  4749  000586                     u12260:
  4750  000586                     l9361:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
  4754  000586  0E03               	movlw	3
  4755  000588  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4756  00058C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4757  000590  26DE               	addwf	postinc2,f,c
  4758  000592  0E00               	movlw	0
  4759  000594  22DD               	addwfc	postdec2,f,c
  4760                           
  4761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4762  000596  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4763  00059A  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4764  00059E  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  4765  0005A2  0E02               	movlw	2
  4766  0005A4  26DE               	addwf	postinc2,f,c
  4767  0005A6  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  4768  0005AA  0E00               	movlw	0
  4769  0005AC  22DD               	addwfc	postdec2,f,c
  4770  0005AE  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4771  0005B2  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4772  0005B6  50DF               	movf	indf2,w,c
  4773  0005B8  0101               	movlb	1	; () banked
  4774  0005BA  6FCF               	movwf	vfpfcnvrt@ll& (0+255),b
  4775  0005BC  0E00               	movlw	0
  4776  0005BE  BFCF               	btfsc	vfpfcnvrt@ll& (0+255),7,b
  4777  0005C0  0EFF               	movlw	-1
  4778  0005C2  6FD0               	movwf	(vfpfcnvrt@ll+1)& (0+255),b
  4779  0005C4  6FD1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4780  0005C6  6FD2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4781  0005C8  6FD3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4782  0005CA  6FD4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4783  0005CC  6FD5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4784  0005CE  6FD6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4785  0005D0                     l9363:
  4786                           
  4787                           ; BSR set to: 1
  4788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
  4789  0005D0  C0D1  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  4790  0005D4  C0D2  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4791  0005D8  C1CF  F07D         	movff	vfpfcnvrt@ll,dtoa@d
  4792  0005DC  C1D0  F07E         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4793  0005E0  C1D1  F07F         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4794  0005E4  C1D2  F080         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4795  0005E8  C1D3  F081         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4796  0005EC  C1D4  F082         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4797  0005F0  C1D5  F083         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4798  0005F4  C1D6  F084         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4799  0005F8  EC44  F01B         	call	_dtoa	;wreg free
  4800  0005FC  C07B  F0D1         	movff	?_dtoa,?_vfpfcnvrt
  4801  000600  C07C  F0D2         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4802  000604  EFEF  F00A         	goto	l838
  4803  000608                     l9367:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
  4807  000608  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4808  00060C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4809  000610  CFDE F060          	movff	postinc2,strncmp@_l
  4810  000614  CFDD F061          	movff	postdec2,strncmp@_l+1
  4811  000618  0EC8               	movlw	low (STR_13+1)
  4812  00061A  6F62               	movwf	strncmp@_r& (0+255),b
  4813  00061C  0EFF               	movlw	high (STR_13+1)
  4814  00061E  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4815  000620  0E00               	movlw	0
  4816  000622  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4817  000624  0E02               	movlw	2
  4818  000626  6F64               	movwf	strncmp@n& (0+255),b
  4819  000628  ECEE  F027         	call	_strncmp	;wreg free
  4820  00062C  0100               	movlb	0	; () banked
  4821  00062E  5160               	movf	?_strncmp& (0+255),w,b
  4822  000630  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4823  000632  B4D8               	btfsc	status,2,c
  4824  000634  EF1E  F003         	goto	u12271
  4825  000638  EF20  F003         	goto	u12270
  4826  00063C                     u12271:
  4827  00063C  EF3C  F003         	goto	l9371
  4828  000640                     u12270:
  4829  000640                     
  4830                           ; BSR set to: 0
  4831  000640  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4832  000644  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4833  000648  CFDE F060          	movff	postinc2,strncmp@_l
  4834  00064C  CFDD F061          	movff	postdec2,strncmp@_l+1
  4835  000650  0ED0               	movlw	low (STR_17+1)
  4836  000652  6F62               	movwf	strncmp@_r& (0+255),b
  4837  000654  0EFF               	movlw	high (STR_17+1)
  4838  000656  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4839  000658  0E00               	movlw	0
  4840  00065A  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4841  00065C  0E02               	movlw	2
  4842  00065E  6F64               	movwf	strncmp@n& (0+255),b
  4843  000660  ECEE  F027         	call	_strncmp	;wreg free
  4844  000664  0100               	movlb	0	; () banked
  4845  000666  5160               	movf	?_strncmp& (0+255),w,b
  4846  000668  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4847  00066A  A4D8               	btfss	status,2,c
  4848  00066C  EF3A  F003         	goto	u12281
  4849  000670  EF3C  F003         	goto	u12280
  4850  000674                     u12281:
  4851  000674  EF64  F003         	goto	l9377
  4852  000678                     u12280:
  4853  000678                     l9371:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
  4857  000678  0E02               	movlw	2
  4858  00067A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4859  00067E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4860  000682  26DE               	addwf	postinc2,f,c
  4861  000684  0E00               	movlw	0
  4862  000686  22DD               	addwfc	postdec2,f,c
  4863                           
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4865  000688  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4866  00068C  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4867  000690  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  4868  000694  0E02               	movlw	2
  4869  000696  26DE               	addwf	postinc2,f,c
  4870  000698  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  4871  00069C  0E00               	movlw	0
  4872  00069E  22DD               	addwfc	postdec2,f,c
  4873  0006A0  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4874  0006A4  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4875  0006A8  CFDE F1CF          	movff	postinc2,vfpfcnvrt@ll
  4876  0006AC  CFDD F1D0          	movff	postdec2,vfpfcnvrt@ll+1
  4877  0006B0  0101               	movlb	1	; () banked
  4878  0006B2  0E00               	movlw	0
  4879  0006B4  BFD0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4880  0006B6  0EFF               	movlw	-1
  4881  0006B8  6FD1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4882  0006BA  6FD2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4883  0006BC  6FD3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4884  0006BE  6FD4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4885  0006C0  6FD5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4886  0006C2  6FD6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4887  0006C4  EFE8  F002         	goto	l9363
  4888  0006C8                     l9377:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4892  0006C8  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4893  0006CC  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4894  0006D0  CFDE FFF6          	movff	postinc2,tblptrl
  4895  0006D4  CFDD FFF7          	movff	postdec2,tblptrh
  4896  0006D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4897  0006D8  6AF8               	clrf	tblptru,c
  4898  0006DA                     	endif
  4899  0006DA                     	if	0	;tblptru may be non-zero
  4900  0006DA                     	endif
  4901  0006DA  0008               	tblrd		*
  4902  0006DC  50F5               	movf	tablat,w,c
  4903  0006DE  0A64               	xorlw	100
  4904  0006E0  B4D8               	btfsc	status,2,c
  4905  0006E2  EF75  F003         	goto	u12291
  4906  0006E6  EF77  F003         	goto	u12290
  4907  0006EA                     u12291:
  4908  0006EA  EF8A  F003         	goto	l9381
  4909  0006EE                     u12290:
  4910  0006EE                     
  4911                           ; BSR set to: 0
  4912  0006EE  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4913  0006F2  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4914  0006F6  CFDE FFF6          	movff	postinc2,tblptrl
  4915  0006FA  CFDD FFF7          	movff	postdec2,tblptrh
  4916  0006FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4917  0006FE  6AF8               	clrf	tblptru,c
  4918  000700                     	endif
  4919  000700                     	if	0	;tblptru may be non-zero
  4920  000700                     	endif
  4921  000700  0008               	tblrd		*
  4922  000702  50F5               	movf	tablat,w,c
  4923  000704  0A69               	xorlw	105
  4924  000706  A4D8               	btfss	status,2,c
  4925  000708  EF88  F003         	goto	u12301
  4926  00070C  EF8A  F003         	goto	u12300
  4927  000710                     u12301:
  4928  000710  EFB1  F003         	goto	l9387
  4929  000714                     u12300:
  4930  000714                     l9381:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4934  000714  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4935  000718  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4936  00071C  2ADE               	incf	postinc2,f,c
  4937  00071E  0E00               	movlw	0
  4938  000720  22DD               	addwfc	postdec2,f,c
  4939                           
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4941  000722  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4942  000726  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4943  00072A  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  4944  00072E  0E02               	movlw	2
  4945  000730  26DE               	addwf	postinc2,f,c
  4946  000732  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  4947  000736  0E00               	movlw	0
  4948  000738  22DD               	addwfc	postdec2,f,c
  4949  00073A  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4950  00073E  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4951  000742  CFDE F1CF          	movff	postinc2,vfpfcnvrt@ll
  4952  000746  CFDD F1D0          	movff	postdec2,vfpfcnvrt@ll+1
  4953  00074A  0101               	movlb	1	; () banked
  4954  00074C  0E00               	movlw	0
  4955  00074E  BFD0               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4956  000750  0EFF               	movlw	-1
  4957  000752  6FD1               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4958  000754  6FD2               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4959  000756  6FD3               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4960  000758  6FD4               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4961  00075A  6FD5               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4962  00075C  6FD6               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4963  00075E  EFE8  F002         	goto	l9363
  4964  000762                     l9387:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
  4968  000762  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4969  000766  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4970  00076A  CFDE F060          	movff	postinc2,strncmp@_l
  4971  00076E  CFDD F061          	movff	postdec2,strncmp@_l+1
  4972  000772  0EEA               	movlw	low STR_31
  4973  000774  6F62               	movwf	strncmp@_r& (0+255),b
  4974  000776  0EFF               	movlw	high STR_31
  4975  000778  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4976  00077A  0E00               	movlw	0
  4977  00077C  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4978  00077E  0E02               	movlw	2
  4979  000780  6F64               	movwf	strncmp@n& (0+255),b
  4980  000782  ECEE  F027         	call	_strncmp	;wreg free
  4981  000786  0100               	movlb	0	; () banked
  4982  000788  5160               	movf	?_strncmp& (0+255),w,b
  4983  00078A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4984  00078C  B4D8               	btfsc	status,2,c
  4985  00078E  EFCB  F003         	goto	u12311
  4986  000792  EFCD  F003         	goto	u12310
  4987  000796                     u12311:
  4988  000796  EFE9  F003         	goto	l9391
  4989  00079A                     u12310:
  4990  00079A                     
  4991                           ; BSR set to: 0
  4992  00079A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4993  00079E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4994  0007A2  CFDE F060          	movff	postinc2,strncmp@_l
  4995  0007A6  CFDD F061          	movff	postdec2,strncmp@_l+1
  4996  0007AA  0EF0               	movlw	low STR_35
  4997  0007AC  6F62               	movwf	strncmp@_r& (0+255),b
  4998  0007AE  0EFF               	movlw	high STR_35
  4999  0007B0  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5000  0007B2  0E00               	movlw	0
  5001  0007B4  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5002  0007B6  0E02               	movlw	2
  5003  0007B8  6F64               	movwf	strncmp@n& (0+255),b
  5004  0007BA  ECEE  F027         	call	_strncmp	;wreg free
  5005  0007BE  0100               	movlb	0	; () banked
  5006  0007C0  5160               	movf	?_strncmp& (0+255),w,b
  5007  0007C2  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5008  0007C4  A4D8               	btfss	status,2,c
  5009  0007C6  EFE7  F003         	goto	u12321
  5010  0007CA  EFE9  F003         	goto	u12320
  5011  0007CE                     u12321:
  5012  0007CE  EF12  F004         	goto	l9397
  5013  0007D2                     u12320:
  5014  0007D2                     l9391:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
  5018  0007D2  0E02               	movlw	2
  5019  0007D4  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5020  0007D8  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5021  0007DC  26DE               	addwf	postinc2,f,c
  5022  0007DE  0E00               	movlw	0
  5023  0007E0  22DD               	addwfc	postdec2,f,c
  5024                           
  5025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5026  0007E2  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5027  0007E6  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5028  0007EA  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5029  0007EE  0E02               	movlw	2
  5030  0007F0  26DE               	addwf	postinc2,f,c
  5031  0007F2  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5032  0007F6  0E00               	movlw	0
  5033  0007F8  22DD               	addwfc	postdec2,f,c
  5034  0007FA  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5035  0007FE  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5036  000802  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  5037  000806  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  5038  00080A  C0D9  F1CF         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5039  00080E  C0DA  F1D0         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5040  000812  0101               	movlb	1	; () banked
  5041  000814  6BD1               	clrf	(vfpfcnvrt@ll+2)& (0+255),b
  5042  000816  6BD2               	clrf	(vfpfcnvrt@ll+3)& (0+255),b
  5043  000818  6BD3               	clrf	(vfpfcnvrt@ll+4)& (0+255),b
  5044  00081A  6BD4               	clrf	(vfpfcnvrt@ll+5)& (0+255),b
  5045  00081C  6BD5               	clrf	(vfpfcnvrt@ll+6)& (0+255),b
  5046  00081E  6BD6               	clrf	(vfpfcnvrt@ll+7)& (0+255),b
  5047  000820  EFE8  F002         	goto	l9363
  5048  000824                     l9397:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5052  000824  0E66               	movlw	102
  5053  000826  0101               	movlb	1	; () banked
  5054  000828  19CC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5055  00082A  A4D8               	btfss	status,2,c
  5056  00082C  EF1A  F004         	goto	u12331
  5057  000830  EF1C  F004         	goto	u12330
  5058  000834                     u12331:
  5059  000834  EF5D  F004         	goto	l9409
  5060  000838                     u12330:
  5061  000838                     
  5062                           ; BSR set to: 1
  5063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5064  000838  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  00083C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  000840  CFDE FFF6          	movff	postinc2,tblptrl
  5067  000844  CFDD FFF7          	movff	postdec2,tblptrh
  5068  000848                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5069  000848  6AF8               	clrf	tblptru,c
  5070  00084A                     	endif
  5071  00084A                     	if	0	;tblptru may be non-zero
  5072  00084A                     	endif
  5073  00084A  0008               	tblrd		*
  5074  00084C  CFF5 F1D9          	movff	tablat,vfpfcnvrt@c
  5075  000850                     
  5076                           ; BSR set to: 1
  5077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5078  000850  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5079  000854  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5080  000858  2ADE               	incf	postinc2,f,c
  5081  00085A  0E00               	movlw	0
  5082  00085C  22DD               	addwfc	postdec2,f,c
  5083  00085E                     
  5084                           ; BSR set to: 1
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5086  00085E  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5087  000862  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5088  000866  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5089  00086A  0E04               	movlw	4
  5090  00086C  26DE               	addwf	postinc2,f,c
  5091  00086E  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5092  000872  0E00               	movlw	0
  5093  000874  22DD               	addwfc	postdec2,f,c
  5094  000876  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5095  00087A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5096  00087E  CFDE F1C8          	movff	postinc2,vfpfcnvrt@f
  5097  000882  CFDE F1C9          	movff	postinc2,vfpfcnvrt@f+1
  5098  000886  CFDE F1CA          	movff	postinc2,vfpfcnvrt@f+2
  5099  00088A  CFDE F1CB          	movff	postinc2,vfpfcnvrt@f+3
  5100  00088E                     l9405:
  5101                           
  5102                           ; BSR set to: 1
  5103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5104  00088E  C0D1  F08D         	movff	vfpfcnvrt@fp,efgtoa@fp
  5105  000892  C0D2  F08E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  5106  000896  C1C8  F08F         	movff	vfpfcnvrt@f,efgtoa@f
  5107  00089A  C1C9  F090         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5108  00089E  C1CA  F091         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5109  0008A2  C1CB  F092         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5110  0008A6  C1D9  F093         	movff	vfpfcnvrt@c,efgtoa@c
  5111  0008AA  ECF0  F00A         	call	_efgtoa	;wreg free
  5112  0008AE  C08D  F0D1         	movff	?_efgtoa,?_vfpfcnvrt
  5113  0008B2  C08E  F0D2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5114  0008B6  EFEF  F00A         	goto	l838
  5115  0008BA                     l9409:
  5116                           
  5117                           ; BSR set to: 1
  5118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5119  0008BA  0ECC               	movlw	low vfpfcnvrt@ct
  5120  0008BC  0100               	movlb	0	; () banked
  5121  0008BE  6F60               	movwf	strncmp@_l& (0+255),b
  5122  0008C0  0E01               	movlw	high vfpfcnvrt@ct
  5123  0008C2  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  5124  0008C4  0EED               	movlw	low STR_40
  5125  0008C6  6F62               	movwf	strncmp@_r& (0+255),b
  5126  0008C8  0EFF               	movlw	high STR_40
  5127  0008CA  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5128  0008CC  0E00               	movlw	0
  5129  0008CE  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5130  0008D0  0E02               	movlw	2
  5131  0008D2  6F64               	movwf	strncmp@n& (0+255),b
  5132  0008D4  ECEE  F027         	call	_strncmp	;wreg free
  5133  0008D8  0100               	movlb	0	; () banked
  5134  0008DA  5160               	movf	?_strncmp& (0+255),w,b
  5135  0008DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5136  0008DE  A4D8               	btfss	status,2,c
  5137  0008E0  EF74  F004         	goto	u12341
  5138  0008E4  EF76  F004         	goto	u12340
  5139  0008E8                     u12341:
  5140  0008E8  EFF4  F004         	goto	l9425
  5141  0008EC                     u12340:
  5142  0008EC                     
  5143                           ; BSR set to: 0
  5144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5145  0008EC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5146  0008F0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5147  0008F4  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  5148  0008F8  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  5149  0008FC  0E01               	movlw	1
  5150  0008FE  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  5151  000900  0E00               	movlw	0
  5152  000902  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5153  000904  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5154  000908  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5155  00090C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5156  00090C  6AF8               	clrf	tblptru,c
  5157  00090E                     	endif
  5158  00090E                     	if	0	;tblptru may be non-zero
  5159  00090E                     	endif
  5160  00090E  0008               	tblrd		*
  5161  000910  CFF5 F1D9          	movff	tablat,vfpfcnvrt@c
  5162  000914  0EBF               	movlw	191
  5163  000916  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  5164  000918  0EFF               	movlw	255
  5165  00091A  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5166  00091C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5167  000920  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5168  000924  CFDE FFF6          	movff	postinc2,tblptrl
  5169  000928  CFDD FFF7          	movff	postdec2,tblptrh
  5170  00092C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5171  00092C  6AF8               	clrf	tblptru,c
  5172  00092E                     	endif
  5173  00092E                     	if	0	;tblptru may be non-zero
  5174  00092E                     	endif
  5175  00092E  0008               	tblrd		*
  5176  000930  50F5               	movf	tablat,w,c
  5177  000932  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5178  000934  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5179  000936  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  5180  000938  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5181  00093A  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5182  00093C  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5183  00093E  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5184  000940  E10A               	bnz	u12350
  5185  000942  0E1A               	movlw	26
  5186  000944  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5187  000946  A0D8               	btfss	status,0,c
  5188  000948  EFA8  F004         	goto	u12351
  5189  00094C  EFAB  F004         	goto	u12350
  5190  000950                     u12351:
  5191  000950  0E01               	movlw	1
  5192  000952  EFAC  F004         	goto	u12360
  5193  000956                     u12350:
  5194  000956  0E00               	movlw	0
  5195  000958                     u12360:
  5196  000958  0101               	movlb	1	; () banked
  5197  00095A  6FC6               	movwf	_vfpfcnvrt$1687& (0+255),b
  5198  00095C  6BC7               	clrf	(_vfpfcnvrt$1687+1)& (0+255),b
  5199  00095E                     
  5200                           ; BSR set to: 1
  5201  00095E  51C6               	movf	_vfpfcnvrt$1687& (0+255),w,b
  5202  000960  11C7               	iorwf	(_vfpfcnvrt$1687+1)& (0+255),w,b
  5203  000962  B4D8               	btfsc	status,2,c
  5204  000964  EFB6  F004         	goto	u12371
  5205  000968  EFB8  F004         	goto	u12370
  5206  00096C                     u12371:
  5207  00096C  EFD2  F004         	goto	l9419
  5208  000970                     u12370:
  5209  000970                     
  5210                           ; BSR set to: 1
  5211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5212  000970  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5213  000974  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5214  000978  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5215  00097C  0E04               	movlw	4
  5216  00097E  26DE               	addwf	postinc2,f,c
  5217  000980  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5218  000984  0E00               	movlw	0
  5219  000986  22DD               	addwfc	postdec2,f,c
  5220  000988  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5221  00098C  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5222  000990  CFDE F1C8          	movff	postinc2,vfpfcnvrt@f
  5223  000994  CFDE F1C9          	movff	postinc2,vfpfcnvrt@f+1
  5224  000998  CFDE F1CA          	movff	postinc2,vfpfcnvrt@f+2
  5225  00099C  CFDE F1CB          	movff	postinc2,vfpfcnvrt@f+3
  5226                           
  5227                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  5228  0009A0  EFEA  F004         	goto	l858
  5229  0009A4                     l9419:
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5233  0009A4  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5234  0009A8  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5235  0009AC  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5236  0009B0  0E04               	movlw	4
  5237  0009B2  26DE               	addwf	postinc2,f,c
  5238  0009B4  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5239  0009B8  0E00               	movlw	0
  5240  0009BA  22DD               	addwfc	postdec2,f,c
  5241  0009BC  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5242  0009C0  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5243  0009C4  CFDE F1C8          	movff	postinc2,vfpfcnvrt@f
  5244  0009C8  CFDE F1C9          	movff	postinc2,vfpfcnvrt@f+1
  5245  0009CC  CFDE F1CA          	movff	postinc2,vfpfcnvrt@f+2
  5246  0009D0  CFDE F1CB          	movff	postinc2,vfpfcnvrt@f+3
  5247  0009D4                     l858:
  5248                           
  5249                           ; BSR set to: 1
  5250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5251  0009D4  0E02               	movlw	2
  5252  0009D6  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5253  0009DA  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5254  0009DE  26DE               	addwf	postinc2,f,c
  5255  0009E0  0E00               	movlw	0
  5256  0009E2  22DD               	addwfc	postdec2,f,c
  5257  0009E4  EF47  F004         	goto	l9405
  5258  0009E8                     l9425:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5262  0009E8  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5263  0009EC  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5264  0009F0  CFDE F060          	movff	postinc2,strncmp@_l
  5265  0009F4  CFDD F061          	movff	postdec2,strncmp@_l+1
  5266  0009F8  0EDB               	movlw	low STR_45
  5267  0009FA  6F62               	movwf	strncmp@_r& (0+255),b
  5268  0009FC  0EFF               	movlw	high STR_45
  5269  0009FE  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5270  000A00  0E00               	movlw	0
  5271  000A02  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5272  000A04  0E03               	movlw	3
  5273  000A06  6F64               	movwf	strncmp@n& (0+255),b
  5274  000A08  ECEE  F027         	call	_strncmp	;wreg free
  5275  000A0C  0100               	movlb	0	; () banked
  5276  000A0E  5160               	movf	?_strncmp& (0+255),w,b
  5277  000A10  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5278  000A12  A4D8               	btfss	status,2,c
  5279  000A14  EF0E  F005         	goto	u12381
  5280  000A18  EF10  F005         	goto	u12380
  5281  000A1C                     u12381:
  5282  000A1C  EF50  F005         	goto	l9433
  5283  000A20                     u12380:
  5284  000A20                     
  5285                           ; BSR set to: 0
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5287  000A20  0E03               	movlw	3
  5288  000A22  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5289  000A26  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5290  000A2A  26DE               	addwf	postinc2,f,c
  5291  000A2C  0E00               	movlw	0
  5292  000A2E  22DD               	addwfc	postdec2,f,c
  5293                           
  5294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5295  000A30  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5296  000A34  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5297  000A38  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5298  000A3C  0E02               	movlw	2
  5299  000A3E  26DE               	addwf	postinc2,f,c
  5300  000A40  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5301  000A44  0E00               	movlw	0
  5302  000A46  22DD               	addwfc	postdec2,f,c
  5303  000A48  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5304  000A4C  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5305  000A50  50DF               	movf	indf2,w,c
  5306  000A52  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5307  000A54  51D9               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5308  000A56  0101               	movlb	1	; () banked
  5309  000A58  6FDA               	movwf	vfpfcnvrt@llu& (0+255),b
  5310  000A5A  6BDB               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5311  000A5C  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5312  000A5E  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5313  000A60  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5314  000A62  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5315  000A64  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5316  000A66  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5317  000A68                     l9429:
  5318                           
  5319                           ; BSR set to: 1
  5320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
  5321  000A68  C0D1  F07B         	movff	vfpfcnvrt@fp,otoa@fp
  5322  000A6C  C0D2  F07C         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5323  000A70  C1DA  F07D         	movff	vfpfcnvrt@llu,otoa@d
  5324  000A74  C1DB  F07E         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5325  000A78  C1DC  F07F         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5326  000A7C  C1DD  F080         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5327  000A80  C1DE  F081         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5328  000A84  C1DF  F082         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5329  000A88  C1E0  F083         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5330  000A8C  C1E1  F084         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5331  000A90  EC31  F020         	call	_otoa	;wreg free
  5332  000A94  C07B  F0D1         	movff	?_otoa,?_vfpfcnvrt
  5333  000A98  C07C  F0D2         	movff	?_otoa+1,?_vfpfcnvrt+1
  5334  000A9C  EFEF  F00A         	goto	l838
  5335  000AA0                     l9433:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5339  000AA0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5340  000AA4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5341  000AA8  CFDE F060          	movff	postinc2,strncmp@_l
  5342  000AAC  CFDD F061          	movff	postdec2,strncmp@_l+1
  5343  000AB0  0EDC               	movlw	low (STR_45+1)
  5344  000AB2  6F62               	movwf	strncmp@_r& (0+255),b
  5345  000AB4  0EFF               	movlw	high (STR_45+1)
  5346  000AB6  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5347  000AB8  0E00               	movlw	0
  5348  000ABA  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5349  000ABC  0E02               	movlw	2
  5350  000ABE  6F64               	movwf	strncmp@n& (0+255),b
  5351  000AC0  ECEE  F027         	call	_strncmp	;wreg free
  5352  000AC4  0100               	movlb	0	; () banked
  5353  000AC6  5160               	movf	?_strncmp& (0+255),w,b
  5354  000AC8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5355  000ACA  A4D8               	btfss	status,2,c
  5356  000ACC  EF6A  F005         	goto	u12391
  5357  000AD0  EF6C  F005         	goto	u12390
  5358  000AD4                     u12391:
  5359  000AD4  EF95  F005         	goto	l9441
  5360  000AD8                     u12390:
  5361  000AD8                     
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5364  000AD8  0E02               	movlw	2
  5365  000ADA  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5366  000ADE  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5367  000AE2  26DE               	addwf	postinc2,f,c
  5368  000AE4  0E00               	movlw	0
  5369  000AE6  22DD               	addwfc	postdec2,f,c
  5370                           
  5371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5372  000AE8  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5373  000AEC  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5374  000AF0  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5375  000AF4  0E02               	movlw	2
  5376  000AF6  26DE               	addwf	postinc2,f,c
  5377  000AF8  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5378  000AFC  0E00               	movlw	0
  5379  000AFE  22DD               	addwfc	postdec2,f,c
  5380  000B00  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5381  000B04  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5382  000B08  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  5383  000B0C  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  5384  000B10  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5385  000B14  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5386  000B18  0101               	movlb	1	; () banked
  5387  000B1A  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5388  000B1C  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5389  000B1E  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5390  000B20  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5391  000B22  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5392  000B24  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5393  000B26  EF34  F005         	goto	l9429
  5394  000B2A                     l9441:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
  5398  000B2A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5399  000B2E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5400  000B32  CFDE FFF6          	movff	postinc2,tblptrl
  5401  000B36  CFDD FFF7          	movff	postdec2,tblptrh
  5402  000B3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5403  000B3A  6AF8               	clrf	tblptru,c
  5404  000B3C                     	endif
  5405  000B3C                     	if	0	;tblptru may be non-zero
  5406  000B3C                     	endif
  5407  000B3C  0008               	tblrd		*
  5408  000B3E  50F5               	movf	tablat,w,c
  5409  000B40  0A6F               	xorlw	111
  5410  000B42  A4D8               	btfss	status,2,c
  5411  000B44  EFA6  F005         	goto	u12401
  5412  000B48  EFA8  F005         	goto	u12400
  5413  000B4C                     u12401:
  5414  000B4C  EFD0  F005         	goto	l9449
  5415  000B50                     u12400:
  5416  000B50                     
  5417                           ; BSR set to: 0
  5418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
  5419  000B50  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5420  000B54  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5421  000B58  2ADE               	incf	postinc2,f,c
  5422  000B5A  0E00               	movlw	0
  5423  000B5C  22DD               	addwfc	postdec2,f,c
  5424                           
  5425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
  5426  000B5E  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5427  000B62  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5428  000B66  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5429  000B6A  0E02               	movlw	2
  5430  000B6C  26DE               	addwf	postinc2,f,c
  5431  000B6E  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5432  000B72  0E00               	movlw	0
  5433  000B74  22DD               	addwfc	postdec2,f,c
  5434  000B76  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5435  000B7A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5436  000B7E  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  5437  000B82  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  5438  000B86  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5439  000B8A  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5440  000B8E  0101               	movlb	1	; () banked
  5441  000B90  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5442  000B92  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5443  000B94  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5444  000B96  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5445  000B98  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5446  000B9A  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5447  000B9C  EF34  F005         	goto	l9429
  5448  000BA0                     l9449:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5452  000BA0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5453  000BA4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5454  000BA8  CFDE F060          	movff	postinc2,strncmp@_l
  5455  000BAC  CFDD F061          	movff	postdec2,strncmp@_l+1
  5456  000BB0  0EF6               	movlw	low STR_55
  5457  000BB2  6F62               	movwf	strncmp@_r& (0+255),b
  5458  000BB4  0EFF               	movlw	high STR_55
  5459  000BB6  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5460  000BB8  0E00               	movlw	0
  5461  000BBA  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5462  000BBC  0E02               	movlw	2
  5463  000BBE  6F64               	movwf	strncmp@n& (0+255),b
  5464  000BC0  ECEE  F027         	call	_strncmp	;wreg free
  5465  000BC4  0100               	movlb	0	; () banked
  5466  000BC6  5160               	movf	?_strncmp& (0+255),w,b
  5467  000BC8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5468  000BCA  A4D8               	btfss	status,2,c
  5469  000BCC  EFEA  F005         	goto	u12411
  5470  000BD0  EFEC  F005         	goto	u12410
  5471  000BD4                     u12411:
  5472  000BD4  EF15  F006         	goto	l9457
  5473  000BD8                     u12410:
  5474  000BD8                     
  5475                           ; BSR set to: 0
  5476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5477  000BD8  0E02               	movlw	2
  5478  000BDA  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5479  000BDE  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5480  000BE2  26DE               	addwf	postinc2,f,c
  5481  000BE4  0E00               	movlw	0
  5482  000BE6  22DD               	addwfc	postdec2,f,c
  5483                           
  5484                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5485  000BE8  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5486  000BEC  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5487  000BF0  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5488  000BF4  0E02               	movlw	2
  5489  000BF6  26DE               	addwf	postinc2,f,c
  5490  000BF8  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5491  000BFC  0E00               	movlw	0
  5492  000BFE  22DD               	addwfc	postdec2,f,c
  5493  000C00  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5494  000C04  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5495  000C08  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  5496  000C0C  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  5497  000C10  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5498  000C14  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5499  000C18  0101               	movlb	1	; () banked
  5500  000C1A  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5501  000C1C  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5502  000C1E  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5503  000C20  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5504  000C22  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5505  000C24  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5506  000C26  EF34  F005         	goto	l9429
  5507  000C2A                     l9457:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5511  000C2A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5512  000C2E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5513  000C32  CFDE F060          	movff	postinc2,strncmp@_l
  5514  000C36  CFDD F061          	movff	postdec2,strncmp@_l+1
  5515  000C3A  0ED7               	movlw	low STR_60
  5516  000C3C  6F62               	movwf	strncmp@_r& (0+255),b
  5517  000C3E  0EFF               	movlw	high STR_60
  5518  000C40  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5519  000C42  0E00               	movlw	0
  5520  000C44  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5521  000C46  0E03               	movlw	3
  5522  000C48  6F64               	movwf	strncmp@n& (0+255),b
  5523  000C4A  ECEE  F027         	call	_strncmp	;wreg free
  5524  000C4E  0100               	movlb	0	; () banked
  5525  000C50  5160               	movf	?_strncmp& (0+255),w,b
  5526  000C52  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5527  000C54  A4D8               	btfss	status,2,c
  5528  000C56  EF2F  F006         	goto	u12421
  5529  000C5A  EF31  F006         	goto	u12420
  5530  000C5E                     u12421:
  5531  000C5E  EF59  F006         	goto	l9467
  5532  000C62                     u12420:
  5533  000C62                     
  5534                           ; BSR set to: 0
  5535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5536  000C62  0E03               	movlw	3
  5537  000C64  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5538  000C68  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5539  000C6C  26DE               	addwf	postinc2,f,c
  5540  000C6E  0E00               	movlw	0
  5541  000C70  22DD               	addwfc	postdec2,f,c
  5542                           
  5543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5544  000C72  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5545  000C76  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5546  000C7A  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5547  000C7E  0E02               	movlw	2
  5548  000C80  26DE               	addwf	postinc2,f,c
  5549  000C82  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5550  000C86  0E00               	movlw	0
  5551  000C88  22DD               	addwfc	postdec2,f,c
  5552  000C8A  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5553  000C8E  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5554  000C92  CFDE F1D7          	movff	postinc2,vfpfcnvrt@vp
  5555  000C96  CFDD F1D8          	movff	postdec2,vfpfcnvrt@vp+1
  5556  000C9A                     
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
  5559  000C9A  C1D7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5560  000C9E  C1D8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5561  000CA2  C035  FFDF         	movff	_nout,indf2
  5562  000CA6                     l9463:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
  5566  000CA6  0E00               	movlw	0
  5567  000CA8  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  5568  000CAA  0E00               	movlw	0
  5569  000CAC  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  5570  000CAE  EFEF  F00A         	goto	l838
  5571  000CB2                     l9467:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5575  000CB2  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5576  000CB6  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5577  000CBA  CFDE F060          	movff	postinc2,strncmp@_l
  5578  000CBE  CFDD F061          	movff	postdec2,strncmp@_l+1
  5579  000CC2  0ED8               	movlw	low (STR_60+1)
  5580  000CC4  6F62               	movwf	strncmp@_r& (0+255),b
  5581  000CC6  0EFF               	movlw	high (STR_60+1)
  5582  000CC8  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5583  000CCA  0E00               	movlw	0
  5584  000CCC  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5585  000CCE  0E02               	movlw	2
  5586  000CD0  6F64               	movwf	strncmp@n& (0+255),b
  5587  000CD2  ECEE  F027         	call	_strncmp	;wreg free
  5588  000CD6  0100               	movlb	0	; () banked
  5589  000CD8  5160               	movf	?_strncmp& (0+255),w,b
  5590  000CDA  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5591  000CDC  A4D8               	btfss	status,2,c
  5592  000CDE  EF73  F006         	goto	u12431
  5593  000CE2  EF75  F006         	goto	u12430
  5594  000CE6                     u12431:
  5595  000CE6  EF9B  F006         	goto	l9477
  5596  000CEA                     u12430:
  5597  000CEA                     
  5598                           ; BSR set to: 0
  5599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5600  000CEA  0E02               	movlw	2
  5601  000CEC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5602  000CF0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5603  000CF4  26DE               	addwf	postinc2,f,c
  5604  000CF6  0E00               	movlw	0
  5605  000CF8  22DD               	addwfc	postdec2,f,c
  5606                           
  5607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5608  000CFA  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5609  000CFE  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5610  000D02  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5611  000D06  0E02               	movlw	2
  5612  000D08  26DE               	addwf	postinc2,f,c
  5613  000D0A  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5614  000D0E  0E00               	movlw	0
  5615  000D10  22DD               	addwfc	postdec2,f,c
  5616  000D12  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5617  000D16  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5618  000D1A  CFDE F1D7          	movff	postinc2,vfpfcnvrt@vp
  5619  000D1E  CFDD F1D8          	movff	postdec2,vfpfcnvrt@vp+1
  5620  000D22                     
  5621                           ; BSR set to: 0
  5622                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
  5623  000D22  C1D7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5624  000D26  C1D8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5625  000D2A  C035  FFDE         	movff	_nout,postinc2
  5626  000D2E  C036  FFDD         	movff	_nout+1,postdec2
  5627  000D32  EF53  F006         	goto	l9463
  5628  000D36                     l9477:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
  5632  000D36  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5633  000D3A  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5634  000D3E  CFDE FFF6          	movff	postinc2,tblptrl
  5635  000D42  CFDD FFF7          	movff	postdec2,tblptrh
  5636  000D46                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5637  000D46  6AF8               	clrf	tblptru,c
  5638  000D48                     	endif
  5639  000D48                     	if	0	;tblptru may be non-zero
  5640  000D48                     	endif
  5641  000D48  0008               	tblrd		*
  5642  000D4A  50F5               	movf	tablat,w,c
  5643  000D4C  0A6E               	xorlw	110
  5644  000D4E  A4D8               	btfss	status,2,c
  5645  000D50  EFAC  F006         	goto	u12441
  5646  000D54  EFAE  F006         	goto	u12440
  5647  000D58                     u12441:
  5648  000D58  EFD3  F006         	goto	l9487
  5649  000D5C                     u12440:
  5650  000D5C                     
  5651                           ; BSR set to: 0
  5652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
  5653  000D5C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5654  000D60  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5655  000D64  2ADE               	incf	postinc2,f,c
  5656  000D66  0E00               	movlw	0
  5657  000D68  22DD               	addwfc	postdec2,f,c
  5658                           
  5659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5660  000D6A  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5661  000D6E  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5662  000D72  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5663  000D76  0E02               	movlw	2
  5664  000D78  26DE               	addwf	postinc2,f,c
  5665  000D7A  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5666  000D7E  0E00               	movlw	0
  5667  000D80  22DD               	addwfc	postdec2,f,c
  5668  000D82  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5669  000D86  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5670  000D8A  CFDE F1D7          	movff	postinc2,vfpfcnvrt@vp
  5671  000D8E  CFDD F1D8          	movff	postdec2,vfpfcnvrt@vp+1
  5672  000D92                     
  5673                           ; BSR set to: 0
  5674                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
  5675  000D92  C1D7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5676  000D96  C1D8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5677  000D9A  C035  FFDE         	movff	_nout,postinc2
  5678  000D9E  C036  FFDD         	movff	_nout+1,postdec2
  5679  000DA2  EF53  F006         	goto	l9463
  5680  000DA6                     l9487:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5684  000DA6  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5685  000DAA  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5686  000DAE  CFDE F060          	movff	postinc2,strncmp@_l
  5687  000DB2  CFDD F061          	movff	postdec2,strncmp@_l+1
  5688  000DB6  0EF3               	movlw	low STR_70
  5689  000DB8  6F62               	movwf	strncmp@_r& (0+255),b
  5690  000DBA  0EFF               	movlw	high STR_70
  5691  000DBC  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5692  000DBE  0E00               	movlw	0
  5693  000DC0  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5694  000DC2  0E02               	movlw	2
  5695  000DC4  6F64               	movwf	strncmp@n& (0+255),b
  5696  000DC6  ECEE  F027         	call	_strncmp	;wreg free
  5697  000DCA  0100               	movlb	0	; () banked
  5698  000DCC  5160               	movf	?_strncmp& (0+255),w,b
  5699  000DCE  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5700  000DD0  A4D8               	btfss	status,2,c
  5701  000DD2  EFED  F006         	goto	u12451
  5702  000DD6  EFEF  F006         	goto	u12450
  5703  000DDA                     u12451:
  5704  000DDA  EF15  F007         	goto	l9497
  5705  000DDE                     u12450:
  5706  000DDE                     
  5707                           ; BSR set to: 0
  5708                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5709  000DDE  0E02               	movlw	2
  5710  000DE0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5711  000DE4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5712  000DE8  26DE               	addwf	postinc2,f,c
  5713  000DEA  0E00               	movlw	0
  5714  000DEC  22DD               	addwfc	postdec2,f,c
  5715                           
  5716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5717  000DEE  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5718  000DF2  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5719  000DF6  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5720  000DFA  0E02               	movlw	2
  5721  000DFC  26DE               	addwf	postinc2,f,c
  5722  000DFE  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5723  000E02  0E00               	movlw	0
  5724  000E04  22DD               	addwfc	postdec2,f,c
  5725  000E06  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5726  000E0A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5727  000E0E  CFDE F1D7          	movff	postinc2,vfpfcnvrt@vp
  5728  000E12  CFDD F1D8          	movff	postdec2,vfpfcnvrt@vp+1
  5729  000E16                     
  5730                           ; BSR set to: 0
  5731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
  5732  000E16  C1D7  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  5733  000E1A  C1D8  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  5734  000E1E  C035  FFDE         	movff	_nout,postinc2
  5735  000E22  C036  FFDD         	movff	_nout+1,postdec2
  5736  000E26  EF53  F006         	goto	l9463
  5737  000E2A                     l9497:
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
  5741  000E2A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5742  000E2E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5743  000E32  CFDE FFF6          	movff	postinc2,tblptrl
  5744  000E36  CFDD FFF7          	movff	postdec2,tblptrh
  5745  000E3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5746  000E3A  6AF8               	clrf	tblptru,c
  5747  000E3C                     	endif
  5748  000E3C                     	if	0	;tblptru may be non-zero
  5749  000E3C                     	endif
  5750  000E3C  0008               	tblrd		*
  5751  000E3E  50F5               	movf	tablat,w,c
  5752  000E40  0A70               	xorlw	112
  5753  000E42  A4D8               	btfss	status,2,c
  5754  000E44  EF26  F007         	goto	u12461
  5755  000E48  EF28  F007         	goto	u12460
  5756  000E4C                     u12461:
  5757  000E4C  EF6D  F007         	goto	l9505
  5758  000E50                     u12460:
  5759  000E50                     
  5760                           ; BSR set to: 0
  5761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
  5762  000E50  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5763  000E54  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5764  000E58  2ADE               	incf	postinc2,f,c
  5765  000E5A  0E00               	movlw	0
  5766  000E5C  22DD               	addwfc	postdec2,f,c
  5767                           
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
  5769  000E5E  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5770  000E62  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5771  000E66  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5772  000E6A  0E02               	movlw	2
  5773  000E6C  26DE               	addwf	postinc2,f,c
  5774  000E6E  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5775  000E72  0E00               	movlw	0
  5776  000E74  22DD               	addwfc	postdec2,f,c
  5777  000E76  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5778  000E7A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5779  000E7E  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  5780  000E82  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  5781  000E86  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5782  000E8A  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5783  000E8E  0101               	movlb	1	; () banked
  5784  000E90  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5785  000E92  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5786  000E94  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5787  000E96  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5788  000E98  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5789  000E9A  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5790  000E9C                     
  5791                           ; BSR set to: 1
  5792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
  5793  000E9C  C0D1  F07B         	movff	vfpfcnvrt@fp,xtoa@fp
  5794  000EA0  C0D2  F07C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5795  000EA4  C1DA  F07D         	movff	vfpfcnvrt@llu,xtoa@d
  5796  000EA8  C1DB  F07E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5797  000EAC  C1DC  F07F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5798  000EB0  C1DD  F080         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5799  000EB4  C1DE  F081         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5800  000EB8  C1DF  F082         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5801  000EBC  C1E0  F083         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5802  000EC0  C1E1  F084         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5803  000EC4  0E78               	movlw	120
  5804  000EC6  0100               	movlb	0	; () banked
  5805  000EC8  6F85               	movwf	xtoa@x& (0+255),b
  5806  000ECA  ECB6  F01C         	call	_xtoa	;wreg free
  5807  000ECE  C07B  F0D1         	movff	?_xtoa,?_vfpfcnvrt
  5808  000ED2  C07C  F0D2         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5809  000ED6  EFEF  F00A         	goto	l838
  5810  000EDA                     l9505:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  5814  000EDA  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5815  000EDE  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5816  000EE2  CFDE FFF6          	movff	postinc2,tblptrl
  5817  000EE6  CFDD FFF7          	movff	postdec2,tblptrh
  5818  000EEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5819  000EEA  6AF8               	clrf	tblptru,c
  5820  000EEC                     	endif
  5821  000EEC                     	if	0	;tblptru may be non-zero
  5822  000EEC                     	endif
  5823  000EEC  0008               	tblrd		*
  5824  000EEE  50F5               	movf	tablat,w,c
  5825  000EF0  0A73               	xorlw	115
  5826  000EF2  A4D8               	btfss	status,2,c
  5827  000EF4  EF7E  F007         	goto	u12471
  5828  000EF8  EF80  F007         	goto	u12470
  5829  000EFC                     u12471:
  5830  000EFC  EFAB  F007         	goto	l9513
  5831  000F00                     u12470:
  5832  000F00                     
  5833                           ; BSR set to: 0
  5834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  5835  000F00  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5836  000F04  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5837  000F08  2ADE               	incf	postinc2,f,c
  5838  000F0A  0E00               	movlw	0
  5839  000F0C  22DD               	addwfc	postdec2,f,c
  5840                           
  5841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5842  000F0E  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5843  000F12  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5844  000F16  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5845  000F1A  0E02               	movlw	2
  5846  000F1C  26DE               	addwf	postinc2,f,c
  5847  000F1E  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5848  000F22  0E00               	movlw	0
  5849  000F24  22DD               	addwfc	postdec2,f,c
  5850  000F26  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5851  000F2A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5852  000F2E  CFDE F1BE          	movff	postinc2,vfpfcnvrt@cp
  5853  000F32  CFDD F1BF          	movff	postdec2,vfpfcnvrt@cp+1
  5854  000F36                     
  5855                           ; BSR set to: 0
  5856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  5857  000F36  C0D1  F069         	movff	vfpfcnvrt@fp,stoa@fp
  5858  000F3A  C0D2  F06A         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5859  000F3E  C1BE  F06B         	movff	vfpfcnvrt@cp,stoa@s
  5860  000F42  C1BF  F06C         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5861  000F46  EC9D  F023         	call	_stoa	;wreg free
  5862  000F4A  C069  F0D1         	movff	?_stoa,?_vfpfcnvrt
  5863  000F4E  C06A  F0D2         	movff	?_stoa+1,?_vfpfcnvrt+1
  5864  000F52  EFEF  F00A         	goto	l838
  5865  000F56                     l9513:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5869  000F56  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5870  000F5A  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5871  000F5E  CFDE F060          	movff	postinc2,strncmp@_l
  5872  000F62  CFDD F061          	movff	postdec2,strncmp@_l+1
  5873  000F66  0EDF               	movlw	low STR_75
  5874  000F68  6F62               	movwf	strncmp@_r& (0+255),b
  5875  000F6A  0EFF               	movlw	high STR_75
  5876  000F6C  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5877  000F6E  0E00               	movlw	0
  5878  000F70  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5879  000F72  0E03               	movlw	3
  5880  000F74  6F64               	movwf	strncmp@n& (0+255),b
  5881  000F76  ECEE  F027         	call	_strncmp	;wreg free
  5882  000F7A  0100               	movlb	0	; () banked
  5883  000F7C  5160               	movf	?_strncmp& (0+255),w,b
  5884  000F7E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5885  000F80  A4D8               	btfss	status,2,c
  5886  000F82  EFC5  F007         	goto	u12481
  5887  000F86  EFC7  F007         	goto	u12480
  5888  000F8A                     u12481:
  5889  000F8A  EF07  F008         	goto	l9521
  5890  000F8E                     u12480:
  5891  000F8E                     
  5892                           ; BSR set to: 0
  5893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5894  000F8E  0E03               	movlw	3
  5895  000F90  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5896  000F94  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5897  000F98  26DE               	addwf	postinc2,f,c
  5898  000F9A  0E00               	movlw	0
  5899  000F9C  22DD               	addwfc	postdec2,f,c
  5900                           
  5901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5902  000F9E  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5903  000FA2  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5904  000FA6  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5905  000FAA  0E02               	movlw	2
  5906  000FAC  26DE               	addwf	postinc2,f,c
  5907  000FAE  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5908  000FB2  0E00               	movlw	0
  5909  000FB4  22DD               	addwfc	postdec2,f,c
  5910  000FB6  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5911  000FBA  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5912  000FBE  50DF               	movf	indf2,w,c
  5913  000FC0  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5914  000FC2  51D9               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5915  000FC4  0101               	movlb	1	; () banked
  5916  000FC6  6FDA               	movwf	vfpfcnvrt@llu& (0+255),b
  5917  000FC8  6BDB               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  5918  000FCA  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5919  000FCC  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5920  000FCE  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5921  000FD0  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5922  000FD2  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5923  000FD4  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  5924  000FD6                     l9517:
  5925                           
  5926                           ; BSR set to: 1
  5927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
  5928  000FD6  C0D1  F07B         	movff	vfpfcnvrt@fp,utoa@fp
  5929  000FDA  C0D2  F07C         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5930  000FDE  C1DA  F07D         	movff	vfpfcnvrt@llu,utoa@d
  5931  000FE2  C1DB  F07E         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5932  000FE6  C1DC  F07F         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5933  000FEA  C1DD  F080         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5934  000FEE  C1DE  F081         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5935  000FF2  C1DF  F082         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5936  000FF6  C1E0  F083         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5937  000FFA  C1E1  F084         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5938  000FFE  EC2E  F01F         	call	_utoa	;wreg free
  5939  001002  C07B  F0D1         	movff	?_utoa,?_vfpfcnvrt
  5940  001006  C07C  F0D2         	movff	?_utoa+1,?_vfpfcnvrt+1
  5941  00100A  EFEF  F00A         	goto	l838
  5942  00100E                     l9521:
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5946  00100E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5947  001012  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5948  001016  CFDE F060          	movff	postinc2,strncmp@_l
  5949  00101A  CFDD F061          	movff	postdec2,strncmp@_l+1
  5950  00101E  0EE0               	movlw	low (STR_75+1)
  5951  001020  6F62               	movwf	strncmp@_r& (0+255),b
  5952  001022  0EFF               	movlw	high (STR_75+1)
  5953  001024  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  5954  001026  0E00               	movlw	0
  5955  001028  6F65               	movwf	(strncmp@n+1)& (0+255),b
  5956  00102A  0E02               	movlw	2
  5957  00102C  6F64               	movwf	strncmp@n& (0+255),b
  5958  00102E  ECEE  F027         	call	_strncmp	;wreg free
  5959  001032  0100               	movlb	0	; () banked
  5960  001034  5160               	movf	?_strncmp& (0+255),w,b
  5961  001036  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  5962  001038  A4D8               	btfss	status,2,c
  5963  00103A  EF21  F008         	goto	u12491
  5964  00103E  EF23  F008         	goto	u12490
  5965  001042                     u12491:
  5966  001042  EF4C  F008         	goto	l9529
  5967  001046                     u12490:
  5968  001046                     
  5969                           ; BSR set to: 0
  5970                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5971  001046  0E02               	movlw	2
  5972  001048  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5973  00104C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5974  001050  26DE               	addwf	postinc2,f,c
  5975  001052  0E00               	movlw	0
  5976  001054  22DD               	addwfc	postdec2,f,c
  5977                           
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  5979  001056  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5980  00105A  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5981  00105E  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  5982  001062  0E02               	movlw	2
  5983  001064  26DE               	addwf	postinc2,f,c
  5984  001066  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  5985  00106A  0E00               	movlw	0
  5986  00106C  22DD               	addwfc	postdec2,f,c
  5987  00106E  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5988  001072  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5989  001076  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  5990  00107A  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  5991  00107E  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5992  001082  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5993  001086  0101               	movlb	1	; () banked
  5994  001088  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  5995  00108A  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  5996  00108C  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  5997  00108E  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  5998  001090  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  5999  001092  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6000  001094  EFEB  F007         	goto	l9517
  6001  001098                     l9529:
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  6005  001098  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6006  00109C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6007  0010A0  CFDE FFF6          	movff	postinc2,tblptrl
  6008  0010A4  CFDD FFF7          	movff	postdec2,tblptrh
  6009  0010A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6010  0010A8  6AF8               	clrf	tblptru,c
  6011  0010AA                     	endif
  6012  0010AA                     	if	0	;tblptru may be non-zero
  6013  0010AA                     	endif
  6014  0010AA  0008               	tblrd		*
  6015  0010AC  50F5               	movf	tablat,w,c
  6016  0010AE  0A75               	xorlw	117
  6017  0010B0  A4D8               	btfss	status,2,c
  6018  0010B2  EF5D  F008         	goto	u12501
  6019  0010B6  EF5F  F008         	goto	u12500
  6020  0010BA                     u12501:
  6021  0010BA  EF87  F008         	goto	l9537
  6022  0010BE                     u12500:
  6023  0010BE                     
  6024                           ; BSR set to: 0
  6025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  6026  0010BE  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6027  0010C2  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6028  0010C6  2ADE               	incf	postinc2,f,c
  6029  0010C8  0E00               	movlw	0
  6030  0010CA  22DD               	addwfc	postdec2,f,c
  6031                           
  6032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6033  0010CC  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6034  0010D0  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6035  0010D4  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  6036  0010D8  0E02               	movlw	2
  6037  0010DA  26DE               	addwf	postinc2,f,c
  6038  0010DC  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  6039  0010E0  0E00               	movlw	0
  6040  0010E2  22DD               	addwfc	postdec2,f,c
  6041  0010E4  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6042  0010E8  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6043  0010EC  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  6044  0010F0  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  6045  0010F4  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6046  0010F8  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6047  0010FC  0101               	movlb	1	; () banked
  6048  0010FE  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6049  001100  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6050  001102  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6051  001104  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6052  001106  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6053  001108  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6054  00110A  EFEB  F007         	goto	l9517
  6055  00110E                     l9537:
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  6059  00110E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6060  001112  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6061  001116  CFDE F060          	movff	postinc2,strncmp@_l
  6062  00111A  CFDD F061          	movff	postdec2,strncmp@_l+1
  6063  00111E  0EF9               	movlw	low STR_85
  6064  001120  6F62               	movwf	strncmp@_r& (0+255),b
  6065  001122  0EFF               	movlw	high STR_85
  6066  001124  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6067  001126  0E00               	movlw	0
  6068  001128  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6069  00112A  0E02               	movlw	2
  6070  00112C  6F64               	movwf	strncmp@n& (0+255),b
  6071  00112E  ECEE  F027         	call	_strncmp	;wreg free
  6072  001132  0100               	movlb	0	; () banked
  6073  001134  5160               	movf	?_strncmp& (0+255),w,b
  6074  001136  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6075  001138  A4D8               	btfss	status,2,c
  6076  00113A  EFA1  F008         	goto	u12511
  6077  00113E  EFA3  F008         	goto	u12510
  6078  001142                     u12511:
  6079  001142  EFCC  F008         	goto	l9545
  6080  001146                     u12510:
  6081  001146                     
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6084  001146  0E02               	movlw	2
  6085  001148  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6086  00114C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6087  001150  26DE               	addwf	postinc2,f,c
  6088  001152  0E00               	movlw	0
  6089  001154  22DD               	addwfc	postdec2,f,c
  6090                           
  6091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6092  001156  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6093  00115A  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6094  00115E  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  6095  001162  0E02               	movlw	2
  6096  001164  26DE               	addwf	postinc2,f,c
  6097  001166  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  6098  00116A  0E00               	movlw	0
  6099  00116C  22DD               	addwfc	postdec2,f,c
  6100  00116E  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6101  001172  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6102  001176  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  6103  00117A  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  6104  00117E  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6105  001182  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6106  001186  0101               	movlb	1	; () banked
  6107  001188  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6108  00118A  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6109  00118C  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6110  00118E  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6111  001190  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6112  001192  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6113  001194  EFEB  F007         	goto	l9517
  6114  001198                     l9545:
  6115                           
  6116                           ; BSR set to: 0
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6118  001198  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6119  00119C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6120  0011A0  CFDE F060          	movff	postinc2,strncmp@_l
  6121  0011A4  CFDD F061          	movff	postdec2,strncmp@_l+1
  6122  0011A8  0EE3               	movlw	low STR_90
  6123  0011AA  6F62               	movwf	strncmp@_r& (0+255),b
  6124  0011AC  0EFF               	movlw	high STR_90
  6125  0011AE  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6126  0011B0  0E00               	movlw	0
  6127  0011B2  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6128  0011B4  0E03               	movlw	3
  6129  0011B6  6F64               	movwf	strncmp@n& (0+255),b
  6130  0011B8  ECEE  F027         	call	_strncmp	;wreg free
  6131  0011BC  0100               	movlb	0	; () banked
  6132  0011BE  5160               	movf	?_strncmp& (0+255),w,b
  6133  0011C0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6134  0011C2  B4D8               	btfsc	status,2,c
  6135  0011C4  EFE6  F008         	goto	u12521
  6136  0011C8  EFE8  F008         	goto	u12520
  6137  0011CC                     u12521:
  6138  0011CC  EF04  F009         	goto	l9549
  6139  0011D0                     u12520:
  6140  0011D0                     
  6141                           ; BSR set to: 0
  6142  0011D0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6143  0011D4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6144  0011D8  CFDE F060          	movff	postinc2,strncmp@_l
  6145  0011DC  CFDD F061          	movff	postdec2,strncmp@_l+1
  6146  0011E0  0EC3               	movlw	low STR_94
  6147  0011E2  6F62               	movwf	strncmp@_r& (0+255),b
  6148  0011E4  0EFF               	movlw	high STR_94
  6149  0011E6  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6150  0011E8  0E00               	movlw	0
  6151  0011EA  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6152  0011EC  0E03               	movlw	3
  6153  0011EE  6F64               	movwf	strncmp@n& (0+255),b
  6154  0011F0  ECEE  F027         	call	_strncmp	;wreg free
  6155  0011F4  0100               	movlb	0	; () banked
  6156  0011F6  5160               	movf	?_strncmp& (0+255),w,b
  6157  0011F8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6158  0011FA  A4D8               	btfss	status,2,c
  6159  0011FC  EF02  F009         	goto	u12531
  6160  001200  EF04  F009         	goto	u12530
  6161  001204                     u12531:
  6162  001204  EF5A  F009         	goto	l9559
  6163  001208                     u12530:
  6164  001208                     l9549:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
  6168  001208  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6169  00120C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6170  001210  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  6171  001214  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  6172  001218  0E02               	movlw	2
  6173  00121A  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  6174  00121C  0E00               	movlw	0
  6175  00121E  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6176  001220  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6177  001224  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6178  001228                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6179  001228  6AF8               	clrf	tblptru,c
  6180  00122A                     	endif
  6181  00122A                     	if	0	;tblptru may be non-zero
  6182  00122A                     	endif
  6183  00122A  0008               	tblrd		*
  6184  00122C  CFF5 F1D9          	movff	tablat,vfpfcnvrt@c
  6185  001230                     
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6188  001230  0E03               	movlw	3
  6189  001232  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6190  001236  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6191  00123A  26DE               	addwf	postinc2,f,c
  6192  00123C  0E00               	movlw	0
  6193  00123E  22DD               	addwfc	postdec2,f,c
  6194  001240                     
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6197  001240  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6198  001244  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6199  001248  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  6200  00124C  0E02               	movlw	2
  6201  00124E  26DE               	addwf	postinc2,f,c
  6202  001250  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  6203  001254  0E00               	movlw	0
  6204  001256  22DD               	addwfc	postdec2,f,c
  6205  001258  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6206  00125C  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6207  001260  50DF               	movf	indf2,w,c
  6208  001262  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6209  001264  51D9               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  6210  001266  0101               	movlb	1	; () banked
  6211  001268  6FDA               	movwf	vfpfcnvrt@llu& (0+255),b
  6212  00126A  6BDB               	clrf	(vfpfcnvrt@llu+1)& (0+255),b
  6213  00126C  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6214  00126E  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6215  001270  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6216  001272  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6217  001274  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6218  001276  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6219  001278                     l9555:
  6220                           
  6221                           ; BSR set to: 1
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
  6223  001278  C0D1  F07B         	movff	vfpfcnvrt@fp,xtoa@fp
  6224  00127C  C0D2  F07C         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6225  001280  C1DA  F07D         	movff	vfpfcnvrt@llu,xtoa@d
  6226  001284  C1DB  F07E         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6227  001288  C1DC  F07F         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6228  00128C  C1DD  F080         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6229  001290  C1DE  F081         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6230  001294  C1DF  F082         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6231  001298  C1E0  F083         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6232  00129C  C1E1  F084         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6233  0012A0  C1D9  F085         	movff	vfpfcnvrt@c,xtoa@x
  6234  0012A4  ECB6  F01C         	call	_xtoa	;wreg free
  6235  0012A8  C07B  F0D1         	movff	?_xtoa,?_vfpfcnvrt
  6236  0012AC  C07C  F0D2         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6237  0012B0  EFEF  F00A         	goto	l838
  6238  0012B4                     l9559:
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
  6242  0012B4  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6243  0012B8  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6244  0012BC  CFDE F060          	movff	postinc2,strncmp@_l
  6245  0012C0  CFDD F061          	movff	postdec2,strncmp@_l+1
  6246  0012C4  0EE4               	movlw	low (STR_90+1)
  6247  0012C6  6F62               	movwf	strncmp@_r& (0+255),b
  6248  0012C8  0EFF               	movlw	high (STR_90+1)
  6249  0012CA  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6250  0012CC  0E00               	movlw	0
  6251  0012CE  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6252  0012D0  0E02               	movlw	2
  6253  0012D2  6F64               	movwf	strncmp@n& (0+255),b
  6254  0012D4  ECEE  F027         	call	_strncmp	;wreg free
  6255  0012D8  0100               	movlb	0	; () banked
  6256  0012DA  5160               	movf	?_strncmp& (0+255),w,b
  6257  0012DC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6258  0012DE  B4D8               	btfsc	status,2,c
  6259  0012E0  EF74  F009         	goto	u12541
  6260  0012E4  EF76  F009         	goto	u12540
  6261  0012E8                     u12541:
  6262  0012E8  EF92  F009         	goto	l9563
  6263  0012EC                     u12540:
  6264  0012EC                     
  6265                           ; BSR set to: 0
  6266  0012EC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6267  0012F0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6268  0012F4  CFDE F060          	movff	postinc2,strncmp@_l
  6269  0012F8  CFDD F061          	movff	postdec2,strncmp@_l+1
  6270  0012FC  0EC4               	movlw	low (STR_94+1)
  6271  0012FE  6F62               	movwf	strncmp@_r& (0+255),b
  6272  001300  0EFF               	movlw	high (STR_94+1)
  6273  001302  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6274  001304  0E00               	movlw	0
  6275  001306  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6276  001308  0E02               	movlw	2
  6277  00130A  6F64               	movwf	strncmp@n& (0+255),b
  6278  00130C  ECEE  F027         	call	_strncmp	;wreg free
  6279  001310  0100               	movlb	0	; () banked
  6280  001312  5160               	movf	?_strncmp& (0+255),w,b
  6281  001314  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6282  001316  A4D8               	btfss	status,2,c
  6283  001318  EF90  F009         	goto	u12551
  6284  00131C  EF92  F009         	goto	u12550
  6285  001320                     u12551:
  6286  001320  EFCF  F009         	goto	l9573
  6287  001324                     u12550:
  6288  001324                     l9563:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
  6292  001324  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6293  001328  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6294  00132C  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  6295  001330  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  6296  001334  0E01               	movlw	1
  6297  001336  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  6298  001338  0E00               	movlw	0
  6299  00133A  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6300  00133C  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6301  001340  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6302  001344                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6303  001344  6AF8               	clrf	tblptru,c
  6304  001346                     	endif
  6305  001346                     	if	0	;tblptru may be non-zero
  6306  001346                     	endif
  6307  001346  0008               	tblrd		*
  6308  001348  CFF5 F1D9          	movff	tablat,vfpfcnvrt@c
  6309  00134C                     
  6310                           ; BSR set to: 0
  6311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6312  00134C  0E02               	movlw	2
  6313  00134E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6314  001352  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6315  001356  26DE               	addwf	postinc2,f,c
  6316  001358  0E00               	movlw	0
  6317  00135A  22DD               	addwfc	postdec2,f,c
  6318  00135C                     
  6319                           ; BSR set to: 0
  6320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
  6321  00135C  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6322  001360  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6323  001364  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  6324  001368  0E02               	movlw	2
  6325  00136A  26DE               	addwf	postinc2,f,c
  6326  00136C  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  6327  001370  0E00               	movlw	0
  6328  001372  22DD               	addwfc	postdec2,f,c
  6329  001374  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6330  001378  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6331  00137C  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  6332  001380  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  6333  001384  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6334  001388  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6335  00138C  0101               	movlb	1	; () banked
  6336  00138E  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6337  001390  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6338  001392  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6339  001394  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6340  001396  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6341  001398  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6342  00139A  EF3C  F009         	goto	l9555
  6343  00139E                     l9573:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6347  00139E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6348  0013A2  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6349  0013A6  CFDE FFF6          	movff	postinc2,tblptrl
  6350  0013AA  CFDD FFF7          	movff	postdec2,tblptrh
  6351  0013AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6352  0013AE  6AF8               	clrf	tblptru,c
  6353  0013B0                     	endif
  6354  0013B0                     	if	0	;tblptru may be non-zero
  6355  0013B0                     	endif
  6356  0013B0  0008               	tblrd		*
  6357  0013B2  50F5               	movf	tablat,w,c
  6358  0013B4  0A78               	xorlw	120
  6359  0013B6  B4D8               	btfsc	status,2,c
  6360  0013B8  EFE0  F009         	goto	u12561
  6361  0013BC  EFE2  F009         	goto	u12560
  6362  0013C0                     u12561:
  6363  0013C0  EFF5  F009         	goto	l9577
  6364  0013C4                     u12560:
  6365  0013C4                     
  6366                           ; BSR set to: 0
  6367  0013C4  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6368  0013C8  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6369  0013CC  CFDE FFF6          	movff	postinc2,tblptrl
  6370  0013D0  CFDD FFF7          	movff	postdec2,tblptrh
  6371  0013D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6372  0013D4  6AF8               	clrf	tblptru,c
  6373  0013D6                     	endif
  6374  0013D6                     	if	0	;tblptru may be non-zero
  6375  0013D6                     	endif
  6376  0013D6  0008               	tblrd		*
  6377  0013D8  50F5               	movf	tablat,w,c
  6378  0013DA  0A58               	xorlw	88
  6379  0013DC  A4D8               	btfss	status,2,c
  6380  0013DE  EFF3  F009         	goto	u12571
  6381  0013E2  EFF5  F009         	goto	u12570
  6382  0013E6                     u12571:
  6383  0013E6  EF29  F00A         	goto	l9587
  6384  0013EA                     u12570:
  6385  0013EA                     l9577:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  6389  0013EA  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6390  0013EE  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6391  0013F2  CFDE FFF6          	movff	postinc2,tblptrl
  6392  0013F6  CFDD FFF7          	movff	postdec2,tblptrh
  6393  0013FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6394  0013FA  6AF8               	clrf	tblptru,c
  6395  0013FC                     	endif
  6396  0013FC                     	if	0	;tblptru may be non-zero
  6397  0013FC                     	endif
  6398  0013FC  0008               	tblrd		*
  6399  0013FE  CFF5 F1D9          	movff	tablat,vfpfcnvrt@c
  6400  001402                     
  6401                           ; BSR set to: 0
  6402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  6403  001402  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6404  001406  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6405  00140A  2ADE               	incf	postinc2,f,c
  6406  00140C  0E00               	movlw	0
  6407  00140E  22DD               	addwfc	postdec2,f,c
  6408  001410                     
  6409                           ; BSR set to: 0
  6410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  6411  001410  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6412  001414  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6413  001418  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  6414  00141C  0E02               	movlw	2
  6415  00141E  26DE               	addwf	postinc2,f,c
  6416  001420  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  6417  001424  0E00               	movlw	0
  6418  001426  22DD               	addwfc	postdec2,f,c
  6419  001428  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6420  00142C  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6421  001430  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  6422  001434  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  6423  001438  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6424  00143C  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6425  001440  0101               	movlb	1	; () banked
  6426  001442  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6427  001444  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6428  001446  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6429  001448  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6430  00144A  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6431  00144C  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6432  00144E  EF3C  F009         	goto	l9555
  6433  001452                     l9587:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
  6437  001452  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6438  001456  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6439  00145A  CFDE F060          	movff	postinc2,strncmp@_l
  6440  00145E  CFDD F061          	movff	postdec2,strncmp@_l+1
  6441  001462  0EFC               	movlw	low STR_108
  6442  001464  6F62               	movwf	strncmp@_r& (0+255),b
  6443  001466  0EFF               	movlw	high STR_108
  6444  001468  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6445  00146A  0E00               	movlw	0
  6446  00146C  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6447  00146E  0E02               	movlw	2
  6448  001470  6F64               	movwf	strncmp@n& (0+255),b
  6449  001472  ECEE  F027         	call	_strncmp	;wreg free
  6450  001476  0100               	movlb	0	; () banked
  6451  001478  5160               	movf	?_strncmp& (0+255),w,b
  6452  00147A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6453  00147C  B4D8               	btfsc	status,2,c
  6454  00147E  EF43  F00A         	goto	u12581
  6455  001482  EF45  F00A         	goto	u12580
  6456  001486                     u12581:
  6457  001486  EF61  F00A         	goto	l9591
  6458  00148A                     u12580:
  6459  00148A                     
  6460                           ; BSR set to: 0
  6461  00148A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6462  00148E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6463  001492  CFDE F060          	movff	postinc2,strncmp@_l
  6464  001496  CFDD F061          	movff	postdec2,strncmp@_l+1
  6465  00149A  0EE7               	movlw	low STR_112
  6466  00149C  6F62               	movwf	strncmp@_r& (0+255),b
  6467  00149E  0EFF               	movlw	high STR_112
  6468  0014A0  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  6469  0014A2  0E00               	movlw	0
  6470  0014A4  6F65               	movwf	(strncmp@n+1)& (0+255),b
  6471  0014A6  0E02               	movlw	2
  6472  0014A8  6F64               	movwf	strncmp@n& (0+255),b
  6473  0014AA  ECEE  F027         	call	_strncmp	;wreg free
  6474  0014AE  0100               	movlb	0	; () banked
  6475  0014B0  5160               	movf	?_strncmp& (0+255),w,b
  6476  0014B2  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  6477  0014B4  A4D8               	btfss	status,2,c
  6478  0014B6  EF5F  F00A         	goto	u12591
  6479  0014BA  EF61  F00A         	goto	u12590
  6480  0014BE                     u12591:
  6481  0014BE  EF9E  F00A         	goto	l9601
  6482  0014C2                     u12590:
  6483  0014C2                     l9591:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
  6487  0014C2  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6488  0014C6  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6489  0014CA  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  6490  0014CE  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  6491  0014D2  0E01               	movlw	1
  6492  0014D4  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  6493  0014D6  0E00               	movlw	0
  6494  0014D8  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6495  0014DA  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6496  0014DE  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6497  0014E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6498  0014E2  6AF8               	clrf	tblptru,c
  6499  0014E4                     	endif
  6500  0014E4                     	if	0	;tblptru may be non-zero
  6501  0014E4                     	endif
  6502  0014E4  0008               	tblrd		*
  6503  0014E6  CFF5 F1D9          	movff	tablat,vfpfcnvrt@c
  6504  0014EA                     
  6505                           ; BSR set to: 0
  6506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6507  0014EA  0E02               	movlw	2
  6508  0014EC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6509  0014F0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6510  0014F4  26DE               	addwf	postinc2,f,c
  6511  0014F6  0E00               	movlw	0
  6512  0014F8  22DD               	addwfc	postdec2,f,c
  6513  0014FA                     
  6514                           ; BSR set to: 0
  6515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6516  0014FA  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6517  0014FE  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6518  001502  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  6519  001506  0E02               	movlw	2
  6520  001508  26DE               	addwf	postinc2,f,c
  6521  00150A  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  6522  00150E  0E00               	movlw	0
  6523  001510  22DD               	addwfc	postdec2,f,c
  6524  001512  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6525  001516  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6526  00151A  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt+2
  6527  00151E  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+3
  6528  001522  C0D9  F1DA         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6529  001526  C0DA  F1DB         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6530  00152A  0101               	movlb	1	; () banked
  6531  00152C  6BDC               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  6532  00152E  6BDD               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  6533  001530  6BDE               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  6534  001532  6BDF               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  6535  001534  6BE0               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  6536  001536  6BE1               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  6537  001538  EF3C  F009         	goto	l9555
  6538  00153C                     l9601:
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6542  00153C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6543  001540  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6544  001544  CFDE FFF6          	movff	postinc2,tblptrl
  6545  001548  CFDD FFF7          	movff	postdec2,tblptrh
  6546  00154C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6547  00154C  6AF8               	clrf	tblptru,c
  6548  00154E                     	endif
  6549  00154E                     	if	0	;tblptru may be non-zero
  6550  00154E                     	endif
  6551  00154E  0008               	tblrd		*
  6552  001550  50F5               	movf	tablat,w,c
  6553  001552  0A25               	xorlw	37
  6554  001554  A4D8               	btfss	status,2,c
  6555  001556  EFAF  F00A         	goto	u12601
  6556  00155A  EFB1  F00A         	goto	u12600
  6557  00155E                     u12601:
  6558  00155E  EFC9  F00A         	goto	l9611
  6559  001562                     u12600:
  6560  001562                     
  6561                           ; BSR set to: 0
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6563  001562  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6564  001566  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6565  00156A  2ADE               	incf	postinc2,f,c
  6566  00156C  0E00               	movlw	0
  6567  00156E  22DD               	addwfc	postdec2,f,c
  6568  001570                     
  6569                           ; BSR set to: 0
  6570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6571  001570  0E00               	movlw	0
  6572  001572  6F61               	movwf	(fputc@c+1)& (0+255),b
  6573  001574  0E25               	movlw	37
  6574  001576  6F60               	movwf	fputc@c& (0+255),b
  6575  001578  C0D1  F062         	movff	vfpfcnvrt@fp,fputc@fp
  6576  00157C  C0D2  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6577  001580  EC0A  F02C         	call	_fputc	;wreg free
  6578  001584                     l9607:
  6579                           
  6580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6581  001584  0E00               	movlw	0
  6582  001586  0100               	movlb	0	; () banked
  6583  001588  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6584  00158A  0E01               	movlw	1
  6585  00158C  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  6586  00158E  EFEF  F00A         	goto	l838
  6587  001592                     l9611:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6591  001592  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6592  001596  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6593  00159A  2ADE               	incf	postinc2,f,c
  6594  00159C  0E00               	movlw	0
  6595  00159E  22DD               	addwfc	postdec2,f,c
  6596  0015A0  EF53  F006         	goto	l9463
  6597  0015A4                     l9617:
  6598                           
  6599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6600  0015A4  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6601  0015A8  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6602  0015AC  CFDE FFF6          	movff	postinc2,tblptrl
  6603  0015B0  CFDD FFF7          	movff	postdec2,tblptrh
  6604  0015B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6605  0015B4  6AF8               	clrf	tblptru,c
  6606  0015B6                     	endif
  6607  0015B6                     	if	0	;tblptru may be non-zero
  6608  0015B6                     	endif
  6609  0015B6  0008               	tblrd		*
  6610  0015B8  50F5               	movf	tablat,w,c
  6611  0015BA  0100               	movlb	0	; () banked
  6612  0015BC  6F60               	movwf	fputc@c& (0+255),b
  6613  0015BE  6B61               	clrf	(fputc@c+1)& (0+255),b
  6614  0015C0  C0D1  F062         	movff	vfpfcnvrt@fp,fputc@fp
  6615  0015C4  C0D2  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6616  0015C8  EC0A  F02C         	call	_fputc	;wreg free
  6617  0015CC                     
  6618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6619  0015CC  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6620  0015D0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6621  0015D4  2ADE               	incf	postinc2,f,c
  6622  0015D6  0E00               	movlw	0
  6623  0015D8  22DD               	addwfc	postdec2,f,c
  6624  0015DA  EFC2  F00A         	goto	l9607
  6625  0015DE                     l838:
  6626  0015DE  0012               	return		;funcret
  6627  0015E0                     __end_of_vfpfcnvrt:
  6628                           	opt callstack 0
  6629                           
  6630 ;; *************** function _xtoa *****************
  6631 ;; Defined at:
  6632 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  6635 ;;		 -> vsnprintf@f(6), 
  6636 ;;  d               8   29[BANK0 ] unsigned long long 
  6637 ;;  x               1   37[BANK0 ] unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  n               8   54[BANK0 ] unsigned long long 
  6640 ;;  c               2   64[BANK0 ] int 
  6641 ;;  i               2   62[BANK0 ] int 
  6642 ;;  w               2   52[BANK0 ] int 
  6643 ;;  p               2   50[BANK0 ] int 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  2   27[BANK0 ] int 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6653 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6654 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6655 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6656 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6657 ;;Total ram usage:       39 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    9
  6660 ;; This function calls:
  6661 ;;		_isalpha
  6662 ;;		_isupper
  6663 ;;		_pad
  6664 ;;		_toupper
  6665 ;; This function is called by:
  6666 ;;		_vfpfcnvrt
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text5
  6671  00396C                     __ptext5:
  6672                           	opt callstack 0
  6673  00396C                     _xtoa:
  6674                           	opt callstack 17
  6675  00396C                     
  6676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6677  00396C  0100               	movlb	0	; () banked
  6678  00396E  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  6679  003970  EFBC  F01C         	goto	u11761
  6680  003974  EFBE  F01C         	goto	u11760
  6681  003978                     u11761:
  6682  003978  EFBF  F01C         	goto	l9113
  6683  00397C                     u11760:
  6684  00397C                     
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6687  00397C  9239               	bcf	_flags^0,1,c
  6688  00397E                     l9113:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6692  00397E  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  6693  003980  EFCC  F01C         	goto	u11770
  6694  003984  51F0               	movf	(_prec+1)& (0+255),w,b
  6695  003986  E106               	bnz	u11771
  6696  003988  05EF               	decf	_prec& (0+255),w,b
  6697  00398A  B0D8               	btfsc	status,0,c
  6698  00398C  EFCA  F01C         	goto	u11771
  6699  003990  EFCC  F01C         	goto	u11770
  6700  003994                     u11771:
  6701  003994  EFD2  F01C         	goto	l774
  6702  003998                     u11770:
  6703  003998                     
  6704                           ; BSR set to: 0
  6705  003998  0E00               	movlw	0
  6706  00399A  6F93               	movwf	(xtoa@p+1)& (0+255),b
  6707  00399C  0E01               	movlw	1
  6708  00399E  6F92               	movwf	xtoa@p& (0+255),b
  6709  0039A0  EFD6  F01C         	goto	l776
  6710  0039A4                     l774:
  6711                           
  6712                           ; BSR set to: 0
  6713  0039A4  C0EF  F092         	movff	_prec,xtoa@p
  6714  0039A8  C0F0  F093         	movff	_prec+1,xtoa@p+1
  6715  0039AC                     l776:
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6719  0039AC  C037  F094         	movff	_width,xtoa@w
  6720  0039B0  C038  F095         	movff	_width+1,xtoa@w+1
  6721                           
  6722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6723  0039B4  A839               	btfss	_flags^0,4,c
  6724  0039B6  EFDF  F01C         	goto	u11781
  6725  0039BA  EFE1  F01C         	goto	u11780
  6726  0039BE                     u11781:
  6727  0039BE  EFE5  F01C         	goto	l9119
  6728  0039C2                     u11780:
  6729  0039C2                     
  6730                           ; BSR set to: 0
  6731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6732  0039C2  0EFE               	movlw	254
  6733  0039C4  2794               	addwf	xtoa@w& (0+255),f,b
  6734  0039C6  0EFF               	movlw	255
  6735  0039C8  2395               	addwfc	(xtoa@w+1)& (0+255),f,b
  6736  0039CA                     l9119:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6740  0039CA  C07D  F096         	movff	xtoa@d,xtoa@n
  6741  0039CE  C07E  F097         	movff	xtoa@d+1,xtoa@n+1
  6742  0039D2  C07F  F098         	movff	xtoa@d+2,xtoa@n+2
  6743  0039D6  C080  F099         	movff	xtoa@d+3,xtoa@n+3
  6744  0039DA  C081  F09A         	movff	xtoa@d+4,xtoa@n+4
  6745  0039DE  C082  F09B         	movff	xtoa@d+5,xtoa@n+5
  6746  0039E2  C083  F09C         	movff	xtoa@d+6,xtoa@n+6
  6747  0039E6  C084  F09D         	movff	xtoa@d+7,xtoa@n+7
  6748  0039EA                     
  6749                           ; BSR set to: 0
  6750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6751  0039EA  0E00               	movlw	0
  6752  0039EC  6F9F               	movwf	(xtoa@i+1)& (0+255),b
  6753  0039EE  0E4F               	movlw	79
  6754  0039F0  6F9E               	movwf	xtoa@i& (0+255),b
  6755  0039F2                     
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6758  0039F2  0E00               	movlw	0
  6759  0039F4  0101               	movlb	1	; () banked
  6760  0039F6  6FBB               	movwf	(_dbuf+79)& (0+255),b
  6761                           
  6762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6763  0039F8  EFB2  F01D         	goto	l9155
  6764  0039FC                     l9125:
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6768  0039FC  079E               	decf	xtoa@i& (0+255),f,b
  6769  0039FE  A0D8               	btfss	status,0,c
  6770  003A00  079F               	decf	(xtoa@i+1)& (0+255),f,b
  6771  003A02                     
  6772                           ; BSR set to: 0
  6773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6774  003A02  0E0F               	movlw	15
  6775  003A04  1596               	andwf	xtoa@n& (0+255),w,b
  6776  003A06  6FA0               	movwf	xtoa@c& (0+255),b
  6777  003A08  6BA1               	clrf	(xtoa@c+1)& (0+255),b
  6778  003A0A                     
  6779                           ; BSR set to: 0
  6780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6781  003A0A  BFA1               	btfsc	(xtoa@c+1)& (0+255),7,b
  6782  003A0C  EF11  F01D         	goto	u11791
  6783  003A10  51A1               	movf	(xtoa@c+1)& (0+255),w,b
  6784  003A12  E109               	bnz	u11790
  6785  003A14  0E0A               	movlw	10
  6786  003A16  5DA0               	subwf	xtoa@c& (0+255),w,b
  6787  003A18  A0D8               	btfss	status,0,c
  6788  003A1A  EF11  F01D         	goto	u11791
  6789  003A1E  EF13  F01D         	goto	u11790
  6790  003A22                     u11791:
  6791  003A22  EF1B  F01D         	goto	l9133
  6792  003A26                     u11790:
  6793  003A26                     
  6794                           ; BSR set to: 0
  6795  003A26  0E57               	movlw	87
  6796  003A28  25A0               	addwf	xtoa@c& (0+255),w,b
  6797  003A2A  6FA0               	movwf	xtoa@c& (0+255),b
  6798  003A2C  0E00               	movlw	0
  6799  003A2E  21A1               	addwfc	(xtoa@c+1)& (0+255),w,b
  6800  003A30  6FA1               	movwf	(xtoa@c+1)& (0+255),b
  6801  003A32  EF21  F01D         	goto	l783
  6802  003A36                     l9133:
  6803                           
  6804                           ; BSR set to: 0
  6805  003A36  0E30               	movlw	48
  6806  003A38  25A0               	addwf	xtoa@c& (0+255),w,b
  6807  003A3A  6FA0               	movwf	xtoa@c& (0+255),b
  6808  003A3C  0E00               	movlw	0
  6809  003A3E  21A1               	addwfc	(xtoa@c+1)& (0+255),w,b
  6810  003A40  6FA1               	movwf	(xtoa@c+1)& (0+255),b
  6811  003A42                     l783:
  6812                           
  6813                           ; BSR set to: 0
  6814  003A42  0EBF               	movlw	191
  6815  003A44  6F86               	movwf	??_xtoa& (0+255),b
  6816  003A46  0EFF               	movlw	255
  6817  003A48  6F87               	movwf	(??_xtoa+1)& (0+255),b
  6818  003A4A  5185               	movf	xtoa@x& (0+255),w,b
  6819  003A4C  6F88               	movwf	(??_xtoa+2)& (0+255),b
  6820  003A4E  6B89               	clrf	(??_xtoa+3)& (0+255),b
  6821  003A50  5186               	movf	??_xtoa& (0+255),w,b
  6822  003A52  2788               	addwf	(??_xtoa+2)& (0+255),f,b
  6823  003A54  5187               	movf	(??_xtoa+1)& (0+255),w,b
  6824  003A56  2389               	addwfc	(??_xtoa+3)& (0+255),f,b
  6825  003A58  5189               	movf	(??_xtoa+3)& (0+255),w,b
  6826  003A5A  E10A               	bnz	u11800
  6827  003A5C  0E1A               	movlw	26
  6828  003A5E  5D88               	subwf	(??_xtoa+2)& (0+255),w,b
  6829  003A60  A0D8               	btfss	status,0,c
  6830  003A62  EF35  F01D         	goto	u11801
  6831  003A66  EF38  F01D         	goto	u11800
  6832  003A6A                     u11801:
  6833  003A6A  0E01               	movlw	1
  6834  003A6C  EF39  F01D         	goto	u11810
  6835  003A70                     u11800:
  6836  003A70  0E00               	movlw	0
  6837  003A72                     u11810:
  6838  003A72  6F8E               	movwf	_xtoa$1650& (0+255),b
  6839  003A74  6B8F               	clrf	(_xtoa$1650+1)& (0+255),b
  6840  003A76                     
  6841                           ; BSR set to: 0
  6842  003A76  518E               	movf	_xtoa$1650& (0+255),w,b
  6843  003A78  118F               	iorwf	(_xtoa$1650+1)& (0+255),w,b
  6844  003A7A  B4D8               	btfsc	status,2,c
  6845  003A7C  EF42  F01D         	goto	u11821
  6846  003A80  EF44  F01D         	goto	u11820
  6847  003A84                     u11821:
  6848  003A84  EF74  F01D         	goto	l9147
  6849  003A88                     u11820:
  6850  003A88                     
  6851                           ; BSR set to: 0
  6852  003A88  0E9F               	movlw	159
  6853  003A8A  6F86               	movwf	??_xtoa& (0+255),b
  6854  003A8C  0EFF               	movlw	255
  6855  003A8E  6F87               	movwf	(??_xtoa+1)& (0+255),b
  6856  003A90  0E20               	movlw	32
  6857  003A92  11A0               	iorwf	xtoa@c& (0+255),w,b
  6858  003A94  6F88               	movwf	(??_xtoa+2)& (0+255),b
  6859  003A96  0E00               	movlw	0
  6860  003A98  11A1               	iorwf	(xtoa@c+1)& (0+255),w,b
  6861  003A9A  6F89               	movwf	(??_xtoa+3)& (0+255),b
  6862  003A9C  5186               	movf	??_xtoa& (0+255),w,b
  6863  003A9E  2788               	addwf	(??_xtoa+2)& (0+255),f,b
  6864  003AA0  5187               	movf	(??_xtoa+1)& (0+255),w,b
  6865  003AA2  2389               	addwfc	(??_xtoa+3)& (0+255),f,b
  6866  003AA4  5189               	movf	(??_xtoa+3)& (0+255),w,b
  6867  003AA6  E10A               	bnz	u11830
  6868  003AA8  0E1A               	movlw	26
  6869  003AAA  5D88               	subwf	(??_xtoa+2)& (0+255),w,b
  6870  003AAC  A0D8               	btfss	status,0,c
  6871  003AAE  EF5B  F01D         	goto	u11831
  6872  003AB2  EF5E  F01D         	goto	u11830
  6873  003AB6                     u11831:
  6874  003AB6  0E01               	movlw	1
  6875  003AB8  EF5F  F01D         	goto	u11840
  6876  003ABC                     u11830:
  6877  003ABC  0E00               	movlw	0
  6878  003ABE                     u11840:
  6879  003ABE  6F90               	movwf	_xtoa$1651& (0+255),b
  6880  003AC0  6B91               	clrf	(_xtoa$1651+1)& (0+255),b
  6881  003AC2                     
  6882                           ; BSR set to: 0
  6883  003AC2  5190               	movf	_xtoa$1651& (0+255),w,b
  6884  003AC4  1191               	iorwf	(_xtoa$1651+1)& (0+255),w,b
  6885  003AC6  B4D8               	btfsc	status,2,c
  6886  003AC8  EF68  F01D         	goto	u11851
  6887  003ACC  EF6A  F01D         	goto	u11850
  6888  003AD0                     u11851:
  6889  003AD0  EF74  F01D         	goto	l9147
  6890  003AD4                     u11850:
  6891  003AD4                     
  6892                           ; BSR set to: 0
  6893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6894  003AD4  C0A0  F066         	movff	xtoa@c,toupper@c
  6895  003AD8  C0A1  F067         	movff	xtoa@c+1,toupper@c+1
  6896  003ADC  EC2B  F02F         	call	_toupper	;wreg free
  6897  003AE0  C066  F0A0         	movff	?_toupper,xtoa@c
  6898  003AE4  C067  F0A1         	movff	?_toupper+1,xtoa@c+1
  6899  003AE8                     l9147:
  6900                           
  6901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6902  003AE8  0E6C               	movlw	low _dbuf
  6903  003AEA  0100               	movlb	0	; () banked
  6904  003AEC  259E               	addwf	xtoa@i& (0+255),w,b
  6905  003AEE  6ED9               	movwf	fsr2l,c
  6906  003AF0  0E01               	movlw	high _dbuf
  6907  003AF2  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  6908  003AF4  6EDA               	movwf	fsr2h,c
  6909  003AF6  C0A0  FFDF         	movff	xtoa@c,indf2
  6910  003AFA                     
  6911                           ; BSR set to: 0
  6912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6913  003AFA  0792               	decf	xtoa@p& (0+255),f,b
  6914  003AFC  A0D8               	btfss	status,0,c
  6915  003AFE  0793               	decf	(xtoa@p+1)& (0+255),f,b
  6916  003B00                     
  6917                           ; BSR set to: 0
  6918                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6919  003B00  0794               	decf	xtoa@w& (0+255),f,b
  6920  003B02  A0D8               	btfss	status,0,c
  6921  003B04  0795               	decf	(xtoa@w+1)& (0+255),f,b
  6922  003B06                     
  6923                           ; BSR set to: 0
  6924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6925  003B06  C096  F086         	movff	xtoa@n,??_xtoa
  6926  003B0A  C097  F087         	movff	xtoa@n+1,??_xtoa+1
  6927  003B0E  C098  F088         	movff	xtoa@n+2,??_xtoa+2
  6928  003B12  C099  F089         	movff	xtoa@n+3,??_xtoa+3
  6929  003B16  C09A  F08A         	movff	xtoa@n+4,??_xtoa+4
  6930  003B1A  C09B  F08B         	movff	xtoa@n+5,??_xtoa+5
  6931  003B1E  C09C  F08C         	movff	xtoa@n+6,??_xtoa+6
  6932  003B22  C09D  F08D         	movff	xtoa@n+7,??_xtoa+7
  6933  003B26  0E05               	movlw	5
  6934  003B28  EF9F  F01D         	goto	u11860
  6935  003B2C                     u11865:
  6936  003B2C  90D8               	bcf	status,0,c
  6937  003B2E  338D               	rrcf	(??_xtoa+7)& (0+255),f,b
  6938  003B30  338C               	rrcf	(??_xtoa+6)& (0+255),f,b
  6939  003B32  338B               	rrcf	(??_xtoa+5)& (0+255),f,b
  6940  003B34  338A               	rrcf	(??_xtoa+4)& (0+255),f,b
  6941  003B36  3389               	rrcf	(??_xtoa+3)& (0+255),f,b
  6942  003B38  3388               	rrcf	(??_xtoa+2)& (0+255),f,b
  6943  003B3A  3387               	rrcf	(??_xtoa+1)& (0+255),f,b
  6944  003B3C  3386               	rrcf	??_xtoa& (0+255),f,b
  6945  003B3E                     u11860:
  6946  003B3E  2EE8               	decfsz	wreg,f,c
  6947  003B40  EF96  F01D         	goto	u11865
  6948  003B44  C086  F096         	movff	??_xtoa,xtoa@n
  6949  003B48  C087  F097         	movff	??_xtoa+1,xtoa@n+1
  6950  003B4C  C088  F098         	movff	??_xtoa+2,xtoa@n+2
  6951  003B50  C089  F099         	movff	??_xtoa+3,xtoa@n+3
  6952  003B54  C08A  F09A         	movff	??_xtoa+4,xtoa@n+4
  6953  003B58  C08B  F09B         	movff	??_xtoa+5,xtoa@n+5
  6954  003B5C  C08C  F09C         	movff	??_xtoa+6,xtoa@n+6
  6955  003B60  C08D  F09D         	movff	??_xtoa+7,xtoa@n+7
  6956  003B64                     l9155:
  6957                           
  6958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6959  003B64  0100               	movlb	0	; () banked
  6960  003B66  BF9F               	btfsc	(xtoa@i+1)& (0+255),7,b
  6961  003B68  EFBF  F01D         	goto	u11871
  6962  003B6C  519F               	movf	(xtoa@i+1)& (0+255),w,b
  6963  003B6E  E109               	bnz	u11870
  6964  003B70  0E02               	movlw	2
  6965  003B72  5D9E               	subwf	xtoa@i& (0+255),w,b
  6966  003B74  A0D8               	btfss	status,0,c
  6967  003B76  EFBF  F01D         	goto	u11871
  6968  003B7A  EFC1  F01D         	goto	u11870
  6969  003B7E                     u11871:
  6970  003B7E  EFF1  F01D         	goto	l797
  6971  003B82                     u11870:
  6972  003B82                     
  6973                           ; BSR set to: 0
  6974  003B82  5196               	movf	xtoa@n& (0+255),w,b
  6975  003B84  1197               	iorwf	(xtoa@n+1)& (0+255),w,b
  6976  003B86  1198               	iorwf	(xtoa@n+2)& (0+255),w,b
  6977  003B88  1199               	iorwf	(xtoa@n+3)& (0+255),w,b
  6978  003B8A  119A               	iorwf	(xtoa@n+4)& (0+255),w,b
  6979  003B8C  119B               	iorwf	(xtoa@n+5)& (0+255),w,b
  6980  003B8E  119C               	iorwf	(xtoa@n+6)& (0+255),w,b
  6981  003B90  119D               	iorwf	(xtoa@n+7)& (0+255),w,b
  6982  003B92  A4D8               	btfss	status,2,c
  6983  003B94  EFCE  F01D         	goto	u11881
  6984  003B98  EFD0  F01D         	goto	u11880
  6985  003B9C                     u11881:
  6986  003B9C  EFFE  F01C         	goto	l9125
  6987  003BA0                     u11880:
  6988  003BA0                     
  6989                           ; BSR set to: 0
  6990  003BA0  BF93               	btfsc	(xtoa@p+1)& (0+255),7,b
  6991  003BA2  EFDD  F01D         	goto	u11890
  6992  003BA6  5193               	movf	(xtoa@p+1)& (0+255),w,b
  6993  003BA8  E106               	bnz	u11891
  6994  003BAA  0592               	decf	xtoa@p& (0+255),w,b
  6995  003BAC  B0D8               	btfsc	status,0,c
  6996  003BAE  EFDB  F01D         	goto	u11891
  6997  003BB2  EFDD  F01D         	goto	u11890
  6998  003BB6                     u11891:
  6999  003BB6  EFFE  F01C         	goto	l9125
  7000  003BBA                     u11890:
  7001  003BBA                     
  7002                           ; BSR set to: 0
  7003  003BBA  BF95               	btfsc	(xtoa@w+1)& (0+255),7,b
  7004  003BBC  EFE8  F01D         	goto	u11901
  7005  003BC0  5195               	movf	(xtoa@w+1)& (0+255),w,b
  7006  003BC2  E108               	bnz	u11900
  7007  003BC4  0594               	decf	xtoa@w& (0+255),w,b
  7008  003BC6  A0D8               	btfss	status,0,c
  7009  003BC8  EFE8  F01D         	goto	u11901
  7010  003BCC  EFEA  F01D         	goto	u11900
  7011  003BD0                     u11901:
  7012  003BD0  EFF1  F01D         	goto	l797
  7013  003BD4                     u11900:
  7014  003BD4                     
  7015                           ; BSR set to: 0
  7016  003BD4  B239               	btfsc	_flags^0,1,c
  7017  003BD6  EFEF  F01D         	goto	u11911
  7018  003BDA  EFF1  F01D         	goto	u11910
  7019  003BDE                     u11911:
  7020  003BDE  EFFE  F01C         	goto	l9125
  7021  003BE2                     u11910:
  7022  003BE2                     l797:
  7023                           
  7024                           ; BSR set to: 0
  7025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7026  003BE2  A839               	btfss	_flags^0,4,c
  7027  003BE4  EFF6  F01D         	goto	u11921
  7028  003BE8  EFF8  F01D         	goto	u11920
  7029  003BEC                     u11921:
  7030  003BEC  EF0E  F01E         	goto	l9171
  7031  003BF0                     u11920:
  7032  003BF0                     
  7033                           ; BSR set to: 0
  7034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7035  003BF0  079E               	decf	xtoa@i& (0+255),f,b
  7036  003BF2  A0D8               	btfss	status,0,c
  7037  003BF4  079F               	decf	(xtoa@i+1)& (0+255),f,b
  7038  003BF6                     
  7039                           ; BSR set to: 0
  7040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7041  003BF6  0E6C               	movlw	low _dbuf
  7042  003BF8  259E               	addwf	xtoa@i& (0+255),w,b
  7043  003BFA  6ED9               	movwf	fsr2l,c
  7044  003BFC  0E01               	movlw	high _dbuf
  7045  003BFE  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  7046  003C00  6EDA               	movwf	fsr2h,c
  7047  003C02  C085  FFDF         	movff	xtoa@x,indf2
  7048  003C06                     
  7049                           ; BSR set to: 0
  7050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7051  003C06  079E               	decf	xtoa@i& (0+255),f,b
  7052  003C08  A0D8               	btfss	status,0,c
  7053  003C0A  079F               	decf	(xtoa@i+1)& (0+255),f,b
  7054                           
  7055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7056  003C0C  0E6C               	movlw	low _dbuf
  7057  003C0E  259E               	addwf	xtoa@i& (0+255),w,b
  7058  003C10  6ED9               	movwf	fsr2l,c
  7059  003C12  0E01               	movlw	high _dbuf
  7060  003C14  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  7061  003C16  6EDA               	movwf	fsr2h,c
  7062  003C18  0E30               	movlw	48
  7063  003C1A  6EDF               	movwf	indf2,c
  7064  003C1C                     l9171:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7068  003C1C  C07B  F070         	movff	xtoa@fp,pad@fp
  7069  003C20  C07C  F071         	movff	xtoa@fp+1,pad@fp+1
  7070  003C24  0E6C               	movlw	low _dbuf
  7071  003C26  259E               	addwf	xtoa@i& (0+255),w,b
  7072  003C28  6F72               	movwf	pad@buf& (0+255),b
  7073  003C2A  0E01               	movlw	high _dbuf
  7074  003C2C  219F               	addwfc	(xtoa@i+1)& (0+255),w,b
  7075  003C2E  6F73               	movwf	(pad@buf+1)& (0+255),b
  7076  003C30  C094  F074         	movff	xtoa@w,pad@p
  7077  003C34  C095  F075         	movff	xtoa@w+1,pad@p+1
  7078  003C38  EC70  F02C         	call	_pad	;wreg free
  7079  003C3C  C070  F07B         	movff	?_pad,?_xtoa
  7080  003C40  C071  F07C         	movff	?_pad+1,?_xtoa+1
  7081  003C44  0012               	return		;funcret
  7082  003C46                     __end_of_xtoa:
  7083                           	opt callstack 0
  7084                           
  7085 ;; *************** function _toupper *****************
  7086 ;; Defined at:
  7087 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  c               2    6[BANK0 ] int 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2    6[BANK0 ] int 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7103 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;Total ram usage:        8 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; Hardware stack levels required when called:    6
  7108 ;; This function calls:
  7109 ;;		_islower
  7110 ;; This function is called by:
  7111 ;;		_xtoa
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text6
  7116  005E56                     __ptext6:
  7117                           	opt callstack 0
  7118  005E56                     _toupper:
  7119                           	opt callstack 19
  7120  005E56  0E9F               	movlw	159
  7121  005E58  0100               	movlb	0	; () banked
  7122  005E5A  6F68               	movwf	??_toupper& (0+255),b
  7123  005E5C  0EFF               	movlw	255
  7124  005E5E  6F69               	movwf	(??_toupper+1)& (0+255),b
  7125  005E60  C066  F06A         	movff	toupper@c,??_toupper+2
  7126  005E64  C067  F06B         	movff	toupper@c+1,??_toupper+3
  7127  005E68  5168               	movf	??_toupper& (0+255),w,b
  7128  005E6A  276A               	addwf	(??_toupper+2)& (0+255),f,b
  7129  005E6C  5169               	movf	(??_toupper+1)& (0+255),w,b
  7130  005E6E  236B               	addwfc	(??_toupper+3)& (0+255),f,b
  7131  005E70  516B               	movf	(??_toupper+3)& (0+255),w,b
  7132  005E72  E10A               	bnz	u9840
  7133  005E74  0E1A               	movlw	26
  7134  005E76  5D6A               	subwf	(??_toupper+2)& (0+255),w,b
  7135  005E78  A0D8               	btfss	status,0,c
  7136  005E7A  EF41  F02F         	goto	u9841
  7137  005E7E  EF44  F02F         	goto	u9840
  7138  005E82                     u9841:
  7139  005E82  0E01               	movlw	1
  7140  005E84  EF45  F02F         	goto	u9850
  7141  005E88                     u9840:
  7142  005E88  0E00               	movlw	0
  7143  005E8A                     u9850:
  7144  005E8A  6F6C               	movwf	_toupper$2386& (0+255),b
  7145  005E8C  6B6D               	clrf	(_toupper$2386+1)& (0+255),b
  7146  005E8E                     
  7147                           ; BSR set to: 0
  7148  005E8E  516C               	movf	_toupper$2386& (0+255),w,b
  7149  005E90  116D               	iorwf	(_toupper$2386+1)& (0+255),w,b
  7150  005E92  B4D8               	btfsc	status,2,c
  7151  005E94  EF4E  F02F         	goto	u9861
  7152  005E98  EF50  F02F         	goto	u9860
  7153  005E9C                     u9861:
  7154  005E9C  EF56  F02F         	goto	l1722
  7155  005EA0                     u9860:
  7156  005EA0                     
  7157                           ; BSR set to: 0
  7158  005EA0  0E5F               	movlw	95
  7159  005EA2  1566               	andwf	toupper@c& (0+255),w,b
  7160  005EA4  6F66               	movwf	?_toupper& (0+255),b
  7161  005EA6  6B67               	clrf	(?_toupper+1)& (0+255),b
  7162  005EA8  EF5A  F02F         	goto	l1727
  7163  005EAC                     l1722:
  7164                           
  7165                           ; BSR set to: 0
  7166  005EAC  C066  F066         	movff	toupper@c,?_toupper
  7167  005EB0  C067  F067         	movff	toupper@c+1,?_toupper+1
  7168  005EB4                     l1727:
  7169                           
  7170                           ; BSR set to: 0
  7171  005EB4  0012               	return		;funcret
  7172  005EB6                     __end_of_toupper:
  7173                           	opt callstack 0
  7174                           
  7175 ;; *************** function _islower *****************
  7176 ;; Defined at:
  7177 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  c               2    0[BANK0 ] int 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;		None
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  2    0[BANK0 ] int 
  7184 ;; Registers used:
  7185 ;;		wreg, status,2, status,0
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 0/0
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7194 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7195 ;;Total ram usage:        6 bytes
  7196 ;; Hardware stack levels used:    1
  7197 ;; Hardware stack levels required when called:    5
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_toupper
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           	psect	text7
  7206  006252                     __ptext7:
  7207                           	opt callstack 0
  7208  006252                     _islower:
  7209                           	opt callstack 19
  7210  006252  0E9F               	movlw	159
  7211  006254  0100               	movlb	0	; () banked
  7212  006256  6F62               	movwf	??_islower& (0+255),b
  7213  006258  0EFF               	movlw	255
  7214  00625A  6F63               	movwf	(??_islower+1)& (0+255),b
  7215  00625C  C060  F064         	movff	islower@c,??_islower+2
  7216  006260  C061  F065         	movff	islower@c+1,??_islower+3
  7217  006264  5162               	movf	??_islower& (0+255),w,b
  7218  006266  2764               	addwf	(??_islower+2)& (0+255),f,b
  7219  006268  5163               	movf	(??_islower+1)& (0+255),w,b
  7220  00626A  2365               	addwfc	(??_islower+3)& (0+255),f,b
  7221  00626C  5165               	movf	(??_islower+3)& (0+255),w,b
  7222  00626E  E10A               	bnz	u9520
  7223  006270  0E1A               	movlw	26
  7224  006272  5D64               	subwf	(??_islower+2)& (0+255),w,b
  7225  006274  A0D8               	btfss	status,0,c
  7226  006276  EF3F  F031         	goto	u9521
  7227  00627A  EF42  F031         	goto	u9520
  7228  00627E                     u9521:
  7229  00627E  0E01               	movlw	1
  7230  006280  EF43  F031         	goto	u9530
  7231  006284                     u9520:
  7232  006284  0E00               	movlw	0
  7233  006286                     u9530:
  7234  006286  6F60               	movwf	?_islower& (0+255),b
  7235  006288  6B61               	clrf	(?_islower+1)& (0+255),b
  7236  00628A                     
  7237                           ; BSR set to: 0
  7238  00628A  0012               	return		;funcret
  7239  00628C                     __end_of_islower:
  7240                           	opt callstack 0
  7241                           
  7242 ;; *************** function _isalpha *****************
  7243 ;; Defined at:
  7244 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  c               2    0[BANK0 ] int 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  2    0[BANK0 ] int 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2, status,0
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7261 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;Total ram usage:        6 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    5
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_xtoa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text8
  7273  006214                     __ptext8:
  7274                           	opt callstack 0
  7275  006214                     _isalpha:
  7276                           	opt callstack 20
  7277  006214  0E9F               	movlw	159
  7278  006216  0100               	movlb	0	; () banked
  7279  006218  6F62               	movwf	??_isalpha& (0+255),b
  7280  00621A  0EFF               	movlw	255
  7281  00621C  6F63               	movwf	(??_isalpha+1)& (0+255),b
  7282  00621E  0E20               	movlw	32
  7283  006220  1160               	iorwf	isalpha@c& (0+255),w,b
  7284  006222  6F64               	movwf	(??_isalpha+2)& (0+255),b
  7285  006224  0E00               	movlw	0
  7286  006226  1161               	iorwf	(isalpha@c+1)& (0+255),w,b
  7287  006228  6F65               	movwf	(??_isalpha+3)& (0+255),b
  7288  00622A  5162               	movf	??_isalpha& (0+255),w,b
  7289  00622C  2764               	addwf	(??_isalpha+2)& (0+255),f,b
  7290  00622E  5163               	movf	(??_isalpha+1)& (0+255),w,b
  7291  006230  2365               	addwfc	(??_isalpha+3)& (0+255),f,b
  7292  006232  5165               	movf	(??_isalpha+3)& (0+255),w,b
  7293  006234  E10A               	bnz	u9820
  7294  006236  0E1A               	movlw	26
  7295  006238  5D64               	subwf	(??_isalpha+2)& (0+255),w,b
  7296  00623A  A0D8               	btfss	status,0,c
  7297  00623C  EF22  F031         	goto	u9821
  7298  006240  EF25  F031         	goto	u9820
  7299  006244                     u9821:
  7300  006244  0E01               	movlw	1
  7301  006246  EF26  F031         	goto	u9830
  7302  00624A                     u9820:
  7303  00624A  0E00               	movlw	0
  7304  00624C                     u9830:
  7305  00624C  6F60               	movwf	?_isalpha& (0+255),b
  7306  00624E  6B61               	clrf	(?_isalpha+1)& (0+255),b
  7307  006250                     
  7308                           ; BSR set to: 0
  7309  006250  0012               	return		;funcret
  7310  006252                     __end_of_isalpha:
  7311                           	opt callstack 0
  7312                           
  7313 ;; *************** function _utoa *****************
  7314 ;; Defined at:
  7315 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  7318 ;;		 -> vsnprintf@f(6), 
  7319 ;;  d               8   29[BANK0 ] unsigned long long 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  n               8   49[BANK0 ] unsigned long long 
  7322 ;;  i               2   57[BANK0 ] int 
  7323 ;;  w               2   47[BANK0 ] int 
  7324 ;;  p               2   45[BANK0 ] int 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  2   27[BANK0 ] int 
  7327 ;; Registers used:
  7328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7334 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7335 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7336 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7337 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7338 ;;Total ram usage:       32 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:    9
  7341 ;; This function calls:
  7342 ;;		___lodiv
  7343 ;;		___lomod
  7344 ;;		_pad
  7345 ;; This function is called by:
  7346 ;;		_vfpfcnvrt
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           	psect	text9
  7351  003E5C                     __ptext9:
  7352                           	opt callstack 0
  7353  003E5C                     _utoa:
  7354                           	opt callstack 17
  7355  003E5C                     
  7356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7357  003E5C  0100               	movlb	0	; () banked
  7358  003E5E  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7359  003E60  EF34  F01F         	goto	u11691
  7360  003E64  EF36  F01F         	goto	u11690
  7361  003E68                     u11691:
  7362  003E68  EF37  F01F         	goto	l9077
  7363  003E6C                     u11690:
  7364  003E6C                     
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7367  003E6C  9239               	bcf	_flags^0,1,c
  7368  003E6E                     l9077:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7372  003E6E  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7373  003E70  EF44  F01F         	goto	u11700
  7374  003E74  51F0               	movf	(_prec+1)& (0+255),w,b
  7375  003E76  E106               	bnz	u11701
  7376  003E78  05EF               	decf	_prec& (0+255),w,b
  7377  003E7A  B0D8               	btfsc	status,0,c
  7378  003E7C  EF42  F01F         	goto	u11701
  7379  003E80  EF44  F01F         	goto	u11700
  7380  003E84                     u11701:
  7381  003E84  EF4A  F01F         	goto	l759
  7382  003E88                     u11700:
  7383  003E88                     
  7384                           ; BSR set to: 0
  7385  003E88  0E00               	movlw	0
  7386  003E8A  6F8E               	movwf	(utoa@p+1)& (0+255),b
  7387  003E8C  0E01               	movlw	1
  7388  003E8E  6F8D               	movwf	utoa@p& (0+255),b
  7389  003E90  EF4E  F01F         	goto	l761
  7390  003E94                     l759:
  7391                           
  7392                           ; BSR set to: 0
  7393  003E94  C0EF  F08D         	movff	_prec,utoa@p
  7394  003E98  C0F0  F08E         	movff	_prec+1,utoa@p+1
  7395  003E9C                     l761:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7399  003E9C  C037  F08F         	movff	_width,utoa@w
  7400  003EA0  C038  F090         	movff	_width+1,utoa@w+1
  7401                           
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7403  003EA4  C07D  F091         	movff	utoa@d,utoa@n
  7404  003EA8  C07E  F092         	movff	utoa@d+1,utoa@n+1
  7405  003EAC  C07F  F093         	movff	utoa@d+2,utoa@n+2
  7406  003EB0  C080  F094         	movff	utoa@d+3,utoa@n+3
  7407  003EB4  C081  F095         	movff	utoa@d+4,utoa@n+4
  7408  003EB8  C082  F096         	movff	utoa@d+5,utoa@n+5
  7409  003EBC  C083  F097         	movff	utoa@d+6,utoa@n+6
  7410  003EC0  C084  F098         	movff	utoa@d+7,utoa@n+7
  7411  003EC4                     
  7412                           ; BSR set to: 0
  7413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7414  003EC4  0E00               	movlw	0
  7415  003EC6  6F9A               	movwf	(utoa@i+1)& (0+255),b
  7416  003EC8  0E4F               	movlw	79
  7417  003ECA  6F99               	movwf	utoa@i& (0+255),b
  7418  003ECC                     
  7419                           ; BSR set to: 0
  7420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7421  003ECC  0E00               	movlw	0
  7422  003ECE  0101               	movlb	1	; () banked
  7423  003ED0  6FBB               	movwf	(_dbuf+79)& (0+255),b
  7424                           
  7425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7426  003ED2  EFE2  F01F         	goto	l9095
  7427  003ED6                     l9085:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7431  003ED6  0799               	decf	utoa@i& (0+255),f,b
  7432  003ED8  A0D8               	btfss	status,0,c
  7433  003EDA  079A               	decf	(utoa@i+1)& (0+255),f,b
  7434  003EDC                     
  7435                           ; BSR set to: 0
  7436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7437  003EDC  0E6C               	movlw	low _dbuf
  7438  003EDE  2599               	addwf	utoa@i& (0+255),w,b
  7439  003EE0  6ED9               	movwf	fsr2l,c
  7440  003EE2  0E01               	movlw	high _dbuf
  7441  003EE4  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  7442  003EE6  6EDA               	movwf	fsr2h,c
  7443  003EE8  C091  F060         	movff	utoa@n,___lomod@dividend
  7444  003EEC  C092  F061         	movff	utoa@n+1,___lomod@dividend+1
  7445  003EF0  C093  F062         	movff	utoa@n+2,___lomod@dividend+2
  7446  003EF4  C094  F063         	movff	utoa@n+3,___lomod@dividend+3
  7447  003EF8  C095  F064         	movff	utoa@n+4,___lomod@dividend+4
  7448  003EFC  C096  F065         	movff	utoa@n+5,___lomod@dividend+5
  7449  003F00  C097  F066         	movff	utoa@n+6,___lomod@dividend+6
  7450  003F04  C098  F067         	movff	utoa@n+7,___lomod@dividend+7
  7451  003F08  0E0A               	movlw	10
  7452  003F0A  6F68               	movwf	___lomod@divisor& (0+255),b
  7453  003F0C  0E00               	movlw	0
  7454  003F0E  6F69               	movwf	(___lomod@divisor+1)& (0+255),b
  7455  003F10  0E00               	movlw	0
  7456  003F12  6F6A               	movwf	(___lomod@divisor+2)& (0+255),b
  7457  003F14  0E00               	movlw	0
  7458  003F16  6F6B               	movwf	(___lomod@divisor+3)& (0+255),b
  7459  003F18  0E00               	movlw	0
  7460  003F1A  6F6C               	movwf	(___lomod@divisor+4)& (0+255),b
  7461  003F1C  0E00               	movlw	0
  7462  003F1E  6F6D               	movwf	(___lomod@divisor+5)& (0+255),b
  7463  003F20  0E00               	movlw	0
  7464  003F22  6F6E               	movwf	(___lomod@divisor+6)& (0+255),b
  7465  003F24  0E00               	movlw	0
  7466  003F26  6F6F               	movwf	(___lomod@divisor+7)& (0+255),b
  7467  003F28  ECA1  F02B         	call	___lomod	;wreg free
  7468  003F2C  C060  F085         	movff	?___lomod,??_utoa
  7469  003F30  C061  F086         	movff	?___lomod+1,??_utoa+1
  7470  003F34  C062  F087         	movff	?___lomod+2,??_utoa+2
  7471  003F38  C063  F088         	movff	?___lomod+3,??_utoa+3
  7472  003F3C  C064  F089         	movff	?___lomod+4,??_utoa+4
  7473  003F40  C065  F08A         	movff	?___lomod+5,??_utoa+5
  7474  003F44  C066  F08B         	movff	?___lomod+6,??_utoa+6
  7475  003F48  C067  F08C         	movff	?___lomod+7,??_utoa+7
  7476  003F4C  0100               	movlb	0	; () banked
  7477  003F4E  5185               	movf	??_utoa& (0+255),w,b
  7478  003F50  0F30               	addlw	48
  7479  003F52  6EDF               	movwf	indf2,c
  7480  003F54                     
  7481                           ; BSR set to: 0
  7482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7483  003F54  078D               	decf	utoa@p& (0+255),f,b
  7484  003F56  A0D8               	btfss	status,0,c
  7485  003F58  078E               	decf	(utoa@p+1)& (0+255),f,b
  7486  003F5A                     
  7487                           ; BSR set to: 0
  7488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7489  003F5A  078F               	decf	utoa@w& (0+255),f,b
  7490  003F5C  A0D8               	btfss	status,0,c
  7491  003F5E  0790               	decf	(utoa@w+1)& (0+255),f,b
  7492  003F60                     
  7493                           ; BSR set to: 0
  7494                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7495  003F60  C091  F060         	movff	utoa@n,___lodiv@dividend
  7496  003F64  C092  F061         	movff	utoa@n+1,___lodiv@dividend+1
  7497  003F68  C093  F062         	movff	utoa@n+2,___lodiv@dividend+2
  7498  003F6C  C094  F063         	movff	utoa@n+3,___lodiv@dividend+3
  7499  003F70  C095  F064         	movff	utoa@n+4,___lodiv@dividend+4
  7500  003F74  C096  F065         	movff	utoa@n+5,___lodiv@dividend+5
  7501  003F78  C097  F066         	movff	utoa@n+6,___lodiv@dividend+6
  7502  003F7C  C098  F067         	movff	utoa@n+7,___lodiv@dividend+7
  7503  003F80  0E0A               	movlw	10
  7504  003F82  6F68               	movwf	___lodiv@divisor& (0+255),b
  7505  003F84  0E00               	movlw	0
  7506  003F86  6F69               	movwf	(___lodiv@divisor+1)& (0+255),b
  7507  003F88  0E00               	movlw	0
  7508  003F8A  6F6A               	movwf	(___lodiv@divisor+2)& (0+255),b
  7509  003F8C  0E00               	movlw	0
  7510  003F8E  6F6B               	movwf	(___lodiv@divisor+3)& (0+255),b
  7511  003F90  0E00               	movlw	0
  7512  003F92  6F6C               	movwf	(___lodiv@divisor+4)& (0+255),b
  7513  003F94  0E00               	movlw	0
  7514  003F96  6F6D               	movwf	(___lodiv@divisor+5)& (0+255),b
  7515  003F98  0E00               	movlw	0
  7516  003F9A  6F6E               	movwf	(___lodiv@divisor+6)& (0+255),b
  7517  003F9C  0E00               	movlw	0
  7518  003F9E  6F6F               	movwf	(___lodiv@divisor+7)& (0+255),b
  7519  003FA0  EC28  F02B         	call	___lodiv	;wreg free
  7520  003FA4  C060  F091         	movff	?___lodiv,utoa@n
  7521  003FA8  C061  F092         	movff	?___lodiv+1,utoa@n+1
  7522  003FAC  C062  F093         	movff	?___lodiv+2,utoa@n+2
  7523  003FB0  C063  F094         	movff	?___lodiv+3,utoa@n+3
  7524  003FB4  C064  F095         	movff	?___lodiv+4,utoa@n+4
  7525  003FB8  C065  F096         	movff	?___lodiv+5,utoa@n+5
  7526  003FBC  C066  F097         	movff	?___lodiv+6,utoa@n+6
  7527  003FC0  C067  F098         	movff	?___lodiv+7,utoa@n+7
  7528  003FC4                     l9095:
  7529                           
  7530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7531  003FC4  0100               	movlb	0	; () banked
  7532  003FC6  5199               	movf	utoa@i& (0+255),w,b
  7533  003FC8  119A               	iorwf	(utoa@i+1)& (0+255),w,b
  7534  003FCA  B4D8               	btfsc	status,2,c
  7535  003FCC  EFEA  F01F         	goto	u11711
  7536  003FD0  EFEC  F01F         	goto	u11710
  7537  003FD4                     u11711:
  7538  003FD4  EF1C  F020         	goto	l9105
  7539  003FD8                     u11710:
  7540  003FD8                     
  7541                           ; BSR set to: 0
  7542  003FD8  5191               	movf	utoa@n& (0+255),w,b
  7543  003FDA  1192               	iorwf	(utoa@n+1)& (0+255),w,b
  7544  003FDC  1193               	iorwf	(utoa@n+2)& (0+255),w,b
  7545  003FDE  1194               	iorwf	(utoa@n+3)& (0+255),w,b
  7546  003FE0  1195               	iorwf	(utoa@n+4)& (0+255),w,b
  7547  003FE2  1196               	iorwf	(utoa@n+5)& (0+255),w,b
  7548  003FE4  1197               	iorwf	(utoa@n+6)& (0+255),w,b
  7549  003FE6  1198               	iorwf	(utoa@n+7)& (0+255),w,b
  7550  003FE8  A4D8               	btfss	status,2,c
  7551  003FEA  EFF9  F01F         	goto	u11721
  7552  003FEE  EFFB  F01F         	goto	u11720
  7553  003FF2                     u11721:
  7554  003FF2  EF6B  F01F         	goto	l9085
  7555  003FF6                     u11720:
  7556  003FF6                     
  7557                           ; BSR set to: 0
  7558  003FF6  BF8E               	btfsc	(utoa@p+1)& (0+255),7,b
  7559  003FF8  EF08  F020         	goto	u11730
  7560  003FFC  518E               	movf	(utoa@p+1)& (0+255),w,b
  7561  003FFE  E106               	bnz	u11731
  7562  004000  058D               	decf	utoa@p& (0+255),w,b
  7563  004002  B0D8               	btfsc	status,0,c
  7564  004004  EF06  F020         	goto	u11731
  7565  004008  EF08  F020         	goto	u11730
  7566  00400C                     u11731:
  7567  00400C  EF6B  F01F         	goto	l9085
  7568  004010                     u11730:
  7569  004010                     
  7570                           ; BSR set to: 0
  7571  004010  BF90               	btfsc	(utoa@w+1)& (0+255),7,b
  7572  004012  EF13  F020         	goto	u11741
  7573  004016  5190               	movf	(utoa@w+1)& (0+255),w,b
  7574  004018  E108               	bnz	u11740
  7575  00401A  058F               	decf	utoa@w& (0+255),w,b
  7576  00401C  A0D8               	btfss	status,0,c
  7577  00401E  EF13  F020         	goto	u11741
  7578  004022  EF15  F020         	goto	u11740
  7579  004026                     u11741:
  7580  004026  EF1C  F020         	goto	l9105
  7581  00402A                     u11740:
  7582  00402A                     
  7583                           ; BSR set to: 0
  7584  00402A  B239               	btfsc	_flags^0,1,c
  7585  00402C  EF1A  F020         	goto	u11751
  7586  004030  EF1C  F020         	goto	u11750
  7587  004034                     u11751:
  7588  004034  EF6B  F01F         	goto	l9085
  7589  004038                     u11750:
  7590  004038                     l9105:
  7591                           
  7592                           ; BSR set to: 0
  7593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7594  004038  C07B  F070         	movff	utoa@fp,pad@fp
  7595  00403C  C07C  F071         	movff	utoa@fp+1,pad@fp+1
  7596  004040  0E6C               	movlw	low _dbuf
  7597  004042  2599               	addwf	utoa@i& (0+255),w,b
  7598  004044  6F72               	movwf	pad@buf& (0+255),b
  7599  004046  0E01               	movlw	high _dbuf
  7600  004048  219A               	addwfc	(utoa@i+1)& (0+255),w,b
  7601  00404A  6F73               	movwf	(pad@buf+1)& (0+255),b
  7602  00404C  C08F  F074         	movff	utoa@w,pad@p
  7603  004050  C090  F075         	movff	utoa@w+1,pad@p+1
  7604  004054  EC70  F02C         	call	_pad	;wreg free
  7605  004058  C070  F07B         	movff	?_pad,?_utoa
  7606  00405C  C071  F07C         	movff	?_pad+1,?_utoa+1
  7607  004060  0012               	return		;funcret
  7608  004062                     __end_of_utoa:
  7609                           	opt callstack 0
  7610                           
  7611 ;; *************** function ___lomod *****************
  7612 ;; Defined at:
  7613 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7616 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  counter         1   16[BANK0 ] unsigned char 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  8    0[BANK0 ] unsigned long long 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7628 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7631 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7632 ;;Total ram usage:       17 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    5
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_utoa
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text10
  7643  005742                     __ptext10:
  7644                           	opt callstack 0
  7645  005742                     ___lomod:
  7646                           	opt callstack 20
  7647  005742  0100               	movlb	0	; () banked
  7648  005744  5168               	movf	___lomod@divisor& (0+255),w,b
  7649  005746  1169               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  7650  005748  116A               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  7651  00574A  116B               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  7652  00574C  116C               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  7653  00574E  116D               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  7654  005750  116E               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  7655  005752  116F               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  7656  005754  B4D8               	btfsc	status,2,c
  7657  005756  EFAF  F02B         	goto	u10761
  7658  00575A  EFB1  F02B         	goto	u10760
  7659  00575E                     u10761:
  7660  00575E  EFF9  F02B         	goto	l1342
  7661  005762                     u10760:
  7662  005762                     
  7663                           ; BSR set to: 0
  7664  005762  0E01               	movlw	1
  7665  005764  6F70               	movwf	___lomod@counter& (0+255),b
  7666  005766  EFBF  F02B         	goto	l8579
  7667  00576A                     l8577:
  7668                           
  7669                           ; BSR set to: 0
  7670  00576A  90D8               	bcf	status,0,c
  7671  00576C  3768               	rlcf	___lomod@divisor& (0+255),f,b
  7672  00576E  3769               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  7673  005770  376A               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  7674  005772  376B               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  7675  005774  376C               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  7676  005776  376D               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  7677  005778  376E               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  7678  00577A  376F               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  7679  00577C  2B70               	incf	___lomod@counter& (0+255),f,b
  7680  00577E                     l8579:
  7681                           
  7682                           ; BSR set to: 0
  7683  00577E  AF6F               	btfss	(___lomod@divisor+7)& (0+255),7,b
  7684  005780  EFC4  F02B         	goto	u10771
  7685  005784  EFC6  F02B         	goto	u10770
  7686  005788                     u10771:
  7687  005788  EFB5  F02B         	goto	l8577
  7688  00578C                     u10770:
  7689  00578C                     l8581:
  7690                           
  7691                           ; BSR set to: 0
  7692  00578C  5168               	movf	___lomod@divisor& (0+255),w,b
  7693  00578E  5D60               	subwf	___lomod@dividend& (0+255),w,b
  7694  005790  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7695  005792  5961               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  7696  005794  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7697  005796  5962               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  7698  005798  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7699  00579A  5963               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  7700  00579C  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7701  00579E  5964               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  7702  0057A0  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7703  0057A2  5965               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  7704  0057A4  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7705  0057A6  5966               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  7706  0057A8  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7707  0057AA  5967               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  7708  0057AC  A0D8               	btfss	status,0,c
  7709  0057AE  EFDB  F02B         	goto	u10781
  7710  0057B2  EFDD  F02B         	goto	u10780
  7711  0057B6                     u10781:
  7712  0057B6  EFED  F02B         	goto	l8585
  7713  0057BA                     u10780:
  7714  0057BA                     
  7715                           ; BSR set to: 0
  7716  0057BA  5168               	movf	___lomod@divisor& (0+255),w,b
  7717  0057BC  5F60               	subwf	___lomod@dividend& (0+255),f,b
  7718  0057BE  5169               	movf	(___lomod@divisor+1)& (0+255),w,b
  7719  0057C0  5B61               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  7720  0057C2  516A               	movf	(___lomod@divisor+2)& (0+255),w,b
  7721  0057C4  5B62               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  7722  0057C6  516B               	movf	(___lomod@divisor+3)& (0+255),w,b
  7723  0057C8  5B63               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  7724  0057CA  516C               	movf	(___lomod@divisor+4)& (0+255),w,b
  7725  0057CC  5B64               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  7726  0057CE  516D               	movf	(___lomod@divisor+5)& (0+255),w,b
  7727  0057D0  5B65               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  7728  0057D2  516E               	movf	(___lomod@divisor+6)& (0+255),w,b
  7729  0057D4  5B66               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  7730  0057D6  516F               	movf	(___lomod@divisor+7)& (0+255),w,b
  7731  0057D8  5B67               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  7732  0057DA                     l8585:
  7733                           
  7734                           ; BSR set to: 0
  7735  0057DA  90D8               	bcf	status,0,c
  7736  0057DC  336F               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  7737  0057DE  336E               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  7738  0057E0  336D               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  7739  0057E2  336C               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  7740  0057E4  336B               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  7741  0057E6  336A               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  7742  0057E8  3369               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  7743  0057EA  3368               	rrcf	___lomod@divisor& (0+255),f,b
  7744  0057EC                     
  7745                           ; BSR set to: 0
  7746  0057EC  2F70               	decfsz	___lomod@counter& (0+255),f,b
  7747  0057EE  EFC6  F02B         	goto	l8581
  7748  0057F2                     l1342:
  7749                           
  7750                           ; BSR set to: 0
  7751  0057F2  C060  F060         	movff	___lomod@dividend,?___lomod
  7752  0057F6  C061  F061         	movff	___lomod@dividend+1,?___lomod+1
  7753  0057FA  C062  F062         	movff	___lomod@dividend+2,?___lomod+2
  7754  0057FE  C063  F063         	movff	___lomod@dividend+3,?___lomod+3
  7755  005802  C064  F064         	movff	___lomod@dividend+4,?___lomod+4
  7756  005806  C065  F065         	movff	___lomod@dividend+5,?___lomod+5
  7757  00580A  C066  F066         	movff	___lomod@dividend+6,?___lomod+6
  7758  00580E  C067  F067         	movff	___lomod@dividend+7,?___lomod+7
  7759  005812                     
  7760                           ; BSR set to: 0
  7761  005812  0012               	return		;funcret
  7762  005814                     __end_of___lomod:
  7763                           	opt callstack 0
  7764                           
  7765 ;; *************** function ___lodiv *****************
  7766 ;; Defined at:
  7767 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  dividend        8    0[BANK0 ] unsigned long long 
  7770 ;;  divisor         8    8[BANK0 ] unsigned long long 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  quotient        8   16[BANK0 ] unsigned long long 
  7773 ;;  counter         1   24[BANK0 ] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  8    0[BANK0 ] unsigned long long 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7783 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7787 ;;Total ram usage:       25 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    5
  7790 ;; This function calls:
  7791 ;;		Nothing
  7792 ;; This function is called by:
  7793 ;;		_utoa
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text11
  7798  005650                     __ptext11:
  7799                           	opt callstack 0
  7800  005650                     ___lodiv:
  7801                           	opt callstack 20
  7802  005650  EE20  F070         	lfsr	2,___lodiv@quotient
  7803  005654  0E07               	movlw	7
  7804  005656                     u10721:
  7805  005656  6ADE               	clrf	postinc2,c
  7806  005658  06E8               	decf	wreg,f,c
  7807  00565A  E2FD               	bc	u10721
  7808  00565C  0100               	movlb	0	; () banked
  7809  00565E  5168               	movf	___lodiv@divisor& (0+255),w,b
  7810  005660  1169               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  7811  005662  116A               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  7812  005664  116B               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  7813  005666  116C               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  7814  005668  116D               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  7815  00566A  116E               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  7816  00566C  116F               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  7817  00566E  B4D8               	btfsc	status,2,c
  7818  005670  EF3C  F02B         	goto	u10731
  7819  005674  EF3E  F02B         	goto	u10730
  7820  005678                     u10731:
  7821  005678  EF90  F02B         	goto	l1332
  7822  00567C                     u10730:
  7823  00567C                     
  7824                           ; BSR set to: 0
  7825  00567C  0E01               	movlw	1
  7826  00567E  6F78               	movwf	___lodiv@counter& (0+255),b
  7827  005680  EF4C  F02B         	goto	l8559
  7828  005684                     l8557:
  7829                           
  7830                           ; BSR set to: 0
  7831  005684  90D8               	bcf	status,0,c
  7832  005686  3768               	rlcf	___lodiv@divisor& (0+255),f,b
  7833  005688  3769               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  7834  00568A  376A               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  7835  00568C  376B               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  7836  00568E  376C               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  7837  005690  376D               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  7838  005692  376E               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  7839  005694  376F               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  7840  005696  2B78               	incf	___lodiv@counter& (0+255),f,b
  7841  005698                     l8559:
  7842                           
  7843                           ; BSR set to: 0
  7844  005698  AF6F               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  7845  00569A  EF51  F02B         	goto	u10741
  7846  00569E  EF53  F02B         	goto	u10740
  7847  0056A2                     u10741:
  7848  0056A2  EF42  F02B         	goto	l8557
  7849  0056A6                     u10740:
  7850  0056A6                     l8561:
  7851                           
  7852                           ; BSR set to: 0
  7853  0056A6  90D8               	bcf	status,0,c
  7854  0056A8  3770               	rlcf	___lodiv@quotient& (0+255),f,b
  7855  0056AA  3771               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  7856  0056AC  3772               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  7857  0056AE  3773               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  7858  0056B0  3774               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  7859  0056B2  3775               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  7860  0056B4  3776               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  7861  0056B6  3777               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  7862  0056B8                     
  7863                           ; BSR set to: 0
  7864  0056B8  5168               	movf	___lodiv@divisor& (0+255),w,b
  7865  0056BA  5D60               	subwf	___lodiv@dividend& (0+255),w,b
  7866  0056BC  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7867  0056BE  5961               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  7868  0056C0  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7869  0056C2  5962               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  7870  0056C4  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7871  0056C6  5963               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  7872  0056C8  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7873  0056CA  5964               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  7874  0056CC  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7875  0056CE  5965               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  7876  0056D0  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7877  0056D2  5966               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  7878  0056D4  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7879  0056D6  5967               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  7880  0056D8  A0D8               	btfss	status,0,c
  7881  0056DA  EF71  F02B         	goto	u10751
  7882  0056DE  EF73  F02B         	goto	u10750
  7883  0056E2                     u10751:
  7884  0056E2  EF84  F02B         	goto	l8569
  7885  0056E6                     u10750:
  7886  0056E6                     
  7887                           ; BSR set to: 0
  7888  0056E6  5168               	movf	___lodiv@divisor& (0+255),w,b
  7889  0056E8  5F60               	subwf	___lodiv@dividend& (0+255),f,b
  7890  0056EA  5169               	movf	(___lodiv@divisor+1)& (0+255),w,b
  7891  0056EC  5B61               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  7892  0056EE  516A               	movf	(___lodiv@divisor+2)& (0+255),w,b
  7893  0056F0  5B62               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  7894  0056F2  516B               	movf	(___lodiv@divisor+3)& (0+255),w,b
  7895  0056F4  5B63               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  7896  0056F6  516C               	movf	(___lodiv@divisor+4)& (0+255),w,b
  7897  0056F8  5B64               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  7898  0056FA  516D               	movf	(___lodiv@divisor+5)& (0+255),w,b
  7899  0056FC  5B65               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  7900  0056FE  516E               	movf	(___lodiv@divisor+6)& (0+255),w,b
  7901  005700  5B66               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  7902  005702  516F               	movf	(___lodiv@divisor+7)& (0+255),w,b
  7903  005704  5B67               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  7904  005706                     
  7905                           ; BSR set to: 0
  7906  005706  8170               	bsf	___lodiv@quotient& (0+255),0,b
  7907  005708                     l8569:
  7908                           
  7909                           ; BSR set to: 0
  7910  005708  90D8               	bcf	status,0,c
  7911  00570A  336F               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  7912  00570C  336E               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  7913  00570E  336D               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  7914  005710  336C               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  7915  005712  336B               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  7916  005714  336A               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  7917  005716  3369               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  7918  005718  3368               	rrcf	___lodiv@divisor& (0+255),f,b
  7919  00571A                     
  7920                           ; BSR set to: 0
  7921  00571A  2F78               	decfsz	___lodiv@counter& (0+255),f,b
  7922  00571C  EF53  F02B         	goto	l8561
  7923  005720                     l1332:
  7924                           
  7925                           ; BSR set to: 0
  7926  005720  C070  F060         	movff	___lodiv@quotient,?___lodiv
  7927  005724  C071  F061         	movff	___lodiv@quotient+1,?___lodiv+1
  7928  005728  C072  F062         	movff	___lodiv@quotient+2,?___lodiv+2
  7929  00572C  C073  F063         	movff	___lodiv@quotient+3,?___lodiv+3
  7930  005730  C074  F064         	movff	___lodiv@quotient+4,?___lodiv+4
  7931  005734  C075  F065         	movff	___lodiv@quotient+5,?___lodiv+5
  7932  005738  C076  F066         	movff	___lodiv@quotient+6,?___lodiv+6
  7933  00573C  C077  F067         	movff	___lodiv@quotient+7,?___lodiv+7
  7934  005740                     
  7935                           ; BSR set to: 0
  7936  005740  0012               	return		;funcret
  7937  005742                     __end_of___lodiv:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _strncmp *****************
  7941 ;; Defined at:
  7942 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  7945 ;;		 -> vfpfcnvrt@ct(3), STR_4(20), STR_3(14), 
  7946 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  7947 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7948 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7949 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7950 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7951 ;;		 -> STR_37(3), STR_33(3), STR_28(3), STR_24(3), 
  7952 ;;		 -> STR_19(4), STR_15(4), 
  7953 ;;  n               2    4[BANK0 ] unsigned int 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  7956 ;;		 -> STR_114(3), STR_110(3), STR_105(3), STR_101(3), 
  7957 ;;		 -> STR_96(4), STR_92(4), STR_87(3), STR_82(3), 
  7958 ;;		 -> STR_77(4), STR_72(3), STR_67(3), STR_62(4), 
  7959 ;;		 -> STR_57(3), STR_52(3), STR_47(4), STR_42(3), 
  7960 ;;		 -> STR_37(3), STR_33(3), STR_28(3), STR_24(3), 
  7961 ;;		 -> STR_19(4), STR_15(4), 
  7962 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  7963 ;;		 -> vfpfcnvrt@ct(3), STR_4(20), STR_3(14), 
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  2    0[BANK0 ] int 
  7966 ;; Registers used:
  7967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7973 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7974 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7975 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7976 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7977 ;;Total ram usage:       11 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    5
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_vfpfcnvrt
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text12
  7988  004FDC                     __ptext12:
  7989                           	opt callstack 0
  7990  004FDC                     _strncmp:
  7991                           	opt callstack 21
  7992  004FDC  C060  F067         	movff	strncmp@_l,strncmp@l
  7993  004FE0  C061  F068         	movff	strncmp@_l+1,strncmp@l+1
  7994  004FE4  C062  F069         	movff	strncmp@_r,strncmp@r
  7995  004FE8  C063  F06A         	movff	strncmp@_r+1,strncmp@r+1
  7996  004FEC  0100               	movlb	0	; () banked
  7997  004FEE  0764               	decf	strncmp@n& (0+255),f,b
  7998  004FF0  A0D8               	btfss	status,0,c
  7999  004FF2  0765               	decf	(strncmp@n+1)& (0+255),f,b
  8000  004FF4  2964               	incf	strncmp@n& (0+255),w,b
  8001  004FF6  E106               	bnz	u12001
  8002  004FF8  2965               	incf	(strncmp@n+1)& (0+255),w,b
  8003  004FFA  A4D8               	btfss	status,2,c
  8004  004FFC  EF02  F028         	goto	u12001
  8005  005000  EF04  F028         	goto	u12000
  8006  005004                     u12001:
  8007  005004  EF12  F028         	goto	l9225
  8008  005008                     u12000:
  8009  005008                     
  8010                           ; BSR set to: 0
  8011  005008  0E00               	movlw	0
  8012  00500A  6F61               	movwf	(?_strncmp+1)& (0+255),b
  8013  00500C  0E00               	movlw	0
  8014  00500E  6F60               	movwf	?_strncmp& (0+255),b
  8015  005010  EF84  F028         	goto	l1699
  8016  005014                     l9223:
  8017  005014  0100               	movlb	0	; () banked
  8018  005016  4B67               	infsnz	strncmp@l& (0+255),f,b
  8019  005018  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  8020  00501A  4B69               	infsnz	strncmp@r& (0+255),f,b
  8021  00501C  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  8022  00501E  0764               	decf	strncmp@n& (0+255),f,b
  8023  005020  A0D8               	btfss	status,0,c
  8024  005022  0765               	decf	(strncmp@n+1)& (0+255),f,b
  8025  005024                     l9225:
  8026                           
  8027                           ; BSR set to: 0
  8028  005024  C067  FFF6         	movff	strncmp@l,tblptrl
  8029  005028  C068  FFF7         	movff	strncmp@l+1,tblptrh
  8030  00502C  0E00               	movlw	low (__mediumconst shr (0+16))
  8031  00502E  6EF8               	movwf	tblptru,c
  8032  005030  0E0E               	movlw	(high __ramtop+-1)
  8033  005032  64F7               	cpfsgt	tblptrh,c
  8034  005034  D003               	bra	u12017
  8035  005036  0008               	tblrd		*
  8036  005038  50F5               	movf	tablat,w,c
  8037  00503A  D005               	bra	u12010
  8038  00503C                     u12017:
  8039  00503C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8040  005040  CFF7 FFE2          	movff	tblptrh,fsr1h
  8041  005044  50E7               	movf	indf1,w,c
  8042  005046                     u12010:
  8043  005046  0900               	iorlw	0
  8044  005048  B4D8               	btfsc	status,2,c
  8045  00504A  EF29  F028         	goto	u12021
  8046  00504E  EF2B  F028         	goto	u12020
  8047  005052                     u12021:
  8048  005052  EF65  F028         	goto	l9233
  8049  005056                     u12020:
  8050  005056  C069  FFF6         	movff	strncmp@r,tblptrl
  8051  00505A  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  8052  00505E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8053  00505E  6AF8               	clrf	tblptru,c
  8054  005060                     	endif
  8055  005060                     	if	0	;tblptru may be non-zero
  8056  005060                     	endif
  8057  005060  0008               	tblrd		*
  8058  005062  50F5               	movf	tablat,w,c
  8059  005064  0900               	iorlw	0
  8060  005066  B4D8               	btfsc	status,2,c
  8061  005068  EF38  F028         	goto	u12031
  8062  00506C  EF3A  F028         	goto	u12030
  8063  005070                     u12031:
  8064  005070  EF65  F028         	goto	l9233
  8065  005074                     u12030:
  8066  005074  0100               	movlb	0	; () banked
  8067  005076  5164               	movf	strncmp@n& (0+255),w,b
  8068  005078  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  8069  00507A  B4D8               	btfsc	status,2,c
  8070  00507C  EF42  F028         	goto	u12041
  8071  005080  EF44  F028         	goto	u12040
  8072  005084                     u12041:
  8073  005084  EF65  F028         	goto	l9233
  8074  005088                     u12040:
  8075  005088                     
  8076                           ; BSR set to: 0
  8077  005088  C069  FFF6         	movff	strncmp@r,tblptrl
  8078  00508C  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  8079  005090                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8080  005090  6AF8               	clrf	tblptru,c
  8081  005092                     	endif
  8082  005092                     	if	0	;tblptru may be non-zero
  8083  005092                     	endif
  8084  005092  0008               	tblrd		*
  8085  005094  CFF5 F066          	movff	tablat,??_strncmp
  8086  005098  C067  FFF6         	movff	strncmp@l,tblptrl
  8087  00509C  C068  FFF7         	movff	strncmp@l+1,tblptrh
  8088  0050A0  0E00               	movlw	low (__mediumconst shr (0+16))
  8089  0050A2  6EF8               	movwf	tblptru,c
  8090  0050A4  0E0E               	movlw	(high __ramtop+-1)
  8091  0050A6  64F7               	cpfsgt	tblptrh,c
  8092  0050A8  D003               	bra	u12057
  8093  0050AA  0008               	tblrd		*
  8094  0050AC  50F5               	movf	tablat,w,c
  8095  0050AE  D005               	bra	u12055
  8096  0050B0                     u12057:
  8097  0050B0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8098  0050B4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8099  0050B8  50E7               	movf	indf1,w,c
  8100  0050BA                     u12055:
  8101  0050BA  1966               	xorwf	??_strncmp& (0+255),w,b
  8102  0050BC  B4D8               	btfsc	status,2,c
  8103  0050BE  EF63  F028         	goto	u12051
  8104  0050C2  EF65  F028         	goto	u12050
  8105  0050C6                     u12051:
  8106  0050C6  EF0A  F028         	goto	l9223
  8107  0050CA                     u12050:
  8108  0050CA                     l9233:
  8109  0050CA  C067  FFF6         	movff	strncmp@l,tblptrl
  8110  0050CE  C068  FFF7         	movff	strncmp@l+1,tblptrh
  8111  0050D2  0E00               	movlw	low (__mediumconst shr (0+16))
  8112  0050D4  6EF8               	movwf	tblptru,c
  8113  0050D6  0E0E               	movlw	(high __ramtop+-1)
  8114  0050D8  64F7               	cpfsgt	tblptrh,c
  8115  0050DA  D003               	bra	u12067
  8116  0050DC  0008               	tblrd		*
  8117  0050DE  50F5               	movf	tablat,w,c
  8118  0050E0  D005               	bra	u12060
  8119  0050E2                     u12067:
  8120  0050E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8121  0050E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8122  0050EA  50E7               	movf	indf1,w,c
  8123  0050EC                     u12060:
  8124  0050EC  0100               	movlb	0	; () banked
  8125  0050EE  6F66               	movwf	??_strncmp& (0+255),b
  8126  0050F0  C069  FFF6         	movff	strncmp@r,tblptrl
  8127  0050F4  C06A  FFF7         	movff	strncmp@r+1,tblptrh
  8128  0050F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8129  0050F8  6AF8               	clrf	tblptru,c
  8130  0050FA                     	endif
  8131  0050FA                     	if	0	;tblptru may be non-zero
  8132  0050FA                     	endif
  8133  0050FA  0008               	tblrd		*
  8134  0050FC  50F5               	movf	tablat,w,c
  8135  0050FE  5D66               	subwf	??_strncmp& (0+255),w,b
  8136  005100  6F60               	movwf	?_strncmp& (0+255),b
  8137  005102  6B61               	clrf	(?_strncmp+1)& (0+255),b
  8138  005104  A0D8               	btfss	status,0,c
  8139  005106  0761               	decf	(?_strncmp+1)& (0+255),f,b
  8140  005108                     l1699:
  8141                           
  8142                           ; BSR set to: 0
  8143  005108  0012               	return		;funcret
  8144  00510A                     __end_of_strncmp:
  8145                           	opt callstack 0
  8146                           
  8147 ;; *************** function _stoa *****************
  8148 ;; Defined at:
  8149 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  8152 ;;		 -> vsnprintf@f(6), 
  8153 ;;  s               2   11[BANK0 ] PTR unsigned char 
  8154 ;;		 -> ?_snprintf(2), ticks(2), 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  nuls            7   14[BANK0 ] unsigned char [7]
  8157 ;;  l               2   29[BANK0 ] int 
  8158 ;;  p               2   27[BANK0 ] int 
  8159 ;;  cp              2   25[BANK0 ] PTR unsigned char 
  8160 ;;		 -> ?_snprintf(2), stoa@nuls(7), ticks(2), 
  8161 ;;  w               2   23[BANK0 ] int 
  8162 ;;  i               2   21[BANK0 ] int 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2    9[BANK0 ] int 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8172 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8173 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8175 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8176 ;;Total ram usage:       22 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    7
  8179 ;; This function calls:
  8180 ;;		_fputc
  8181 ;;		_strlen
  8182 ;; This function is called by:
  8183 ;;		_vfpfcnvrt
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text13
  8188  00473A                     __ptext13:
  8189                           	opt callstack 0
  8190  00473A                     _stoa:
  8191                           	opt callstack 19
  8192  00473A                     
  8193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8194  00473A  EE20  F049         	lfsr	2,stoa@F1174
  8195  00473E  EE10  F06E         	lfsr	1,stoa@nuls
  8196  004742  0E06               	movlw	6
  8197  004744                     u11601:
  8198  004744  CFDB FFE3          	movff	plusw2,plusw1
  8199  004748  06E8               	decf	wreg,f,c
  8200  00474A  E2FC               	bc	u11601
  8201  00474C                     
  8202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8203  00474C  C06B  F079         	movff	stoa@s,stoa@cp
  8204  004750  C06C  F07A         	movff	stoa@s+1,stoa@cp+1
  8205  004754                     
  8206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8207  004754  0100               	movlb	0	; () banked
  8208  004756  5179               	movf	stoa@cp& (0+255),w,b
  8209  004758  117A               	iorwf	(stoa@cp+1)& (0+255),w,b
  8210  00475A  A4D8               	btfss	status,2,c
  8211  00475C  EFB2  F023         	goto	u11611
  8212  004760  EFB4  F023         	goto	u11610
  8213  004764                     u11611:
  8214  004764  EFB8  F023         	goto	l9039
  8215  004768                     u11610:
  8216  004768                     
  8217                           ; BSR set to: 0
  8218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8219  004768  0E6E               	movlw	low stoa@nuls
  8220  00476A  6F79               	movwf	stoa@cp& (0+255),b
  8221  00476C  0E00               	movlw	high stoa@nuls
  8222  00476E  6F7A               	movwf	(stoa@cp+1)& (0+255),b
  8223  004770                     l9039:
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8227  004770  C079  F060         	movff	stoa@cp,strlen@s
  8228  004774  C07A  F061         	movff	stoa@cp+1,strlen@s+1
  8229  004778  EC80  F031         	call	_strlen	;wreg free
  8230  00477C  C060  F07D         	movff	?_strlen,stoa@l
  8231  004780  C061  F07E         	movff	?_strlen+1,stoa@l+1
  8232  004784                     
  8233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8234  004784  C0EF  F07B         	movff	_prec,stoa@p
  8235  004788  C0F0  F07C         	movff	_prec+1,stoa@p+1
  8236  00478C                     
  8237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8238  00478C  0100               	movlb	0	; () banked
  8239  00478E  BF7C               	btfsc	(stoa@p+1)& (0+255),7,b
  8240  004790  EFCC  F023         	goto	u11621
  8241  004794  EFCE  F023         	goto	u11620
  8242  004798                     u11621:
  8243  004798  EFE3  F023         	goto	l740
  8244  00479C                     u11620:
  8245  00479C                     
  8246                           ; BSR set to: 0
  8247  00479C  517D               	movf	stoa@l& (0+255),w,b
  8248  00479E  5D7B               	subwf	stoa@p& (0+255),w,b
  8249  0047A0  517C               	movf	(stoa@p+1)& (0+255),w,b
  8250  0047A2  0A80               	xorlw	128
  8251  0047A4  6F6D               	movwf	??_stoa& (0+255),b
  8252  0047A6  517E               	movf	(stoa@l+1)& (0+255),w,b
  8253  0047A8  0A80               	xorlw	128
  8254  0047AA  596D               	subwfb	??_stoa& (0+255),w,b
  8255  0047AC  A0D8               	btfss	status,0,c
  8256  0047AE  EFDB  F023         	goto	u11631
  8257  0047B2  EFDD  F023         	goto	u11630
  8258  0047B6                     u11631:
  8259  0047B6  EFDF  F023         	goto	l738
  8260  0047BA                     u11630:
  8261  0047BA  EFE3  F023         	goto	l740
  8262  0047BE                     l738:
  8263                           
  8264                           ; BSR set to: 0
  8265  0047BE  C07B  F07D         	movff	stoa@p,stoa@l
  8266  0047C2  C07C  F07E         	movff	stoa@p+1,stoa@l+1
  8267  0047C6                     l740:
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8271  0047C6  C07D  F07B         	movff	stoa@l,stoa@p
  8272  0047CA  C07E  F07C         	movff	stoa@l+1,stoa@p+1
  8273                           
  8274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8275  0047CE  C037  F077         	movff	_width,stoa@w
  8276  0047D2  C038  F078         	movff	_width+1,stoa@w+1
  8277                           
  8278                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8279  0047D6  B039               	btfsc	_flags^0,0,c
  8280  0047D8  EFF0  F023         	goto	u11641
  8281  0047DC  EFF2  F023         	goto	u11640
  8282  0047E0                     u11641:
  8283  0047E0  EF10  F024         	goto	l9055
  8284  0047E4                     u11640:
  8285  0047E4  EF01  F024         	goto	l9053
  8286  0047E8                     l9049:
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8290  0047E8  0E00               	movlw	0
  8291  0047EA  6F61               	movwf	(fputc@c+1)& (0+255),b
  8292  0047EC  0E20               	movlw	32
  8293  0047EE  6F60               	movwf	fputc@c& (0+255),b
  8294  0047F0  C069  F062         	movff	stoa@fp,fputc@fp
  8295  0047F4  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8296  0047F8  EC0A  F02C         	call	_fputc	;wreg free
  8297  0047FC                     
  8298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8299  0047FC  0100               	movlb	0	; () banked
  8300  0047FE  4B7D               	infsnz	stoa@l& (0+255),f,b
  8301  004800  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  8302  004802                     l9053:
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8306  004802  5177               	movf	stoa@w& (0+255),w,b
  8307  004804  5D7D               	subwf	stoa@l& (0+255),w,b
  8308  004806  517E               	movf	(stoa@l+1)& (0+255),w,b
  8309  004808  0A80               	xorlw	128
  8310  00480A  6F6D               	movwf	??_stoa& (0+255),b
  8311  00480C  5178               	movf	(stoa@w+1)& (0+255),w,b
  8312  00480E  0A80               	xorlw	128
  8313  004810  596D               	subwfb	??_stoa& (0+255),w,b
  8314  004812  A0D8               	btfss	status,0,c
  8315  004814  EF0E  F024         	goto	u11651
  8316  004818  EF10  F024         	goto	u11650
  8317  00481C                     u11651:
  8318  00481C  EFF4  F023         	goto	l9049
  8319  004820                     u11650:
  8320  004820                     l9055:
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8324  004820  0E00               	movlw	0
  8325  004822  6F76               	movwf	(stoa@i+1)& (0+255),b
  8326  004824  0E00               	movlw	0
  8327  004826  6F75               	movwf	stoa@i& (0+255),b
  8328                           
  8329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8330  004828  EF2A  F024         	goto	l9063
  8331  00482C                     l9057:
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8335  00482C  C079  FFD9         	movff	stoa@cp,fsr2l
  8336  004830  C07A  FFDA         	movff	stoa@cp+1,fsr2h
  8337  004834  50DF               	movf	indf2,w,c
  8338  004836  6F6D               	movwf	??_stoa& (0+255),b
  8339  004838  516D               	movf	??_stoa& (0+255),w,b
  8340  00483A  6F60               	movwf	fputc@c& (0+255),b
  8341  00483C  6B61               	clrf	(fputc@c+1)& (0+255),b
  8342  00483E  C069  F062         	movff	stoa@fp,fputc@fp
  8343  004842  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8344  004846  EC0A  F02C         	call	_fputc	;wreg free
  8345  00484A                     
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8347  00484A  0100               	movlb	0	; () banked
  8348  00484C  4B79               	infsnz	stoa@cp& (0+255),f,b
  8349  00484E  2B7A               	incf	(stoa@cp+1)& (0+255),f,b
  8350  004850                     
  8351                           ; BSR set to: 0
  8352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8353  004850  4B75               	infsnz	stoa@i& (0+255),f,b
  8354  004852  2B76               	incf	(stoa@i+1)& (0+255),f,b
  8355  004854                     l9063:
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8359  004854  517B               	movf	stoa@p& (0+255),w,b
  8360  004856  5D75               	subwf	stoa@i& (0+255),w,b
  8361  004858  5176               	movf	(stoa@i+1)& (0+255),w,b
  8362  00485A  0A80               	xorlw	128
  8363  00485C  6F6D               	movwf	??_stoa& (0+255),b
  8364  00485E  517C               	movf	(stoa@p+1)& (0+255),w,b
  8365  004860  0A80               	xorlw	128
  8366  004862  596D               	subwfb	??_stoa& (0+255),w,b
  8367  004864  A0D8               	btfss	status,0,c
  8368  004866  EF37  F024         	goto	u11661
  8369  00486A  EF39  F024         	goto	u11660
  8370  00486E                     u11661:
  8371  00486E  EF16  F024         	goto	l9057
  8372  004872                     u11660:
  8373  004872                     
  8374                           ; BSR set to: 0
  8375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8376  004872  A039               	btfss	_flags^0,0,c
  8377  004874  EF3E  F024         	goto	u11671
  8378  004878  EF40  F024         	goto	u11670
  8379  00487C                     u11671:
  8380  00487C  EF5E  F024         	goto	l750
  8381  004880                     u11670:
  8382  004880  EF4F  F024         	goto	l9071
  8383  004884                     l9067:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8387  004884  0E00               	movlw	0
  8388  004886  6F61               	movwf	(fputc@c+1)& (0+255),b
  8389  004888  0E20               	movlw	32
  8390  00488A  6F60               	movwf	fputc@c& (0+255),b
  8391  00488C  C069  F062         	movff	stoa@fp,fputc@fp
  8392  004890  C06A  F063         	movff	stoa@fp+1,fputc@fp+1
  8393  004894  EC0A  F02C         	call	_fputc	;wreg free
  8394  004898                     
  8395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8396  004898  0100               	movlb	0	; () banked
  8397  00489A  4B7D               	infsnz	stoa@l& (0+255),f,b
  8398  00489C  2B7E               	incf	(stoa@l+1)& (0+255),f,b
  8399  00489E                     l9071:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8403  00489E  5177               	movf	stoa@w& (0+255),w,b
  8404  0048A0  5D7D               	subwf	stoa@l& (0+255),w,b
  8405  0048A2  517E               	movf	(stoa@l+1)& (0+255),w,b
  8406  0048A4  0A80               	xorlw	128
  8407  0048A6  6F6D               	movwf	??_stoa& (0+255),b
  8408  0048A8  5178               	movf	(stoa@w+1)& (0+255),w,b
  8409  0048AA  0A80               	xorlw	128
  8410  0048AC  596D               	subwfb	??_stoa& (0+255),w,b
  8411  0048AE  A0D8               	btfss	status,0,c
  8412  0048B0  EF5C  F024         	goto	u11681
  8413  0048B4  EF5E  F024         	goto	u11680
  8414  0048B8                     u11681:
  8415  0048B8  EF42  F024         	goto	l9067
  8416  0048BC                     u11680:
  8417  0048BC                     l750:
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8421  0048BC  C07D  F069         	movff	stoa@l,?_stoa
  8422  0048C0  C07E  F06A         	movff	stoa@l+1,?_stoa+1
  8423  0048C4                     
  8424                           ; BSR set to: 0
  8425  0048C4  0012               	return		;funcret
  8426  0048C6                     __end_of_stoa:
  8427                           	opt callstack 0
  8428                           
  8429 ;; *************** function _otoa *****************
  8430 ;; Defined at:
  8431 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  8434 ;;		 -> vsnprintf@f(6), 
  8435 ;;  d               8   29[BANK0 ] unsigned long long 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  n               8   51[BANK0 ] unsigned long long 
  8438 ;;  i               2   59[BANK0 ] int 
  8439 ;;  w               2   49[BANK0 ] int 
  8440 ;;  t               2   47[BANK0 ] int 
  8441 ;;  p               2   45[BANK0 ] int 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  2   27[BANK0 ] int 
  8444 ;; Registers used:
  8445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8451 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8455 ;;Total ram usage:       34 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    9
  8458 ;; This function calls:
  8459 ;;		_pad
  8460 ;; This function is called by:
  8461 ;;		_vfpfcnvrt
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text14
  8466  004062                     __ptext14:
  8467                           	opt callstack 0
  8468  004062                     _otoa:
  8469                           	opt callstack 17
  8470  004062                     
  8471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8472  004062  0100               	movlb	0	; () banked
  8473  004064  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  8474  004066  EF37  F020         	goto	u11501
  8475  00406A  EF39  F020         	goto	u11500
  8476  00406E                     u11501:
  8477  00406E  EF3A  F020         	goto	l8987
  8478  004072                     u11500:
  8479  004072                     
  8480                           ; BSR set to: 0
  8481                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8482  004072  9239               	bcf	_flags^0,1,c
  8483  004074                     l8987:
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8487  004074  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  8488  004076  EF47  F020         	goto	u11510
  8489  00407A  51F0               	movf	(_prec+1)& (0+255),w,b
  8490  00407C  E106               	bnz	u11511
  8491  00407E  05EF               	decf	_prec& (0+255),w,b
  8492  004080  B0D8               	btfsc	status,0,c
  8493  004082  EF45  F020         	goto	u11511
  8494  004086  EF47  F020         	goto	u11510
  8495  00408A                     u11511:
  8496  00408A  EF4D  F020         	goto	l720
  8497  00408E                     u11510:
  8498  00408E                     
  8499                           ; BSR set to: 0
  8500  00408E  0E00               	movlw	0
  8501  004090  6F8E               	movwf	(otoa@p+1)& (0+255),b
  8502  004092  0E01               	movlw	1
  8503  004094  6F8D               	movwf	otoa@p& (0+255),b
  8504  004096  EF51  F020         	goto	l722
  8505  00409A                     l720:
  8506                           
  8507                           ; BSR set to: 0
  8508  00409A  C0EF  F08D         	movff	_prec,otoa@p
  8509  00409E  C0F0  F08E         	movff	_prec+1,otoa@p+1
  8510  0040A2                     l722:
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8514  0040A2  C037  F091         	movff	_width,otoa@w
  8515  0040A6  C038  F092         	movff	_width+1,otoa@w+1
  8516                           
  8517                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8518  0040AA  C07D  F093         	movff	otoa@d,otoa@n
  8519  0040AE  C07E  F094         	movff	otoa@d+1,otoa@n+1
  8520  0040B2  C07F  F095         	movff	otoa@d+2,otoa@n+2
  8521  0040B6  C080  F096         	movff	otoa@d+3,otoa@n+3
  8522  0040BA  C081  F097         	movff	otoa@d+4,otoa@n+4
  8523  0040BE  C082  F098         	movff	otoa@d+5,otoa@n+5
  8524  0040C2  C083  F099         	movff	otoa@d+6,otoa@n+6
  8525  0040C6  C084  F09A         	movff	otoa@d+7,otoa@n+7
  8526  0040CA                     
  8527                           ; BSR set to: 0
  8528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8529  0040CA  0E00               	movlw	0
  8530  0040CC  6F9C               	movwf	(otoa@i+1)& (0+255),b
  8531  0040CE  0E4F               	movlw	79
  8532  0040D0  6F9B               	movwf	otoa@i& (0+255),b
  8533  0040D2                     
  8534                           ; BSR set to: 0
  8535                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8536  0040D2  0E00               	movlw	0
  8537  0040D4  0101               	movlb	1	; () banked
  8538  0040D6  6FBB               	movwf	(_dbuf+79)& (0+255),b
  8539  0040D8                     
  8540                           ; BSR set to: 1
  8541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8542  0040D8  0E00               	movlw	0
  8543  0040DA  0100               	movlb	0	; () banked
  8544  0040DC  6F90               	movwf	(otoa@t+1)& (0+255),b
  8545  0040DE  0E00               	movlw	0
  8546  0040E0  6F8F               	movwf	otoa@t& (0+255),b
  8547                           
  8548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8549  0040E2  EFB8  F020         	goto	l9009
  8550  0040E6                     l8997:
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8554  0040E6  079B               	decf	otoa@i& (0+255),f,b
  8555  0040E8  A0D8               	btfss	status,0,c
  8556  0040EA  079C               	decf	(otoa@i+1)& (0+255),f,b
  8557  0040EC                     
  8558                           ; BSR set to: 0
  8559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8560  0040EC  0E07               	movlw	7
  8561  0040EE  1593               	andwf	otoa@n& (0+255),w,b
  8562  0040F0  6F8F               	movwf	otoa@t& (0+255),b
  8563  0040F2  6B90               	clrf	(otoa@t+1)& (0+255),b
  8564  0040F4                     
  8565                           ; BSR set to: 0
  8566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8567  0040F4  0E6C               	movlw	low _dbuf
  8568  0040F6  259B               	addwf	otoa@i& (0+255),w,b
  8569  0040F8  6ED9               	movwf	fsr2l,c
  8570  0040FA  0E01               	movlw	high _dbuf
  8571  0040FC  219C               	addwfc	(otoa@i+1)& (0+255),w,b
  8572  0040FE  6EDA               	movwf	fsr2h,c
  8573  004100  518F               	movf	otoa@t& (0+255),w,b
  8574  004102  0F30               	addlw	48
  8575  004104  6EDF               	movwf	indf2,c
  8576  004106                     
  8577                           ; BSR set to: 0
  8578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8579  004106  078D               	decf	otoa@p& (0+255),f,b
  8580  004108  A0D8               	btfss	status,0,c
  8581  00410A  078E               	decf	(otoa@p+1)& (0+255),f,b
  8582  00410C                     
  8583                           ; BSR set to: 0
  8584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8585  00410C  0791               	decf	otoa@w& (0+255),f,b
  8586  00410E  A0D8               	btfss	status,0,c
  8587  004110  0792               	decf	(otoa@w+1)& (0+255),f,b
  8588  004112                     
  8589                           ; BSR set to: 0
  8590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8591  004112  C093  F085         	movff	otoa@n,??_otoa
  8592  004116  C094  F086         	movff	otoa@n+1,??_otoa+1
  8593  00411A  C095  F087         	movff	otoa@n+2,??_otoa+2
  8594  00411E  C096  F088         	movff	otoa@n+3,??_otoa+3
  8595  004122  C097  F089         	movff	otoa@n+4,??_otoa+4
  8596  004126  C098  F08A         	movff	otoa@n+5,??_otoa+5
  8597  00412A  C099  F08B         	movff	otoa@n+6,??_otoa+6
  8598  00412E  C09A  F08C         	movff	otoa@n+7,??_otoa+7
  8599  004132  0E04               	movlw	4
  8600  004134  EFA5  F020         	goto	u11520
  8601  004138                     u11525:
  8602  004138  90D8               	bcf	status,0,c
  8603  00413A  338C               	rrcf	(??_otoa+7)& (0+255),f,b
  8604  00413C  338B               	rrcf	(??_otoa+6)& (0+255),f,b
  8605  00413E  338A               	rrcf	(??_otoa+5)& (0+255),f,b
  8606  004140  3389               	rrcf	(??_otoa+4)& (0+255),f,b
  8607  004142  3388               	rrcf	(??_otoa+3)& (0+255),f,b
  8608  004144  3387               	rrcf	(??_otoa+2)& (0+255),f,b
  8609  004146  3386               	rrcf	(??_otoa+1)& (0+255),f,b
  8610  004148  3385               	rrcf	??_otoa& (0+255),f,b
  8611  00414A                     u11520:
  8612  00414A  2EE8               	decfsz	wreg,f,c
  8613  00414C  EF9C  F020         	goto	u11525
  8614  004150  C085  F093         	movff	??_otoa,otoa@n
  8615  004154  C086  F094         	movff	??_otoa+1,otoa@n+1
  8616  004158  C087  F095         	movff	??_otoa+2,otoa@n+2
  8617  00415C  C088  F096         	movff	??_otoa+3,otoa@n+3
  8618  004160  C089  F097         	movff	??_otoa+4,otoa@n+4
  8619  004164  C08A  F098         	movff	??_otoa+5,otoa@n+5
  8620  004168  C08B  F099         	movff	??_otoa+6,otoa@n+6
  8621  00416C  C08C  F09A         	movff	??_otoa+7,otoa@n+7
  8622  004170                     l9009:
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8626  004170  BF9C               	btfsc	(otoa@i+1)& (0+255),7,b
  8627  004172  EFC3  F020         	goto	u11531
  8628  004176  519C               	movf	(otoa@i+1)& (0+255),w,b
  8629  004178  E108               	bnz	u11530
  8630  00417A  059B               	decf	otoa@i& (0+255),w,b
  8631  00417C  A0D8               	btfss	status,0,c
  8632  00417E  EFC3  F020         	goto	u11531
  8633  004182  EFC5  F020         	goto	u11530
  8634  004186                     u11531:
  8635  004186  EFF5  F020         	goto	l729
  8636  00418A                     u11530:
  8637  00418A                     
  8638                           ; BSR set to: 0
  8639  00418A  5193               	movf	otoa@n& (0+255),w,b
  8640  00418C  1194               	iorwf	(otoa@n+1)& (0+255),w,b
  8641  00418E  1195               	iorwf	(otoa@n+2)& (0+255),w,b
  8642  004190  1196               	iorwf	(otoa@n+3)& (0+255),w,b
  8643  004192  1197               	iorwf	(otoa@n+4)& (0+255),w,b
  8644  004194  1198               	iorwf	(otoa@n+5)& (0+255),w,b
  8645  004196  1199               	iorwf	(otoa@n+6)& (0+255),w,b
  8646  004198  119A               	iorwf	(otoa@n+7)& (0+255),w,b
  8647  00419A  A4D8               	btfss	status,2,c
  8648  00419C  EFD2  F020         	goto	u11541
  8649  0041A0  EFD4  F020         	goto	u11540
  8650  0041A4                     u11541:
  8651  0041A4  EF73  F020         	goto	l8997
  8652  0041A8                     u11540:
  8653  0041A8                     
  8654                           ; BSR set to: 0
  8655  0041A8  BF8E               	btfsc	(otoa@p+1)& (0+255),7,b
  8656  0041AA  EFE1  F020         	goto	u11550
  8657  0041AE  518E               	movf	(otoa@p+1)& (0+255),w,b
  8658  0041B0  E106               	bnz	u11551
  8659  0041B2  058D               	decf	otoa@p& (0+255),w,b
  8660  0041B4  B0D8               	btfsc	status,0,c
  8661  0041B6  EFDF  F020         	goto	u11551
  8662  0041BA  EFE1  F020         	goto	u11550
  8663  0041BE                     u11551:
  8664  0041BE  EF73  F020         	goto	l8997
  8665  0041C2                     u11550:
  8666  0041C2                     
  8667                           ; BSR set to: 0
  8668  0041C2  BF92               	btfsc	(otoa@w+1)& (0+255),7,b
  8669  0041C4  EFEC  F020         	goto	u11561
  8670  0041C8  5192               	movf	(otoa@w+1)& (0+255),w,b
  8671  0041CA  E108               	bnz	u11560
  8672  0041CC  0591               	decf	otoa@w& (0+255),w,b
  8673  0041CE  A0D8               	btfss	status,0,c
  8674  0041D0  EFEC  F020         	goto	u11561
  8675  0041D4  EFEE  F020         	goto	u11560
  8676  0041D8                     u11561:
  8677  0041D8  EFF5  F020         	goto	l729
  8678  0041DC                     u11560:
  8679  0041DC                     
  8680                           ; BSR set to: 0
  8681  0041DC  B239               	btfsc	_flags^0,1,c
  8682  0041DE  EFF3  F020         	goto	u11571
  8683  0041E2  EFF5  F020         	goto	u11570
  8684  0041E6                     u11571:
  8685  0041E6  EF73  F020         	goto	l8997
  8686  0041EA                     u11570:
  8687  0041EA                     l729:
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8691  0041EA  A839               	btfss	_flags^0,4,c
  8692  0041EC  EFFA  F020         	goto	u11581
  8693  0041F0  EFFC  F020         	goto	u11580
  8694  0041F4                     u11581:
  8695  0041F4  EF13  F021         	goto	l9027
  8696  0041F8                     u11580:
  8697  0041F8                     
  8698                           ; BSR set to: 0
  8699  0041F8  518F               	movf	otoa@t& (0+255),w,b
  8700  0041FA  1190               	iorwf	(otoa@t+1)& (0+255),w,b
  8701  0041FC  B4D8               	btfsc	status,2,c
  8702  0041FE  EF03  F021         	goto	u11591
  8703  004202  EF05  F021         	goto	u11590
  8704  004206                     u11591:
  8705  004206  EF13  F021         	goto	l9027
  8706  00420A                     u11590:
  8707  00420A                     
  8708                           ; BSR set to: 0
  8709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8710  00420A  079B               	decf	otoa@i& (0+255),f,b
  8711  00420C  A0D8               	btfss	status,0,c
  8712  00420E  079C               	decf	(otoa@i+1)& (0+255),f,b
  8713  004210                     
  8714                           ; BSR set to: 0
  8715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8716  004210  0E6C               	movlw	low _dbuf
  8717  004212  259B               	addwf	otoa@i& (0+255),w,b
  8718  004214  6ED9               	movwf	fsr2l,c
  8719  004216  0E01               	movlw	high _dbuf
  8720  004218  219C               	addwfc	(otoa@i+1)& (0+255),w,b
  8721  00421A  6EDA               	movwf	fsr2h,c
  8722  00421C  0E30               	movlw	48
  8723  00421E  6EDF               	movwf	indf2,c
  8724  004220                     
  8725                           ; BSR set to: 0
  8726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8727  004220  0791               	decf	otoa@w& (0+255),f,b
  8728  004222  A0D8               	btfss	status,0,c
  8729  004224  0792               	decf	(otoa@w+1)& (0+255),f,b
  8730  004226                     l9027:
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8734  004226  C07B  F070         	movff	otoa@fp,pad@fp
  8735  00422A  C07C  F071         	movff	otoa@fp+1,pad@fp+1
  8736  00422E  0E6C               	movlw	low _dbuf
  8737  004230  259B               	addwf	otoa@i& (0+255),w,b
  8738  004232  6F72               	movwf	pad@buf& (0+255),b
  8739  004234  0E01               	movlw	high _dbuf
  8740  004236  219C               	addwfc	(otoa@i+1)& (0+255),w,b
  8741  004238  6F73               	movwf	(pad@buf+1)& (0+255),b
  8742  00423A  C091  F074         	movff	otoa@w,pad@p
  8743  00423E  C092  F075         	movff	otoa@w+1,pad@p+1
  8744  004242  EC70  F02C         	call	_pad	;wreg free
  8745  004246  C070  F07B         	movff	?_pad,?_otoa
  8746  00424A  C071  F07C         	movff	?_pad+1,?_otoa+1
  8747  00424E  0012               	return		;funcret
  8748  004250                     __end_of_otoa:
  8749                           	opt callstack 0
  8750                           
  8751 ;; *************** function _efgtoa *****************
  8752 ;; Defined at:
  8753 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  8756 ;;		 -> vsnprintf@f(6), 
  8757 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  8758 ;;  c               1   51[BANK0 ] unsigned char 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  u               4  109[BANK0 ] unsigned char 
  8761 ;;  g               4  101[BANK0 ] unsigned char 
  8762 ;;  l               4   95[BANK0 ] unsigned char 
  8763 ;;  h               4   91[BANK0 ] unsigned char 
  8764 ;;  ou              4   57[BANK0 ] unsigned char 
  8765 ;;  n               2  107[BANK0 ] int 
  8766 ;;  e               2  105[BANK0 ] int 
  8767 ;;  i               2   99[BANK0 ] int 
  8768 ;;  w               2   88[BANK0 ] int 
  8769 ;;  p               2   85[BANK0 ] int 
  8770 ;;  sign            2   83[BANK0 ] int 
  8771 ;;  d               2   81[BANK0 ] int 
  8772 ;;  ne              2   79[BANK0 ] int 
  8773 ;;  m               2   77[BANK0 ] int 
  8774 ;;  pp              2   75[BANK0 ] int 
  8775 ;;  t               2   73[BANK0 ] int 
  8776 ;;  mode            1   90[BANK0 ] unsigned char 
  8777 ;;  nmode           1   87[BANK0 ] unsigned char 
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  2   45[BANK0 ] int 
  8780 ;; Registers used:
  8781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8787 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8788 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8789 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8790 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8791 ;;Total ram usage:       68 bytes
  8792 ;; Hardware stack levels used:    1
  8793 ;; Hardware stack levels required when called:    9
  8794 ;; This function calls:
  8795 ;;		___awdiv
  8796 ;;		___awmod
  8797 ;;		___fladd
  8798 ;;		___fldiv
  8799 ;;		___fleq
  8800 ;;		___flge
  8801 ;;		___flmul
  8802 ;;		___flneg
  8803 ;;		___flsub
  8804 ;;		___fltol
  8805 ;;		___fpclassifyf
  8806 ;;		_floorf
  8807 ;;		_isupper
  8808 ;;		_pad
  8809 ;;		_strcpy
  8810 ;;		_tolower
  8811 ;; This function is called by:
  8812 ;;		_vfpfcnvrt
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text15
  8817  0015E0                     __ptext15:
  8818                           	opt callstack 0
  8819  0015E0                     _efgtoa:
  8820                           	opt callstack 17
  8821  0015E0                     
  8822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  8823  0015E0  0E00               	movlw	0
  8824  0015E2  0100               	movlb	0	; () banked
  8825  0015E4  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  8826  0015E6  0E00               	movlw	0
  8827  0015E8  6FB3               	movwf	efgtoa@sign& (0+255),b
  8828  0015EA                     
  8829                           ; BSR set to: 0
  8830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8831  0015EA  C08F  F0C5         	movff	efgtoa@f,efgtoa@g
  8832  0015EE  C090  F0C6         	movff	efgtoa@f+1,efgtoa@g+1
  8833  0015F2  C091  F0C7         	movff	efgtoa@f+2,efgtoa@g+2
  8834  0015F6  C092  F0C8         	movff	efgtoa@f+3,efgtoa@g+3
  8835  0015FA                     
  8836                           ; BSR set to: 0
  8837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8838  0015FA  BFC8               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8839  0015FC  EF04  F00B         	goto	u10980
  8840  001600  EF02  F00B         	goto	u10981
  8841  001604                     u10981:
  8842  001604  EF1A  F00B         	goto	l8695
  8843  001608                     u10980:
  8844  001608                     
  8845                           ; BSR set to: 0
  8846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8847  001608  0E00               	movlw	0
  8848  00160A  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  8849  00160C  0E01               	movlw	1
  8850  00160E  6FB3               	movwf	efgtoa@sign& (0+255),b
  8851  001610                     
  8852                           ; BSR set to: 0
  8853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8854  001610  C0C5  F060         	movff	efgtoa@g,___flneg@f1
  8855  001614  C0C6  F061         	movff	efgtoa@g+1,___flneg@f1+1
  8856  001618  C0C7  F062         	movff	efgtoa@g+2,___flneg@f1+2
  8857  00161C  C0C8  F063         	movff	efgtoa@g+3,___flneg@f1+3
  8858  001620  EC63  F031         	call	___flneg	;wreg free
  8859  001624  C060  F0C5         	movff	?___flneg,efgtoa@g
  8860  001628  C061  F0C6         	movff	?___flneg+1,efgtoa@g+1
  8861  00162C  C062  F0C7         	movff	?___flneg+2,efgtoa@g+2
  8862  001630  C063  F0C8         	movff	?___flneg+3,efgtoa@g+3
  8863  001634                     l8695:
  8864                           
  8865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8866  001634  0E00               	movlw	0
  8867  001636  0100               	movlb	0	; () banked
  8868  001638  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  8869  00163A  0E00               	movlw	0
  8870  00163C  6FCB               	movwf	efgtoa@n& (0+255),b
  8871  00163E                     
  8872                           ; BSR set to: 0
  8873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8874  00163E  C037  F0B8         	movff	_width,efgtoa@w
  8875  001642  C038  F0B9         	movff	_width+1,efgtoa@w+1
  8876  001646                     
  8877                           ; BSR set to: 0
  8878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8879  001646  51B3               	movf	efgtoa@sign& (0+255),w,b
  8880  001648  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8881  00164A  A4D8               	btfss	status,2,c
  8882  00164C  EF2A  F00B         	goto	u10991
  8883  001650  EF2C  F00B         	goto	u10990
  8884  001654                     u10991:
  8885  001654  EF33  F00B         	goto	l8703
  8886  001658                     u10990:
  8887  001658                     
  8888                           ; BSR set to: 0
  8889  001658  A439               	btfss	_flags^0,2,c
  8890  00165A  EF31  F00B         	goto	u11001
  8891  00165E  EF33  F00B         	goto	u11000
  8892  001662                     u11001:
  8893  001662  EF4D  F00B         	goto	l8715
  8894  001666                     u11000:
  8895  001666                     l8703:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8899  001666  51B3               	movf	efgtoa@sign& (0+255),w,b
  8900  001668  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8901  00166A  A4D8               	btfss	status,2,c
  8902  00166C  EF3A  F00B         	goto	u11011
  8903  001670  EF3C  F00B         	goto	u11010
  8904  001674                     u11011:
  8905  001674  EF42  F00B         	goto	l8707
  8906  001678                     u11010:
  8907  001678                     
  8908                           ; BSR set to: 0
  8909  001678  0E00               	movlw	0
  8910  00167A  6F9E               	movwf	(_efgtoa$1603+1)& (0+255),b
  8911  00167C  0E2B               	movlw	43
  8912  00167E  6F9D               	movwf	_efgtoa$1603& (0+255),b
  8913  001680  EF46  F00B         	goto	l8709
  8914  001684                     l8707:
  8915                           
  8916                           ; BSR set to: 0
  8917  001684  0E00               	movlw	0
  8918  001686  6F9E               	movwf	(_efgtoa$1603+1)& (0+255),b
  8919  001688  0E2D               	movlw	45
  8920  00168A  6F9D               	movwf	_efgtoa$1603& (0+255),b
  8921  00168C                     l8709:
  8922                           
  8923                           ; BSR set to: 0
  8924  00168C  C09D  F16C         	movff	_efgtoa$1603,_dbuf
  8925  001690                     
  8926                           ; BSR set to: 0
  8927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8928  001690  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  8929  001692  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  8930  001694                     
  8931                           ; BSR set to: 0
  8932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8933  001694  07B8               	decf	efgtoa@w& (0+255),f,b
  8934  001696  A0D8               	btfss	status,0,c
  8935  001698  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  8936  00169A                     l8715:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8940  00169A  C0C5  F060         	movff	efgtoa@g,___fpclassifyf@x
  8941  00169E  C0C6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8942  0016A2  C0C7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8943  0016A6  C0C8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8944  0016AA  ECA8  F02A         	call	___fpclassifyf	;wreg free
  8945  0016AE  0100               	movlb	0	; () banked
  8946  0016B0  0560               	decf	?___fpclassifyf& (0+255),w,b
  8947  0016B2  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  8948  0016B4  A4D8               	btfss	status,2,c
  8949  0016B6  EF5F  F00B         	goto	u11021
  8950  0016BA  EF61  F00B         	goto	u11020
  8951  0016BE                     u11021:
  8952  0016BE  EFB8  F00B         	goto	l8733
  8953  0016C2                     u11020:
  8954  0016C2                     
  8955                           ; BSR set to: 0
  8956  0016C2  0EBF               	movlw	191
  8957  0016C4  6F94               	movwf	??_efgtoa& (0+255),b
  8958  0016C6  0EFF               	movlw	255
  8959  0016C8  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  8960  0016CA  5193               	movf	efgtoa@c& (0+255),w,b
  8961  0016CC  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  8962  0016CE  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  8963  0016D0  5194               	movf	??_efgtoa& (0+255),w,b
  8964  0016D2  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  8965  0016D4  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  8966  0016D6  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8967  0016D8  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  8968  0016DA  E10A               	bnz	u11030
  8969  0016DC  0E1A               	movlw	26
  8970  0016DE  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  8971  0016E0  A0D8               	btfss	status,0,c
  8972  0016E2  EF75  F00B         	goto	u11031
  8973  0016E6  EF78  F00B         	goto	u11030
  8974  0016EA                     u11031:
  8975  0016EA  0E01               	movlw	1
  8976  0016EC  EF79  F00B         	goto	u11040
  8977  0016F0                     u11030:
  8978  0016F0  0E00               	movlw	0
  8979  0016F2                     u11040:
  8980  0016F2  6F9F               	movwf	_efgtoa$1604& (0+255),b
  8981  0016F4  6BA0               	clrf	(_efgtoa$1604+1)& (0+255),b
  8982  0016F6                     
  8983                           ; BSR set to: 0
  8984  0016F6  519F               	movf	_efgtoa$1604& (0+255),w,b
  8985  0016F8  11A0               	iorwf	(_efgtoa$1604+1)& (0+255),w,b
  8986  0016FA  B4D8               	btfsc	status,2,c
  8987  0016FC  EF82  F00B         	goto	u11051
  8988  001700  EF84  F00B         	goto	u11050
  8989  001704                     u11051:
  8990  001704  EF92  F00B         	goto	l8725
  8991  001708                     u11050:
  8992  001708                     
  8993                           ; BSR set to: 0
  8994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8995  001708  0E6C               	movlw	low _dbuf
  8996  00170A  25CB               	addwf	efgtoa@n& (0+255),w,b
  8997  00170C  6F60               	movwf	strcpy@dest& (0+255),b
  8998  00170E  0E01               	movlw	high _dbuf
  8999  001710  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9000  001712  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  9001  001714  0EBB               	movlw	low STR_5
  9002  001716  6F62               	movwf	strcpy@src& (0+255),b
  9003  001718  0EFF               	movlw	high STR_5
  9004  00171A  6F63               	movwf	(strcpy@src+1)& (0+255),b
  9005  00171C  EC5B  F02F         	call	_strcpy	;wreg free
  9006                           
  9007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9008  001720  EF9E  F00B         	goto	l8727
  9009  001724                     l8725:
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9013  001724  0E6C               	movlw	low _dbuf
  9014  001726  25CB               	addwf	efgtoa@n& (0+255),w,b
  9015  001728  6F60               	movwf	strcpy@dest& (0+255),b
  9016  00172A  0E01               	movlw	high _dbuf
  9017  00172C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9018  00172E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  9019  001730  0ECB               	movlw	low STR_6
  9020  001732  6F62               	movwf	strcpy@src& (0+255),b
  9021  001734  0EFF               	movlw	high STR_6
  9022  001736  6F63               	movwf	(strcpy@src+1)& (0+255),b
  9023  001738  EC5B  F02F         	call	_strcpy	;wreg free
  9024  00173C                     l8727:
  9025                           
  9026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9027  00173C  0100               	movlb	0	; () banked
  9028  00173E  0EFD               	movlw	253
  9029  001740  27B8               	addwf	efgtoa@w& (0+255),f,b
  9030  001742  0EFF               	movlw	255
  9031  001744  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  9032  001746                     l8729:
  9033                           
  9034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9035  001746  C08D  F070         	movff	efgtoa@fp,pad@fp
  9036  00174A  C08E  F071         	movff	efgtoa@fp+1,pad@fp+1
  9037  00174E  0E6C               	movlw	low _dbuf
  9038  001750  0100               	movlb	0	; () banked
  9039  001752  6F72               	movwf	pad@buf& (0+255),b
  9040  001754  0E01               	movlw	high _dbuf
  9041  001756  6F73               	movwf	(pad@buf+1)& (0+255),b
  9042  001758  C0B8  F074         	movff	efgtoa@w,pad@p
  9043  00175C  C0B9  F075         	movff	efgtoa@w+1,pad@p+1
  9044  001760  EC70  F02C         	call	_pad	;wreg free
  9045  001764  C070  F08D         	movff	?_pad,?_efgtoa
  9046  001768  C071  F08E         	movff	?_pad+1,?_efgtoa+1
  9047  00176C  EFCE  F010         	goto	l642
  9048  001770                     l8733:
  9049                           
  9050                           ; BSR set to: 0
  9051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9052  001770  C0C5  F060         	movff	efgtoa@g,___fpclassifyf@x
  9053  001774  C0C6  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  9054  001778  C0C7  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  9055  00177C  C0C8  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  9056  001780  ECA8  F02A         	call	___fpclassifyf	;wreg free
  9057  001784  0100               	movlb	0	; () banked
  9058  001786  5160               	movf	?___fpclassifyf& (0+255),w,b
  9059  001788  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  9060  00178A  A4D8               	btfss	status,2,c
  9061  00178C  EFCA  F00B         	goto	u11061
  9062  001790  EFCC  F00B         	goto	u11060
  9063  001794                     u11061:
  9064  001794  EF0B  F00C         	goto	l8751
  9065  001798                     u11060:
  9066  001798                     
  9067                           ; BSR set to: 0
  9068  001798  0EBF               	movlw	191
  9069  00179A  6F94               	movwf	??_efgtoa& (0+255),b
  9070  00179C  0EFF               	movlw	255
  9071  00179E  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  9072  0017A0  5193               	movf	efgtoa@c& (0+255),w,b
  9073  0017A2  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  9074  0017A4  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  9075  0017A6  5194               	movf	??_efgtoa& (0+255),w,b
  9076  0017A8  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  9077  0017AA  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  9078  0017AC  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9079  0017AE  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  9080  0017B0  E10A               	bnz	u11070
  9081  0017B2  0E1A               	movlw	26
  9082  0017B4  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  9083  0017B6  A0D8               	btfss	status,0,c
  9084  0017B8  EFE0  F00B         	goto	u11071
  9085  0017BC  EFE3  F00B         	goto	u11070
  9086  0017C0                     u11071:
  9087  0017C0  0E01               	movlw	1
  9088  0017C2  EFE4  F00B         	goto	u11080
  9089  0017C6                     u11070:
  9090  0017C6  0E00               	movlw	0
  9091  0017C8                     u11080:
  9092  0017C8  6FA1               	movwf	_efgtoa$1608& (0+255),b
  9093  0017CA  6BA2               	clrf	(_efgtoa$1608+1)& (0+255),b
  9094  0017CC                     
  9095                           ; BSR set to: 0
  9096  0017CC  51A1               	movf	_efgtoa$1608& (0+255),w,b
  9097  0017CE  11A2               	iorwf	(_efgtoa$1608+1)& (0+255),w,b
  9098  0017D0  B4D8               	btfsc	status,2,c
  9099  0017D2  EFED  F00B         	goto	u11091
  9100  0017D6  EFEF  F00B         	goto	u11090
  9101  0017DA                     u11091:
  9102  0017DA  EFFD  F00B         	goto	l8743
  9103  0017DE                     u11090:
  9104  0017DE                     
  9105                           ; BSR set to: 0
  9106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9107  0017DE  0E6C               	movlw	low _dbuf
  9108  0017E0  25CB               	addwf	efgtoa@n& (0+255),w,b
  9109  0017E2  6F60               	movwf	strcpy@dest& (0+255),b
  9110  0017E4  0E01               	movlw	high _dbuf
  9111  0017E6  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9112  0017E8  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  9113  0017EA  0EBF               	movlw	low STR_9
  9114  0017EC  6F62               	movwf	strcpy@src& (0+255),b
  9115  0017EE  0EFF               	movlw	high STR_9
  9116  0017F0  6F63               	movwf	(strcpy@src+1)& (0+255),b
  9117  0017F2  EC5B  F02F         	call	_strcpy	;wreg free
  9118                           
  9119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9120  0017F6  EF9E  F00B         	goto	l8727
  9121  0017FA                     l8743:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9125  0017FA  0E6C               	movlw	low _dbuf
  9126  0017FC  25CB               	addwf	efgtoa@n& (0+255),w,b
  9127  0017FE  6F60               	movwf	strcpy@dest& (0+255),b
  9128  001800  0E01               	movlw	high _dbuf
  9129  001802  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9130  001804  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  9131  001806  0ED3               	movlw	low STR_10
  9132  001808  6F62               	movwf	strcpy@src& (0+255),b
  9133  00180A  0EFF               	movlw	high STR_10
  9134  00180C  6F63               	movwf	(strcpy@src+1)& (0+255),b
  9135  00180E  EC5B  F02F         	call	_strcpy	;wreg free
  9136  001812  EF9E  F00B         	goto	l8727
  9137  001816                     l8751:
  9138                           
  9139                           ; BSR set to: 0
  9140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9141  001816  0E00               	movlw	0
  9142  001818  6FCD               	movwf	efgtoa@u& (0+255),b
  9143  00181A  0E00               	movlw	0
  9144  00181C  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  9145  00181E  0E80               	movlw	128
  9146  001820  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  9147  001822  0E3F               	movlw	63
  9148  001824  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  9149                           
  9150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9151  001826  0E00               	movlw	0
  9152  001828  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  9153  00182A  0E00               	movlw	0
  9154  00182C  6FC9               	movwf	efgtoa@e& (0+255),b
  9155  00182E                     
  9156                           ; BSR set to: 0
  9157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9158  00182E  C0C5  F060         	movff	efgtoa@g,___fleq@ff1
  9159  001832  C0C6  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  9160  001836  C0C7  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  9161  00183A  C0C8  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  9162  00183E  0E00               	movlw	0
  9163  001840  6F64               	movwf	___fleq@ff2& (0+255),b
  9164  001842  0E00               	movlw	0
  9165  001844  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  9166  001846  0E00               	movlw	0
  9167  001848  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  9168  00184A  0E00               	movlw	0
  9169  00184C  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  9170  00184E  ECEA  F02D         	call	___fleq	;wreg free
  9171  001852  0100               	movlb	0	; () banked
  9172  001854  B0D8               	btfsc	status,0,c
  9173  001856  EF2F  F00C         	goto	u11101
  9174  00185A  EF31  F00C         	goto	u11100
  9175  00185E                     u11101:
  9176  00185E  EFB6  F00C         	goto	l8769
  9177  001862                     u11100:
  9178  001862  EF50  F00C         	goto	l8761
  9179  001866                     l8757:
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  9183  001866  C0CD  F060         	movff	efgtoa@u,___flmul@b
  9184  00186A  C0CE  F061         	movff	efgtoa@u+1,___flmul@b+1
  9185  00186E  C0CF  F062         	movff	efgtoa@u+2,___flmul@b+2
  9186  001872  C0D0  F063         	movff	efgtoa@u+3,___flmul@b+3
  9187  001876  0E00               	movlw	0
  9188  001878  6F64               	movwf	___flmul@a& (0+255),b
  9189  00187A  0E00               	movlw	0
  9190  00187C  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9191  00187E  0E20               	movlw	32
  9192  001880  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9193  001882  0E41               	movlw	65
  9194  001884  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9195  001886  EC4B  F015         	call	___flmul	;wreg free
  9196  00188A  C060  F0CD         	movff	?___flmul,efgtoa@u
  9197  00188E  C061  F0CE         	movff	?___flmul+1,efgtoa@u+1
  9198  001892  C062  F0CF         	movff	?___flmul+2,efgtoa@u+2
  9199  001896  C063  F0D0         	movff	?___flmul+3,efgtoa@u+3
  9200  00189A                     
  9201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  9202  00189A  0100               	movlb	0	; () banked
  9203  00189C  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  9204  00189E  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  9205  0018A0                     l8761:
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  9209  0018A0  C0C5  F079         	movff	efgtoa@g,___flge@ff1
  9210  0018A4  C0C6  F07A         	movff	efgtoa@g+1,___flge@ff1+1
  9211  0018A8  C0C7  F07B         	movff	efgtoa@g+2,___flge@ff1+2
  9212  0018AC  C0C8  F07C         	movff	efgtoa@g+3,___flge@ff1+3
  9213  0018B0  0E00               	movlw	0
  9214  0018B2  6F64               	movwf	___flmul@a& (0+255),b
  9215  0018B4  0E00               	movlw	0
  9216  0018B6  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9217  0018B8  0E20               	movlw	32
  9218  0018BA  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9219  0018BC  0E41               	movlw	65
  9220  0018BE  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9221  0018C0  C0CD  F060         	movff	efgtoa@u,___flmul@b
  9222  0018C4  C0CE  F061         	movff	efgtoa@u+1,___flmul@b+1
  9223  0018C8  C0CF  F062         	movff	efgtoa@u+2,___flmul@b+2
  9224  0018CC  C0D0  F063         	movff	efgtoa@u+3,___flmul@b+3
  9225  0018D0  EC4B  F015         	call	___flmul	;wreg free
  9226  0018D4  C060  F07D         	movff	?___flmul,___flge@ff2
  9227  0018D8  C061  F07E         	movff	?___flmul+1,___flge@ff2+1
  9228  0018DC  C062  F07F         	movff	?___flmul+2,___flge@ff2+2
  9229  0018E0  C063  F080         	movff	?___flmul+3,___flge@ff2+3
  9230  0018E4  EC25  F02A         	call	___flge	;wreg free
  9231  0018E8  0100               	movlb	0	; () banked
  9232  0018EA  B0D8               	btfsc	status,0,c
  9233  0018EC  EF7A  F00C         	goto	u11111
  9234  0018F0  EF7C  F00C         	goto	u11110
  9235  0018F4                     u11111:
  9236  0018F4  EF33  F00C         	goto	l8757
  9237  0018F8                     u11110:
  9238  0018F8  EF9C  F00C         	goto	l8767
  9239  0018FC                     l8763:
  9240                           
  9241                           ; BSR set to: 0
  9242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  9243  0018FC  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  9244  001900  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  9245  001904  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  9246  001908  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  9247  00190C  0E00               	movlw	0
  9248  00190E  6F64               	movwf	___fldiv@a& (0+255),b
  9249  001910  0E00               	movlw	0
  9250  001912  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  9251  001914  0E20               	movlw	32
  9252  001916  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  9253  001918  0E41               	movlw	65
  9254  00191A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  9255  00191C  EC76  F019         	call	___fldiv	;wreg free
  9256  001920  C060  F0CD         	movff	?___fldiv,efgtoa@u
  9257  001924  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  9258  001928  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  9259  00192C  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  9260  001930                     
  9261                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  9262  001930  0100               	movlb	0	; () banked
  9263  001932  07C9               	decf	efgtoa@e& (0+255),f,b
  9264  001934  A0D8               	btfss	status,0,c
  9265  001936  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  9266  001938                     l8767:
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  9270  001938  C0C5  F079         	movff	efgtoa@g,___flge@ff1
  9271  00193C  C0C6  F07A         	movff	efgtoa@g+1,___flge@ff1+1
  9272  001940  C0C7  F07B         	movff	efgtoa@g+2,___flge@ff1+2
  9273  001944  C0C8  F07C         	movff	efgtoa@g+3,___flge@ff1+3
  9274  001948  C0CD  F07D         	movff	efgtoa@u,___flge@ff2
  9275  00194C  C0CE  F07E         	movff	efgtoa@u+1,___flge@ff2+1
  9276  001950  C0CF  F07F         	movff	efgtoa@u+2,___flge@ff2+2
  9277  001954  C0D0  F080         	movff	efgtoa@u+3,___flge@ff2+3
  9278  001958  EC25  F02A         	call	___flge	;wreg free
  9279  00195C  0100               	movlb	0	; () banked
  9280  00195E  A0D8               	btfss	status,0,c
  9281  001960  EFB4  F00C         	goto	u11121
  9282  001964  EFB6  F00C         	goto	u11120
  9283  001968                     u11121:
  9284  001968  EF7E  F00C         	goto	l8763
  9285  00196C                     u11120:
  9286  00196C                     l8769:
  9287                           
  9288                           ; BSR set to: 0
  9289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  9290  00196C  C093  F066         	movff	efgtoa@c,tolower@c
  9291  001970  6B67               	clrf	(tolower@c+1)& (0+255),b
  9292  001972  ECFA  F02E         	call	_tolower	;wreg free
  9293  001976  0100               	movlb	0	; () banked
  9294  001978  5166               	movf	?_tolower& (0+255),w,b
  9295  00197A  6FBA               	movwf	efgtoa@mode& (0+255),b
  9296  00197C                     
  9297                           ; BSR set to: 0
  9298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  9299  00197C  C0BA  F0B7         	movff	efgtoa@mode,efgtoa@nmode
  9300  001980                     
  9301                           ; BSR set to: 0
  9302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  9303  001980  0E67               	movlw	103
  9304  001982  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  9305  001984  A4D8               	btfss	status,2,c
  9306  001986  EFC7  F00C         	goto	u11131
  9307  00198A  EFC9  F00C         	goto	u11130
  9308  00198E                     u11131:
  9309  00198E  EFEF  F00C         	goto	l8783
  9310  001992                     u11130:
  9311  001992                     
  9312                           ; BSR set to: 0
  9313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  9314  001992  51EF               	movf	_prec& (0+255),w,b
  9315  001994  11F0               	iorwf	(_prec+1)& (0+255),w,b
  9316  001996  A4D8               	btfss	status,2,c
  9317  001998  EFD0  F00C         	goto	u11141
  9318  00199C  EFD2  F00C         	goto	u11140
  9319  0019A0                     u11141:
  9320  0019A0  EFD6  F00C         	goto	l8779
  9321  0019A4                     u11140:
  9322  0019A4                     
  9323                           ; BSR set to: 0
  9324                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  9325  0019A4  0E00               	movlw	0
  9326  0019A6  6FF0               	movwf	(_prec+1)& (0+255),b
  9327  0019A8  0E01               	movlw	1
  9328  0019AA  6FEF               	movwf	_prec& (0+255),b
  9329  0019AC                     l8779:
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  9333  0019AC  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  9334  0019AE  EFE3  F00C         	goto	u11150
  9335  0019B2  51F0               	movf	(_prec+1)& (0+255),w,b
  9336  0019B4  E106               	bnz	u11151
  9337  0019B6  05EF               	decf	_prec& (0+255),w,b
  9338  0019B8  B0D8               	btfsc	status,0,c
  9339  0019BA  EFE1  F00C         	goto	u11151
  9340  0019BE  EFE3  F00C         	goto	u11150
  9341  0019C2                     u11151:
  9342  0019C2  EFE9  F00C         	goto	l660
  9343  0019C6                     u11150:
  9344  0019C6                     l8781:
  9345                           
  9346                           ; BSR set to: 0
  9347  0019C6  0E00               	movlw	0
  9348  0019C8  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  9349  0019CA  0E06               	movlw	6
  9350  0019CC  6FB5               	movwf	efgtoa@p& (0+255),b
  9351  0019CE  EFF8  F00C         	goto	l8789
  9352  0019D2                     l660:
  9353                           
  9354                           ; BSR set to: 0
  9355  0019D2  C0EF  F0B5         	movff	_prec,efgtoa@p
  9356  0019D6  C0F0  F0B6         	movff	_prec+1,efgtoa@p+1
  9357  0019DA  EFF8  F00C         	goto	l8789
  9358  0019DE                     l8783:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  9362  0019DE  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  9363  0019E0  EFF4  F00C         	goto	u11161
  9364  0019E4  EFF6  F00C         	goto	u11160
  9365  0019E8                     u11161:
  9366  0019E8  EFE3  F00C         	goto	l8781
  9367  0019EC                     u11160:
  9368  0019EC  EFE9  F00C         	goto	l660
  9369  0019F0                     l8789:
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  9373  0019F0  0E67               	movlw	103
  9374  0019F2  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  9375  0019F4  A4D8               	btfss	status,2,c
  9376  0019F6  EFFF  F00C         	goto	u11171
  9377  0019FA  EF01  F00D         	goto	u11170
  9378  0019FE                     u11171:
  9379  0019FE  EF30  F00D         	goto	l8799
  9380  001A02                     u11170:
  9381  001A02                     
  9382                           ; BSR set to: 0
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  9384  001A02  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  9385  001A04  EF0F  F00D         	goto	u11180
  9386  001A08  0EFC               	movlw	252
  9387  001A0A  5DC9               	subwf	efgtoa@e& (0+255),w,b
  9388  001A0C  0EFF               	movlw	255
  9389  001A0E  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  9390  001A10  A0D8               	btfss	status,0,c
  9391  001A12  EF0D  F00D         	goto	u11181
  9392  001A16  EF0F  F00D         	goto	u11180
  9393  001A1A                     u11181:
  9394  001A1A  EF2E  F00D         	goto	l8797
  9395  001A1E                     u11180:
  9396  001A1E                     
  9397                           ; BSR set to: 0
  9398  001A1E  0EFF               	movlw	255
  9399  001A20  6F94               	movwf	??_efgtoa& (0+255),b
  9400  001A22  0EFF               	movlw	255
  9401  001A24  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  9402  001A26  C0B5  F096         	movff	efgtoa@p,??_efgtoa+2
  9403  001A2A  C0B6  F097         	movff	efgtoa@p+1,??_efgtoa+3
  9404  001A2E  5194               	movf	??_efgtoa& (0+255),w,b
  9405  001A30  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  9406  001A32  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  9407  001A34  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9408  001A36  51C9               	movf	efgtoa@e& (0+255),w,b
  9409  001A38  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  9410  001A3A  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  9411  001A3C  0A80               	xorlw	128
  9412  001A3E  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  9413  001A40  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  9414  001A42  0A80               	xorlw	128
  9415  001A44  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  9416  001A46  A0D8               	btfss	status,0,c
  9417  001A48  EF28  F00D         	goto	u11191
  9418  001A4C  EF2A  F00D         	goto	u11190
  9419  001A50                     u11191:
  9420  001A50  EF2E  F00D         	goto	l8797
  9421  001A54                     u11190:
  9422  001A54                     
  9423                           ; BSR set to: 0
  9424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  9425  001A54  0E66               	movlw	102
  9426  001A56  6FB7               	movwf	efgtoa@nmode& (0+255),b
  9427                           
  9428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  9429  001A58  EF30  F00D         	goto	l8799
  9430  001A5C                     l8797:
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  9434  001A5C  0E65               	movlw	101
  9435  001A5E  6FB7               	movwf	efgtoa@nmode& (0+255),b
  9436  001A60                     l8799:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  9440  001A60  C0B5  F0AD         	movff	efgtoa@p,efgtoa@m
  9441  001A64  C0B6  F0AE         	movff	efgtoa@p+1,efgtoa@m+1
  9442  001A68                     
  9443                           ; BSR set to: 0
  9444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  9445  001A68  0E67               	movlw	103
  9446  001A6A  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  9447  001A6C  A4D8               	btfss	status,2,c
  9448  001A6E  EF3B  F00D         	goto	u11201
  9449  001A72  EF3D  F00D         	goto	u11200
  9450  001A76                     u11201:
  9451  001A76  EF4D  F00D         	goto	l8807
  9452  001A7A                     u11200:
  9453  001A7A                     
  9454                           ; BSR set to: 0
  9455  001A7A  0E66               	movlw	102
  9456  001A7C  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  9457  001A7E  A4D8               	btfss	status,2,c
  9458  001A80  EF44  F00D         	goto	u11211
  9459  001A84  EF46  F00D         	goto	u11210
  9460  001A88                     u11211:
  9461  001A88  EF4F  F00D         	goto	l8809
  9462  001A8C                     u11210:
  9463  001A8C                     
  9464                           ; BSR set to: 0
  9465  001A8C  BFCA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9466  001A8E  EF4D  F00D         	goto	u11220
  9467  001A92  EF4B  F00D         	goto	u11221
  9468  001A96                     u11221:
  9469  001A96  EF4F  F00D         	goto	l8809
  9470  001A9A                     u11220:
  9471  001A9A                     l8807:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  9475  001A9A  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  9476  001A9C  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  9477  001A9E                     l8809:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  9481  001A9E  0E66               	movlw	102
  9482  001AA0  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  9483  001AA2  A4D8               	btfss	status,2,c
  9484  001AA4  EF56  F00D         	goto	u11231
  9485  001AA8  EF58  F00D         	goto	u11230
  9486  001AAC                     u11231:
  9487  001AAC  EF78  F00D         	goto	l8819
  9488  001AB0                     u11230:
  9489  001AB0                     
  9490                           ; BSR set to: 0
  9491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  9492  001AB0  BFCA               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9493  001AB2  EF5F  F00D         	goto	u11240
  9494  001AB6  EF5D  F00D         	goto	u11241
  9495  001ABA                     u11241:
  9496  001ABA  EF6B  F00D         	goto	l8815
  9497  001ABE                     u11240:
  9498  001ABE                     
  9499                           ; BSR set to: 0
  9500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  9501  001ABE  0E00               	movlw	0
  9502  001AC0  6FCD               	movwf	efgtoa@u& (0+255),b
  9503  001AC2  0E00               	movlw	0
  9504  001AC4  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  9505  001AC6  0E80               	movlw	128
  9506  001AC8  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  9507  001ACA  0E3F               	movlw	63
  9508  001ACC  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  9509                           
  9510                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  9511  001ACE  0E00               	movlw	0
  9512  001AD0  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  9513  001AD2  0E00               	movlw	0
  9514  001AD4  6FC9               	movwf	efgtoa@e& (0+255),b
  9515  001AD6                     l8815:
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  9519  001AD6  0E67               	movlw	103
  9520  001AD8  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  9521  001ADA  B4D8               	btfsc	status,2,c
  9522  001ADC  EF72  F00D         	goto	u11251
  9523  001AE0  EF74  F00D         	goto	u11250
  9524  001AE4                     u11251:
  9525  001AE4  EF78  F00D         	goto	l8819
  9526  001AE8                     u11250:
  9527  001AE8                     
  9528                           ; BSR set to: 0
  9529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  9530  001AE8  51C9               	movf	efgtoa@e& (0+255),w,b
  9531  001AEA  27AD               	addwf	efgtoa@m& (0+255),f,b
  9532  001AEC  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  9533  001AEE  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  9534  001AF0                     l8819:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  9538  001AF0  0E00               	movlw	0
  9539  001AF2  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  9540  001AF4  0E00               	movlw	0
  9541  001AF6  6FC3               	movwf	efgtoa@i& (0+255),b
  9542  001AF8                     
  9543                           ; BSR set to: 0
  9544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  9545  001AF8  C0C5  F0BB         	movff	efgtoa@g,efgtoa@h
  9546  001AFC  C0C6  F0BC         	movff	efgtoa@g+1,efgtoa@h+1
  9547  001B00  C0C7  F0BD         	movff	efgtoa@g+2,efgtoa@h+2
  9548  001B04  C0C8  F0BE         	movff	efgtoa@g+3,efgtoa@h+3
  9549  001B08                     
  9550                           ; BSR set to: 0
  9551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  9552  001B08  C0CD  F099         	movff	efgtoa@u,efgtoa@ou
  9553  001B0C  C0CE  F09A         	movff	efgtoa@u+1,efgtoa@ou+1
  9554  001B10  C0CF  F09B         	movff	efgtoa@u+2,efgtoa@ou+2
  9555  001B14  C0D0  F09C         	movff	efgtoa@u+3,efgtoa@ou+3
  9556                           
  9557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9558  001B18  EF0A  F00E         	goto	l8833
  9559  001B1C                     l8825:
  9560                           
  9561                           ; BSR set to: 0
  9562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  9563  001B1C  C0BB  F060         	movff	efgtoa@h,___fldiv@b
  9564  001B20  C0BC  F061         	movff	efgtoa@h+1,___fldiv@b+1
  9565  001B24  C0BD  F062         	movff	efgtoa@h+2,___fldiv@b+2
  9566  001B28  C0BE  F063         	movff	efgtoa@h+3,___fldiv@b+3
  9567  001B2C  C0CD  F064         	movff	efgtoa@u,___fldiv@a
  9568  001B30  C0CE  F065         	movff	efgtoa@u+1,___fldiv@a+1
  9569  001B34  C0CF  F066         	movff	efgtoa@u+2,___fldiv@a+2
  9570  001B38  C0D0  F067         	movff	efgtoa@u+3,___fldiv@a+3
  9571  001B3C  EC76  F019         	call	___fldiv	;wreg free
  9572  001B40  C060  F079         	movff	?___fldiv,floorf@x
  9573  001B44  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  9574  001B48  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  9575  001B4C  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  9576  001B50  EC23  F01E         	call	_floorf	;wreg free
  9577  001B54  C079  F0BF         	movff	?_floorf,efgtoa@l
  9578  001B58  C07A  F0C0         	movff	?_floorf+1,efgtoa@l+1
  9579  001B5C  C07B  F0C1         	movff	?_floorf+2,efgtoa@l+2
  9580  001B60  C07C  F0C2         	movff	?_floorf+3,efgtoa@l+3
  9581                           
  9582                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  9583  001B64  C0BF  F060         	movff	efgtoa@l,___fltol@f1
  9584  001B68  C0C0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  9585  001B6C  C0C1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  9586  001B70  C0C2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  9587  001B74  ECA1  F029         	call	___fltol	;wreg free
  9588  001B78  C060  F0B1         	movff	?___fltol,efgtoa@d
  9589  001B7C  C061  F0B2         	movff	?___fltol+1,efgtoa@d+1
  9590  001B80                     
  9591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  9592  001B80  C0BB  F079         	movff	efgtoa@h,___flsub@b
  9593  001B84  C0BC  F07A         	movff	efgtoa@h+1,___flsub@b+1
  9594  001B88  C0BD  F07B         	movff	efgtoa@h+2,___flsub@b+2
  9595  001B8C  C0BE  F07C         	movff	efgtoa@h+3,___flsub@b+3
  9596  001B90  C0CD  F064         	movff	efgtoa@u,___flmul@a
  9597  001B94  C0CE  F065         	movff	efgtoa@u+1,___flmul@a+1
  9598  001B98  C0CF  F066         	movff	efgtoa@u+2,___flmul@a+2
  9599  001B9C  C0D0  F067         	movff	efgtoa@u+3,___flmul@a+3
  9600  001BA0  C0BF  F060         	movff	efgtoa@l,___flmul@b
  9601  001BA4  C0C0  F061         	movff	efgtoa@l+1,___flmul@b+1
  9602  001BA8  C0C1  F062         	movff	efgtoa@l+2,___flmul@b+2
  9603  001BAC  C0C2  F063         	movff	efgtoa@l+3,___flmul@b+3
  9604  001BB0  EC4B  F015         	call	___flmul	;wreg free
  9605  001BB4  C060  F07D         	movff	?___flmul,___flsub@a
  9606  001BB8  C061  F07E         	movff	?___flmul+1,___flsub@a+1
  9607  001BBC  C062  F07F         	movff	?___flmul+2,___flsub@a+2
  9608  001BC0  C063  F080         	movff	?___flmul+3,___flsub@a+3
  9609  001BC4  EC5C  F030         	call	___flsub	;wreg free
  9610  001BC8  C079  F0BB         	movff	?___flsub,efgtoa@h
  9611  001BCC  C07A  F0BC         	movff	?___flsub+1,efgtoa@h+1
  9612  001BD0  C07B  F0BD         	movff	?___flsub+2,efgtoa@h+2
  9613  001BD4  C07C  F0BE         	movff	?___flsub+3,efgtoa@h+3
  9614  001BD8                     
  9615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  9616  001BD8  C0CD  F060         	movff	efgtoa@u,___fldiv@b
  9617  001BDC  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
  9618  001BE0  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
  9619  001BE4  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
  9620  001BE8  0E00               	movlw	0
  9621  001BEA  0100               	movlb	0	; () banked
  9622  001BEC  6F64               	movwf	___fldiv@a& (0+255),b
  9623  001BEE  0E00               	movlw	0
  9624  001BF0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  9625  001BF2  0E20               	movlw	32
  9626  001BF4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  9627  001BF6  0E41               	movlw	65
  9628  001BF8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  9629  001BFA  EC76  F019         	call	___fldiv	;wreg free
  9630  001BFE  C060  F0CD         	movff	?___fldiv,efgtoa@u
  9631  001C02  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  9632  001C06  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  9633  001C0A  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  9634  001C0E                     
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9636  001C0E  0100               	movlb	0	; () banked
  9637  001C10  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  9638  001C12  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  9639  001C14                     l8833:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  9643  001C14  51AD               	movf	efgtoa@m& (0+255),w,b
  9644  001C16  5DC3               	subwf	efgtoa@i& (0+255),w,b
  9645  001C18  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  9646  001C1A  0A80               	xorlw	128
  9647  001C1C  6F94               	movwf	??_efgtoa& (0+255),b
  9648  001C1E  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  9649  001C20  0A80               	xorlw	128
  9650  001C22  5994               	subwfb	??_efgtoa& (0+255),w,b
  9651  001C24  A0D8               	btfss	status,0,c
  9652  001C26  EF17  F00E         	goto	u11261
  9653  001C2A  EF19  F00E         	goto	u11260
  9654  001C2E                     u11261:
  9655  001C2E  EF8E  F00D         	goto	l8825
  9656  001C32                     u11260:
  9657  001C32                     
  9658                           ; BSR set to: 0
  9659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9660  001C32  C0CD  F060         	movff	efgtoa@u,___flmul@b
  9661  001C36  C0CE  F061         	movff	efgtoa@u+1,___flmul@b+1
  9662  001C3A  C0CF  F062         	movff	efgtoa@u+2,___flmul@b+2
  9663  001C3E  C0D0  F063         	movff	efgtoa@u+3,___flmul@b+3
  9664  001C42  0E00               	movlw	0
  9665  001C44  6F64               	movwf	___flmul@a& (0+255),b
  9666  001C46  0E00               	movlw	0
  9667  001C48  6F65               	movwf	(___flmul@a+1)& (0+255),b
  9668  001C4A  0EA0               	movlw	160
  9669  001C4C  6F66               	movwf	(___flmul@a+2)& (0+255),b
  9670  001C4E  0E40               	movlw	64
  9671  001C50  6F67               	movwf	(___flmul@a+3)& (0+255),b
  9672  001C52  EC4B  F015         	call	___flmul	;wreg free
  9673  001C56  C060  F0BF         	movff	?___flmul,efgtoa@l
  9674  001C5A  C061  F0C0         	movff	?___flmul+1,efgtoa@l+1
  9675  001C5E  C062  F0C1         	movff	?___flmul+2,efgtoa@l+2
  9676  001C62  C063  F0C2         	movff	?___flmul+3,efgtoa@l+3
  9677  001C66                     
  9678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9679  001C66  C0BB  F079         	movff	efgtoa@h,___flge@ff1
  9680  001C6A  C0BC  F07A         	movff	efgtoa@h+1,___flge@ff1+1
  9681  001C6E  C0BD  F07B         	movff	efgtoa@h+2,___flge@ff1+2
  9682  001C72  C0BE  F07C         	movff	efgtoa@h+3,___flge@ff1+3
  9683  001C76  C0BF  F07D         	movff	efgtoa@l,___flge@ff2
  9684  001C7A  C0C0  F07E         	movff	efgtoa@l+1,___flge@ff2+1
  9685  001C7E  C0C1  F07F         	movff	efgtoa@l+2,___flge@ff2+2
  9686  001C82  C0C2  F080         	movff	efgtoa@l+3,___flge@ff2+3
  9687  001C86  EC25  F02A         	call	___flge	;wreg free
  9688  001C8A  0100               	movlb	0	; () banked
  9689  001C8C  B0D8               	btfsc	status,0,c
  9690  001C8E  EF4B  F00E         	goto	u11271
  9691  001C92  EF4D  F00E         	goto	u11270
  9692  001C96                     u11271:
  9693  001C96  EF57  F00E         	goto	l8841
  9694  001C9A                     u11270:
  9695  001C9A                     
  9696                           ; BSR set to: 0
  9697                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9698  001C9A  0E00               	movlw	0
  9699  001C9C  6FBF               	movwf	efgtoa@l& (0+255),b
  9700  001C9E  0E00               	movlw	0
  9701  001CA0  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  9702  001CA2  0E00               	movlw	0
  9703  001CA4  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  9704  001CA6  0E00               	movlw	0
  9705  001CA8  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  9706                           
  9707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9708  001CAA  EF80  F00E         	goto	l8847
  9709  001CAE                     l8841:
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9713  001CAE  C0BB  F060         	movff	efgtoa@h,___fleq@ff1
  9714  001CB2  C0BC  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  9715  001CB6  C0BD  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  9716  001CBA  C0BE  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  9717  001CBE  C0BF  F064         	movff	efgtoa@l,___fleq@ff2
  9718  001CC2  C0C0  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  9719  001CC6  C0C1  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  9720  001CCA  C0C2  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  9721  001CCE  ECEA  F02D         	call	___fleq	;wreg free
  9722  001CD2  0100               	movlb	0	; () banked
  9723  001CD4  A0D8               	btfss	status,0,c
  9724  001CD6  EF6F  F00E         	goto	u11281
  9725  001CDA  EF71  F00E         	goto	u11280
  9726  001CDE                     u11281:
  9727  001CDE  EF80  F00E         	goto	l8847
  9728  001CE2                     u11280:
  9729  001CE2                     
  9730                           ; BSR set to: 0
  9731  001CE2  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  9732  001CE4  EF76  F00E         	goto	u11291
  9733  001CE8  EF78  F00E         	goto	u11290
  9734  001CEC                     u11291:
  9735  001CEC  EF80  F00E         	goto	l8847
  9736  001CF0                     u11290:
  9737  001CF0                     
  9738                           ; BSR set to: 0
  9739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9740  001CF0  0E00               	movlw	0
  9741  001CF2  6FBF               	movwf	efgtoa@l& (0+255),b
  9742  001CF4  0E00               	movlw	0
  9743  001CF6  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  9744  001CF8  0E00               	movlw	0
  9745  001CFA  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  9746  001CFC  0E00               	movlw	0
  9747  001CFE  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  9748  001D00                     l8847:
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9752  001D00  C0C5  F060         	movff	efgtoa@g,___fladd@b
  9753  001D04  C0C6  F061         	movff	efgtoa@g+1,___fladd@b+1
  9754  001D08  C0C7  F062         	movff	efgtoa@g+2,___fladd@b+2
  9755  001D0C  C0C8  F063         	movff	efgtoa@g+3,___fladd@b+3
  9756  001D10  C0BF  F064         	movff	efgtoa@l,___fladd@a
  9757  001D14  C0C0  F065         	movff	efgtoa@l+1,___fladd@a+1
  9758  001D18  C0C1  F066         	movff	efgtoa@l+2,___fladd@a+2
  9759  001D1C  C0C2  F067         	movff	efgtoa@l+3,___fladd@a+3
  9760  001D20  ECCF  F010         	call	___fladd	;wreg free
  9761  001D24  C060  F0BB         	movff	?___fladd,efgtoa@h
  9762  001D28  C061  F0BC         	movff	?___fladd+1,efgtoa@h+1
  9763  001D2C  C062  F0BD         	movff	?___fladd+2,efgtoa@h+2
  9764  001D30  C063  F0BE         	movff	?___fladd+3,efgtoa@h+3
  9765  001D34                     
  9766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9767  001D34  C099  F0CD         	movff	efgtoa@ou,efgtoa@u
  9768  001D38  C09A  F0CE         	movff	efgtoa@ou+1,efgtoa@u+1
  9769  001D3C  C09B  F0CF         	movff	efgtoa@ou+2,efgtoa@u+2
  9770  001D40  C09C  F0D0         	movff	efgtoa@ou+3,efgtoa@u+3
  9771  001D44                     
  9772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9773  001D44  0E65               	movlw	101
  9774  001D46  0100               	movlb	0	; () banked
  9775  001D48  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  9776  001D4A  B4D8               	btfsc	status,2,c
  9777  001D4C  EFAA  F00E         	goto	u11301
  9778  001D50  EFAC  F00E         	goto	u11300
  9779  001D54                     u11301:
  9780  001D54  EFB2  F00E         	goto	l8855
  9781  001D58                     u11300:
  9782  001D58                     
  9783                           ; BSR set to: 0
  9784  001D58  C0C9  F0AF         	movff	efgtoa@e,efgtoa@ne
  9785  001D5C  C0CA  F0B0         	movff	efgtoa@e+1,efgtoa@ne+1
  9786  001D60  EFB6  F00E         	goto	l686
  9787  001D64                     l8855:
  9788                           
  9789                           ; BSR set to: 0
  9790  001D64  0E00               	movlw	0
  9791  001D66  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  9792  001D68  0E00               	movlw	0
  9793  001D6A  6FAF               	movwf	efgtoa@ne& (0+255),b
  9794  001D6C                     l686:
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9798  001D6C  0E00               	movlw	0
  9799  001D6E  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  9800  001D70  0E00               	movlw	0
  9801  001D72  6FAB               	movwf	efgtoa@pp& (0+255),b
  9802                           
  9803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9804  001D74  0E00               	movlw	0
  9805  001D76  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  9806  001D78  0E00               	movlw	0
  9807  001D7A  6FA9               	movwf	efgtoa@t& (0+255),b
  9808                           
  9809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9810  001D7C  0E00               	movlw	0
  9811  001D7E  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  9812  001D80  0E00               	movlw	0
  9813  001D82  6FC3               	movwf	efgtoa@i& (0+255),b
  9814                           
  9815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9816  001D84  EFB3  F00F         	goto	l8905
  9817  001D88                     l8857:
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9821  001D88  C0BB  F060         	movff	efgtoa@h,___fldiv@b
  9822  001D8C  C0BC  F061         	movff	efgtoa@h+1,___fldiv@b+1
  9823  001D90  C0BD  F062         	movff	efgtoa@h+2,___fldiv@b+2
  9824  001D94  C0BE  F063         	movff	efgtoa@h+3,___fldiv@b+3
  9825  001D98  C0CD  F064         	movff	efgtoa@u,___fldiv@a
  9826  001D9C  C0CE  F065         	movff	efgtoa@u+1,___fldiv@a+1
  9827  001DA0  C0CF  F066         	movff	efgtoa@u+2,___fldiv@a+2
  9828  001DA4  C0D0  F067         	movff	efgtoa@u+3,___fldiv@a+3
  9829  001DA8  EC76  F019         	call	___fldiv	;wreg free
  9830  001DAC  C060  F079         	movff	?___fldiv,floorf@x
  9831  001DB0  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  9832  001DB4  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  9833  001DB8  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  9834  001DBC  EC23  F01E         	call	_floorf	;wreg free
  9835  001DC0  C079  F0BF         	movff	?_floorf,efgtoa@l
  9836  001DC4  C07A  F0C0         	movff	?_floorf+1,efgtoa@l+1
  9837  001DC8  C07B  F0C1         	movff	?_floorf+2,efgtoa@l+2
  9838  001DCC  C07C  F0C2         	movff	?_floorf+3,efgtoa@l+3
  9839                           
  9840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9841  001DD0  C0BF  F060         	movff	efgtoa@l,___fltol@f1
  9842  001DD4  C0C0  F061         	movff	efgtoa@l+1,___fltol@f1+1
  9843  001DD8  C0C1  F062         	movff	efgtoa@l+2,___fltol@f1+2
  9844  001DDC  C0C2  F063         	movff	efgtoa@l+3,___fltol@f1+3
  9845  001DE0  ECA1  F029         	call	___fltol	;wreg free
  9846  001DE4  C060  F0B1         	movff	?___fltol,efgtoa@d
  9847  001DE8  C061  F0B2         	movff	?___fltol+1,efgtoa@d+1
  9848  001DEC                     
  9849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9850  001DEC  B839               	btfsc	_flags^0,4,c
  9851  001DEE  EFFB  F00E         	goto	u11311
  9852  001DF2  EFFD  F00E         	goto	u11310
  9853  001DF6                     u11311:
  9854  001DF6  EF1B  F00F         	goto	l8869
  9855  001DFA                     u11310:
  9856  001DFA  0100               	movlb	0	; () banked
  9857  001DFC  51B1               	movf	efgtoa@d& (0+255),w,b
  9858  001DFE  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9859  001E00  A4D8               	btfss	status,2,c
  9860  001E02  EF05  F00F         	goto	u11321
  9861  001E06  EF07  F00F         	goto	u11320
  9862  001E0A                     u11321:
  9863  001E0A  EF1B  F00F         	goto	l8869
  9864  001E0E                     u11320:
  9865  001E0E                     
  9866                           ; BSR set to: 0
  9867  001E0E  0E67               	movlw	103
  9868  001E10  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  9869  001E12  A4D8               	btfss	status,2,c
  9870  001E14  EF0E  F00F         	goto	u11331
  9871  001E18  EF10  F00F         	goto	u11330
  9872  001E1C                     u11331:
  9873  001E1C  EF1B  F00F         	goto	l8869
  9874  001E20                     u11330:
  9875  001E20                     
  9876                           ; BSR set to: 0
  9877  001E20  BFB0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9878  001E22  EF17  F00F         	goto	u11340
  9879  001E26  EF15  F00F         	goto	u11341
  9880  001E2A                     u11341:
  9881  001E2A  EF1B  F00F         	goto	l8869
  9882  001E2E                     u11340:
  9883  001E2E                     
  9884                           ; BSR set to: 0
  9885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9886  001E2E  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  9887  001E30  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  9888                           
  9889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9890  001E32  EF66  F00F         	goto	l8897
  9891  001E36                     l8869:
  9892                           
  9893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9894  001E36  0100               	movlb	0	; () banked
  9895  001E38  51AB               	movf	efgtoa@pp& (0+255),w,b
  9896  001E3A  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9897  001E3C  A4D8               	btfss	status,2,c
  9898  001E3E  EF23  F00F         	goto	u11351
  9899  001E42  EF25  F00F         	goto	u11350
  9900  001E46                     u11351:
  9901  001E46  EF4F  F00F         	goto	l8889
  9902  001E4A                     u11350:
  9903  001E4A                     
  9904                           ; BSR set to: 0
  9905  001E4A  BFB0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9906  001E4C  EF2C  F00F         	goto	u11360
  9907  001E50  EF2A  F00F         	goto	u11361
  9908  001E54                     u11361:
  9909  001E54  EF4F  F00F         	goto	l8889
  9910  001E58                     u11360:
  9911  001E58                     
  9912                           ; BSR set to: 0
  9913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9914  001E58  0E6C               	movlw	low _dbuf
  9915  001E5A  25CB               	addwf	efgtoa@n& (0+255),w,b
  9916  001E5C  6ED9               	movwf	fsr2l,c
  9917  001E5E  0E01               	movlw	high _dbuf
  9918  001E60  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9919  001E62  6EDA               	movwf	fsr2h,c
  9920  001E64  0E2E               	movlw	46
  9921  001E66  6EDF               	movwf	indf2,c
  9922  001E68                     
  9923                           ; BSR set to: 0
  9924  001E68  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  9925  001E6A  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  9926  001E6C                     
  9927                           ; BSR set to: 0
  9928                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9929  001E6C  07B8               	decf	efgtoa@w& (0+255),f,b
  9930  001E6E  A0D8               	btfss	status,0,c
  9931  001E70  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  9932  001E72                     
  9933                           ; BSR set to: 0
  9934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9935  001E72  0E00               	movlw	0
  9936  001E74  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  9937  001E76  0E01               	movlw	1
  9938  001E78  6FAB               	movwf	efgtoa@pp& (0+255),b
  9939  001E7A  EF4F  F00F         	goto	l8889
  9940  001E7E                     l8881:
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9944  001E7E  0E6C               	movlw	low _dbuf
  9945  001E80  25CB               	addwf	efgtoa@n& (0+255),w,b
  9946  001E82  6ED9               	movwf	fsr2l,c
  9947  001E84  0E01               	movlw	high _dbuf
  9948  001E86  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9949  001E88  6EDA               	movwf	fsr2h,c
  9950  001E8A  0E30               	movlw	48
  9951  001E8C  6EDF               	movwf	indf2,c
  9952  001E8E                     
  9953                           ; BSR set to: 0
  9954  001E8E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  9955  001E90  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  9956  001E92                     
  9957                           ; BSR set to: 0
  9958                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9959  001E92  07B8               	decf	efgtoa@w& (0+255),f,b
  9960  001E94  A0D8               	btfss	status,0,c
  9961  001E96  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  9962  001E98                     
  9963                           ; BSR set to: 0
  9964                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9965  001E98  07A9               	decf	efgtoa@t& (0+255),f,b
  9966  001E9A  A0D8               	btfss	status,0,c
  9967  001E9C  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  9968  001E9E                     l8889:
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9972  001E9E  51A9               	movf	efgtoa@t& (0+255),w,b
  9973  001EA0  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9974  001EA2  A4D8               	btfss	status,2,c
  9975  001EA4  EF56  F00F         	goto	u11371
  9976  001EA8  EF58  F00F         	goto	u11370
  9977  001EAC                     u11371:
  9978  001EAC  EF3F  F00F         	goto	l8881
  9979  001EB0                     u11370:
  9980  001EB0                     
  9981                           ; BSR set to: 0
  9982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9983  001EB0  0E6C               	movlw	low _dbuf
  9984  001EB2  25CB               	addwf	efgtoa@n& (0+255),w,b
  9985  001EB4  6ED9               	movwf	fsr2l,c
  9986  001EB6  0E01               	movlw	high _dbuf
  9987  001EB8  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9988  001EBA  6EDA               	movwf	fsr2h,c
  9989  001EBC  51B1               	movf	efgtoa@d& (0+255),w,b
  9990  001EBE  0F30               	addlw	48
  9991  001EC0  6EDF               	movwf	indf2,c
  9992  001EC2                     
  9993                           ; BSR set to: 0
  9994  001EC2  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  9995  001EC4  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  9996  001EC6                     
  9997                           ; BSR set to: 0
  9998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9999  001EC6  07B8               	decf	efgtoa@w& (0+255),f,b
 10000  001EC8  A0D8               	btfss	status,0,c
 10001  001ECA  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
 10002  001ECC                     l8897:
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 10006  001ECC  C0BB  F079         	movff	efgtoa@h,___flsub@b
 10007  001ED0  C0BC  F07A         	movff	efgtoa@h+1,___flsub@b+1
 10008  001ED4  C0BD  F07B         	movff	efgtoa@h+2,___flsub@b+2
 10009  001ED8  C0BE  F07C         	movff	efgtoa@h+3,___flsub@b+3
 10010  001EDC  C0CD  F064         	movff	efgtoa@u,___flmul@a
 10011  001EE0  C0CE  F065         	movff	efgtoa@u+1,___flmul@a+1
 10012  001EE4  C0CF  F066         	movff	efgtoa@u+2,___flmul@a+2
 10013  001EE8  C0D0  F067         	movff	efgtoa@u+3,___flmul@a+3
 10014  001EEC  C0BF  F060         	movff	efgtoa@l,___flmul@b
 10015  001EF0  C0C0  F061         	movff	efgtoa@l+1,___flmul@b+1
 10016  001EF4  C0C1  F062         	movff	efgtoa@l+2,___flmul@b+2
 10017  001EF8  C0C2  F063         	movff	efgtoa@l+3,___flmul@b+3
 10018  001EFC  EC4B  F015         	call	___flmul	;wreg free
 10019  001F00  C060  F07D         	movff	?___flmul,___flsub@a
 10020  001F04  C061  F07E         	movff	?___flmul+1,___flsub@a+1
 10021  001F08  C062  F07F         	movff	?___flmul+2,___flsub@a+2
 10022  001F0C  C063  F080         	movff	?___flmul+3,___flsub@a+3
 10023  001F10  EC5C  F030         	call	___flsub	;wreg free
 10024  001F14  C079  F0BB         	movff	?___flsub,efgtoa@h
 10025  001F18  C07A  F0BC         	movff	?___flsub+1,efgtoa@h+1
 10026  001F1C  C07B  F0BD         	movff	?___flsub+2,efgtoa@h+2
 10027  001F20  C07C  F0BE         	movff	?___flsub+3,efgtoa@h+3
 10028  001F24                     
 10029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 10030  001F24  C0CD  F060         	movff	efgtoa@u,___fldiv@b
 10031  001F28  C0CE  F061         	movff	efgtoa@u+1,___fldiv@b+1
 10032  001F2C  C0CF  F062         	movff	efgtoa@u+2,___fldiv@b+2
 10033  001F30  C0D0  F063         	movff	efgtoa@u+3,___fldiv@b+3
 10034  001F34  0E00               	movlw	0
 10035  001F36  0100               	movlb	0	; () banked
 10036  001F38  6F64               	movwf	___fldiv@a& (0+255),b
 10037  001F3A  0E00               	movlw	0
 10038  001F3C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 10039  001F3E  0E20               	movlw	32
 10040  001F40  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 10041  001F42  0E41               	movlw	65
 10042  001F44  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 10043  001F46  EC76  F019         	call	___fldiv	;wreg free
 10044  001F4A  C060  F0CD         	movff	?___fldiv,efgtoa@u
 10045  001F4E  C061  F0CE         	movff	?___fldiv+1,efgtoa@u+1
 10046  001F52  C062  F0CF         	movff	?___fldiv+2,efgtoa@u+2
 10047  001F56  C063  F0D0         	movff	?___fldiv+3,efgtoa@u+3
 10048  001F5A                     
 10049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 10050  001F5A  0100               	movlb	0	; () banked
 10051  001F5C  07AF               	decf	efgtoa@ne& (0+255),f,b
 10052  001F5E  A0D8               	btfss	status,0,c
 10053  001F60  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
 10054  001F62                     
 10055                           ; BSR set to: 0
 10056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 10057  001F62  4BC3               	infsnz	efgtoa@i& (0+255),f,b
 10058  001F64  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
 10059  001F66                     l8905:
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10063  001F66  51AD               	movf	efgtoa@m& (0+255),w,b
 10064  001F68  5DC3               	subwf	efgtoa@i& (0+255),w,b
 10065  001F6A  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
 10066  001F6C  0A80               	xorlw	128
 10067  001F6E  6F94               	movwf	??_efgtoa& (0+255),b
 10068  001F70  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
 10069  001F72  0A80               	xorlw	128
 10070  001F74  5994               	subwfb	??_efgtoa& (0+255),w,b
 10071  001F76  B0D8               	btfsc	status,0,c
 10072  001F78  EFC0  F00F         	goto	u11381
 10073  001F7C  EFC2  F00F         	goto	u11380
 10074  001F80                     u11381:
 10075  001F80  EFD0  F00F         	goto	l8909
 10076  001F84                     u11380:
 10077  001F84                     
 10078                           ; BSR set to: 0
 10079  001F84  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
 10080  001F86  EFCE  F00F         	goto	u11391
 10081  001F8A  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
 10082  001F8C  E109               	bnz	u11390
 10083  001F8E  0E4B               	movlw	75
 10084  001F90  5DCB               	subwf	efgtoa@n& (0+255),w,b
 10085  001F92  A0D8               	btfss	status,0,c
 10086  001F94  EFCE  F00F         	goto	u11391
 10087  001F98  EFD0  F00F         	goto	u11390
 10088  001F9C                     u11391:
 10089  001F9C  EFC4  F00E         	goto	l8857
 10090  001FA0                     u11390:
 10091  001FA0                     l8909:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 10095  001FA0  51AB               	movf	efgtoa@pp& (0+255),w,b
 10096  001FA2  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
 10097  001FA4  A4D8               	btfss	status,2,c
 10098  001FA6  EFD7  F00F         	goto	u11401
 10099  001FAA  EFD9  F00F         	goto	u11400
 10100  001FAE                     u11401:
 10101  001FAE  EFEA  F00F         	goto	l8917
 10102  001FB2                     u11400:
 10103  001FB2                     
 10104                           ; BSR set to: 0
 10105  001FB2  A839               	btfss	_flags^0,4,c
 10106  001FB4  EFDE  F00F         	goto	u11411
 10107  001FB8  EFE0  F00F         	goto	u11410
 10108  001FBC                     u11411:
 10109  001FBC  EFEA  F00F         	goto	l8917
 10110  001FC0                     u11410:
 10111  001FC0                     
 10112                           ; BSR set to: 0
 10113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 10114  001FC0  0E6C               	movlw	low _dbuf
 10115  001FC2  25CB               	addwf	efgtoa@n& (0+255),w,b
 10116  001FC4  6ED9               	movwf	fsr2l,c
 10117  001FC6  0E01               	movlw	high _dbuf
 10118  001FC8  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10119  001FCA  6EDA               	movwf	fsr2h,c
 10120  001FCC  0E2E               	movlw	46
 10121  001FCE  6EDF               	movwf	indf2,c
 10122  001FD0                     
 10123                           ; BSR set to: 0
 10124  001FD0  4BCB               	infsnz	efgtoa@n& (0+255),f,b
 10125  001FD2  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
 10126  001FD4                     l8917:
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 10130  001FD4  0E6C               	movlw	low _dbuf
 10131  001FD6  25CB               	addwf	efgtoa@n& (0+255),w,b
 10132  001FD8  6ED9               	movwf	fsr2l,c
 10133  001FDA  0E01               	movlw	high _dbuf
 10134  001FDC  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10135  001FDE  6EDA               	movwf	fsr2h,c
 10136  001FE0  0E00               	movlw	0
 10137  001FE2  6EDF               	movwf	indf2,c
 10138  001FE4                     
 10139                           ; BSR set to: 0
 10140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 10141  001FE4  0E65               	movlw	101
 10142  001FE6  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
 10143  001FE8  A4D8               	btfss	status,2,c
 10144  001FEA  EFF9  F00F         	goto	u11421
 10145  001FEE  EFFB  F00F         	goto	u11420
 10146  001FF2                     u11421:
 10147  001FF2  EFA3  F00B         	goto	l8729
 10148  001FF6                     u11420:
 10149  001FF6                     
 10150                           ; BSR set to: 0
 10151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 10152  001FF6  0E00               	movlw	0
 10153  001FF8  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
 10154  001FFA  0E4F               	movlw	79
 10155  001FFC  6FC3               	movwf	efgtoa@i& (0+255),b
 10156  001FFE                     
 10157                           ; BSR set to: 0
 10158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 10159  001FFE  0E6C               	movlw	low _dbuf
 10160  002000  25C3               	addwf	efgtoa@i& (0+255),w,b
 10161  002002  6ED9               	movwf	fsr2l,c
 10162  002004  0E01               	movlw	high _dbuf
 10163  002006  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10164  002008  6EDA               	movwf	fsr2h,c
 10165  00200A  0E00               	movlw	0
 10166  00200C  6EDF               	movwf	indf2,c
 10167  00200E                     
 10168                           ; BSR set to: 0
 10169                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 10170  00200E  0E00               	movlw	0
 10171  002010  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
 10172  002012  0E00               	movlw	0
 10173  002014  6FB3               	movwf	efgtoa@sign& (0+255),b
 10174  002016                     
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 10177  002016  BFCA               	btfsc	(efgtoa@e+1)& (0+255),7,b
 10178  002018  EF12  F010         	goto	u11430
 10179  00201C  EF10  F010         	goto	u11431
 10180  002020                     u11431:
 10181  002020  EF1A  F010         	goto	l8933
 10182  002024                     u11430:
 10183  002024                     
 10184                           ; BSR set to: 0
 10185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 10186  002024  0E00               	movlw	0
 10187  002026  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
 10188  002028  0E01               	movlw	1
 10189  00202A  6FB3               	movwf	efgtoa@sign& (0+255),b
 10190  00202C                     
 10191                           ; BSR set to: 0
 10192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 10193  00202C  6DC9               	negf	efgtoa@e& (0+255),b
 10194  00202E  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
 10195  002030  B0D8               	btfsc	status,0,c
 10196  002032  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
 10197  002034                     l8933:
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 10201  002034  0E00               	movlw	0
 10202  002036  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
 10203  002038  0E02               	movlw	2
 10204  00203A  6FB5               	movwf	efgtoa@p& (0+255),b
 10205                           
 10206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10207  00203C  EF4C  F010         	goto	l8945
 10208  002040                     l8935:
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 10212  002040  07C3               	decf	efgtoa@i& (0+255),f,b
 10213  002042  A0D8               	btfss	status,0,c
 10214  002044  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
 10215  002046                     
 10216                           ; BSR set to: 0
 10217                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 10218  002046  0E6C               	movlw	low _dbuf
 10219  002048  25C3               	addwf	efgtoa@i& (0+255),w,b
 10220  00204A  6ED9               	movwf	fsr2l,c
 10221  00204C  0E01               	movlw	high _dbuf
 10222  00204E  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10223  002050  6EDA               	movwf	fsr2h,c
 10224  002052  C0C9  F060         	movff	efgtoa@e,___awmod@dividend
 10225  002056  C0CA  F061         	movff	efgtoa@e+1,___awmod@dividend+1
 10226  00205A  0E00               	movlw	0
 10227  00205C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10228  00205E  0E0A               	movlw	10
 10229  002060  6F62               	movwf	___awmod@divisor& (0+255),b
 10230  002062  EC91  F02D         	call	___awmod	;wreg free
 10231  002066  0100               	movlb	0	; () banked
 10232  002068  5160               	movf	?___awmod& (0+255),w,b
 10233  00206A  0F30               	addlw	48
 10234  00206C  6EDF               	movwf	indf2,c
 10235  00206E                     
 10236                           ; BSR set to: 0
 10237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 10238  00206E  C0C9  F060         	movff	efgtoa@e,___awdiv@dividend
 10239  002072  C0CA  F061         	movff	efgtoa@e+1,___awdiv@dividend+1
 10240  002076  0E00               	movlw	0
 10241  002078  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 10242  00207A  0E0A               	movlw	10
 10243  00207C  6F62               	movwf	___awdiv@divisor& (0+255),b
 10244  00207E  ECD4  F02C         	call	___awdiv	;wreg free
 10245  002082  C060  F0C9         	movff	?___awdiv,efgtoa@e
 10246  002086  C061  F0CA         	movff	?___awdiv+1,efgtoa@e+1
 10247  00208A                     
 10248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 10249  00208A  0100               	movlb	0	; () banked
 10250  00208C  07B5               	decf	efgtoa@p& (0+255),f,b
 10251  00208E  A0D8               	btfss	status,0,c
 10252  002090  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
 10253  002092                     
 10254                           ; BSR set to: 0
 10255                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 10256  002092  07B8               	decf	efgtoa@w& (0+255),f,b
 10257  002094  A0D8               	btfss	status,0,c
 10258  002096  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
 10259  002098                     l8945:
 10260                           
 10261                           ; BSR set to: 0
 10262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 10263  002098  51C9               	movf	efgtoa@e& (0+255),w,b
 10264  00209A  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
 10265  00209C  A4D8               	btfss	status,2,c
 10266  00209E  EF53  F010         	goto	u11441
 10267  0020A2  EF55  F010         	goto	u11440
 10268  0020A6                     u11441:
 10269  0020A6  EF20  F010         	goto	l8935
 10270  0020AA                     u11440:
 10271  0020AA                     
 10272                           ; BSR set to: 0
 10273  0020AA  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
 10274  0020AC  EF62  F010         	goto	u11450
 10275  0020B0  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
 10276  0020B2  E106               	bnz	u11451
 10277  0020B4  05B5               	decf	efgtoa@p& (0+255),w,b
 10278  0020B6  B0D8               	btfsc	status,0,c
 10279  0020B8  EF60  F010         	goto	u11451
 10280  0020BC  EF62  F010         	goto	u11450
 10281  0020C0                     u11451:
 10282  0020C0  EF20  F010         	goto	l8935
 10283  0020C4                     u11450:
 10284  0020C4                     
 10285                           ; BSR set to: 0
 10286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 10287  0020C4  07C3               	decf	efgtoa@i& (0+255),f,b
 10288  0020C6  A0D8               	btfss	status,0,c
 10289  0020C8  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
 10290  0020CA                     
 10291                           ; BSR set to: 0
 10292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 10293  0020CA  51B3               	movf	efgtoa@sign& (0+255),w,b
 10294  0020CC  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
 10295  0020CE  A4D8               	btfss	status,2,c
 10296  0020D0  EF6C  F010         	goto	u11461
 10297  0020D4  EF6E  F010         	goto	u11460
 10298  0020D8                     u11461:
 10299  0020D8  EF74  F010         	goto	l8955
 10300  0020DC                     u11460:
 10301  0020DC                     
 10302                           ; BSR set to: 0
 10303  0020DC  0E00               	movlw	0
 10304  0020DE  6FA4               	movwf	(_efgtoa$1612+1)& (0+255),b
 10305  0020E0  0E2B               	movlw	43
 10306  0020E2  6FA3               	movwf	_efgtoa$1612& (0+255),b
 10307  0020E4  EF78  F010         	goto	l8957
 10308  0020E8                     l8955:
 10309                           
 10310                           ; BSR set to: 0
 10311  0020E8  0E00               	movlw	0
 10312  0020EA  6FA4               	movwf	(_efgtoa$1612+1)& (0+255),b
 10313  0020EC  0E2D               	movlw	45
 10314  0020EE  6FA3               	movwf	_efgtoa$1612& (0+255),b
 10315  0020F0                     l8957:
 10316                           
 10317                           ; BSR set to: 0
 10318  0020F0  0E6C               	movlw	low _dbuf
 10319  0020F2  25C3               	addwf	efgtoa@i& (0+255),w,b
 10320  0020F4  6ED9               	movwf	fsr2l,c
 10321  0020F6  0E01               	movlw	high _dbuf
 10322  0020F8  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10323  0020FA  6EDA               	movwf	fsr2h,c
 10324  0020FC  C0A3  FFDF         	movff	_efgtoa$1612,indf2
 10325  002100                     
 10326                           ; BSR set to: 0
 10327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 10328  002100  07B8               	decf	efgtoa@w& (0+255),f,b
 10329  002102  A0D8               	btfss	status,0,c
 10330  002104  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
 10331  002106                     
 10332                           ; BSR set to: 0
 10333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 10334  002106  07C3               	decf	efgtoa@i& (0+255),f,b
 10335  002108  A0D8               	btfss	status,0,c
 10336  00210A  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
 10337  00210C                     
 10338                           ; BSR set to: 0
 10339  00210C  0EBF               	movlw	191
 10340  00210E  6F94               	movwf	??_efgtoa& (0+255),b
 10341  002110  0EFF               	movlw	255
 10342  002112  6F95               	movwf	(??_efgtoa+1)& (0+255),b
 10343  002114  5193               	movf	efgtoa@c& (0+255),w,b
 10344  002116  6F96               	movwf	(??_efgtoa+2)& (0+255),b
 10345  002118  6B97               	clrf	(??_efgtoa+3)& (0+255),b
 10346  00211A  5194               	movf	??_efgtoa& (0+255),w,b
 10347  00211C  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
 10348  00211E  5195               	movf	(??_efgtoa+1)& (0+255),w,b
 10349  002120  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
 10350  002122  5197               	movf	(??_efgtoa+3)& (0+255),w,b
 10351  002124  E10A               	bnz	u11470
 10352  002126  0E1A               	movlw	26
 10353  002128  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
 10354  00212A  A0D8               	btfss	status,0,c
 10355  00212C  EF9A  F010         	goto	u11471
 10356  002130  EF9D  F010         	goto	u11470
 10357  002134                     u11471:
 10358  002134  0E01               	movlw	1
 10359  002136  EF9E  F010         	goto	u11480
 10360  00213A                     u11470:
 10361  00213A  0E00               	movlw	0
 10362  00213C                     u11480:
 10363  00213C  6FA7               	movwf	_efgtoa$1614& (0+255),b
 10364  00213E  6BA8               	clrf	(_efgtoa$1614+1)& (0+255),b
 10365  002140                     
 10366                           ; BSR set to: 0
 10367  002140  51A7               	movf	_efgtoa$1614& (0+255),w,b
 10368  002142  11A8               	iorwf	(_efgtoa$1614+1)& (0+255),w,b
 10369  002144  A4D8               	btfss	status,2,c
 10370  002146  EFA7  F010         	goto	u11491
 10371  00214A  EFA9  F010         	goto	u11490
 10372  00214E                     u11491:
 10373  00214E  EFAF  F010         	goto	l8971
 10374  002152                     u11490:
 10375  002152                     
 10376                           ; BSR set to: 0
 10377  002152  0E00               	movlw	0
 10378  002154  6FA6               	movwf	(_efgtoa$1613+1)& (0+255),b
 10379  002156  0E65               	movlw	101
 10380  002158  6FA5               	movwf	_efgtoa$1613& (0+255),b
 10381  00215A  EFB3  F010         	goto	l8973
 10382  00215E                     l8971:
 10383                           
 10384                           ; BSR set to: 0
 10385  00215E  0E00               	movlw	0
 10386  002160  6FA6               	movwf	(_efgtoa$1613+1)& (0+255),b
 10387  002162  0E45               	movlw	69
 10388  002164  6FA5               	movwf	_efgtoa$1613& (0+255),b
 10389  002166                     l8973:
 10390                           
 10391                           ; BSR set to: 0
 10392  002166  0E6C               	movlw	low _dbuf
 10393  002168  25C3               	addwf	efgtoa@i& (0+255),w,b
 10394  00216A  6ED9               	movwf	fsr2l,c
 10395  00216C  0E01               	movlw	high _dbuf
 10396  00216E  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10397  002170  6EDA               	movwf	fsr2h,c
 10398  002172  C0A5  FFDF         	movff	_efgtoa$1613,indf2
 10399  002176                     
 10400                           ; BSR set to: 0
 10401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 10402  002176  07B8               	decf	efgtoa@w& (0+255),f,b
 10403  002178  A0D8               	btfss	status,0,c
 10404  00217A  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
 10405  00217C                     
 10406                           ; BSR set to: 0
 10407                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 10408  00217C  0E6C               	movlw	low _dbuf
 10409  00217E  25CB               	addwf	efgtoa@n& (0+255),w,b
 10410  002180  6F60               	movwf	strcpy@dest& (0+255),b
 10411  002182  0E01               	movlw	high _dbuf
 10412  002184  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
 10413  002186  6F61               	movwf	(strcpy@dest+1)& (0+255),b
 10414  002188  0E6C               	movlw	low _dbuf
 10415  00218A  25C3               	addwf	efgtoa@i& (0+255),w,b
 10416  00218C  6F62               	movwf	strcpy@src& (0+255),b
 10417  00218E  0E01               	movlw	high _dbuf
 10418  002190  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
 10419  002192  6F63               	movwf	(strcpy@src+1)& (0+255),b
 10420  002194  EC5B  F02F         	call	_strcpy	;wreg free
 10421  002198  EFA3  F00B         	goto	l8729
 10422  00219C                     l642:
 10423  00219C  0012               	return		;funcret
 10424  00219E                     __end_of_efgtoa:
 10425                           	opt callstack 0
 10426                           
 10427 ;; *************** function _tolower *****************
 10428 ;; Defined at:
 10429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;  c               2    6[BANK0 ] int 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  2    6[BANK0 ] int 
 10436 ;; Registers used:
 10437 ;;		wreg, status,2, status,0
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10444 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10446 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10447 ;;Total ram usage:        8 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    6
 10450 ;; This function calls:
 10451 ;;		_isupper
 10452 ;; This function is called by:
 10453 ;;		_efgtoa
 10454 ;;		_vfpfcnvrt
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           
 10458                           	psect	text16
 10459  005DF4                     __ptext16:
 10460                           	opt callstack 0
 10461  005DF4                     _tolower:
 10462                           	opt callstack 20
 10463  005DF4  0EBF               	movlw	191
 10464  005DF6  0100               	movlb	0	; () banked
 10465  005DF8  6F68               	movwf	??_tolower& (0+255),b
 10466  005DFA  0EFF               	movlw	255
 10467  005DFC  6F69               	movwf	(??_tolower+1)& (0+255),b
 10468  005DFE  C066  F06A         	movff	tolower@c,??_tolower+2
 10469  005E02  C067  F06B         	movff	tolower@c+1,??_tolower+3
 10470  005E06  5168               	movf	??_tolower& (0+255),w,b
 10471  005E08  276A               	addwf	(??_tolower+2)& (0+255),f,b
 10472  005E0A  5169               	movf	(??_tolower+1)& (0+255),w,b
 10473  005E0C  236B               	addwfc	(??_tolower+3)& (0+255),f,b
 10474  005E0E  516B               	movf	(??_tolower+3)& (0+255),w,b
 10475  005E10  E10A               	bnz	u9690
 10476  005E12  0E1A               	movlw	26
 10477  005E14  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
 10478  005E16  A0D8               	btfss	status,0,c
 10479  005E18  EF10  F02F         	goto	u9691
 10480  005E1C  EF13  F02F         	goto	u9690
 10481  005E20                     u9691:
 10482  005E20  0E01               	movlw	1
 10483  005E22  EF14  F02F         	goto	u9700
 10484  005E26                     u9690:
 10485  005E26  0E00               	movlw	0
 10486  005E28                     u9700:
 10487  005E28  6F6C               	movwf	_tolower$2371& (0+255),b
 10488  005E2A  6B6D               	clrf	(_tolower$2371+1)& (0+255),b
 10489  005E2C                     
 10490                           ; BSR set to: 0
 10491  005E2C  516C               	movf	_tolower$2371& (0+255),w,b
 10492  005E2E  116D               	iorwf	(_tolower$2371+1)& (0+255),w,b
 10493  005E30  B4D8               	btfsc	status,2,c
 10494  005E32  EF1D  F02F         	goto	u9711
 10495  005E36  EF1F  F02F         	goto	u9710
 10496  005E3A                     u9711:
 10497  005E3A  EF26  F02F         	goto	l1709
 10498  005E3E                     u9710:
 10499  005E3E                     
 10500                           ; BSR set to: 0
 10501  005E3E  0E20               	movlw	32
 10502  005E40  1166               	iorwf	tolower@c& (0+255),w,b
 10503  005E42  6F66               	movwf	?_tolower& (0+255),b
 10504  005E44  5167               	movf	(tolower@c+1)& (0+255),w,b
 10505  005E46  6F67               	movwf	(?_tolower+1)& (0+255),b
 10506  005E48  EF2A  F02F         	goto	l1714
 10507  005E4C                     l1709:
 10508                           
 10509                           ; BSR set to: 0
 10510  005E4C  C066  F066         	movff	tolower@c,?_tolower
 10511  005E50  C067  F067         	movff	tolower@c+1,?_tolower+1
 10512  005E54                     l1714:
 10513                           
 10514                           ; BSR set to: 0
 10515  005E54  0012               	return		;funcret
 10516  005E56                     __end_of_tolower:
 10517                           	opt callstack 0
 10518                           
 10519 ;; *************** function _isupper *****************
 10520 ;; Defined at:
 10521 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  c               2    0[BANK0 ] int 
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;		None
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  2    0[BANK0 ] int 
 10528 ;; Registers used:
 10529 ;;		wreg, status,2, status,0
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10535 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10537 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10538 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;Total ram usage:        6 bytes
 10540 ;; Hardware stack levels used:    1
 10541 ;; Hardware stack levels required when called:    5
 10542 ;; This function calls:
 10543 ;;		Nothing
 10544 ;; This function is called by:
 10545 ;;		_efgtoa
 10546 ;;		_xtoa
 10547 ;;		_vfpfcnvrt
 10548 ;;		_tolower
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           	psect	text17
 10553  00628C                     __ptext17:
 10554                           	opt callstack 0
 10555  00628C                     _isupper:
 10556                           	opt callstack 20
 10557  00628C  0EBF               	movlw	191
 10558  00628E  0100               	movlb	0	; () banked
 10559  006290  6F62               	movwf	??_isupper& (0+255),b
 10560  006292  0EFF               	movlw	255
 10561  006294  6F63               	movwf	(??_isupper+1)& (0+255),b
 10562  006296  C060  F064         	movff	isupper@c,??_isupper+2
 10563  00629A  C061  F065         	movff	isupper@c+1,??_isupper+3
 10564  00629E  5162               	movf	??_isupper& (0+255),w,b
 10565  0062A0  2764               	addwf	(??_isupper+2)& (0+255),f,b
 10566  0062A2  5163               	movf	(??_isupper+1)& (0+255),w,b
 10567  0062A4  2365               	addwfc	(??_isupper+3)& (0+255),f,b
 10568  0062A6  5165               	movf	(??_isupper+3)& (0+255),w,b
 10569  0062A8  E10A               	bnz	u9110
 10570  0062AA  0E1A               	movlw	26
 10571  0062AC  5D64               	subwf	(??_isupper+2)& (0+255),w,b
 10572  0062AE  A0D8               	btfss	status,0,c
 10573  0062B0  EF5C  F031         	goto	u9111
 10574  0062B4  EF5F  F031         	goto	u9110
 10575  0062B8                     u9111:
 10576  0062B8  0E01               	movlw	1
 10577  0062BA  EF60  F031         	goto	u9120
 10578  0062BE                     u9110:
 10579  0062BE  0E00               	movlw	0
 10580  0062C0                     u9120:
 10581  0062C0  6F60               	movwf	?_isupper& (0+255),b
 10582  0062C2  6B61               	clrf	(?_isupper+1)& (0+255),b
 10583  0062C4                     
 10584                           ; BSR set to: 0
 10585  0062C4  0012               	return		;funcret
 10586  0062C6                     __end_of_isupper:
 10587                           	opt callstack 0
 10588                           
 10589 ;; *************** function _strcpy *****************
 10590 ;; Defined at:
 10591 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;  dest            2    0[BANK0 ] PTR unsigned char 
 10594 ;;		 -> dbuf(80), 
 10595 ;;  src             2    2[BANK0 ] PTR const unsigned char 
 10596 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10597 ;;		 -> dbuf(80), 
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;  d               2    8[BANK0 ] PTR unsigned char 
 10600 ;;		 -> dbuf(80), 
 10601 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 10602 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
 10603 ;;		 -> dbuf(80), 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  2    0[BANK0 ] PTR unsigned char 
 10606 ;; Registers used:
 10607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10616 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10617 ;;Total ram usage:       10 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    5
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_efgtoa
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	text18
 10628  005EB6                     __ptext18:
 10629                           	opt callstack 0
 10630  005EB6                     _strcpy:
 10631                           	opt callstack 20
 10632  005EB6  C062  F066         	movff	strcpy@src,strcpy@s
 10633  005EBA  C063  F067         	movff	strcpy@src+1,strcpy@s+1
 10634  005EBE  C060  F068         	movff	strcpy@dest,strcpy@d
 10635  005EC2  C061  F069         	movff	strcpy@dest+1,strcpy@d+1
 10636  005EC6                     l7963:
 10637  005EC6  0100               	movlb	0	; () banked
 10638  005EC8  5166               	movf	strcpy@s& (0+255),w,b
 10639  005ECA  6F64               	movwf	??_strcpy& (0+255),b
 10640  005ECC  5167               	movf	(strcpy@s+1)& (0+255),w,b
 10641  005ECE  6F65               	movwf	(??_strcpy+1)& (0+255),b
 10642  005ED0  4B66               	infsnz	strcpy@s& (0+255),f,b
 10643  005ED2  2B67               	incf	(strcpy@s+1)& (0+255),f,b
 10644  005ED4  C064  FFF6         	movff	??_strcpy,tblptrl
 10645  005ED8  C065  FFF7         	movff	??_strcpy+1,tblptrh
 10646  005EDC  0E00               	movlw	low (__mediumconst shr (0+16))
 10647  005EDE  6EF8               	movwf	tblptru,c
 10648  005EE0  C068  FFD9         	movff	strcpy@d,fsr2l
 10649  005EE4  C069  FFDA         	movff	strcpy@d+1,fsr2h
 10650  005EE8  4B68               	infsnz	strcpy@d& (0+255),f,b
 10651  005EEA  2B69               	incf	(strcpy@d+1)& (0+255),f,b
 10652  005EEC  0E0E               	movlw	(high __ramtop+-1)
 10653  005EEE  64F7               	cpfsgt	tblptrh,c
 10654  005EF0  D003               	bra	u9677
 10655  005EF2  0008               	tblrd		*
 10656  005EF4  50F5               	movf	tablat,w,c
 10657  005EF6  D005               	bra	u9670
 10658  005EF8                     u9677:
 10659  005EF8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10660  005EFC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10661  005F00  50E7               	movf	indf1,w,c
 10662  005F02                     u9670:
 10663  005F02  6EDF               	movwf	indf2,c
 10664  005F04  50DF               	movf	indf2,w,c
 10665  005F06  A4D8               	btfss	status,2,c
 10666  005F08  EF88  F02F         	goto	u9681
 10667  005F0C  EF8A  F02F         	goto	u9680
 10668  005F10                     u9681:
 10669  005F10  EF63  F02F         	goto	l7963
 10670  005F14                     u9680:
 10671  005F14  0012               	return		;funcret
 10672  005F16                     __end_of_strcpy:
 10673                           	opt callstack 0
 10674                           
 10675 ;; *************** function _floorf *****************
 10676 ;; Defined at:
 10677 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  x               4   25[BANK0 ] float 
 10680 ;; Auto vars:     Size  Location     Type
 10681 ;;  u               4   41[BANK0 ] struct .
 10682 ;;  m               4   35[BANK0 ] unsigned long 
 10683 ;;  e               2   39[BANK0 ] int 
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  4   25[BANK0 ] float 
 10686 ;; Registers used:
 10687 ;;		wreg, status,2, status,0
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10693 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10694 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10695 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10696 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10697 ;;Total ram usage:       20 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    5
 10700 ;; This function calls:
 10701 ;;		Nothing
 10702 ;; This function is called by:
 10703 ;;		_efgtoa
 10704 ;; This function uses a non-reentrant model
 10705 ;;
 10706                           
 10707                           	psect	text19
 10708  003C46                     __ptext19:
 10709                           	opt callstack 0
 10710  003C46                     _floorf:
 10711                           	opt callstack 20
 10712  003C46  C02D  F089         	movff	floorf@F524,floorf@u
 10713  003C4A  C02E  F08A         	movff	floorf@F524+1,floorf@u+1
 10714  003C4E  C02F  F08B         	movff	floorf@F524+2,floorf@u+2
 10715  003C52  C030  F08C         	movff	floorf@F524+3,floorf@u+3
 10716  003C56  C079  F089         	movff	floorf@x,floorf@u
 10717  003C5A  C07A  F08A         	movff	floorf@x+1,floorf@u+1
 10718  003C5E  C07B  F08B         	movff	floorf@x+2,floorf@u+2
 10719  003C62  C07C  F08C         	movff	floorf@x+3,floorf@u+3
 10720  003C66  0E81               	movlw	129
 10721  003C68  0100               	movlb	0	; () banked
 10722  003C6A  6F7D               	movwf	??_floorf& (0+255),b
 10723  003C6C  0EFF               	movlw	255
 10724  003C6E  6F7E               	movwf	(??_floorf+1)& (0+255),b
 10725  003C70  C089  F07F         	movff	floorf@u,??_floorf+2
 10726  003C74  C08A  F080         	movff	floorf@u+1,??_floorf+3
 10727  003C78  C08B  F081         	movff	floorf@u+2,??_floorf+4
 10728  003C7C  C08C  F082         	movff	floorf@u+3,??_floorf+5
 10729  003C80  0E18               	movlw	24
 10730  003C82  EF48  F01E         	goto	u9720
 10731  003C86                     u9725:
 10732  003C86  90D8               	bcf	status,0,c
 10733  003C88  3382               	rrcf	(??_floorf+5)& (0+255),f,b
 10734  003C8A  3381               	rrcf	(??_floorf+4)& (0+255),f,b
 10735  003C8C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
 10736  003C8E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
 10737  003C90                     u9720:
 10738  003C90  2EE8               	decfsz	wreg,f,c
 10739  003C92  EF43  F01E         	goto	u9725
 10740  003C96  517F               	movf	(??_floorf+2)& (0+255),w,b
 10741  003C98  257D               	addwf	??_floorf& (0+255),w,b
 10742  003C9A  6F87               	movwf	floorf@e& (0+255),b
 10743  003C9C  0E00               	movlw	0
 10744  003C9E  217E               	addwfc	(??_floorf+1)& (0+255),w,b
 10745  003CA0  6F88               	movwf	(floorf@e+1)& (0+255),b
 10746  003CA2  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
 10747  003CA4  EF5D  F01E         	goto	u9731
 10748  003CA8  5188               	movf	(floorf@e+1)& (0+255),w,b
 10749  003CAA  E109               	bnz	u9730
 10750  003CAC  0E17               	movlw	23
 10751  003CAE  5D87               	subwf	floorf@e& (0+255),w,b
 10752  003CB0  A0D8               	btfss	status,0,c
 10753  003CB2  EF5D  F01E         	goto	u9731
 10754  003CB6  EF5F  F01E         	goto	u9730
 10755  003CBA                     u9731:
 10756  003CBA  EF69  F01E         	goto	l7981
 10757  003CBE                     u9730:
 10758  003CBE                     l7979:
 10759                           
 10760                           ; BSR set to: 0
 10761  003CBE  C079  F079         	movff	floorf@x,?_floorf
 10762  003CC2  C07A  F07A         	movff	floorf@x+1,?_floorf+1
 10763  003CC6  C07B  F07B         	movff	floorf@x+2,?_floorf+2
 10764  003CCA  C07C  F07C         	movff	floorf@x+3,?_floorf+3
 10765  003CCE  EF2D  F01F         	goto	l1620
 10766  003CD2                     l7981:
 10767                           
 10768                           ; BSR set to: 0
 10769  003CD2  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
 10770  003CD4  EF6E  F01E         	goto	u9741
 10771  003CD8  EF70  F01E         	goto	u9740
 10772  003CDC                     u9741:
 10773  003CDC  EFE1  F01E         	goto	l7991
 10774  003CE0                     u9740:
 10775  003CE0                     
 10776                           ; BSR set to: 0
 10777  003CE0  C087  F07D         	movff	floorf@e,??_floorf
 10778  003CE4  0EFF               	movlw	255
 10779  003CE6  6F7E               	movwf	(??_floorf+1)& (0+255),b
 10780  003CE8  0EFF               	movlw	255
 10781  003CEA  6F7F               	movwf	(??_floorf+2)& (0+255),b
 10782  003CEC  0E7F               	movlw	127
 10783  003CEE  6F80               	movwf	(??_floorf+3)& (0+255),b
 10784  003CF0  0E00               	movlw	0
 10785  003CF2  6F81               	movwf	(??_floorf+4)& (0+255),b
 10786  003CF4                     u9755:
 10787  003CF4  677D               	tstfsz	??_floorf& (0+255),b
 10788  003CF6  EF7F  F01E         	goto	u9756
 10789  003CFA  EF87  F01E         	goto	u9757
 10790  003CFE                     u9756:
 10791  003CFE  3581               	rlcf	(??_floorf+4)& (0+255),w,b
 10792  003D00  3381               	rrcf	(??_floorf+4)& (0+255),f,b
 10793  003D02  3380               	rrcf	(??_floorf+3)& (0+255),f,b
 10794  003D04  337F               	rrcf	(??_floorf+2)& (0+255),f,b
 10795  003D06  337E               	rrcf	(??_floorf+1)& (0+255),f,b
 10796  003D08  2F7D               	decfsz	??_floorf& (0+255),f,b
 10797  003D0A  EF7A  F01E         	goto	u9755
 10798  003D0E                     u9757:
 10799  003D0E  C07E  F083         	movff	??_floorf+1,floorf@m
 10800  003D12  C07F  F084         	movff	??_floorf+2,floorf@m+1
 10801  003D16  C080  F085         	movff	??_floorf+3,floorf@m+2
 10802  003D1A  C081  F086         	movff	??_floorf+4,floorf@m+3
 10803  003D1E  0100               	movlb	0	; () banked
 10804  003D20  5183               	movf	floorf@m& (0+255),w,b
 10805  003D22  1589               	andwf	floorf@u& (0+255),w,b
 10806  003D24  6F7D               	movwf	??_floorf& (0+255),b
 10807  003D26  5184               	movf	(floorf@m+1)& (0+255),w,b
 10808  003D28  158A               	andwf	(floorf@u+1)& (0+255),w,b
 10809  003D2A  6F7E               	movwf	(??_floorf+1)& (0+255),b
 10810  003D2C  5185               	movf	(floorf@m+2)& (0+255),w,b
 10811  003D2E  158B               	andwf	(floorf@u+2)& (0+255),w,b
 10812  003D30  6F7F               	movwf	(??_floorf+2)& (0+255),b
 10813  003D32  5186               	movf	(floorf@m+3)& (0+255),w,b
 10814  003D34  158C               	andwf	(floorf@u+3)& (0+255),w,b
 10815  003D36  6F80               	movwf	(??_floorf+3)& (0+255),b
 10816  003D38  517D               	movf	??_floorf& (0+255),w,b
 10817  003D3A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
 10818  003D3C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
 10819  003D3E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
 10820  003D40  A4D8               	btfss	status,2,c
 10821  003D42  EFA5  F01E         	goto	u9761
 10822  003D46  EFA7  F01E         	goto	u9760
 10823  003D4A                     u9761:
 10824  003D4A  EFA9  F01E         	goto	l7987
 10825  003D4E                     u9760:
 10826  003D4E  EF5F  F01E         	goto	l7979
 10827  003D52                     l7987:
 10828                           
 10829                           ; BSR set to: 0
 10830  003D52  C089  F07D         	movff	floorf@u,??_floorf
 10831  003D56  C08A  F07E         	movff	floorf@u+1,??_floorf+1
 10832  003D5A  C08B  F07F         	movff	floorf@u+2,??_floorf+2
 10833  003D5E  C08C  F080         	movff	floorf@u+3,??_floorf+3
 10834  003D62  0E20               	movlw	32
 10835  003D64  EFB9  F01E         	goto	u9770
 10836  003D68                     u9775:
 10837  003D68  90D8               	bcf	status,0,c
 10838  003D6A  3380               	rrcf	(??_floorf+3)& (0+255),f,b
 10839  003D6C  337F               	rrcf	(??_floorf+2)& (0+255),f,b
 10840  003D6E  337E               	rrcf	(??_floorf+1)& (0+255),f,b
 10841  003D70  337D               	rrcf	??_floorf& (0+255),f,b
 10842  003D72                     u9770:
 10843  003D72  2EE8               	decfsz	wreg,f,c
 10844  003D74  EFB4  F01E         	goto	u9775
 10845  003D78  517D               	movf	??_floorf& (0+255),w,b
 10846  003D7A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
 10847  003D7C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
 10848  003D7E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
 10849  003D80  B4D8               	btfsc	status,2,c
 10850  003D82  EFC5  F01E         	goto	u9781
 10851  003D86  EFC7  F01E         	goto	u9780
 10852  003D8A                     u9781:
 10853  003D8A  EFCF  F01E         	goto	l1623
 10854  003D8E                     u9780:
 10855  003D8E                     
 10856                           ; BSR set to: 0
 10857  003D8E  5183               	movf	floorf@m& (0+255),w,b
 10858  003D90  2789               	addwf	floorf@u& (0+255),f,b
 10859  003D92  5184               	movf	(floorf@m+1)& (0+255),w,b
 10860  003D94  238A               	addwfc	(floorf@u+1)& (0+255),f,b
 10861  003D96  5185               	movf	(floorf@m+2)& (0+255),w,b
 10862  003D98  238B               	addwfc	(floorf@u+2)& (0+255),f,b
 10863  003D9A  5186               	movf	(floorf@m+3)& (0+255),w,b
 10864  003D9C  238C               	addwfc	(floorf@u+3)& (0+255),f,b
 10865  003D9E                     l1623:
 10866                           
 10867                           ; BSR set to: 0
 10868  003D9E  1D83               	comf	floorf@m& (0+255),w,b
 10869  003DA0  6F7D               	movwf	??_floorf& (0+255),b
 10870  003DA2  1D84               	comf	(floorf@m+1)& (0+255),w,b
 10871  003DA4  6F7E               	movwf	(??_floorf+1)& (0+255),b
 10872  003DA6  1D85               	comf	(floorf@m+2)& (0+255),w,b
 10873  003DA8  6F7F               	movwf	(??_floorf+2)& (0+255),b
 10874  003DAA  1D86               	comf	(floorf@m+3)& (0+255),w,b
 10875  003DAC  6F80               	movwf	(??_floorf+3)& (0+255),b
 10876  003DAE  517D               	movf	??_floorf& (0+255),w,b
 10877  003DB0  1789               	andwf	floorf@u& (0+255),f,b
 10878  003DB2  517E               	movf	(??_floorf+1)& (0+255),w,b
 10879  003DB4  178A               	andwf	(floorf@u+1)& (0+255),f,b
 10880  003DB6  517F               	movf	(??_floorf+2)& (0+255),w,b
 10881  003DB8  178B               	andwf	(floorf@u+2)& (0+255),f,b
 10882  003DBA  5180               	movf	(??_floorf+3)& (0+255),w,b
 10883  003DBC  178C               	andwf	(floorf@u+3)& (0+255),f,b
 10884  003DBE  EF25  F01F         	goto	l7999
 10885  003DC2                     l7991:
 10886                           
 10887                           ; BSR set to: 0
 10888  003DC2  C089  F07D         	movff	floorf@u,??_floorf
 10889  003DC6  C08A  F07E         	movff	floorf@u+1,??_floorf+1
 10890  003DCA  C08B  F07F         	movff	floorf@u+2,??_floorf+2
 10891  003DCE  C08C  F080         	movff	floorf@u+3,??_floorf+3
 10892  003DD2  0E20               	movlw	32
 10893  003DD4  EFF1  F01E         	goto	u9790
 10894  003DD8                     u9795:
 10895  003DD8  90D8               	bcf	status,0,c
 10896  003DDA  3380               	rrcf	(??_floorf+3)& (0+255),f,b
 10897  003DDC  337F               	rrcf	(??_floorf+2)& (0+255),f,b
 10898  003DDE  337E               	rrcf	(??_floorf+1)& (0+255),f,b
 10899  003DE0  337D               	rrcf	??_floorf& (0+255),f,b
 10900  003DE2                     u9790:
 10901  003DE2  2EE8               	decfsz	wreg,f,c
 10902  003DE4  EFEC  F01E         	goto	u9795
 10903  003DE8  517D               	movf	??_floorf& (0+255),w,b
 10904  003DEA  117E               	iorwf	(??_floorf+1)& (0+255),w,b
 10905  003DEC  117F               	iorwf	(??_floorf+2)& (0+255),w,b
 10906  003DEE  1180               	iorwf	(??_floorf+3)& (0+255),w,b
 10907  003DF0  A4D8               	btfss	status,2,c
 10908  003DF2  EFFD  F01E         	goto	u9801
 10909  003DF6  EFFF  F01E         	goto	u9800
 10910  003DFA                     u9801:
 10911  003DFA  EF09  F01F         	goto	l7995
 10912  003DFE                     u9800:
 10913  003DFE                     
 10914                           ; BSR set to: 0
 10915  003DFE  0E00               	movlw	0
 10916  003E00  6F89               	movwf	floorf@u& (0+255),b
 10917  003E02  0E00               	movlw	0
 10918  003E04  6F8A               	movwf	(floorf@u+1)& (0+255),b
 10919  003E06  0E00               	movlw	0
 10920  003E08  6F8B               	movwf	(floorf@u+2)& (0+255),b
 10921  003E0A  0E00               	movlw	0
 10922  003E0C  6F8C               	movwf	(floorf@u+3)& (0+255),b
 10923  003E0E  EF25  F01F         	goto	l7999
 10924  003E12                     l7995:
 10925                           
 10926                           ; BSR set to: 0
 10927  003E12  90D8               	bcf	status,0,c
 10928  003E14  3589               	rlcf	floorf@u& (0+255),w,b
 10929  003E16  6F7D               	movwf	??_floorf& (0+255),b
 10930  003E18  358A               	rlcf	(floorf@u+1)& (0+255),w,b
 10931  003E1A  6F7E               	movwf	(??_floorf+1)& (0+255),b
 10932  003E1C  358B               	rlcf	(floorf@u+2)& (0+255),w,b
 10933  003E1E  6F7F               	movwf	(??_floorf+2)& (0+255),b
 10934  003E20  358C               	rlcf	(floorf@u+3)& (0+255),w,b
 10935  003E22  6F80               	movwf	(??_floorf+3)& (0+255),b
 10936  003E24  517D               	movf	??_floorf& (0+255),w,b
 10937  003E26  117E               	iorwf	(??_floorf+1)& (0+255),w,b
 10938  003E28  117F               	iorwf	(??_floorf+2)& (0+255),w,b
 10939  003E2A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
 10940  003E2C  B4D8               	btfsc	status,2,c
 10941  003E2E  EF1B  F01F         	goto	u9811
 10942  003E32  EF1D  F01F         	goto	u9810
 10943  003E36                     u9811:
 10944  003E36  EF25  F01F         	goto	l7999
 10945  003E3A                     u9810:
 10946  003E3A                     
 10947                           ; BSR set to: 0
 10948  003E3A  0E00               	movlw	0
 10949  003E3C  6F89               	movwf	floorf@u& (0+255),b
 10950  003E3E  0E00               	movlw	0
 10951  003E40  6F8A               	movwf	(floorf@u+1)& (0+255),b
 10952  003E42  0E80               	movlw	128
 10953  003E44  6F8B               	movwf	(floorf@u+2)& (0+255),b
 10954  003E46  0EBF               	movlw	191
 10955  003E48  6F8C               	movwf	(floorf@u+3)& (0+255),b
 10956  003E4A                     l7999:
 10957                           
 10958                           ; BSR set to: 0
 10959  003E4A  C089  F079         	movff	floorf@u,?_floorf
 10960  003E4E  C08A  F07A         	movff	floorf@u+1,?_floorf+1
 10961  003E52  C08B  F07B         	movff	floorf@u+2,?_floorf+2
 10962  003E56  C08C  F07C         	movff	floorf@u+3,?_floorf+3
 10963  003E5A                     l1620:
 10964                           
 10965                           ; BSR set to: 0
 10966  003E5A  0012               	return		;funcret
 10967  003E5C                     __end_of_floorf:
 10968                           	opt callstack 0
 10969                           
 10970 ;; *************** function ___fpclassifyf *****************
 10971 ;; Defined at:
 10972 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;  x               4    0[BANK0 ] float 
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;  u               4   10[BANK0 ] struct .
 10977 ;;  e               2    8[BANK0 ] int 
 10978 ;; Return value:  Size  Location     Type
 10979 ;;                  2    0[BANK0 ] int 
 10980 ;; Registers used:
 10981 ;;		wreg, status,2, status,0
 10982 ;; Tracked objects:
 10983 ;;		On entry : 0/0
 10984 ;;		On exit  : 0/0
 10985 ;;		Unchanged: 0/0
 10986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10987 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10990 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10991 ;;Total ram usage:       14 bytes
 10992 ;; Hardware stack levels used:    1
 10993 ;; Hardware stack levels required when called:    5
 10994 ;; This function calls:
 10995 ;;		Nothing
 10996 ;; This function is called by:
 10997 ;;		_efgtoa
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           	psect	text20
 11002  005550                     __ptext20:
 11003                           	opt callstack 0
 11004  005550                     ___fpclassifyf:
 11005                           	opt callstack 20
 11006  005550  C031  F06A         	movff	___fpclassifyf@F463,___fpclassifyf@u
 11007  005554  C032  F06B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 11008  005558  C033  F06C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 11009  00555C  C034  F06D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 11010  005560  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
 11011  005564  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 11012  005568  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 11013  00556C  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 11014  005570  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
 11015  005574  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11016  005578  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11017  00557C  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11018  005580  0E18               	movlw	24
 11019  005582  EFC9  F02A         	goto	u9600
 11020  005586                     u9605:
 11021  005586  0100               	movlb	0	; () banked
 11022  005588  90D8               	bcf	status,0,c
 11023  00558A  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
 11024  00558C  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
 11025  00558E  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
 11026  005590  3364               	rrcf	??___fpclassifyf& (0+255),f,b
 11027  005592                     u9600:
 11028  005592  2EE8               	decfsz	wreg,f,c
 11029  005594  EFC3  F02A         	goto	u9605
 11030  005598  5164               	movf	??___fpclassifyf& (0+255),w,b
 11031  00559A  6F68               	movwf	___fpclassifyf@e& (0+255),b
 11032  00559C  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
 11033  00559E  5168               	movf	___fpclassifyf@e& (0+255),w,b
 11034  0055A0  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 11035  0055A2  A4D8               	btfss	status,2,c
 11036  0055A4  EFD6  F02A         	goto	u9611
 11037  0055A8  EFD8  F02A         	goto	u9610
 11038  0055AC                     u9611:
 11039  0055AC  EFF8  F02A         	goto	l7951
 11040  0055B0                     u9610:
 11041  0055B0                     
 11042                           ; BSR set to: 0
 11043  0055B0  90D8               	bcf	status,0,c
 11044  0055B2  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
 11045  0055B4  6F64               	movwf	??___fpclassifyf& (0+255),b
 11046  0055B6  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
 11047  0055B8  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
 11048  0055BA  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
 11049  0055BC  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
 11050  0055BE  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
 11051  0055C0  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
 11052  0055C2  5164               	movf	??___fpclassifyf& (0+255),w,b
 11053  0055C4  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 11054  0055C6  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 11055  0055C8  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 11056  0055CA  A4D8               	btfss	status,2,c
 11057  0055CC  EFEA  F02A         	goto	u9621
 11058  0055D0  EFEC  F02A         	goto	u9620
 11059  0055D4                     u9621:
 11060  0055D4  EFF2  F02A         	goto	l7947
 11061  0055D8                     u9620:
 11062  0055D8                     
 11063                           ; BSR set to: 0
 11064  0055D8  0E00               	movlw	0
 11065  0055DA  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 11066  0055DC  0E02               	movlw	2
 11067  0055DE  6F60               	movwf	?___fpclassifyf& (0+255),b
 11068  0055E0  EF27  F02B         	goto	l1575
 11069  0055E4                     l7947:
 11070                           
 11071                           ; BSR set to: 0
 11072  0055E4  0E00               	movlw	0
 11073  0055E6  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 11074  0055E8  0E03               	movlw	3
 11075  0055EA  6F60               	movwf	?___fpclassifyf& (0+255),b
 11076  0055EC  EF27  F02B         	goto	l1575
 11077  0055F0                     l7951:
 11078                           
 11079                           ; BSR set to: 0
 11080  0055F0  2968               	incf	___fpclassifyf@e& (0+255),w,b
 11081  0055F2  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
 11082  0055F4  A4D8               	btfss	status,2,c
 11083  0055F6  EFFF  F02A         	goto	u9631
 11084  0055FA  EF01  F02B         	goto	u9630
 11085  0055FE                     u9631:
 11086  0055FE  EF23  F02B         	goto	l7957
 11087  005602                     u9630:
 11088  005602                     
 11089                           ; BSR set to: 0
 11090  005602  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
 11091  005606  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 11092  00560A  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 11093  00560E  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 11094  005612  0E09               	movlw	9
 11095  005614                     u9645:
 11096  005614  90D8               	bcf	status,0,c
 11097  005616  3764               	rlcf	??___fpclassifyf& (0+255),f,b
 11098  005618  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
 11099  00561A  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
 11100  00561C  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
 11101  00561E  2EE8               	decfsz	wreg,f,c
 11102  005620  EF0A  F02B         	goto	u9645
 11103  005624  5164               	movf	??___fpclassifyf& (0+255),w,b
 11104  005626  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
 11105  005628  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
 11106  00562A  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
 11107  00562C  B4D8               	btfsc	status,2,c
 11108  00562E  EF1B  F02B         	goto	u9651
 11109  005632  EF1E  F02B         	goto	u9650
 11110  005636                     u9651:
 11111  005636  0E01               	movlw	1
 11112  005638  EF1F  F02B         	goto	u9660
 11113  00563C                     u9650:
 11114  00563C  0E00               	movlw	0
 11115  00563E                     u9660:
 11116  00563E  6F60               	movwf	?___fpclassifyf& (0+255),b
 11117  005640  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
 11118  005642  EF27  F02B         	goto	l1575
 11119  005646                     l7957:
 11120                           
 11121                           ; BSR set to: 0
 11122  005646  0E00               	movlw	0
 11123  005648  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
 11124  00564A  0E04               	movlw	4
 11125  00564C  6F60               	movwf	?___fpclassifyf& (0+255),b
 11126  00564E                     l1575:
 11127                           
 11128                           ; BSR set to: 0
 11129  00564E  0012               	return		;funcret
 11130  005650                     __end_of___fpclassifyf:
 11131                           	opt callstack 0
 11132                           
 11133 ;; *************** function ___fltol *****************
 11134 ;; Defined at:
 11135 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;  f1              4    0[BANK0 ] int 
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;  exp1            1    9[BANK0 ] unsigned char 
 11140 ;;  sign1           1    8[BANK0 ] unsigned char 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  4    0[BANK0 ] long 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11150 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11152 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11153 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;Total ram usage:       10 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    5
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_efgtoa
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text21
 11165  005342                     __ptext21:
 11166                           	opt callstack 0
 11167  005342                     ___fltol:
 11168                           	opt callstack 20
 11169  005342  0100               	movlb	0	; () banked
 11170  005344  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11171  005346  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11172  005348  6F69               	movwf	___fltol@exp1& (0+255),b
 11173  00534A  5169               	movf	___fltol@exp1& (0+255),w,b
 11174  00534C  A4D8               	btfss	status,2,c
 11175  00534E  EFAB  F029         	goto	u10651
 11176  005352  EFAD  F029         	goto	u10650
 11177  005356                     u10651:
 11178  005356  EFB7  F029         	goto	l8513
 11179  00535A                     u10650:
 11180  00535A                     l8509:
 11181                           
 11182                           ; BSR set to: 0
 11183  00535A  0E00               	movlw	0
 11184  00535C  6F60               	movwf	?___fltol& (0+255),b
 11185  00535E  0E00               	movlw	0
 11186  005360  6F61               	movwf	(?___fltol+1)& (0+255),b
 11187  005362  0E00               	movlw	0
 11188  005364  6F62               	movwf	(?___fltol+2)& (0+255),b
 11189  005366  0E00               	movlw	0
 11190  005368  6F63               	movwf	(?___fltol+3)& (0+255),b
 11191  00536A  EF24  F02A         	goto	l1191
 11192  00536E                     l8513:
 11193                           
 11194                           ; BSR set to: 0
 11195  00536E  C060  F064         	movff	___fltol@f1,??___fltol
 11196  005372  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 11197  005376  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 11198  00537A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 11199  00537E  0E20               	movlw	32
 11200  005380  EFC7  F029         	goto	u10660
 11201  005384                     u10665:
 11202  005384  90D8               	bcf	status,0,c
 11203  005386  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 11204  005388  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 11205  00538A  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 11206  00538C  3364               	rrcf	??___fltol& (0+255),f,b
 11207  00538E                     u10660:
 11208  00538E  2EE8               	decfsz	wreg,f,c
 11209  005390  EFC2  F029         	goto	u10665
 11210  005394  5164               	movf	??___fltol& (0+255),w,b
 11211  005396  6F68               	movwf	___fltol@sign1& (0+255),b
 11212  005398                     
 11213                           ; BSR set to: 0
 11214  005398  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 11215  00539A                     
 11216                           ; BSR set to: 0
 11217  00539A  0EFF               	movlw	255
 11218  00539C  1760               	andwf	___fltol@f1& (0+255),f,b
 11219  00539E  0EFF               	movlw	255
 11220  0053A0  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 11221  0053A2  0EFF               	movlw	255
 11222  0053A4  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 11223  0053A6  0E00               	movlw	0
 11224  0053A8  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 11225  0053AA                     
 11226                           ; BSR set to: 0
 11227  0053AA  0E96               	movlw	150
 11228  0053AC  5F69               	subwf	___fltol@exp1& (0+255),f,b
 11229  0053AE                     
 11230                           ; BSR set to: 0
 11231  0053AE  BF69               	btfsc	___fltol@exp1& (0+255),7,b
 11232  0053B0  EFDE  F029         	goto	u10670
 11233  0053B4  EFDC  F029         	goto	u10671
 11234  0053B8                     u10671:
 11235  0053B8  EFF4  F029         	goto	l8533
 11236  0053BC                     u10670:
 11237  0053BC                     
 11238                           ; BSR set to: 0
 11239  0053BC  5169               	movf	___fltol@exp1& (0+255),w,b
 11240  0053BE  0A80               	xorlw	128
 11241  0053C0  0F97               	addlw	151
 11242  0053C2  B0D8               	btfsc	status,0,c
 11243  0053C4  EFE6  F029         	goto	u10681
 11244  0053C8  EFE8  F029         	goto	u10680
 11245  0053CC                     u10681:
 11246  0053CC  EFEA  F029         	goto	l8529
 11247  0053D0                     u10680:
 11248  0053D0  EFAD  F029         	goto	l8509
 11249  0053D4                     l8529:
 11250                           
 11251                           ; BSR set to: 0
 11252  0053D4  90D8               	bcf	status,0,c
 11253  0053D6  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11254  0053D8  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11255  0053DA  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11256  0053DC  3360               	rrcf	___fltol@f1& (0+255),f,b
 11257  0053DE                     
 11258                           ; BSR set to: 0
 11259  0053DE  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 11260  0053E0  EFEA  F029         	goto	l8529
 11261  0053E4  EF0C  F02A         	goto	l8543
 11262  0053E8                     l8533:
 11263                           
 11264                           ; BSR set to: 0
 11265  0053E8  0E1F               	movlw	31
 11266  0053EA  6569               	cpfsgt	___fltol@exp1& (0+255),b
 11267  0053EC  EFFA  F029         	goto	u10691
 11268  0053F0  EFFC  F029         	goto	u10690
 11269  0053F4                     u10691:
 11270  0053F4  EF04  F02A         	goto	l8541
 11271  0053F8                     u10690:
 11272  0053F8  EFAD  F029         	goto	l8509
 11273  0053FC                     l8539:
 11274                           
 11275                           ; BSR set to: 0
 11276  0053FC  90D8               	bcf	status,0,c
 11277  0053FE  3760               	rlcf	___fltol@f1& (0+255),f,b
 11278  005400  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11279  005402  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11280  005404  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11281  005406  0769               	decf	___fltol@exp1& (0+255),f,b
 11282  005408                     l8541:
 11283                           
 11284                           ; BSR set to: 0
 11285  005408  5169               	movf	___fltol@exp1& (0+255),w,b
 11286  00540A  A4D8               	btfss	status,2,c
 11287  00540C  EF0A  F02A         	goto	u10701
 11288  005410  EF0C  F02A         	goto	u10700
 11289  005414                     u10701:
 11290  005414  EFFE  F029         	goto	l8539
 11291  005418                     u10700:
 11292  005418                     l8543:
 11293                           
 11294                           ; BSR set to: 0
 11295  005418  5168               	movf	___fltol@sign1& (0+255),w,b
 11296  00541A  B4D8               	btfsc	status,2,c
 11297  00541C  EF12  F02A         	goto	u10711
 11298  005420  EF14  F02A         	goto	u10710
 11299  005424                     u10711:
 11300  005424  EF1C  F02A         	goto	l8547
 11301  005428                     u10710:
 11302  005428                     
 11303                           ; BSR set to: 0
 11304  005428  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 11305  00542A  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 11306  00542C  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 11307  00542E  6D60               	negf	___fltol@f1& (0+255),b
 11308  005430  0E00               	movlw	0
 11309  005432  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11310  005434  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11311  005436  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11312  005438                     l8547:
 11313                           
 11314                           ; BSR set to: 0
 11315  005438  C060  F060         	movff	___fltol@f1,?___fltol
 11316  00543C  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 11317  005440  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 11318  005444  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 11319  005448                     l1191:
 11320                           
 11321                           ; BSR set to: 0
 11322  005448  0012               	return		;funcret
 11323  00544A                     __end_of___fltol:
 11324                           	opt callstack 0
 11325                           
 11326 ;; *************** function ___flsub *****************
 11327 ;; Defined at:
 11328 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  b               4   25[BANK0 ] long 
 11331 ;;  a               4   29[BANK0 ] long 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  4   25[BANK0 ] long 
 11336 ;; Registers used:
 11337 ;;		wreg, status,2, status,0, cstack
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11343 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11347 ;;Total ram usage:        8 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:    6
 11350 ;; This function calls:
 11351 ;;		___fladd
 11352 ;; This function is called by:
 11353 ;;		_efgtoa
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text22
 11358  0060B8                     __ptext22:
 11359                           	opt callstack 0
 11360  0060B8                     ___flsub:
 11361                           	opt callstack 19
 11362  0060B8  0E00               	movlw	0
 11363  0060BA  0100               	movlb	0	; () banked
 11364  0060BC  1B7D               	xorwf	___flsub@a& (0+255),f,b
 11365  0060BE  0E00               	movlw	0
 11366  0060C0  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
 11367  0060C2  0E00               	movlw	0
 11368  0060C4  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
 11369  0060C6  0E80               	movlw	128
 11370  0060C8  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
 11371  0060CA                     
 11372                           ; BSR set to: 0
 11373  0060CA  C079  F060         	movff	___flsub@b,___fladd@b
 11374  0060CE  C07A  F061         	movff	___flsub@b+1,___fladd@b+1
 11375  0060D2  C07B  F062         	movff	___flsub@b+2,___fladd@b+2
 11376  0060D6  C07C  F063         	movff	___flsub@b+3,___fladd@b+3
 11377  0060DA  C07D  F064         	movff	___flsub@a,___fladd@a
 11378  0060DE  C07E  F065         	movff	___flsub@a+1,___fladd@a+1
 11379  0060E2  C07F  F066         	movff	___flsub@a+2,___fladd@a+2
 11380  0060E6  C080  F067         	movff	___flsub@a+3,___fladd@a+3
 11381  0060EA  ECCF  F010         	call	___fladd	;wreg free
 11382  0060EE  C060  F079         	movff	?___fladd,?___flsub
 11383  0060F2  C061  F07A         	movff	?___fladd+1,?___flsub+1
 11384  0060F6  C062  F07B         	movff	?___fladd+2,?___flsub+2
 11385  0060FA  C063  F07C         	movff	?___fladd+3,?___flsub+3
 11386  0060FE  0012               	return		;funcret
 11387  006100                     __end_of___flsub:
 11388                           	opt callstack 0
 11389                           
 11390 ;; *************** function ___fladd *****************
 11391 ;; Defined at:
 11392 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  b               4    0[BANK0 ] long 
 11395 ;;  a               4    4[BANK0 ] long 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;  grs             1   15[BANK0 ] unsigned char 
 11398 ;;  bexp            1   14[BANK0 ] unsigned char 
 11399 ;;  aexp            1   13[BANK0 ] unsigned char 
 11400 ;;  signs           1   12[BANK0 ] unsigned char 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  4    0[BANK0 ] unsigned char 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11410 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11414 ;;Total ram usage:       16 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    5
 11417 ;; This function calls:
 11418 ;;		Nothing
 11419 ;; This function is called by:
 11420 ;;		_efgtoa
 11421 ;;		___flsub
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text23
 11426  00219E                     __ptext23:
 11427                           	opt callstack 0
 11428  00219E                     ___fladd:
 11429                           	opt callstack 19
 11430  00219E  0100               	movlb	0	; () banked
 11431  0021A0  5163               	movf	(___fladd@b+3)& (0+255),w,b
 11432  0021A2  0B80               	andlw	128
 11433  0021A4  6F6C               	movwf	___fladd@signs& (0+255),b
 11434  0021A6  5163               	movf	(___fladd@b+3)& (0+255),w,b
 11435  0021A8  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 11436  0021AA  6F6E               	movwf	___fladd@bexp& (0+255),b
 11437  0021AC                     
 11438                           ; BSR set to: 0
 11439  0021AC  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 11440  0021AE  EFDB  F010         	goto	u9131
 11441  0021B2  EFDD  F010         	goto	u9130
 11442  0021B6                     u9131:
 11443  0021B6  EFDE  F010         	goto	l7711
 11444  0021BA                     u9130:
 11445  0021BA                     
 11446                           ; BSR set to: 0
 11447  0021BA  816E               	bsf	___fladd@bexp& (0+255),0,b
 11448  0021BC                     l7711:
 11449                           
 11450                           ; BSR set to: 0
 11451  0021BC  516E               	movf	___fladd@bexp& (0+255),w,b
 11452  0021BE  B4D8               	btfsc	status,2,c
 11453  0021C0  EFE4  F010         	goto	u9141
 11454  0021C4  EFE6  F010         	goto	u9140
 11455  0021C8                     u9141:
 11456  0021C8  EFFB  F010         	goto	l7721
 11457  0021CC                     u9140:
 11458  0021CC                     
 11459                           ; BSR set to: 0
 11460  0021CC  296E               	incf	___fladd@bexp& (0+255),w,b
 11461  0021CE  A4D8               	btfss	status,2,c
 11462  0021D0  EFEC  F010         	goto	u9151
 11463  0021D4  EFEE  F010         	goto	u9150
 11464  0021D8                     u9151:
 11465  0021D8  EFF6  F010         	goto	l7717
 11466  0021DC                     u9150:
 11467  0021DC                     
 11468                           ; BSR set to: 0
 11469  0021DC  0E00               	movlw	0
 11470  0021DE  6F60               	movwf	___fladd@b& (0+255),b
 11471  0021E0  0E00               	movlw	0
 11472  0021E2  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11473  0021E4  0E00               	movlw	0
 11474  0021E6  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11475  0021E8  0E00               	movlw	0
 11476  0021EA  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11477  0021EC                     l7717:
 11478                           
 11479                           ; BSR set to: 0
 11480  0021EC  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 11481  0021EE                     
 11482                           ; BSR set to: 0
 11483  0021EE  0E00               	movlw	0
 11484  0021F0  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11485  0021F2  EF03  F011         	goto	l7723
 11486  0021F6                     l7721:
 11487                           
 11488                           ; BSR set to: 0
 11489  0021F6  0E00               	movlw	0
 11490  0021F8  6F60               	movwf	___fladd@b& (0+255),b
 11491  0021FA  0E00               	movlw	0
 11492  0021FC  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11493  0021FE  0E00               	movlw	0
 11494  002200  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11495  002202  0E00               	movlw	0
 11496  002204  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11497  002206                     l7723:
 11498                           
 11499                           ; BSR set to: 0
 11500  002206  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11501  002208  0B80               	andlw	128
 11502  00220A  6F6D               	movwf	___fladd@aexp& (0+255),b
 11503  00220C                     
 11504                           ; BSR set to: 0
 11505  00220C  516C               	movf	___fladd@signs& (0+255),w,b
 11506  00220E  196D               	xorwf	___fladd@aexp& (0+255),w,b
 11507  002210  B4D8               	btfsc	status,2,c
 11508  002212  EF0D  F011         	goto	u9161
 11509  002216  EF0F  F011         	goto	u9160
 11510  00221A                     u9161:
 11511  00221A  EF10  F011         	goto	l7729
 11512  00221E                     u9160:
 11513  00221E                     
 11514                           ; BSR set to: 0
 11515  00221E  8D6C               	bsf	___fladd@signs& (0+255),6,b
 11516  002220                     l7729:
 11517                           
 11518                           ; BSR set to: 0
 11519  002220  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11520  002222  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 11521  002224  6F6D               	movwf	___fladd@aexp& (0+255),b
 11522  002226                     
 11523                           ; BSR set to: 0
 11524  002226  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 11525  002228  EF18  F011         	goto	u9171
 11526  00222C  EF1A  F011         	goto	u9170
 11527  002230                     u9171:
 11528  002230  EF1B  F011         	goto	l7735
 11529  002234                     u9170:
 11530  002234                     
 11531                           ; BSR set to: 0
 11532  002234  816D               	bsf	___fladd@aexp& (0+255),0,b
 11533  002236                     l7735:
 11534                           
 11535                           ; BSR set to: 0
 11536  002236  516D               	movf	___fladd@aexp& (0+255),w,b
 11537  002238  B4D8               	btfsc	status,2,c
 11538  00223A  EF21  F011         	goto	u9181
 11539  00223E  EF23  F011         	goto	u9180
 11540  002242                     u9181:
 11541  002242  EF38  F011         	goto	l7745
 11542  002246                     u9180:
 11543  002246                     
 11544                           ; BSR set to: 0
 11545  002246  296D               	incf	___fladd@aexp& (0+255),w,b
 11546  002248  A4D8               	btfss	status,2,c
 11547  00224A  EF29  F011         	goto	u9191
 11548  00224E  EF2B  F011         	goto	u9190
 11549  002252                     u9191:
 11550  002252  EF33  F011         	goto	l7741
 11551  002256                     u9190:
 11552  002256                     
 11553                           ; BSR set to: 0
 11554  002256  0E00               	movlw	0
 11555  002258  6F64               	movwf	___fladd@a& (0+255),b
 11556  00225A  0E00               	movlw	0
 11557  00225C  6F65               	movwf	(___fladd@a+1)& (0+255),b
 11558  00225E  0E00               	movlw	0
 11559  002260  6F66               	movwf	(___fladd@a+2)& (0+255),b
 11560  002262  0E00               	movlw	0
 11561  002264  6F67               	movwf	(___fladd@a+3)& (0+255),b
 11562  002266                     l7741:
 11563                           
 11564                           ; BSR set to: 0
 11565  002266  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 11566  002268                     
 11567                           ; BSR set to: 0
 11568  002268  0E00               	movlw	0
 11569  00226A  6F67               	movwf	(___fladd@a+3)& (0+255),b
 11570  00226C  EF40  F011         	goto	l7747
 11571  002270                     l7745:
 11572                           
 11573                           ; BSR set to: 0
 11574  002270  0E00               	movlw	0
 11575  002272  6F64               	movwf	___fladd@a& (0+255),b
 11576  002274  0E00               	movlw	0
 11577  002276  6F65               	movwf	(___fladd@a+1)& (0+255),b
 11578  002278  0E00               	movlw	0
 11579  00227A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 11580  00227C  0E00               	movlw	0
 11581  00227E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 11582  002280                     l7747:
 11583                           
 11584                           ; BSR set to: 0
 11585  002280  516E               	movf	___fladd@bexp& (0+255),w,b
 11586  002282  5D6D               	subwf	___fladd@aexp& (0+255),w,b
 11587  002284  B0D8               	btfsc	status,0,c
 11588  002286  EF47  F011         	goto	u9201
 11589  00228A  EF49  F011         	goto	u9200
 11590  00228E                     u9201:
 11591  00228E  EF70  F011         	goto	l7783
 11592  002292                     u9200:
 11593  002292                     
 11594                           ; BSR set to: 0
 11595  002292  AD6C               	btfss	___fladd@signs& (0+255),6,b
 11596  002294  EF4E  F011         	goto	u9211
 11597  002298  EF50  F011         	goto	u9210
 11598  00229C                     u9211:
 11599  00229C  EF52  F011         	goto	l7753
 11600  0022A0                     u9210:
 11601  0022A0                     
 11602                           ; BSR set to: 0
 11603  0022A0  0E80               	movlw	128
 11604  0022A2  1B6C               	xorwf	___fladd@signs& (0+255),f,b
 11605  0022A4                     l7753:
 11606                           
 11607                           ; BSR set to: 0
 11608  0022A4  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
 11609  0022A8                     
 11610                           ; BSR set to: 0
 11611  0022A8  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
 11612  0022AC                     
 11613                           ; BSR set to: 0
 11614  0022AC  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
 11615  0022B0                     
 11616                           ; BSR set to: 0
 11617  0022B0  C060  F06F         	movff	___fladd@b,___fladd@grs
 11618  0022B4                     
 11619                           ; BSR set to: 0
 11620  0022B4  C064  F060         	movff	___fladd@a,___fladd@b
 11621  0022B8                     
 11622                           ; BSR set to: 0
 11623  0022B8  C06F  F064         	movff	___fladd@grs,___fladd@a
 11624  0022BC                     
 11625                           ; BSR set to: 0
 11626  0022BC  C061  F06F         	movff	___fladd@b+1,___fladd@grs
 11627  0022C0                     
 11628                           ; BSR set to: 0
 11629  0022C0  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 11630  0022C4                     
 11631                           ; BSR set to: 0
 11632  0022C4  C06F  F065         	movff	___fladd@grs,___fladd@a+1
 11633  0022C8                     
 11634                           ; BSR set to: 0
 11635  0022C8  C062  F06F         	movff	___fladd@b+2,___fladd@grs
 11636  0022CC                     
 11637                           ; BSR set to: 0
 11638  0022CC  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 11639  0022D0                     
 11640                           ; BSR set to: 0
 11641  0022D0  C06F  F066         	movff	___fladd@grs,___fladd@a+2
 11642  0022D4                     
 11643                           ; BSR set to: 0
 11644  0022D4  C063  F06F         	movff	___fladd@b+3,___fladd@grs
 11645  0022D8                     
 11646                           ; BSR set to: 0
 11647  0022D8  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 11648  0022DC                     
 11649                           ; BSR set to: 0
 11650  0022DC  C06F  F067         	movff	___fladd@grs,___fladd@a+3
 11651  0022E0                     l7783:
 11652                           
 11653                           ; BSR set to: 0
 11654  0022E0  0E00               	movlw	0
 11655  0022E2  6F6F               	movwf	___fladd@grs& (0+255),b
 11656  0022E4                     
 11657                           ; BSR set to: 0
 11658  0022E4  516E               	movf	___fladd@bexp& (0+255),w,b
 11659  0022E6  C06D  F068         	movff	___fladd@aexp,??___fladd
 11660  0022EA  6B69               	clrf	(??___fladd+1)& (0+255),b
 11661  0022EC  5F68               	subwf	??___fladd& (0+255),f,b
 11662  0022EE  0E00               	movlw	0
 11663  0022F0  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
 11664  0022F2  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
 11665  0022F4  EF85  F011         	goto	u9221
 11666  0022F8  5169               	movf	(??___fladd+1)& (0+255),w,b
 11667  0022FA  E109               	bnz	u9220
 11668  0022FC  0E1A               	movlw	26
 11669  0022FE  5D68               	subwf	??___fladd& (0+255),w,b
 11670  002300  A0D8               	btfss	status,0,c
 11671  002302  EF85  F011         	goto	u9221
 11672  002306  EF87  F011         	goto	u9220
 11673  00230A                     u9221:
 11674  00230A  EFBE  F011         	goto	l1423
 11675  00230E                     u9220:
 11676  00230E                     
 11677                           ; BSR set to: 0
 11678  00230E  5160               	movf	___fladd@b& (0+255),w,b
 11679  002310  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 11680  002312  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 11681  002314  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 11682  002316  A4D8               	btfss	status,2,c
 11683  002318  EF90  F011         	goto	u9231
 11684  00231C  EF93  F011         	goto	u9230
 11685  002320                     u9231:
 11686  002320  0E01               	movlw	1
 11687  002322  EF94  F011         	goto	u9240
 11688  002326                     u9230:
 11689  002326  0E00               	movlw	0
 11690  002328                     u9240:
 11691  002328  6F6F               	movwf	___fladd@grs& (0+255),b
 11692  00232A                     
 11693                           ; BSR set to: 0
 11694  00232A  0E00               	movlw	0
 11695  00232C  6F60               	movwf	___fladd@b& (0+255),b
 11696  00232E  0E00               	movlw	0
 11697  002330  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11698  002332  0E00               	movlw	0
 11699  002334  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11700  002336  0E00               	movlw	0
 11701  002338  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11702  00233A                     
 11703                           ; BSR set to: 0
 11704  00233A  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
 11705  00233E  EFC7  F011         	goto	l1422
 11706  002342                     l1424:
 11707                           
 11708                           ; BSR set to: 0
 11709  002342  A16F               	btfss	___fladd@grs& (0+255),0,b
 11710  002344  EFA6  F011         	goto	u9251
 11711  002348  EFA8  F011         	goto	u9250
 11712  00234C                     u9251:
 11713  00234C  EFAE  F011         	goto	l7795
 11714  002350                     u9250:
 11715  002350                     
 11716                           ; BSR set to: 0
 11717  002350  90D8               	bcf	status,0,c
 11718  002352  316F               	rrcf	___fladd@grs& (0+255),w,b
 11719  002354  0901               	iorlw	1
 11720  002356  6F6F               	movwf	___fladd@grs& (0+255),b
 11721  002358  EFB0  F011         	goto	l7797
 11722  00235C                     l7795:
 11723                           
 11724                           ; BSR set to: 0
 11725  00235C  90D8               	bcf	status,0,c
 11726  00235E  336F               	rrcf	___fladd@grs& (0+255),f,b
 11727  002360                     l7797:
 11728                           
 11729                           ; BSR set to: 0
 11730  002360  A160               	btfss	___fladd@b& (0+255),0,b
 11731  002362  EFB5  F011         	goto	u9261
 11732  002366  EFB7  F011         	goto	u9260
 11733  00236A                     u9261:
 11734  00236A  EFB8  F011         	goto	l7801
 11735  00236E                     u9260:
 11736  00236E                     
 11737                           ; BSR set to: 0
 11738  00236E  8F6F               	bsf	___fladd@grs& (0+255),7,b
 11739  002370                     l7801:
 11740                           
 11741                           ; BSR set to: 0
 11742  002370  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 11743  002372  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 11744  002374  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 11745  002376  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 11746  002378  3360               	rrcf	___fladd@b& (0+255),f,b
 11747  00237A                     
 11748                           ; BSR set to: 0
 11749  00237A  2B6E               	incf	___fladd@bexp& (0+255),f,b
 11750  00237C                     l1423:
 11751                           
 11752                           ; BSR set to: 0
 11753  00237C  516D               	movf	___fladd@aexp& (0+255),w,b
 11754  00237E  5D6E               	subwf	___fladd@bexp& (0+255),w,b
 11755  002380  A0D8               	btfss	status,0,c
 11756  002382  EFC5  F011         	goto	u9271
 11757  002386  EFC7  F011         	goto	u9270
 11758  00238A                     u9271:
 11759  00238A  EFA1  F011         	goto	l1424
 11760  00238E                     u9270:
 11761  00238E                     l1422:
 11762                           
 11763                           ; BSR set to: 0
 11764  00238E  BD6C               	btfsc	___fladd@signs& (0+255),6,b
 11765  002390  EFCC  F011         	goto	u9281
 11766  002394  EFCE  F011         	goto	u9280
 11767  002398                     u9281:
 11768  002398  EF0E  F012         	goto	l7829
 11769  00239C                     u9280:
 11770  00239C                     
 11771                           ; BSR set to: 0
 11772  00239C  516E               	movf	___fladd@bexp& (0+255),w,b
 11773  00239E  A4D8               	btfss	status,2,c
 11774  0023A0  EFD4  F011         	goto	u9291
 11775  0023A4  EFD6  F011         	goto	u9290
 11776  0023A8                     u9291:
 11777  0023A8  EFE0  F011         	goto	l7811
 11778  0023AC                     u9290:
 11779  0023AC                     
 11780                           ; BSR set to: 0
 11781  0023AC  0E00               	movlw	0
 11782  0023AE  6F60               	movwf	?___fladd& (0+255),b
 11783  0023B0  0E00               	movlw	0
 11784  0023B2  6F61               	movwf	(?___fladd+1)& (0+255),b
 11785  0023B4  0E00               	movlw	0
 11786  0023B6  6F62               	movwf	(?___fladd+2)& (0+255),b
 11787  0023B8  0E00               	movlw	0
 11788  0023BA  6F63               	movwf	(?___fladd+3)& (0+255),b
 11789  0023BC  EF2F  F013         	goto	l1431
 11790  0023C0                     l7811:
 11791                           
 11792                           ; BSR set to: 0
 11793  0023C0  5164               	movf	___fladd@a& (0+255),w,b
 11794  0023C2  2760               	addwf	___fladd@b& (0+255),f,b
 11795  0023C4  5165               	movf	(___fladd@a+1)& (0+255),w,b
 11796  0023C6  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 11797  0023C8  5166               	movf	(___fladd@a+2)& (0+255),w,b
 11798  0023CA  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 11799  0023CC  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11800  0023CE  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 11801  0023D0                     
 11802                           ; BSR set to: 0
 11803  0023D0  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 11804  0023D2  EFED  F011         	goto	u9301
 11805  0023D6  EFEF  F011         	goto	u9300
 11806  0023DA                     u9301:
 11807  0023DA  EF9B  F012         	goto	l7865
 11808  0023DE                     u9300:
 11809  0023DE                     
 11810                           ; BSR set to: 0
 11811  0023DE  A16F               	btfss	___fladd@grs& (0+255),0,b
 11812  0023E0  EFF4  F011         	goto	u9311
 11813  0023E4  EFF6  F011         	goto	u9310
 11814  0023E8                     u9311:
 11815  0023E8  EFFC  F011         	goto	l7819
 11816  0023EC                     u9310:
 11817  0023EC                     
 11818                           ; BSR set to: 0
 11819  0023EC  90D8               	bcf	status,0,c
 11820  0023EE  316F               	rrcf	___fladd@grs& (0+255),w,b
 11821  0023F0  0901               	iorlw	1
 11822  0023F2  6F6F               	movwf	___fladd@grs& (0+255),b
 11823  0023F4  EFFE  F011         	goto	l7821
 11824  0023F8                     l7819:
 11825                           
 11826                           ; BSR set to: 0
 11827  0023F8  90D8               	bcf	status,0,c
 11828  0023FA  336F               	rrcf	___fladd@grs& (0+255),f,b
 11829  0023FC                     l7821:
 11830                           
 11831                           ; BSR set to: 0
 11832  0023FC  A160               	btfss	___fladd@b& (0+255),0,b
 11833  0023FE  EF03  F012         	goto	u9321
 11834  002402  EF05  F012         	goto	u9320
 11835  002406                     u9321:
 11836  002406  EF06  F012         	goto	l7825
 11837  00240A                     u9320:
 11838  00240A                     
 11839                           ; BSR set to: 0
 11840  00240A  8F6F               	bsf	___fladd@grs& (0+255),7,b
 11841  00240C                     l7825:
 11842                           
 11843                           ; BSR set to: 0
 11844  00240C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 11845  00240E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 11846  002410  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 11847  002412  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 11848  002414  3360               	rrcf	___fladd@b& (0+255),f,b
 11849  002416                     
 11850                           ; BSR set to: 0
 11851  002416  2B6E               	incf	___fladd@bexp& (0+255),f,b
 11852  002418  EF9B  F012         	goto	l7865
 11853  00241C                     l7829:
 11854                           
 11855                           ; BSR set to: 0
 11856  00241C  5164               	movf	___fladd@a& (0+255),w,b
 11857  00241E  5D60               	subwf	___fladd@b& (0+255),w,b
 11858  002420  5165               	movf	(___fladd@a+1)& (0+255),w,b
 11859  002422  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 11860  002424  5166               	movf	(___fladd@a+2)& (0+255),w,b
 11861  002426  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 11862  002428  5163               	movf	(___fladd@b+3)& (0+255),w,b
 11863  00242A  0A80               	xorlw	128
 11864  00242C  6F68               	movwf	??___fladd& (0+255),b
 11865  00242E  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11866  002430  0A80               	xorlw	128
 11867  002432  5968               	subwfb	??___fladd& (0+255),w,b
 11868  002434  B0D8               	btfsc	status,0,c
 11869  002436  EF1F  F012         	goto	u9331
 11870  00243A  EF21  F012         	goto	u9330
 11871  00243E                     u9331:
 11872  00243E  EF4C  F012         	goto	l7839
 11873  002442                     u9330:
 11874  002442                     
 11875                           ; BSR set to: 0
 11876  002442  5160               	movf	___fladd@b& (0+255),w,b
 11877  002444  5D64               	subwf	___fladd@a& (0+255),w,b
 11878  002446  6F68               	movwf	??___fladd& (0+255),b
 11879  002448  5161               	movf	(___fladd@b+1)& (0+255),w,b
 11880  00244A  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
 11881  00244C  6F69               	movwf	(??___fladd+1)& (0+255),b
 11882  00244E  5162               	movf	(___fladd@b+2)& (0+255),w,b
 11883  002450  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
 11884  002452  6F6A               	movwf	(??___fladd+2)& (0+255),b
 11885  002454  5163               	movf	(___fladd@b+3)& (0+255),w,b
 11886  002456  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
 11887  002458  6F6B               	movwf	(??___fladd+3)& (0+255),b
 11888  00245A  0EFF               	movlw	255
 11889  00245C  2568               	addwf	??___fladd& (0+255),w,b
 11890  00245E  6F60               	movwf	___fladd@b& (0+255),b
 11891  002460  0EFF               	movlw	255
 11892  002462  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 11893  002464  6F61               	movwf	(___fladd@b+1)& (0+255),b
 11894  002466  0EFF               	movlw	255
 11895  002468  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 11896  00246A  6F62               	movwf	(___fladd@b+2)& (0+255),b
 11897  00246C  0EFF               	movlw	255
 11898  00246E  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 11899  002470  6F63               	movwf	(___fladd@b+3)& (0+255),b
 11900  002472  0E80               	movlw	128
 11901  002474  1B6C               	xorwf	___fladd@signs& (0+255),f,b
 11902  002476                     
 11903                           ; BSR set to: 0
 11904  002476  6D6F               	negf	___fladd@grs& (0+255),b
 11905  002478                     
 11906                           ; BSR set to: 0
 11907  002478  516F               	movf	___fladd@grs& (0+255),w,b
 11908  00247A  A4D8               	btfss	status,2,c
 11909  00247C  EF42  F012         	goto	u9341
 11910  002480  EF44  F012         	goto	u9340
 11911  002484                     u9341:
 11912  002484  EF54  F012         	goto	l1439
 11913  002488                     u9340:
 11914  002488                     
 11915                           ; BSR set to: 0
 11916  002488  0E01               	movlw	1
 11917  00248A  2760               	addwf	___fladd@b& (0+255),f,b
 11918  00248C  0E00               	movlw	0
 11919  00248E  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 11920  002490  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 11921  002492  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 11922  002494  EF54  F012         	goto	l1439
 11923  002498                     l7839:
 11924                           
 11925                           ; BSR set to: 0
 11926  002498  5164               	movf	___fladd@a& (0+255),w,b
 11927  00249A  5F60               	subwf	___fladd@b& (0+255),f,b
 11928  00249C  5165               	movf	(___fladd@a+1)& (0+255),w,b
 11929  00249E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 11930  0024A0  5166               	movf	(___fladd@a+2)& (0+255),w,b
 11931  0024A2  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 11932  0024A4  5167               	movf	(___fladd@a+3)& (0+255),w,b
 11933  0024A6  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 11934  0024A8                     l1439:
 11935                           
 11936                           ; BSR set to: 0
 11937  0024A8  5160               	movf	___fladd@b& (0+255),w,b
 11938  0024AA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 11939  0024AC  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 11940  0024AE  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 11941  0024B0  A4D8               	btfss	status,2,c
 11942  0024B2  EF5D  F012         	goto	u9351
 11943  0024B6  EF5F  F012         	goto	u9350
 11944  0024BA                     u9351:
 11945  0024BA  EF94  F012         	goto	l7863
 11946  0024BE                     u9350:
 11947  0024BE                     
 11948                           ; BSR set to: 0
 11949  0024BE  516F               	movf	___fladd@grs& (0+255),w,b
 11950  0024C0  A4D8               	btfss	status,2,c
 11951  0024C2  EF65  F012         	goto	u9361
 11952  0024C6  EF67  F012         	goto	u9360
 11953  0024CA                     u9361:
 11954  0024CA  EF94  F012         	goto	l7863
 11955  0024CE                     u9360:
 11956  0024CE                     
 11957                           ; BSR set to: 0
 11958  0024CE  0E00               	movlw	0
 11959  0024D0  6F60               	movwf	?___fladd& (0+255),b
 11960  0024D2  0E00               	movlw	0
 11961  0024D4  6F61               	movwf	(?___fladd+1)& (0+255),b
 11962  0024D6  0E00               	movlw	0
 11963  0024D8  6F62               	movwf	(?___fladd+2)& (0+255),b
 11964  0024DA  0E00               	movlw	0
 11965  0024DC  6F63               	movwf	(?___fladd+3)& (0+255),b
 11966  0024DE  EF2F  F013         	goto	l1431
 11967  0024E2                     l7847:
 11968                           
 11969                           ; BSR set to: 0
 11970  0024E2  90D8               	bcf	status,0,c
 11971  0024E4  3760               	rlcf	___fladd@b& (0+255),f,b
 11972  0024E6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 11973  0024E8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 11974  0024EA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 11975  0024EC                     
 11976                           ; BSR set to: 0
 11977  0024EC  AF6F               	btfss	___fladd@grs& (0+255),7,b
 11978  0024EE  EF7B  F012         	goto	u9371
 11979  0024F2  EF7D  F012         	goto	u9370
 11980  0024F6                     u9371:
 11981  0024F6  EF7E  F012         	goto	l7853
 11982  0024FA                     u9370:
 11983  0024FA                     
 11984                           ; BSR set to: 0
 11985  0024FA  8160               	bsf	___fladd@b& (0+255),0,b
 11986  0024FC                     l7853:
 11987                           
 11988                           ; BSR set to: 0
 11989  0024FC  A16F               	btfss	___fladd@grs& (0+255),0,b
 11990  0024FE  EF83  F012         	goto	u9381
 11991  002502  EF85  F012         	goto	u9380
 11992  002506                     u9381:
 11993  002506  EF89  F012         	goto	l7857
 11994  00250A                     u9380:
 11995  00250A                     
 11996                           ; BSR set to: 0
 11997  00250A  80D8               	bsf	status,0,c
 11998  00250C  376F               	rlcf	___fladd@grs& (0+255),f,b
 11999  00250E  EF8B  F012         	goto	l7859
 12000  002512                     l7857:
 12001                           
 12002                           ; BSR set to: 0
 12003  002512  90D8               	bcf	status,0,c
 12004  002514  376F               	rlcf	___fladd@grs& (0+255),f,b
 12005  002516                     l7859:
 12006                           
 12007                           ; BSR set to: 0
 12008  002516  516E               	movf	___fladd@bexp& (0+255),w,b
 12009  002518  B4D8               	btfsc	status,2,c
 12010  00251A  EF91  F012         	goto	u9391
 12011  00251E  EF93  F012         	goto	u9390
 12012  002522                     u9391:
 12013  002522  EF94  F012         	goto	l7863
 12014  002526                     u9390:
 12015  002526                     
 12016                           ; BSR set to: 0
 12017  002526  076E               	decf	___fladd@bexp& (0+255),f,b
 12018  002528                     l7863:
 12019                           
 12020                           ; BSR set to: 0
 12021  002528  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 12022  00252A  EF99  F012         	goto	u9401
 12023  00252E  EF9B  F012         	goto	u9400
 12024  002532                     u9401:
 12025  002532  EF71  F012         	goto	l7847
 12026  002536                     u9400:
 12027  002536                     l7865:
 12028                           
 12029                           ; BSR set to: 0
 12030  002536  0E00               	movlw	0
 12031  002538  6F6D               	movwf	___fladd@aexp& (0+255),b
 12032  00253A                     
 12033                           ; BSR set to: 0
 12034  00253A  AF6F               	btfss	___fladd@grs& (0+255),7,b
 12035  00253C  EFA2  F012         	goto	u9411
 12036  002540  EFA4  F012         	goto	u9410
 12037  002544                     u9411:
 12038  002544  EFBC  F012         	goto	l1448
 12039  002548                     u9410:
 12040  002548                     
 12041                           ; BSR set to: 0
 12042  002548  C06F  F068         	movff	___fladd@grs,??___fladd
 12043  00254C  0E7F               	movlw	127
 12044  00254E  1768               	andwf	??___fladd& (0+255),f,b
 12045  002550  B4D8               	btfsc	status,2,c
 12046  002552  EFAD  F012         	goto	u9421
 12047  002556  EFAF  F012         	goto	u9420
 12048  00255A                     u9421:
 12049  00255A  EFB3  F012         	goto	l1449
 12050  00255E                     u9420:
 12051  00255E                     l7871:
 12052                           
 12053                           ; BSR set to: 0
 12054  00255E  0E01               	movlw	1
 12055  002560  6F6D               	movwf	___fladd@aexp& (0+255),b
 12056  002562  EFBC  F012         	goto	l1448
 12057  002566                     l1449:
 12058                           
 12059                           ; BSR set to: 0
 12060  002566  A160               	btfss	___fladd@b& (0+255),0,b
 12061  002568  EFB8  F012         	goto	u9431
 12062  00256C  EFBA  F012         	goto	u9430
 12063  002570                     u9431:
 12064  002570  EFBC  F012         	goto	l1448
 12065  002574                     u9430:
 12066  002574  EFAF  F012         	goto	l7871
 12067  002578                     l1448:
 12068                           
 12069                           ; BSR set to: 0
 12070  002578  516D               	movf	___fladd@aexp& (0+255),w,b
 12071  00257A  B4D8               	btfsc	status,2,c
 12072  00257C  EFC2  F012         	goto	u9441
 12073  002580  EFC4  F012         	goto	u9440
 12074  002584                     u9441:
 12075  002584  EFEF  F012         	goto	l7883
 12076  002588                     u9440:
 12077  002588                     
 12078                           ; BSR set to: 0
 12079  002588  0E01               	movlw	1
 12080  00258A  2760               	addwf	___fladd@b& (0+255),f,b
 12081  00258C  0E00               	movlw	0
 12082  00258E  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 12083  002590  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 12084  002592  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 12085  002594                     
 12086                           ; BSR set to: 0
 12087  002594  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 12088  002596  EFCF  F012         	goto	u9451
 12089  00259A  EFD1  F012         	goto	u9450
 12090  00259E                     u9451:
 12091  00259E  EFEF  F012         	goto	l7883
 12092  0025A2                     u9450:
 12093  0025A2                     
 12094                           ; BSR set to: 0
 12095  0025A2  C060  F068         	movff	___fladd@b,??___fladd
 12096  0025A6  C061  F069         	movff	___fladd@b+1,??___fladd+1
 12097  0025AA  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 12098  0025AE  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 12099  0025B2  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 12100  0025B4  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 12101  0025B6  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 12102  0025B8  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 12103  0025BA  3368               	rrcf	??___fladd& (0+255),f,b
 12104  0025BC  C068  F060         	movff	??___fladd,___fladd@b
 12105  0025C0  C069  F061         	movff	??___fladd+1,___fladd@b+1
 12106  0025C4  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 12107  0025C8  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 12108  0025CC  296E               	incf	___fladd@bexp& (0+255),w,b
 12109  0025CE  B4D8               	btfsc	status,2,c
 12110  0025D0  EFEC  F012         	goto	u9461
 12111  0025D4  EFEE  F012         	goto	u9460
 12112  0025D8                     u9461:
 12113  0025D8  EFEF  F012         	goto	l7883
 12114  0025DC                     u9460:
 12115  0025DC                     
 12116                           ; BSR set to: 0
 12117  0025DC  2B6E               	incf	___fladd@bexp& (0+255),f,b
 12118  0025DE                     l7883:
 12119                           
 12120                           ; BSR set to: 0
 12121  0025DE  296E               	incf	___fladd@bexp& (0+255),w,b
 12122  0025E0  B4D8               	btfsc	status,2,c
 12123  0025E2  EFF5  F012         	goto	u9471
 12124  0025E6  EFF7  F012         	goto	u9470
 12125  0025EA                     u9471:
 12126  0025EA  EFFF  F012         	goto	l7887
 12127  0025EE                     u9470:
 12128  0025EE                     
 12129                           ; BSR set to: 0
 12130  0025EE  516E               	movf	___fladd@bexp& (0+255),w,b
 12131  0025F0  A4D8               	btfss	status,2,c
 12132  0025F2  EFFD  F012         	goto	u9481
 12133  0025F6  EFFF  F012         	goto	u9480
 12134  0025FA                     u9481:
 12135  0025FA  EF11  F013         	goto	l7891
 12136  0025FE                     u9480:
 12137  0025FE                     l7887:
 12138                           
 12139                           ; BSR set to: 0
 12140  0025FE  0E00               	movlw	0
 12141  002600  6F60               	movwf	___fladd@b& (0+255),b
 12142  002602  0E00               	movlw	0
 12143  002604  6F61               	movwf	(___fladd@b+1)& (0+255),b
 12144  002606  0E00               	movlw	0
 12145  002608  6F62               	movwf	(___fladd@b+2)& (0+255),b
 12146  00260A  0E00               	movlw	0
 12147  00260C  6F63               	movwf	(___fladd@b+3)& (0+255),b
 12148  00260E  516E               	movf	___fladd@bexp& (0+255),w,b
 12149  002610  A4D8               	btfss	status,2,c
 12150  002612  EF0D  F013         	goto	u9491
 12151  002616  EF0F  F013         	goto	u9490
 12152  00261A                     u9491:
 12153  00261A  EF11  F013         	goto	l7891
 12154  00261E                     u9490:
 12155  00261E                     
 12156                           ; BSR set to: 0
 12157  00261E  0E00               	movlw	0
 12158  002620  6F6C               	movwf	___fladd@signs& (0+255),b
 12159  002622                     l7891:
 12160                           
 12161                           ; BSR set to: 0
 12162  002622  A16E               	btfss	___fladd@bexp& (0+255),0,b
 12163  002624  EF16  F013         	goto	u9501
 12164  002628  EF18  F013         	goto	u9500
 12165  00262C                     u9501:
 12166  00262C  EF1B  F013         	goto	l7895
 12167  002630                     u9500:
 12168  002630                     
 12169                           ; BSR set to: 0
 12170  002630  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 12171  002632  EF1C  F013         	goto	l7897
 12172  002636                     l7895:
 12173                           
 12174                           ; BSR set to: 0
 12175  002636  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 12176  002638                     l7897:
 12177                           
 12178                           ; BSR set to: 0
 12179  002638  90D8               	bcf	status,0,c
 12180  00263A  316E               	rrcf	___fladd@bexp& (0+255),w,b
 12181  00263C  6F63               	movwf	(___fladd@b+3)& (0+255),b
 12182  00263E                     
 12183                           ; BSR set to: 0
 12184  00263E  AF6C               	btfss	___fladd@signs& (0+255),7,b
 12185  002640  EF24  F013         	goto	u9511
 12186  002644  EF26  F013         	goto	u9510
 12187  002648                     u9511:
 12188  002648  EF27  F013         	goto	l7903
 12189  00264C                     u9510:
 12190  00264C                     
 12191                           ; BSR set to: 0
 12192  00264C  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 12193  00264E                     l7903:
 12194                           
 12195                           ; BSR set to: 0
 12196  00264E  C060  F060         	movff	___fladd@b,?___fladd
 12197  002652  C061  F061         	movff	___fladd@b+1,?___fladd+1
 12198  002656  C062  F062         	movff	___fladd@b+2,?___fladd+2
 12199  00265A  C063  F063         	movff	___fladd@b+3,?___fladd+3
 12200  00265E                     l1431:
 12201                           
 12202                           ; BSR set to: 0
 12203  00265E  0012               	return		;funcret
 12204  002660                     __end_of___fladd:
 12205                           	opt callstack 0
 12206                           
 12207 ;; *************** function ___flneg *****************
 12208 ;; Defined at:
 12209 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;  f1              4    0[BANK0 ] unsigned char 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;		None
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  4    0[BANK0 ] unsigned char 
 12216 ;; Registers used:
 12217 ;;		wreg, status,2, status,0
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12223 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12226 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12227 ;;Total ram usage:        4 bytes
 12228 ;; Hardware stack levels used:    1
 12229 ;; Hardware stack levels required when called:    5
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_efgtoa
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237                           	psect	text24
 12238  0062C6                     __ptext24:
 12239                           	opt callstack 0
 12240  0062C6                     ___flneg:
 12241                           	opt callstack 20
 12242  0062C6  0100               	movlb	0	; () banked
 12243  0062C8  5160               	movf	___flneg@f1& (0+255),w,b
 12244  0062CA  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12245  0062CC  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12246  0062CE  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12247  0062D0  B4D8               	btfsc	status,2,c
 12248  0062D2  EF6D  F031         	goto	u10641
 12249  0062D6  EF6F  F031         	goto	u10640
 12250  0062DA                     u10641:
 12251  0062DA  EF77  F031         	goto	l8503
 12252  0062DE                     u10640:
 12253  0062DE                     
 12254                           ; BSR set to: 0
 12255  0062DE  0E00               	movlw	0
 12256  0062E0  1B60               	xorwf	___flneg@f1& (0+255),f,b
 12257  0062E2  0E00               	movlw	0
 12258  0062E4  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12259  0062E6  0E00               	movlw	0
 12260  0062E8  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12261  0062EA  0E80               	movlw	128
 12262  0062EC  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12263  0062EE                     l8503:
 12264                           
 12265                           ; BSR set to: 0
 12266  0062EE  C060  F060         	movff	___flneg@f1,?___flneg
 12267  0062F2  C061  F061         	movff	___flneg@f1+1,?___flneg+1
 12268  0062F6  C062  F062         	movff	___flneg@f1+2,?___flneg+2
 12269  0062FA  C063  F063         	movff	___flneg@f1+3,?___flneg+3
 12270  0062FE                     
 12271                           ; BSR set to: 0
 12272  0062FE  0012               	return		;funcret
 12273  006300                     __end_of___flneg:
 12274                           	opt callstack 0
 12275                           
 12276 ;; *************** function ___flmul *****************
 12277 ;; Defined at:
 12278 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 12279 ;; Parameters:    Size  Location     Type
 12280 ;;  b               4    0[BANK0 ] unsigned char 
 12281 ;;  a               4    4[BANK0 ] unsigned char 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  prod            4   19[BANK0 ] struct .
 12284 ;;  grs             4   14[BANK0 ] unsigned long 
 12285 ;;  temp            2   23[BANK0 ] struct .
 12286 ;;  bexp            1   18[BANK0 ] unsigned char 
 12287 ;;  aexp            1   13[BANK0 ] unsigned char 
 12288 ;;  sign            1   12[BANK0 ] unsigned char 
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  4    0[BANK0 ] unsigned char 
 12291 ;; Registers used:
 12292 ;;		wreg, status,2, status,0, prodl, prodh
 12293 ;; Tracked objects:
 12294 ;;		On entry : 0/0
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12299 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12300 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12301 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12302 ;;Total ram usage:       25 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; Hardware stack levels required when called:    5
 12305 ;; This function calls:
 12306 ;;		Nothing
 12307 ;; This function is called by:
 12308 ;;		_efgtoa
 12309 ;; This function uses a non-reentrant model
 12310 ;;
 12311                           
 12312                           	psect	text25
 12313  002A96                     __ptext25:
 12314                           	opt callstack 0
 12315  002A96                     ___flmul:
 12316                           	opt callstack 20
 12317  002A96  0100               	movlb	0	; () banked
 12318  002A98  5163               	movf	(___flmul@b+3)& (0+255),w,b
 12319  002A9A  0B80               	andlw	128
 12320  002A9C  6F6C               	movwf	___flmul@sign& (0+255),b
 12321  002A9E  5163               	movf	(___flmul@b+3)& (0+255),w,b
 12322  002AA0  2563               	addwf	(___flmul@b+3)& (0+255),w,b
 12323  002AA2  6F72               	movwf	___flmul@bexp& (0+255),b
 12324  002AA4                     
 12325                           ; BSR set to: 0
 12326  002AA4  AF62               	btfss	(___flmul@b+2)& (0+255),7,b
 12327  002AA6  EF57  F015         	goto	u10251
 12328  002AAA  EF59  F015         	goto	u10250
 12329  002AAE                     u10251:
 12330  002AAE  EF5A  F015         	goto	l8251
 12331  002AB2                     u10250:
 12332  002AB2                     
 12333                           ; BSR set to: 0
 12334  002AB2  8172               	bsf	___flmul@bexp& (0+255),0,b
 12335  002AB4                     l8251:
 12336                           
 12337                           ; BSR set to: 0
 12338  002AB4  5172               	movf	___flmul@bexp& (0+255),w,b
 12339  002AB6  B4D8               	btfsc	status,2,c
 12340  002AB8  EF60  F015         	goto	u10261
 12341  002ABC  EF62  F015         	goto	u10260
 12342  002AC0                     u10261:
 12343  002AC0  EF75  F015         	goto	l8259
 12344  002AC4                     u10260:
 12345  002AC4                     
 12346                           ; BSR set to: 0
 12347  002AC4  2972               	incf	___flmul@bexp& (0+255),w,b
 12348  002AC6  A4D8               	btfss	status,2,c
 12349  002AC8  EF68  F015         	goto	u10271
 12350  002ACC  EF6A  F015         	goto	u10270
 12351  002AD0                     u10271:
 12352  002AD0  EF72  F015         	goto	l8257
 12353  002AD4                     u10270:
 12354  002AD4                     
 12355                           ; BSR set to: 0
 12356  002AD4  0E00               	movlw	0
 12357  002AD6  6F60               	movwf	___flmul@b& (0+255),b
 12358  002AD8  0E00               	movlw	0
 12359  002ADA  6F61               	movwf	(___flmul@b+1)& (0+255),b
 12360  002ADC  0E00               	movlw	0
 12361  002ADE  6F62               	movwf	(___flmul@b+2)& (0+255),b
 12362  002AE0  0E00               	movlw	0
 12363  002AE2  6F63               	movwf	(___flmul@b+3)& (0+255),b
 12364  002AE4                     l8257:
 12365                           
 12366                           ; BSR set to: 0
 12367  002AE4  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
 12368  002AE6  EF7D  F015         	goto	l8261
 12369  002AEA                     l8259:
 12370                           
 12371                           ; BSR set to: 0
 12372  002AEA  0E00               	movlw	0
 12373  002AEC  6F60               	movwf	___flmul@b& (0+255),b
 12374  002AEE  0E00               	movlw	0
 12375  002AF0  6F61               	movwf	(___flmul@b+1)& (0+255),b
 12376  002AF2  0E00               	movlw	0
 12377  002AF4  6F62               	movwf	(___flmul@b+2)& (0+255),b
 12378  002AF6  0E00               	movlw	0
 12379  002AF8  6F63               	movwf	(___flmul@b+3)& (0+255),b
 12380  002AFA                     l8261:
 12381                           
 12382                           ; BSR set to: 0
 12383  002AFA  5167               	movf	(___flmul@a+3)& (0+255),w,b
 12384  002AFC  0B80               	andlw	128
 12385  002AFE  1B6C               	xorwf	___flmul@sign& (0+255),f,b
 12386  002B00                     
 12387                           ; BSR set to: 0
 12388  002B00  5167               	movf	(___flmul@a+3)& (0+255),w,b
 12389  002B02  2567               	addwf	(___flmul@a+3)& (0+255),w,b
 12390  002B04  6F6D               	movwf	___flmul@aexp& (0+255),b
 12391  002B06                     
 12392                           ; BSR set to: 0
 12393  002B06  AF66               	btfss	(___flmul@a+2)& (0+255),7,b
 12394  002B08  EF88  F015         	goto	u10281
 12395  002B0C  EF8A  F015         	goto	u10280
 12396  002B10                     u10281:
 12397  002B10  EF8B  F015         	goto	l8269
 12398  002B14                     u10280:
 12399  002B14                     
 12400                           ; BSR set to: 0
 12401  002B14  816D               	bsf	___flmul@aexp& (0+255),0,b
 12402  002B16                     l8269:
 12403                           
 12404                           ; BSR set to: 0
 12405  002B16  516D               	movf	___flmul@aexp& (0+255),w,b
 12406  002B18  B4D8               	btfsc	status,2,c
 12407  002B1A  EF91  F015         	goto	u10291
 12408  002B1E  EF93  F015         	goto	u10290
 12409  002B22                     u10291:
 12410  002B22  EFA6  F015         	goto	l8277
 12411  002B26                     u10290:
 12412  002B26                     
 12413                           ; BSR set to: 0
 12414  002B26  296D               	incf	___flmul@aexp& (0+255),w,b
 12415  002B28  A4D8               	btfss	status,2,c
 12416  002B2A  EF99  F015         	goto	u10301
 12417  002B2E  EF9B  F015         	goto	u10300
 12418  002B32                     u10301:
 12419  002B32  EFA3  F015         	goto	l8275
 12420  002B36                     u10300:
 12421  002B36                     
 12422                           ; BSR set to: 0
 12423  002B36  0E00               	movlw	0
 12424  002B38  6F64               	movwf	___flmul@a& (0+255),b
 12425  002B3A  0E00               	movlw	0
 12426  002B3C  6F65               	movwf	(___flmul@a+1)& (0+255),b
 12427  002B3E  0E00               	movlw	0
 12428  002B40  6F66               	movwf	(___flmul@a+2)& (0+255),b
 12429  002B42  0E00               	movlw	0
 12430  002B44  6F67               	movwf	(___flmul@a+3)& (0+255),b
 12431  002B46                     l8275:
 12432                           
 12433                           ; BSR set to: 0
 12434  002B46  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
 12435  002B48  EFAE  F015         	goto	l1508
 12436  002B4C                     l8277:
 12437                           
 12438                           ; BSR set to: 0
 12439  002B4C  0E00               	movlw	0
 12440  002B4E  6F64               	movwf	___flmul@a& (0+255),b
 12441  002B50  0E00               	movlw	0
 12442  002B52  6F65               	movwf	(___flmul@a+1)& (0+255),b
 12443  002B54  0E00               	movlw	0
 12444  002B56  6F66               	movwf	(___flmul@a+2)& (0+255),b
 12445  002B58  0E00               	movlw	0
 12446  002B5A  6F67               	movwf	(___flmul@a+3)& (0+255),b
 12447  002B5C                     l1508:
 12448                           
 12449                           ; BSR set to: 0
 12450  002B5C  516D               	movf	___flmul@aexp& (0+255),w,b
 12451  002B5E  B4D8               	btfsc	status,2,c
 12452  002B60  EFB4  F015         	goto	u10311
 12453  002B64  EFB6  F015         	goto	u10310
 12454  002B68                     u10311:
 12455  002B68  EFBE  F015         	goto	l8281
 12456  002B6C                     u10310:
 12457  002B6C                     
 12458                           ; BSR set to: 0
 12459  002B6C  5172               	movf	___flmul@bexp& (0+255),w,b
 12460  002B6E  A4D8               	btfss	status,2,c
 12461  002B70  EFBC  F015         	goto	u10321
 12462  002B74  EFBE  F015         	goto	u10320
 12463  002B78                     u10321:
 12464  002B78  EFC8  F015         	goto	l8285
 12465  002B7C                     u10320:
 12466  002B7C                     l8281:
 12467                           
 12468                           ; BSR set to: 0
 12469  002B7C  0E00               	movlw	0
 12470  002B7E  6F60               	movwf	?___flmul& (0+255),b
 12471  002B80  0E00               	movlw	0
 12472  002B82  6F61               	movwf	(?___flmul+1)& (0+255),b
 12473  002B84  0E00               	movlw	0
 12474  002B86  6F62               	movwf	(?___flmul+2)& (0+255),b
 12475  002B88  0E00               	movlw	0
 12476  002B8A  6F63               	movwf	(?___flmul+3)& (0+255),b
 12477  002B8C  EF60  F017         	goto	l1512
 12478  002B90                     l8285:
 12479                           
 12480                           ; BSR set to: 0
 12481  002B90  5166               	movf	(___flmul@a+2)& (0+255),w,b
 12482  002B92  0360               	mulwf	___flmul@b& (0+255),b
 12483  002B94  CFF3 F077          	movff	prodl,___flmul@temp
 12484  002B98  CFF4 F078          	movff	prodh,___flmul@temp+1
 12485  002B9C                     
 12486                           ; BSR set to: 0
 12487  002B9C  5177               	movf	___flmul@temp& (0+255),w,b
 12488  002B9E  6F6E               	movwf	___flmul@grs& (0+255),b
 12489  002BA0  6B6F               	clrf	(___flmul@grs+1)& (0+255),b
 12490  002BA2  6B70               	clrf	(___flmul@grs+2)& (0+255),b
 12491  002BA4  6B71               	clrf	(___flmul@grs+3)& (0+255),b
 12492  002BA6                     
 12493                           ; BSR set to: 0
 12494  002BA6  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12495  002BA8  6F73               	movwf	___flmul@prod& (0+255),b
 12496  002BAA  6B74               	clrf	(___flmul@prod+1)& (0+255),b
 12497  002BAC  6B75               	clrf	(___flmul@prod+2)& (0+255),b
 12498  002BAE  6B76               	clrf	(___flmul@prod+3)& (0+255),b
 12499  002BB0  5165               	movf	(___flmul@a+1)& (0+255),w,b
 12500  002BB2  0361               	mulwf	(___flmul@b+1)& (0+255),b
 12501  002BB4  CFF3 F077          	movff	prodl,___flmul@temp
 12502  002BB8  CFF4 F078          	movff	prodh,___flmul@temp+1
 12503  002BBC                     
 12504                           ; BSR set to: 0
 12505  002BBC  5177               	movf	___flmul@temp& (0+255),w,b
 12506  002BBE  276E               	addwf	___flmul@grs& (0+255),f,b
 12507  002BC0  0E00               	movlw	0
 12508  002BC2  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12509  002BC4  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12510  002BC6  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12511  002BC8                     
 12512                           ; BSR set to: 0
 12513  002BC8  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12514  002BCA  2773               	addwf	___flmul@prod& (0+255),f,b
 12515  002BCC  0E00               	movlw	0
 12516  002BCE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12517  002BD0  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12518  002BD2  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12519  002BD4  5164               	movf	___flmul@a& (0+255),w,b
 12520  002BD6  0362               	mulwf	(___flmul@b+2)& (0+255),b
 12521  002BD8  CFF3 F077          	movff	prodl,___flmul@temp
 12522  002BDC  CFF4 F078          	movff	prodh,___flmul@temp+1
 12523  002BE0                     
 12524                           ; BSR set to: 0
 12525  002BE0  5177               	movf	___flmul@temp& (0+255),w,b
 12526  002BE2  276E               	addwf	___flmul@grs& (0+255),f,b
 12527  002BE4  0E00               	movlw	0
 12528  002BE6  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12529  002BE8  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12530  002BEA  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12531  002BEC                     
 12532                           ; BSR set to: 0
 12533  002BEC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12534  002BEE  2773               	addwf	___flmul@prod& (0+255),f,b
 12535  002BF0  0E00               	movlw	0
 12536  002BF2  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12537  002BF4  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12538  002BF6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12539  002BF8                     
 12540                           ; BSR set to: 0
 12541  002BF8  C070  F071         	movff	___flmul@grs+2,___flmul@grs+3
 12542  002BFC  C06F  F070         	movff	___flmul@grs+1,___flmul@grs+2
 12543  002C00  C06E  F06F         	movff	___flmul@grs,___flmul@grs+1
 12544  002C04  6B6E               	clrf	___flmul@grs& (0+255),b
 12545  002C06                     
 12546                           ; BSR set to: 0
 12547  002C06  5164               	movf	___flmul@a& (0+255),w,b
 12548  002C08  0361               	mulwf	(___flmul@b+1)& (0+255),b
 12549  002C0A  CFF3 F077          	movff	prodl,___flmul@temp
 12550  002C0E  CFF4 F078          	movff	prodh,___flmul@temp+1
 12551  002C12                     
 12552                           ; BSR set to: 0
 12553  002C12  5177               	movf	___flmul@temp& (0+255),w,b
 12554  002C14  276E               	addwf	___flmul@grs& (0+255),f,b
 12555  002C16  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12556  002C18  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12557  002C1A  0E00               	movlw	0
 12558  002C1C  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12559  002C1E  0E00               	movlw	0
 12560  002C20  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12561  002C22                     
 12562                           ; BSR set to: 0
 12563  002C22  5165               	movf	(___flmul@a+1)& (0+255),w,b
 12564  002C24  0360               	mulwf	___flmul@b& (0+255),b
 12565  002C26  CFF3 F077          	movff	prodl,___flmul@temp
 12566  002C2A  CFF4 F078          	movff	prodh,___flmul@temp+1
 12567  002C2E                     
 12568                           ; BSR set to: 0
 12569  002C2E  5177               	movf	___flmul@temp& (0+255),w,b
 12570  002C30  276E               	addwf	___flmul@grs& (0+255),f,b
 12571  002C32  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12572  002C34  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12573  002C36  0E00               	movlw	0
 12574  002C38  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12575  002C3A  0E00               	movlw	0
 12576  002C3C  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12577  002C3E                     
 12578                           ; BSR set to: 0
 12579  002C3E  C070  F071         	movff	___flmul@grs+2,___flmul@grs+3
 12580  002C42  C06F  F070         	movff	___flmul@grs+1,___flmul@grs+2
 12581  002C46  C06E  F06F         	movff	___flmul@grs,___flmul@grs+1
 12582  002C4A  6B6E               	clrf	___flmul@grs& (0+255),b
 12583  002C4C  5164               	movf	___flmul@a& (0+255),w,b
 12584  002C4E  0360               	mulwf	___flmul@b& (0+255),b
 12585  002C50  CFF3 F077          	movff	prodl,___flmul@temp
 12586  002C54  CFF4 F078          	movff	prodh,___flmul@temp+1
 12587  002C58                     
 12588                           ; BSR set to: 0
 12589  002C58  5177               	movf	___flmul@temp& (0+255),w,b
 12590  002C5A  276E               	addwf	___flmul@grs& (0+255),f,b
 12591  002C5C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12592  002C5E  236F               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12593  002C60  0E00               	movlw	0
 12594  002C62  2370               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12595  002C64  0E00               	movlw	0
 12596  002C66  2371               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12597  002C68                     
 12598                           ; BSR set to: 0
 12599  002C68  5166               	movf	(___flmul@a+2)& (0+255),w,b
 12600  002C6A  0361               	mulwf	(___flmul@b+1)& (0+255),b
 12601  002C6C  CFF3 F077          	movff	prodl,___flmul@temp
 12602  002C70  CFF4 F078          	movff	prodh,___flmul@temp+1
 12603  002C74  5177               	movf	___flmul@temp& (0+255),w,b
 12604  002C76  2773               	addwf	___flmul@prod& (0+255),f,b
 12605  002C78  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12606  002C7A  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12607  002C7C  0E00               	movlw	0
 12608  002C7E  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12609  002C80  0E00               	movlw	0
 12610  002C82  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12611  002C84                     
 12612                           ; BSR set to: 0
 12613  002C84  5165               	movf	(___flmul@a+1)& (0+255),w,b
 12614  002C86  0362               	mulwf	(___flmul@b+2)& (0+255),b
 12615  002C88  CFF3 F077          	movff	prodl,___flmul@temp
 12616  002C8C  CFF4 F078          	movff	prodh,___flmul@temp+1
 12617  002C90                     
 12618                           ; BSR set to: 0
 12619  002C90  5177               	movf	___flmul@temp& (0+255),w,b
 12620  002C92  2773               	addwf	___flmul@prod& (0+255),f,b
 12621  002C94  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12622  002C96  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12623  002C98  0E00               	movlw	0
 12624  002C9A  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12625  002C9C  0E00               	movlw	0
 12626  002C9E  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12627  002CA0  5166               	movf	(___flmul@a+2)& (0+255),w,b
 12628  002CA2  0362               	mulwf	(___flmul@b+2)& (0+255),b
 12629  002CA4  CFF3 F077          	movff	prodl,___flmul@temp
 12630  002CA8  CFF4 F078          	movff	prodh,___flmul@temp+1
 12631  002CAC                     
 12632                           ; BSR set to: 0
 12633  002CAC  5177               	movf	___flmul@temp& (0+255),w,b
 12634  002CAE  6F68               	movwf	??___flmul& (0+255),b
 12635  002CB0  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12636  002CB2  6F69               	movwf	(??___flmul+1)& (0+255),b
 12637  002CB4  6B6A               	clrf	(??___flmul+2)& (0+255),b
 12638  002CB6  6B6B               	clrf	(??___flmul+3)& (0+255),b
 12639  002CB8  C06A  F06B         	movff	??___flmul+2,??___flmul+3
 12640  002CBC  C069  F06A         	movff	??___flmul+1,??___flmul+2
 12641  002CC0  C068  F069         	movff	??___flmul,??___flmul+1
 12642  002CC4  6B68               	clrf	??___flmul& (0+255),b
 12643  002CC6  5168               	movf	??___flmul& (0+255),w,b
 12644  002CC8  2773               	addwf	___flmul@prod& (0+255),f,b
 12645  002CCA  5169               	movf	(??___flmul+1)& (0+255),w,b
 12646  002CCC  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12647  002CCE  516A               	movf	(??___flmul+2)& (0+255),w,b
 12648  002CD0  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12649  002CD2  516B               	movf	(??___flmul+3)& (0+255),w,b
 12650  002CD4  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12651  002CD6                     
 12652                           ; BSR set to: 0
 12653  002CD6  C06E  F068         	movff	___flmul@grs,??___flmul
 12654  002CDA  C06F  F069         	movff	___flmul@grs+1,??___flmul+1
 12655  002CDE  C070  F06A         	movff	___flmul@grs+2,??___flmul+2
 12656  002CE2  C071  F06B         	movff	___flmul@grs+3,??___flmul+3
 12657  002CE6  0E19               	movlw	25
 12658  002CE8  EF7B  F016         	goto	u10330
 12659  002CEC                     u10335:
 12660  002CEC  90D8               	bcf	status,0,c
 12661  002CEE  336B               	rrcf	(??___flmul+3)& (0+255),f,b
 12662  002CF0  336A               	rrcf	(??___flmul+2)& (0+255),f,b
 12663  002CF2  3369               	rrcf	(??___flmul+1)& (0+255),f,b
 12664  002CF4  3368               	rrcf	??___flmul& (0+255),f,b
 12665  002CF6                     u10330:
 12666  002CF6  2EE8               	decfsz	wreg,f,c
 12667  002CF8  EF76  F016         	goto	u10335
 12668  002CFC  5168               	movf	??___flmul& (0+255),w,b
 12669  002CFE  2773               	addwf	___flmul@prod& (0+255),f,b
 12670  002D00  5169               	movf	(??___flmul+1)& (0+255),w,b
 12671  002D02  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12672  002D04  516A               	movf	(??___flmul+2)& (0+255),w,b
 12673  002D06  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12674  002D08  516B               	movf	(??___flmul+3)& (0+255),w,b
 12675  002D0A  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12676  002D0C                     
 12677                           ; BSR set to: 0
 12678  002D0C  C070  F071         	movff	___flmul@grs+2,___flmul@grs+3
 12679  002D10  C06F  F070         	movff	___flmul@grs+1,___flmul@grs+2
 12680  002D14  C06E  F06F         	movff	___flmul@grs,___flmul@grs+1
 12681  002D18  6B6E               	clrf	___flmul@grs& (0+255),b
 12682  002D1A                     
 12683                           ; BSR set to: 0
 12684  002D1A  516D               	movf	___flmul@aexp& (0+255),w,b
 12685  002D1C  C072  F068         	movff	___flmul@bexp,??___flmul
 12686  002D20  6B69               	clrf	(??___flmul+1)& (0+255),b
 12687  002D22  2768               	addwf	??___flmul& (0+255),f,b
 12688  002D24  0E00               	movlw	0
 12689  002D26  2369               	addwfc	(??___flmul+1)& (0+255),f,b
 12690  002D28  0E82               	movlw	130
 12691  002D2A  2568               	addwf	??___flmul& (0+255),w,b
 12692  002D2C  6F77               	movwf	___flmul@temp& (0+255),b
 12693  002D2E  0EFF               	movlw	255
 12694  002D30  2169               	addwfc	(??___flmul+1)& (0+255),w,b
 12695  002D32  6F78               	movwf	(___flmul@temp+1)& (0+255),b
 12696  002D34  EFB1  F016         	goto	l8333
 12697  002D38                     l8327:
 12698                           
 12699                           ; BSR set to: 0
 12700  002D38  90D8               	bcf	status,0,c
 12701  002D3A  3773               	rlcf	___flmul@prod& (0+255),f,b
 12702  002D3C  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12703  002D3E  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12704  002D40  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12705  002D42                     
 12706                           ; BSR set to: 0
 12707  002D42  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
 12708  002D44  EFA6  F016         	goto	u10341
 12709  002D48  EFA8  F016         	goto	u10340
 12710  002D4C                     u10341:
 12711  002D4C  EFA9  F016         	goto	l1515
 12712  002D50                     u10340:
 12713  002D50                     
 12714                           ; BSR set to: 0
 12715  002D50  8173               	bsf	___flmul@prod& (0+255),0,b
 12716  002D52                     l1515:
 12717                           
 12718                           ; BSR set to: 0
 12719  002D52  90D8               	bcf	status,0,c
 12720  002D54  376E               	rlcf	___flmul@grs& (0+255),f,b
 12721  002D56  376F               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12722  002D58  3770               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12723  002D5A  3771               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12724  002D5C  0777               	decf	___flmul@temp& (0+255),f,b
 12725  002D5E  A0D8               	btfss	status,0,c
 12726  002D60  0778               	decf	(___flmul@temp+1)& (0+255),f,b
 12727  002D62                     l8333:
 12728                           
 12729                           ; BSR set to: 0
 12730  002D62  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
 12731  002D64  EFB6  F016         	goto	u10351
 12732  002D68  EFB8  F016         	goto	u10350
 12733  002D6C                     u10351:
 12734  002D6C  EF9C  F016         	goto	l8327
 12735  002D70                     u10350:
 12736  002D70                     
 12737                           ; BSR set to: 0
 12738  002D70  0E00               	movlw	0
 12739  002D72  6F6D               	movwf	___flmul@aexp& (0+255),b
 12740  002D74                     
 12741                           ; BSR set to: 0
 12742  002D74  AF71               	btfss	(___flmul@grs+3)& (0+255),7,b
 12743  002D76  EFBF  F016         	goto	u10361
 12744  002D7A  EFC1  F016         	goto	u10360
 12745  002D7E                     u10361:
 12746  002D7E  EFE5  F016         	goto	l1517
 12747  002D82                     u10360:
 12748  002D82                     
 12749                           ; BSR set to: 0
 12750  002D82  0EFF               	movlw	255
 12751  002D84  156E               	andwf	___flmul@grs& (0+255),w,b
 12752  002D86  6F68               	movwf	??___flmul& (0+255),b
 12753  002D88  0EFF               	movlw	255
 12754  002D8A  156F               	andwf	(___flmul@grs+1)& (0+255),w,b
 12755  002D8C  6F69               	movwf	(??___flmul+1)& (0+255),b
 12756  002D8E  0EFF               	movlw	255
 12757  002D90  1570               	andwf	(___flmul@grs+2)& (0+255),w,b
 12758  002D92  6F6A               	movwf	(??___flmul+2)& (0+255),b
 12759  002D94  0E7F               	movlw	127
 12760  002D96  1571               	andwf	(___flmul@grs+3)& (0+255),w,b
 12761  002D98  6F6B               	movwf	(??___flmul+3)& (0+255),b
 12762  002D9A  5168               	movf	??___flmul& (0+255),w,b
 12763  002D9C  1169               	iorwf	(??___flmul+1)& (0+255),w,b
 12764  002D9E  116A               	iorwf	(??___flmul+2)& (0+255),w,b
 12765  002DA0  116B               	iorwf	(??___flmul+3)& (0+255),w,b
 12766  002DA2  B4D8               	btfsc	status,2,c
 12767  002DA4  EFD6  F016         	goto	u10371
 12768  002DA8  EFD8  F016         	goto	u10370
 12769  002DAC                     u10371:
 12770  002DAC  EFDC  F016         	goto	l1518
 12771  002DB0                     u10370:
 12772  002DB0                     l8341:
 12773                           
 12774                           ; BSR set to: 0
 12775  002DB0  0E01               	movlw	1
 12776  002DB2  6F6D               	movwf	___flmul@aexp& (0+255),b
 12777  002DB4  EFE5  F016         	goto	l1517
 12778  002DB8                     l1518:
 12779                           
 12780                           ; BSR set to: 0
 12781  002DB8  A173               	btfss	___flmul@prod& (0+255),0,b
 12782  002DBA  EFE1  F016         	goto	u10381
 12783  002DBE  EFE3  F016         	goto	u10380
 12784  002DC2                     u10381:
 12785  002DC2  EFE5  F016         	goto	l1517
 12786  002DC6                     u10380:
 12787  002DC6  EFD8  F016         	goto	l8341
 12788  002DCA                     l1517:
 12789                           
 12790                           ; BSR set to: 0
 12791  002DCA  516D               	movf	___flmul@aexp& (0+255),w,b
 12792  002DCC  B4D8               	btfsc	status,2,c
 12793  002DCE  EFEB  F016         	goto	u10391
 12794  002DD2  EFED  F016         	goto	u10390
 12795  002DD6                     u10391:
 12796  002DD6  EF11  F017         	goto	l8353
 12797  002DDA                     u10390:
 12798  002DDA                     
 12799                           ; BSR set to: 0
 12800  002DDA  0E01               	movlw	1
 12801  002DDC  2773               	addwf	___flmul@prod& (0+255),f,b
 12802  002DDE  0E00               	movlw	0
 12803  002DE0  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12804  002DE2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12805  002DE4  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12806  002DE6                     
 12807                           ; BSR set to: 0
 12808  002DE6  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
 12809  002DE8  EFF8  F016         	goto	u10401
 12810  002DEC  EFFA  F016         	goto	u10400
 12811  002DF0                     u10401:
 12812  002DF0  EF11  F017         	goto	l8353
 12813  002DF4                     u10400:
 12814  002DF4                     
 12815                           ; BSR set to: 0
 12816  002DF4  C073  F068         	movff	___flmul@prod,??___flmul
 12817  002DF8  C074  F069         	movff	___flmul@prod+1,??___flmul+1
 12818  002DFC  C075  F06A         	movff	___flmul@prod+2,??___flmul+2
 12819  002E00  C076  F06B         	movff	___flmul@prod+3,??___flmul+3
 12820  002E04  356B               	rlcf	(??___flmul+3)& (0+255),w,b
 12821  002E06  336B               	rrcf	(??___flmul+3)& (0+255),f,b
 12822  002E08  336A               	rrcf	(??___flmul+2)& (0+255),f,b
 12823  002E0A  3369               	rrcf	(??___flmul+1)& (0+255),f,b
 12824  002E0C  3368               	rrcf	??___flmul& (0+255),f,b
 12825  002E0E  C068  F073         	movff	??___flmul,___flmul@prod
 12826  002E12  C069  F074         	movff	??___flmul+1,___flmul@prod+1
 12827  002E16  C06A  F075         	movff	??___flmul+2,___flmul@prod+2
 12828  002E1A  C06B  F076         	movff	??___flmul+3,___flmul@prod+3
 12829  002E1E                     
 12830                           ; BSR set to: 0
 12831  002E1E  4B77               	infsnz	___flmul@temp& (0+255),f,b
 12832  002E20  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
 12833  002E22                     l8353:
 12834                           
 12835                           ; BSR set to: 0
 12836  002E22  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12837  002E24  EF1C  F017         	goto	u10411
 12838  002E28  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12839  002E2A  E108               	bnz	u10410
 12840  002E2C  2977               	incf	___flmul@temp& (0+255),w,b
 12841  002E2E  A0D8               	btfss	status,0,c
 12842  002E30  EF1C  F017         	goto	u10411
 12843  002E34  EF1E  F017         	goto	u10410
 12844  002E38                     u10411:
 12845  002E38  EF28  F017         	goto	l8357
 12846  002E3C                     u10410:
 12847  002E3C                     
 12848                           ; BSR set to: 0
 12849  002E3C  0E00               	movlw	0
 12850  002E3E  6F73               	movwf	___flmul@prod& (0+255),b
 12851  002E40  0E00               	movlw	0
 12852  002E42  6F74               	movwf	(___flmul@prod+1)& (0+255),b
 12853  002E44  0E80               	movlw	128
 12854  002E46  6F75               	movwf	(___flmul@prod+2)& (0+255),b
 12855  002E48  0E7F               	movlw	127
 12856  002E4A  6F76               	movwf	(___flmul@prod+3)& (0+255),b
 12857  002E4C  EF56  F017         	goto	l8369
 12858  002E50                     l8357:
 12859                           
 12860                           ; BSR set to: 0
 12861  002E50  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12862  002E52  EF35  F017         	goto	u10420
 12863  002E56  5178               	movf	(___flmul@temp+1)& (0+255),w,b
 12864  002E58  E106               	bnz	u10421
 12865  002E5A  0577               	decf	___flmul@temp& (0+255),w,b
 12866  002E5C  B0D8               	btfsc	status,0,c
 12867  002E5E  EF33  F017         	goto	u10421
 12868  002E62  EF35  F017         	goto	u10420
 12869  002E66                     u10421:
 12870  002E66  EF41  F017         	goto	l1525
 12871  002E6A                     u10420:
 12872  002E6A                     
 12873                           ; BSR set to: 0
 12874  002E6A  0E00               	movlw	0
 12875  002E6C  6F73               	movwf	___flmul@prod& (0+255),b
 12876  002E6E  0E00               	movlw	0
 12877  002E70  6F74               	movwf	(___flmul@prod+1)& (0+255),b
 12878  002E72  0E00               	movlw	0
 12879  002E74  6F75               	movwf	(___flmul@prod+2)& (0+255),b
 12880  002E76  0E00               	movlw	0
 12881  002E78  6F76               	movwf	(___flmul@prod+3)& (0+255),b
 12882  002E7A  0E00               	movlw	0
 12883  002E7C  6F6C               	movwf	___flmul@sign& (0+255),b
 12884  002E7E  EF56  F017         	goto	l8369
 12885  002E82                     l1525:
 12886                           
 12887                           ; BSR set to: 0
 12888  002E82  C077  F072         	movff	___flmul@temp,___flmul@bexp
 12889  002E86                     
 12890                           ; BSR set to: 0
 12891  002E86  0EFF               	movlw	255
 12892  002E88  1773               	andwf	___flmul@prod& (0+255),f,b
 12893  002E8A  0EFF               	movlw	255
 12894  002E8C  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
 12895  002E8E  0E7F               	movlw	127
 12896  002E90  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
 12897  002E92  0E00               	movlw	0
 12898  002E94  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
 12899  002E96                     
 12900                           ; BSR set to: 0
 12901  002E96  A172               	btfss	___flmul@bexp& (0+255),0,b
 12902  002E98  EF50  F017         	goto	u10431
 12903  002E9C  EF52  F017         	goto	u10430
 12904  002EA0                     u10431:
 12905  002EA0  EF53  F017         	goto	l8367
 12906  002EA4                     u10430:
 12907  002EA4                     
 12908                           ; BSR set to: 0
 12909  002EA4  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
 12910  002EA6                     l8367:
 12911                           
 12912                           ; BSR set to: 0
 12913  002EA6  90D8               	bcf	status,0,c
 12914  002EA8  3172               	rrcf	___flmul@bexp& (0+255),w,b
 12915  002EAA  6F76               	movwf	(___flmul@prod+3)& (0+255),b
 12916  002EAC                     l8369:
 12917                           
 12918                           ; BSR set to: 0
 12919  002EAC  516C               	movf	___flmul@sign& (0+255),w,b
 12920  002EAE  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12921  002EB0                     
 12922                           ; BSR set to: 0
 12923  002EB0  C073  F060         	movff	___flmul@prod,?___flmul
 12924  002EB4  C074  F061         	movff	___flmul@prod+1,?___flmul+1
 12925  002EB8  C075  F062         	movff	___flmul@prod+2,?___flmul+2
 12926  002EBC  C076  F063         	movff	___flmul@prod+3,?___flmul+3
 12927  002EC0                     l1512:
 12928                           
 12929                           ; BSR set to: 0
 12930  002EC0  0012               	return		;funcret
 12931  002EC2                     __end_of___flmul:
 12932                           	opt callstack 0
 12933                           
 12934 ;; *************** function ___flge *****************
 12935 ;; Defined at:
 12936 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;  ff1             4   25[BANK0 ] unsigned char 
 12939 ;;  ff2             4   29[BANK0 ] unsigned char 
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;		None
 12942 ;; Return value:  Size  Location     Type
 12943 ;;		None               void
 12944 ;; Registers used:
 12945 ;;		wreg, status,2, status,0
 12946 ;; Tracked objects:
 12947 ;;		On entry : 0/0
 12948 ;;		On exit  : 0/0
 12949 ;;		Unchanged: 0/0
 12950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12951 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12954 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12955 ;;Total ram usage:       12 bytes
 12956 ;; Hardware stack levels used:    1
 12957 ;; Hardware stack levels required when called:    5
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_efgtoa
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           	psect	text26
 12966  00544A                     __ptext26:
 12967                           	opt callstack 0
 12968  00544A                     ___flge:
 12969                           	opt callstack 20
 12970  00544A  0E00               	movlw	0
 12971  00544C  0100               	movlb	0	; () banked
 12972  00544E  1579               	andwf	___flge@ff1& (0+255),w,b
 12973  005450  6F81               	movwf	??___flge& (0+255),b
 12974  005452  0E00               	movlw	0
 12975  005454  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
 12976  005456  6F82               	movwf	(??___flge+1)& (0+255),b
 12977  005458  0E80               	movlw	128
 12978  00545A  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
 12979  00545C  6F83               	movwf	(??___flge+2)& (0+255),b
 12980  00545E  0E7F               	movlw	127
 12981  005460  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
 12982  005462  6F84               	movwf	(??___flge+3)& (0+255),b
 12983  005464  5181               	movf	??___flge& (0+255),w,b
 12984  005466  1182               	iorwf	(??___flge+1)& (0+255),w,b
 12985  005468  1183               	iorwf	(??___flge+2)& (0+255),w,b
 12986  00546A  1184               	iorwf	(??___flge+3)& (0+255),w,b
 12987  00546C  A4D8               	btfss	status,2,c
 12988  00546E  EF3B  F02A         	goto	u10591
 12989  005472  EF3D  F02A         	goto	u10590
 12990  005476                     u10591:
 12991  005476  EF45  F02A         	goto	l8481
 12992  00547A                     u10590:
 12993  00547A                     
 12994                           ; BSR set to: 0
 12995  00547A  0E00               	movlw	0
 12996  00547C  6F79               	movwf	___flge@ff1& (0+255),b
 12997  00547E  0E00               	movlw	0
 12998  005480  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
 12999  005482  0E00               	movlw	0
 13000  005484  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
 13001  005486  0E00               	movlw	0
 13002  005488  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
 13003  00548A                     l8481:
 13004                           
 13005                           ; BSR set to: 0
 13006  00548A  0E00               	movlw	0
 13007  00548C  157D               	andwf	___flge@ff2& (0+255),w,b
 13008  00548E  6F81               	movwf	??___flge& (0+255),b
 13009  005490  0E00               	movlw	0
 13010  005492  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
 13011  005494  6F82               	movwf	(??___flge+1)& (0+255),b
 13012  005496  0E80               	movlw	128
 13013  005498  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
 13014  00549A  6F83               	movwf	(??___flge+2)& (0+255),b
 13015  00549C  0E7F               	movlw	127
 13016  00549E  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
 13017  0054A0  6F84               	movwf	(??___flge+3)& (0+255),b
 13018  0054A2  5181               	movf	??___flge& (0+255),w,b
 13019  0054A4  1182               	iorwf	(??___flge+1)& (0+255),w,b
 13020  0054A6  1183               	iorwf	(??___flge+2)& (0+255),w,b
 13021  0054A8  1184               	iorwf	(??___flge+3)& (0+255),w,b
 13022  0054AA  A4D8               	btfss	status,2,c
 13023  0054AC  EF5A  F02A         	goto	u10601
 13024  0054B0  EF5C  F02A         	goto	u10600
 13025  0054B4                     u10601:
 13026  0054B4  EF64  F02A         	goto	l8485
 13027  0054B8                     u10600:
 13028  0054B8                     
 13029                           ; BSR set to: 0
 13030  0054B8  0E00               	movlw	0
 13031  0054BA  6F7D               	movwf	___flge@ff2& (0+255),b
 13032  0054BC  0E00               	movlw	0
 13033  0054BE  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
 13034  0054C0  0E00               	movlw	0
 13035  0054C2  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
 13036  0054C4  0E00               	movlw	0
 13037  0054C6  6F80               	movwf	(___flge@ff2+3)& (0+255),b
 13038  0054C8                     l8485:
 13039                           
 13040                           ; BSR set to: 0
 13041  0054C8  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
 13042  0054CA  EF69  F02A         	goto	u10611
 13043  0054CE  EF6B  F02A         	goto	u10610
 13044  0054D2                     u10611:
 13045  0054D2  EF74  F02A         	goto	l8489
 13046  0054D6                     u10610:
 13047  0054D6                     
 13048                           ; BSR set to: 0
 13049  0054D6  6D79               	negf	___flge@ff1& (0+255),b
 13050  0054D8  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
 13051  0054DA  B0D8               	btfsc	status,0,c
 13052  0054DC  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
 13053  0054DE  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
 13054  0054E0  B0D8               	btfsc	status,0,c
 13055  0054E2  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
 13056  0054E4  0E80               	movlw	128
 13057  0054E6  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
 13058  0054E8                     l8489:
 13059                           
 13060                           ; BSR set to: 0
 13061  0054E8  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
 13062  0054EA  EF79  F02A         	goto	u10621
 13063  0054EE  EF7B  F02A         	goto	u10620
 13064  0054F2                     u10621:
 13065  0054F2  EF84  F02A         	goto	l1159
 13066  0054F6                     u10620:
 13067  0054F6                     
 13068                           ; BSR set to: 0
 13069  0054F6  6D7D               	negf	___flge@ff2& (0+255),b
 13070  0054F8  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
 13071  0054FA  B0D8               	btfsc	status,0,c
 13072  0054FC  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
 13073  0054FE  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
 13074  005500  B0D8               	btfsc	status,0,c
 13075  005502  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
 13076  005504  0E80               	movlw	128
 13077  005506  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
 13078  005508                     l1159:
 13079                           
 13080                           ; BSR set to: 0
 13081  005508  0E00               	movlw	0
 13082  00550A  1B79               	xorwf	___flge@ff1& (0+255),f,b
 13083  00550C  0E00               	movlw	0
 13084  00550E  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13085  005510  0E00               	movlw	0
 13086  005512  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13087  005514  0E80               	movlw	128
 13088  005516  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13089  005518  0E00               	movlw	0
 13090  00551A  1B7D               	xorwf	___flge@ff2& (0+255),f,b
 13091  00551C  0E00               	movlw	0
 13092  00551E  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13093  005520  0E00               	movlw	0
 13094  005522  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13095  005524  0E80               	movlw	128
 13096  005526  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13097  005528  517D               	movf	___flge@ff2& (0+255),w,b
 13098  00552A  5D79               	subwf	___flge@ff1& (0+255),w,b
 13099  00552C  517E               	movf	(___flge@ff2+1)& (0+255),w,b
 13100  00552E  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13101  005530  517F               	movf	(___flge@ff2+2)& (0+255),w,b
 13102  005532  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13103  005534  5180               	movf	(___flge@ff2+3)& (0+255),w,b
 13104  005536  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13105  005538  B0D8               	btfsc	status,0,c
 13106  00553A  EFA1  F02A         	goto	u10631
 13107  00553E  EFA3  F02A         	goto	u10630
 13108  005542                     u10631:
 13109  005542  EFA6  F02A         	goto	l8495
 13110  005546                     u10630:
 13111  005546                     
 13112                           ; BSR set to: 0
 13113  005546  90D8               	bcf	status,0,c
 13114  005548  EFA7  F02A         	goto	l1164
 13115  00554C                     l8495:
 13116                           
 13117                           ; BSR set to: 0
 13118  00554C  80D8               	bsf	status,0,c
 13119  00554E                     l1164:
 13120                           
 13121                           ; BSR set to: 0
 13122  00554E  0012               	return		;funcret
 13123  005550                     __end_of___flge:
 13124                           	opt callstack 0
 13125                           
 13126 ;; *************** function ___fleq *****************
 13127 ;; Defined at:
 13128 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
 13129 ;; Parameters:    Size  Location     Type
 13130 ;;  ff1             4    0[BANK0 ] unsigned char 
 13131 ;;  ff2             4    4[BANK0 ] unsigned char 
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;		None
 13134 ;; Return value:  Size  Location     Type
 13135 ;;		None               void
 13136 ;; Registers used:
 13137 ;;		wreg, status,2, status,0
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13143 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13145 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13146 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13147 ;;Total ram usage:       12 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:    5
 13150 ;; This function calls:
 13151 ;;		Nothing
 13152 ;; This function is called by:
 13153 ;;		_efgtoa
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text27
 13158  005BD4                     __ptext27:
 13159                           	opt callstack 0
 13160  005BD4                     ___fleq:
 13161                           	opt callstack 20
 13162  005BD4  0E00               	movlw	0
 13163  005BD6  0100               	movlb	0	; () banked
 13164  005BD8  1560               	andwf	___fleq@ff1& (0+255),w,b
 13165  005BDA  6F68               	movwf	??___fleq& (0+255),b
 13166  005BDC  0E00               	movlw	0
 13167  005BDE  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
 13168  005BE0  6F69               	movwf	(??___fleq+1)& (0+255),b
 13169  005BE2  0E80               	movlw	128
 13170  005BE4  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
 13171  005BE6  6F6A               	movwf	(??___fleq+2)& (0+255),b
 13172  005BE8  0E7F               	movlw	127
 13173  005BEA  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
 13174  005BEC  6F6B               	movwf	(??___fleq+3)& (0+255),b
 13175  005BEE  5168               	movf	??___fleq& (0+255),w,b
 13176  005BF0  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 13177  005BF2  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 13178  005BF4  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 13179  005BF6  A4D8               	btfss	status,2,c
 13180  005BF8  EF00  F02E         	goto	u10561
 13181  005BFC  EF02  F02E         	goto	u10560
 13182  005C00                     u10561:
 13183  005C00  EF0A  F02E         	goto	l8465
 13184  005C04                     u10560:
 13185  005C04                     
 13186                           ; BSR set to: 0
 13187  005C04  0E00               	movlw	0
 13188  005C06  6F60               	movwf	___fleq@ff1& (0+255),b
 13189  005C08  0E00               	movlw	0
 13190  005C0A  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
 13191  005C0C  0E00               	movlw	0
 13192  005C0E  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
 13193  005C10  0E00               	movlw	0
 13194  005C12  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
 13195  005C14                     l8465:
 13196                           
 13197                           ; BSR set to: 0
 13198  005C14  0E00               	movlw	0
 13199  005C16  1564               	andwf	___fleq@ff2& (0+255),w,b
 13200  005C18  6F68               	movwf	??___fleq& (0+255),b
 13201  005C1A  0E00               	movlw	0
 13202  005C1C  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
 13203  005C1E  6F69               	movwf	(??___fleq+1)& (0+255),b
 13204  005C20  0E80               	movlw	128
 13205  005C22  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
 13206  005C24  6F6A               	movwf	(??___fleq+2)& (0+255),b
 13207  005C26  0E7F               	movlw	127
 13208  005C28  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
 13209  005C2A  6F6B               	movwf	(??___fleq+3)& (0+255),b
 13210  005C2C  5168               	movf	??___fleq& (0+255),w,b
 13211  005C2E  1169               	iorwf	(??___fleq+1)& (0+255),w,b
 13212  005C30  116A               	iorwf	(??___fleq+2)& (0+255),w,b
 13213  005C32  116B               	iorwf	(??___fleq+3)& (0+255),w,b
 13214  005C34  A4D8               	btfss	status,2,c
 13215  005C36  EF1F  F02E         	goto	u10571
 13216  005C3A  EF21  F02E         	goto	u10570
 13217  005C3E                     u10571:
 13218  005C3E  EF29  F02E         	goto	l8469
 13219  005C42                     u10570:
 13220  005C42                     
 13221                           ; BSR set to: 0
 13222  005C42  0E00               	movlw	0
 13223  005C44  6F64               	movwf	___fleq@ff2& (0+255),b
 13224  005C46  0E00               	movlw	0
 13225  005C48  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
 13226  005C4A  0E00               	movlw	0
 13227  005C4C  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
 13228  005C4E  0E00               	movlw	0
 13229  005C50  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
 13230  005C52                     l8469:
 13231                           
 13232                           ; BSR set to: 0
 13233  005C52  5164               	movf	___fleq@ff2& (0+255),w,b
 13234  005C54  1960               	xorwf	___fleq@ff1& (0+255),w,b
 13235  005C56  E10F               	bnz	u10580
 13236  005C58  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
 13237  005C5A  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 13238  005C5C  E10C               	bnz	u10580
 13239  005C5E  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
 13240  005C60  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 13241  005C62  E109               	bnz	u10580
 13242  005C64  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
 13243  005C66  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 13244  005C68  B4D8               	btfsc	status,2,c
 13245  005C6A  EF39  F02E         	goto	u10581
 13246  005C6E  EF3B  F02E         	goto	u10580
 13247  005C72                     u10581:
 13248  005C72  EF3E  F02E         	goto	l8473
 13249  005C76                     u10580:
 13250  005C76                     
 13251                           ; BSR set to: 0
 13252  005C76  90D8               	bcf	status,0,c
 13253  005C78  EF3F  F02E         	goto	l1153
 13254  005C7C                     l8473:
 13255                           
 13256                           ; BSR set to: 0
 13257  005C7C  80D8               	bsf	status,0,c
 13258  005C7E                     l1153:
 13259                           
 13260                           ; BSR set to: 0
 13261  005C7E  0012               	return		;funcret
 13262  005C80                     __end_of___fleq:
 13263                           	opt callstack 0
 13264                           
 13265 ;; *************** function ___fldiv *****************
 13266 ;; Defined at:
 13267 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 13268 ;; Parameters:    Size  Location     Type
 13269 ;;  b               4    0[BANK0 ] unsigned char 
 13270 ;;  a               4    4[BANK0 ] unsigned char 
 13271 ;; Auto vars:     Size  Location     Type
 13272 ;;  grs             4   19[BANK0 ] unsigned long 
 13273 ;;  rem             4   12[BANK0 ] unsigned long 
 13274 ;;  new_exp         2   17[BANK0 ] short 
 13275 ;;  aexp            1   24[BANK0 ] unsigned char 
 13276 ;;  bexp            1   23[BANK0 ] unsigned char 
 13277 ;;  sign            1   16[BANK0 ] unsigned char 
 13278 ;; Return value:  Size  Location     Type
 13279 ;;                  4    0[BANK0 ] unsigned char 
 13280 ;; Registers used:
 13281 ;;		wreg, status,2, status,0
 13282 ;; Tracked objects:
 13283 ;;		On entry : 0/0
 13284 ;;		On exit  : 0/0
 13285 ;;		Unchanged: 0/0
 13286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13287 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13288 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13289 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13290 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13291 ;;Total ram usage:       25 bytes
 13292 ;; Hardware stack levels used:    1
 13293 ;; Hardware stack levels required when called:    5
 13294 ;; This function calls:
 13295 ;;		Nothing
 13296 ;; This function is called by:
 13297 ;;		_efgtoa
 13298 ;; This function uses a non-reentrant model
 13299 ;;
 13300                           
 13301                           	psect	text28
 13302  0032EC                     __ptext28:
 13303                           	opt callstack 0
 13304  0032EC                     ___fldiv:
 13305                           	opt callstack 20
 13306  0032EC  0100               	movlb	0	; () banked
 13307  0032EE  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 13308  0032F0  0B80               	andlw	128
 13309  0032F2  6F70               	movwf	___fldiv@sign& (0+255),b
 13310  0032F4  5163               	movf	(___fldiv@b+3)& (0+255),w,b
 13311  0032F6  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
 13312  0032F8  6F77               	movwf	___fldiv@bexp& (0+255),b
 13313  0032FA                     
 13314                           ; BSR set to: 0
 13315  0032FA  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
 13316  0032FC  EF82  F019         	goto	u10021
 13317  003300  EF84  F019         	goto	u10020
 13318  003304                     u10021:
 13319  003304  EF85  F019         	goto	l8113
 13320  003308                     u10020:
 13321  003308                     
 13322                           ; BSR set to: 0
 13323  003308  8177               	bsf	___fldiv@bexp& (0+255),0,b
 13324  00330A                     l8113:
 13325                           
 13326                           ; BSR set to: 0
 13327  00330A  5177               	movf	___fldiv@bexp& (0+255),w,b
 13328  00330C  B4D8               	btfsc	status,2,c
 13329  00330E  EF8B  F019         	goto	u10031
 13330  003312  EF8D  F019         	goto	u10030
 13331  003316                     u10031:
 13332  003316  EFA2  F019         	goto	l8123
 13333  00331A                     u10030:
 13334  00331A                     
 13335                           ; BSR set to: 0
 13336  00331A  2977               	incf	___fldiv@bexp& (0+255),w,b
 13337  00331C  A4D8               	btfss	status,2,c
 13338  00331E  EF93  F019         	goto	u10041
 13339  003322  EF95  F019         	goto	u10040
 13340  003326                     u10041:
 13341  003326  EF9D  F019         	goto	l8119
 13342  00332A                     u10040:
 13343  00332A                     
 13344                           ; BSR set to: 0
 13345  00332A  0E00               	movlw	0
 13346  00332C  6F60               	movwf	___fldiv@b& (0+255),b
 13347  00332E  0E00               	movlw	0
 13348  003330  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 13349  003332  0E00               	movlw	0
 13350  003334  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 13351  003336  0E00               	movlw	0
 13352  003338  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13353  00333A                     l8119:
 13354                           
 13355                           ; BSR set to: 0
 13356  00333A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 13357  00333C                     
 13358                           ; BSR set to: 0
 13359  00333C  0E00               	movlw	0
 13360  00333E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13361  003340  EFAA  F019         	goto	l8125
 13362  003344                     l8123:
 13363                           
 13364                           ; BSR set to: 0
 13365  003344  0E00               	movlw	0
 13366  003346  6F60               	movwf	___fldiv@b& (0+255),b
 13367  003348  0E00               	movlw	0
 13368  00334A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 13369  00334C  0E00               	movlw	0
 13370  00334E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 13371  003350  0E00               	movlw	0
 13372  003352  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13373  003354                     l8125:
 13374                           
 13375                           ; BSR set to: 0
 13376  003354  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 13377  003356  0B80               	andlw	128
 13378  003358  1B70               	xorwf	___fldiv@sign& (0+255),f,b
 13379  00335A                     
 13380                           ; BSR set to: 0
 13381  00335A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 13382  00335C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
 13383  00335E  6F78               	movwf	___fldiv@aexp& (0+255),b
 13384  003360                     
 13385                           ; BSR set to: 0
 13386  003360  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
 13387  003362  EFB5  F019         	goto	u10051
 13388  003366  EFB7  F019         	goto	u10050
 13389  00336A                     u10051:
 13390  00336A  EFB8  F019         	goto	l8133
 13391  00336E                     u10050:
 13392  00336E                     
 13393                           ; BSR set to: 0
 13394  00336E  8178               	bsf	___fldiv@aexp& (0+255),0,b
 13395  003370                     l8133:
 13396                           
 13397                           ; BSR set to: 0
 13398  003370  5178               	movf	___fldiv@aexp& (0+255),w,b
 13399  003372  B4D8               	btfsc	status,2,c
 13400  003374  EFBE  F019         	goto	u10061
 13401  003378  EFC0  F019         	goto	u10060
 13402  00337C                     u10061:
 13403  00337C  EFD5  F019         	goto	l8143
 13404  003380                     u10060:
 13405  003380                     
 13406                           ; BSR set to: 0
 13407  003380  2978               	incf	___fldiv@aexp& (0+255),w,b
 13408  003382  A4D8               	btfss	status,2,c
 13409  003384  EFC6  F019         	goto	u10071
 13410  003388  EFC8  F019         	goto	u10070
 13411  00338C                     u10071:
 13412  00338C  EFD0  F019         	goto	l8139
 13413  003390                     u10070:
 13414  003390                     
 13415                           ; BSR set to: 0
 13416  003390  0E00               	movlw	0
 13417  003392  6F64               	movwf	___fldiv@a& (0+255),b
 13418  003394  0E00               	movlw	0
 13419  003396  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 13420  003398  0E00               	movlw	0
 13421  00339A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 13422  00339C  0E00               	movlw	0
 13423  00339E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 13424  0033A0                     l8139:
 13425                           
 13426                           ; BSR set to: 0
 13427  0033A0  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
 13428  0033A2                     
 13429                           ; BSR set to: 0
 13430  0033A2  0E00               	movlw	0
 13431  0033A4  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 13432  0033A6  EFDD  F019         	goto	l8145
 13433  0033AA                     l8143:
 13434                           
 13435                           ; BSR set to: 0
 13436  0033AA  0E00               	movlw	0
 13437  0033AC  6F64               	movwf	___fldiv@a& (0+255),b
 13438  0033AE  0E00               	movlw	0
 13439  0033B0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
 13440  0033B2  0E00               	movlw	0
 13441  0033B4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
 13442  0033B6  0E00               	movlw	0
 13443  0033B8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
 13444  0033BA                     l8145:
 13445                           
 13446                           ; BSR set to: 0
 13447  0033BA  5164               	movf	___fldiv@a& (0+255),w,b
 13448  0033BC  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13449  0033BE  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13450  0033C0  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13451  0033C2  A4D8               	btfss	status,2,c
 13452  0033C4  EFE6  F019         	goto	u10081
 13453  0033C8  EFE8  F019         	goto	u10080
 13454  0033CC                     u10081:
 13455  0033CC  EF00  F01A         	goto	l8157
 13456  0033D0                     u10080:
 13457  0033D0                     
 13458                           ; BSR set to: 0
 13459  0033D0  0E00               	movlw	0
 13460  0033D2  6F60               	movwf	___fldiv@b& (0+255),b
 13461  0033D4  0E00               	movlw	0
 13462  0033D6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 13463  0033D8  0E00               	movlw	0
 13464  0033DA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 13465  0033DC  0E00               	movlw	0
 13466  0033DE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13467  0033E0                     
 13468                           ; BSR set to: 0
 13469  0033E0  0E80               	movlw	128
 13470  0033E2  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13471  0033E4  0E7F               	movlw	127
 13472  0033E6  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13473  0033E8                     l8151:
 13474                           
 13475                           ; BSR set to: 0
 13476  0033E8  5170               	movf	___fldiv@sign& (0+255),w,b
 13477  0033EA  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13478  0033EC                     
 13479                           ; BSR set to: 0
 13480  0033EC  C060  F060         	movff	___fldiv@b,?___fldiv
 13481  0033F0  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
 13482  0033F4  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
 13483  0033F8  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
 13484  0033FC  EF43  F01B         	goto	l1476
 13485  003400                     l8157:
 13486                           
 13487                           ; BSR set to: 0
 13488  003400  5177               	movf	___fldiv@bexp& (0+255),w,b
 13489  003402  A4D8               	btfss	status,2,c
 13490  003404  EF06  F01A         	goto	u10091
 13491  003408  EF08  F01A         	goto	u10090
 13492  00340C                     u10091:
 13493  00340C  EF12  F01A         	goto	l8165
 13494  003410                     u10090:
 13495  003410                     
 13496                           ; BSR set to: 0
 13497  003410  0E00               	movlw	0
 13498  003412  6F60               	movwf	?___fldiv& (0+255),b
 13499  003414  0E00               	movlw	0
 13500  003416  6F61               	movwf	(?___fldiv+1)& (0+255),b
 13501  003418  0E00               	movlw	0
 13502  00341A  6F62               	movwf	(?___fldiv+2)& (0+255),b
 13503  00341C  0E00               	movlw	0
 13504  00341E  6F63               	movwf	(?___fldiv+3)& (0+255),b
 13505  003420  EF43  F01B         	goto	l1476
 13506  003424                     l8165:
 13507                           
 13508                           ; BSR set to: 0
 13509  003424  5178               	movf	___fldiv@aexp& (0+255),w,b
 13510  003426  C077  F068         	movff	___fldiv@bexp,??___fldiv
 13511  00342A  6B69               	clrf	(??___fldiv+1)& (0+255),b
 13512  00342C  5F68               	subwf	??___fldiv& (0+255),f,b
 13513  00342E  0E00               	movlw	0
 13514  003430  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
 13515  003432  0E7F               	movlw	127
 13516  003434  2568               	addwf	??___fldiv& (0+255),w,b
 13517  003436  6F71               	movwf	___fldiv@new_exp& (0+255),b
 13518  003438  0E00               	movlw	0
 13519  00343A  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
 13520  00343C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13521  00343E                     
 13522                           ; BSR set to: 0
 13523  00343E  C060  F06C         	movff	___fldiv@b,___fldiv@rem
 13524  003442  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
 13525  003446  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
 13526  00344A  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
 13527  00344E                     
 13528                           ; BSR set to: 0
 13529  00344E  0E00               	movlw	0
 13530  003450  6F60               	movwf	___fldiv@b& (0+255),b
 13531  003452  0E00               	movlw	0
 13532  003454  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 13533  003456  0E00               	movlw	0
 13534  003458  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 13535  00345A  0E00               	movlw	0
 13536  00345C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13537  00345E                     
 13538                           ; BSR set to: 0
 13539  00345E  0E00               	movlw	0
 13540  003460  6F73               	movwf	___fldiv@grs& (0+255),b
 13541  003462  0E00               	movlw	0
 13542  003464  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
 13543  003466  0E00               	movlw	0
 13544  003468  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
 13545  00346A  0E00               	movlw	0
 13546  00346C  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
 13547  00346E                     
 13548                           ; BSR set to: 0
 13549  00346E  0E00               	movlw	0
 13550  003470  6F78               	movwf	___fldiv@aexp& (0+255),b
 13551  003472  EF73  F01A         	goto	l1478
 13552  003476                     l8175:
 13553                           
 13554                           ; BSR set to: 0
 13555  003476  5178               	movf	___fldiv@aexp& (0+255),w,b
 13556  003478  B4D8               	btfsc	status,2,c
 13557  00347A  EF41  F01A         	goto	u10101
 13558  00347E  EF43  F01A         	goto	u10100
 13559  003482                     u10101:
 13560  003482  EF5A  F01A         	goto	l8183
 13561  003486                     u10100:
 13562  003486                     
 13563                           ; BSR set to: 0
 13564  003486  90D8               	bcf	status,0,c
 13565  003488  376C               	rlcf	___fldiv@rem& (0+255),f,b
 13566  00348A  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13567  00348C  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13568  00348E  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13569  003490  90D8               	bcf	status,0,c
 13570  003492  3760               	rlcf	___fldiv@b& (0+255),f,b
 13571  003494  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13572  003496  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13573  003498  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13574  00349A                     
 13575                           ; BSR set to: 0
 13576  00349A  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13577  00349C  EF52  F01A         	goto	u10111
 13578  0034A0  EF54  F01A         	goto	u10110
 13579  0034A4                     u10111:
 13580  0034A4  EF55  F01A         	goto	l1481
 13581  0034A8                     u10110:
 13582  0034A8                     
 13583                           ; BSR set to: 0
 13584  0034A8  8160               	bsf	___fldiv@b& (0+255),0,b
 13585  0034AA                     l1481:
 13586                           
 13587                           ; BSR set to: 0
 13588  0034AA  90D8               	bcf	status,0,c
 13589  0034AC  3773               	rlcf	___fldiv@grs& (0+255),f,b
 13590  0034AE  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13591  0034B0  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13592  0034B2  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13593  0034B4                     l8183:
 13594                           
 13595                           ; BSR set to: 0
 13596  0034B4  5164               	movf	___fldiv@a& (0+255),w,b
 13597  0034B6  5D6C               	subwf	___fldiv@rem& (0+255),w,b
 13598  0034B8  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 13599  0034BA  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13600  0034BC  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 13601  0034BE  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13602  0034C0  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 13603  0034C2  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13604  0034C4  A0D8               	btfss	status,0,c
 13605  0034C6  EF67  F01A         	goto	u10121
 13606  0034CA  EF69  F01A         	goto	u10120
 13607  0034CE                     u10121:
 13608  0034CE  EF72  F01A         	goto	l8189
 13609  0034D2                     u10120:
 13610  0034D2                     
 13611                           ; BSR set to: 0
 13612  0034D2  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13613  0034D4                     
 13614                           ; BSR set to: 0
 13615  0034D4  5164               	movf	___fldiv@a& (0+255),w,b
 13616  0034D6  5F6C               	subwf	___fldiv@rem& (0+255),f,b
 13617  0034D8  5165               	movf	(___fldiv@a+1)& (0+255),w,b
 13618  0034DA  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13619  0034DC  5166               	movf	(___fldiv@a+2)& (0+255),w,b
 13620  0034DE  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13621  0034E0  5167               	movf	(___fldiv@a+3)& (0+255),w,b
 13622  0034E2  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13623  0034E4                     l8189:
 13624                           
 13625                           ; BSR set to: 0
 13626  0034E4  2B78               	incf	___fldiv@aexp& (0+255),f,b
 13627  0034E6                     l1478:
 13628                           
 13629                           ; BSR set to: 0
 13630  0034E6  0E19               	movlw	25
 13631  0034E8  6578               	cpfsgt	___fldiv@aexp& (0+255),b
 13632  0034EA  EF79  F01A         	goto	u10131
 13633  0034EE  EF7B  F01A         	goto	u10130
 13634  0034F2                     u10131:
 13635  0034F2  EF3B  F01A         	goto	l8175
 13636  0034F6                     u10130:
 13637  0034F6                     
 13638                           ; BSR set to: 0
 13639  0034F6  516C               	movf	___fldiv@rem& (0+255),w,b
 13640  0034F8  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13641  0034FA  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13642  0034FC  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13643  0034FE  B4D8               	btfsc	status,2,c
 13644  003500  EF84  F01A         	goto	u10141
 13645  003504  EF86  F01A         	goto	u10140
 13646  003508                     u10141:
 13647  003508  EF9E  F01A         	goto	l8201
 13648  00350C                     u10140:
 13649  00350C                     
 13650                           ; BSR set to: 0
 13651  00350C  8173               	bsf	___fldiv@grs& (0+255),0,b
 13652  00350E  EF9E  F01A         	goto	l8201
 13653  003512                     l8195:
 13654                           
 13655                           ; BSR set to: 0
 13656  003512  90D8               	bcf	status,0,c
 13657  003514  3760               	rlcf	___fldiv@b& (0+255),f,b
 13658  003516  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13659  003518  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13660  00351A  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13661  00351C                     
 13662                           ; BSR set to: 0
 13663  00351C  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13664  00351E  EF93  F01A         	goto	u10151
 13665  003522  EF95  F01A         	goto	u10150
 13666  003526                     u10151:
 13667  003526  EF96  F01A         	goto	l1487
 13668  00352A                     u10150:
 13669  00352A                     
 13670                           ; BSR set to: 0
 13671  00352A  8160               	bsf	___fldiv@b& (0+255),0,b
 13672  00352C                     l1487:
 13673                           
 13674                           ; BSR set to: 0
 13675  00352C  90D8               	bcf	status,0,c
 13676  00352E  3773               	rlcf	___fldiv@grs& (0+255),f,b
 13677  003530  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13678  003532  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13679  003534  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13680  003536  0771               	decf	___fldiv@new_exp& (0+255),f,b
 13681  003538  A0D8               	btfss	status,0,c
 13682  00353A  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13683  00353C                     l8201:
 13684                           
 13685                           ; BSR set to: 0
 13686  00353C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
 13687  00353E  EFA3  F01A         	goto	u10161
 13688  003542  EFA5  F01A         	goto	u10160
 13689  003546                     u10161:
 13690  003546  EF89  F01A         	goto	l8195
 13691  00354A                     u10160:
 13692  00354A                     
 13693                           ; BSR set to: 0
 13694  00354A  0E00               	movlw	0
 13695  00354C  6F78               	movwf	___fldiv@aexp& (0+255),b
 13696  00354E                     
 13697                           ; BSR set to: 0
 13698  00354E  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13699  003550  EFAC  F01A         	goto	u10171
 13700  003554  EFAE  F01A         	goto	u10170
 13701  003558                     u10171:
 13702  003558  EFD2  F01A         	goto	l1489
 13703  00355C                     u10170:
 13704  00355C                     
 13705                           ; BSR set to: 0
 13706  00355C  0EFF               	movlw	255
 13707  00355E  1573               	andwf	___fldiv@grs& (0+255),w,b
 13708  003560  6F68               	movwf	??___fldiv& (0+255),b
 13709  003562  0EFF               	movlw	255
 13710  003564  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13711  003566  6F69               	movwf	(??___fldiv+1)& (0+255),b
 13712  003568  0EFF               	movlw	255
 13713  00356A  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13714  00356C  6F6A               	movwf	(??___fldiv+2)& (0+255),b
 13715  00356E  0E7F               	movlw	127
 13716  003570  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13717  003572  6F6B               	movwf	(??___fldiv+3)& (0+255),b
 13718  003574  5168               	movf	??___fldiv& (0+255),w,b
 13719  003576  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
 13720  003578  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
 13721  00357A  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
 13722  00357C  B4D8               	btfsc	status,2,c
 13723  00357E  EFC3  F01A         	goto	u10181
 13724  003582  EFC5  F01A         	goto	u10180
 13725  003586                     u10181:
 13726  003586  EFC9  F01A         	goto	l1490
 13727  00358A                     u10180:
 13728  00358A                     l8209:
 13729                           
 13730                           ; BSR set to: 0
 13731  00358A  0E01               	movlw	1
 13732  00358C  6F78               	movwf	___fldiv@aexp& (0+255),b
 13733  00358E  EFD2  F01A         	goto	l1489
 13734  003592                     l1490:
 13735                           
 13736                           ; BSR set to: 0
 13737  003592  A160               	btfss	___fldiv@b& (0+255),0,b
 13738  003594  EFCE  F01A         	goto	u10191
 13739  003598  EFD0  F01A         	goto	u10190
 13740  00359C                     u10191:
 13741  00359C  EFD2  F01A         	goto	l1489
 13742  0035A0                     u10190:
 13743  0035A0  EFC5  F01A         	goto	l8209
 13744  0035A4                     l1489:
 13745                           
 13746                           ; BSR set to: 0
 13747  0035A4  5178               	movf	___fldiv@aexp& (0+255),w,b
 13748  0035A6  B4D8               	btfsc	status,2,c
 13749  0035A8  EFD8  F01A         	goto	u10201
 13750  0035AC  EFDA  F01A         	goto	u10200
 13751  0035B0                     u10201:
 13752  0035B0  EFFE  F01A         	goto	l8221
 13753  0035B4                     u10200:
 13754  0035B4                     
 13755                           ; BSR set to: 0
 13756  0035B4  0E01               	movlw	1
 13757  0035B6  2760               	addwf	___fldiv@b& (0+255),f,b
 13758  0035B8  0E00               	movlw	0
 13759  0035BA  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13760  0035BC  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13761  0035BE  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13762  0035C0                     
 13763                           ; BSR set to: 0
 13764  0035C0  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
 13765  0035C2  EFE5  F01A         	goto	u10211
 13766  0035C6  EFE7  F01A         	goto	u10210
 13767  0035CA                     u10211:
 13768  0035CA  EFFE  F01A         	goto	l8221
 13769  0035CE                     u10210:
 13770  0035CE                     
 13771                           ; BSR set to: 0
 13772  0035CE  C060  F068         	movff	___fldiv@b,??___fldiv
 13773  0035D2  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
 13774  0035D6  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
 13775  0035DA  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
 13776  0035DE  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
 13777  0035E0  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
 13778  0035E2  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
 13779  0035E4  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
 13780  0035E6  3368               	rrcf	??___fldiv& (0+255),f,b
 13781  0035E8  C068  F060         	movff	??___fldiv,___fldiv@b
 13782  0035EC  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
 13783  0035F0  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
 13784  0035F4  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
 13785  0035F8                     
 13786                           ; BSR set to: 0
 13787  0035F8  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
 13788  0035FA  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13789  0035FC                     l8221:
 13790                           
 13791                           ; BSR set to: 0
 13792  0035FC  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13793  0035FE  EF09  F01B         	goto	u10221
 13794  003602  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13795  003604  E108               	bnz	u10220
 13796  003606  2971               	incf	___fldiv@new_exp& (0+255),w,b
 13797  003608  A0D8               	btfss	status,0,c
 13798  00360A  EF09  F01B         	goto	u10221
 13799  00360E  EF0B  F01B         	goto	u10220
 13800  003612                     u10221:
 13801  003612  EF16  F01B         	goto	l8225
 13802  003616                     u10220:
 13803  003616                     
 13804                           ; BSR set to: 0
 13805  003616  0E00               	movlw	0
 13806  003618  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13807  00361A  6971               	setf	___fldiv@new_exp& (0+255),b
 13808  00361C  0E00               	movlw	0
 13809  00361E  6F60               	movwf	___fldiv@b& (0+255),b
 13810  003620  0E00               	movlw	0
 13811  003622  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 13812  003624  0E00               	movlw	0
 13813  003626  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 13814  003628  0E00               	movlw	0
 13815  00362A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13816  00362C                     l8225:
 13817                           
 13818                           ; BSR set to: 0
 13819  00362C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13820  00362E  EF23  F01B         	goto	u10230
 13821  003632  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13822  003634  E106               	bnz	u10231
 13823  003636  0571               	decf	___fldiv@new_exp& (0+255),w,b
 13824  003638  B0D8               	btfsc	status,0,c
 13825  00363A  EF21  F01B         	goto	u10231
 13826  00363E  EF23  F01B         	goto	u10230
 13827  003642                     u10231:
 13828  003642  EF31  F01B         	goto	l8229
 13829  003646                     u10230:
 13830  003646                     
 13831                           ; BSR set to: 0
 13832  003646  0E00               	movlw	0
 13833  003648  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13834  00364A  0E00               	movlw	0
 13835  00364C  6F71               	movwf	___fldiv@new_exp& (0+255),b
 13836  00364E  0E00               	movlw	0
 13837  003650  6F60               	movwf	___fldiv@b& (0+255),b
 13838  003652  0E00               	movlw	0
 13839  003654  6F61               	movwf	(___fldiv@b+1)& (0+255),b
 13840  003656  0E00               	movlw	0
 13841  003658  6F62               	movwf	(___fldiv@b+2)& (0+255),b
 13842  00365A  0E00               	movlw	0
 13843  00365C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13844  00365E  0E00               	movlw	0
 13845  003660  6F70               	movwf	___fldiv@sign& (0+255),b
 13846  003662                     l8229:
 13847                           
 13848                           ; BSR set to: 0
 13849  003662  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
 13850  003666                     
 13851                           ; BSR set to: 0
 13852  003666  A177               	btfss	___fldiv@bexp& (0+255),0,b
 13853  003668  EF38  F01B         	goto	u10241
 13854  00366C  EF3A  F01B         	goto	u10240
 13855  003670                     u10241:
 13856  003670  EF3D  F01B         	goto	l8235
 13857  003674                     u10240:
 13858  003674                     
 13859                           ; BSR set to: 0
 13860  003674  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
 13861  003676  EF3E  F01B         	goto	l8237
 13862  00367A                     l8235:
 13863                           
 13864                           ; BSR set to: 0
 13865  00367A  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
 13866  00367C                     l8237:
 13867                           
 13868                           ; BSR set to: 0
 13869  00367C  90D8               	bcf	status,0,c
 13870  00367E  3177               	rrcf	___fldiv@bexp& (0+255),w,b
 13871  003680  6F63               	movwf	(___fldiv@b+3)& (0+255),b
 13872  003682  EFF4  F019         	goto	l8151
 13873  003686                     l1476:
 13874                           
 13875                           ; BSR set to: 0
 13876  003686  0012               	return		;funcret
 13877  003688                     __end_of___fldiv:
 13878                           	opt callstack 0
 13879                           
 13880 ;; *************** function ___awmod *****************
 13881 ;; Defined at:
 13882 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 13883 ;; Parameters:    Size  Location     Type
 13884 ;;  dividend        2    0[BANK0 ] int 
 13885 ;;  divisor         2    2[BANK0 ] int 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;  sign            1    5[BANK0 ] unsigned char 
 13888 ;;  counter         1    4[BANK0 ] unsigned char 
 13889 ;; Return value:  Size  Location     Type
 13890 ;;                  2    0[BANK0 ] int 
 13891 ;; Registers used:
 13892 ;;		wreg, status,2, status,0
 13893 ;; Tracked objects:
 13894 ;;		On entry : 0/0
 13895 ;;		On exit  : 0/0
 13896 ;;		Unchanged: 0/0
 13897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13898 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13902 ;;Total ram usage:        6 bytes
 13903 ;; Hardware stack levels used:    1
 13904 ;; Hardware stack levels required when called:    5
 13905 ;; This function calls:
 13906 ;;		Nothing
 13907 ;; This function is called by:
 13908 ;;		_efgtoa
 13909 ;; This function uses a non-reentrant model
 13910 ;;
 13911                           
 13912                           	psect	text29
 13913  005B22                     __ptext29:
 13914                           	opt callstack 0
 13915  005B22                     ___awmod:
 13916                           	opt callstack 20
 13917  005B22  0E00               	movlw	0
 13918  005B24  0100               	movlb	0	; () banked
 13919  005B26  6F65               	movwf	___awmod@sign& (0+255),b
 13920  005B28                     
 13921                           ; BSR set to: 0
 13922  005B28  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
 13923  005B2A  EF9B  F02D         	goto	u10500
 13924  005B2E  EF99  F02D         	goto	u10501
 13925  005B32                     u10501:
 13926  005B32  EFA1  F02D         	goto	l8433
 13927  005B36                     u10500:
 13928  005B36                     
 13929                           ; BSR set to: 0
 13930  005B36  6D60               	negf	___awmod@dividend& (0+255),b
 13931  005B38  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 13932  005B3A  B0D8               	btfsc	status,0,c
 13933  005B3C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 13934  005B3E                     
 13935                           ; BSR set to: 0
 13936  005B3E  0E01               	movlw	1
 13937  005B40  6F65               	movwf	___awmod@sign& (0+255),b
 13938  005B42                     l8433:
 13939                           
 13940                           ; BSR set to: 0
 13941  005B42  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 13942  005B44  EFA8  F02D         	goto	u10510
 13943  005B48  EFA6  F02D         	goto	u10511
 13944  005B4C                     u10511:
 13945  005B4C  EFAC  F02D         	goto	l8437
 13946  005B50                     u10510:
 13947  005B50                     
 13948                           ; BSR set to: 0
 13949  005B50  6D62               	negf	___awmod@divisor& (0+255),b
 13950  005B52  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 13951  005B54  B0D8               	btfsc	status,0,c
 13952  005B56  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 13953  005B58                     l8437:
 13954                           
 13955                           ; BSR set to: 0
 13956  005B58  5162               	movf	___awmod@divisor& (0+255),w,b
 13957  005B5A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 13958  005B5C  B4D8               	btfsc	status,2,c
 13959  005B5E  EFB3  F02D         	goto	u10521
 13960  005B62  EFB5  F02D         	goto	u10520
 13961  005B66                     u10521:
 13962  005B66  EFD9  F02D         	goto	l8453
 13963  005B6A                     u10520:
 13964  005B6A                     
 13965                           ; BSR set to: 0
 13966  005B6A  0E01               	movlw	1
 13967  005B6C  6F64               	movwf	___awmod@counter& (0+255),b
 13968  005B6E  EFBD  F02D         	goto	l8443
 13969  005B72                     l8441:
 13970                           
 13971                           ; BSR set to: 0
 13972  005B72  90D8               	bcf	status,0,c
 13973  005B74  3762               	rlcf	___awmod@divisor& (0+255),f,b
 13974  005B76  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 13975  005B78  2B64               	incf	___awmod@counter& (0+255),f,b
 13976  005B7A                     l8443:
 13977                           
 13978                           ; BSR set to: 0
 13979  005B7A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 13980  005B7C  EFC2  F02D         	goto	u10531
 13981  005B80  EFC4  F02D         	goto	u10530
 13982  005B84                     u10531:
 13983  005B84  EFB9  F02D         	goto	l8441
 13984  005B88                     u10530:
 13985  005B88                     l8445:
 13986                           
 13987                           ; BSR set to: 0
 13988  005B88  5162               	movf	___awmod@divisor& (0+255),w,b
 13989  005B8A  5D60               	subwf	___awmod@dividend& (0+255),w,b
 13990  005B8C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 13991  005B8E  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 13992  005B90  A0D8               	btfss	status,0,c
 13993  005B92  EFCD  F02D         	goto	u10541
 13994  005B96  EFCF  F02D         	goto	u10540
 13995  005B9A                     u10541:
 13996  005B9A  EFD3  F02D         	goto	l8449
 13997  005B9E                     u10540:
 13998  005B9E                     
 13999                           ; BSR set to: 0
 14000  005B9E  5162               	movf	___awmod@divisor& (0+255),w,b
 14001  005BA0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 14002  005BA2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 14003  005BA4  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 14004  005BA6                     l8449:
 14005                           
 14006                           ; BSR set to: 0
 14007  005BA6  90D8               	bcf	status,0,c
 14008  005BA8  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 14009  005BAA  3362               	rrcf	___awmod@divisor& (0+255),f,b
 14010  005BAC                     
 14011                           ; BSR set to: 0
 14012  005BAC  2F64               	decfsz	___awmod@counter& (0+255),f,b
 14013  005BAE  EFC4  F02D         	goto	l8445
 14014  005BB2                     l8453:
 14015                           
 14016                           ; BSR set to: 0
 14017  005BB2  5165               	movf	___awmod@sign& (0+255),w,b
 14018  005BB4  B4D8               	btfsc	status,2,c
 14019  005BB6  EFDF  F02D         	goto	u10551
 14020  005BBA  EFE1  F02D         	goto	u10550
 14021  005BBE                     u10551:
 14022  005BBE  EFE5  F02D         	goto	l8457
 14023  005BC2                     u10550:
 14024  005BC2                     
 14025                           ; BSR set to: 0
 14026  005BC2  6D60               	negf	___awmod@dividend& (0+255),b
 14027  005BC4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 14028  005BC6  B0D8               	btfsc	status,0,c
 14029  005BC8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 14030  005BCA                     l8457:
 14031                           
 14032                           ; BSR set to: 0
 14033  005BCA  C060  F060         	movff	___awmod@dividend,?___awmod
 14034  005BCE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 14035  005BD2                     
 14036                           ; BSR set to: 0
 14037  005BD2  0012               	return		;funcret
 14038  005BD4                     __end_of___awmod:
 14039                           	opt callstack 0
 14040                           
 14041 ;; *************** function ___awdiv *****************
 14042 ;; Defined at:
 14043 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 14044 ;; Parameters:    Size  Location     Type
 14045 ;;  dividend        2    0[BANK0 ] int 
 14046 ;;  divisor         2    2[BANK0 ] int 
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;  quotient        2    6[BANK0 ] int 
 14049 ;;  sign            1    5[BANK0 ] unsigned char 
 14050 ;;  counter         1    4[BANK0 ] unsigned char 
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  2    0[BANK0 ] int 
 14053 ;; Registers used:
 14054 ;;		wreg, status,2, status,0
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14061 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;Total ram usage:        8 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:    5
 14067 ;; This function calls:
 14068 ;;		Nothing
 14069 ;; This function is called by:
 14070 ;;		_efgtoa
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text30
 14075  0059A8                     __ptext30:
 14076                           	opt callstack 0
 14077  0059A8                     ___awdiv:
 14078                           	opt callstack 20
 14079  0059A8  0E00               	movlw	0
 14080  0059AA  0100               	movlb	0	; () banked
 14081  0059AC  6F65               	movwf	___awdiv@sign& (0+255),b
 14082  0059AE                     
 14083                           ; BSR set to: 0
 14084  0059AE  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 14085  0059B0  EFDE  F02C         	goto	u10440
 14086  0059B4  EFDC  F02C         	goto	u10441
 14087  0059B8                     u10441:
 14088  0059B8  EFE4  F02C         	goto	l8389
 14089  0059BC                     u10440:
 14090  0059BC                     
 14091                           ; BSR set to: 0
 14092  0059BC  6D62               	negf	___awdiv@divisor& (0+255),b
 14093  0059BE  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 14094  0059C0  B0D8               	btfsc	status,0,c
 14095  0059C2  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 14096  0059C4                     
 14097                           ; BSR set to: 0
 14098  0059C4  0E01               	movlw	1
 14099  0059C6  6F65               	movwf	___awdiv@sign& (0+255),b
 14100  0059C8                     l8389:
 14101                           
 14102                           ; BSR set to: 0
 14103  0059C8  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 14104  0059CA  EFEB  F02C         	goto	u10450
 14105  0059CE  EFE9  F02C         	goto	u10451
 14106  0059D2                     u10451:
 14107  0059D2  EFF1  F02C         	goto	l8395
 14108  0059D6                     u10450:
 14109  0059D6                     
 14110                           ; BSR set to: 0
 14111  0059D6  6D60               	negf	___awdiv@dividend& (0+255),b
 14112  0059D8  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 14113  0059DA  B0D8               	btfsc	status,0,c
 14114  0059DC  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 14115  0059DE                     
 14116                           ; BSR set to: 0
 14117  0059DE  0E01               	movlw	1
 14118  0059E0  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 14119  0059E2                     l8395:
 14120                           
 14121                           ; BSR set to: 0
 14122  0059E2  0E00               	movlw	0
 14123  0059E4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 14124  0059E6  0E00               	movlw	0
 14125  0059E8  6F66               	movwf	___awdiv@quotient& (0+255),b
 14126  0059EA                     
 14127                           ; BSR set to: 0
 14128  0059EA  5162               	movf	___awdiv@divisor& (0+255),w,b
 14129  0059EC  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 14130  0059EE  B4D8               	btfsc	status,2,c
 14131  0059F0  EFFC  F02C         	goto	u10461
 14132  0059F4  EFFE  F02C         	goto	u10460
 14133  0059F8                     u10461:
 14134  0059F8  EF26  F02D         	goto	l8417
 14135  0059FC                     u10460:
 14136  0059FC                     
 14137                           ; BSR set to: 0
 14138  0059FC  0E01               	movlw	1
 14139  0059FE  6F64               	movwf	___awdiv@counter& (0+255),b
 14140  005A00  EF06  F02D         	goto	l8403
 14141  005A04                     l8401:
 14142                           
 14143                           ; BSR set to: 0
 14144  005A04  90D8               	bcf	status,0,c
 14145  005A06  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 14146  005A08  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 14147  005A0A  2B64               	incf	___awdiv@counter& (0+255),f,b
 14148  005A0C                     l8403:
 14149                           
 14150                           ; BSR set to: 0
 14151  005A0C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 14152  005A0E  EF0B  F02D         	goto	u10471
 14153  005A12  EF0D  F02D         	goto	u10470
 14154  005A16                     u10471:
 14155  005A16  EF02  F02D         	goto	l8401
 14156  005A1A                     u10470:
 14157  005A1A                     l8405:
 14158                           
 14159                           ; BSR set to: 0
 14160  005A1A  90D8               	bcf	status,0,c
 14161  005A1C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 14162  005A1E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 14163  005A20                     
 14164                           ; BSR set to: 0
 14165  005A20  5162               	movf	___awdiv@divisor& (0+255),w,b
 14166  005A22  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 14167  005A24  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14168  005A26  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 14169  005A28  A0D8               	btfss	status,0,c
 14170  005A2A  EF19  F02D         	goto	u10481
 14171  005A2E  EF1B  F02D         	goto	u10480
 14172  005A32                     u10481:
 14173  005A32  EF20  F02D         	goto	l8413
 14174  005A36                     u10480:
 14175  005A36                     
 14176                           ; BSR set to: 0
 14177  005A36  5162               	movf	___awdiv@divisor& (0+255),w,b
 14178  005A38  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 14179  005A3A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 14180  005A3C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 14181  005A3E                     
 14182                           ; BSR set to: 0
 14183  005A3E  8166               	bsf	___awdiv@quotient& (0+255),0,b
 14184  005A40                     l8413:
 14185                           
 14186                           ; BSR set to: 0
 14187  005A40  90D8               	bcf	status,0,c
 14188  005A42  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 14189  005A44  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 14190  005A46                     
 14191                           ; BSR set to: 0
 14192  005A46  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 14193  005A48  EF0D  F02D         	goto	l8405
 14194  005A4C                     l8417:
 14195                           
 14196                           ; BSR set to: 0
 14197  005A4C  5165               	movf	___awdiv@sign& (0+255),w,b
 14198  005A4E  B4D8               	btfsc	status,2,c
 14199  005A50  EF2C  F02D         	goto	u10491
 14200  005A54  EF2E  F02D         	goto	u10490
 14201  005A58                     u10491:
 14202  005A58  EF32  F02D         	goto	l8421
 14203  005A5C                     u10490:
 14204  005A5C                     
 14205                           ; BSR set to: 0
 14206  005A5C  6D66               	negf	___awdiv@quotient& (0+255),b
 14207  005A5E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 14208  005A60  B0D8               	btfsc	status,0,c
 14209  005A62  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 14210  005A64                     l8421:
 14211                           
 14212                           ; BSR set to: 0
 14213  005A64  C066  F060         	movff	___awdiv@quotient,?___awdiv
 14214  005A68  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 14215  005A6C                     
 14216                           ; BSR set to: 0
 14217  005A6C  0012               	return		;funcret
 14218  005A6E                     __end_of___awdiv:
 14219                           	opt callstack 0
 14220                           
 14221 ;; *************** function _dtoa *****************
 14222 ;; Defined at:
 14223 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
 14226 ;;		 -> vsnprintf@f(6), 
 14227 ;;  d               8   29[BANK0 ] long long 
 14228 ;; Auto vars:     Size  Location     Type
 14229 ;;  n               8   53[BANK0 ] long long 
 14230 ;;  i               2   61[BANK0 ] int 
 14231 ;;  s               2   51[BANK0 ] int 
 14232 ;;  w               2   49[BANK0 ] int 
 14233 ;;  p               2   47[BANK0 ] int 
 14234 ;; Return value:  Size  Location     Type
 14235 ;;                  2   27[BANK0 ] int 
 14236 ;; Registers used:
 14237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14238 ;; Tracked objects:
 14239 ;;		On entry : 0/0
 14240 ;;		On exit  : 0/0
 14241 ;;		Unchanged: 0/0
 14242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14243 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14244 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14245 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14246 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14247 ;;Total ram usage:       36 bytes
 14248 ;; Hardware stack levels used:    1
 14249 ;; Hardware stack levels required when called:    9
 14250 ;; This function calls:
 14251 ;;		___aodiv
 14252 ;;		___aomod
 14253 ;;		_abs
 14254 ;;		_pad
 14255 ;; This function is called by:
 14256 ;;		_vfpfcnvrt
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text31
 14261  003688                     __ptext31:
 14262                           	opt callstack 0
 14263  003688                     _dtoa:
 14264                           	opt callstack 17
 14265  003688                     
 14266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14267  003688  C07D  F095         	movff	dtoa@d,dtoa@n
 14268  00368C  C07E  F096         	movff	dtoa@d+1,dtoa@n+1
 14269  003690  C07F  F097         	movff	dtoa@d+2,dtoa@n+2
 14270  003694  C080  F098         	movff	dtoa@d+3,dtoa@n+3
 14271  003698  C081  F099         	movff	dtoa@d+4,dtoa@n+4
 14272  00369C  C082  F09A         	movff	dtoa@d+5,dtoa@n+5
 14273  0036A0  C083  F09B         	movff	dtoa@d+6,dtoa@n+6
 14274  0036A4  C084  F09C         	movff	dtoa@d+7,dtoa@n+7
 14275  0036A8                     
 14276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 14277  0036A8  0100               	movlb	0	; () banked
 14278  0036AA  BF9C               	btfsc	(dtoa@n+7)& (0+255),7,b
 14279  0036AC  EF5A  F01B         	goto	u10831
 14280  0036B0  EF5D  F01B         	goto	u10830
 14281  0036B4                     u10831:
 14282  0036B4  0E01               	movlw	1
 14283  0036B6  EF5E  F01B         	goto	u10840
 14284  0036BA                     u10830:
 14285  0036BA  0E00               	movlw	0
 14286  0036BC                     u10840:
 14287  0036BC  6F93               	movwf	dtoa@s& (0+255),b
 14288  0036BE  6B94               	clrf	(dtoa@s+1)& (0+255),b
 14289                           
 14290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 14291  0036C0  5193               	movf	dtoa@s& (0+255),w,b
 14292  0036C2  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
 14293  0036C4  B4D8               	btfsc	status,2,c
 14294  0036C6  EF67  F01B         	goto	u10851
 14295  0036CA  EF69  F01B         	goto	u10850
 14296  0036CE                     u10851:
 14297  0036CE  EF79  F01B         	goto	l8629
 14298  0036D2                     u10850:
 14299  0036D2                     
 14300                           ; BSR set to: 0
 14301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14302  0036D2  1F9C               	comf	(dtoa@n+7)& (0+255),f,b
 14303  0036D4  1F9B               	comf	(dtoa@n+6)& (0+255),f,b
 14304  0036D6  1F9A               	comf	(dtoa@n+5)& (0+255),f,b
 14305  0036D8  1F99               	comf	(dtoa@n+4)& (0+255),f,b
 14306  0036DA  1F98               	comf	(dtoa@n+3)& (0+255),f,b
 14307  0036DC  1F97               	comf	(dtoa@n+2)& (0+255),f,b
 14308  0036DE  1F96               	comf	(dtoa@n+1)& (0+255),f,b
 14309  0036E0  6D95               	negf	dtoa@n& (0+255),b
 14310  0036E2  0E00               	movlw	0
 14311  0036E4  2396               	addwfc	(dtoa@n+1)& (0+255),f,b
 14312  0036E6  2397               	addwfc	(dtoa@n+2)& (0+255),f,b
 14313  0036E8  2398               	addwfc	(dtoa@n+3)& (0+255),f,b
 14314  0036EA  2399               	addwfc	(dtoa@n+4)& (0+255),f,b
 14315  0036EC  239A               	addwfc	(dtoa@n+5)& (0+255),f,b
 14316  0036EE  239B               	addwfc	(dtoa@n+6)& (0+255),f,b
 14317  0036F0  239C               	addwfc	(dtoa@n+7)& (0+255),f,b
 14318  0036F2                     l8629:
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14322  0036F2  BFF0               	btfsc	(_prec+1)& (0+255),7,b
 14323  0036F4  EF7E  F01B         	goto	u10861
 14324  0036F8  EF80  F01B         	goto	u10860
 14325  0036FC                     u10861:
 14326  0036FC  EF81  F01B         	goto	l8633
 14327  003700                     u10860:
 14328  003700                     
 14329                           ; BSR set to: 0
 14330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14331  003700  9239               	bcf	_flags^0,1,c
 14332  003702                     l8633:
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14336  003702  BFF0               	btfsc	(_prec+1)& (0+255),7,b
 14337  003704  EF8E  F01B         	goto	u10870
 14338  003708  51F0               	movf	(_prec+1)& (0+255),w,b
 14339  00370A  E106               	bnz	u10871
 14340  00370C  05EF               	decf	_prec& (0+255),w,b
 14341  00370E  B0D8               	btfsc	status,0,c
 14342  003710  EF8C  F01B         	goto	u10871
 14343  003714  EF8E  F01B         	goto	u10870
 14344  003718                     u10871:
 14345  003718  EF94  F01B         	goto	l604
 14346  00371C                     u10870:
 14347  00371C                     
 14348                           ; BSR set to: 0
 14349  00371C  0E00               	movlw	0
 14350  00371E  6F90               	movwf	(dtoa@p+1)& (0+255),b
 14351  003720  0E01               	movlw	1
 14352  003722  6F8F               	movwf	dtoa@p& (0+255),b
 14353  003724  EF98  F01B         	goto	l606
 14354  003728                     l604:
 14355                           
 14356                           ; BSR set to: 0
 14357  003728  C0EF  F08F         	movff	_prec,dtoa@p
 14358  00372C  C0F0  F090         	movff	_prec+1,dtoa@p+1
 14359  003730                     l606:
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14363  003730  C037  F091         	movff	_width,dtoa@w
 14364  003734  C038  F092         	movff	_width+1,dtoa@w+1
 14365  003738                     
 14366                           ; BSR set to: 0
 14367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14368  003738  5193               	movf	dtoa@s& (0+255),w,b
 14369  00373A  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
 14370  00373C  A4D8               	btfss	status,2,c
 14371  00373E  EFA3  F01B         	goto	u10881
 14372  003742  EFA5  F01B         	goto	u10880
 14373  003746                     u10881:
 14374  003746  EFAC  F01B         	goto	l8641
 14375  00374A                     u10880:
 14376  00374A                     
 14377                           ; BSR set to: 0
 14378  00374A  A439               	btfss	_flags^0,2,c
 14379  00374C  EFAA  F01B         	goto	u10891
 14380  003750  EFAC  F01B         	goto	u10890
 14381  003754                     u10891:
 14382  003754  EFAF  F01B         	goto	l8643
 14383  003758                     u10890:
 14384  003758                     l8641:
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14388  003758  0791               	decf	dtoa@w& (0+255),f,b
 14389  00375A  A0D8               	btfss	status,0,c
 14390  00375C  0792               	decf	(dtoa@w+1)& (0+255),f,b
 14391  00375E                     l8643:
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14395  00375E  0E00               	movlw	0
 14396  003760  6F9E               	movwf	(dtoa@i+1)& (0+255),b
 14397  003762  0E4F               	movlw	79
 14398  003764  6F9D               	movwf	dtoa@i& (0+255),b
 14399  003766                     
 14400                           ; BSR set to: 0
 14401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14402  003766  0E00               	movlw	0
 14403  003768  0101               	movlb	1	; () banked
 14404  00376A  6FBB               	movwf	(_dbuf+79)& (0+255),b
 14405                           
 14406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14407  00376C  EF35  F01C         	goto	l8657
 14408  003770                     l8647:
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14412  003770  079D               	decf	dtoa@i& (0+255),f,b
 14413  003772  A0D8               	btfss	status,0,c
 14414  003774  079E               	decf	(dtoa@i+1)& (0+255),f,b
 14415  003776                     
 14416                           ; BSR set to: 0
 14417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14418  003776  0E6C               	movlw	low _dbuf
 14419  003778  259D               	addwf	dtoa@i& (0+255),w,b
 14420  00377A  6ED9               	movwf	fsr2l,c
 14421  00377C  0E01               	movlw	high _dbuf
 14422  00377E  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
 14423  003780  6EDA               	movwf	fsr2h,c
 14424  003782  C095  F060         	movff	dtoa@n,___aomod@dividend
 14425  003786  C096  F061         	movff	dtoa@n+1,___aomod@dividend+1
 14426  00378A  C097  F062         	movff	dtoa@n+2,___aomod@dividend+2
 14427  00378E  C098  F063         	movff	dtoa@n+3,___aomod@dividend+3
 14428  003792  C099  F064         	movff	dtoa@n+4,___aomod@dividend+4
 14429  003796  C09A  F065         	movff	dtoa@n+5,___aomod@dividend+5
 14430  00379A  C09B  F066         	movff	dtoa@n+6,___aomod@dividend+6
 14431  00379E  C09C  F067         	movff	dtoa@n+7,___aomod@dividend+7
 14432  0037A2  0E0A               	movlw	10
 14433  0037A4  6F68               	movwf	___aomod@divisor& (0+255),b
 14434  0037A6  0E00               	movlw	0
 14435  0037A8  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
 14436  0037AA  0E00               	movlw	0
 14437  0037AC  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
 14438  0037AE  0E00               	movlw	0
 14439  0037B0  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
 14440  0037B2  0E00               	movlw	0
 14441  0037B4  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
 14442  0037B6  0E00               	movlw	0
 14443  0037B8  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
 14444  0037BA  0E00               	movlw	0
 14445  0037BC  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
 14446  0037BE  0E00               	movlw	0
 14447  0037C0  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
 14448  0037C2  EC9F  F026         	call	___aomod	;wreg free
 14449  0037C6  C060  F085         	movff	?___aomod,??_dtoa
 14450  0037CA  C061  F086         	movff	?___aomod+1,??_dtoa+1
 14451  0037CE  C062  F087         	movff	?___aomod+2,??_dtoa+2
 14452  0037D2  C063  F088         	movff	?___aomod+3,??_dtoa+3
 14453  0037D6  C064  F089         	movff	?___aomod+4,??_dtoa+4
 14454  0037DA  C065  F08A         	movff	?___aomod+5,??_dtoa+5
 14455  0037DE  C066  F08B         	movff	?___aomod+6,??_dtoa+6
 14456  0037E2  C067  F08C         	movff	?___aomod+7,??_dtoa+7
 14457  0037E6  C085  F072         	movff	??_dtoa,abs@a
 14458  0037EA  C087  F073         	movff	??_dtoa+2,abs@a+1
 14459  0037EE  ECC8  F030         	call	_abs	;wreg free
 14460  0037F2  0100               	movlb	0	; () banked
 14461  0037F4  5172               	movf	?_abs& (0+255),w,b
 14462  0037F6  0F30               	addlw	48
 14463  0037F8  6EDF               	movwf	indf2,c
 14464  0037FA                     
 14465                           ; BSR set to: 0
 14466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14467  0037FA  078F               	decf	dtoa@p& (0+255),f,b
 14468  0037FC  A0D8               	btfss	status,0,c
 14469  0037FE  0790               	decf	(dtoa@p+1)& (0+255),f,b
 14470  003800                     
 14471                           ; BSR set to: 0
 14472                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14473  003800  0791               	decf	dtoa@w& (0+255),f,b
 14474  003802  A0D8               	btfss	status,0,c
 14475  003804  0792               	decf	(dtoa@w+1)& (0+255),f,b
 14476  003806                     
 14477                           ; BSR set to: 0
 14478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14479  003806  C095  F060         	movff	dtoa@n,___aodiv@dividend
 14480  00380A  C096  F061         	movff	dtoa@n+1,___aodiv@dividend+1
 14481  00380E  C097  F062         	movff	dtoa@n+2,___aodiv@dividend+2
 14482  003812  C098  F063         	movff	dtoa@n+3,___aodiv@dividend+3
 14483  003816  C099  F064         	movff	dtoa@n+4,___aodiv@dividend+4
 14484  00381A  C09A  F065         	movff	dtoa@n+5,___aodiv@dividend+5
 14485  00381E  C09B  F066         	movff	dtoa@n+6,___aodiv@dividend+6
 14486  003822  C09C  F067         	movff	dtoa@n+7,___aodiv@dividend+7
 14487  003826  0E0A               	movlw	10
 14488  003828  6F68               	movwf	___aodiv@divisor& (0+255),b
 14489  00382A  0E00               	movlw	0
 14490  00382C  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
 14491  00382E  0E00               	movlw	0
 14492  003830  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
 14493  003832  0E00               	movlw	0
 14494  003834  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
 14495  003836  0E00               	movlw	0
 14496  003838  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
 14497  00383A  0E00               	movlw	0
 14498  00383C  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
 14499  00383E  0E00               	movlw	0
 14500  003840  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
 14501  003842  0E00               	movlw	0
 14502  003844  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
 14503  003846  EC63  F024         	call	___aodiv	;wreg free
 14504  00384A  C060  F095         	movff	?___aodiv,dtoa@n
 14505  00384E  C061  F096         	movff	?___aodiv+1,dtoa@n+1
 14506  003852  C062  F097         	movff	?___aodiv+2,dtoa@n+2
 14507  003856  C063  F098         	movff	?___aodiv+3,dtoa@n+3
 14508  00385A  C064  F099         	movff	?___aodiv+4,dtoa@n+4
 14509  00385E  C065  F09A         	movff	?___aodiv+5,dtoa@n+5
 14510  003862  C066  F09B         	movff	?___aodiv+6,dtoa@n+6
 14511  003866  C067  F09C         	movff	?___aodiv+7,dtoa@n+7
 14512  00386A                     l8657:
 14513                           
 14514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14515  00386A  0100               	movlb	0	; () banked
 14516  00386C  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
 14517  00386E  EF41  F01C         	goto	u10901
 14518  003872  519E               	movf	(dtoa@i+1)& (0+255),w,b
 14519  003874  E108               	bnz	u10900
 14520  003876  059D               	decf	dtoa@i& (0+255),w,b
 14521  003878  A0D8               	btfss	status,0,c
 14522  00387A  EF41  F01C         	goto	u10901
 14523  00387E  EF43  F01C         	goto	u10900
 14524  003882                     u10901:
 14525  003882  EF73  F01C         	goto	l8667
 14526  003886                     u10900:
 14527  003886                     
 14528                           ; BSR set to: 0
 14529  003886  5195               	movf	dtoa@n& (0+255),w,b
 14530  003888  1196               	iorwf	(dtoa@n+1)& (0+255),w,b
 14531  00388A  1197               	iorwf	(dtoa@n+2)& (0+255),w,b
 14532  00388C  1198               	iorwf	(dtoa@n+3)& (0+255),w,b
 14533  00388E  1199               	iorwf	(dtoa@n+4)& (0+255),w,b
 14534  003890  119A               	iorwf	(dtoa@n+5)& (0+255),w,b
 14535  003892  119B               	iorwf	(dtoa@n+6)& (0+255),w,b
 14536  003894  119C               	iorwf	(dtoa@n+7)& (0+255),w,b
 14537  003896  A4D8               	btfss	status,2,c
 14538  003898  EF50  F01C         	goto	u10911
 14539  00389C  EF52  F01C         	goto	u10910
 14540  0038A0                     u10911:
 14541  0038A0  EFB8  F01B         	goto	l8647
 14542  0038A4                     u10910:
 14543  0038A4                     
 14544                           ; BSR set to: 0
 14545  0038A4  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
 14546  0038A6  EF5F  F01C         	goto	u10920
 14547  0038AA  5190               	movf	(dtoa@p+1)& (0+255),w,b
 14548  0038AC  E106               	bnz	u10921
 14549  0038AE  058F               	decf	dtoa@p& (0+255),w,b
 14550  0038B0  B0D8               	btfsc	status,0,c
 14551  0038B2  EF5D  F01C         	goto	u10921
 14552  0038B6  EF5F  F01C         	goto	u10920
 14553  0038BA                     u10921:
 14554  0038BA  EFB8  F01B         	goto	l8647
 14555  0038BE                     u10920:
 14556  0038BE                     
 14557                           ; BSR set to: 0
 14558  0038BE  BF92               	btfsc	(dtoa@w+1)& (0+255),7,b
 14559  0038C0  EF6A  F01C         	goto	u10931
 14560  0038C4  5192               	movf	(dtoa@w+1)& (0+255),w,b
 14561  0038C6  E108               	bnz	u10930
 14562  0038C8  0591               	decf	dtoa@w& (0+255),w,b
 14563  0038CA  A0D8               	btfss	status,0,c
 14564  0038CC  EF6A  F01C         	goto	u10931
 14565  0038D0  EF6C  F01C         	goto	u10930
 14566  0038D4                     u10931:
 14567  0038D4  EF73  F01C         	goto	l8667
 14568  0038D8                     u10930:
 14569  0038D8                     
 14570                           ; BSR set to: 0
 14571  0038D8  B239               	btfsc	_flags^0,1,c
 14572  0038DA  EF71  F01C         	goto	u10941
 14573  0038DE  EF73  F01C         	goto	u10940
 14574  0038E2                     u10941:
 14575  0038E2  EFB8  F01B         	goto	l8647
 14576  0038E6                     u10940:
 14577  0038E6                     l8667:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 14581  0038E6  5193               	movf	dtoa@s& (0+255),w,b
 14582  0038E8  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
 14583  0038EA  A4D8               	btfss	status,2,c
 14584  0038EC  EF7A  F01C         	goto	u10951
 14585  0038F0  EF7C  F01C         	goto	u10950
 14586  0038F4                     u10951:
 14587  0038F4  EF83  F01C         	goto	l8671
 14588  0038F8                     u10950:
 14589  0038F8                     
 14590                           ; BSR set to: 0
 14591  0038F8  A439               	btfss	_flags^0,2,c
 14592  0038FA  EF81  F01C         	goto	u10961
 14593  0038FE  EF83  F01C         	goto	u10960
 14594  003902                     u10961:
 14595  003902  EFA1  F01C         	goto	l8681
 14596  003906                     u10960:
 14597  003906                     l8671:
 14598                           
 14599                           ; BSR set to: 0
 14600                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 14601  003906  079D               	decf	dtoa@i& (0+255),f,b
 14602  003908  A0D8               	btfss	status,0,c
 14603  00390A  079E               	decf	(dtoa@i+1)& (0+255),f,b
 14604  00390C                     
 14605                           ; BSR set to: 0
 14606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 14607  00390C  5193               	movf	dtoa@s& (0+255),w,b
 14608  00390E  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
 14609  003910  A4D8               	btfss	status,2,c
 14610  003912  EF8D  F01C         	goto	u10971
 14611  003916  EF8F  F01C         	goto	u10970
 14612  00391A                     u10971:
 14613  00391A  EF95  F01C         	goto	l8677
 14614  00391E                     u10970:
 14615  00391E                     
 14616                           ; BSR set to: 0
 14617  00391E  0E00               	movlw	0
 14618  003920  6F8E               	movwf	(_dtoa$1580+1)& (0+255),b
 14619  003922  0E2B               	movlw	43
 14620  003924  6F8D               	movwf	_dtoa$1580& (0+255),b
 14621  003926  EF99  F01C         	goto	l8679
 14622  00392A                     l8677:
 14623                           
 14624                           ; BSR set to: 0
 14625  00392A  0E00               	movlw	0
 14626  00392C  6F8E               	movwf	(_dtoa$1580+1)& (0+255),b
 14627  00392E  0E2D               	movlw	45
 14628  003930  6F8D               	movwf	_dtoa$1580& (0+255),b
 14629  003932                     l8679:
 14630                           
 14631                           ; BSR set to: 0
 14632  003932  0E6C               	movlw	low _dbuf
 14633  003934  259D               	addwf	dtoa@i& (0+255),w,b
 14634  003936  6ED9               	movwf	fsr2l,c
 14635  003938  0E01               	movlw	high _dbuf
 14636  00393A  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
 14637  00393C  6EDA               	movwf	fsr2h,c
 14638  00393E  C08D  FFDF         	movff	_dtoa$1580,indf2
 14639  003942                     l8681:
 14640                           
 14641                           ; BSR set to: 0
 14642                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 14643  003942  C07B  F070         	movff	dtoa@fp,pad@fp
 14644  003946  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
 14645  00394A  0E6C               	movlw	low _dbuf
 14646  00394C  259D               	addwf	dtoa@i& (0+255),w,b
 14647  00394E  6F72               	movwf	pad@buf& (0+255),b
 14648  003950  0E01               	movlw	high _dbuf
 14649  003952  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
 14650  003954  6F73               	movwf	(pad@buf+1)& (0+255),b
 14651  003956  C091  F074         	movff	dtoa@w,pad@p
 14652  00395A  C092  F075         	movff	dtoa@w+1,pad@p+1
 14653  00395E  EC70  F02C         	call	_pad	;wreg free
 14654  003962  C070  F07B         	movff	?_pad,?_dtoa
 14655  003966  C071  F07C         	movff	?_pad+1,?_dtoa+1
 14656  00396A  0012               	return		;funcret
 14657  00396C                     __end_of_dtoa:
 14658                           	opt callstack 0
 14659                           
 14660 ;; *************** function _abs *****************
 14661 ;; Defined at:
 14662 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;  a               2   18[BANK0 ] int 
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;		None
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  2   18[BANK0 ] int 
 14669 ;; Registers used:
 14670 ;;		wreg, status,2, status,0
 14671 ;; Tracked objects:
 14672 ;;		On entry : 0/0
 14673 ;;		On exit  : 0/0
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14678 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14679 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14680 ;;Total ram usage:        4 bytes
 14681 ;; Hardware stack levels used:    1
 14682 ;; Hardware stack levels required when called:    5
 14683 ;; This function calls:
 14684 ;;		Nothing
 14685 ;; This function is called by:
 14686 ;;		_dtoa
 14687 ;; This function uses a non-reentrant model
 14688 ;;
 14689                           
 14690                           	psect	text32
 14691  006190                     __ptext32:
 14692                           	opt callstack 0
 14693  006190                     _abs:
 14694                           	opt callstack 20
 14695  006190  0100               	movlb	0	; () banked
 14696  006192  BF73               	btfsc	(abs@a+1)& (0+255),7,b
 14697  006194  EFD6  F030         	goto	u9590
 14698  006198  5173               	movf	(abs@a+1)& (0+255),w,b
 14699  00619A  E106               	bnz	u9591
 14700  00619C  0572               	decf	abs@a& (0+255),w,b
 14701  00619E  B0D8               	btfsc	status,0,c
 14702  0061A0  EFD4  F030         	goto	u9591
 14703  0061A4  EFD6  F030         	goto	u9590
 14704  0061A8                     u9591:
 14705  0061A8  EFE4  F030         	goto	l1580
 14706  0061AC                     u9590:
 14707  0061AC                     
 14708                           ; BSR set to: 0
 14709  0061AC  C072  F074         	movff	abs@a,??_abs
 14710  0061B0  C073  F075         	movff	abs@a+1,??_abs+1
 14711  0061B4  1F74               	comf	??_abs& (0+255),f,b
 14712  0061B6  1F75               	comf	(??_abs+1)& (0+255),f,b
 14713  0061B8  4B74               	infsnz	??_abs& (0+255),f,b
 14714  0061BA  2B75               	incf	(??_abs+1)& (0+255),f,b
 14715  0061BC  C074  F072         	movff	??_abs,?_abs
 14716  0061C0  C075  F073         	movff	??_abs+1,?_abs+1
 14717  0061C4  EFE8  F030         	goto	l1583
 14718  0061C8                     l1580:
 14719                           
 14720                           ; BSR set to: 0
 14721  0061C8  C072  F072         	movff	abs@a,?_abs
 14722  0061CC  C073  F073         	movff	abs@a+1,?_abs+1
 14723  0061D0                     l1583:
 14724                           
 14725                           ; BSR set to: 0
 14726  0061D0  0012               	return		;funcret
 14727  0061D2                     __end_of_abs:
 14728                           	opt callstack 0
 14729                           
 14730 ;; *************** function ___aomod *****************
 14731 ;; Defined at:
 14732 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;  dividend        8    0[BANK0 ] long long 
 14735 ;;  divisor         8    8[BANK0 ] long long 
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;  sign            1   17[BANK0 ] unsigned char 
 14738 ;;  counter         1   16[BANK0 ] unsigned char 
 14739 ;; Return value:  Size  Location     Type
 14740 ;;                  8    0[BANK0 ] long long 
 14741 ;; Registers used:
 14742 ;;		wreg, status,2, status,0
 14743 ;; Tracked objects:
 14744 ;;		On entry : 0/0
 14745 ;;		On exit  : 0/0
 14746 ;;		Unchanged: 0/0
 14747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14748 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14751 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14752 ;;Total ram usage:       18 bytes
 14753 ;; Hardware stack levels used:    1
 14754 ;; Hardware stack levels required when called:    5
 14755 ;; This function calls:
 14756 ;;		Nothing
 14757 ;; This function is called by:
 14758 ;;		_dtoa
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text33
 14763  004D3E                     __ptext33:
 14764                           	opt callstack 0
 14765  004D3E                     ___aomod:
 14766                           	opt callstack 20
 14767  004D3E  0E00               	movlw	0
 14768  004D40  0100               	movlb	0	; () banked
 14769  004D42  6F71               	movwf	___aomod@sign& (0+255),b
 14770  004D44                     
 14771                           ; BSR set to: 0
 14772  004D44  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
 14773  004D46  EFA9  F026         	goto	u9960
 14774  004D4A  EFA7  F026         	goto	u9961
 14775  004D4E                     u9961:
 14776  004D4E  EFBB  F026         	goto	l8079
 14777  004D52                     u9960:
 14778  004D52                     
 14779                           ; BSR set to: 0
 14780  004D52  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
 14781  004D54  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
 14782  004D56  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
 14783  004D58  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
 14784  004D5A  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
 14785  004D5C  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
 14786  004D5E  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
 14787  004D60  6D60               	negf	___aomod@dividend& (0+255),b
 14788  004D62  0E00               	movlw	0
 14789  004D64  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 14790  004D66  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 14791  004D68  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 14792  004D6A  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 14793  004D6C  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 14794  004D6E  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 14795  004D70  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 14796  004D72                     
 14797                           ; BSR set to: 0
 14798  004D72  0E01               	movlw	1
 14799  004D74  6F71               	movwf	___aomod@sign& (0+255),b
 14800  004D76                     l8079:
 14801                           
 14802                           ; BSR set to: 0
 14803  004D76  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
 14804  004D78  EFC2  F026         	goto	u9970
 14805  004D7C  EFC0  F026         	goto	u9971
 14806  004D80                     u9971:
 14807  004D80  EFD2  F026         	goto	l8083
 14808  004D84                     u9970:
 14809  004D84                     
 14810                           ; BSR set to: 0
 14811  004D84  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
 14812  004D86  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
 14813  004D88  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
 14814  004D8A  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
 14815  004D8C  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
 14816  004D8E  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
 14817  004D90  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
 14818  004D92  6D68               	negf	___aomod@divisor& (0+255),b
 14819  004D94  0E00               	movlw	0
 14820  004D96  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 14821  004D98  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 14822  004D9A  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 14823  004D9C  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 14824  004D9E  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 14825  004DA0  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 14826  004DA2  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 14827  004DA4                     l8083:
 14828                           
 14829                           ; BSR set to: 0
 14830  004DA4  5168               	movf	___aomod@divisor& (0+255),w,b
 14831  004DA6  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 14832  004DA8  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 14833  004DAA  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 14834  004DAC  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 14835  004DAE  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 14836  004DB0  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 14837  004DB2  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 14838  004DB4  B4D8               	btfsc	status,2,c
 14839  004DB6  EFDF  F026         	goto	u9981
 14840  004DBA  EFE1  F026         	goto	u9980
 14841  004DBE                     u9981:
 14842  004DBE  EF29  F027         	goto	l8099
 14843  004DC2                     u9980:
 14844  004DC2                     
 14845                           ; BSR set to: 0
 14846  004DC2  0E01               	movlw	1
 14847  004DC4  6F70               	movwf	___aomod@counter& (0+255),b
 14848  004DC6  EFEF  F026         	goto	l8089
 14849  004DCA                     l8087:
 14850                           
 14851                           ; BSR set to: 0
 14852  004DCA  90D8               	bcf	status,0,c
 14853  004DCC  3768               	rlcf	___aomod@divisor& (0+255),f,b
 14854  004DCE  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 14855  004DD0  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 14856  004DD2  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 14857  004DD4  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 14858  004DD6  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 14859  004DD8  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 14860  004DDA  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 14861  004DDC  2B70               	incf	___aomod@counter& (0+255),f,b
 14862  004DDE                     l8089:
 14863                           
 14864                           ; BSR set to: 0
 14865  004DDE  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 14866  004DE0  EFF4  F026         	goto	u9991
 14867  004DE4  EFF6  F026         	goto	u9990
 14868  004DE8                     u9991:
 14869  004DE8  EFE5  F026         	goto	l8087
 14870  004DEC                     u9990:
 14871  004DEC                     l8091:
 14872                           
 14873                           ; BSR set to: 0
 14874  004DEC  5168               	movf	___aomod@divisor& (0+255),w,b
 14875  004DEE  5D60               	subwf	___aomod@dividend& (0+255),w,b
 14876  004DF0  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
 14877  004DF2  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 14878  004DF4  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
 14879  004DF6  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 14880  004DF8  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
 14881  004DFA  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 14882  004DFC  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
 14883  004DFE  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 14884  004E00  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
 14885  004E02  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 14886  004E04  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
 14887  004E06  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 14888  004E08  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
 14889  004E0A  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 14890  004E0C  A0D8               	btfss	status,0,c
 14891  004E0E  EF0B  F027         	goto	u10001
 14892  004E12  EF0D  F027         	goto	u10000
 14893  004E16                     u10001:
 14894  004E16  EF1D  F027         	goto	l8095
 14895  004E1A                     u10000:
 14896  004E1A                     
 14897                           ; BSR set to: 0
 14898  004E1A  5168               	movf	___aomod@divisor& (0+255),w,b
 14899  004E1C  5F60               	subwf	___aomod@dividend& (0+255),f,b
 14900  004E1E  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
 14901  004E20  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 14902  004E22  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
 14903  004E24  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 14904  004E26  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
 14905  004E28  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 14906  004E2A  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
 14907  004E2C  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 14908  004E2E  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
 14909  004E30  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 14910  004E32  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
 14911  004E34  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 14912  004E36  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
 14913  004E38  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 14914  004E3A                     l8095:
 14915                           
 14916                           ; BSR set to: 0
 14917  004E3A  90D8               	bcf	status,0,c
 14918  004E3C  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 14919  004E3E  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 14920  004E40  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 14921  004E42  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 14922  004E44  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 14923  004E46  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 14924  004E48  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 14925  004E4A  3368               	rrcf	___aomod@divisor& (0+255),f,b
 14926  004E4C                     
 14927                           ; BSR set to: 0
 14928  004E4C  2F70               	decfsz	___aomod@counter& (0+255),f,b
 14929  004E4E  EFF6  F026         	goto	l8091
 14930  004E52                     l8099:
 14931                           
 14932                           ; BSR set to: 0
 14933  004E52  5171               	movf	___aomod@sign& (0+255),w,b
 14934  004E54  B4D8               	btfsc	status,2,c
 14935  004E56  EF2F  F027         	goto	u10011
 14936  004E5A  EF31  F027         	goto	u10010
 14937  004E5E                     u10011:
 14938  004E5E  EF41  F027         	goto	l8103
 14939  004E62                     u10010:
 14940  004E62                     
 14941                           ; BSR set to: 0
 14942  004E62  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
 14943  004E64  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
 14944  004E66  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
 14945  004E68  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
 14946  004E6A  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
 14947  004E6C  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
 14948  004E6E  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
 14949  004E70  6D60               	negf	___aomod@dividend& (0+255),b
 14950  004E72  0E00               	movlw	0
 14951  004E74  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 14952  004E76  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 14953  004E78  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 14954  004E7A  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 14955  004E7C  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 14956  004E7E  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 14957  004E80  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 14958  004E82                     l8103:
 14959                           
 14960                           ; BSR set to: 0
 14961  004E82  C060  F060         	movff	___aomod@dividend,?___aomod
 14962  004E86  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
 14963  004E8A  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
 14964  004E8E  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
 14965  004E92  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
 14966  004E96  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
 14967  004E9A  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
 14968  004E9E  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
 14969  004EA2                     
 14970                           ; BSR set to: 0
 14971  004EA2  0012               	return		;funcret
 14972  004EA4                     __end_of___aomod:
 14973                           	opt callstack 0
 14974                           
 14975 ;; *************** function ___aodiv *****************
 14976 ;; Defined at:
 14977 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;  dividend        8    0[BANK0 ] long long 
 14980 ;;  divisor         8    8[BANK0 ] long long 
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;  quotient        8   18[BANK0 ] long long 
 14983 ;;  sign            1   17[BANK0 ] unsigned char 
 14984 ;;  counter         1   16[BANK0 ] unsigned char 
 14985 ;; Return value:  Size  Location     Type
 14986 ;;                  8    0[BANK0 ] long long 
 14987 ;; Registers used:
 14988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14989 ;; Tracked objects:
 14990 ;;		On entry : 0/0
 14991 ;;		On exit  : 0/0
 14992 ;;		Unchanged: 0/0
 14993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14994 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14995 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14997 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14998 ;;Total ram usage:       26 bytes
 14999 ;; Hardware stack levels used:    1
 15000 ;; Hardware stack levels required when called:    5
 15001 ;; This function calls:
 15002 ;;		Nothing
 15003 ;; This function is called by:
 15004 ;;		_dtoa
 15005 ;; This function uses a non-reentrant model
 15006 ;;
 15007                           
 15008                           	psect	text34
 15009  0048C6                     __ptext34:
 15010                           	opt callstack 0
 15011  0048C6                     ___aodiv:
 15012                           	opt callstack 20
 15013  0048C6  0E00               	movlw	0
 15014  0048C8  0100               	movlb	0	; () banked
 15015  0048CA  6F71               	movwf	___aodiv@sign& (0+255),b
 15016  0048CC                     
 15017                           ; BSR set to: 0
 15018  0048CC  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
 15019  0048CE  EF6D  F024         	goto	u9890
 15020  0048D2  EF6B  F024         	goto	u9891
 15021  0048D6                     u9891:
 15022  0048D6  EF7F  F024         	goto	l8035
 15023  0048DA                     u9890:
 15024  0048DA                     
 15025                           ; BSR set to: 0
 15026  0048DA  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 15027  0048DC  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 15028  0048DE  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 15029  0048E0  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 15030  0048E2  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 15031  0048E4  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 15032  0048E6  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
 15033  0048E8  6D68               	negf	___aodiv@divisor& (0+255),b
 15034  0048EA  0E00               	movlw	0
 15035  0048EC  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 15036  0048EE  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 15037  0048F0  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 15038  0048F2  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 15039  0048F4  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 15040  0048F6  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 15041  0048F8  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 15042  0048FA                     
 15043                           ; BSR set to: 0
 15044  0048FA  0E01               	movlw	1
 15045  0048FC  6F71               	movwf	___aodiv@sign& (0+255),b
 15046  0048FE                     l8035:
 15047                           
 15048                           ; BSR set to: 0
 15049  0048FE  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
 15050  004900  EF86  F024         	goto	u9900
 15051  004904  EF84  F024         	goto	u9901
 15052  004908                     u9901:
 15053  004908  EF98  F024         	goto	l8041
 15054  00490C                     u9900:
 15055  00490C                     
 15056                           ; BSR set to: 0
 15057  00490C  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
 15058  00490E  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
 15059  004910  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
 15060  004912  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
 15061  004914  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
 15062  004916  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
 15063  004918  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
 15064  00491A  6D60               	negf	___aodiv@dividend& (0+255),b
 15065  00491C  0E00               	movlw	0
 15066  00491E  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 15067  004920  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 15068  004922  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 15069  004924  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 15070  004926  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 15071  004928  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 15072  00492A  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 15073  00492C                     
 15074                           ; BSR set to: 0
 15075  00492C  0E01               	movlw	1
 15076  00492E  1B71               	xorwf	___aodiv@sign& (0+255),f,b
 15077  004930                     l8041:
 15078                           
 15079                           ; BSR set to: 0
 15080  004930  EE20  F072         	lfsr	2,___aodiv@quotient
 15081  004934  0E07               	movlw	7
 15082  004936                     u9911:
 15083  004936  6ADE               	clrf	postinc2,c
 15084  004938  06E8               	decf	wreg,f,c
 15085  00493A  E2FD               	bc	u9911
 15086  00493C                     
 15087                           ; BSR set to: 0
 15088  00493C  5168               	movf	___aodiv@divisor& (0+255),w,b
 15089  00493E  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 15090  004940  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 15091  004942  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 15092  004944  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 15093  004946  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 15094  004948  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 15095  00494A  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 15096  00494C  B4D8               	btfsc	status,2,c
 15097  00494E  EFAB  F024         	goto	u9921
 15098  004952  EFAD  F024         	goto	u9920
 15099  004956                     u9921:
 15100  004956  EFFF  F024         	goto	l8063
 15101  00495A                     u9920:
 15102  00495A                     
 15103                           ; BSR set to: 0
 15104  00495A  0E01               	movlw	1
 15105  00495C  6F70               	movwf	___aodiv@counter& (0+255),b
 15106  00495E  EFBB  F024         	goto	l8049
 15107  004962                     l8047:
 15108                           
 15109                           ; BSR set to: 0
 15110  004962  90D8               	bcf	status,0,c
 15111  004964  3768               	rlcf	___aodiv@divisor& (0+255),f,b
 15112  004966  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 15113  004968  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 15114  00496A  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 15115  00496C  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 15116  00496E  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 15117  004970  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 15118  004972  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 15119  004974  2B70               	incf	___aodiv@counter& (0+255),f,b
 15120  004976                     l8049:
 15121                           
 15122                           ; BSR set to: 0
 15123  004976  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 15124  004978  EFC0  F024         	goto	u9931
 15125  00497C  EFC2  F024         	goto	u9930
 15126  004980                     u9931:
 15127  004980  EFB1  F024         	goto	l8047
 15128  004984                     u9930:
 15129  004984                     l8051:
 15130                           
 15131                           ; BSR set to: 0
 15132  004984  90D8               	bcf	status,0,c
 15133  004986  3772               	rlcf	___aodiv@quotient& (0+255),f,b
 15134  004988  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 15135  00498A  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 15136  00498C  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 15137  00498E  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 15138  004990  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 15139  004992  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 15140  004994  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 15141  004996                     
 15142                           ; BSR set to: 0
 15143  004996  5168               	movf	___aodiv@divisor& (0+255),w,b
 15144  004998  5D60               	subwf	___aodiv@dividend& (0+255),w,b
 15145  00499A  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
 15146  00499C  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 15147  00499E  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 15148  0049A0  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 15149  0049A2  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 15150  0049A4  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 15151  0049A6  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 15152  0049A8  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 15153  0049AA  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 15154  0049AC  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 15155  0049AE  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 15156  0049B0  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 15157  0049B2  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 15158  0049B4  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 15159  0049B6  A0D8               	btfss	status,0,c
 15160  0049B8  EFE0  F024         	goto	u9941
 15161  0049BC  EFE2  F024         	goto	u9940
 15162  0049C0                     u9941:
 15163  0049C0  EFF3  F024         	goto	l8059
 15164  0049C4                     u9940:
 15165  0049C4                     
 15166                           ; BSR set to: 0
 15167  0049C4  5168               	movf	___aodiv@divisor& (0+255),w,b
 15168  0049C6  5F60               	subwf	___aodiv@dividend& (0+255),f,b
 15169  0049C8  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
 15170  0049CA  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 15171  0049CC  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 15172  0049CE  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 15173  0049D0  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 15174  0049D2  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 15175  0049D4  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 15176  0049D6  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 15177  0049D8  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 15178  0049DA  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 15179  0049DC  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 15180  0049DE  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 15181  0049E0  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 15182  0049E2  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 15183  0049E4                     
 15184                           ; BSR set to: 0
 15185  0049E4  8172               	bsf	___aodiv@quotient& (0+255),0,b
 15186  0049E6                     l8059:
 15187                           
 15188                           ; BSR set to: 0
 15189  0049E6  90D8               	bcf	status,0,c
 15190  0049E8  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 15191  0049EA  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 15192  0049EC  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 15193  0049EE  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 15194  0049F0  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 15195  0049F2  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 15196  0049F4  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 15197  0049F6  3368               	rrcf	___aodiv@divisor& (0+255),f,b
 15198  0049F8                     
 15199                           ; BSR set to: 0
 15200  0049F8  2F70               	decfsz	___aodiv@counter& (0+255),f,b
 15201  0049FA  EFC2  F024         	goto	l8051
 15202  0049FE                     l8063:
 15203                           
 15204                           ; BSR set to: 0
 15205  0049FE  5171               	movf	___aodiv@sign& (0+255),w,b
 15206  004A00  B4D8               	btfsc	status,2,c
 15207  004A02  EF05  F025         	goto	u9951
 15208  004A06  EF07  F025         	goto	u9950
 15209  004A0A                     u9951:
 15210  004A0A  EF17  F025         	goto	l8067
 15211  004A0E                     u9950:
 15212  004A0E                     
 15213                           ; BSR set to: 0
 15214  004A0E  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
 15215  004A10  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
 15216  004A12  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
 15217  004A14  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
 15218  004A16  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
 15219  004A18  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
 15220  004A1A  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
 15221  004A1C  6D72               	negf	___aodiv@quotient& (0+255),b
 15222  004A1E  0E00               	movlw	0
 15223  004A20  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 15224  004A22  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 15225  004A24  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 15226  004A26  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 15227  004A28  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 15228  004A2A  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 15229  004A2C  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 15230  004A2E                     l8067:
 15231                           
 15232                           ; BSR set to: 0
 15233  004A2E  C072  F060         	movff	___aodiv@quotient,?___aodiv
 15234  004A32  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
 15235  004A36  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
 15236  004A3A  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
 15237  004A3E  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
 15238  004A42  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
 15239  004A46  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
 15240  004A4A  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
 15241  004A4E                     
 15242                           ; BSR set to: 0
 15243  004A4E  0012               	return		;funcret
 15244  004A50                     __end_of___aodiv:
 15245                           	opt callstack 0
 15246                           
 15247 ;; *************** function _ctoa *****************
 15248 ;; Defined at:
 15249 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15250 ;; Parameters:    Size  Location     Type
 15251 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
 15252 ;;		 -> vsnprintf@f(6), 
 15253 ;;  c               1   29[BANK0 ] unsigned char 
 15254 ;; Auto vars:     Size  Location     Type
 15255 ;;  w               2   30[BANK0 ] int 
 15256 ;;  l               2    0        int 
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  2   27[BANK0 ] int 
 15259 ;; Registers used:
 15260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 0/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15266 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15267 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15269 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15270 ;;Total ram usage:        5 bytes
 15271 ;; Hardware stack levels used:    1
 15272 ;; Hardware stack levels required when called:    9
 15273 ;; This function calls:
 15274 ;;		_pad
 15275 ;; This function is called by:
 15276 ;;		_vfpfcnvrt
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           	psect	text35
 15281  005F16                     __ptext35:
 15282                           	opt callstack 0
 15283  005F16                     _ctoa:
 15284                           	opt callstack 17
 15285  005F16                     
 15286                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 15287  005F16  5037               	movf	_width^0,w,c
 15288  005F18  1038               	iorwf	(_width+1)^0,w,c
 15289  005F1A  A4D8               	btfss	status,2,c
 15290  005F1C  EF92  F02F         	goto	u10821
 15291  005F20  EF94  F02F         	goto	u10820
 15292  005F24                     u10821:
 15293  005F24  EF9A  F02F         	goto	l8613
 15294  005F28                     u10820:
 15295  005F28  C037  F07E         	movff	_width,ctoa@w
 15296  005F2C  C038  F07F         	movff	_width+1,ctoa@w+1
 15297  005F30  EFA1  F02F         	goto	l8615
 15298  005F34                     l8613:
 15299  005F34  0EFF               	movlw	255
 15300  005F36  2437               	addwf	_width^0,w,c
 15301  005F38  0100               	movlb	0	; () banked
 15302  005F3A  6F7E               	movwf	ctoa@w& (0+255),b
 15303  005F3C  0EFF               	movlw	255
 15304  005F3E  2038               	addwfc	(_width+1)^0,w,c
 15305  005F40  6F7F               	movwf	(ctoa@w+1)& (0+255),b
 15306  005F42                     l8615:
 15307                           
 15308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 15309  005F42  C07D  F16C         	movff	ctoa@c,_dbuf
 15310  005F46                     
 15311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 15312  005F46  0E00               	movlw	0
 15313  005F48  0101               	movlb	1	; () banked
 15314  005F4A  6F6D               	movwf	(_dbuf+1)& (0+255),b
 15315  005F4C                     
 15316                           ; BSR set to: 1
 15317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 15318  005F4C  C07B  F070         	movff	ctoa@fp,pad@fp
 15319  005F50  C07C  F071         	movff	ctoa@fp+1,pad@fp+1
 15320  005F54  0E6C               	movlw	low _dbuf
 15321  005F56  0100               	movlb	0	; () banked
 15322  005F58  6F72               	movwf	pad@buf& (0+255),b
 15323  005F5A  0E01               	movlw	high _dbuf
 15324  005F5C  6F73               	movwf	(pad@buf+1)& (0+255),b
 15325  005F5E  C07E  F074         	movff	ctoa@w,pad@p
 15326  005F62  C07F  F075         	movff	ctoa@w+1,pad@p+1
 15327  005F66  EC70  F02C         	call	_pad	;wreg free
 15328  005F6A  C070  F07B         	movff	?_pad,?_ctoa
 15329  005F6E  C071  F07C         	movff	?_pad+1,?_ctoa+1
 15330  005F72  0012               	return		;funcret
 15331  005F74                     __end_of_ctoa:
 15332                           	opt callstack 0
 15333                           
 15334 ;; *************** function _pad *****************
 15335 ;; Defined at:
 15336 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 15337 ;; Parameters:    Size  Location     Type
 15338 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 15339 ;;		 -> vsnprintf@f(6), 
 15340 ;;  buf             2   18[BANK0 ] PTR unsigned char 
 15341 ;;		 -> dbuf(80), 
 15342 ;;  p               2   20[BANK0 ] int 
 15343 ;; Auto vars:     Size  Location     Type
 15344 ;;  w               2   25[BANK0 ] int 
 15345 ;;  i               2   23[BANK0 ] int 
 15346 ;; Return value:  Size  Location     Type
 15347 ;;                  2   16[BANK0 ] int 
 15348 ;; Registers used:
 15349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15350 ;; Tracked objects:
 15351 ;;		On entry : 0/0
 15352 ;;		On exit  : 0/0
 15353 ;;		Unchanged: 0/0
 15354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15356 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15358 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15359 ;;Total ram usage:       11 bytes
 15360 ;; Hardware stack levels used:    1
 15361 ;; Hardware stack levels required when called:    8
 15362 ;; This function calls:
 15363 ;;		_fputc
 15364 ;;		_fputs
 15365 ;;		_strlen
 15366 ;; This function is called by:
 15367 ;;		_ctoa
 15368 ;;		_dtoa
 15369 ;;		_efgtoa
 15370 ;;		_otoa
 15371 ;;		_utoa
 15372 ;;		_xtoa
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text36
 15377  0058E0                     __ptext36:
 15378                           	opt callstack 0
 15379  0058E0                     _pad:
 15380                           	opt callstack 17
 15381  0058E0                     
 15382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 15383  0058E0  A039               	btfss	_flags^0,0,c
 15384  0058E2  EF75  F02C         	goto	u9551
 15385  0058E6  EF77  F02C         	goto	u9550
 15386  0058EA                     u9551:
 15387  0058EA  EF81  F02C         	goto	l7917
 15388  0058EE                     u9550:
 15389  0058EE                     
 15390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 15391  0058EE  C072  F069         	movff	pad@buf,fputs@s
 15392  0058F2  C073  F06A         	movff	pad@buf+1,fputs@s+1
 15393  0058F6  C070  F06B         	movff	pad@fp,fputs@fp
 15394  0058FA  C071  F06C         	movff	pad@fp+1,fputs@fp+1
 15395  0058FE  EC80  F030         	call	_fputs	;wreg free
 15396  005902                     l7917:
 15397                           
 15398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 15399  005902  0100               	movlb	0	; () banked
 15400  005904  BF75               	btfsc	(pad@p+1)& (0+255),7,b
 15401  005906  EF87  F02C         	goto	u9561
 15402  00590A  EF89  F02C         	goto	u9560
 15403  00590E                     u9561:
 15404  00590E  EF8F  F02C         	goto	l7921
 15405  005912                     u9560:
 15406  005912                     
 15407                           ; BSR set to: 0
 15408  005912  C074  F079         	movff	pad@p,pad@w
 15409  005916  C075  F07A         	movff	pad@p+1,pad@w+1
 15410  00591A  EF93  F02C         	goto	l586
 15411  00591E                     l7921:
 15412                           
 15413                           ; BSR set to: 0
 15414  00591E  0E00               	movlw	0
 15415  005920  6F7A               	movwf	(pad@w+1)& (0+255),b
 15416  005922  0E00               	movlw	0
 15417  005924  6F79               	movwf	pad@w& (0+255),b
 15418  005926                     l586:
 15419                           
 15420                           ; BSR set to: 0
 15421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 15422  005926  0E00               	movlw	0
 15423  005928  6F78               	movwf	(pad@i+1)& (0+255),b
 15424  00592A  0E00               	movlw	0
 15425  00592C  6F77               	movwf	pad@i& (0+255),b
 15426                           
 15427                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15428  00592E  EFA6  F02C         	goto	l7927
 15429  005932                     l7923:
 15430                           
 15431                           ; BSR set to: 0
 15432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 15433  005932  0E00               	movlw	0
 15434  005934  6F61               	movwf	(fputc@c+1)& (0+255),b
 15435  005936  0E20               	movlw	32
 15436  005938  6F60               	movwf	fputc@c& (0+255),b
 15437  00593A  C070  F062         	movff	pad@fp,fputc@fp
 15438  00593E  C071  F063         	movff	pad@fp+1,fputc@fp+1
 15439  005942  EC0A  F02C         	call	_fputc	;wreg free
 15440  005946                     
 15441                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 15442  005946  0100               	movlb	0	; () banked
 15443  005948  4B77               	infsnz	pad@i& (0+255),f,b
 15444  00594A  2B78               	incf	(pad@i+1)& (0+255),f,b
 15445  00594C                     l7927:
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15449  00594C  5179               	movf	pad@w& (0+255),w,b
 15450  00594E  5D77               	subwf	pad@i& (0+255),w,b
 15451  005950  5178               	movf	(pad@i+1)& (0+255),w,b
 15452  005952  0A80               	xorlw	128
 15453  005954  6F76               	movwf	??_pad& (0+255),b
 15454  005956  517A               	movf	(pad@w+1)& (0+255),w,b
 15455  005958  0A80               	xorlw	128
 15456  00595A  5976               	subwfb	??_pad& (0+255),w,b
 15457  00595C  A0D8               	btfss	status,0,c
 15458  00595E  EFB3  F02C         	goto	u9571
 15459  005962  EFB5  F02C         	goto	u9570
 15460  005966                     u9571:
 15461  005966  EF99  F02C         	goto	l7923
 15462  00596A                     u9570:
 15463  00596A                     
 15464                           ; BSR set to: 0
 15465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 15466  00596A  B039               	btfsc	_flags^0,0,c
 15467  00596C  EFBA  F02C         	goto	u9581
 15468  005970  EFBC  F02C         	goto	u9580
 15469  005974                     u9581:
 15470  005974  EFC6  F02C         	goto	l7931
 15471  005978                     u9580:
 15472  005978                     
 15473                           ; BSR set to: 0
 15474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 15475  005978  C072  F069         	movff	pad@buf,fputs@s
 15476  00597C  C073  F06A         	movff	pad@buf+1,fputs@s+1
 15477  005980  C070  F06B         	movff	pad@fp,fputs@fp
 15478  005984  C071  F06C         	movff	pad@fp+1,fputs@fp+1
 15479  005988  EC80  F030         	call	_fputs	;wreg free
 15480  00598C                     l7931:
 15481                           
 15482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 15483  00598C  C072  F060         	movff	pad@buf,strlen@s
 15484  005990  C073  F061         	movff	pad@buf+1,strlen@s+1
 15485  005994  EC80  F031         	call	_strlen	;wreg free
 15486  005998  0100               	movlb	0	; () banked
 15487  00599A  5179               	movf	pad@w& (0+255),w,b
 15488  00599C  2560               	addwf	?_strlen& (0+255),w,b
 15489  00599E  6F70               	movwf	?_pad& (0+255),b
 15490  0059A0  517A               	movf	(pad@w+1)& (0+255),w,b
 15491  0059A2  2161               	addwfc	(?_strlen+1)& (0+255),w,b
 15492  0059A4  6F71               	movwf	(?_pad+1)& (0+255),b
 15493  0059A6                     
 15494                           ; BSR set to: 0
 15495  0059A6  0012               	return		;funcret
 15496  0059A8                     __end_of_pad:
 15497                           	opt callstack 0
 15498                           
 15499 ;; *************** function _strlen *****************
 15500 ;; Defined at:
 15501 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 15502 ;; Parameters:    Size  Location     Type
 15503 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 15504 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 15505 ;; Auto vars:     Size  Location     Type
 15506 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 15507 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), ticks(2), 
 15508 ;; Return value:  Size  Location     Type
 15509 ;;                  2    0[BANK0 ] unsigned int 
 15510 ;; Registers used:
 15511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15512 ;; Tracked objects:
 15513 ;;		On entry : 0/0
 15514 ;;		On exit  : 0/0
 15515 ;;		Unchanged: 0/0
 15516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15520 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15521 ;;Total ram usage:        4 bytes
 15522 ;; Hardware stack levels used:    1
 15523 ;; Hardware stack levels required when called:    5
 15524 ;; This function calls:
 15525 ;;		Nothing
 15526 ;; This function is called by:
 15527 ;;		_pad
 15528 ;;		_stoa
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532                           	psect	text37
 15533  006300                     __ptext37:
 15534                           	opt callstack 0
 15535  006300                     _strlen:
 15536                           	opt callstack 19
 15537  006300  C060  F062         	movff	strlen@s,strlen@a
 15538  006304  C061  F063         	movff	strlen@s+1,strlen@a+1
 15539  006308  EF89  F031         	goto	l7695
 15540  00630C                     l7693:
 15541  00630C  0100               	movlb	0	; () banked
 15542  00630E  4B60               	infsnz	strlen@s& (0+255),f,b
 15543  006310  2B61               	incf	(strlen@s+1)& (0+255),f,b
 15544  006312                     l7695:
 15545  006312  C060  FFD9         	movff	strlen@s,fsr2l
 15546  006316  C061  FFDA         	movff	strlen@s+1,fsr2h
 15547  00631A  50DF               	movf	indf2,w,c
 15548  00631C  A4D8               	btfss	status,2,c
 15549  00631E  EF93  F031         	goto	u9101
 15550  006322  EF95  F031         	goto	u9100
 15551  006326                     u9101:
 15552  006326  EF86  F031         	goto	l7693
 15553  00632A                     u9100:
 15554  00632A  0100               	movlb	0	; () banked
 15555  00632C  5162               	movf	strlen@a& (0+255),w,b
 15556  00632E  5D60               	subwf	strlen@s& (0+255),w,b
 15557  006330  6F60               	movwf	?_strlen& (0+255),b
 15558  006332  5163               	movf	(strlen@a+1)& (0+255),w,b
 15559  006334  5961               	subwfb	(strlen@s+1)& (0+255),w,b
 15560  006336  6F61               	movwf	(?_strlen+1)& (0+255),b
 15561  006338                     
 15562                           ; BSR set to: 0
 15563  006338  0012               	return		;funcret
 15564  00633A                     __end_of_strlen:
 15565                           	opt callstack 0
 15566                           
 15567 ;; *************** function _fputs *****************
 15568 ;; Defined at:
 15569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 15572 ;;		 -> dbuf(80), 
 15573 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
 15574 ;;		 -> vsnprintf@f(6), 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;  i               2   14[BANK0 ] int 
 15577 ;;  c               1   13[BANK0 ] unsigned char 
 15578 ;; Return value:  Size  Location     Type
 15579 ;;                  2    9[BANK0 ] int 
 15580 ;; Registers used:
 15581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15582 ;; Tracked objects:
 15583 ;;		On entry : 0/0
 15584 ;;		On exit  : 0/0
 15585 ;;		Unchanged: 0/0
 15586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15587 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15588 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15590 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15591 ;;Total ram usage:        7 bytes
 15592 ;; Hardware stack levels used:    1
 15593 ;; Hardware stack levels required when called:    7
 15594 ;; This function calls:
 15595 ;;		_fputc
 15596 ;; This function is called by:
 15597 ;;		_pad
 15598 ;; This function uses a non-reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text38
 15602  006100                     __ptext38:
 15603                           	opt callstack 0
 15604  006100                     _fputs:
 15605                           	opt callstack 17
 15606  006100  0E00               	movlw	0
 15607  006102  0100               	movlb	0	; () banked
 15608  006104  6F6F               	movwf	(fputs@i+1)& (0+255),b
 15609  006106  0E00               	movlw	0
 15610  006108  6F6E               	movwf	fputs@i& (0+255),b
 15611  00610A  EF93  F030         	goto	l7689
 15612  00610E                     l7685:
 15613                           
 15614                           ; BSR set to: 0
 15615  00610E  C06D  F060         	movff	fputs@c,fputc@c
 15616  006112  6B61               	clrf	(fputc@c+1)& (0+255),b
 15617  006114  C06B  F062         	movff	fputs@fp,fputc@fp
 15618  006118  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
 15619  00611C  EC0A  F02C         	call	_fputc	;wreg free
 15620  006120  0100               	movlb	0	; () banked
 15621  006122  4B6E               	infsnz	fputs@i& (0+255),f,b
 15622  006124  2B6F               	incf	(fputs@i+1)& (0+255),f,b
 15623  006126                     l7689:
 15624                           
 15625                           ; BSR set to: 0
 15626  006126  516E               	movf	fputs@i& (0+255),w,b
 15627  006128  2569               	addwf	fputs@s& (0+255),w,b
 15628  00612A  6ED9               	movwf	fsr2l,c
 15629  00612C  516F               	movf	(fputs@i+1)& (0+255),w,b
 15630  00612E  216A               	addwfc	(fputs@s+1)& (0+255),w,b
 15631  006130  6EDA               	movwf	fsr2h,c
 15632  006132  50DF               	movf	indf2,w,c
 15633  006134  6F6D               	movwf	fputs@c& (0+255),b
 15634  006136  516D               	movf	fputs@c& (0+255),w,b
 15635  006138  A4D8               	btfss	status,2,c
 15636  00613A  EFA1  F030         	goto	u9091
 15637  00613E  EFA3  F030         	goto	u9090
 15638  006142                     u9091:
 15639  006142  EF87  F030         	goto	l7685
 15640  006146                     u9090:
 15641  006146                     
 15642                           ; BSR set to: 0
 15643  006146  0012               	return		;funcret
 15644  006148                     __end_of_fputs:
 15645                           	opt callstack 0
 15646                           
 15647 ;; *************** function _fputc *****************
 15648 ;; Defined at:
 15649 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 15650 ;; Parameters:    Size  Location     Type
 15651 ;;  c               2    0[BANK0 ] int 
 15652 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
 15653 ;;		 -> vsnprintf@f(6), 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;		None
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  2    0[BANK0 ] int 
 15658 ;; Registers used:
 15659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15667 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15668 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15669 ;;Total ram usage:        9 bytes
 15670 ;; Hardware stack levels used:    1
 15671 ;; Hardware stack levels required when called:    6
 15672 ;; This function calls:
 15673 ;;		_putch
 15674 ;; This function is called by:
 15675 ;;		_pad
 15676 ;;		_stoa
 15677 ;;		_vfpfcnvrt
 15678 ;;		_fputs
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           	psect	text39
 15683  005814                     __ptext39:
 15684                           	opt callstack 0
 15685  005814                     _fputc:
 15686                           	opt callstack 17
 15687  005814  0100               	movlb	0	; () banked
 15688  005816  5162               	movf	fputc@fp& (0+255),w,b
 15689  005818  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 15690  00581A  B4D8               	btfsc	status,2,c
 15691  00581C  EF12  F02C         	goto	u9051
 15692  005820  EF14  F02C         	goto	u9050
 15693  005824                     u9051:
 15694  005824  EF1D  F02C         	goto	l7673
 15695  005828                     u9050:
 15696  005828                     
 15697                           ; BSR set to: 0
 15698  005828  5162               	movf	fputc@fp& (0+255),w,b
 15699  00582A  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 15700  00582C  A4D8               	btfss	status,2,c
 15701  00582E  EF1B  F02C         	goto	u9061
 15702  005832  EF1D  F02C         	goto	u9060
 15703  005836                     u9061:
 15704  005836  EF22  F02C         	goto	l7675
 15705  00583A                     u9060:
 15706  00583A                     l7673:
 15707                           
 15708                           ; BSR set to: 0
 15709  00583A  5160               	movf	fputc@c& (0+255),w,b
 15710  00583C  EC5F  F033         	call	_putch
 15711  005840  EF6F  F02C         	goto	l1665
 15712  005844                     l7675:
 15713                           
 15714                           ; BSR set to: 0
 15715  005844  EE20 F004          	lfsr	2,4
 15716  005848  5162               	movf	fputc@fp& (0+255),w,b
 15717  00584A  26D9               	addwf	fsr2l,f,c
 15718  00584C  5163               	movf	(fputc@fp+1)& (0+255),w,b
 15719  00584E  22DA               	addwfc	fsr2h,f,c
 15720  005850  50DE               	movf	postinc2,w,c
 15721  005852  10DE               	iorwf	postinc2,w,c
 15722  005854  B4D8               	btfsc	status,2,c
 15723  005856  EF2F  F02C         	goto	u9071
 15724  00585A  EF31  F02C         	goto	u9070
 15725  00585E                     u9071:
 15726  00585E  EF4C  F02C         	goto	l7679
 15727  005862                     u9070:
 15728  005862                     
 15729                           ; BSR set to: 0
 15730  005862  EE20 F004          	lfsr	2,4
 15731  005866  5162               	movf	fputc@fp& (0+255),w,b
 15732  005868  26D9               	addwf	fsr2l,f,c
 15733  00586A  5163               	movf	(fputc@fp+1)& (0+255),w,b
 15734  00586C  22DA               	addwfc	fsr2h,f,c
 15735  00586E  EE10 F002          	lfsr	1,2
 15736  005872  5162               	movf	fputc@fp& (0+255),w,b
 15737  005874  26E1               	addwf	fsr1l,f,c
 15738  005876  5163               	movf	(fputc@fp+1)& (0+255),w,b
 15739  005878  22E2               	addwfc	fsr1h,f,c
 15740  00587A  50DE               	movf	postinc2,w,c
 15741  00587C  5CE6               	subwf	postinc1,w,c
 15742  00587E  50E6               	movf	postinc1,w,c
 15743  005880  0A80               	xorlw	128
 15744  005882  6F68               	movwf	(??_fputc+4)& (0+255),b
 15745  005884  50DE               	movf	postinc2,w,c
 15746  005886  0A80               	xorlw	128
 15747  005888  5968               	subwfb	(??_fputc+4)& (0+255),w,b
 15748  00588A  B0D8               	btfsc	status,0,c
 15749  00588C  EF4A  F02C         	goto	u9081
 15750  005890  EF4C  F02C         	goto	u9080
 15751  005894                     u9081:
 15752  005894  EF6F  F02C         	goto	l1665
 15753  005898                     u9080:
 15754  005898                     l7679:
 15755                           
 15756                           ; BSR set to: 0
 15757  005898  EE20 F002          	lfsr	2,2
 15758  00589C  5162               	movf	fputc@fp& (0+255),w,b
 15759  00589E  26D9               	addwf	fsr2l,f,c
 15760  0058A0  5163               	movf	(fputc@fp+1)& (0+255),w,b
 15761  0058A2  22DA               	addwfc	fsr2h,f,c
 15762  0058A4  CFDE F064          	movff	postinc2,??_fputc
 15763  0058A8  CFDD F065          	movff	postdec2,??_fputc+1
 15764  0058AC  C062  FFD9         	movff	fputc@fp,fsr2l
 15765  0058B0  C063  FFDA         	movff	fputc@fp+1,fsr2h
 15766  0058B4  CFDE F066          	movff	postinc2,??_fputc+2
 15767  0058B8  CFDD F067          	movff	postdec2,??_fputc+3
 15768  0058BC  5164               	movf	??_fputc& (0+255),w,b
 15769  0058BE  2566               	addwf	(??_fputc+2)& (0+255),w,b
 15770  0058C0  6ED9               	movwf	fsr2l,c
 15771  0058C2  5165               	movf	(??_fputc+1)& (0+255),w,b
 15772  0058C4  2167               	addwfc	(??_fputc+3)& (0+255),w,b
 15773  0058C6  6EDA               	movwf	fsr2h,c
 15774  0058C8  C060  FFDF         	movff	fputc@c,indf2
 15775  0058CC  EE20 F002          	lfsr	2,2
 15776  0058D0  5162               	movf	fputc@fp& (0+255),w,b
 15777  0058D2  26D9               	addwf	fsr2l,f,c
 15778  0058D4  5163               	movf	(fputc@fp+1)& (0+255),w,b
 15779  0058D6  22DA               	addwfc	fsr2h,f,c
 15780  0058D8  2ADE               	incf	postinc2,f,c
 15781  0058DA  0E00               	movlw	0
 15782  0058DC  22DD               	addwfc	postdec2,f,c
 15783  0058DE                     l1665:
 15784  0058DE  0012               	return		;funcret
 15785  0058E0                     __end_of_fputc:
 15786                           	opt callstack 0
 15787                           
 15788 ;; *************** function _putch *****************
 15789 ;; Defined at:
 15790 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 15791 ;; Parameters:    Size  Location     Type
 15792 ;;  c               1    wreg     unsigned char 
 15793 ;; Auto vars:     Size  Location     Type
 15794 ;;  c               1    0[COMRAM] unsigned char 
 15795 ;; Return value:  Size  Location     Type
 15796 ;;                  1    wreg      void 
 15797 ;; Registers used:
 15798 ;;		wreg
 15799 ;; Tracked objects:
 15800 ;;		On entry : 0/0
 15801 ;;		On exit  : 0/0
 15802 ;;		Unchanged: 0/0
 15803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;Total ram usage:        0 bytes
 15809 ;; Hardware stack levels used:    1
 15810 ;; Hardware stack levels required when called:    5
 15811 ;; This function calls:
 15812 ;;		Nothing
 15813 ;; This function is called by:
 15814 ;;		_fputc
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text40
 15819  0066BE                     __ptext40:
 15820                           	opt callstack 0
 15821  0066BE                     _putch:
 15822                           	opt callstack 17
 15823  0066BE  0012               	return		;funcret
 15824  0066C0                     __end_of_putch:
 15825                           	opt callstack 0
 15826                           
 15827 ;; *************** function _atoi *****************
 15828 ;; Defined at:
 15829 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 15832 ;;		 -> STR_4(20), STR_3(14), 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  n               2   20[BANK0 ] int 
 15835 ;;  neg             2   13[BANK0 ] int 
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  2    7[BANK0 ] int 
 15838 ;; Registers used:
 15839 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/0
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15845 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15846 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15848 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15849 ;;Total ram usage:       15 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:    6
 15852 ;; This function calls:
 15853 ;;		___wmul
 15854 ;;		_isdigit
 15855 ;;		_isspace
 15856 ;; This function is called by:
 15857 ;;		_vfpfcnvrt
 15858 ;; This function uses a non-reentrant model
 15859 ;;
 15860                           
 15861                           	psect	text41
 15862  004404                     __ptext41:
 15863                           	opt callstack 0
 15864  004404                     _atoi:
 15865                           	opt callstack 20
 15866  004404  0E00               	movlw	0
 15867  004406  0100               	movlb	0	; () banked
 15868  004408  6F75               	movwf	(atoi@n+1)& (0+255),b
 15869  00440A  0E00               	movlw	0
 15870  00440C  6F74               	movwf	atoi@n& (0+255),b
 15871  00440E  0E00               	movlw	0
 15872  004410  6F6E               	movwf	(atoi@neg+1)& (0+255),b
 15873  004412  0E00               	movlw	0
 15874  004414  6F6D               	movwf	atoi@neg& (0+255),b
 15875  004416  EF0F  F022         	goto	l9179
 15876  00441A                     l9177:
 15877                           
 15878                           ; BSR set to: 0
 15879  00441A  4B67               	infsnz	atoi@s& (0+255),f,b
 15880  00441C  2B68               	incf	(atoi@s+1)& (0+255),f,b
 15881  00441E                     l9179:
 15882                           
 15883                           ; BSR set to: 0
 15884  00441E  0E01               	movlw	1
 15885  004420  6F73               	movwf	_atoi$2249& (0+255),b
 15886  004422                     
 15887                           ; BSR set to: 0
 15888  004422  C067  FFF6         	movff	atoi@s,tblptrl
 15889  004426  C068  FFF7         	movff	atoi@s+1,tblptrh
 15890  00442A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15891  00442A  6AF8               	clrf	tblptru,c
 15892  00442C                     	endif
 15893  00442C                     	if	0	;tblptru may be non-zero
 15894  00442C                     	endif
 15895  00442C  0008               	tblrd		*
 15896  00442E  50F5               	movf	tablat,w,c
 15897  004430  0A20               	xorlw	32
 15898  004432  B4D8               	btfsc	status,2,c
 15899  004434  EF1E  F022         	goto	u11931
 15900  004438  EF20  F022         	goto	u11930
 15901  00443C                     u11931:
 15902  00443C  EF3E  F022         	goto	l9187
 15903  004440                     u11930:
 15904  004440                     
 15905                           ; BSR set to: 0
 15906  004440  0EF7               	movlw	247
 15907  004442  6F69               	movwf	??_atoi& (0+255),b
 15908  004444  0EFF               	movlw	255
 15909  004446  6F6A               	movwf	(??_atoi+1)& (0+255),b
 15910  004448  C067  FFF6         	movff	atoi@s,tblptrl
 15911  00444C  C068  FFF7         	movff	atoi@s+1,tblptrh
 15912  004450                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15913  004450  6AF8               	clrf	tblptru,c
 15914  004452                     	endif
 15915  004452                     	if	0	;tblptru may be non-zero
 15916  004452                     	endif
 15917  004452  0008               	tblrd		*
 15918  004454  50F5               	movf	tablat,w,c
 15919  004456  6F6B               	movwf	(??_atoi+2)& (0+255),b
 15920  004458  6B6C               	clrf	(??_atoi+3)& (0+255),b
 15921  00445A  5169               	movf	??_atoi& (0+255),w,b
 15922  00445C  276B               	addwf	(??_atoi+2)& (0+255),f,b
 15923  00445E  516A               	movf	(??_atoi+1)& (0+255),w,b
 15924  004460  236C               	addwfc	(??_atoi+3)& (0+255),f,b
 15925  004462  516C               	movf	(??_atoi+3)& (0+255),w,b
 15926  004464  E109               	bnz	u11940
 15927  004466  0E05               	movlw	5
 15928  004468  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
 15929  00446A  A0D8               	btfss	status,0,c
 15930  00446C  EF3A  F022         	goto	u11941
 15931  004470  EF3C  F022         	goto	u11940
 15932  004474                     u11941:
 15933  004474  EF3E  F022         	goto	l9187
 15934  004478                     u11940:
 15935  004478                     
 15936                           ; BSR set to: 0
 15937  004478  0E00               	movlw	0
 15938  00447A  6F73               	movwf	_atoi$2249& (0+255),b
 15939  00447C                     l9187:
 15940                           
 15941                           ; BSR set to: 0
 15942  00447C  C073  F06F         	movff	_atoi$2249,_atoi$2248
 15943  004480  6B70               	clrf	(_atoi$2248+1)& (0+255),b
 15944  004482                     
 15945                           ; BSR set to: 0
 15946  004482  516F               	movf	_atoi$2248& (0+255),w,b
 15947  004484  1170               	iorwf	(_atoi$2248+1)& (0+255),w,b
 15948  004486  A4D8               	btfss	status,2,c
 15949  004488  EF48  F022         	goto	u11951
 15950  00448C  EF4A  F022         	goto	u11950
 15951  004490                     u11951:
 15952  004490  EF0D  F022         	goto	l9177
 15953  004494                     u11950:
 15954  004494  EF54  F022         	goto	l9197
 15955  004498                     l9193:
 15956                           
 15957                           ; BSR set to: 0
 15958  004498  0E00               	movlw	0
 15959  00449A  6F6E               	movwf	(atoi@neg+1)& (0+255),b
 15960  00449C  0E01               	movlw	1
 15961  00449E  6F6D               	movwf	atoi@neg& (0+255),b
 15962  0044A0                     l9195:
 15963                           
 15964                           ; BSR set to: 0
 15965  0044A0  4B67               	infsnz	atoi@s& (0+255),f,b
 15966  0044A2  2B68               	incf	(atoi@s+1)& (0+255),f,b
 15967  0044A4  EF8C  F022         	goto	l9203
 15968  0044A8                     l9197:
 15969                           
 15970                           ; BSR set to: 0
 15971  0044A8  C067  FFF6         	movff	atoi@s,tblptrl
 15972  0044AC  C068  FFF7         	movff	atoi@s+1,tblptrh
 15973  0044B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 15974  0044B0  6AF8               	clrf	tblptru,c
 15975  0044B2                     	endif
 15976  0044B2                     	if	0	;tblptru may be non-zero
 15977  0044B2                     	endif
 15978  0044B2  0008               	tblrd		*
 15979  0044B4  50F5               	movf	tablat,w,c
 15980  0044B6  6F69               	movwf	??_atoi& (0+255),b
 15981  0044B8  6B6A               	clrf	(??_atoi+1)& (0+255),b
 15982                           
 15983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15984                           ; Switch size 1, requested type "simple"
 15985                           ; Number of cases is 1, Range of values is 0 to 0
 15986                           ; switch strategies available:
 15987                           ; Name         Instructions Cycles
 15988                           ; simple_byte            4     3 (average)
 15989                           ;	Chosen strategy is simple_byte
 15990  0044BA  516A               	movf	(??_atoi+1)& (0+255),w,b
 15991  0044BC  0A00               	xorlw	0	; case 0
 15992  0044BE  B4D8               	btfsc	status,2,c
 15993  0044C0  EF64  F022         	goto	l10331
 15994  0044C4  EF8C  F022         	goto	l9203
 15995  0044C8                     l10331:
 15996                           
 15997                           ; BSR set to: 0
 15998                           ; Switch size 1, requested type "simple"
 15999                           ; Number of cases is 2, Range of values is 43 to 45
 16000                           ; switch strategies available:
 16001                           ; Name         Instructions Cycles
 16002                           ; simple_byte            7     4 (average)
 16003                           ;	Chosen strategy is simple_byte
 16004  0044C8  5169               	movf	??_atoi& (0+255),w,b
 16005  0044CA  0A2B               	xorlw	43	; case 43
 16006  0044CC  B4D8               	btfsc	status,2,c
 16007  0044CE  EF50  F022         	goto	l9195
 16008  0044D2  0A06               	xorlw	6	; case 45
 16009  0044D4  B4D8               	btfsc	status,2,c
 16010  0044D6  EF4C  F022         	goto	l9193
 16011  0044DA  EF8C  F022         	goto	l9203
 16012  0044DE                     l9199:
 16013                           
 16014                           ; BSR set to: 0
 16015  0044DE  C074  F060         	movff	atoi@n,___wmul@multiplier
 16016  0044E2  C075  F061         	movff	atoi@n+1,___wmul@multiplier+1
 16017  0044E6  0E00               	movlw	0
 16018  0044E8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16019  0044EA  0E0A               	movlw	10
 16020  0044EC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 16021  0044EE  EC93  F032         	call	___wmul	;wreg free
 16022  0044F2  C067  FFF6         	movff	atoi@s,tblptrl
 16023  0044F6  C068  FFF7         	movff	atoi@s+1,tblptrh
 16024  0044FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16025  0044FA  6AF8               	clrf	tblptru,c
 16026  0044FC                     	endif
 16027  0044FC                     	if	0	;tblptru may be non-zero
 16028  0044FC                     	endif
 16029  0044FC  0008               	tblrd		*
 16030  0044FE  50F5               	movf	tablat,w,c
 16031  004500  0100               	movlb	0	; () banked
 16032  004502  5F60               	subwf	?___wmul& (0+255),f,b
 16033  004504  0E00               	movlw	0
 16034  004506  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
 16035  004508  0E30               	movlw	48
 16036  00450A  2560               	addwf	?___wmul& (0+255),w,b
 16037  00450C  6F74               	movwf	atoi@n& (0+255),b
 16038  00450E  0E00               	movlw	0
 16039  004510  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 16040  004512  6F75               	movwf	(atoi@n+1)& (0+255),b
 16041  004514  EF50  F022         	goto	l9195
 16042  004518                     l9203:
 16043                           
 16044                           ; BSR set to: 0
 16045  004518  0ED0               	movlw	208
 16046  00451A  6F69               	movwf	??_atoi& (0+255),b
 16047  00451C  0EFF               	movlw	255
 16048  00451E  6F6A               	movwf	(??_atoi+1)& (0+255),b
 16049  004520  C067  FFF6         	movff	atoi@s,tblptrl
 16050  004524  C068  FFF7         	movff	atoi@s+1,tblptrh
 16051  004528                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16052  004528  6AF8               	clrf	tblptru,c
 16053  00452A                     	endif
 16054  00452A                     	if	0	;tblptru may be non-zero
 16055  00452A                     	endif
 16056  00452A  0008               	tblrd		*
 16057  00452C  50F5               	movf	tablat,w,c
 16058  00452E  6F6B               	movwf	(??_atoi+2)& (0+255),b
 16059  004530  6B6C               	clrf	(??_atoi+3)& (0+255),b
 16060  004532  5169               	movf	??_atoi& (0+255),w,b
 16061  004534  276B               	addwf	(??_atoi+2)& (0+255),f,b
 16062  004536  516A               	movf	(??_atoi+1)& (0+255),w,b
 16063  004538  236C               	addwfc	(??_atoi+3)& (0+255),f,b
 16064  00453A  516C               	movf	(??_atoi+3)& (0+255),w,b
 16065  00453C  E10A               	bnz	u11960
 16066  00453E  0E0A               	movlw	10
 16067  004540  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
 16068  004542  A0D8               	btfss	status,0,c
 16069  004544  EFA6  F022         	goto	u11961
 16070  004548  EFA9  F022         	goto	u11960
 16071  00454C                     u11961:
 16072  00454C  0E01               	movlw	1
 16073  00454E  EFAA  F022         	goto	u11970
 16074  004552                     u11960:
 16075  004552  0E00               	movlw	0
 16076  004554                     u11970:
 16077  004554  6F71               	movwf	_atoi$2250& (0+255),b
 16078  004556  6B72               	clrf	(_atoi$2250+1)& (0+255),b
 16079  004558                     
 16080                           ; BSR set to: 0
 16081  004558  5171               	movf	_atoi$2250& (0+255),w,b
 16082  00455A  1172               	iorwf	(_atoi$2250+1)& (0+255),w,b
 16083  00455C  A4D8               	btfss	status,2,c
 16084  00455E  EFB3  F022         	goto	u11981
 16085  004562  EFB5  F022         	goto	u11980
 16086  004566                     u11981:
 16087  004566  EF6F  F022         	goto	l9199
 16088  00456A                     u11980:
 16089  00456A                     
 16090                           ; BSR set to: 0
 16091  00456A  516D               	movf	atoi@neg& (0+255),w,b
 16092  00456C  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
 16093  00456E  A4D8               	btfss	status,2,c
 16094  004570  EFBC  F022         	goto	u11991
 16095  004574  EFBE  F022         	goto	u11990
 16096  004578                     u11991:
 16097  004578  EFCC  F022         	goto	l1611
 16098  00457C                     u11990:
 16099  00457C                     
 16100                           ; BSR set to: 0
 16101  00457C  C074  F069         	movff	atoi@n,??_atoi
 16102  004580  C075  F06A         	movff	atoi@n+1,??_atoi+1
 16103  004584  1F69               	comf	??_atoi& (0+255),f,b
 16104  004586  1F6A               	comf	(??_atoi+1)& (0+255),f,b
 16105  004588  4B69               	infsnz	??_atoi& (0+255),f,b
 16106  00458A  2B6A               	incf	(??_atoi+1)& (0+255),f,b
 16107  00458C  C069  F067         	movff	??_atoi,?_atoi
 16108  004590  C06A  F068         	movff	??_atoi+1,?_atoi+1
 16109  004594  EFD0  F022         	goto	l1614
 16110  004598                     l1611:
 16111                           
 16112                           ; BSR set to: 0
 16113  004598  C074  F067         	movff	atoi@n,?_atoi
 16114  00459C  C075  F068         	movff	atoi@n+1,?_atoi+1
 16115  0045A0                     l1614:
 16116                           
 16117                           ; BSR set to: 0
 16118  0045A0  0012               	return		;funcret
 16119  0045A2                     __end_of_atoi:
 16120                           	opt callstack 0
 16121                           
 16122 ;; *************** function _isspace *****************
 16123 ;; Defined at:
 16124 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 16125 ;; Parameters:    Size  Location     Type
 16126 ;;  c               2    0[BANK0 ] int 
 16127 ;; Auto vars:     Size  Location     Type
 16128 ;;		None
 16129 ;; Return value:  Size  Location     Type
 16130 ;;                  2    0[BANK0 ] int 
 16131 ;; Registers used:
 16132 ;;		wreg, status,2, status,0
 16133 ;; Tracked objects:
 16134 ;;		On entry : 0/0
 16135 ;;		On exit  : 0/0
 16136 ;;		Unchanged: 0/0
 16137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16141 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16142 ;;Total ram usage:        7 bytes
 16143 ;; Hardware stack levels used:    1
 16144 ;; Hardware stack levels required when called:    5
 16145 ;; This function calls:
 16146 ;;		Nothing
 16147 ;; This function is called by:
 16148 ;;		_atoi
 16149 ;; This function uses a non-reentrant model
 16150 ;;
 16151                           
 16152                           	psect	text42
 16153  005FC8                     __ptext42:
 16154                           	opt callstack 0
 16155  005FC8                     _isspace:
 16156                           	opt callstack 20
 16157  005FC8  0E01               	movlw	1
 16158  005FCA  0100               	movlb	0	; () banked
 16159  005FCC  6F66               	movwf	_isspace$2288& (0+255),b
 16160  005FCE                     
 16161                           ; BSR set to: 0
 16162  005FCE  0E20               	movlw	32
 16163  005FD0  1960               	xorwf	isspace@c& (0+255),w,b
 16164  005FD2  1161               	iorwf	(isspace@c+1)& (0+255),w,b
 16165  005FD4  B4D8               	btfsc	status,2,c
 16166  005FD6  EFEF  F02F         	goto	u10791
 16167  005FDA  EFF1  F02F         	goto	u10790
 16168  005FDE                     u10791:
 16169  005FDE  EF0A  F030         	goto	l8597
 16170  005FE2                     u10790:
 16171  005FE2                     
 16172                           ; BSR set to: 0
 16173  005FE2  0EF7               	movlw	247
 16174  005FE4  6F62               	movwf	??_isspace& (0+255),b
 16175  005FE6  0EFF               	movlw	255
 16176  005FE8  6F63               	movwf	(??_isspace+1)& (0+255),b
 16177  005FEA  C060  F064         	movff	isspace@c,??_isspace+2
 16178  005FEE  C061  F065         	movff	isspace@c+1,??_isspace+3
 16179  005FF2  5162               	movf	??_isspace& (0+255),w,b
 16180  005FF4  2764               	addwf	(??_isspace+2)& (0+255),f,b
 16181  005FF6  5163               	movf	(??_isspace+1)& (0+255),w,b
 16182  005FF8  2365               	addwfc	(??_isspace+3)& (0+255),f,b
 16183  005FFA  5165               	movf	(??_isspace+3)& (0+255),w,b
 16184  005FFC  E109               	bnz	u10800
 16185  005FFE  0E05               	movlw	5
 16186  006000  5D64               	subwf	(??_isspace+2)& (0+255),w,b
 16187  006002  A0D8               	btfss	status,0,c
 16188  006004  EF06  F030         	goto	u10801
 16189  006008  EF08  F030         	goto	u10800
 16190  00600C                     u10801:
 16191  00600C  EF0A  F030         	goto	l8597
 16192  006010                     u10800:
 16193  006010                     
 16194                           ; BSR set to: 0
 16195  006010  0E00               	movlw	0
 16196  006012  6F66               	movwf	_isspace$2288& (0+255),b
 16197  006014                     l8597:
 16198                           
 16199                           ; BSR set to: 0
 16200  006014  C066  F060         	movff	_isspace$2288,?_isspace
 16201  006018  6B61               	clrf	(?_isspace+1)& (0+255),b
 16202  00601A                     
 16203                           ; BSR set to: 0
 16204  00601A  0012               	return		;funcret
 16205  00601C                     __end_of_isspace:
 16206                           	opt callstack 0
 16207                           
 16208 ;; *************** function _isdigit *****************
 16209 ;; Defined at:
 16210 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;  c               2    0[BANK0 ] int 
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;		None
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  2    0[BANK0 ] int 
 16217 ;; Registers used:
 16218 ;;		wreg, status,2, status,0
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16226 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16227 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16228 ;;Total ram usage:        6 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    5
 16231 ;; This function calls:
 16232 ;;		Nothing
 16233 ;; This function is called by:
 16234 ;;		_vfpfcnvrt
 16235 ;;		_atoi
 16236 ;; This function uses a non-reentrant model
 16237 ;;
 16238                           
 16239                           	psect	text43
 16240  00633A                     __ptext43:
 16241                           	opt callstack 0
 16242  00633A                     _isdigit:
 16243                           	opt callstack 21
 16244  00633A  0ED0               	movlw	208
 16245  00633C  0100               	movlb	0	; () banked
 16246  00633E  6F62               	movwf	??_isdigit& (0+255),b
 16247  006340  0EFF               	movlw	255
 16248  006342  6F63               	movwf	(??_isdigit+1)& (0+255),b
 16249  006344  C060  F064         	movff	isdigit@c,??_isdigit+2
 16250  006348  C061  F065         	movff	isdigit@c+1,??_isdigit+3
 16251  00634C  5162               	movf	??_isdigit& (0+255),w,b
 16252  00634E  2764               	addwf	(??_isdigit+2)& (0+255),f,b
 16253  006350  5163               	movf	(??_isdigit+1)& (0+255),w,b
 16254  006352  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
 16255  006354  5165               	movf	(??_isdigit+3)& (0+255),w,b
 16256  006356  E10A               	bnz	u9870
 16257  006358  0E0A               	movlw	10
 16258  00635A  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
 16259  00635C  A0D8               	btfss	status,0,c
 16260  00635E  EFB3  F031         	goto	u9871
 16261  006362  EFB6  F031         	goto	u9870
 16262  006366                     u9871:
 16263  006366  0E01               	movlw	1
 16264  006368  EFB7  F031         	goto	u9880
 16265  00636C                     u9870:
 16266  00636C  0E00               	movlw	0
 16267  00636E                     u9880:
 16268  00636E  6F60               	movwf	?_isdigit& (0+255),b
 16269  006370  6B61               	clrf	(?_isdigit+1)& (0+255),b
 16270  006372                     
 16271                           ; BSR set to: 0
 16272  006372  0012               	return		;funcret
 16273  006374                     __end_of_isdigit:
 16274                           	opt callstack 0
 16275                           
 16276 ;; *************** function ___wmul *****************
 16277 ;; Defined at:
 16278 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 16279 ;; Parameters:    Size  Location     Type
 16280 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16281 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;  product         2    4[BANK0 ] unsigned int 
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  2    0[BANK0 ] unsigned int 
 16286 ;; Registers used:
 16287 ;;		wreg, status,2, status,0, prodl, prodh
 16288 ;; Tracked objects:
 16289 ;;		On entry : 0/0
 16290 ;;		On exit  : 0/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16294 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16296 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16297 ;;Total ram usage:        6 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; Hardware stack levels required when called:    5
 16300 ;; This function calls:
 16301 ;;		Nothing
 16302 ;; This function is called by:
 16303 ;;		_atoi
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text44
 16308  006526                     __ptext44:
 16309                           	opt callstack 0
 16310  006526                     ___wmul:
 16311                           	opt callstack 20
 16312  006526  0100               	movlb	0	; () banked
 16313  006528  5160               	movf	___wmul@multiplier& (0+255),w,b
 16314  00652A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 16315  00652C  CFF3 F064          	movff	prodl,___wmul@product
 16316  006530  CFF4 F065          	movff	prodh,___wmul@product+1
 16317  006534  5160               	movf	___wmul@multiplier& (0+255),w,b
 16318  006536  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16319  006538  50F3               	movf	243,w,c
 16320  00653A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 16321  00653C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16322  00653E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 16323  006540  50F3               	movf	243,w,c
 16324  006542  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 16325  006544                     
 16326                           ; BSR set to: 0
 16327  006544  C064  F060         	movff	___wmul@product,?___wmul
 16328  006548  C065  F061         	movff	___wmul@product+1,?___wmul+1
 16329  00654C                     
 16330                           ; BSR set to: 0
 16331  00654C  0012               	return		;funcret
 16332  00654E                     __end_of___wmul:
 16333                           	opt callstack 0
 16334                           
 16335 ;; *************** function _lcd_init *****************
 16336 ;; Defined at:
 16337 ;;		line 32 in file "lib_ili9341.c"
 16338 ;; Parameters:    Size  Location     Type
 16339 ;;		None
 16340 ;; Auto vars:     Size  Location     Type
 16341 ;;		None
 16342 ;; Return value:  Size  Location     Type
 16343 ;;                  1    wreg      void 
 16344 ;; Registers used:
 16345 ;;		wreg, status,2, status,0, cstack
 16346 ;; Tracked objects:
 16347 ;;		On entry : 0/0
 16348 ;;		On exit  : 0/0
 16349 ;;		Unchanged: 0/0
 16350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16355 ;;Total ram usage:        0 bytes
 16356 ;; Hardware stack levels used:    1
 16357 ;; Hardware stack levels required when called:   10
 16358 ;; This function calls:
 16359 ;;		_lcd_fill
 16360 ;;		_lcd_send
 16361 ;;		_msDelay
 16362 ;; This function is called by:
 16363 ;;		_main
 16364 ;; This function uses a non-reentrant model
 16365 ;;
 16366                           
 16367                           	psect	text45
 16368  002660                     __ptext45:
 16369                           	opt callstack 0
 16370  002660                     _lcd_init:
 16371                           	opt callstack 20
 16372  002660                     
 16373                           ;lib_ili9341.c: 35:     lcd_send(0, 0x01);
 16374  002660  0E01               	movlw	1
 16375  002662  0100               	movlb	0	; () banked
 16376  002664  6F61               	movwf	lcd_send@value& (0+255),b
 16377  002666  0E00               	movlw	0
 16378  002668  ECDC  F032         	call	_lcd_send
 16379  00266C                     
 16380                           ;lib_ili9341.c: 36:     msDelay(150);
 16381  00266C  0E96               	movlw	150
 16382  00266E  ECD7  F031         	call	_msDelay
 16383  002672                     
 16384                           ;lib_ili9341.c: 38:     lcd_send(0,0xEF);
 16385  002672  0EEF               	movlw	239
 16386  002674  0100               	movlb	0	; () banked
 16387  002676  6F61               	movwf	lcd_send@value& (0+255),b
 16388  002678  0E00               	movlw	0
 16389  00267A  ECDC  F032         	call	_lcd_send
 16390  00267E                     
 16391                           ;lib_ili9341.c: 39:     lcd_send(1,0x03);
 16392  00267E  0E03               	movlw	3
 16393  002680  0100               	movlb	0	; () banked
 16394  002682  6F61               	movwf	lcd_send@value& (0+255),b
 16395  002684  0E01               	movlw	1
 16396  002686  ECDC  F032         	call	_lcd_send
 16397  00268A                     
 16398                           ;lib_ili9341.c: 40:     lcd_send(1,0x80);
 16399  00268A  0E80               	movlw	128
 16400  00268C  0100               	movlb	0	; () banked
 16401  00268E  6F61               	movwf	lcd_send@value& (0+255),b
 16402  002690  0E01               	movlw	1
 16403  002692  ECDC  F032         	call	_lcd_send
 16404  002696                     
 16405                           ;lib_ili9341.c: 41:     lcd_send(1,0x02);
 16406  002696  0E02               	movlw	2
 16407  002698  0100               	movlb	0	; () banked
 16408  00269A  6F61               	movwf	lcd_send@value& (0+255),b
 16409  00269C  0E01               	movlw	1
 16410  00269E  ECDC  F032         	call	_lcd_send
 16411  0026A2                     
 16412                           ;lib_ili9341.c: 42:     lcd_send(0,0xCF);
 16413  0026A2  0ECF               	movlw	207
 16414  0026A4  0100               	movlb	0	; () banked
 16415  0026A6  6F61               	movwf	lcd_send@value& (0+255),b
 16416  0026A8  0E00               	movlw	0
 16417  0026AA  ECDC  F032         	call	_lcd_send
 16418  0026AE                     
 16419                           ;lib_ili9341.c: 43:     lcd_send(1,0x00);
 16420  0026AE  0E00               	movlw	0
 16421  0026B0  0100               	movlb	0	; () banked
 16422  0026B2  6F61               	movwf	lcd_send@value& (0+255),b
 16423  0026B4  0E01               	movlw	1
 16424  0026B6  ECDC  F032         	call	_lcd_send
 16425  0026BA                     
 16426                           ;lib_ili9341.c: 44:     lcd_send(1,0XC1);
 16427  0026BA  0EC1               	movlw	193
 16428  0026BC  0100               	movlb	0	; () banked
 16429  0026BE  6F61               	movwf	lcd_send@value& (0+255),b
 16430  0026C0  0E01               	movlw	1
 16431  0026C2  ECDC  F032         	call	_lcd_send
 16432  0026C6                     
 16433                           ;lib_ili9341.c: 45:     lcd_send(1,0X30);
 16434  0026C6  0E30               	movlw	48
 16435  0026C8  0100               	movlb	0	; () banked
 16436  0026CA  6F61               	movwf	lcd_send@value& (0+255),b
 16437  0026CC  0E01               	movlw	1
 16438  0026CE  ECDC  F032         	call	_lcd_send
 16439  0026D2                     
 16440                           ;lib_ili9341.c: 46:     lcd_send(0,0xED);
 16441  0026D2  0EED               	movlw	237
 16442  0026D4  0100               	movlb	0	; () banked
 16443  0026D6  6F61               	movwf	lcd_send@value& (0+255),b
 16444  0026D8  0E00               	movlw	0
 16445  0026DA  ECDC  F032         	call	_lcd_send
 16446  0026DE                     
 16447                           ;lib_ili9341.c: 47:     lcd_send(1,0x64);
 16448  0026DE  0E64               	movlw	100
 16449  0026E0  0100               	movlb	0	; () banked
 16450  0026E2  6F61               	movwf	lcd_send@value& (0+255),b
 16451  0026E4  0E01               	movlw	1
 16452  0026E6  ECDC  F032         	call	_lcd_send
 16453  0026EA                     
 16454                           ;lib_ili9341.c: 48:     lcd_send(1,0x03);
 16455  0026EA  0E03               	movlw	3
 16456  0026EC  0100               	movlb	0	; () banked
 16457  0026EE  6F61               	movwf	lcd_send@value& (0+255),b
 16458  0026F0  0E01               	movlw	1
 16459  0026F2  ECDC  F032         	call	_lcd_send
 16460  0026F6                     
 16461                           ;lib_ili9341.c: 49:     lcd_send(1,0X12);
 16462  0026F6  0E12               	movlw	18
 16463  0026F8  0100               	movlb	0	; () banked
 16464  0026FA  6F61               	movwf	lcd_send@value& (0+255),b
 16465  0026FC  0E01               	movlw	1
 16466  0026FE  ECDC  F032         	call	_lcd_send
 16467  002702                     
 16468                           ;lib_ili9341.c: 50:     lcd_send(1,0X81);
 16469  002702  0E81               	movlw	129
 16470  002704  0100               	movlb	0	; () banked
 16471  002706  6F61               	movwf	lcd_send@value& (0+255),b
 16472  002708  0E01               	movlw	1
 16473  00270A  ECDC  F032         	call	_lcd_send
 16474  00270E                     
 16475                           ;lib_ili9341.c: 51:     lcd_send(0,0xE8);
 16476  00270E  0EE8               	movlw	232
 16477  002710  0100               	movlb	0	; () banked
 16478  002712  6F61               	movwf	lcd_send@value& (0+255),b
 16479  002714  0E00               	movlw	0
 16480  002716  ECDC  F032         	call	_lcd_send
 16481  00271A                     
 16482                           ;lib_ili9341.c: 52:     lcd_send(1,0x85);
 16483  00271A  0E85               	movlw	133
 16484  00271C  0100               	movlb	0	; () banked
 16485  00271E  6F61               	movwf	lcd_send@value& (0+255),b
 16486  002720  0E01               	movlw	1
 16487  002722  ECDC  F032         	call	_lcd_send
 16488  002726                     
 16489                           ;lib_ili9341.c: 53:     lcd_send(1,0x00);
 16490  002726  0E00               	movlw	0
 16491  002728  0100               	movlb	0	; () banked
 16492  00272A  6F61               	movwf	lcd_send@value& (0+255),b
 16493  00272C  0E01               	movlw	1
 16494  00272E  ECDC  F032         	call	_lcd_send
 16495  002732                     
 16496                           ;lib_ili9341.c: 54:     lcd_send(1,0x78);
 16497  002732  0E78               	movlw	120
 16498  002734  0100               	movlb	0	; () banked
 16499  002736  6F61               	movwf	lcd_send@value& (0+255),b
 16500  002738  0E01               	movlw	1
 16501  00273A  ECDC  F032         	call	_lcd_send
 16502  00273E                     
 16503                           ;lib_ili9341.c: 55:     lcd_send(0,0xCB);
 16504  00273E  0ECB               	movlw	203
 16505  002740  0100               	movlb	0	; () banked
 16506  002742  6F61               	movwf	lcd_send@value& (0+255),b
 16507  002744  0E00               	movlw	0
 16508  002746  ECDC  F032         	call	_lcd_send
 16509  00274A                     
 16510                           ;lib_ili9341.c: 56:     lcd_send(1,0x39);
 16511  00274A  0E39               	movlw	57
 16512  00274C  0100               	movlb	0	; () banked
 16513  00274E  6F61               	movwf	lcd_send@value& (0+255),b
 16514  002750  0E01               	movlw	1
 16515  002752  ECDC  F032         	call	_lcd_send
 16516  002756                     
 16517                           ;lib_ili9341.c: 57:     lcd_send(1,0x2C);
 16518  002756  0E2C               	movlw	44
 16519  002758  0100               	movlb	0	; () banked
 16520  00275A  6F61               	movwf	lcd_send@value& (0+255),b
 16521  00275C  0E01               	movlw	1
 16522  00275E  ECDC  F032         	call	_lcd_send
 16523  002762                     
 16524                           ;lib_ili9341.c: 58:     lcd_send(1,0x00);
 16525  002762  0E00               	movlw	0
 16526  002764  0100               	movlb	0	; () banked
 16527  002766  6F61               	movwf	lcd_send@value& (0+255),b
 16528  002768  0E01               	movlw	1
 16529  00276A  ECDC  F032         	call	_lcd_send
 16530  00276E                     
 16531                           ;lib_ili9341.c: 59:     lcd_send(1,0x34);
 16532  00276E  0E34               	movlw	52
 16533  002770  0100               	movlb	0	; () banked
 16534  002772  6F61               	movwf	lcd_send@value& (0+255),b
 16535  002774  0E01               	movlw	1
 16536  002776  ECDC  F032         	call	_lcd_send
 16537  00277A                     
 16538                           ;lib_ili9341.c: 60:     lcd_send(1,0x02);
 16539  00277A  0E02               	movlw	2
 16540  00277C  0100               	movlb	0	; () banked
 16541  00277E  6F61               	movwf	lcd_send@value& (0+255),b
 16542  002780  0E01               	movlw	1
 16543  002782  ECDC  F032         	call	_lcd_send
 16544  002786                     
 16545                           ;lib_ili9341.c: 61:     lcd_send(0,0xF7);
 16546  002786  0EF7               	movlw	247
 16547  002788  0100               	movlb	0	; () banked
 16548  00278A  6F61               	movwf	lcd_send@value& (0+255),b
 16549  00278C  0E00               	movlw	0
 16550  00278E  ECDC  F032         	call	_lcd_send
 16551  002792                     
 16552                           ;lib_ili9341.c: 62:     lcd_send(1,0x20);
 16553  002792  0E20               	movlw	32
 16554  002794  0100               	movlb	0	; () banked
 16555  002796  6F61               	movwf	lcd_send@value& (0+255),b
 16556  002798  0E01               	movlw	1
 16557  00279A  ECDC  F032         	call	_lcd_send
 16558  00279E                     
 16559                           ;lib_ili9341.c: 63:     lcd_send(0,0xEA);
 16560  00279E  0EEA               	movlw	234
 16561  0027A0  0100               	movlb	0	; () banked
 16562  0027A2  6F61               	movwf	lcd_send@value& (0+255),b
 16563  0027A4  0E00               	movlw	0
 16564  0027A6  ECDC  F032         	call	_lcd_send
 16565  0027AA                     
 16566                           ;lib_ili9341.c: 64:     lcd_send(1,0x00);
 16567  0027AA  0E00               	movlw	0
 16568  0027AC  0100               	movlb	0	; () banked
 16569  0027AE  6F61               	movwf	lcd_send@value& (0+255),b
 16570  0027B0  0E01               	movlw	1
 16571  0027B2  ECDC  F032         	call	_lcd_send
 16572  0027B6                     
 16573                           ;lib_ili9341.c: 65:     lcd_send(1,0x00);
 16574  0027B6  0E00               	movlw	0
 16575  0027B8  0100               	movlb	0	; () banked
 16576  0027BA  6F61               	movwf	lcd_send@value& (0+255),b
 16577  0027BC  0E01               	movlw	1
 16578  0027BE  ECDC  F032         	call	_lcd_send
 16579  0027C2                     
 16580                           ;lib_ili9341.c: 66:     lcd_send(0,0xC0);
 16581  0027C2  0EC0               	movlw	192
 16582  0027C4  0100               	movlb	0	; () banked
 16583  0027C6  6F61               	movwf	lcd_send@value& (0+255),b
 16584  0027C8  0E00               	movlw	0
 16585  0027CA  ECDC  F032         	call	_lcd_send
 16586  0027CE                     
 16587                           ;lib_ili9341.c: 67:     lcd_send(1,0x23);
 16588  0027CE  0E23               	movlw	35
 16589  0027D0  0100               	movlb	0	; () banked
 16590  0027D2  6F61               	movwf	lcd_send@value& (0+255),b
 16591  0027D4  0E01               	movlw	1
 16592  0027D6  ECDC  F032         	call	_lcd_send
 16593  0027DA                     
 16594                           ;lib_ili9341.c: 68:     lcd_send(0,0xC1);
 16595  0027DA  0EC1               	movlw	193
 16596  0027DC  0100               	movlb	0	; () banked
 16597  0027DE  6F61               	movwf	lcd_send@value& (0+255),b
 16598  0027E0  0E00               	movlw	0
 16599  0027E2  ECDC  F032         	call	_lcd_send
 16600  0027E6                     
 16601                           ;lib_ili9341.c: 69:     lcd_send(1,0x10);
 16602  0027E6  0E10               	movlw	16
 16603  0027E8  0100               	movlb	0	; () banked
 16604  0027EA  6F61               	movwf	lcd_send@value& (0+255),b
 16605  0027EC  0E01               	movlw	1
 16606  0027EE  ECDC  F032         	call	_lcd_send
 16607  0027F2                     
 16608                           ;lib_ili9341.c: 70:     lcd_send(0,0xC5);
 16609  0027F2  0EC5               	movlw	197
 16610  0027F4  0100               	movlb	0	; () banked
 16611  0027F6  6F61               	movwf	lcd_send@value& (0+255),b
 16612  0027F8  0E00               	movlw	0
 16613  0027FA  ECDC  F032         	call	_lcd_send
 16614  0027FE                     
 16615                           ;lib_ili9341.c: 71:     lcd_send(1,0x3e);
 16616  0027FE  0E3E               	movlw	62
 16617  002800  0100               	movlb	0	; () banked
 16618  002802  6F61               	movwf	lcd_send@value& (0+255),b
 16619  002804  0E01               	movlw	1
 16620  002806  ECDC  F032         	call	_lcd_send
 16621  00280A                     
 16622                           ;lib_ili9341.c: 72:     lcd_send(1,0x28);
 16623  00280A  0E28               	movlw	40
 16624  00280C  0100               	movlb	0	; () banked
 16625  00280E  6F61               	movwf	lcd_send@value& (0+255),b
 16626  002810  0E01               	movlw	1
 16627  002812  ECDC  F032         	call	_lcd_send
 16628  002816                     
 16629                           ;lib_ili9341.c: 73:     lcd_send(0,0xC7);
 16630  002816  0EC7               	movlw	199
 16631  002818  0100               	movlb	0	; () banked
 16632  00281A  6F61               	movwf	lcd_send@value& (0+255),b
 16633  00281C  0E00               	movlw	0
 16634  00281E  ECDC  F032         	call	_lcd_send
 16635  002822                     
 16636                           ;lib_ili9341.c: 74:     lcd_send(1,0x86);
 16637  002822  0E86               	movlw	134
 16638  002824  0100               	movlb	0	; () banked
 16639  002826  6F61               	movwf	lcd_send@value& (0+255),b
 16640  002828  0E01               	movlw	1
 16641  00282A  ECDC  F032         	call	_lcd_send
 16642  00282E                     
 16643                           ;lib_ili9341.c: 75:     lcd_send(0,0x36);
 16644  00282E  0E36               	movlw	54
 16645  002830  0100               	movlb	0	; () banked
 16646  002832  6F61               	movwf	lcd_send@value& (0+255),b
 16647  002834  0E00               	movlw	0
 16648  002836  ECDC  F032         	call	_lcd_send
 16649  00283A                     
 16650                           ;lib_ili9341.c: 76:     lcd_send(1,0x48);
 16651  00283A  0E48               	movlw	72
 16652  00283C  0100               	movlb	0	; () banked
 16653  00283E  6F61               	movwf	lcd_send@value& (0+255),b
 16654  002840  0E01               	movlw	1
 16655  002842  ECDC  F032         	call	_lcd_send
 16656  002846                     
 16657                           ;lib_ili9341.c: 77:     lcd_send(0,0x3A);
 16658  002846  0E3A               	movlw	58
 16659  002848  0100               	movlb	0	; () banked
 16660  00284A  6F61               	movwf	lcd_send@value& (0+255),b
 16661  00284C  0E00               	movlw	0
 16662  00284E  ECDC  F032         	call	_lcd_send
 16663  002852                     
 16664                           ;lib_ili9341.c: 78:     lcd_send(1,0x55);
 16665  002852  0E55               	movlw	85
 16666  002854  0100               	movlb	0	; () banked
 16667  002856  6F61               	movwf	lcd_send@value& (0+255),b
 16668  002858  0E01               	movlw	1
 16669  00285A  ECDC  F032         	call	_lcd_send
 16670  00285E                     
 16671                           ;lib_ili9341.c: 79:     lcd_send(0,0xB1);
 16672  00285E  0EB1               	movlw	177
 16673  002860  0100               	movlb	0	; () banked
 16674  002862  6F61               	movwf	lcd_send@value& (0+255),b
 16675  002864  0E00               	movlw	0
 16676  002866  ECDC  F032         	call	_lcd_send
 16677  00286A                     
 16678                           ;lib_ili9341.c: 80:     lcd_send(1,0x00);
 16679  00286A  0E00               	movlw	0
 16680  00286C  0100               	movlb	0	; () banked
 16681  00286E  6F61               	movwf	lcd_send@value& (0+255),b
 16682  002870  0E01               	movlw	1
 16683  002872  ECDC  F032         	call	_lcd_send
 16684  002876                     
 16685                           ;lib_ili9341.c: 81:     lcd_send(1,0x18);
 16686  002876  0E18               	movlw	24
 16687  002878  0100               	movlb	0	; () banked
 16688  00287A  6F61               	movwf	lcd_send@value& (0+255),b
 16689  00287C  0E01               	movlw	1
 16690  00287E  ECDC  F032         	call	_lcd_send
 16691  002882                     
 16692                           ;lib_ili9341.c: 82:     lcd_send(0,0xB6);
 16693  002882  0EB6               	movlw	182
 16694  002884  0100               	movlb	0	; () banked
 16695  002886  6F61               	movwf	lcd_send@value& (0+255),b
 16696  002888  0E00               	movlw	0
 16697  00288A  ECDC  F032         	call	_lcd_send
 16698  00288E                     
 16699                           ;lib_ili9341.c: 83:     lcd_send(1,0x08);
 16700  00288E  0E08               	movlw	8
 16701  002890  0100               	movlb	0	; () banked
 16702  002892  6F61               	movwf	lcd_send@value& (0+255),b
 16703  002894  0E01               	movlw	1
 16704  002896  ECDC  F032         	call	_lcd_send
 16705  00289A                     
 16706                           ;lib_ili9341.c: 84:     lcd_send(1,0x82);
 16707  00289A  0E82               	movlw	130
 16708  00289C  0100               	movlb	0	; () banked
 16709  00289E  6F61               	movwf	lcd_send@value& (0+255),b
 16710  0028A0  0E01               	movlw	1
 16711  0028A2  ECDC  F032         	call	_lcd_send
 16712  0028A6                     
 16713                           ;lib_ili9341.c: 85:     lcd_send(1,0x27);
 16714  0028A6  0E27               	movlw	39
 16715  0028A8  0100               	movlb	0	; () banked
 16716  0028AA  6F61               	movwf	lcd_send@value& (0+255),b
 16717  0028AC  0E01               	movlw	1
 16718  0028AE  ECDC  F032         	call	_lcd_send
 16719  0028B2                     
 16720                           ;lib_ili9341.c: 86:     lcd_send(0,0xF2);
 16721  0028B2  0EF2               	movlw	242
 16722  0028B4  0100               	movlb	0	; () banked
 16723  0028B6  6F61               	movwf	lcd_send@value& (0+255),b
 16724  0028B8  0E00               	movlw	0
 16725  0028BA  ECDC  F032         	call	_lcd_send
 16726  0028BE                     
 16727                           ;lib_ili9341.c: 87:     lcd_send(1,0x00);
 16728  0028BE  0E00               	movlw	0
 16729  0028C0  0100               	movlb	0	; () banked
 16730  0028C2  6F61               	movwf	lcd_send@value& (0+255),b
 16731  0028C4  0E01               	movlw	1
 16732  0028C6  ECDC  F032         	call	_lcd_send
 16733  0028CA                     
 16734                           ;lib_ili9341.c: 88:     lcd_send(0,0x26);
 16735  0028CA  0E26               	movlw	38
 16736  0028CC  0100               	movlb	0	; () banked
 16737  0028CE  6F61               	movwf	lcd_send@value& (0+255),b
 16738  0028D0  0E00               	movlw	0
 16739  0028D2  ECDC  F032         	call	_lcd_send
 16740  0028D6                     
 16741                           ;lib_ili9341.c: 89:     lcd_send(1,0x01);
 16742  0028D6  0E01               	movlw	1
 16743  0028D8  0100               	movlb	0	; () banked
 16744  0028DA  6F61               	movwf	lcd_send@value& (0+255),b
 16745  0028DC  0E01               	movlw	1
 16746  0028DE  ECDC  F032         	call	_lcd_send
 16747  0028E2                     
 16748                           ;lib_ili9341.c: 90:     lcd_send(0,0xE0);
 16749  0028E2  0EE0               	movlw	224
 16750  0028E4  0100               	movlb	0	; () banked
 16751  0028E6  6F61               	movwf	lcd_send@value& (0+255),b
 16752  0028E8  0E00               	movlw	0
 16753  0028EA  ECDC  F032         	call	_lcd_send
 16754  0028EE                     
 16755                           ;lib_ili9341.c: 91:     lcd_send(1,0x0F);
 16756  0028EE  0E0F               	movlw	15
 16757  0028F0  0100               	movlb	0	; () banked
 16758  0028F2  6F61               	movwf	lcd_send@value& (0+255),b
 16759  0028F4  0E01               	movlw	1
 16760  0028F6  ECDC  F032         	call	_lcd_send
 16761  0028FA                     
 16762                           ;lib_ili9341.c: 92:     lcd_send(1,0x31);
 16763  0028FA  0E31               	movlw	49
 16764  0028FC  0100               	movlb	0	; () banked
 16765  0028FE  6F61               	movwf	lcd_send@value& (0+255),b
 16766  002900  0E01               	movlw	1
 16767  002902  ECDC  F032         	call	_lcd_send
 16768  002906                     
 16769                           ;lib_ili9341.c: 93:     lcd_send(1,0x2B);
 16770  002906  0E2B               	movlw	43
 16771  002908  0100               	movlb	0	; () banked
 16772  00290A  6F61               	movwf	lcd_send@value& (0+255),b
 16773  00290C  0E01               	movlw	1
 16774  00290E  ECDC  F032         	call	_lcd_send
 16775  002912                     
 16776                           ;lib_ili9341.c: 94:     lcd_send(1,0x0C);
 16777  002912  0E0C               	movlw	12
 16778  002914  0100               	movlb	0	; () banked
 16779  002916  6F61               	movwf	lcd_send@value& (0+255),b
 16780  002918  0E01               	movlw	1
 16781  00291A  ECDC  F032         	call	_lcd_send
 16782  00291E                     
 16783                           ;lib_ili9341.c: 95:     lcd_send(1,0x0E);
 16784  00291E  0E0E               	movlw	14
 16785  002920  0100               	movlb	0	; () banked
 16786  002922  6F61               	movwf	lcd_send@value& (0+255),b
 16787  002924  0E01               	movlw	1
 16788  002926  ECDC  F032         	call	_lcd_send
 16789  00292A                     
 16790                           ;lib_ili9341.c: 96:     lcd_send(1,0x08);
 16791  00292A  0E08               	movlw	8
 16792  00292C  0100               	movlb	0	; () banked
 16793  00292E  6F61               	movwf	lcd_send@value& (0+255),b
 16794  002930  0E01               	movlw	1
 16795  002932  ECDC  F032         	call	_lcd_send
 16796  002936                     
 16797                           ;lib_ili9341.c: 97:     lcd_send(1,0x4E);
 16798  002936  0E4E               	movlw	78
 16799  002938  0100               	movlb	0	; () banked
 16800  00293A  6F61               	movwf	lcd_send@value& (0+255),b
 16801  00293C  0E01               	movlw	1
 16802  00293E  ECDC  F032         	call	_lcd_send
 16803  002942                     
 16804                           ;lib_ili9341.c: 98:     lcd_send(1,0xF1);
 16805  002942  0EF1               	movlw	241
 16806  002944  0100               	movlb	0	; () banked
 16807  002946  6F61               	movwf	lcd_send@value& (0+255),b
 16808  002948  0E01               	movlw	1
 16809  00294A  ECDC  F032         	call	_lcd_send
 16810  00294E                     
 16811                           ;lib_ili9341.c: 99:     lcd_send(1,0x37);
 16812  00294E  0E37               	movlw	55
 16813  002950  0100               	movlb	0	; () banked
 16814  002952  6F61               	movwf	lcd_send@value& (0+255),b
 16815  002954  0E01               	movlw	1
 16816  002956  ECDC  F032         	call	_lcd_send
 16817  00295A                     
 16818                           ;lib_ili9341.c: 100:     lcd_send(1,0x07);
 16819  00295A  0E07               	movlw	7
 16820  00295C  0100               	movlb	0	; () banked
 16821  00295E  6F61               	movwf	lcd_send@value& (0+255),b
 16822  002960  0E01               	movlw	1
 16823  002962  ECDC  F032         	call	_lcd_send
 16824  002966                     
 16825                           ;lib_ili9341.c: 101:     lcd_send(1,0x10);
 16826  002966  0E10               	movlw	16
 16827  002968  0100               	movlb	0	; () banked
 16828  00296A  6F61               	movwf	lcd_send@value& (0+255),b
 16829  00296C  0E01               	movlw	1
 16830  00296E  ECDC  F032         	call	_lcd_send
 16831  002972                     
 16832                           ;lib_ili9341.c: 102:     lcd_send(1,0x03);
 16833  002972  0E03               	movlw	3
 16834  002974  0100               	movlb	0	; () banked
 16835  002976  6F61               	movwf	lcd_send@value& (0+255),b
 16836  002978  0E01               	movlw	1
 16837  00297A  ECDC  F032         	call	_lcd_send
 16838  00297E                     
 16839                           ;lib_ili9341.c: 103:     lcd_send(1,0x0E);
 16840  00297E  0E0E               	movlw	14
 16841  002980  0100               	movlb	0	; () banked
 16842  002982  6F61               	movwf	lcd_send@value& (0+255),b
 16843  002984  0E01               	movlw	1
 16844  002986  ECDC  F032         	call	_lcd_send
 16845  00298A                     
 16846                           ;lib_ili9341.c: 104:     lcd_send(1,0x09);
 16847  00298A  0E09               	movlw	9
 16848  00298C  0100               	movlb	0	; () banked
 16849  00298E  6F61               	movwf	lcd_send@value& (0+255),b
 16850  002990  0E01               	movlw	1
 16851  002992  ECDC  F032         	call	_lcd_send
 16852  002996                     
 16853                           ;lib_ili9341.c: 105:     lcd_send(1,0x00);
 16854  002996  0E00               	movlw	0
 16855  002998  0100               	movlb	0	; () banked
 16856  00299A  6F61               	movwf	lcd_send@value& (0+255),b
 16857  00299C  0E01               	movlw	1
 16858  00299E  ECDC  F032         	call	_lcd_send
 16859  0029A2                     
 16860                           ;lib_ili9341.c: 106:     lcd_send(0,0xE1);
 16861  0029A2  0EE1               	movlw	225
 16862  0029A4  0100               	movlb	0	; () banked
 16863  0029A6  6F61               	movwf	lcd_send@value& (0+255),b
 16864  0029A8  0E00               	movlw	0
 16865  0029AA  ECDC  F032         	call	_lcd_send
 16866  0029AE                     
 16867                           ;lib_ili9341.c: 107:     lcd_send(1,0x00);
 16868  0029AE  0E00               	movlw	0
 16869  0029B0  0100               	movlb	0	; () banked
 16870  0029B2  6F61               	movwf	lcd_send@value& (0+255),b
 16871  0029B4  0E01               	movlw	1
 16872  0029B6  ECDC  F032         	call	_lcd_send
 16873  0029BA                     
 16874                           ;lib_ili9341.c: 108:     lcd_send(1,0x0E);
 16875  0029BA  0E0E               	movlw	14
 16876  0029BC  0100               	movlb	0	; () banked
 16877  0029BE  6F61               	movwf	lcd_send@value& (0+255),b
 16878  0029C0  0E01               	movlw	1
 16879  0029C2  ECDC  F032         	call	_lcd_send
 16880  0029C6                     
 16881                           ;lib_ili9341.c: 109:     lcd_send(1,0x14);
 16882  0029C6  0E14               	movlw	20
 16883  0029C8  0100               	movlb	0	; () banked
 16884  0029CA  6F61               	movwf	lcd_send@value& (0+255),b
 16885  0029CC  0E01               	movlw	1
 16886  0029CE  ECDC  F032         	call	_lcd_send
 16887  0029D2                     
 16888                           ;lib_ili9341.c: 110:     lcd_send(1,0x03);
 16889  0029D2  0E03               	movlw	3
 16890  0029D4  0100               	movlb	0	; () banked
 16891  0029D6  6F61               	movwf	lcd_send@value& (0+255),b
 16892  0029D8  0E01               	movlw	1
 16893  0029DA  ECDC  F032         	call	_lcd_send
 16894  0029DE                     
 16895                           ;lib_ili9341.c: 111:     lcd_send(1,0x11);
 16896  0029DE  0E11               	movlw	17
 16897  0029E0  0100               	movlb	0	; () banked
 16898  0029E2  6F61               	movwf	lcd_send@value& (0+255),b
 16899  0029E4  0E01               	movlw	1
 16900  0029E6  ECDC  F032         	call	_lcd_send
 16901  0029EA                     
 16902                           ;lib_ili9341.c: 112:     lcd_send(1,0x07);
 16903  0029EA  0E07               	movlw	7
 16904  0029EC  0100               	movlb	0	; () banked
 16905  0029EE  6F61               	movwf	lcd_send@value& (0+255),b
 16906  0029F0  0E01               	movlw	1
 16907  0029F2  ECDC  F032         	call	_lcd_send
 16908  0029F6                     
 16909                           ;lib_ili9341.c: 113:     lcd_send(1,0x31);
 16910  0029F6  0E31               	movlw	49
 16911  0029F8  0100               	movlb	0	; () banked
 16912  0029FA  6F61               	movwf	lcd_send@value& (0+255),b
 16913  0029FC  0E01               	movlw	1
 16914  0029FE  ECDC  F032         	call	_lcd_send
 16915  002A02                     
 16916                           ;lib_ili9341.c: 114:     lcd_send(1,0xC1);
 16917  002A02  0EC1               	movlw	193
 16918  002A04  0100               	movlb	0	; () banked
 16919  002A06  6F61               	movwf	lcd_send@value& (0+255),b
 16920  002A08  0E01               	movlw	1
 16921  002A0A  ECDC  F032         	call	_lcd_send
 16922  002A0E                     
 16923                           ;lib_ili9341.c: 115:     lcd_send(1,0x48);
 16924  002A0E  0E48               	movlw	72
 16925  002A10  0100               	movlb	0	; () banked
 16926  002A12  6F61               	movwf	lcd_send@value& (0+255),b
 16927  002A14  0E01               	movlw	1
 16928  002A16  ECDC  F032         	call	_lcd_send
 16929  002A1A                     
 16930                           ;lib_ili9341.c: 116:     lcd_send(1,0x08);
 16931  002A1A  0E08               	movlw	8
 16932  002A1C  0100               	movlb	0	; () banked
 16933  002A1E  6F61               	movwf	lcd_send@value& (0+255),b
 16934  002A20  0E01               	movlw	1
 16935  002A22  ECDC  F032         	call	_lcd_send
 16936  002A26                     
 16937                           ;lib_ili9341.c: 117:     lcd_send(1,0x0F);
 16938  002A26  0E0F               	movlw	15
 16939  002A28  0100               	movlb	0	; () banked
 16940  002A2A  6F61               	movwf	lcd_send@value& (0+255),b
 16941  002A2C  0E01               	movlw	1
 16942  002A2E  ECDC  F032         	call	_lcd_send
 16943  002A32                     
 16944                           ;lib_ili9341.c: 118:     lcd_send(1,0x0C);
 16945  002A32  0E0C               	movlw	12
 16946  002A34  0100               	movlb	0	; () banked
 16947  002A36  6F61               	movwf	lcd_send@value& (0+255),b
 16948  002A38  0E01               	movlw	1
 16949  002A3A  ECDC  F032         	call	_lcd_send
 16950  002A3E                     
 16951                           ;lib_ili9341.c: 119:     lcd_send(1,0x31);
 16952  002A3E  0E31               	movlw	49
 16953  002A40  0100               	movlb	0	; () banked
 16954  002A42  6F61               	movwf	lcd_send@value& (0+255),b
 16955  002A44  0E01               	movlw	1
 16956  002A46  ECDC  F032         	call	_lcd_send
 16957  002A4A                     
 16958                           ;lib_ili9341.c: 120:     lcd_send(1,0x36);
 16959  002A4A  0E36               	movlw	54
 16960  002A4C  0100               	movlb	0	; () banked
 16961  002A4E  6F61               	movwf	lcd_send@value& (0+255),b
 16962  002A50  0E01               	movlw	1
 16963  002A52  ECDC  F032         	call	_lcd_send
 16964  002A56                     
 16965                           ;lib_ili9341.c: 121:     lcd_send(1,0x0F);
 16966  002A56  0E0F               	movlw	15
 16967  002A58  0100               	movlb	0	; () banked
 16968  002A5A  6F61               	movwf	lcd_send@value& (0+255),b
 16969  002A5C  0E01               	movlw	1
 16970  002A5E  ECDC  F032         	call	_lcd_send
 16971  002A62                     
 16972                           ;lib_ili9341.c: 122:     lcd_send(0,0x11);
 16973  002A62  0E11               	movlw	17
 16974  002A64  0100               	movlb	0	; () banked
 16975  002A66  6F61               	movwf	lcd_send@value& (0+255),b
 16976  002A68  0E00               	movlw	0
 16977  002A6A  ECDC  F032         	call	_lcd_send
 16978                           
 16979                           ;lib_ili9341.c: 123:     msDelay(120);
 16980  002A6E  0E78               	movlw	120
 16981  002A70  ECD7  F031         	call	_msDelay
 16982  002A74                     
 16983                           ;lib_ili9341.c: 124:     lcd_send(0,0x29);
 16984  002A74  0E29               	movlw	41
 16985  002A76  0100               	movlb	0	; () banked
 16986  002A78  6F61               	movwf	lcd_send@value& (0+255),b
 16987  002A7A  0E00               	movlw	0
 16988  002A7C  ECDC  F032         	call	_lcd_send
 16989  002A80                     
 16990                           ;lib_ili9341.c: 125:     msDelay(120);
 16991  002A80  0E78               	movlw	120
 16992  002A82  ECD7  F031         	call	_msDelay
 16993  002A86                     
 16994                           ;lib_ili9341.c: 128:     lcd_fill(global_bg_color);
 16995  002A86  0E00               	movlw	0
 16996  002A88  0100               	movlb	0	; () banked
 16997  002A8A  6F6A               	movwf	(lcd_fill@bg_color+1)& (0+255),b
 16998  002A8C  0E00               	movlw	0
 16999  002A8E  6F69               	movwf	lcd_fill@bg_color& (0+255),b
 17000  002A90  EC40  F02E         	call	_lcd_fill	;wreg free
 17001  002A94  0012               	return		;funcret
 17002  002A96                     __end_of_lcd_init:
 17003                           	opt callstack 0
 17004                           
 17005 ;; *************** function _msDelay *****************
 17006 ;; Defined at:
 17007 ;;		line 14 in file "lib_ili9341.c"
 17008 ;; Parameters:    Size  Location     Type
 17009 ;;  ms              1    wreg     unsigned char 
 17010 ;; Auto vars:     Size  Location     Type
 17011 ;;  ms              1    1[BANK0 ] unsigned char 
 17012 ;;  k               1    2[BANK0 ] unsigned char 
 17013 ;; Return value:  Size  Location     Type
 17014 ;;                  1    wreg      void 
 17015 ;; Registers used:
 17016 ;;		wreg, status,2, status,0
 17017 ;; Tracked objects:
 17018 ;;		On entry : 0/0
 17019 ;;		On exit  : 0/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17026 ;;Total ram usage:        3 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; Hardware stack levels required when called:    5
 17029 ;; This function calls:
 17030 ;;		Nothing
 17031 ;; This function is called by:
 17032 ;;		_lcd_init
 17033 ;; This function uses a non-reentrant model
 17034 ;;
 17035                           
 17036                           	psect	text46
 17037  0063AE                     __ptext46:
 17038                           	opt callstack 0
 17039  0063AE                     _msDelay:
 17040                           	opt callstack 24
 17041                           
 17042                           ;incstack = 0
 17043                           ;msDelay@ms stored from wreg
 17044  0063AE  0100               	movlb	0	; () banked
 17045  0063B0  6F61               	movwf	msDelay@ms& (0+255),b
 17046  0063B2                     
 17047                           ;lib_ili9341.c: 14: void msDelay (uint8_t ms);lib_ili9341.c: 15: {;lib_ili9341.c: 16:   
      +                            uint8_t k;;lib_ili9341.c: 18:     for(k=0; k<ms; k++)
 17048  0063B2  0E00               	movlw	0
 17049  0063B4  0100               	movlb	0	; () banked
 17050  0063B6  6F62               	movwf	msDelay@k& (0+255),b
 17051  0063B8  EFE9  F031         	goto	l9723
 17052  0063BC                     l9719:
 17053                           
 17054                           ; BSR set to: 0
 17055                           ;lib_ili9341.c: 19:     {;lib_ili9341.c: 20:         _delay((unsigned long)((1)*(8000000
      +                          /4000.0)));
 17056  0063BC  0E03               	movlw	3
 17057  0063BE  0100               	movlb	0	; () banked
 17058  0063C0  6F60               	movwf	??_msDelay& (0+255),b
 17059  0063C2  0E97               	movlw	151
 17060  0063C4                     u13107:
 17061  0063C4  2EE8               	decfsz	wreg,f,c
 17062  0063C6  D7FE               	bra	u13107
 17063  0063C8  2F60               	decfsz	??_msDelay& (0+255),f,b
 17064  0063CA  D7FC               	bra	u13107
 17065  0063CC  D000               	nop2	
 17066  0063CE                     
 17067                           ;lib_ili9341.c: 21:     }
 17068  0063CE  0100               	movlb	0	; () banked
 17069  0063D0  2B62               	incf	msDelay@k& (0+255),f,b
 17070  0063D2                     l9723:
 17071                           
 17072                           ; BSR set to: 0
 17073  0063D2  5161               	movf	msDelay@ms& (0+255),w,b
 17074  0063D4  5D62               	subwf	msDelay@k& (0+255),w,b
 17075  0063D6  A0D8               	btfss	status,0,c
 17076  0063D8  EFF0  F031         	goto	u12641
 17077  0063DC  EFF2  F031         	goto	u12640
 17078  0063E0                     u12641:
 17079  0063E0  EFDE  F031         	goto	l9719
 17080  0063E4                     u12640:
 17081  0063E4                     
 17082                           ; BSR set to: 0
 17083  0063E4  0012               	return		;funcret
 17084  0063E6                     __end_of_msDelay:
 17085                           	opt callstack 0
 17086                           
 17087 ;; *************** function _lcd_fill *****************
 17088 ;; Defined at:
 17089 ;;		line 191 in file "lib_ili9341.c"
 17090 ;; Parameters:    Size  Location     Type
 17091 ;;  bg_color        2    9[BANK0 ] unsigned short 
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;  width           2   13[BANK0 ] unsigned short 
 17094 ;;  height          2   11[BANK0 ] unsigned short 
 17095 ;; Return value:  Size  Location     Type
 17096 ;;                  1    wreg      void 
 17097 ;; Registers used:
 17098 ;;		wreg, status,2, status,0, cstack
 17099 ;; Tracked objects:
 17100 ;;		On entry : 0/0
 17101 ;;		On exit  : 0/0
 17102 ;;		Unchanged: 0/0
 17103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17105 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17107 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17108 ;;Total ram usage:        6 bytes
 17109 ;; Hardware stack levels used:    1
 17110 ;; Hardware stack levels required when called:    9
 17111 ;; This function calls:
 17112 ;;		_lcd_draw_pixel
 17113 ;;		_lcd_set_cursor
 17114 ;; This function is called by:
 17115 ;;		_lcd_init
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           	psect	text47
 17120  005C80                     __ptext47:
 17121                           	opt callstack 0
 17122  005C80                     _lcd_fill:
 17123                           	opt callstack 20
 17124  005C80                     
 17125                           ;lib_ili9341.c: 191: void lcd_fill(uint16_t bg_color);lib_ili9341.c: 192: {;lib_ili9341.
      +                          c: 193:     uint16_t width = 320, height = 240;
 17126  005C80  0E01               	movlw	1
 17127  005C82  0100               	movlb	0	; () banked
 17128  005C84  6F6E               	movwf	(lcd_fill@width+1)& (0+255),b
 17129  005C86  0E40               	movlw	64
 17130  005C88  6F6D               	movwf	lcd_fill@width& (0+255),b
 17131  005C8A  0E00               	movlw	0
 17132  005C8C  6F6C               	movwf	(lcd_fill@height+1)& (0+255),b
 17133  005C8E  0EF0               	movlw	240
 17134  005C90  6F6B               	movwf	lcd_fill@height& (0+255),b
 17135  005C92                     
 17136                           ; BSR set to: 0
 17137                           ;lib_ili9341.c: 195:     if( lcd_set_cursor(0,0) )
 17138  005C92  0E00               	movlw	0
 17139  005C94  6F66               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 17140  005C96  0E00               	movlw	0
 17141  005C98  6F65               	movwf	lcd_set_cursor@x& (0+255),b
 17142  005C9A  0E00               	movlw	0
 17143  005C9C  6F68               	movwf	(lcd_set_cursor@y+1)& (0+255),b
 17144  005C9E  0E00               	movlw	0
 17145  005CA0  6F67               	movwf	lcd_set_cursor@y& (0+255),b
 17146  005CA2  ECE9  F030         	call	_lcd_set_cursor	;wreg free
 17147  005CA6  0900               	iorlw	0
 17148  005CA8  B4D8               	btfsc	status,2,c
 17149  005CAA  EF59  F02E         	goto	u12651
 17150  005CAE  EF5B  F02E         	goto	u12650
 17151  005CB2                     u12651:
 17152  005CB2  EF75  F02E         	goto	l9737
 17153  005CB6                     u12650:
 17154  005CB6  EF83  F02E         	goto	l461
 17155  005CBA                     l9731:
 17156                           
 17157                           ; BSR set to: 0
 17158                           ;lib_ili9341.c: 203:         {;lib_ili9341.c: 204:             lcd_draw_pixel(bg_color);
 17159  005CBA  C069  F063         	movff	lcd_fill@bg_color,lcd_draw_pixel@color
 17160  005CBE  C06A  F064         	movff	lcd_fill@bg_color+1,lcd_draw_pixel@color+1
 17161  005CC2  EC08  F033         	call	_lcd_draw_pixel	;wreg free
 17162  005CC6                     l9733:
 17163                           
 17164                           ;lib_ili9341.c: 202:         while(width--)
 17165  005CC6  0100               	movlb	0	; () banked
 17166  005CC8  076D               	decf	lcd_fill@width& (0+255),f,b
 17167  005CCA  A0D8               	btfss	status,0,c
 17168  005CCC  076E               	decf	(lcd_fill@width+1)& (0+255),f,b
 17169  005CCE  296D               	incf	lcd_fill@width& (0+255),w,b
 17170  005CD0  E106               	bnz	u12661
 17171  005CD2  296E               	incf	(lcd_fill@width+1)& (0+255),w,b
 17172  005CD4  A4D8               	btfss	status,2,c
 17173  005CD6  EF6F  F02E         	goto	u12661
 17174  005CDA  EF71  F02E         	goto	u12660
 17175  005CDE                     u12661:
 17176  005CDE  EF5D  F02E         	goto	l9731
 17177  005CE2                     u12660:
 17178  005CE2                     
 17179                           ; BSR set to: 0
 17180                           ;lib_ili9341.c: 206:         width = 320;
 17181  005CE2  0E01               	movlw	1
 17182  005CE4  6F6E               	movwf	(lcd_fill@width+1)& (0+255),b
 17183  005CE6  0E40               	movlw	64
 17184  005CE8  6F6D               	movwf	lcd_fill@width& (0+255),b
 17185  005CEA                     l9737:
 17186                           
 17187                           ;lib_ili9341.c: 200:     while(height--)
 17188  005CEA  0100               	movlb	0	; () banked
 17189  005CEC  076B               	decf	lcd_fill@height& (0+255),f,b
 17190  005CEE  A0D8               	btfss	status,0,c
 17191  005CF0  076C               	decf	(lcd_fill@height+1)& (0+255),f,b
 17192  005CF2  296B               	incf	lcd_fill@height& (0+255),w,b
 17193  005CF4  E106               	bnz	u12671
 17194  005CF6  296C               	incf	(lcd_fill@height+1)& (0+255),w,b
 17195  005CF8  A4D8               	btfss	status,2,c
 17196  005CFA  EF81  F02E         	goto	u12671
 17197  005CFE  EF83  F02E         	goto	u12670
 17198  005D02                     u12671:
 17199  005D02  EF63  F02E         	goto	l9733
 17200  005D06                     u12670:
 17201  005D06                     l461:
 17202  005D06  0012               	return		;funcret
 17203  005D08                     __end_of_lcd_fill:
 17204                           	opt callstack 0
 17205                           
 17206 ;; *************** function _lcd_draw_string *****************
 17207 ;; Defined at:
 17208 ;;		line 378 in file "lib_ili9341.c"
 17209 ;; Parameters:    Size  Location     Type
 17210 ;;  x               2   31[BANK0 ] unsigned short 
 17211 ;;  y               2   33[BANK0 ] unsigned short 
 17212 ;;  pS              2   35[BANK0 ] PTR const unsigned char 
 17213 ;;		 -> string(100), string_rpm(100), STR_2(11), STR_1(33), 
 17214 ;;  fg_color        2   37[BANK0 ] unsigned short 
 17215 ;;  bg_color        2   39[BANK0 ] unsigned short 
 17216 ;; Auto vars:     Size  Location     Type
 17217 ;;  lIndex          2   47[BANK0 ] unsigned short 
 17218 ;;  k               2   45[BANK0 ] unsigned short 
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  1    wreg      void 
 17221 ;; Registers used:
 17222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17228 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17231 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;Total ram usage:       18 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; Hardware stack levels required when called:   10
 17235 ;; This function calls:
 17236 ;;		_lcd_draw_char
 17237 ;; This function is called by:
 17238 ;;		_main
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text48
 17243  004EA4                     __ptext48:
 17244                           	opt callstack 0
 17245  004EA4                     _lcd_draw_string:
 17246                           	opt callstack 20
 17247  004EA4                     
 17248                           ;lib_ili9341.c: 378: void lcd_draw_string (uint16_t x, uint16_t y, const char *pS, uint1
      +                          6_t fg_color, uint16_t bg_color);lib_ili9341.c: 379: {;lib_ili9341.c: 380:     uint16_t 
      +                          lIndex, k;;lib_ili9341.c: 382:     while(*pS)
 17249  004EA4  EFD4  F027         	goto	l10073
 17250  004EA8                     l10059:
 17251                           
 17252                           ;lib_ili9341.c: 383:     {;lib_ili9341.c: 384:         lIndex = 0;
 17253  004EA8  0E00               	movlw	0
 17254  004EAA  0100               	movlb	0	; () banked
 17255  004EAC  6F90               	movwf	(lcd_draw_string@lIndex+1)& (0+255),b
 17256  004EAE  0E00               	movlw	0
 17257  004EB0  6F8F               	movwf	lcd_draw_string@lIndex& (0+255),b
 17258                           
 17259                           ;lib_ili9341.c: 385:         for(k=0; k<(*pS - ' '); k++)
 17260  004EB2  0E00               	movlw	0
 17261  004EB4  6F8E               	movwf	(lcd_draw_string@k+1)& (0+255),b
 17262  004EB6  0E00               	movlw	0
 17263  004EB8  6F8D               	movwf	lcd_draw_string@k& (0+255),b
 17264  004EBA  EF7E  F027         	goto	l10065
 17265  004EBE                     l10061:
 17266                           
 17267                           ; BSR set to: 0
 17268                           ;lib_ili9341.c: 386:         {;lib_ili9341.c: 387:             lIndex += ((font[lIndex])
      +                           << 1) + 1;
 17269  004EBE  90D8               	bcf	status,0,c
 17270  004EC0  358F               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 17271  004EC2  6EF6               	movwf	tblptrl,c
 17272  004EC4  3590               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 17273  004EC6  6EF7               	movwf	tblptrh,c
 17274  004EC8  0E9D               	movlw	low _font
 17275  004ECA  26F6               	addwf	tblptrl,f,c
 17276  004ECC  0EF1               	movlw	high _font
 17277  004ECE  22F7               	addwfc	tblptrh,f,c
 17278  004ED0                     	if	1	;There are 3 active tblptr bytes
 17279  004ED0  6AF8               	clrf	tblptru,c
 17280  004ED2  0E00               	movlw	low (__mediumconst shr (0+16))
 17281  004ED4  22F8               	addwfc	tblptru,f,c
 17282  004ED6                     	endif
 17283  004ED6  0009               	tblrd		*+
 17284  004ED8  CFF5 F089          	movff	tablat,??_lcd_draw_string
 17285  004EDC  0009               	tblrd		*+
 17286  004EDE  CFF5 F08A          	movff	tablat,??_lcd_draw_string+1
 17287  004EE2  90D8               	bcf	status,0,c
 17288  004EE4  3789               	rlcf	??_lcd_draw_string& (0+255),f,b
 17289  004EE6  378A               	rlcf	(??_lcd_draw_string+1)& (0+255),f,b
 17290  004EE8  0E01               	movlw	1
 17291  004EEA  2789               	addwf	??_lcd_draw_string& (0+255),f,b
 17292  004EEC  0E00               	movlw	0
 17293  004EEE  238A               	addwfc	(??_lcd_draw_string+1)& (0+255),f,b
 17294  004EF0  5189               	movf	??_lcd_draw_string& (0+255),w,b
 17295  004EF2  278F               	addwf	lcd_draw_string@lIndex& (0+255),f,b
 17296  004EF4  518A               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 17297  004EF6  2390               	addwfc	(lcd_draw_string@lIndex+1)& (0+255),f,b
 17298  004EF8                     
 17299                           ; BSR set to: 0
 17300                           ;lib_ili9341.c: 388:         }
 17301  004EF8  4B8D               	infsnz	lcd_draw_string@k& (0+255),f,b
 17302  004EFA  2B8E               	incf	(lcd_draw_string@k+1)& (0+255),f,b
 17303  004EFC                     l10065:
 17304                           
 17305                           ; BSR set to: 0
 17306  004EFC  0EE0               	movlw	224
 17307  004EFE  6F89               	movwf	??_lcd_draw_string& (0+255),b
 17308  004F00  0EFF               	movlw	255
 17309  004F02  6F8A               	movwf	(??_lcd_draw_string+1)& (0+255),b
 17310  004F04  C083  FFF6         	movff	lcd_draw_string@pS,tblptrl
 17311  004F08  C084  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 17312  004F0C  0E00               	movlw	low (__mediumconst shr (0+16))
 17313  004F0E  6EF8               	movwf	tblptru,c
 17314  004F10  0E0E               	movlw	(high __ramtop+-1)
 17315  004F12  64F7               	cpfsgt	tblptrh,c
 17316  004F14  D003               	bra	u12887
 17317  004F16  0008               	tblrd		*
 17318  004F18  50F5               	movf	tablat,w,c
 17319  004F1A  D005               	bra	u12880
 17320  004F1C                     u12887:
 17321  004F1C  CFF6 FFE1          	movff	tblptrl,fsr1l
 17322  004F20  CFF7 FFE2          	movff	tblptrh,fsr1h
 17323  004F24  50E7               	movf	indf1,w,c
 17324  004F26                     u12880:
 17325  004F26  0100               	movlb	0	; () banked
 17326  004F28  6F8B               	movwf	(??_lcd_draw_string+2)& (0+255),b
 17327  004F2A  6B8C               	clrf	(??_lcd_draw_string+3)& (0+255),b
 17328  004F2C  5189               	movf	??_lcd_draw_string& (0+255),w,b
 17329  004F2E  278B               	addwf	(??_lcd_draw_string+2)& (0+255),f,b
 17330  004F30  518A               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 17331  004F32  238C               	addwfc	(??_lcd_draw_string+3)& (0+255),f,b
 17332  004F34  518B               	movf	(??_lcd_draw_string+2)& (0+255),w,b
 17333  004F36  5D8D               	subwf	lcd_draw_string@k& (0+255),w,b
 17334  004F38  518C               	movf	(??_lcd_draw_string+3)& (0+255),w,b
 17335  004F3A  598E               	subwfb	(lcd_draw_string@k+1)& (0+255),w,b
 17336  004F3C  A0D8               	btfss	status,0,c
 17337  004F3E  EFA3  F027         	goto	u12891
 17338  004F42  EFA5  F027         	goto	u12890
 17339  004F46                     u12891:
 17340  004F46  EF5F  F027         	goto	l10061
 17341  004F4A                     u12890:
 17342  004F4A                     
 17343                           ; BSR set to: 0
 17344                           ;lib_ili9341.c: 390:         lcd_draw_char(x, y, lIndex, fg_color, bg_color);
 17345  004F4A  C07F  F069         	movff	lcd_draw_string@x,lcd_draw_char@x
 17346  004F4E  C080  F06A         	movff	lcd_draw_string@x+1,lcd_draw_char@x+1
 17347  004F52  C081  F06B         	movff	lcd_draw_string@y,lcd_draw_char@y
 17348  004F56  C082  F06C         	movff	lcd_draw_string@y+1,lcd_draw_char@y+1
 17349  004F5A  C08F  F06D         	movff	lcd_draw_string@lIndex,lcd_draw_char@fIndex
 17350  004F5E  C090  F06E         	movff	lcd_draw_string@lIndex+1,lcd_draw_char@fIndex+1
 17351  004F62  C085  F06F         	movff	lcd_draw_string@fg_color,lcd_draw_char@fg_color
 17352  004F66  C086  F070         	movff	lcd_draw_string@fg_color+1,lcd_draw_char@fg_color+1
 17353  004F6A  C087  F071         	movff	lcd_draw_string@bg_color,lcd_draw_char@bg_color
 17354  004F6E  C088  F072         	movff	lcd_draw_string@bg_color+1,lcd_draw_char@bg_color+1
 17355  004F72  EC28  F025         	call	_lcd_draw_char	;wreg free
 17356  004F76                     
 17357                           ;lib_ili9341.c: 392:         x += font[lIndex];
 17358  004F76  90D8               	bcf	status,0,c
 17359  004F78  0100               	movlb	0	; () banked
 17360  004F7A  358F               	rlcf	lcd_draw_string@lIndex& (0+255),w,b
 17361  004F7C  6EF6               	movwf	tblptrl,c
 17362  004F7E  3590               	rlcf	(lcd_draw_string@lIndex+1)& (0+255),w,b
 17363  004F80  6EF7               	movwf	tblptrh,c
 17364  004F82  0E9D               	movlw	low _font
 17365  004F84  26F6               	addwf	tblptrl,f,c
 17366  004F86  0EF1               	movlw	high _font
 17367  004F88  22F7               	addwfc	tblptrh,f,c
 17368  004F8A                     	if	1	;There are 3 active tblptr bytes
 17369  004F8A  6AF8               	clrf	tblptru,c
 17370  004F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 17371  004F8E  22F8               	addwfc	tblptru,f,c
 17372  004F90                     	endif
 17373  004F90  0009               	tblrd		*+
 17374  004F92  CFF5 F089          	movff	tablat,??_lcd_draw_string
 17375  004F96  0009               	tblrd		*+
 17376  004F98  CFF5 F08A          	movff	tablat,??_lcd_draw_string+1
 17377  004F9C  5189               	movf	??_lcd_draw_string& (0+255),w,b
 17378  004F9E  277F               	addwf	lcd_draw_string@x& (0+255),f,b
 17379  004FA0  518A               	movf	(??_lcd_draw_string+1)& (0+255),w,b
 17380  004FA2  2380               	addwfc	(lcd_draw_string@x+1)& (0+255),f,b
 17381  004FA4                     
 17382                           ; BSR set to: 0
 17383                           ;lib_ili9341.c: 394:         pS++;
 17384  004FA4  4B83               	infsnz	lcd_draw_string@pS& (0+255),f,b
 17385  004FA6  2B84               	incf	(lcd_draw_string@pS+1)& (0+255),f,b
 17386  004FA8                     l10073:
 17387                           
 17388                           ;lib_ili9341.c: 382:     while(*pS)
 17389  004FA8  C083  FFF6         	movff	lcd_draw_string@pS,tblptrl
 17390  004FAC  C084  FFF7         	movff	lcd_draw_string@pS+1,tblptrh
 17391  004FB0  0E00               	movlw	low (__mediumconst shr (0+16))
 17392  004FB2  6EF8               	movwf	tblptru,c
 17393  004FB4  0E0E               	movlw	(high __ramtop+-1)
 17394  004FB6  64F7               	cpfsgt	tblptrh,c
 17395  004FB8  D003               	bra	u12907
 17396  004FBA  0008               	tblrd		*
 17397  004FBC  50F5               	movf	tablat,w,c
 17398  004FBE  D005               	bra	u12900
 17399  004FC0                     u12907:
 17400  004FC0  CFF6 FFE1          	movff	tblptrl,fsr1l
 17401  004FC4  CFF7 FFE2          	movff	tblptrh,fsr1h
 17402  004FC8  50E7               	movf	indf1,w,c
 17403  004FCA                     u12900:
 17404  004FCA  0900               	iorlw	0
 17405  004FCC  A4D8               	btfss	status,2,c
 17406  004FCE  EFEB  F027         	goto	u12911
 17407  004FD2  EFED  F027         	goto	u12910
 17408  004FD6                     u12911:
 17409  004FD6  EF54  F027         	goto	l10059
 17410  004FDA                     u12910:
 17411  004FDA  0012               	return		;funcret
 17412  004FDC                     __end_of_lcd_draw_string:
 17413                           	opt callstack 0
 17414                           
 17415 ;; *************** function _lcd_draw_char *****************
 17416 ;; Defined at:
 17417 ;;		line 353 in file "lib_ili9341.c"
 17418 ;; Parameters:    Size  Location     Type
 17419 ;;  x               2    9[BANK0 ] unsigned short 
 17420 ;;  y               2   11[BANK0 ] unsigned short 
 17421 ;;  fIndex          2   13[BANK0 ] unsigned short 
 17422 ;;  fg_color        2   15[BANK0 ] unsigned short 
 17423 ;;  bg_color        2   17[BANK0 ] unsigned short 
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;  i               1   30[BANK0 ] unsigned char 
 17426 ;;  k               1   29[BANK0 ] unsigned char 
 17427 ;;  j               1   28[BANK0 ] unsigned char 
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  1    wreg      void 
 17430 ;; Registers used:
 17431 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17432 ;; Tracked objects:
 17433 ;;		On entry : 0/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17437 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17438 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17439 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17440 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17441 ;;Total ram usage:       22 bytes
 17442 ;; Hardware stack levels used:    1
 17443 ;; Hardware stack levels required when called:    9
 17444 ;; This function calls:
 17445 ;;		_lcd_draw_pixel
 17446 ;;		_lcd_set_cursor
 17447 ;; This function is called by:
 17448 ;;		_lcd_draw_string
 17449 ;; This function uses a non-reentrant model
 17450 ;;
 17451                           
 17452                           	psect	text49
 17453  004A50                     __ptext49:
 17454                           	opt callstack 0
 17455  004A50                     _lcd_draw_char:
 17456                           	opt callstack 20
 17457  004A50                     
 17458                           ;lib_ili9341.c: 353: void lcd_draw_char (uint16_t x, uint16_t y, uint16_t fIndex, uint16
      +                          _t fg_color, uint16_t bg_color);lib_ili9341.c: 354: {;lib_ili9341.c: 355:     uint8_t j,
      +                           k, i;;lib_ili9341.c: 357:     for(j=0; j < font[fIndex]; j++)
 17459  004A50  0E00               	movlw	0
 17460  004A52  0100               	movlb	0	; () banked
 17461  004A54  6F7C               	movwf	lcd_draw_char@j& (0+255),b
 17462  004A56  EFCC  F025         	goto	l9775
 17463  004A5A                     l9745:
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;lib_ili9341.c: 358:     {;lib_ili9341.c: 359:         lcd_set_cursor(x + font[fIndex] -
      +                           j, y);
 17467  004A5A  90D8               	bcf	status,0,c
 17468  004A5C  356D               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 17469  004A5E  6EF6               	movwf	tblptrl,c
 17470  004A60  356E               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 17471  004A62  6EF7               	movwf	tblptrh,c
 17472  004A64  0E9D               	movlw	low _font
 17473  004A66  26F6               	addwf	tblptrl,f,c
 17474  004A68  0EF1               	movlw	high _font
 17475  004A6A  22F7               	addwfc	tblptrh,f,c
 17476  004A6C                     	if	1	;There are 3 active tblptr bytes
 17477  004A6C  6AF8               	clrf	tblptru,c
 17478  004A6E  0E00               	movlw	low (__mediumconst shr (0+16))
 17479  004A70  22F8               	addwfc	tblptru,f,c
 17480  004A72                     	endif
 17481  004A72  0009               	tblrd		*+
 17482  004A74  CFF5 F073          	movff	tablat,??_lcd_draw_char
 17483  004A78  0009               	tblrd		*+
 17484  004A7A  CFF5 F074          	movff	tablat,??_lcd_draw_char+1
 17485  004A7E  517C               	movf	lcd_draw_char@j& (0+255),w,b
 17486  004A80  5F73               	subwf	??_lcd_draw_char& (0+255),f,b
 17487  004A82  0E00               	movlw	0
 17488  004A84  5B74               	subwfb	(??_lcd_draw_char+1)& (0+255),f,b
 17489  004A86  5169               	movf	lcd_draw_char@x& (0+255),w,b
 17490  004A88  2573               	addwf	??_lcd_draw_char& (0+255),w,b
 17491  004A8A  6F65               	movwf	lcd_set_cursor@x& (0+255),b
 17492  004A8C  516A               	movf	(lcd_draw_char@x+1)& (0+255),w,b
 17493  004A8E  2174               	addwfc	(??_lcd_draw_char+1)& (0+255),w,b
 17494  004A90  6F66               	movwf	(lcd_set_cursor@x+1)& (0+255),b
 17495  004A92  C06B  F067         	movff	lcd_draw_char@y,lcd_set_cursor@y
 17496  004A96  C06C  F068         	movff	lcd_draw_char@y+1,lcd_set_cursor@y+1
 17497  004A9A  ECE9  F030         	call	_lcd_set_cursor	;wreg free
 17498  004A9E                     
 17499                           ;lib_ili9341.c: 361:         for(k=0; k<2; k++)
 17500  004A9E  0E00               	movlw	0
 17501  004AA0  0100               	movlb	0	; () banked
 17502  004AA2  6F7D               	movwf	lcd_draw_char@k& (0+255),b
 17503  004AA4                     l9753:
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;lib_ili9341.c: 362:         {;lib_ili9341.c: 363:             for(i=0; i<8; i++)
 17507  004AA4  0E00               	movlw	0
 17508  004AA6  6F7E               	movwf	lcd_draw_char@i& (0+255),b
 17509  004AA8                     l9759:
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;lib_ili9341.c: 364:             {;lib_ili9341.c: 365:                 if( font[ (fIndex
      +                           + ((font[fIndex]) << 1)) - (j<<1) - k ] & (0x80 >> i) )
 17513  004AA8  517C               	movf	lcd_draw_char@j& (0+255),w,b
 17514  004AAA  6F73               	movwf	??_lcd_draw_char& (0+255),b
 17515  004AAC  6B74               	clrf	(??_lcd_draw_char+1)& (0+255),b
 17516  004AAE  90D8               	bcf	status,0,c
 17517  004AB0  3773               	rlcf	??_lcd_draw_char& (0+255),f,b
 17518  004AB2  3774               	rlcf	(??_lcd_draw_char+1)& (0+255),f,b
 17519  004AB4  90D8               	bcf	status,0,c
 17520  004AB6  356D               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 17521  004AB8  6EF6               	movwf	tblptrl,c
 17522  004ABA  356E               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 17523  004ABC  6EF7               	movwf	tblptrh,c
 17524  004ABE  0E9D               	movlw	low _font
 17525  004AC0  26F6               	addwf	tblptrl,f,c
 17526  004AC2  0EF1               	movlw	high _font
 17527  004AC4  22F7               	addwfc	tblptrh,f,c
 17528  004AC6                     	if	1	;There are 3 active tblptr bytes
 17529  004AC6  6AF8               	clrf	tblptru,c
 17530  004AC8  0E00               	movlw	low (__mediumconst shr (0+16))
 17531  004ACA  22F8               	addwfc	tblptru,f,c
 17532  004ACC                     	endif
 17533  004ACC  0009               	tblrd		*+
 17534  004ACE  CFF5 F075          	movff	tablat,??_lcd_draw_char+2
 17535  004AD2  0009               	tblrd		*+
 17536  004AD4  CFF5 F076          	movff	tablat,??_lcd_draw_char+3
 17537  004AD8  90D8               	bcf	status,0,c
 17538  004ADA  3775               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 17539  004ADC  3776               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 17540  004ADE  5173               	movf	??_lcd_draw_char& (0+255),w,b
 17541  004AE0  5F75               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 17542  004AE2  5174               	movf	(??_lcd_draw_char+1)& (0+255),w,b
 17543  004AE4  5B76               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 17544  004AE6  517D               	movf	lcd_draw_char@k& (0+255),w,b
 17545  004AE8  5F75               	subwf	(??_lcd_draw_char+2)& (0+255),f,b
 17546  004AEA  0E00               	movlw	0
 17547  004AEC  5B76               	subwfb	(??_lcd_draw_char+3)& (0+255),f,b
 17548  004AEE  516D               	movf	lcd_draw_char@fIndex& (0+255),w,b
 17549  004AF0  2775               	addwf	(??_lcd_draw_char+2)& (0+255),f,b
 17550  004AF2  516E               	movf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 17551  004AF4  2376               	addwfc	(??_lcd_draw_char+3)& (0+255),f,b
 17552  004AF6  90D8               	bcf	status,0,c
 17553  004AF8  3775               	rlcf	(??_lcd_draw_char+2)& (0+255),f,b
 17554  004AFA  3776               	rlcf	(??_lcd_draw_char+3)& (0+255),f,b
 17555  004AFC  0E9D               	movlw	low _font
 17556  004AFE  2575               	addwf	(??_lcd_draw_char+2)& (0+255),w,b
 17557  004B00  6EF6               	movwf	tblptrl,c
 17558  004B02  0EF1               	movlw	high _font
 17559  004B04  2176               	addwfc	(??_lcd_draw_char+3)& (0+255),w,b
 17560  004B06  6EF7               	movwf	tblptrh,c
 17561  004B08                     	if	1	;There are 3 active tblptr bytes
 17562  004B08  6AF8               	clrf	tblptru,c
 17563  004B0A  0E00               	movlw	low (__mediumconst shr (0+16))
 17564  004B0C  22F8               	addwfc	tblptru,f,c
 17565  004B0E                     	endif
 17566  004B0E  0009               	tblrd		*+
 17567  004B10  CFF5 F077          	movff	tablat,??_lcd_draw_char+4
 17568  004B14  0009               	tblrd		*+
 17569  004B16  CFF5 F078          	movff	tablat,??_lcd_draw_char+5
 17570  004B1A  C07E  F079         	movff	lcd_draw_char@i,??_lcd_draw_char+6
 17571  004B1E  0E80               	movlw	128
 17572  004B20  6F7A               	movwf	(??_lcd_draw_char+7)& (0+255),b
 17573  004B22  0E00               	movlw	0
 17574  004B24  6F7B               	movwf	(??_lcd_draw_char+8)& (0+255),b
 17575  004B26  2B79               	incf	(??_lcd_draw_char+6)& (0+255),f,b
 17576  004B28  EF99  F025         	goto	u12694
 17577  004B2C                     u12695:
 17578  004B2C  357B               	rlcf	(??_lcd_draw_char+8)& (0+255),w,b
 17579  004B2E  337B               	rrcf	(??_lcd_draw_char+8)& (0+255),f,b
 17580  004B30  337A               	rrcf	(??_lcd_draw_char+7)& (0+255),f,b
 17581  004B32                     u12694:
 17582  004B32  2F79               	decfsz	(??_lcd_draw_char+6)& (0+255),f,b
 17583  004B34  EF96  F025         	goto	u12695
 17584  004B38  0100               	movlb	0	; () banked
 17585  004B3A  5177               	movf	(??_lcd_draw_char+4)& (0+255),w,b
 17586  004B3C  177A               	andwf	(??_lcd_draw_char+7)& (0+255),f,b
 17587  004B3E  5178               	movf	(??_lcd_draw_char+5)& (0+255),w,b
 17588  004B40  177B               	andwf	(??_lcd_draw_char+8)& (0+255),f,b
 17589  004B42  517A               	movf	(??_lcd_draw_char+7)& (0+255),w,b
 17590  004B44  117B               	iorwf	(??_lcd_draw_char+8)& (0+255),w,b
 17591  004B46  B4D8               	btfsc	status,2,c
 17592  004B48  EFA8  F025         	goto	u12701
 17593  004B4C  EFAA  F025         	goto	u12700
 17594  004B50                     u12701:
 17595  004B50  EFB2  F025         	goto	l9763
 17596  004B54                     u12700:
 17597  004B54                     
 17598                           ; BSR set to: 0
 17599                           ;lib_ili9341.c: 366:                 {;lib_ili9341.c: 367:                     lcd_draw_
      +                          pixel(fg_color);
 17600  004B54  C06F  F063         	movff	lcd_draw_char@fg_color,lcd_draw_pixel@color
 17601  004B58  C070  F064         	movff	lcd_draw_char@fg_color+1,lcd_draw_pixel@color+1
 17602  004B5C  EC08  F033         	call	_lcd_draw_pixel	;wreg free
 17603                           
 17604                           ;lib_ili9341.c: 368:                 }
 17605  004B60  EFB8  F025         	goto	l9765
 17606  004B64                     l9763:
 17607                           
 17608                           ; BSR set to: 0
 17609                           ;lib_ili9341.c: 370:                 {;lib_ili9341.c: 371:                     lcd_draw_
      +                          pixel(bg_color);
 17610  004B64  C071  F063         	movff	lcd_draw_char@bg_color,lcd_draw_pixel@color
 17611  004B68  C072  F064         	movff	lcd_draw_char@bg_color+1,lcd_draw_pixel@color+1
 17612  004B6C  EC08  F033         	call	_lcd_draw_pixel	;wreg free
 17613  004B70                     l9765:
 17614                           
 17615                           ;lib_ili9341.c: 373:             }
 17616  004B70  0100               	movlb	0	; () banked
 17617  004B72  2B7E               	incf	lcd_draw_char@i& (0+255),f,b
 17618  004B74                     
 17619                           ; BSR set to: 0
 17620  004B74  0E07               	movlw	7
 17621  004B76  657E               	cpfsgt	lcd_draw_char@i& (0+255),b
 17622  004B78  EFC0  F025         	goto	u12711
 17623  004B7C  EFC2  F025         	goto	u12710
 17624  004B80                     u12711:
 17625  004B80  EF54  F025         	goto	l9759
 17626  004B84                     u12710:
 17627  004B84                     
 17628                           ; BSR set to: 0
 17629                           ;lib_ili9341.c: 374:         }
 17630  004B84  2B7D               	incf	lcd_draw_char@k& (0+255),f,b
 17631  004B86                     
 17632                           ; BSR set to: 0
 17633  004B86  0E01               	movlw	1
 17634  004B88  657D               	cpfsgt	lcd_draw_char@k& (0+255),b
 17635  004B8A  EFC9  F025         	goto	u12721
 17636  004B8E  EFCB  F025         	goto	u12720
 17637  004B92                     u12721:
 17638  004B92  EF52  F025         	goto	l9753
 17639  004B96                     u12720:
 17640  004B96                     
 17641                           ; BSR set to: 0
 17642                           ;lib_ili9341.c: 375:     }
 17643  004B96  2B7C               	incf	lcd_draw_char@j& (0+255),f,b
 17644  004B98                     l9775:
 17645                           
 17646                           ; BSR set to: 0
 17647  004B98  90D8               	bcf	status,0,c
 17648  004B9A  356D               	rlcf	lcd_draw_char@fIndex& (0+255),w,b
 17649  004B9C  6EF6               	movwf	tblptrl,c
 17650  004B9E  356E               	rlcf	(lcd_draw_char@fIndex+1)& (0+255),w,b
 17651  004BA0  6EF7               	movwf	tblptrh,c
 17652  004BA2  0E9D               	movlw	low _font
 17653  004BA4  26F6               	addwf	tblptrl,f,c
 17654  004BA6  0EF1               	movlw	high _font
 17655  004BA8  22F7               	addwfc	tblptrh,f,c
 17656  004BAA                     	if	1	;There are 3 active tblptr bytes
 17657  004BAA  6AF8               	clrf	tblptru,c
 17658  004BAC  0E00               	movlw	low (__mediumconst shr (0+16))
 17659  004BAE  22F8               	addwfc	tblptru,f,c
 17660  004BB0                     	endif
 17661  004BB0  517C               	movf	lcd_draw_char@j& (0+255),w,b
 17662  004BB2  6F73               	movwf	??_lcd_draw_char& (0+255),b
 17663  004BB4  6B74               	clrf	(??_lcd_draw_char+1)& (0+255),b
 17664  004BB6  0009               	tblrd		*+
 17665  004BB8  50F5               	movf	tablat,w,c
 17666  004BBA  5D73               	subwf	??_lcd_draw_char& (0+255),w,b
 17667  004BBC  0009               	tblrd		*+
 17668  004BBE  50F5               	movf	tablat,w,c
 17669  004BC0  5974               	subwfb	(??_lcd_draw_char+1)& (0+255),w,b
 17670  004BC2  A0D8               	btfss	status,0,c
 17671  004BC4  EFE6  F025         	goto	u12731
 17672  004BC8  EFE8  F025         	goto	u12730
 17673  004BCC                     u12731:
 17674  004BCC  EF2D  F025         	goto	l9745
 17675  004BD0                     u12730:
 17676  004BD0                     
 17677                           ; BSR set to: 0
 17678  004BD0  0012               	return		;funcret
 17679  004BD2                     __end_of_lcd_draw_char:
 17680                           	opt callstack 0
 17681                           
 17682 ;; *************** function _lcd_draw_line *****************
 17683 ;; Defined at:
 17684 ;;		line 210 in file "lib_ili9341.c"
 17685 ;; Parameters:    Size  Location     Type
 17686 ;;  x0              2   15[BANK0 ] unsigned short 
 17687 ;;  y0              2   17[BANK0 ] unsigned short 
 17688 ;;  x1              2   19[BANK0 ] unsigned short 
 17689 ;;  y1              2   21[BANK0 ] unsigned short 
 17690 ;;  color           2   23[BANK0 ] unsigned short 
 17691 ;; Auto vars:     Size  Location     Type
 17692 ;;  dy              2   36[BANK0 ] short 
 17693 ;;  dx              2   34[BANK0 ] short 
 17694 ;;  e2              2   32[BANK0 ] short 
 17695 ;;  err             2   30[BANK0 ] short 
 17696 ;;  sy              2   28[BANK0 ] short 
 17697 ;;  sx              2   26[BANK0 ] short 
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  1    wreg      void 
 17700 ;; Registers used:
 17701 ;;		wreg, status,2, status,0, cstack
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17707 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17708 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17710 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17711 ;;Total ram usage:       23 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:   10
 17714 ;; This function calls:
 17715 ;;		_lcd_draw_pixel_at
 17716 ;; This function is called by:
 17717 ;;		_main
 17718 ;;		_lcd_draw_filled_circle
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           
 17722                           	psect	text50
 17723  004BD2                     __ptext50:
 17724                           	opt callstack 0
 17725  004BD2                     _lcd_draw_line:
 17726                           	opt callstack 20
 17727  004BD2                     
 17728                           ;lib_ili9341.c: 210: void lcd_draw_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t 
      +                          y1, uint16_t color);lib_ili9341.c: 211: {;lib_ili9341.c: 212:     int16_t dx = x1 - x0, 
      +                          sx = x0 < x1 ? 1 : -1;
 17729  004BD2  0100               	movlb	0	; () banked
 17730  004BD4  516F               	movf	lcd_draw_line@x0& (0+255),w,b
 17731  004BD6  5D73               	subwf	lcd_draw_line@x1& (0+255),w,b
 17732  004BD8  6F82               	movwf	lcd_draw_line@dx& (0+255),b
 17733  004BDA  5170               	movf	(lcd_draw_line@x0+1)& (0+255),w,b
 17734  004BDC  5974               	subwfb	(lcd_draw_line@x1+1)& (0+255),w,b
 17735  004BDE  6F83               	movwf	(lcd_draw_line@dx+1)& (0+255),b
 17736  004BE0  5173               	movf	lcd_draw_line@x1& (0+255),w,b
 17737  004BE2  5D6F               	subwf	lcd_draw_line@x0& (0+255),w,b
 17738  004BE4  5174               	movf	(lcd_draw_line@x1+1)& (0+255),w,b
 17739  004BE6  5970               	subwfb	(lcd_draw_line@x0+1)& (0+255),w,b
 17740  004BE8  A0D8               	btfss	status,0,c
 17741  004BEA  EFF9  F025         	goto	u12801
 17742  004BEE  EFFB  F025         	goto	u12800
 17743  004BF2                     u12801:
 17744  004BF2  EFFF  F025         	goto	l10023
 17745  004BF6                     u12800:
 17746  004BF6                     
 17747                           ; BSR set to: 0
 17748  004BF6  697A               	setf	lcd_draw_line@sx& (0+255),b
 17749  004BF8  697B               	setf	(lcd_draw_line@sx+1)& (0+255),b
 17750  004BFA  EF03  F026         	goto	l10025
 17751  004BFE                     l10023:
 17752                           
 17753                           ; BSR set to: 0
 17754  004BFE  0E00               	movlw	0
 17755  004C00  6F7B               	movwf	(lcd_draw_line@sx+1)& (0+255),b
 17756  004C02  0E01               	movlw	1
 17757  004C04  6F7A               	movwf	lcd_draw_line@sx& (0+255),b
 17758  004C06                     l10025:
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;lib_ili9341.c: 213:     int16_t dy = y1 - y0, sy = y0 < y1 ? 1 : -1;
 17762  004C06  5171               	movf	lcd_draw_line@y0& (0+255),w,b
 17763  004C08  5D75               	subwf	lcd_draw_line@y1& (0+255),w,b
 17764  004C0A  6F84               	movwf	lcd_draw_line@dy& (0+255),b
 17765  004C0C  5172               	movf	(lcd_draw_line@y0+1)& (0+255),w,b
 17766  004C0E  5976               	subwfb	(lcd_draw_line@y1+1)& (0+255),w,b
 17767  004C10  6F85               	movwf	(lcd_draw_line@dy+1)& (0+255),b
 17768  004C12                     
 17769                           ; BSR set to: 0
 17770  004C12  5175               	movf	lcd_draw_line@y1& (0+255),w,b
 17771  004C14  5D71               	subwf	lcd_draw_line@y0& (0+255),w,b
 17772  004C16  5176               	movf	(lcd_draw_line@y1+1)& (0+255),w,b
 17773  004C18  5972               	subwfb	(lcd_draw_line@y0+1)& (0+255),w,b
 17774  004C1A  A0D8               	btfss	status,0,c
 17775  004C1C  EF12  F026         	goto	u12811
 17776  004C20  EF14  F026         	goto	u12810
 17777  004C24                     u12811:
 17778  004C24  EF18  F026         	goto	l10031
 17779  004C28                     u12810:
 17780  004C28                     
 17781                           ; BSR set to: 0
 17782  004C28  697C               	setf	lcd_draw_line@sy& (0+255),b
 17783  004C2A  697D               	setf	(lcd_draw_line@sy+1)& (0+255),b
 17784  004C2C  EF1C  F026         	goto	l10033
 17785  004C30                     l10031:
 17786                           
 17787                           ; BSR set to: 0
 17788  004C30  0E00               	movlw	0
 17789  004C32  6F7D               	movwf	(lcd_draw_line@sy+1)& (0+255),b
 17790  004C34  0E01               	movlw	1
 17791  004C36  6F7C               	movwf	lcd_draw_line@sy& (0+255),b
 17792  004C38                     l10033:
 17793                           
 17794                           ; BSR set to: 0
 17795                           ;lib_ili9341.c: 214:     int16_t err, e2;;lib_ili9341.c: 216:     if(x0 > x1)
 17796  004C38  516F               	movf	lcd_draw_line@x0& (0+255),w,b
 17797  004C3A  5D73               	subwf	lcd_draw_line@x1& (0+255),w,b
 17798  004C3C  5170               	movf	(lcd_draw_line@x0+1)& (0+255),w,b
 17799  004C3E  5974               	subwfb	(lcd_draw_line@x1+1)& (0+255),w,b
 17800  004C40  B0D8               	btfsc	status,0,c
 17801  004C42  EF25  F026         	goto	u12821
 17802  004C46  EF27  F026         	goto	u12820
 17803  004C4A                     u12821:
 17804  004C4A  EF2B  F026         	goto	l10037
 17805  004C4E                     u12820:
 17806  004C4E                     
 17807                           ; BSR set to: 0
 17808                           ;lib_ili9341.c: 217:     {;lib_ili9341.c: 218:         dx = -dx;
 17809  004C4E  6D82               	negf	lcd_draw_line@dx& (0+255),b
 17810  004C50  1F83               	comf	(lcd_draw_line@dx+1)& (0+255),f,b
 17811  004C52  B0D8               	btfsc	status,0,c
 17812  004C54  2B83               	incf	(lcd_draw_line@dx+1)& (0+255),f,b
 17813  004C56                     l10037:
 17814                           
 17815                           ; BSR set to: 0
 17816                           ;lib_ili9341.c: 221:     if(y1 > y0)
 17817  004C56  5175               	movf	lcd_draw_line@y1& (0+255),w,b
 17818  004C58  5D71               	subwf	lcd_draw_line@y0& (0+255),w,b
 17819  004C5A  5176               	movf	(lcd_draw_line@y1+1)& (0+255),w,b
 17820  004C5C  5972               	subwfb	(lcd_draw_line@y0+1)& (0+255),w,b
 17821  004C5E  B0D8               	btfsc	status,0,c
 17822  004C60  EF34  F026         	goto	u12831
 17823  004C64  EF36  F026         	goto	u12830
 17824  004C68                     u12831:
 17825  004C68  EF3A  F026         	goto	l10041
 17826  004C6C                     u12830:
 17827  004C6C                     
 17828                           ; BSR set to: 0
 17829                           ;lib_ili9341.c: 222:     {;lib_ili9341.c: 223:         dy = -dy;
 17830  004C6C  6D84               	negf	lcd_draw_line@dy& (0+255),b
 17831  004C6E  1F85               	comf	(lcd_draw_line@dy+1)& (0+255),f,b
 17832  004C70  B0D8               	btfsc	status,0,c
 17833  004C72  2B85               	incf	(lcd_draw_line@dy+1)& (0+255),f,b
 17834  004C74                     l10041:
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;lib_ili9341.c: 226:     err = dx + dy;
 17838  004C74  5184               	movf	lcd_draw_line@dy& (0+255),w,b
 17839  004C76  2582               	addwf	lcd_draw_line@dx& (0+255),w,b
 17840  004C78  6F7E               	movwf	lcd_draw_line@err& (0+255),b
 17841  004C7A  5185               	movf	(lcd_draw_line@dy+1)& (0+255),w,b
 17842  004C7C  2183               	addwfc	(lcd_draw_line@dx+1)& (0+255),w,b
 17843  004C7E  6F7F               	movwf	(lcd_draw_line@err+1)& (0+255),b
 17844  004C80                     l10043:
 17845                           
 17846                           ; BSR set to: 0
 17847                           ;lib_ili9341.c: 229:     {;lib_ili9341.c: 230:         lcd_draw_pixel_at( x0, y0, color)
      +                          ;
 17848  004C80  C06F  F069         	movff	lcd_draw_line@x0,lcd_draw_pixel_at@x
 17849  004C84  C070  F06A         	movff	lcd_draw_line@x0+1,lcd_draw_pixel_at@x+1
 17850  004C88  C071  F06B         	movff	lcd_draw_line@y0,lcd_draw_pixel_at@y
 17851  004C8C  C072  F06C         	movff	lcd_draw_line@y0+1,lcd_draw_pixel_at@y+1
 17852  004C90  C077  F06D         	movff	lcd_draw_line@color,lcd_draw_pixel_at@color
 17853  004C94  C078  F06E         	movff	lcd_draw_line@color+1,lcd_draw_pixel_at@color+1
 17854  004C98  EC0C  F032         	call	_lcd_draw_pixel_at	;wreg free
 17855  004C9C                     
 17856                           ;lib_ili9341.c: 232:         if ( (x0 == x1) && (y0 == y1) )
 17857  004C9C  0100               	movlb	0	; () banked
 17858  004C9E  5173               	movf	lcd_draw_line@x1& (0+255),w,b
 17859  004CA0  196F               	xorwf	lcd_draw_line@x0& (0+255),w,b
 17860  004CA2  E107               	bnz	u12841
 17861  004CA4  5174               	movf	(lcd_draw_line@x1+1)& (0+255),w,b
 17862  004CA6  1970               	xorwf	(lcd_draw_line@x0+1)& (0+255),w,b
 17863  004CA8  A4D8               	btfss	status,2,c
 17864  004CAA  EF59  F026         	goto	u12841
 17865  004CAE  EF5B  F026         	goto	u12840
 17866  004CB2                     u12841:
 17867  004CB2  EF69  F026         	goto	l10051
 17868  004CB6                     u12840:
 17869  004CB6                     
 17870                           ; BSR set to: 0
 17871  004CB6  5175               	movf	lcd_draw_line@y1& (0+255),w,b
 17872  004CB8  1971               	xorwf	lcd_draw_line@y0& (0+255),w,b
 17873  004CBA  E107               	bnz	u12851
 17874  004CBC  5176               	movf	(lcd_draw_line@y1+1)& (0+255),w,b
 17875  004CBE  1972               	xorwf	(lcd_draw_line@y0+1)& (0+255),w,b
 17876  004CC0  A4D8               	btfss	status,2,c
 17877  004CC2  EF65  F026         	goto	u12851
 17878  004CC6  EF67  F026         	goto	u12850
 17879  004CCA                     u12851:
 17880  004CCA  EF69  F026         	goto	l10051
 17881  004CCE                     u12850:
 17882  004CCE  EF9E  F026         	goto	l486
 17883  004CD2                     l10051:
 17884                           
 17885                           ; BSR set to: 0
 17886                           ;lib_ili9341.c: 237:         e2 = (err << 1);
 17887  004CD2  90D8               	bcf	status,0,c
 17888  004CD4  357E               	rlcf	lcd_draw_line@err& (0+255),w,b
 17889  004CD6  6F80               	movwf	lcd_draw_line@e2& (0+255),b
 17890  004CD8  357F               	rlcf	(lcd_draw_line@err+1)& (0+255),w,b
 17891  004CDA  6F81               	movwf	(lcd_draw_line@e2+1)& (0+255),b
 17892                           
 17893                           ;lib_ili9341.c: 239:         if(e2 >= dy)
 17894  004CDC  5184               	movf	lcd_draw_line@dy& (0+255),w,b
 17895  004CDE  5D80               	subwf	lcd_draw_line@e2& (0+255),w,b
 17896  004CE0  5181               	movf	(lcd_draw_line@e2+1)& (0+255),w,b
 17897  004CE2  0A80               	xorlw	128
 17898  004CE4  6F79               	movwf	??_lcd_draw_line& (0+255),b
 17899  004CE6  5185               	movf	(lcd_draw_line@dy+1)& (0+255),w,b
 17900  004CE8  0A80               	xorlw	128
 17901  004CEA  5979               	subwfb	??_lcd_draw_line& (0+255),w,b
 17902  004CEC  A0D8               	btfss	status,0,c
 17903  004CEE  EF7B  F026         	goto	u12861
 17904  004CF2  EF7D  F026         	goto	u12860
 17905  004CF6                     u12861:
 17906  004CF6  EF85  F026         	goto	l483
 17907  004CFA                     u12860:
 17908  004CFA                     
 17909                           ; BSR set to: 0
 17910                           ;lib_ili9341.c: 240:         {;lib_ili9341.c: 241:             err += dy;
 17911  004CFA  5184               	movf	lcd_draw_line@dy& (0+255),w,b
 17912  004CFC  277E               	addwf	lcd_draw_line@err& (0+255),f,b
 17913  004CFE  5185               	movf	(lcd_draw_line@dy+1)& (0+255),w,b
 17914  004D00  237F               	addwfc	(lcd_draw_line@err+1)& (0+255),f,b
 17915                           
 17916                           ;lib_ili9341.c: 242:             x0 += sx;
 17917  004D02  517A               	movf	lcd_draw_line@sx& (0+255),w,b
 17918  004D04  276F               	addwf	lcd_draw_line@x0& (0+255),f,b
 17919  004D06  517B               	movf	(lcd_draw_line@sx+1)& (0+255),w,b
 17920  004D08  2370               	addwfc	(lcd_draw_line@x0+1)& (0+255),f,b
 17921  004D0A                     l483:
 17922                           
 17923                           ; BSR set to: 0
 17924                           ;lib_ili9341.c: 245:         if(e2 <= dx)
 17925  004D0A  5180               	movf	lcd_draw_line@e2& (0+255),w,b
 17926  004D0C  5D82               	subwf	lcd_draw_line@dx& (0+255),w,b
 17927  004D0E  5183               	movf	(lcd_draw_line@dx+1)& (0+255),w,b
 17928  004D10  0A80               	xorlw	128
 17929  004D12  6F79               	movwf	??_lcd_draw_line& (0+255),b
 17930  004D14  5181               	movf	(lcd_draw_line@e2+1)& (0+255),w,b
 17931  004D16  0A80               	xorlw	128
 17932  004D18  5979               	subwfb	??_lcd_draw_line& (0+255),w,b
 17933  004D1A  A0D8               	btfss	status,0,c
 17934  004D1C  EF92  F026         	goto	u12871
 17935  004D20  EF94  F026         	goto	u12870
 17936  004D24                     u12871:
 17937  004D24  EF40  F026         	goto	l10043
 17938  004D28                     u12870:
 17939  004D28                     
 17940                           ; BSR set to: 0
 17941                           ;lib_ili9341.c: 246:         {;lib_ili9341.c: 247:             err += dx;
 17942  004D28  5182               	movf	lcd_draw_line@dx& (0+255),w,b
 17943  004D2A  277E               	addwf	lcd_draw_line@err& (0+255),f,b
 17944  004D2C  5183               	movf	(lcd_draw_line@dx+1)& (0+255),w,b
 17945  004D2E  237F               	addwfc	(lcd_draw_line@err+1)& (0+255),f,b
 17946                           
 17947                           ;lib_ili9341.c: 248:             y0 += sy;
 17948  004D30  517C               	movf	lcd_draw_line@sy& (0+255),w,b
 17949  004D32  2771               	addwf	lcd_draw_line@y0& (0+255),f,b
 17950  004D34  517D               	movf	(lcd_draw_line@sy+1)& (0+255),w,b
 17951  004D36  2372               	addwfc	(lcd_draw_line@y0+1)& (0+255),f,b
 17952  004D38  EF40  F026         	goto	l10043
 17953  004D3C                     l486:
 17954                           
 17955                           ; BSR set to: 0
 17956  004D3C  0012               	return		;funcret
 17957  004D3E                     __end_of_lcd_draw_line:
 17958                           	opt callstack 0
 17959                           
 17960 ;; *************** function _lcd_draw_pixel_at *****************
 17961 ;; Defined at:
 17962 ;;		line 253 in file "lib_ili9341.c"
 17963 ;; Parameters:    Size  Location     Type
 17964 ;;  x               2    9[BANK0 ] unsigned short 
 17965 ;;  y               2   11[BANK0 ] unsigned short 
 17966 ;;  color           2   13[BANK0 ] unsigned short 
 17967 ;; Auto vars:     Size  Location     Type
 17968 ;;		None
 17969 ;; Return value:  Size  Location     Type
 17970 ;;                  1    wreg      void 
 17971 ;; Registers used:
 17972 ;;		wreg, status,2, status,0, cstack
 17973 ;; Tracked objects:
 17974 ;;		On entry : 0/0
 17975 ;;		On exit  : 0/0
 17976 ;;		Unchanged: 0/0
 17977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17978 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17982 ;;Total ram usage:        6 bytes
 17983 ;; Hardware stack levels used:    1
 17984 ;; Hardware stack levels required when called:    9
 17985 ;; This function calls:
 17986 ;;		_lcd_draw_pixel
 17987 ;;		_lcd_set_cursor
 17988 ;; This function is called by:
 17989 ;;		_lcd_draw_line
 17990 ;;		_lcd_draw_circle
 17991 ;; This function uses a non-reentrant model
 17992 ;;
 17993                           
 17994                           	psect	text51
 17995  006418                     __ptext51:
 17996                           	opt callstack 0
 17997  006418                     _lcd_draw_pixel_at:
 17998                           	opt callstack 20
 17999  006418                     
 18000                           ;lib_ili9341.c: 253: void lcd_draw_pixel_at(uint16_t x, uint16_t y, uint16_t color);lib_
      +                          ili9341.c: 254: {;lib_ili9341.c: 255:     if( !lcd_set_cursor(x,y) )
 18001  006418  C069  F065         	movff	lcd_draw_pixel_at@x,lcd_set_cursor@x
 18002  00641C  C06A  F066         	movff	lcd_draw_pixel_at@x+1,lcd_set_cursor@x+1
 18003  006420  C06B  F067         	movff	lcd_draw_pixel_at@y,lcd_set_cursor@y
 18004  006424  C06C  F068         	movff	lcd_draw_pixel_at@y+1,lcd_set_cursor@y+1
 18005  006428  ECE9  F030         	call	_lcd_set_cursor	;wreg free
 18006  00642C  0900               	iorlw	0
 18007  00642E  A4D8               	btfss	status,2,c
 18008  006430  EF1C  F032         	goto	u12681
 18009  006434  EF1E  F032         	goto	u12680
 18010  006438                     u12681:
 18011  006438  EF24  F032         	goto	l490
 18012  00643C                     u12680:
 18013  00643C                     
 18014                           ;lib_ili9341.c: 256:     {;lib_ili9341.c: 257:         lcd_draw_pixel(color);
 18015  00643C  C06D  F063         	movff	lcd_draw_pixel_at@color,lcd_draw_pixel@color
 18016  006440  C06E  F064         	movff	lcd_draw_pixel_at@color+1,lcd_draw_pixel@color+1
 18017  006444  EC08  F033         	call	_lcd_draw_pixel	;wreg free
 18018  006448                     l490:
 18019  006448  0012               	return		;funcret
 18020  00644A                     __end_of_lcd_draw_pixel_at:
 18021                           	opt callstack 0
 18022                           
 18023 ;; *************** function _lcd_set_cursor *****************
 18024 ;; Defined at:
 18025 ;;		line 142 in file "lib_ili9341.c"
 18026 ;; Parameters:    Size  Location     Type
 18027 ;;  x               2    5[BANK0 ] unsigned short 
 18028 ;;  y               2    7[BANK0 ] unsigned short 
 18029 ;; Auto vars:     Size  Location     Type
 18030 ;;		None
 18031 ;; Return value:  Size  Location     Type
 18032 ;;                  1    wreg      unsigned char 
 18033 ;; Registers used:
 18034 ;;		wreg, status,2, status,0, cstack
 18035 ;; Tracked objects:
 18036 ;;		On entry : 0/0
 18037 ;;		On exit  : 0/0
 18038 ;;		Unchanged: 0/0
 18039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18040 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18043 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18044 ;;Total ram usage:        4 bytes
 18045 ;; Hardware stack levels used:    1
 18046 ;; Hardware stack levels required when called:    8
 18047 ;; This function calls:
 18048 ;;		_lcd_set_cursor_x
 18049 ;;		_lcd_set_cursor_y
 18050 ;; This function is called by:
 18051 ;;		_lcd_fill
 18052 ;;		_lcd_draw_pixel_at
 18053 ;;		_lcd_draw_char
 18054 ;;		_lcd_fill_rect
 18055 ;; This function uses a non-reentrant model
 18056 ;;
 18057                           
 18058                           	psect	text52
 18059  0061D2                     __ptext52:
 18060                           	opt callstack 0
 18061  0061D2                     _lcd_set_cursor:
 18062                           	opt callstack 20
 18063  0061D2                     
 18064                           ;lib_ili9341.c: 142: uint8_t lcd_set_cursor(uint16_t x, uint16_t y);lib_ili9341.c: 143: 
      +                          {;lib_ili9341.c: 144:     if( lcd_set_cursor_x(x) || lcd_set_cursor_y(y) )
 18065  0061D2  C065  F063         	movff	lcd_set_cursor@x,lcd_set_cursor_x@x
 18066  0061D6  C066  F064         	movff	lcd_set_cursor@x+1,lcd_set_cursor_x@x+1
 18067  0061DA  EC35  F030         	call	_lcd_set_cursor_x	;wreg free
 18068  0061DE  0900               	iorlw	0
 18069  0061E0  A4D8               	btfss	status,2,c
 18070  0061E2  EFF5  F030         	goto	u12611
 18071  0061E6  EFF7  F030         	goto	u12610
 18072  0061EA                     u12611:
 18073  0061EA  EF05  F031         	goto	l9643
 18074  0061EE                     u12610:
 18075  0061EE  C067  F063         	movff	lcd_set_cursor@y,lcd_set_cursor_y@y
 18076  0061F2  C068  F064         	movff	lcd_set_cursor@y+1,lcd_set_cursor_y@y+1
 18077  0061F6  EC0E  F030         	call	_lcd_set_cursor_y	;wreg free
 18078  0061FA  0900               	iorlw	0
 18079  0061FC  B4D8               	btfsc	status,2,c
 18080  0061FE  EF03  F031         	goto	u12621
 18081  006202  EF05  F031         	goto	u12620
 18082  006206                     u12621:
 18083  006206  EF08  F031         	goto	l9647
 18084  00620A                     u12620:
 18085  00620A                     l9643:
 18086                           
 18087                           ;lib_ili9341.c: 145:     {;lib_ili9341.c: 146:         return 1;
 18088  00620A  0E01               	movlw	1
 18089  00620C  EF09  F031         	goto	l446
 18090  006210                     l9647:
 18091                           
 18092                           ;lib_ili9341.c: 149:     return 0;
 18093  006210  0E00               	movlw	0
 18094  006212                     l446:
 18095  006212  0012               	return		;funcret
 18096  006214                     __end_of_lcd_set_cursor:
 18097                           	opt callstack 0
 18098                           
 18099 ;; *************** function _lcd_set_cursor_y *****************
 18100 ;; Defined at:
 18101 ;;		line 168 in file "lib_ili9341.c"
 18102 ;; Parameters:    Size  Location     Type
 18103 ;;  y               2    3[BANK0 ] unsigned short 
 18104 ;; Auto vars:     Size  Location     Type
 18105 ;;		None
 18106 ;; Return value:  Size  Location     Type
 18107 ;;                  1    wreg      unsigned char 
 18108 ;; Registers used:
 18109 ;;		wreg, status,2, status,0, cstack
 18110 ;; Tracked objects:
 18111 ;;		On entry : 0/0
 18112 ;;		On exit  : 0/0
 18113 ;;		Unchanged: 0/0
 18114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18119 ;;Total ram usage:        2 bytes
 18120 ;; Hardware stack levels used:    1
 18121 ;; Hardware stack levels required when called:    7
 18122 ;; This function calls:
 18123 ;;		_lcd_send
 18124 ;; This function is called by:
 18125 ;;		_lcd_set_cursor
 18126 ;; This function uses a non-reentrant model
 18127 ;;
 18128                           
 18129                           	psect	text53
 18130  00601C                     __ptext53:
 18131                           	opt callstack 0
 18132  00601C                     _lcd_set_cursor_y:
 18133                           	opt callstack 20
 18134  00601C                     
 18135                           ;lib_ili9341.c: 168: uint8_t lcd_set_cursor_y(uint16_t y);lib_ili9341.c: 169: {;lib_ili9
      +                          341.c: 170:     if( y >= 240 )
 18136  00601C  0100               	movlb	0	; () banked
 18137  00601E  5164               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 18138  006020  E109               	bnz	u12080
 18139  006022  0EF0               	movlw	240
 18140  006024  5D63               	subwf	lcd_set_cursor_y@y& (0+255),w,b
 18141  006026  A0D8               	btfss	status,0,c
 18142  006028  EF18  F030         	goto	u12081
 18143  00602C  EF1A  F030         	goto	u12080
 18144  006030                     u12081:
 18145  006030  EF1D  F030         	goto	l9255
 18146  006034                     u12080:
 18147  006034                     
 18148                           ; BSR set to: 0
 18149                           ;lib_ili9341.c: 171:     {;lib_ili9341.c: 172:         return 1;
 18150  006034  0E01               	movlw	1
 18151  006036  EF34  F030         	goto	l454
 18152  00603A                     l9255:
 18153                           
 18154                           ; BSR set to: 0
 18155                           ;lib_ili9341.c: 175:     lcd_send(0, 0x2A);
 18156  00603A  0E2A               	movlw	42
 18157  00603C  6F61               	movwf	lcd_send@value& (0+255),b
 18158  00603E  0E00               	movlw	0
 18159  006040  ECDC  F032         	call	_lcd_send
 18160                           
 18161                           ;lib_ili9341.c: 176:     lcd_send(1, y >> 8);
 18162  006044  0100               	movlb	0	; () banked
 18163  006046  5164               	movf	(lcd_set_cursor_y@y+1)& (0+255),w,b
 18164  006048  6F61               	movwf	lcd_send@value& (0+255),b
 18165  00604A  0E01               	movlw	1
 18166  00604C  ECDC  F032         	call	_lcd_send
 18167                           
 18168                           ;lib_ili9341.c: 177:     lcd_send(1, y & 0xFF);
 18169  006050  C063  F061         	movff	lcd_set_cursor_y@y,lcd_send@value
 18170  006054  0E01               	movlw	1
 18171  006056  ECDC  F032         	call	_lcd_send
 18172                           
 18173                           ;lib_ili9341.c: 178:     lcd_send(0, 0x2c);
 18174  00605A  0E2C               	movlw	44
 18175  00605C  0100               	movlb	0	; () banked
 18176  00605E  6F61               	movwf	lcd_send@value& (0+255),b
 18177  006060  0E00               	movlw	0
 18178  006062  ECDC  F032         	call	_lcd_send
 18179  006066                     
 18180                           ;lib_ili9341.c: 180:     return 0;
 18181  006066  0E00               	movlw	0
 18182  006068                     l454:
 18183  006068  0012               	return		;funcret
 18184  00606A                     __end_of_lcd_set_cursor_y:
 18185                           	opt callstack 0
 18186                           
 18187 ;; *************** function _lcd_set_cursor_x *****************
 18188 ;; Defined at:
 18189 ;;		line 153 in file "lib_ili9341.c"
 18190 ;; Parameters:    Size  Location     Type
 18191 ;;  x               2    3[BANK0 ] unsigned short 
 18192 ;; Auto vars:     Size  Location     Type
 18193 ;;		None
 18194 ;; Return value:  Size  Location     Type
 18195 ;;                  1    wreg      unsigned char 
 18196 ;; Registers used:
 18197 ;;		wreg, status,2, status,0, cstack
 18198 ;; Tracked objects:
 18199 ;;		On entry : 0/0
 18200 ;;		On exit  : 0/0
 18201 ;;		Unchanged: 0/0
 18202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18203 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18207 ;;Total ram usage:        2 bytes
 18208 ;; Hardware stack levels used:    1
 18209 ;; Hardware stack levels required when called:    7
 18210 ;; This function calls:
 18211 ;;		_lcd_send
 18212 ;; This function is called by:
 18213 ;;		_lcd_set_cursor
 18214 ;; This function uses a non-reentrant model
 18215 ;;
 18216                           
 18217                           	psect	text54
 18218  00606A                     __ptext54:
 18219                           	opt callstack 0
 18220  00606A                     _lcd_set_cursor_x:
 18221                           	opt callstack 20
 18222  00606A                     
 18223                           ;lib_ili9341.c: 153: uint8_t lcd_set_cursor_x(uint16_t x);lib_ili9341.c: 154: {;lib_ili9
      +                          341.c: 155:     if( x >= 320 )
 18224  00606A  0E40               	movlw	64
 18225  00606C  0100               	movlb	0	; () banked
 18226  00606E  5D63               	subwf	lcd_set_cursor_x@x& (0+255),w,b
 18227  006070  0E01               	movlw	1
 18228  006072  5964               	subwfb	(lcd_set_cursor_x@x+1)& (0+255),w,b
 18229  006074  A0D8               	btfss	status,0,c
 18230  006076  EF3F  F030         	goto	u12071
 18231  00607A  EF41  F030         	goto	u12070
 18232  00607E                     u12071:
 18233  00607E  EF44  F030         	goto	l9243
 18234  006082                     u12070:
 18235  006082                     
 18236                           ; BSR set to: 0
 18237                           ;lib_ili9341.c: 156:     {;lib_ili9341.c: 157:         return 1;
 18238  006082  0E01               	movlw	1
 18239  006084  EF5B  F030         	goto	l450
 18240  006088                     l9243:
 18241                           
 18242                           ; BSR set to: 0
 18243                           ;lib_ili9341.c: 160:     lcd_send(0, 0x2B);
 18244  006088  0E2B               	movlw	43
 18245  00608A  6F61               	movwf	lcd_send@value& (0+255),b
 18246  00608C  0E00               	movlw	0
 18247  00608E  ECDC  F032         	call	_lcd_send
 18248                           
 18249                           ;lib_ili9341.c: 161:     lcd_send(1, x >> 8);
 18250  006092  0100               	movlb	0	; () banked
 18251  006094  5164               	movf	(lcd_set_cursor_x@x+1)& (0+255),w,b
 18252  006096  6F61               	movwf	lcd_send@value& (0+255),b
 18253  006098  0E01               	movlw	1
 18254  00609A  ECDC  F032         	call	_lcd_send
 18255                           
 18256                           ;lib_ili9341.c: 162:     lcd_send(1, x & 0xFF);
 18257  00609E  C063  F061         	movff	lcd_set_cursor_x@x,lcd_send@value
 18258  0060A2  0E01               	movlw	1
 18259  0060A4  ECDC  F032         	call	_lcd_send
 18260                           
 18261                           ;lib_ili9341.c: 163:     lcd_send(0, 0x2c);
 18262  0060A8  0E2C               	movlw	44
 18263  0060AA  0100               	movlb	0	; () banked
 18264  0060AC  6F61               	movwf	lcd_send@value& (0+255),b
 18265  0060AE  0E00               	movlw	0
 18266  0060B0  ECDC  F032         	call	_lcd_send
 18267  0060B4                     
 18268                           ;lib_ili9341.c: 165:     return 0;
 18269  0060B4  0E00               	movlw	0
 18270  0060B6                     l450:
 18271  0060B6  0012               	return		;funcret
 18272  0060B8                     __end_of_lcd_set_cursor_x:
 18273                           	opt callstack 0
 18274                           
 18275 ;; *************** function _lcd_draw_pixel *****************
 18276 ;; Defined at:
 18277 ;;		line 183 in file "lib_ili9341.c"
 18278 ;; Parameters:    Size  Location     Type
 18279 ;;  color           2    3[BANK0 ] unsigned short 
 18280 ;; Auto vars:     Size  Location     Type
 18281 ;;		None
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  1    wreg      unsigned char 
 18284 ;; Registers used:
 18285 ;;		wreg, status,2, cstack
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18291 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18295 ;;Total ram usage:        2 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:    7
 18298 ;; This function calls:
 18299 ;;		_lcd_send
 18300 ;; This function is called by:
 18301 ;;		_lcd_fill
 18302 ;;		_lcd_draw_pixel_at
 18303 ;;		_lcd_draw_char
 18304 ;;		_lcd_fill_rect
 18305 ;; This function uses a non-reentrant model
 18306 ;;
 18307                           
 18308                           	psect	text55
 18309  006610                     __ptext55:
 18310                           	opt callstack 0
 18311  006610                     _lcd_draw_pixel:
 18312                           	opt callstack 21
 18313  006610                     
 18314                           ;lib_ili9341.c: 183: uint8_t lcd_draw_pixel(uint16_t color);lib_ili9341.c: 184: {;lib_il
      +                          i9341.c: 185:     lcd_send(1, color >> 8);
 18315  006610  0100               	movlb	0	; () banked
 18316  006612  5164               	movf	(lcd_draw_pixel@color+1)& (0+255),w,b
 18317  006614  6F61               	movwf	lcd_send@value& (0+255),b
 18318  006616  0E01               	movlw	1
 18319  006618  ECDC  F032         	call	_lcd_send
 18320                           
 18321                           ;lib_ili9341.c: 186:     lcd_send(1, color & 0xFF);
 18322  00661C  C063  F061         	movff	lcd_draw_pixel@color,lcd_send@value
 18323  006620  0E01               	movlw	1
 18324  006622  ECDC  F032         	call	_lcd_send
 18325  006626  0012               	return		;funcret
 18326  006628                     __end_of_lcd_draw_pixel:
 18327                           	opt callstack 0
 18328                           
 18329 ;; *************** function _lcd_send *****************
 18330 ;; Defined at:
 18331 ;;		line 132 in file "lib_ili9341.c"
 18332 ;; Parameters:    Size  Location     Type
 18333 ;;  dc              1    wreg     _Bool 
 18334 ;;  value           1    1[BANK0 ] unsigned char 
 18335 ;; Auto vars:     Size  Location     Type
 18336 ;;  dc              1    2[BANK0 ] _Bool 
 18337 ;; Return value:  Size  Location     Type
 18338 ;;                  1    wreg      void 
 18339 ;; Registers used:
 18340 ;;		wreg, status,2, cstack
 18341 ;; Tracked objects:
 18342 ;;		On entry : 0/0
 18343 ;;		On exit  : 0/0
 18344 ;;		Unchanged: 0/0
 18345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18346 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18350 ;;Total ram usage:        2 bytes
 18351 ;; Hardware stack levels used:    1
 18352 ;; Hardware stack levels required when called:    6
 18353 ;; This function calls:
 18354 ;;		_SPI_ExchangeByte
 18355 ;; This function is called by:
 18356 ;;		_lcd_init
 18357 ;;		_lcd_set_cursor_x
 18358 ;;		_lcd_set_cursor_y
 18359 ;;		_lcd_draw_pixel
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text56
 18364  0065B8                     __ptext56:
 18365                           	opt callstack 0
 18366  0065B8                     _lcd_send:
 18367                           	opt callstack 23
 18368                           
 18369                           ;incstack = 0
 18370                           ;lcd_send@dc stored from wreg
 18371  0065B8  0100               	movlb	0	; () banked
 18372  0065BA  6F62               	movwf	lcd_send@dc& (0+255),b
 18373  0065BC                     
 18374                           ;lib_ili9341.c: 132: void lcd_send(_Bool dc, uint8_t value);lib_ili9341.c: 133: {;lib_il
      +                          i9341.c: 134:     LATEbits.LE0 = dc;
 18375  0065BC  0100               	movlb	0	; () banked
 18376  0065BE  B162               	btfsc	lcd_send@dc& (0+255),0,b
 18377  0065C0  D002               	bra	u10815
 18378  0065C2  908D               	bcf	141,0,c	;volatile
 18379  0065C4  D001               	bra	u10816
 18380  0065C6                     u10815:
 18381  0065C6  808D               	bsf	141,0,c	;volatile
 18382  0065C8                     u10816:
 18383  0065C8                     
 18384                           ;lib_ili9341.c: 136:     LATEbits.LE1 = 0;
 18385  0065C8  928D               	bcf	141,1,c	;volatile
 18386  0065CA                     
 18387                           ;lib_ili9341.c: 138:     SPI_ExchangeByte(value);
 18388  0065CA  0100               	movlb	0	; () banked
 18389  0065CC  5161               	movf	lcd_send@value& (0+255),w,b
 18390  0065CE  ECFA  F032         	call	_SPI_ExchangeByte
 18391  0065D2                     
 18392                           ;lib_ili9341.c: 139:     LATEbits.LE1 = 1;
 18393  0065D2  828D               	bsf	141,1,c	;volatile
 18394  0065D4  0012               	return		;funcret
 18395  0065D6                     __end_of_lcd_send:
 18396                           	opt callstack 0
 18397                           
 18398 ;; *************** function _SPI_ExchangeByte *****************
 18399 ;; Defined at:
 18400 ;;		line 92 in file "mcc_generated_files/spi.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;  data            1    wreg     unsigned char 
 18403 ;; Auto vars:     Size  Location     Type
 18404 ;;  data            1    0[BANK0 ] unsigned char 
 18405 ;; Return value:  Size  Location     Type
 18406 ;;                  1    wreg      unsigned char 
 18407 ;; Registers used:
 18408 ;;		wreg, status,2
 18409 ;; Tracked objects:
 18410 ;;		On entry : 0/0
 18411 ;;		On exit  : 0/0
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18417 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18418 ;;Total ram usage:        1 bytes
 18419 ;; Hardware stack levels used:    1
 18420 ;; Hardware stack levels required when called:    5
 18421 ;; This function calls:
 18422 ;;		Nothing
 18423 ;; This function is called by:
 18424 ;;		_lcd_send
 18425 ;;		_SPI_WriteBlock
 18426 ;;		_SPI_ReadBlock
 18427 ;; This function uses a non-reentrant model
 18428 ;;
 18429                           
 18430                           	psect	text57
 18431  0065F4                     __ptext57:
 18432                           	opt callstack 0
 18433  0065F4                     _SPI_ExchangeByte:
 18434                           	opt callstack 23
 18435                           
 18436                           ;incstack = 0
 18437                           ;SPI_ExchangeByte@data stored from wreg
 18438  0065F4  0100               	movlb	0	; () banked
 18439  0065F6  6F60               	movwf	SPI_ExchangeByte@data& (0+255),b
 18440  0065F8                     
 18441                           ;mcc_generated_files/spi.c: 92: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 93: {;mcc_generated_files/spi.c: 94:     SSPBUF = data;
 18442  0065F8  C060  FFC9         	movff	SPI_ExchangeByte@data,4041	;volatile
 18443  0065FC                     l148:
 18444  0065FC  A69E               	btfss	158,3,c	;volatile
 18445  0065FE  EF03  F033         	goto	u9541
 18446  006602  EF05  F033         	goto	u9540
 18447  006606                     u9541:
 18448  006606  EFFE  F032         	goto	l148
 18449  00660A                     u9540:
 18450  00660A                     
 18451                           ;mcc_generated_files/spi.c: 96:     PIR1bits.SSPIF = 0;
 18452  00660A  969E               	bcf	158,3,c	;volatile
 18453                           
 18454                           ;mcc_generated_files/spi.c: 97:     return SSPBUF;
 18455  00660C  50C9               	movf	201,w,c	;volatile
 18456  00660E  0012               	return		;funcret
 18457  006610                     __end_of_SPI_ExchangeByte:
 18458                           	opt callstack 0
 18459                           
 18460 ;; *************** function ___aldiv *****************
 18461 ;; Defined at:
 18462 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 18463 ;; Parameters:    Size  Location     Type
 18464 ;;  dividend        4    0[BANK0 ] long 
 18465 ;;  divisor         4    4[BANK0 ] long 
 18466 ;; Auto vars:     Size  Location     Type
 18467 ;;  quotient        4   10[BANK0 ] long 
 18468 ;;  sign            1    9[BANK0 ] unsigned char 
 18469 ;;  counter         1    8[BANK0 ] unsigned char 
 18470 ;; Return value:  Size  Location     Type
 18471 ;;                  4    0[BANK0 ] long 
 18472 ;; Registers used:
 18473 ;;		wreg, status,2, status,0
 18474 ;; Tracked objects:
 18475 ;;		On entry : 0/0
 18476 ;;		On exit  : 0/0
 18477 ;;		Unchanged: 0/0
 18478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18479 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18480 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18482 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18483 ;;Total ram usage:       14 bytes
 18484 ;; Hardware stack levels used:    1
 18485 ;; Hardware stack levels required when called:    5
 18486 ;; This function calls:
 18487 ;;		Nothing
 18488 ;; This function is called by:
 18489 ;;		_main
 18490 ;; This function uses a non-reentrant model
 18491 ;;
 18492                           
 18493                           	psect	text58
 18494  005234                     __ptext58:
 18495                           	opt callstack 0
 18496  005234                     ___aldiv:
 18497                           	opt callstack 25
 18498  005234  0E00               	movlw	0
 18499  005236  0100               	movlb	0	; () banked
 18500  005238  6F69               	movwf	___aldiv@sign& (0+255),b
 18501  00523A                     
 18502                           ; BSR set to: 0
 18503  00523A  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 18504  00523C  EF24  F029         	goto	u12920
 18505  005240  EF22  F029         	goto	u12921
 18506  005244                     u12921:
 18507  005244  EF2E  F029         	goto	l10089
 18508  005248                     u12920:
 18509  005248                     
 18510                           ; BSR set to: 0
 18511  005248  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 18512  00524A  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 18513  00524C  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 18514  00524E  6D64               	negf	___aldiv@divisor& (0+255),b
 18515  005250  0E00               	movlw	0
 18516  005252  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 18517  005254  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 18518  005256  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 18519  005258                     
 18520                           ; BSR set to: 0
 18521  005258  0E01               	movlw	1
 18522  00525A  6F69               	movwf	___aldiv@sign& (0+255),b
 18523  00525C                     l10089:
 18524                           
 18525                           ; BSR set to: 0
 18526  00525C  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
 18527  00525E  EF35  F029         	goto	u12930
 18528  005262  EF33  F029         	goto	u12931
 18529  005266                     u12931:
 18530  005266  EF3F  F029         	goto	l10095
 18531  00526A                     u12930:
 18532  00526A                     
 18533                           ; BSR set to: 0
 18534  00526A  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 18535  00526C  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 18536  00526E  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 18537  005270  6D60               	negf	___aldiv@dividend& (0+255),b
 18538  005272  0E00               	movlw	0
 18539  005274  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 18540  005276  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 18541  005278  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 18542  00527A                     
 18543                           ; BSR set to: 0
 18544  00527A  0E01               	movlw	1
 18545  00527C  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 18546  00527E                     l10095:
 18547                           
 18548                           ; BSR set to: 0
 18549  00527E  0E00               	movlw	0
 18550  005280  6F6A               	movwf	___aldiv@quotient& (0+255),b
 18551  005282  0E00               	movlw	0
 18552  005284  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 18553  005286  0E00               	movlw	0
 18554  005288  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 18555  00528A  0E00               	movlw	0
 18556  00528C  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 18557  00528E                     
 18558                           ; BSR set to: 0
 18559  00528E  5164               	movf	___aldiv@divisor& (0+255),w,b
 18560  005290  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 18561  005292  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 18562  005294  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 18563  005296  B4D8               	btfsc	status,2,c
 18564  005298  EF50  F029         	goto	u12941
 18565  00529C  EF52  F029         	goto	u12940
 18566  0052A0                     u12941:
 18567  0052A0  EF88  F029         	goto	l10117
 18568  0052A4                     u12940:
 18569  0052A4                     
 18570                           ; BSR set to: 0
 18571  0052A4  0E01               	movlw	1
 18572  0052A6  6F68               	movwf	___aldiv@counter& (0+255),b
 18573  0052A8  EF5C  F029         	goto	l10103
 18574  0052AC                     l10101:
 18575                           
 18576                           ; BSR set to: 0
 18577  0052AC  90D8               	bcf	status,0,c
 18578  0052AE  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 18579  0052B0  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 18580  0052B2  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 18581  0052B4  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 18582  0052B6  2B68               	incf	___aldiv@counter& (0+255),f,b
 18583  0052B8                     l10103:
 18584                           
 18585                           ; BSR set to: 0
 18586  0052B8  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 18587  0052BA  EF61  F029         	goto	u12951
 18588  0052BE  EF63  F029         	goto	u12950
 18589  0052C2                     u12951:
 18590  0052C2  EF56  F029         	goto	l10101
 18591  0052C6                     u12950:
 18592  0052C6                     l10105:
 18593                           
 18594                           ; BSR set to: 0
 18595  0052C6  90D8               	bcf	status,0,c
 18596  0052C8  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 18597  0052CA  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 18598  0052CC  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 18599  0052CE  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 18600  0052D0                     
 18601                           ; BSR set to: 0
 18602  0052D0  5164               	movf	___aldiv@divisor& (0+255),w,b
 18603  0052D2  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 18604  0052D4  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 18605  0052D6  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 18606  0052D8  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 18607  0052DA  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 18608  0052DC  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 18609  0052DE  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 18610  0052E0  A0D8               	btfss	status,0,c
 18611  0052E2  EF75  F029         	goto	u12961
 18612  0052E6  EF77  F029         	goto	u12960
 18613  0052EA                     u12961:
 18614  0052EA  EF80  F029         	goto	l10113
 18615  0052EE                     u12960:
 18616  0052EE                     
 18617                           ; BSR set to: 0
 18618  0052EE  5164               	movf	___aldiv@divisor& (0+255),w,b
 18619  0052F0  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 18620  0052F2  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 18621  0052F4  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 18622  0052F6  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 18623  0052F8  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 18624  0052FA  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 18625  0052FC  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 18626  0052FE                     
 18627                           ; BSR set to: 0
 18628  0052FE  816A               	bsf	___aldiv@quotient& (0+255),0,b
 18629  005300                     l10113:
 18630                           
 18631                           ; BSR set to: 0
 18632  005300  90D8               	bcf	status,0,c
 18633  005302  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 18634  005304  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 18635  005306  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 18636  005308  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 18637  00530A                     
 18638                           ; BSR set to: 0
 18639  00530A  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 18640  00530C  EF63  F029         	goto	l10105
 18641  005310                     l10117:
 18642                           
 18643                           ; BSR set to: 0
 18644  005310  5169               	movf	___aldiv@sign& (0+255),w,b
 18645  005312  B4D8               	btfsc	status,2,c
 18646  005314  EF8E  F029         	goto	u12971
 18647  005318  EF90  F029         	goto	u12970
 18648  00531C                     u12971:
 18649  00531C  EF98  F029         	goto	l10121
 18650  005320                     u12970:
 18651  005320                     
 18652                           ; BSR set to: 0
 18653  005320  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 18654  005322  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 18655  005324  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 18656  005326  6D6A               	negf	___aldiv@quotient& (0+255),b
 18657  005328  0E00               	movlw	0
 18658  00532A  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 18659  00532C  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 18660  00532E  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 18661  005330                     l10121:
 18662                           
 18663                           ; BSR set to: 0
 18664  005330  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 18665  005334  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 18666  005338  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 18667  00533C  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 18668  005340                     
 18669                           ; BSR set to: 0
 18670  005340  0012               	return		;funcret
 18671  005342                     __end_of___aldiv:
 18672                           	opt callstack 0
 18673                           
 18674 ;; *************** function _SYSTEM_Initialize *****************
 18675 ;; Defined at:
 18676 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18677 ;; Parameters:    Size  Location     Type
 18678 ;;		None
 18679 ;; Auto vars:     Size  Location     Type
 18680 ;;		None
 18681 ;; Return value:  Size  Location     Type
 18682 ;;                  1    wreg      void 
 18683 ;; Registers used:
 18684 ;;		wreg, status,2, status,0, cstack
 18685 ;; Tracked objects:
 18686 ;;		On entry : 0/0
 18687 ;;		On exit  : 0/0
 18688 ;;		Unchanged: 0/0
 18689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18694 ;;Total ram usage:        0 bytes
 18695 ;; Hardware stack levels used:    1
 18696 ;; Hardware stack levels required when called:    7
 18697 ;; This function calls:
 18698 ;;		_ADC_Initialize
 18699 ;;		_EXT_INT_Initialize
 18700 ;;		_INTERRUPT_Initialize
 18701 ;;		_OSCILLATOR_Initialize
 18702 ;;		_PIN_MANAGER_Initialize
 18703 ;;		_SPI_Initialize
 18704 ;;		_TMR0_Initialize
 18705 ;;		_TMR1_Initialize
 18706 ;; This function is called by:
 18707 ;;		_main
 18708 ;; This function uses a non-reentrant model
 18709 ;;
 18710                           
 18711                           	psect	text59
 18712  006574                     __ptext59:
 18713                           	opt callstack 0
 18714  006574                     _SYSTEM_Initialize:
 18715                           	opt callstack 23
 18716  006574                     
 18717                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 18718  006574  EC59  F033         	call	_INTERRUPT_Initialize	;wreg free
 18719  006578                     
 18720                           ;mcc_generated_files/mcc.c: 54:     SPI_Initialize();
 18721  006578  EC2B  F033         	call	_SPI_Initialize	;wreg free
 18722  00657C                     
 18723                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 18724  00657C  ECA4  F030         	call	_PIN_MANAGER_Initialize	;wreg free
 18725  006580                     
 18726                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 18727  006580  EC34  F033         	call	_OSCILLATOR_Initialize	;wreg free
 18728  006584                     
 18729                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 18730  006584  ECA7  F032         	call	_ADC_Initialize	;wreg free
 18731  006588                     
 18732                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 18733  006588  EC20  F033         	call	_EXT_INT_Initialize	;wreg free
 18734  00658C                     
 18735                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 18736  00658C  EC3C  F032         	call	_TMR1_Initialize	;wreg free
 18737  006590                     
 18738                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 18739  006590  EC7E  F032         	call	_TMR0_Initialize	;wreg free
 18740  006594  0012               	return		;funcret
 18741  006596                     __end_of_SYSTEM_Initialize:
 18742                           	opt callstack 0
 18743                           
 18744 ;; *************** function _TMR1_Initialize *****************
 18745 ;; Defined at:
 18746 ;;		line 63 in file "mcc_generated_files/tmr1.c"
 18747 ;; Parameters:    Size  Location     Type
 18748 ;;		None
 18749 ;; Auto vars:     Size  Location     Type
 18750 ;;		None
 18751 ;; Return value:  Size  Location     Type
 18752 ;;                  1    wreg      void 
 18753 ;; Registers used:
 18754 ;;		wreg, status,2, status,0
 18755 ;; Tracked objects:
 18756 ;;		On entry : 0/0
 18757 ;;		On exit  : 0/0
 18758 ;;		Unchanged: 0/0
 18759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18762 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18764 ;;Total ram usage:        2 bytes
 18765 ;; Hardware stack levels used:    1
 18766 ;; Hardware stack levels required when called:    5
 18767 ;; This function calls:
 18768 ;;		Nothing
 18769 ;; This function is called by:
 18770 ;;		_SYSTEM_Initialize
 18771 ;; This function uses a non-reentrant model
 18772 ;;
 18773                           
 18774                           	psect	text60
 18775  006478                     __ptext60:
 18776                           	opt callstack 0
 18777  006478                     _TMR1_Initialize:
 18778                           	opt callstack 24
 18779  006478                     
 18780                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
 18781  006478  0E00               	movlw	0
 18782  00647A  6EAA               	movwf	170,c	;volatile
 18783                           
 18784                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
 18785  00647C  0E00               	movlw	0
 18786  00647E  6ECF               	movwf	207,c	;volatile
 18787                           
 18788                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
 18789  006480  0E00               	movlw	0
 18790  006482  6ECE               	movwf	206,c	;volatile
 18791  006484                     
 18792                           ;mcc_generated_files/tmr1.c: 77:     PIR1bits.TMR1IF = 0;
 18793  006484  909E               	bcf	158,0,c	;volatile
 18794  006486                     
 18795                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 18796  006486  50CE               	movf	206,w,c	;volatile
 18797  006488  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 18798  00648C  0100               	movlb	0	; () banked
 18799  00648E  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 18800  006490  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 18801  006494  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 18802  006496  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 18803  006498  6E43               	movwf	_timer1ReloadVal^0,c	;volatile
 18804  00649A  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 18805  00649C  6E44               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
 18806  00649E                     
 18807                           ; BSR set to: 0
 18808                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
 18809  00649E  0E01               	movlw	1
 18810  0064A0  6ECD               	movwf	205,c	;volatile
 18811  0064A2                     
 18812                           ; BSR set to: 0
 18813  0064A2  0012               	return		;funcret
 18814  0064A4                     __end_of_TMR1_Initialize:
 18815                           	opt callstack 0
 18816                           
 18817 ;; *************** function _TMR0_Initialize *****************
 18818 ;; Defined at:
 18819 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 18820 ;; Parameters:    Size  Location     Type
 18821 ;;		None
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;		None
 18824 ;; Return value:  Size  Location     Type
 18825 ;;                  1    wreg      void 
 18826 ;; Registers used:
 18827 ;;		wreg, status,2, status,0
 18828 ;; Tracked objects:
 18829 ;;		On entry : 0/0
 18830 ;;		On exit  : 0/0
 18831 ;;		Unchanged: 0/0
 18832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18837 ;;Total ram usage:        2 bytes
 18838 ;; Hardware stack levels used:    1
 18839 ;; Hardware stack levels required when called:    5
 18840 ;; This function calls:
 18841 ;;		Nothing
 18842 ;; This function is called by:
 18843 ;;		_SYSTEM_Initialize
 18844 ;; This function uses a non-reentrant model
 18845 ;;
 18846                           
 18847                           	psect	text61
 18848  0064FC                     __ptext61:
 18849                           	opt callstack 0
 18850  0064FC                     _TMR0_Initialize:
 18851                           	opt callstack 24
 18852  0064FC                     
 18853                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
 18854  0064FC  9CD5               	bcf	213,6,c	;volatile
 18855  0064FE                     
 18856                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0x0B;
 18857  0064FE  0E0B               	movlw	11
 18858  006500  6ED7               	movwf	215,c	;volatile
 18859                           
 18860                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xDB;
 18861  006502  0EDB               	movlw	219
 18862  006504  6ED6               	movwf	214,c	;volatile
 18863  006506                     
 18864                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
 18865  006506  50D6               	movf	214,w,c	;volatile
 18866  006508  CFD7 F060          	movff	4055,??_TMR0_Initialize	;volatile
 18867  00650C  0100               	movlb	0	; () banked
 18868  00650E  6B61               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 18869  006510  C060  F061         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 18870  006514  6B60               	clrf	??_TMR0_Initialize& (0+255),b
 18871  006516  1160               	iorwf	??_TMR0_Initialize& (0+255),w,b
 18872  006518  6E41               	movwf	_timer0ReloadVal^0,c	;volatile
 18873  00651A  5161               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 18874  00651C  6E42               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
 18875  00651E                     
 18876                           ; BSR set to: 0
 18877                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
 18878  00651E  94F2               	bcf	242,2,c	;volatile
 18879  006520                     
 18880                           ; BSR set to: 0
 18881                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
 18882  006520  0E97               	movlw	151
 18883  006522  6ED5               	movwf	213,c	;volatile
 18884  006524                     
 18885                           ; BSR set to: 0
 18886  006524  0012               	return		;funcret
 18887  006526                     __end_of_TMR0_Initialize:
 18888                           	opt callstack 0
 18889                           
 18890 ;; *************** function _SPI_Initialize *****************
 18891 ;; Defined at:
 18892 ;;		line 62 in file "mcc_generated_files/spi.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;		None
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;		None
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  1    wreg      void 
 18899 ;; Registers used:
 18900 ;;		wreg, status,2
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/0
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18910 ;;Total ram usage:        0 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; Hardware stack levels required when called:    5
 18913 ;; This function calls:
 18914 ;;		Nothing
 18915 ;; This function is called by:
 18916 ;;		_SYSTEM_Initialize
 18917 ;; This function uses a non-reentrant model
 18918 ;;
 18919                           
 18920                           	psect	text62
 18921  006656                     __ptext62:
 18922                           	opt callstack 0
 18923  006656                     _SPI_Initialize:
 18924                           	opt callstack 24
 18925  006656                     
 18926                           ;mcc_generated_files/spi.c: 65:     SSPSTAT = 0x40;
 18927  006656  0E40               	movlw	64
 18928  006658  6EC7               	movwf	199,c	;volatile
 18929                           
 18930                           ;mcc_generated_files/spi.c: 66:     SSPCON1 = 0x00;
 18931  00665A  0E00               	movlw	0
 18932  00665C  6EC6               	movwf	198,c	;volatile
 18933                           
 18934                           ;mcc_generated_files/spi.c: 67:     SSPADD = 0x01;
 18935  00665E  0E01               	movlw	1
 18936  006660  6EC8               	movwf	200,c	;volatile
 18937  006662                     
 18938                           ;mcc_generated_files/spi.c: 68:     TRISCbits.TRISC3 = 0;
 18939  006662  9694               	bcf	148,3,c	;volatile
 18940  006664                     
 18941                           ;mcc_generated_files/spi.c: 69:     SSPCON1bits.SSPEN = 0;
 18942  006664  9AC6               	bcf	198,5,c	;volatile
 18943  006666  0012               	return		;funcret
 18944  006668                     __end_of_SPI_Initialize:
 18945                           	opt callstack 0
 18946                           
 18947 ;; *************** function _PIN_MANAGER_Initialize *****************
 18948 ;; Defined at:
 18949 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;		None
 18952 ;; Auto vars:     Size  Location     Type
 18953 ;;		None
 18954 ;; Return value:  Size  Location     Type
 18955 ;;                  1    wreg      void 
 18956 ;; Registers used:
 18957 ;;		wreg, status,2, status,0, cstack
 18958 ;; Tracked objects:
 18959 ;;		On entry : 0/0
 18960 ;;		On exit  : 0/0
 18961 ;;		Unchanged: 0/0
 18962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18967 ;;Total ram usage:        0 bytes
 18968 ;; Hardware stack levels used:    1
 18969 ;; Hardware stack levels required when called:    6
 18970 ;; This function calls:
 18971 ;;		_IOCB4_SetInterruptHandler
 18972 ;; This function is called by:
 18973 ;;		_SYSTEM_Initialize
 18974 ;; This function uses a non-reentrant model
 18975 ;;
 18976                           
 18977                           	psect	text63
 18978  006148                     __ptext63:
 18979                           	opt callstack 0
 18980  006148                     _PIN_MANAGER_Initialize:
 18981                           	opt callstack 23
 18982  006148                     
 18983                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
 18984  006148  0E00               	movlw	0
 18985  00614A  6E8D               	movwf	141,c	;volatile
 18986                           
 18987                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 18988  00614C  0E00               	movlw	0
 18989  00614E  6E8C               	movwf	140,c	;volatile
 18990                           
 18991                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 18992  006150  0E00               	movlw	0
 18993  006152  6E89               	movwf	137,c	;volatile
 18994                           
 18995                           ;mcc_generated_files/pin_manager.c: 65:     LATB = 0x00;
 18996  006154  0E00               	movlw	0
 18997  006156  6E8A               	movwf	138,c	;volatile
 18998                           
 18999                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
 19000  006158  0E00               	movlw	0
 19001  00615A  6E8B               	movwf	139,c	;volatile
 19002                           
 19003                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0x04;
 19004  00615C  0E04               	movlw	4
 19005  00615E  6E96               	movwf	150,c	;volatile
 19006                           
 19007                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xCF;
 19008  006160  0ECF               	movlw	207
 19009  006162  6E92               	movwf	146,c	;volatile
 19010  006164                     
 19011                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
 19012  006164  6893               	setf	147,c	;volatile
 19013                           
 19014                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xD7;
 19015  006166  0ED7               	movlw	215
 19016  006168  6E94               	movwf	148,c	;volatile
 19017  00616A                     
 19018                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
 19019  00616A  6895               	setf	149,c	;volatile
 19020                           
 19021                           ;mcc_generated_files/pin_manager.c: 80:     ANCON0 = 0x8F;
 19022  00616C  0E8F               	movlw	143
 19023  00616E  010F               	movlb	15	; () banked
 19024  006170  6F5D               	movwf	93,b	;volatile
 19025                           
 19026                           ;mcc_generated_files/pin_manager.c: 81:     ANCON1 = 0x79;
 19027  006172  0E79               	movlw	121
 19028  006174  6F5C               	movwf	92,b	;volatile
 19029                           
 19030                           ;mcc_generated_files/pin_manager.c: 86:     WPUB = 0x00;
 19031  006176  0E00               	movlw	0
 19032  006178  6F5B               	movwf	91,b	;volatile
 19033  00617A                     
 19034                           ; BSR set to: 15
 19035                           ;mcc_generated_files/pin_manager.c: 87:     INTCON2bits.nRBPU = 1;
 19036  00617A  8EF1               	bsf	241,7,c	;volatile
 19037  00617C                     
 19038                           ; BSR set to: 15
 19039                           ;mcc_generated_files/pin_manager.c: 95:     IOCBbits.IOCB4 = 1;
 19040  00617C  895A               	bsf	90,4,b	;volatile
 19041  00617E                     
 19042                           ; BSR set to: 15
 19043                           ;mcc_generated_files/pin_manager.c: 100:     IOCB4_SetInterruptHandler(IOCB4_DefaultInte
      +                          rruptHandler);
 19044  00617E  0EC0               	movlw	low _IOCB4_DefaultInterruptHandler
 19045  006180  0100               	movlb	0	; () banked
 19046  006182  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 19047  006184  0E66               	movlw	high _IOCB4_DefaultInterruptHandler
 19048  006186  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19049  006188  EC3D  F033         	call	_IOCB4_SetInterruptHandler	;wreg free
 19050  00618C                     
 19051                           ;mcc_generated_files/pin_manager.c: 103:     INTCONbits.RBIE = 1;
 19052  00618C  86F2               	bsf	242,3,c	;volatile
 19053  00618E  0012               	return		;funcret
 19054  006190                     __end_of_PIN_MANAGER_Initialize:
 19055                           	opt callstack 0
 19056                           
 19057 ;; *************** function _IOCB4_SetInterruptHandler *****************
 19058 ;; Defined at:
 19059 ;;		line 135 in file "mcc_generated_files/pin_manager.c"
 19060 ;; Parameters:    Size  Location     Type
 19061 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19062 ;;		 -> acende_led(1), IOCB4_DefaultInterruptHandler(1), 
 19063 ;; Auto vars:     Size  Location     Type
 19064 ;;		None
 19065 ;; Return value:  Size  Location     Type
 19066 ;;                  1    wreg      void 
 19067 ;; Registers used:
 19068 ;;		wreg, status,2, status,0
 19069 ;; Tracked objects:
 19070 ;;		On entry : 0/0
 19071 ;;		On exit  : 0/0
 19072 ;;		Unchanged: 0/0
 19073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19078 ;;Total ram usage:        2 bytes
 19079 ;; Hardware stack levels used:    1
 19080 ;; Hardware stack levels required when called:    5
 19081 ;; This function calls:
 19082 ;;		Nothing
 19083 ;; This function is called by:
 19084 ;;		_PIN_MANAGER_Initialize
 19085 ;;		_main
 19086 ;; This function uses a non-reentrant model
 19087 ;;
 19088                           
 19089                           	psect	text64
 19090  00667A                     __ptext64:
 19091                           	opt callstack 0
 19092  00667A                     _IOCB4_SetInterruptHandler:
 19093                           	opt callstack 23
 19094  00667A                     
 19095                           ;mcc_generated_files/pin_manager.c: 136:     IOCB4_InterruptHandler = InterruptHandler;
 19096  00667A  C060  F047         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 19097  00667E  C061  F048         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 19098  006682  0012               	return		;funcret
 19099  006684                     __end_of_IOCB4_SetInterruptHandler:
 19100                           	opt callstack 0
 19101                           
 19102 ;; *************** function _OSCILLATOR_Initialize *****************
 19103 ;; Defined at:
 19104 ;;		line 63 in file "mcc_generated_files/mcc.c"
 19105 ;; Parameters:    Size  Location     Type
 19106 ;;		None
 19107 ;; Auto vars:     Size  Location     Type
 19108 ;;		None
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  1    wreg      void 
 19111 ;; Registers used:
 19112 ;;		wreg, status,2
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/0
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19122 ;;Total ram usage:        0 bytes
 19123 ;; Hardware stack levels used:    1
 19124 ;; Hardware stack levels required when called:    5
 19125 ;; This function calls:
 19126 ;;		Nothing
 19127 ;; This function is called by:
 19128 ;;		_SYSTEM_Initialize
 19129 ;; This function uses a non-reentrant model
 19130 ;;
 19131                           
 19132                           	psect	text65
 19133  006668                     __ptext65:
 19134                           	opt callstack 0
 19135  006668                     _OSCILLATOR_Initialize:
 19136                           	opt callstack 24
 19137  006668                     
 19138                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x62;
 19139  006668  0E62               	movlw	98
 19140  00666A  6ED3               	movwf	211,c	;volatile
 19141                           
 19142                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x00;
 19143  00666C  0E00               	movlw	0
 19144  00666E  6ED2               	movwf	210,c	;volatile
 19145                           
 19146                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 19147  006670  0E00               	movlw	0
 19148  006672  6E9B               	movwf	155,c	;volatile
 19149                           
 19150                           ;mcc_generated_files/mcc.c: 72:     REFOCON = 0x00;
 19151  006674  0E00               	movlw	0
 19152  006676  6E9A               	movwf	154,c	;volatile
 19153  006678  0012               	return		;funcret
 19154  00667A                     __end_of_OSCILLATOR_Initialize:
 19155                           	opt callstack 0
 19156                           
 19157 ;; *************** function _INTERRUPT_Initialize *****************
 19158 ;; Defined at:
 19159 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19160 ;; Parameters:    Size  Location     Type
 19161 ;;		None
 19162 ;; Auto vars:     Size  Location     Type
 19163 ;;		None
 19164 ;; Return value:  Size  Location     Type
 19165 ;;                  1    wreg      void 
 19166 ;; Registers used:
 19167 ;;		None
 19168 ;; Tracked objects:
 19169 ;;		On entry : 0/0
 19170 ;;		On exit  : 0/0
 19171 ;;		Unchanged: 0/0
 19172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19177 ;;Total ram usage:        0 bytes
 19178 ;; Hardware stack levels used:    1
 19179 ;; Hardware stack levels required when called:    5
 19180 ;; This function calls:
 19181 ;;		Nothing
 19182 ;; This function is called by:
 19183 ;;		_SYSTEM_Initialize
 19184 ;; This function uses a non-reentrant model
 19185 ;;
 19186                           
 19187                           	psect	text66
 19188  0066B2                     __ptext66:
 19189                           	opt callstack 0
 19190  0066B2                     _INTERRUPT_Initialize:
 19191                           	opt callstack 24
 19192  0066B2                     
 19193                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 19194  0066B2  9ED0               	bcf	208,7,c	;volatile
 19195  0066B4  0012               	return		;funcret
 19196  0066B6                     __end_of_INTERRUPT_Initialize:
 19197                           	opt callstack 0
 19198                           
 19199 ;; *************** function _EXT_INT_Initialize *****************
 19200 ;; Defined at:
 19201 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;		None
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;		None
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      void 
 19208 ;; Registers used:
 19209 ;;		wreg, status,2, status,0, cstack
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19219 ;;Total ram usage:        0 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; Hardware stack levels required when called:    6
 19222 ;; This function calls:
 19223 ;;		_INT0_SetInterruptHandler
 19224 ;; This function is called by:
 19225 ;;		_SYSTEM_Initialize
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text67
 19230  006640                     __ptext67:
 19231                           	opt callstack 0
 19232  006640                     _EXT_INT_Initialize:
 19233                           	opt callstack 23
 19234  006640                     
 19235                           ;mcc_generated_files/ext_int.c: 64:     (INTCONbits.INT0IF = 0);
 19236  006640  92F2               	bcf	242,1,c	;volatile
 19237                           
 19238                           ;mcc_generated_files/ext_int.c: 65:     (INTCON2bits.INTEDG0 = 1);
 19239  006642  8CF1               	bsf	241,6,c	;volatile
 19240  006644                     
 19241                           ;mcc_generated_files/ext_int.c: 67:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
 19242  006644  0EC2               	movlw	low _INT0_DefaultInterruptHandler
 19243  006646  0100               	movlb	0	; () banked
 19244  006648  6F60               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
 19245  00664A  0E66               	movlw	high _INT0_DefaultInterruptHandler
 19246  00664C  6F61               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19247  00664E  EC42  F033         	call	_INT0_SetInterruptHandler	;wreg free
 19248  006652                     
 19249                           ;mcc_generated_files/ext_int.c: 68:     (INTCONbits.INT0IE = 1);
 19250  006652  88F2               	bsf	242,4,c	;volatile
 19251  006654  0012               	return		;funcret
 19252  006656                     __end_of_EXT_INT_Initialize:
 19253                           	opt callstack 0
 19254                           
 19255 ;; *************** function _INT0_SetInterruptHandler *****************
 19256 ;; Defined at:
 19257 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 19258 ;; Parameters:    Size  Location     Type
 19259 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19260 ;;		 -> pulso_encoder(1), INT0_DefaultInterruptHandler(1), 
 19261 ;; Auto vars:     Size  Location     Type
 19262 ;;		None
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  1    wreg      void 
 19265 ;; Registers used:
 19266 ;;		wreg, status,2, status,0
 19267 ;; Tracked objects:
 19268 ;;		On entry : 0/0
 19269 ;;		On exit  : 0/0
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19276 ;;Total ram usage:        2 bytes
 19277 ;; Hardware stack levels used:    1
 19278 ;; Hardware stack levels required when called:    5
 19279 ;; This function calls:
 19280 ;;		Nothing
 19281 ;; This function is called by:
 19282 ;;		_EXT_INT_Initialize
 19283 ;;		_main
 19284 ;; This function uses a non-reentrant model
 19285 ;;
 19286                           
 19287                           	psect	text68
 19288  006684                     __ptext68:
 19289                           	opt callstack 0
 19290  006684                     _INT0_SetInterruptHandler:
 19291                           	opt callstack 23
 19292  006684                     
 19293                           ;mcc_generated_files/ext_int.c: 51:     INT0_InterruptHandler = InterruptHandler;
 19294  006684  C060  F03F         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 19295  006688  C061  F040         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 19296  00668C  0012               	return		;funcret
 19297  00668E                     __end_of_INT0_SetInterruptHandler:
 19298                           	opt callstack 0
 19299                           
 19300 ;; *************** function _ADC_Initialize *****************
 19301 ;; Defined at:
 19302 ;;		line 62 in file "mcc_generated_files/adc.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;		None
 19305 ;; Auto vars:     Size  Location     Type
 19306 ;;		None
 19307 ;; Return value:  Size  Location     Type
 19308 ;;                  1    wreg      void 
 19309 ;; Registers used:
 19310 ;;		wreg, status,2, status,0, cstack
 19311 ;; Tracked objects:
 19312 ;;		On entry : 0/0
 19313 ;;		On exit  : 0/0
 19314 ;;		Unchanged: 0/0
 19315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19320 ;;Total ram usage:        0 bytes
 19321 ;; Hardware stack levels used:    1
 19322 ;; Hardware stack levels required when called:    6
 19323 ;; This function calls:
 19324 ;;		_ADC_SetInterruptHandler
 19325 ;; This function is called by:
 19326 ;;		_SYSTEM_Initialize
 19327 ;; This function uses a non-reentrant model
 19328 ;;
 19329                           
 19330                           	psect	text69
 19331  00654E                     __ptext69:
 19332                           	opt callstack 0
 19333  00654E                     _ADC_Initialize:
 19334                           	opt callstack 23
 19335  00654E                     
 19336                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x03;
 19337  00654E  0E03               	movlw	3
 19338  006550  6EC2               	movwf	194,c	;volatile
 19339                           
 19340                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x80;
 19341  006552  0E80               	movlw	128
 19342  006554  6EC1               	movwf	193,c	;volatile
 19343                           
 19344                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0xA1;
 19345  006556  0EA1               	movlw	161
 19346  006558  6EC0               	movwf	192,c	;volatile
 19347                           
 19348                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
 19349  00655A  0E00               	movlw	0
 19350  00655C  6EC4               	movwf	196,c	;volatile
 19351                           
 19352                           ;mcc_generated_files/adc.c: 79:     ADRESL = 0x00;
 19353  00655E  0E00               	movlw	0
 19354  006560  6EC3               	movwf	195,c	;volatile
 19355  006562                     
 19356                           ;mcc_generated_files/adc.c: 82:     PIE1bits.ADIE = 1;
 19357  006562  8C9D               	bsf	157,6,c	;volatile
 19358  006564                     
 19359                           ;mcc_generated_files/adc.c: 85:     ADC_SetInterruptHandler(ADC_DefaultInterruptHandler)
      +                          ;
 19360  006564  0EC4               	movlw	low _ADC_DefaultInterruptHandler
 19361  006566  0100               	movlb	0	; () banked
 19362  006568  6F60               	movwf	ADC_SetInterruptHandler@InterruptHandler& (0+255),b
 19363  00656A  0E66               	movlw	high _ADC_DefaultInterruptHandler
 19364  00656C  6F61               	movwf	(ADC_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 19365  00656E  EC47  F033         	call	_ADC_SetInterruptHandler	;wreg free
 19366  006572  0012               	return		;funcret
 19367  006574                     __end_of_ADC_Initialize:
 19368                           	opt callstack 0
 19369                           
 19370 ;; *************** function _ADC_SetInterruptHandler *****************
 19371 ;; Defined at:
 19372 ;;		line 150 in file "mcc_generated_files/adc.c"
 19373 ;; Parameters:    Size  Location     Type
 19374 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 19375 ;;		 -> ADC_DefaultInterruptHandler(1), 
 19376 ;; Auto vars:     Size  Location     Type
 19377 ;;		None
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  1    wreg      void 
 19380 ;; Registers used:
 19381 ;;		wreg, status,2, status,0
 19382 ;; Tracked objects:
 19383 ;;		On entry : 0/0
 19384 ;;		On exit  : 0/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19390 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19391 ;;Total ram usage:        2 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:    5
 19394 ;; This function calls:
 19395 ;;		Nothing
 19396 ;; This function is called by:
 19397 ;;		_ADC_Initialize
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           	psect	text70
 19402  00668E                     __ptext70:
 19403                           	opt callstack 0
 19404  00668E                     _ADC_SetInterruptHandler:
 19405                           	opt callstack 23
 19406  00668E                     
 19407                           ;mcc_generated_files/adc.c: 151:     ADC_InterruptHandler = InterruptHandler;
 19408  00668E  C060  F045         	movff	ADC_SetInterruptHandler@InterruptHandler,_ADC_InterruptHandler
 19409  006692  C061  F046         	movff	ADC_SetInterruptHandler@InterruptHandler+1,_ADC_InterruptHandler+1
 19410  006696  0012               	return		;funcret
 19411  006698                     __end_of_ADC_SetInterruptHandler:
 19412                           	opt callstack 0
 19413                           
 19414 ;; *************** function _SPI_Open *****************
 19415 ;; Defined at:
 19416 ;;		line 72 in file "mcc_generated_files/spi.c"
 19417 ;; Parameters:    Size  Location     Type
 19418 ;;  spiUniqueCon    1    wreg     enum E353
 19419 ;; Auto vars:     Size  Location     Type
 19420 ;;  spiUniqueCon    1    1[BANK0 ] enum E353
 19421 ;; Return value:  Size  Location     Type
 19422 ;;                  1    wreg      _Bool 
 19423 ;; Registers used:
 19424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19425 ;; Tracked objects:
 19426 ;;		On entry : 0/0
 19427 ;;		On exit  : 0/0
 19428 ;;		Unchanged: 0/0
 19429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19431 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19432 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19434 ;;Total ram usage:        2 bytes
 19435 ;; Hardware stack levels used:    1
 19436 ;; Hardware stack levels required when called:    5
 19437 ;; This function calls:
 19438 ;;		Nothing
 19439 ;; This function is called by:
 19440 ;;		_main
 19441 ;; This function uses a non-reentrant model
 19442 ;;
 19443                           
 19444                           	psect	text71
 19445  005A6E                     __ptext71:
 19446                           	opt callstack 0
 19447  005A6E                     _SPI_Open:
 19448                           	opt callstack 25
 19449                           
 19450                           ;incstack = 0
 19451                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 19452  005A6E  0100               	movlb	0	; () banked
 19453  005A70  6F61               	movwf	SPI_Open@spiUniqueConfiguration& (0+255),b
 19454  005A72                     
 19455                           ;mcc_generated_files/spi.c: 72: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 73: {;mcc_generated_files/spi.c: 74:     if(!SSPCON1bits.SSPEN)
 19456  005A72  BAC6               	btfsc	198,5,c	;volatile
 19457  005A74  EF3E  F02D         	goto	u12791
 19458  005A78  EF40  F02D         	goto	u12790
 19459  005A7C                     u12791:
 19460  005A7C  EF90  F02D         	goto	l142
 19461  005A80                     u12790:
 19462  005A80                     
 19463                           ;mcc_generated_files/spi.c: 75:     {;mcc_generated_files/spi.c: 76:         SSPSTAT = s
      +                          pi_configuration[spiUniqueConfiguration].stat;
 19464  005A80  0100               	movlb	0	; () banked
 19465  005A82  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 19466  005A84  0D04               	mullw	4
 19467  005A86  0E01               	movlw	1
 19468  005A88  26F3               	addwf	243,f,c
 19469  005A8A  0E00               	movlw	0
 19470  005A8C  22F4               	addwfc	244,f,c
 19471  005A8E  0E69               	movlw	low _spi_configuration
 19472  005A90  24F3               	addwf	243,w,c
 19473  005A92  6EF6               	movwf	tblptrl,c
 19474  005A94  0EFF               	movlw	high _spi_configuration
 19475  005A96  20F4               	addwfc	244,w,c
 19476  005A98  6EF7               	movwf	tblptrh,c
 19477  005A9A                     	if	1	;There are 3 active tblptr bytes
 19478  005A9A  6AF8               	clrf	tblptru,c
 19479  005A9C  0E00               	movlw	low (__mediumconst shr (0+16))
 19480  005A9E  22F8               	addwfc	tblptru,f,c
 19481  005AA0                     	endif
 19482  005AA0  0008               	tblrd		*
 19483  005AA2  CFF5 FFC7          	movff	tablat,4039	;volatile
 19484                           
 19485                           ;mcc_generated_files/spi.c: 77:         SSPCON1 = spi_configuration[spiUniqueConfigurati
      +                          on].con1;
 19486  005AA6  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 19487  005AA8  0D04               	mullw	4
 19488  005AAA  0E69               	movlw	low _spi_configuration
 19489  005AAC  24F3               	addwf	243,w,c
 19490  005AAE  6EF6               	movwf	tblptrl,c
 19491  005AB0  0EFF               	movlw	high _spi_configuration
 19492  005AB2  20F4               	addwfc	244,w,c
 19493  005AB4  6EF7               	movwf	tblptrh,c
 19494  005AB6                     	if	1	;There are 3 active tblptr bytes
 19495  005AB6  6AF8               	clrf	tblptru,c
 19496  005AB8  0E00               	movlw	low (__mediumconst shr (0+16))
 19497  005ABA  22F8               	addwfc	tblptru,f,c
 19498  005ABC                     	endif
 19499  005ABC  0008               	tblrd		*
 19500  005ABE  CFF5 FFC6          	movff	tablat,4038	;volatile
 19501  005AC2                     
 19502                           ; BSR set to: 0
 19503                           ;mcc_generated_files/spi.c: 78:         SSPCON2 = 0x00;
 19504  005AC2  0E00               	movlw	0
 19505  005AC4  6EC5               	movwf	197,c	;volatile
 19506  005AC6                     
 19507                           ; BSR set to: 0
 19508                           ;mcc_generated_files/spi.c: 79:         SSPADD = spi_configuration[spiUniqueConfiguratio
      +                          n].add;
 19509  005AC6  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 19510  005AC8  0D04               	mullw	4
 19511  005ACA  0E02               	movlw	2
 19512  005ACC  26F3               	addwf	243,f,c
 19513  005ACE  0E00               	movlw	0
 19514  005AD0  22F4               	addwfc	244,f,c
 19515  005AD2  0E69               	movlw	low _spi_configuration
 19516  005AD4  24F3               	addwf	243,w,c
 19517  005AD6  6EF6               	movwf	tblptrl,c
 19518  005AD8  0EFF               	movlw	high _spi_configuration
 19519  005ADA  20F4               	addwfc	244,w,c
 19520  005ADC  6EF7               	movwf	tblptrh,c
 19521  005ADE                     	if	1	;There are 3 active tblptr bytes
 19522  005ADE  6AF8               	clrf	tblptru,c
 19523  005AE0  0E00               	movlw	low (__mediumconst shr (0+16))
 19524  005AE2  22F8               	addwfc	tblptru,f,c
 19525  005AE4                     	endif
 19526  005AE4  0008               	tblrd		*
 19527  005AE6  CFF5 FFC8          	movff	tablat,4040	;volatile
 19528  005AEA                     
 19529                           ; BSR set to: 0
 19530                           ;mcc_generated_files/spi.c: 80:         TRISCbits.TRISC3 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 19531  005AEA  5161               	movf	SPI_Open@spiUniqueConfiguration& (0+255),w,b
 19532  005AEC  0D04               	mullw	4
 19533  005AEE  0E03               	movlw	3
 19534  005AF0  26F3               	addwf	243,f,c
 19535  005AF2  0E00               	movlw	0
 19536  005AF4  22F4               	addwfc	244,f,c
 19537  005AF6  0E69               	movlw	low _spi_configuration
 19538  005AF8  24F3               	addwf	243,w,c
 19539  005AFA  6EF6               	movwf	tblptrl,c
 19540  005AFC  0EFF               	movlw	high _spi_configuration
 19541  005AFE  20F4               	addwfc	244,w,c
 19542  005B00  6EF7               	movwf	tblptrh,c
 19543  005B02                     	if	1	;There are 3 active tblptr bytes
 19544  005B02  6AF8               	clrf	tblptru,c
 19545  005B04  0E00               	movlw	low (__mediumconst shr (0+16))
 19546  005B06  22F8               	addwfc	tblptru,f,c
 19547  005B08                     	endif
 19548  005B08  0008               	tblrd		*
 19549  005B0A  CFF5 F060          	movff	tablat,??_SPI_Open
 19550  005B0E  4760               	rlncf	??_SPI_Open& (0+255),f,b
 19551  005B10  4760               	rlncf	??_SPI_Open& (0+255),f,b
 19552  005B12  4760               	rlncf	??_SPI_Open& (0+255),f,b
 19553  005B14  5094               	movf	148,w,c	;volatile
 19554  005B16  1960               	xorwf	??_SPI_Open& (0+255),w,b
 19555  005B18  0BF7               	andlw	-9
 19556  005B1A  1960               	xorwf	??_SPI_Open& (0+255),w,b
 19557  005B1C  6E94               	movwf	148,c	;volatile
 19558  005B1E                     
 19559                           ; BSR set to: 0
 19560                           ;mcc_generated_files/spi.c: 81:         SSPCON1bits.SSPEN = 1;
 19561  005B1E  8AC6               	bsf	198,5,c	;volatile
 19562  005B20                     l142:
 19563  005B20  0012               	return		;funcret
 19564  005B22                     __end_of_SPI_Open:
 19565                           	opt callstack 0
 19566                           
 19567 ;; *************** function _INTERRUPT_InterruptManager *****************
 19568 ;; Defined at:
 19569 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 19570 ;; Parameters:    Size  Location     Type
 19571 ;;		None
 19572 ;; Auto vars:     Size  Location     Type
 19573 ;;		None
 19574 ;; Return value:  Size  Location     Type
 19575 ;;                  1    wreg      void 
 19576 ;; Registers used:
 19577 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19578 ;; Tracked objects:
 19579 ;;		On entry : 0/0
 19580 ;;		On exit  : 0/0
 19581 ;;		Unchanged: 0/0
 19582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19585 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19587 ;;Total ram usage:        4 bytes
 19588 ;; Hardware stack levels used:    1
 19589 ;; Hardware stack levels required when called:    4
 19590 ;; This function calls:
 19591 ;;		_ADC_ISR
 19592 ;;		_INT0_ISR
 19593 ;;		_PIN_MANAGER_IOC
 19594 ;; This function is called by:
 19595 ;;		Interrupt level 2
 19596 ;; This function uses a non-reentrant model
 19597 ;;
 19598                           
 19599                           	psect	intcode
 19600  000008                     __pintcode:
 19601                           	opt callstack 0
 19602  000008                     _INTERRUPT_InterruptManager:
 19603                           	opt callstack 17
 19604                           
 19605                           ;incstack = 0
 19606  000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19607  00000A  CFFA F029          	movff	pclath,??_INTERRUPT_InterruptManager
 19608  00000E  CFFB F02A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 19609  000012  CFF3 F02B          	movff	prodl,??_INTERRUPT_InterruptManager+2
 19610  000016  CFF4 F02C          	movff	prodh,??_INTERRUPT_InterruptManager+3
 19611  00001A                     
 19612                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.INT0IE == 1 && INTCONbit
      +                          s.INT0IF == 1)
 19613  00001A  A8F2               	btfss	242,4,c	;volatile
 19614  00001C  EF12  F000         	goto	i2u886_41
 19615  000020  EF14  F000         	goto	i2u886_40
 19616  000024                     i2u886_41:
 19617  000024  EF1F  F000         	goto	i2l109
 19618  000028                     i2u886_40:
 19619  000028  A2F2               	btfss	242,1,c	;volatile
 19620  00002A  EF19  F000         	goto	i2u887_41
 19621  00002E  EF1B  F000         	goto	i2u887_40
 19622  000032                     i2u887_41:
 19623  000032  EF1F  F000         	goto	i2l109
 19624  000036                     i2u887_40:
 19625  000036                     
 19626                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
 19627  000036  EC51  F033         	call	_INT0_ISR	;wreg free
 19628                           
 19629                           ;mcc_generated_files/interrupt_manager.c: 64:     }
 19630  00003A  EF4A  F000         	goto	i2l117
 19631  00003E                     i2l109:
 19632  00003E  A6F2               	btfss	242,3,c	;volatile
 19633  000040  EF24  F000         	goto	i2u888_41
 19634  000044  EF26  F000         	goto	i2u888_40
 19635  000048                     i2u888_41:
 19636  000048  EF31  F000         	goto	i2l111
 19637  00004C                     i2u888_40:
 19638  00004C  A0F2               	btfss	242,0,c	;volatile
 19639  00004E  EF2B  F000         	goto	i2u889_41
 19640  000052  EF2D  F000         	goto	i2u889_40
 19641  000056                     i2u889_41:
 19642  000056  EF31  F000         	goto	i2l111
 19643  00005A                     i2u889_40:
 19644  00005A                     
 19645                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         PIN_MANAGER_IOC();
 19646  00005A  EC14  F033         	call	_PIN_MANAGER_IOC	;wreg free
 19647                           
 19648                           ;mcc_generated_files/interrupt_manager.c: 68:     }
 19649  00005E  EF4A  F000         	goto	i2l117
 19650  000062                     i2l111:
 19651  000062  ACF2               	btfss	242,6,c	;volatile
 19652  000064  EF36  F000         	goto	i2u890_41
 19653  000068  EF38  F000         	goto	i2u890_40
 19654  00006C                     i2u890_41:
 19655  00006C  EF4A  F000         	goto	i2l112
 19656  000070                     i2u890_40:
 19657  000070                     
 19658                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 19659  000070  AC9D               	btfss	157,6,c	;volatile
 19660  000072  EF3D  F000         	goto	i2u891_41
 19661  000076  EF3F  F000         	goto	i2u891_40
 19662  00007A                     i2u891_41:
 19663  00007A  EF4A  F000         	goto	i2l112
 19664  00007E                     i2u891_40:
 19665  00007E  AC9E               	btfss	158,6,c	;volatile
 19666  000080  EF44  F000         	goto	i2u892_41
 19667  000084  EF46  F000         	goto	i2u892_40
 19668  000088                     i2u892_41:
 19669  000088  EF4A  F000         	goto	i2l112
 19670  00008C                     i2u892_40:
 19671  00008C                     
 19672                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADC_ISR();
 19673  00008C  EC25  F032         	call	_ADC_ISR	;wreg free
 19674                           
 19675                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 19676  000090  EF4A  F000         	goto	i2l117
 19677  000094                     i2l112:
 19678  000094                     i2l117:
 19679  000094  C02C  FFF4         	movff	??_INTERRUPT_InterruptManager+3,prodh
 19680  000098  C02B  FFF3         	movff	??_INTERRUPT_InterruptManager+2,prodl
 19681  00009C  C02A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 19682  0000A0  C029  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 19683  0000A4  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 19684  0000A6  0011               	retfie		f
 19685  0000A8                     __end_of_INTERRUPT_InterruptManager:
 19686                           	opt callstack 0
 19687                           
 19688 ;; *************** function _PIN_MANAGER_IOC *****************
 19689 ;; Defined at:
 19690 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 19691 ;; Parameters:    Size  Location     Type
 19692 ;;		None
 19693 ;; Auto vars:     Size  Location     Type
 19694 ;;		None
 19695 ;; Return value:  Size  Location     Type
 19696 ;;                  1    wreg      void 
 19697 ;; Registers used:
 19698 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19699 ;; Tracked objects:
 19700 ;;		On entry : 0/0
 19701 ;;		On exit  : 0/0
 19702 ;;		Unchanged: 0/0
 19703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19708 ;;Total ram usage:        0 bytes
 19709 ;; Hardware stack levels used:    1
 19710 ;; Hardware stack levels required when called:    3
 19711 ;; This function calls:
 19712 ;;		_IOCB4_ISR
 19713 ;; This function is called by:
 19714 ;;		_INTERRUPT_InterruptManager
 19715 ;; This function uses a non-reentrant model
 19716 ;;
 19717                           
 19718                           	psect	text73
 19719  006628                     __ptext73:
 19720                           	opt callstack 0
 19721  006628                     _PIN_MANAGER_IOC:
 19722                           	opt callstack 17
 19723  006628                     
 19724                           ;mcc_generated_files/pin_manager.c: 110:     if(IOCBbits.IOCB4 == 1)
 19725  006628  010F               	movlb	15	; () banked
 19726  00662A  A95A               	btfss	90,4,b	;volatile
 19727  00662C  EF1A  F033         	goto	i2u866_41
 19728  006630  EF1C  F033         	goto	i2u866_40
 19729  006634                     i2u866_41:
 19730  006634  EF1E  F033         	goto	i2l7127
 19731  006638                     i2u866_40:
 19732  006638                     
 19733                           ; BSR set to: 15
 19734                           ;mcc_generated_files/pin_manager.c: 111:     {;mcc_generated_files/pin_manager.c: 112:  
      +                                 IOCB4_ISR();
 19735  006638  EC52  F032         	call	_IOCB4_ISR	;wreg free
 19736  00663C                     i2l7127:
 19737                           
 19738                           ;mcc_generated_files/pin_manager.c: 115:     INTCONbits.RBIF = 0;
 19739  00663C  90F2               	bcf	242,0,c	;volatile
 19740  00663E  0012               	return		;funcret
 19741  006640                     __end_of_PIN_MANAGER_IOC:
 19742                           	opt callstack 0
 19743                           
 19744 ;; *************** function _IOCB4_ISR *****************
 19745 ;; Defined at:
 19746 ;;		line 121 in file "mcc_generated_files/pin_manager.c"
 19747 ;; Parameters:    Size  Location     Type
 19748 ;;		None
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;		None
 19751 ;; Return value:  Size  Location     Type
 19752 ;;                  1    wreg      void 
 19753 ;; Registers used:
 19754 ;;		wreg, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19764 ;;Total ram usage:        0 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:    2
 19767 ;; This function calls:
 19768 ;;		Absolute function
 19769 ;;		_IOCB4_DefaultInterruptHandler
 19770 ;;		_acende_led
 19771 ;; This function is called by:
 19772 ;;		_PIN_MANAGER_IOC
 19773 ;; This function uses a non-reentrant model
 19774 ;;
 19775                           
 19776                           	psect	text74
 19777  0064A4                     __ptext74:
 19778                           	opt callstack 0
 19779  0064A4                     _IOCB4_ISR:
 19780                           	opt callstack 17
 19781  0064A4                     
 19782                           ;mcc_generated_files/pin_manager.c: 126:     if(IOCB4_InterruptHandler)
 19783  0064A4  5047               	movf	_IOCB4_InterruptHandler^0,w,c
 19784  0064A6  1048               	iorwf	(_IOCB4_InterruptHandler+1)^0,w,c
 19785  0064A8  B4D8               	btfsc	status,2,c
 19786  0064AA  EF59  F032         	goto	i2u847_41
 19787  0064AE  EF5B  F032         	goto	i2u847_40
 19788  0064B2                     i2u847_41:
 19789  0064B2  EF67  F032         	goto	i2l51
 19790  0064B6                     i2u847_40:
 19791  0064B6                     
 19792                           ;mcc_generated_files/pin_manager.c: 127:     {;mcc_generated_files/pin_manager.c: 128:  
      +                                 IOCB4_InterruptHandler();
 19793  0064B6  D802               	call	i2u848_48
 19794  0064B8  EF67  F032         	goto	i2u848_49
 19795  0064BC                     i2u848_48:
 19796  0064BC  0005               	push	
 19797  0064BE  6EFA               	movwf	pclath,c
 19798  0064C0  5047               	movf	_IOCB4_InterruptHandler^0,w,c
 19799  0064C2  6EFD               	movwf	tosl,c
 19800  0064C4  5048               	movf	(_IOCB4_InterruptHandler+1)^0,w,c
 19801  0064C6  6EFE               	movwf	tosh,c
 19802  0064C8  6AFF               	clrf	tosu,c
 19803  0064CA  50FA               	movf	pclath,w,c
 19804  0064CC  0012               	return		;indir
 19805  0064CE                     i2u848_49:
 19806  0064CE                     i2l51:
 19807  0064CE  0012               	return		;funcret
 19808  0064D0                     __end_of_IOCB4_ISR:
 19809                           	opt callstack 0
 19810                           
 19811 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 19812 ;; Defined at:
 19813 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 19814 ;; Parameters:    Size  Location     Type
 19815 ;;		None
 19816 ;; Auto vars:     Size  Location     Type
 19817 ;;		None
 19818 ;; Return value:  Size  Location     Type
 19819 ;;                  1    wreg      void 
 19820 ;; Registers used:
 19821 ;;		None
 19822 ;; Tracked objects:
 19823 ;;		On entry : 0/0
 19824 ;;		On exit  : 0/0
 19825 ;;		Unchanged: 0/0
 19826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19831 ;;Total ram usage:        0 bytes
 19832 ;; Hardware stack levels used:    1
 19833 ;; This function calls:
 19834 ;;		Nothing
 19835 ;; This function is called by:
 19836 ;;		_PIN_MANAGER_Initialize
 19837 ;;		_IOCB4_ISR
 19838 ;; This function uses a non-reentrant model
 19839 ;;
 19840                           
 19841                           	psect	text75
 19842  0066C0                     __ptext75:
 19843                           	opt callstack 0
 19844  0066C0                     _IOCB4_DefaultInterruptHandler:
 19845                           	opt callstack 18
 19846  0066C0  0012               	return		;funcret
 19847  0066C2                     __end_of_IOCB4_DefaultInterruptHandler:
 19848                           	opt callstack 0
 19849                           
 19850 ;; *************** function _acende_led *****************
 19851 ;; Defined at:
 19852 ;;		line 24 in file "main.c"
 19853 ;; Parameters:    Size  Location     Type
 19854 ;;		None
 19855 ;; Auto vars:     Size  Location     Type
 19856 ;;		None
 19857 ;; Return value:  Size  Location     Type
 19858 ;;                  1    wreg      void 
 19859 ;; Registers used:
 19860 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19861 ;; Tracked objects:
 19862 ;;		On entry : 0/0
 19863 ;;		On exit  : 0/0
 19864 ;;		Unchanged: 0/0
 19865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19870 ;;Total ram usage:        1 bytes
 19871 ;; Hardware stack levels used:    1
 19872 ;; Hardware stack levels required when called:    1
 19873 ;; This function calls:
 19874 ;;		_ADC_GetConversion
 19875 ;;		___xxtofl
 19876 ;;		i2___flmul
 19877 ;; This function is called by:
 19878 ;;		_main
 19879 ;;		_IOCB4_ISR
 19880 ;; This function uses a non-reentrant model
 19881 ;;
 19882                           
 19883                           	psect	text76
 19884  005D08                     __ptext76:
 19885                           	opt callstack 0
 19886  005D08                     _acende_led:
 19887                           	opt callstack 17
 19888  005D08                     
 19889                           ;main.c: 25:     if (PORTBbits.RB4 == 0){
 19890  005D08  B881               	btfsc	129,4,c	;volatile
 19891  005D0A  EF89  F02E         	goto	i2u842_41
 19892  005D0E  EF8B  F02E         	goto	i2u842_40
 19893  005D12                     i2u842_41:
 19894  005D12  EFC7  F02E         	goto	i2l387
 19895  005D16                     i2u842_40:
 19896  005D16  BA89               	btfsc	137,5,c	;volatile
 19897  005D18  EF90  F02E         	goto	i2u843_41
 19898  005D1C  EF93  F02E         	goto	i2u843_40
 19899  005D20                     i2u843_41:
 19900  005D20  0E01               	movlw	1
 19901  005D22  EF94  F02E         	goto	i2u843_46
 19902  005D26                     i2u843_40:
 19903  005D26  0E00               	movlw	0
 19904  005D28                     i2u843_46:
 19905  005D28  0AFF               	xorlw	255
 19906  005D2A  6E28               	movwf	??_acende_led^0,c
 19907  005D2C  3A28               	swapf	??_acende_led^0,f,c
 19908  005D2E  4628               	rlncf	??_acende_led^0,f,c
 19909  005D30  5089               	movf	137,w,c	;volatile
 19910  005D32  1828               	xorwf	??_acende_led^0,w,c
 19911  005D34  0BDF               	andlw	-33
 19912  005D36  1828               	xorwf	??_acende_led^0,w,c
 19913  005D38  6E89               	movwf	137,c	;volatile
 19914  005D3A                     
 19915                           ;main.c: 27:         codigo_digital = ADC_GetConversion(POT);
 19916  005D3A  0E00               	movlw	0
 19917  005D3C  ECBA  F031         	call	_ADC_GetConversion
 19918  005D40  C001  F03D         	movff	?_ADC_GetConversion,_codigo_digital
 19919  005D44  C002  F03E         	movff	?_ADC_GetConversion+1,_codigo_digital+1
 19920  005D48                     
 19921                           ;main.c: 28:         percentagem = codigo_digital*0.0244200244200244;
 19922  005D48  C03D  F001         	movff	_codigo_digital,___xxtofl@val
 19923  005D4C  C03E  F002         	movff	_codigo_digital+1,___xxtofl@val+1
 19924  005D50  6A03               	clrf	(___xxtofl@val+2)^0,c
 19925  005D52  6A04               	clrf	(___xxtofl@val+3)^0,c
 19926  005D54  0E00               	movlw	0
 19927  005D56  EC28  F021         	call	___xxtofl
 19928  005D5A  C001  F00F         	movff	?___xxtofl,i2___flmul@b
 19929  005D5E  C002  F010         	movff	?___xxtofl+1,i2___flmul@b+1
 19930  005D62  C003  F011         	movff	?___xxtofl+2,i2___flmul@b+2
 19931  005D66  C004  F012         	movff	?___xxtofl+3,i2___flmul@b+3
 19932  005D6A  0E81               	movlw	129
 19933  005D6C  6E13               	movwf	i2___flmul@a^0,c
 19934  005D6E  0E0C               	movlw	12
 19935  005D70  6E14               	movwf	(i2___flmul@a+1)^0,c
 19936  005D72  0EC8               	movlw	200
 19937  005D74  6E15               	movwf	(i2___flmul@a+2)^0,c
 19938  005D76  0E3C               	movlw	60
 19939  005D78  6E16               	movwf	(i2___flmul@a+3)^0,c
 19940  005D7A  EC61  F017         	call	i2___flmul	;wreg free
 19941  005D7E  C00F  F100         	movff	?i2___flmul,_percentagem
 19942  005D82  C010  F101         	movff	?i2___flmul+1,_percentagem+1
 19943  005D86  C011  F102         	movff	?i2___flmul+2,_percentagem+2
 19944  005D8A  C012  F103         	movff	?i2___flmul+3,_percentagem+3
 19945  005D8E                     i2l387:
 19946  005D8E  0012               	return		;funcret
 19947  005D90                     __end_of_acende_led:
 19948                           	opt callstack 0
 19949                           
 19950 ;; *************** function i2___flmul *****************
 19951 ;; Defined at:
 19952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;  b               4   14[COMRAM] void 
 19955 ;;  a               4   18[COMRAM] void 
 19956 ;; Auto vars:     Size  Location     Type
 19957 ;;  __flmul         4   33[COMRAM] struct .
 19958 ;;  __flmul         4   27[COMRAM] unsigned long 
 19959 ;;  __flmul         2   37[COMRAM] struct .
 19960 ;;  __flmul         1   32[COMRAM] unsigned char 
 19961 ;;  __flmul         1   31[COMRAM] unsigned char 
 19962 ;;  __flmul         1   26[COMRAM] unsigned char 
 19963 ;; Return value:  Size  Location     Type
 19964 ;;                  4   14[COMRAM] unsigned char 
 19965 ;; Registers used:
 19966 ;;		wreg, status,2, status,0, prodl, prodh
 19967 ;; Tracked objects:
 19968 ;;		On entry : 0/0
 19969 ;;		On exit  : 0/0
 19970 ;;		Unchanged: 0/0
 19971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19972 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19973 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19975 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19976 ;;Total ram usage:       25 bytes
 19977 ;; Hardware stack levels used:    1
 19978 ;; This function calls:
 19979 ;;		Nothing
 19980 ;; This function is called by:
 19981 ;;		_acende_led
 19982 ;; This function uses a non-reentrant model
 19983 ;;
 19984                           
 19985                           	psect	text77
 19986  002EC2                     __ptext77:
 19987                           	opt callstack 0
 19988  002EC2                     i2___flmul:
 19989                           	opt callstack 17
 19990  002EC2  5012               	movf	(i2___flmul@b+3)^0,w,c
 19991  002EC4  0B80               	andlw	128
 19992  002EC6  6E1B               	movwf	i2___flmul@sign^0,c
 19993  002EC8  5012               	movf	(i2___flmul@b+3)^0,w,c
 19994  002ECA  2412               	addwf	(i2___flmul@b+3)^0,w,c
 19995  002ECC  6E21               	movwf	i2___flmul@bexp^0,c
 19996  002ECE  AE11               	btfss	(i2___flmul@b+2)^0,7,c
 19997  002ED0  EF6C  F017         	goto	i2u823_41
 19998  002ED4  EF6E  F017         	goto	i2u823_40
 19999  002ED8                     i2u823_41:
 20000  002ED8  EF6F  F017         	goto	i2l6801
 20001  002EDC                     i2u823_40:
 20002  002EDC  8021               	bsf	i2___flmul@bexp^0,0,c
 20003  002EDE                     i2l6801:
 20004  002EDE  5021               	movf	i2___flmul@bexp^0,w,c
 20005  002EE0  B4D8               	btfsc	status,2,c
 20006  002EE2  EF75  F017         	goto	i2u824_41
 20007  002EE6  EF77  F017         	goto	i2u824_40
 20008  002EEA                     i2u824_41:
 20009  002EEA  EF8A  F017         	goto	i2l6809
 20010  002EEE                     i2u824_40:
 20011  002EEE  2821               	incf	i2___flmul@bexp^0,w,c
 20012  002EF0  A4D8               	btfss	status,2,c
 20013  002EF2  EF7D  F017         	goto	i2u825_41
 20014  002EF6  EF7F  F017         	goto	i2u825_40
 20015  002EFA                     i2u825_41:
 20016  002EFA  EF87  F017         	goto	i2l6807
 20017  002EFE                     i2u825_40:
 20018  002EFE  0E00               	movlw	0
 20019  002F00  6E0F               	movwf	i2___flmul@b^0,c
 20020  002F02  0E00               	movlw	0
 20021  002F04  6E10               	movwf	(i2___flmul@b+1)^0,c
 20022  002F06  0E00               	movlw	0
 20023  002F08  6E11               	movwf	(i2___flmul@b+2)^0,c
 20024  002F0A  0E00               	movlw	0
 20025  002F0C  6E12               	movwf	(i2___flmul@b+3)^0,c
 20026  002F0E                     i2l6807:
 20027  002F0E  8E11               	bsf	(i2___flmul@b+2)^0,7,c
 20028  002F10  EF92  F017         	goto	i2l6811
 20029  002F14                     i2l6809:
 20030  002F14  0E00               	movlw	0
 20031  002F16  6E0F               	movwf	i2___flmul@b^0,c
 20032  002F18  0E00               	movlw	0
 20033  002F1A  6E10               	movwf	(i2___flmul@b+1)^0,c
 20034  002F1C  0E00               	movlw	0
 20035  002F1E  6E11               	movwf	(i2___flmul@b+2)^0,c
 20036  002F20  0E00               	movlw	0
 20037  002F22  6E12               	movwf	(i2___flmul@b+3)^0,c
 20038  002F24                     i2l6811:
 20039  002F24  5016               	movf	(i2___flmul@a+3)^0,w,c
 20040  002F26  0B80               	andlw	128
 20041  002F28  1A1B               	xorwf	i2___flmul@sign^0,f,c
 20042  002F2A  5016               	movf	(i2___flmul@a+3)^0,w,c
 20043  002F2C  2416               	addwf	(i2___flmul@a+3)^0,w,c
 20044  002F2E  6E20               	movwf	i2___flmul@aexp^0,c
 20045  002F30  AE15               	btfss	(i2___flmul@a+2)^0,7,c
 20046  002F32  EF9D  F017         	goto	i2u826_41
 20047  002F36  EF9F  F017         	goto	i2u826_40
 20048  002F3A                     i2u826_41:
 20049  002F3A  EFA0  F017         	goto	i2l6819
 20050  002F3E                     i2u826_40:
 20051  002F3E  8020               	bsf	i2___flmul@aexp^0,0,c
 20052  002F40                     i2l6819:
 20053  002F40  5020               	movf	i2___flmul@aexp^0,w,c
 20054  002F42  B4D8               	btfsc	status,2,c
 20055  002F44  EFA6  F017         	goto	i2u827_41
 20056  002F48  EFA8  F017         	goto	i2u827_40
 20057  002F4C                     i2u827_41:
 20058  002F4C  EFBB  F017         	goto	i2l6827
 20059  002F50                     i2u827_40:
 20060  002F50  2820               	incf	i2___flmul@aexp^0,w,c
 20061  002F52  A4D8               	btfss	status,2,c
 20062  002F54  EFAE  F017         	goto	i2u828_41
 20063  002F58  EFB0  F017         	goto	i2u828_40
 20064  002F5C                     i2u828_41:
 20065  002F5C  EFB8  F017         	goto	i2l6825
 20066  002F60                     i2u828_40:
 20067  002F60  0E00               	movlw	0
 20068  002F62  6E13               	movwf	i2___flmul@a^0,c
 20069  002F64  0E00               	movlw	0
 20070  002F66  6E14               	movwf	(i2___flmul@a+1)^0,c
 20071  002F68  0E00               	movlw	0
 20072  002F6A  6E15               	movwf	(i2___flmul@a+2)^0,c
 20073  002F6C  0E00               	movlw	0
 20074  002F6E  6E16               	movwf	(i2___flmul@a+3)^0,c
 20075  002F70                     i2l6825:
 20076  002F70  8E15               	bsf	(i2___flmul@a+2)^0,7,c
 20077  002F72  EFC3  F017         	goto	i2l1508
 20078  002F76                     i2l6827:
 20079  002F76  0E00               	movlw	0
 20080  002F78  6E13               	movwf	i2___flmul@a^0,c
 20081  002F7A  0E00               	movlw	0
 20082  002F7C  6E14               	movwf	(i2___flmul@a+1)^0,c
 20083  002F7E  0E00               	movlw	0
 20084  002F80  6E15               	movwf	(i2___flmul@a+2)^0,c
 20085  002F82  0E00               	movlw	0
 20086  002F84  6E16               	movwf	(i2___flmul@a+3)^0,c
 20087  002F86                     i2l1508:
 20088  002F86  5020               	movf	i2___flmul@aexp^0,w,c
 20089  002F88  B4D8               	btfsc	status,2,c
 20090  002F8A  EFC9  F017         	goto	i2u829_41
 20091  002F8E  EFCB  F017         	goto	i2u829_40
 20092  002F92                     i2u829_41:
 20093  002F92  EFD3  F017         	goto	i2l6831
 20094  002F96                     i2u829_40:
 20095  002F96  5021               	movf	i2___flmul@bexp^0,w,c
 20096  002F98  A4D8               	btfss	status,2,c
 20097  002F9A  EFD1  F017         	goto	i2u830_41
 20098  002F9E  EFD3  F017         	goto	i2u830_40
 20099  002FA2                     i2u830_41:
 20100  002FA2  EFDD  F017         	goto	i2l6835
 20101  002FA6                     i2u830_40:
 20102  002FA6                     i2l6831:
 20103  002FA6  0E00               	movlw	0
 20104  002FA8  6E0F               	movwf	?i2___flmul^0,c
 20105  002FAA  0E00               	movlw	0
 20106  002FAC  6E10               	movwf	(?i2___flmul+1)^0,c
 20107  002FAE  0E00               	movlw	0
 20108  002FB0  6E11               	movwf	(?i2___flmul+2)^0,c
 20109  002FB2  0E00               	movlw	0
 20110  002FB4  6E12               	movwf	(?i2___flmul+3)^0,c
 20111  002FB6  EF75  F019         	goto	i2l1512
 20112  002FBA                     i2l6835:
 20113  002FBA  5015               	movf	(i2___flmul@a+2)^0,w,c
 20114  002FBC  020F               	mulwf	i2___flmul@b^0,c
 20115  002FBE  CFF3 F026          	movff	prodl,i2___flmul@temp
 20116  002FC2  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20117  002FC6  5026               	movf	i2___flmul@temp^0,w,c
 20118  002FC8  6E1C               	movwf	i2___flmul@grs^0,c
 20119  002FCA  6A1D               	clrf	(i2___flmul@grs+1)^0,c
 20120  002FCC  6A1E               	clrf	(i2___flmul@grs+2)^0,c
 20121  002FCE  6A1F               	clrf	(i2___flmul@grs+3)^0,c
 20122  002FD0  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20123  002FD2  6E22               	movwf	i2___flmul@prod^0,c
 20124  002FD4  6A23               	clrf	(i2___flmul@prod+1)^0,c
 20125  002FD6  6A24               	clrf	(i2___flmul@prod+2)^0,c
 20126  002FD8  6A25               	clrf	(i2___flmul@prod+3)^0,c
 20127  002FDA  5014               	movf	(i2___flmul@a+1)^0,w,c
 20128  002FDC  0210               	mulwf	(i2___flmul@b+1)^0,c
 20129  002FDE  CFF3 F026          	movff	prodl,i2___flmul@temp
 20130  002FE2  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20131  002FE6  5026               	movf	i2___flmul@temp^0,w,c
 20132  002FE8  261C               	addwf	i2___flmul@grs^0,f,c
 20133  002FEA  0E00               	movlw	0
 20134  002FEC  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 20135  002FEE  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 20136  002FF0  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 20137  002FF2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20138  002FF4  2622               	addwf	i2___flmul@prod^0,f,c
 20139  002FF6  0E00               	movlw	0
 20140  002FF8  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20141  002FFA  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20142  002FFC  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20143  002FFE  5013               	movf	i2___flmul@a^0,w,c
 20144  003000  0211               	mulwf	(i2___flmul@b+2)^0,c
 20145  003002  CFF3 F026          	movff	prodl,i2___flmul@temp
 20146  003006  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20147  00300A  5026               	movf	i2___flmul@temp^0,w,c
 20148  00300C  261C               	addwf	i2___flmul@grs^0,f,c
 20149  00300E  0E00               	movlw	0
 20150  003010  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 20151  003012  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 20152  003014  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 20153  003016  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20154  003018  2622               	addwf	i2___flmul@prod^0,f,c
 20155  00301A  0E00               	movlw	0
 20156  00301C  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20157  00301E  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20158  003020  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20159  003022  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 20160  003026  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 20161  00302A  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 20162  00302E  6A1C               	clrf	i2___flmul@grs^0,c
 20163  003030  5013               	movf	i2___flmul@a^0,w,c
 20164  003032  0210               	mulwf	(i2___flmul@b+1)^0,c
 20165  003034  CFF3 F026          	movff	prodl,i2___flmul@temp
 20166  003038  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20167  00303C  5026               	movf	i2___flmul@temp^0,w,c
 20168  00303E  261C               	addwf	i2___flmul@grs^0,f,c
 20169  003040  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20170  003042  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 20171  003044  0E00               	movlw	0
 20172  003046  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 20173  003048  0E00               	movlw	0
 20174  00304A  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 20175  00304C  5014               	movf	(i2___flmul@a+1)^0,w,c
 20176  00304E  020F               	mulwf	i2___flmul@b^0,c
 20177  003050  CFF3 F026          	movff	prodl,i2___flmul@temp
 20178  003054  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20179  003058  5026               	movf	i2___flmul@temp^0,w,c
 20180  00305A  261C               	addwf	i2___flmul@grs^0,f,c
 20181  00305C  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20182  00305E  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 20183  003060  0E00               	movlw	0
 20184  003062  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 20185  003064  0E00               	movlw	0
 20186  003066  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 20187  003068  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 20188  00306C  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 20189  003070  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 20190  003074  6A1C               	clrf	i2___flmul@grs^0,c
 20191  003076  5013               	movf	i2___flmul@a^0,w,c
 20192  003078  020F               	mulwf	i2___flmul@b^0,c
 20193  00307A  CFF3 F026          	movff	prodl,i2___flmul@temp
 20194  00307E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20195  003082  5026               	movf	i2___flmul@temp^0,w,c
 20196  003084  261C               	addwf	i2___flmul@grs^0,f,c
 20197  003086  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20198  003088  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 20199  00308A  0E00               	movlw	0
 20200  00308C  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 20201  00308E  0E00               	movlw	0
 20202  003090  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 20203  003092  5015               	movf	(i2___flmul@a+2)^0,w,c
 20204  003094  0210               	mulwf	(i2___flmul@b+1)^0,c
 20205  003096  CFF3 F026          	movff	prodl,i2___flmul@temp
 20206  00309A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20207  00309E  5026               	movf	i2___flmul@temp^0,w,c
 20208  0030A0  2622               	addwf	i2___flmul@prod^0,f,c
 20209  0030A2  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20210  0030A4  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20211  0030A6  0E00               	movlw	0
 20212  0030A8  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20213  0030AA  0E00               	movlw	0
 20214  0030AC  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20215  0030AE  5014               	movf	(i2___flmul@a+1)^0,w,c
 20216  0030B0  0211               	mulwf	(i2___flmul@b+2)^0,c
 20217  0030B2  CFF3 F026          	movff	prodl,i2___flmul@temp
 20218  0030B6  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20219  0030BA  5026               	movf	i2___flmul@temp^0,w,c
 20220  0030BC  2622               	addwf	i2___flmul@prod^0,f,c
 20221  0030BE  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20222  0030C0  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20223  0030C2  0E00               	movlw	0
 20224  0030C4  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20225  0030C6  0E00               	movlw	0
 20226  0030C8  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20227  0030CA  5015               	movf	(i2___flmul@a+2)^0,w,c
 20228  0030CC  0211               	mulwf	(i2___flmul@b+2)^0,c
 20229  0030CE  CFF3 F026          	movff	prodl,i2___flmul@temp
 20230  0030D2  CFF4 F027          	movff	prodh,i2___flmul@temp+1
 20231  0030D6  5026               	movf	i2___flmul@temp^0,w,c
 20232  0030D8  6E17               	movwf	??i2___flmul^0,c
 20233  0030DA  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20234  0030DC  6E18               	movwf	(??i2___flmul+1)^0,c
 20235  0030DE  6A19               	clrf	(??i2___flmul+2)^0,c
 20236  0030E0  6A1A               	clrf	(??i2___flmul+3)^0,c
 20237  0030E2  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 20238  0030E6  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 20239  0030EA  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 20240  0030EE  6A17               	clrf	??i2___flmul^0,c
 20241  0030F0  5017               	movf	??i2___flmul^0,w,c
 20242  0030F2  2622               	addwf	i2___flmul@prod^0,f,c
 20243  0030F4  5018               	movf	(??i2___flmul+1)^0,w,c
 20244  0030F6  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20245  0030F8  5019               	movf	(??i2___flmul+2)^0,w,c
 20246  0030FA  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20247  0030FC  501A               	movf	(??i2___flmul+3)^0,w,c
 20248  0030FE  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20249  003100  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 20250  003104  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 20251  003108  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 20252  00310C  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 20253  003110  0E19               	movlw	25
 20254  003112  EF90  F018         	goto	i2u831_40
 20255  003116                     i2u831_45:
 20256  003116  90D8               	bcf	status,0,c
 20257  003118  321A               	rrcf	(??i2___flmul+3)^0,f,c
 20258  00311A  3219               	rrcf	(??i2___flmul+2)^0,f,c
 20259  00311C  3218               	rrcf	(??i2___flmul+1)^0,f,c
 20260  00311E  3217               	rrcf	??i2___flmul^0,f,c
 20261  003120                     i2u831_40:
 20262  003120  2EE8               	decfsz	wreg,f,c
 20263  003122  EF8B  F018         	goto	i2u831_45
 20264  003126  5017               	movf	??i2___flmul^0,w,c
 20265  003128  2622               	addwf	i2___flmul@prod^0,f,c
 20266  00312A  5018               	movf	(??i2___flmul+1)^0,w,c
 20267  00312C  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20268  00312E  5019               	movf	(??i2___flmul+2)^0,w,c
 20269  003130  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20270  003132  501A               	movf	(??i2___flmul+3)^0,w,c
 20271  003134  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20272  003136  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 20273  00313A  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 20274  00313E  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 20275  003142  6A1C               	clrf	i2___flmul@grs^0,c
 20276  003144  5020               	movf	i2___flmul@aexp^0,w,c
 20277  003146  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 20278  00314A  6A18               	clrf	(??i2___flmul+1)^0,c
 20279  00314C  2617               	addwf	??i2___flmul^0,f,c
 20280  00314E  0E00               	movlw	0
 20281  003150  2218               	addwfc	(??i2___flmul+1)^0,f,c
 20282  003152  0E82               	movlw	130
 20283  003154  2417               	addwf	??i2___flmul^0,w,c
 20284  003156  6E26               	movwf	i2___flmul@temp^0,c
 20285  003158  0EFF               	movlw	255
 20286  00315A  2018               	addwfc	(??i2___flmul+1)^0,w,c
 20287  00315C  6E27               	movwf	(i2___flmul@temp+1)^0,c
 20288  00315E  EFC6  F018         	goto	i2l6883
 20289  003162                     i2l6877:
 20290  003162  90D8               	bcf	status,0,c
 20291  003164  3622               	rlcf	i2___flmul@prod^0,f,c
 20292  003166  3623               	rlcf	(i2___flmul@prod+1)^0,f,c
 20293  003168  3624               	rlcf	(i2___flmul@prod+2)^0,f,c
 20294  00316A  3625               	rlcf	(i2___flmul@prod+3)^0,f,c
 20295  00316C  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 20296  00316E  EFBB  F018         	goto	i2u832_41
 20297  003172  EFBD  F018         	goto	i2u832_40
 20298  003176                     i2u832_41:
 20299  003176  EFBE  F018         	goto	i2l1515
 20300  00317A                     i2u832_40:
 20301  00317A  8022               	bsf	i2___flmul@prod^0,0,c
 20302  00317C                     i2l1515:
 20303  00317C  90D8               	bcf	status,0,c
 20304  00317E  361C               	rlcf	i2___flmul@grs^0,f,c
 20305  003180  361D               	rlcf	(i2___flmul@grs+1)^0,f,c
 20306  003182  361E               	rlcf	(i2___flmul@grs+2)^0,f,c
 20307  003184  361F               	rlcf	(i2___flmul@grs+3)^0,f,c
 20308  003186  0626               	decf	i2___flmul@temp^0,f,c
 20309  003188  A0D8               	btfss	status,0,c
 20310  00318A  0627               	decf	(i2___flmul@temp+1)^0,f,c
 20311  00318C                     i2l6883:
 20312  00318C  AE24               	btfss	(i2___flmul@prod+2)^0,7,c
 20313  00318E  EFCB  F018         	goto	i2u833_41
 20314  003192  EFCD  F018         	goto	i2u833_40
 20315  003196                     i2u833_41:
 20316  003196  EFB1  F018         	goto	i2l6877
 20317  00319A                     i2u833_40:
 20318  00319A  0E00               	movlw	0
 20319  00319C  6E20               	movwf	i2___flmul@aexp^0,c
 20320  00319E  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 20321  0031A0  EFD4  F018         	goto	i2u834_41
 20322  0031A4  EFD6  F018         	goto	i2u834_40
 20323  0031A8                     i2u834_41:
 20324  0031A8  EFFA  F018         	goto	i2l1517
 20325  0031AC                     i2u834_40:
 20326  0031AC  0EFF               	movlw	255
 20327  0031AE  141C               	andwf	i2___flmul@grs^0,w,c
 20328  0031B0  6E17               	movwf	??i2___flmul^0,c
 20329  0031B2  0EFF               	movlw	255
 20330  0031B4  141D               	andwf	(i2___flmul@grs+1)^0,w,c
 20331  0031B6  6E18               	movwf	(??i2___flmul+1)^0,c
 20332  0031B8  0EFF               	movlw	255
 20333  0031BA  141E               	andwf	(i2___flmul@grs+2)^0,w,c
 20334  0031BC  6E19               	movwf	(??i2___flmul+2)^0,c
 20335  0031BE  0E7F               	movlw	127
 20336  0031C0  141F               	andwf	(i2___flmul@grs+3)^0,w,c
 20337  0031C2  6E1A               	movwf	(??i2___flmul+3)^0,c
 20338  0031C4  5017               	movf	??i2___flmul^0,w,c
 20339  0031C6  1018               	iorwf	(??i2___flmul+1)^0,w,c
 20340  0031C8  1019               	iorwf	(??i2___flmul+2)^0,w,c
 20341  0031CA  101A               	iorwf	(??i2___flmul+3)^0,w,c
 20342  0031CC  B4D8               	btfsc	status,2,c
 20343  0031CE  EFEB  F018         	goto	i2u835_41
 20344  0031D2  EFED  F018         	goto	i2u835_40
 20345  0031D6                     i2u835_41:
 20346  0031D6  EFF1  F018         	goto	i2l1518
 20347  0031DA                     i2u835_40:
 20348  0031DA                     i2l6891:
 20349  0031DA  0E01               	movlw	1
 20350  0031DC  6E20               	movwf	i2___flmul@aexp^0,c
 20351  0031DE  EFFA  F018         	goto	i2l1517
 20352  0031E2                     i2l1518:
 20353  0031E2  A022               	btfss	i2___flmul@prod^0,0,c
 20354  0031E4  EFF6  F018         	goto	i2u836_41
 20355  0031E8  EFF8  F018         	goto	i2u836_40
 20356  0031EC                     i2u836_41:
 20357  0031EC  EFFA  F018         	goto	i2l1517
 20358  0031F0                     i2u836_40:
 20359  0031F0  EFED  F018         	goto	i2l6891
 20360  0031F4                     i2l1517:
 20361  0031F4  5020               	movf	i2___flmul@aexp^0,w,c
 20362  0031F6  B4D8               	btfsc	status,2,c
 20363  0031F8  EF00  F019         	goto	i2u837_41
 20364  0031FC  EF02  F019         	goto	i2u837_40
 20365  003200                     i2u837_41:
 20366  003200  EF26  F019         	goto	i2l6903
 20367  003204                     i2u837_40:
 20368  003204  0E01               	movlw	1
 20369  003206  2622               	addwf	i2___flmul@prod^0,f,c
 20370  003208  0E00               	movlw	0
 20371  00320A  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 20372  00320C  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 20373  00320E  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 20374  003210  A025               	btfss	(i2___flmul@prod+3)^0,0,c
 20375  003212  EF0D  F019         	goto	i2u838_41
 20376  003216  EF0F  F019         	goto	i2u838_40
 20377  00321A                     i2u838_41:
 20378  00321A  EF26  F019         	goto	i2l6903
 20379  00321E                     i2u838_40:
 20380  00321E  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 20381  003222  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 20382  003226  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 20383  00322A  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 20384  00322E  341A               	rlcf	(??i2___flmul+3)^0,w,c
 20385  003230  321A               	rrcf	(??i2___flmul+3)^0,f,c
 20386  003232  3219               	rrcf	(??i2___flmul+2)^0,f,c
 20387  003234  3218               	rrcf	(??i2___flmul+1)^0,f,c
 20388  003236  3217               	rrcf	??i2___flmul^0,f,c
 20389  003238  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 20390  00323C  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 20391  003240  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 20392  003244  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 20393  003248  4A26               	infsnz	i2___flmul@temp^0,f,c
 20394  00324A  2A27               	incf	(i2___flmul@temp+1)^0,f,c
 20395  00324C                     i2l6903:
 20396  00324C  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 20397  00324E  EF31  F019         	goto	i2u839_41
 20398  003252  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20399  003254  E108               	bnz	i2u839_40
 20400  003256  2826               	incf	i2___flmul@temp^0,w,c
 20401  003258  A0D8               	btfss	status,0,c
 20402  00325A  EF31  F019         	goto	i2u839_41
 20403  00325E  EF33  F019         	goto	i2u839_40
 20404  003262                     i2u839_41:
 20405  003262  EF3D  F019         	goto	i2l6907
 20406  003266                     i2u839_40:
 20407  003266  0E00               	movlw	0
 20408  003268  6E22               	movwf	i2___flmul@prod^0,c
 20409  00326A  0E00               	movlw	0
 20410  00326C  6E23               	movwf	(i2___flmul@prod+1)^0,c
 20411  00326E  0E80               	movlw	128
 20412  003270  6E24               	movwf	(i2___flmul@prod+2)^0,c
 20413  003272  0E7F               	movlw	127
 20414  003274  6E25               	movwf	(i2___flmul@prod+3)^0,c
 20415  003276  EF6B  F019         	goto	i2l6919
 20416  00327A                     i2l6907:
 20417  00327A  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 20418  00327C  EF4A  F019         	goto	i2u840_40
 20419  003280  5027               	movf	(i2___flmul@temp+1)^0,w,c
 20420  003282  E106               	bnz	i2u840_41
 20421  003284  0426               	decf	i2___flmul@temp^0,w,c
 20422  003286  B0D8               	btfsc	status,0,c
 20423  003288  EF48  F019         	goto	i2u840_41
 20424  00328C  EF4A  F019         	goto	i2u840_40
 20425  003290                     i2u840_41:
 20426  003290  EF56  F019         	goto	i2l1525
 20427  003294                     i2u840_40:
 20428  003294  0E00               	movlw	0
 20429  003296  6E22               	movwf	i2___flmul@prod^0,c
 20430  003298  0E00               	movlw	0
 20431  00329A  6E23               	movwf	(i2___flmul@prod+1)^0,c
 20432  00329C  0E00               	movlw	0
 20433  00329E  6E24               	movwf	(i2___flmul@prod+2)^0,c
 20434  0032A0  0E00               	movlw	0
 20435  0032A2  6E25               	movwf	(i2___flmul@prod+3)^0,c
 20436  0032A4  0E00               	movlw	0
 20437  0032A6  6E1B               	movwf	i2___flmul@sign^0,c
 20438  0032A8  EF6B  F019         	goto	i2l6919
 20439  0032AC                     i2l1525:
 20440  0032AC  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 20441  0032B0  0EFF               	movlw	255
 20442  0032B2  1622               	andwf	i2___flmul@prod^0,f,c
 20443  0032B4  0EFF               	movlw	255
 20444  0032B6  1623               	andwf	(i2___flmul@prod+1)^0,f,c
 20445  0032B8  0E7F               	movlw	127
 20446  0032BA  1624               	andwf	(i2___flmul@prod+2)^0,f,c
 20447  0032BC  0E00               	movlw	0
 20448  0032BE  1625               	andwf	(i2___flmul@prod+3)^0,f,c
 20449  0032C0  A021               	btfss	i2___flmul@bexp^0,0,c
 20450  0032C2  EF65  F019         	goto	i2u841_41
 20451  0032C6  EF67  F019         	goto	i2u841_40
 20452  0032CA                     i2u841_41:
 20453  0032CA  EF68  F019         	goto	i2l6917
 20454  0032CE                     i2u841_40:
 20455  0032CE  8E24               	bsf	(i2___flmul@prod+2)^0,7,c
 20456  0032D0                     i2l6917:
 20457  0032D0  90D8               	bcf	status,0,c
 20458  0032D2  3021               	rrcf	i2___flmul@bexp^0,w,c
 20459  0032D4  6E25               	movwf	(i2___flmul@prod+3)^0,c
 20460  0032D6                     i2l6919:
 20461  0032D6  501B               	movf	i2___flmul@sign^0,w,c
 20462  0032D8  1225               	iorwf	(i2___flmul@prod+3)^0,f,c
 20463  0032DA  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 20464  0032DE  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 20465  0032E2  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 20466  0032E6  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 20467  0032EA                     i2l1512:
 20468  0032EA  0012               	return		;funcret
 20469  0032EC                     __end_ofi2___flmul:
 20470                           	opt callstack 0
 20471                           
 20472 ;; *************** function ___xxtofl *****************
 20473 ;; Defined at:
 20474 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 20475 ;; Parameters:    Size  Location     Type
 20476 ;;  sign            1    wreg     unsigned char 
 20477 ;;  val             4    0[COMRAM] long 
 20478 ;; Auto vars:     Size  Location     Type
 20479 ;;  sign            1    8[COMRAM] unsigned char 
 20480 ;;  arg             4   10[COMRAM] unsigned long 
 20481 ;;  exp             1    9[COMRAM] unsigned char 
 20482 ;; Return value:  Size  Location     Type
 20483 ;;                  4    0[COMRAM] unsigned char 
 20484 ;; Registers used:
 20485 ;;		wreg, status,2, status,0
 20486 ;; Tracked objects:
 20487 ;;		On entry : 0/0
 20488 ;;		On exit  : 0/0
 20489 ;;		Unchanged: 0/0
 20490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20492 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20494 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20495 ;;Total ram usage:       14 bytes
 20496 ;; Hardware stack levels used:    1
 20497 ;; This function calls:
 20498 ;;		Nothing
 20499 ;; This function is called by:
 20500 ;;		_acende_led
 20501 ;; This function uses a non-reentrant model
 20502 ;;
 20503                           
 20504                           	psect	text78
 20505  004250                     __ptext78:
 20506                           	opt callstack 0
 20507  004250                     ___xxtofl:
 20508                           	opt callstack 17
 20509                           
 20510                           ;incstack = 0
 20511                           ;___xxtofl@sign stored from wreg
 20512  004250  6E09               	movwf	___xxtofl@sign^0,c
 20513  004252  5009               	movf	___xxtofl@sign^0,w,c
 20514  004254  B4D8               	btfsc	status,2,c
 20515  004256  EF2F  F021         	goto	i2u813_41
 20516  00425A  EF31  F021         	goto	i2u813_40
 20517  00425E                     i2u813_41:
 20518  00425E  EF53  F021         	goto	i2l1549
 20519  004262                     i2u813_40:
 20520  004262  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 20521  004264  EF38  F021         	goto	i2u814_40
 20522  004268  EF36  F021         	goto	i2u814_41
 20523  00426C                     i2u814_41:
 20524  00426C  EF53  F021         	goto	i2l1549
 20525  004270                     i2u814_40:
 20526  004270  C001  F005         	movff	___xxtofl@val,??___xxtofl
 20527  004274  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 20528  004278  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 20529  00427C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 20530  004280  1E05               	comf	??___xxtofl^0,f,c
 20531  004282  1E06               	comf	(??___xxtofl+1)^0,f,c
 20532  004284  1E07               	comf	(??___xxtofl+2)^0,f,c
 20533  004286  1E08               	comf	(??___xxtofl+3)^0,f,c
 20534  004288  2A05               	incf	??___xxtofl^0,f,c
 20535  00428A  0E00               	movlw	0
 20536  00428C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 20537  00428E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 20538  004290  2208               	addwfc	(??___xxtofl+3)^0,f,c
 20539  004292  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 20540  004296  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 20541  00429A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 20542  00429E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 20543  0042A2  EF5B  F021         	goto	i2l6755
 20544  0042A6                     i2l1549:
 20545  0042A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 20546  0042AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 20547  0042AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 20548  0042B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 20549  0042B6                     i2l6755:
 20550  0042B6  5001               	movf	___xxtofl@val^0,w,c
 20551  0042B8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 20552  0042BA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 20553  0042BC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 20554  0042BE  A4D8               	btfss	status,2,c
 20555  0042C0  EF64  F021         	goto	i2u815_41
 20556  0042C4  EF66  F021         	goto	i2u815_40
 20557  0042C8                     i2u815_41:
 20558  0042C8  EF70  F021         	goto	i2l6761
 20559  0042CC                     i2u815_40:
 20560  0042CC  0E00               	movlw	0
 20561  0042CE  6E01               	movwf	?___xxtofl^0,c
 20562  0042D0  0E00               	movlw	0
 20563  0042D2  6E02               	movwf	(?___xxtofl+1)^0,c
 20564  0042D4  0E00               	movlw	0
 20565  0042D6  6E03               	movwf	(?___xxtofl+2)^0,c
 20566  0042D8  0E00               	movlw	0
 20567  0042DA  6E04               	movwf	(?___xxtofl+3)^0,c
 20568  0042DC  EF01  F022         	goto	i2l1552
 20569  0042E0                     i2l6761:
 20570  0042E0  0E96               	movlw	150
 20571  0042E2  6E0A               	movwf	___xxtofl@exp^0,c
 20572  0042E4  EF7A  F021         	goto	i2l6765
 20573  0042E8                     i2l6763:
 20574  0042E8  2A0A               	incf	___xxtofl@exp^0,f,c
 20575  0042EA  90D8               	bcf	status,0,c
 20576  0042EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 20577  0042EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 20578  0042F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 20579  0042F2  320B               	rrcf	___xxtofl@arg^0,f,c
 20580  0042F4                     i2l6765:
 20581  0042F4  0E00               	movlw	0
 20582  0042F6  140B               	andwf	___xxtofl@arg^0,w,c
 20583  0042F8  6E05               	movwf	??___xxtofl^0,c
 20584  0042FA  0E00               	movlw	0
 20585  0042FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 20586  0042FE  6E06               	movwf	(??___xxtofl+1)^0,c
 20587  004300  0E00               	movlw	0
 20588  004302  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 20589  004304  6E07               	movwf	(??___xxtofl+2)^0,c
 20590  004306  0EFE               	movlw	254
 20591  004308  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 20592  00430A  6E08               	movwf	(??___xxtofl+3)^0,c
 20593  00430C  5005               	movf	??___xxtofl^0,w,c
 20594  00430E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 20595  004310  1007               	iorwf	(??___xxtofl+2)^0,w,c
 20596  004312  1008               	iorwf	(??___xxtofl+3)^0,w,c
 20597  004314  A4D8               	btfss	status,2,c
 20598  004316  EF8F  F021         	goto	i2u816_41
 20599  00431A  EF91  F021         	goto	i2u816_40
 20600  00431E                     i2u816_41:
 20601  00431E  EF74  F021         	goto	i2l6763
 20602  004322                     i2u816_40:
 20603  004322  EF9F  F021         	goto	i2l1556
 20604  004326                     i2l6767:
 20605  004326  2A0A               	incf	___xxtofl@exp^0,f,c
 20606  004328  0E01               	movlw	1
 20607  00432A  260B               	addwf	___xxtofl@arg^0,f,c
 20608  00432C  0E00               	movlw	0
 20609  00432E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 20610  004330  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 20611  004332  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 20612  004334  90D8               	bcf	status,0,c
 20613  004336  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 20614  004338  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 20615  00433A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 20616  00433C  320B               	rrcf	___xxtofl@arg^0,f,c
 20617  00433E                     i2l1556:
 20618  00433E  0E00               	movlw	0
 20619  004340  140B               	andwf	___xxtofl@arg^0,w,c
 20620  004342  6E05               	movwf	??___xxtofl^0,c
 20621  004344  0E00               	movlw	0
 20622  004346  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 20623  004348  6E06               	movwf	(??___xxtofl+1)^0,c
 20624  00434A  0E00               	movlw	0
 20625  00434C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 20626  00434E  6E07               	movwf	(??___xxtofl+2)^0,c
 20627  004350  0EFF               	movlw	255
 20628  004352  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 20629  004354  6E08               	movwf	(??___xxtofl+3)^0,c
 20630  004356  5005               	movf	??___xxtofl^0,w,c
 20631  004358  1006               	iorwf	(??___xxtofl+1)^0,w,c
 20632  00435A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 20633  00435C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 20634  00435E  A4D8               	btfss	status,2,c
 20635  004360  EFB4  F021         	goto	i2u817_41
 20636  004364  EFB6  F021         	goto	i2u817_40
 20637  004368                     i2u817_41:
 20638  004368  EF93  F021         	goto	i2l6767
 20639  00436C                     i2u817_40:
 20640  00436C  EFBE  F021         	goto	i2l6775
 20641  004370                     i2l6773:
 20642  004370  060A               	decf	___xxtofl@exp^0,f,c
 20643  004372  90D8               	bcf	status,0,c
 20644  004374  360B               	rlcf	___xxtofl@arg^0,f,c
 20645  004376  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 20646  004378  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 20647  00437A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 20648  00437C                     i2l6775:
 20649  00437C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 20650  00437E  EFC3  F021         	goto	i2u818_41
 20651  004382  EFC5  F021         	goto	i2u818_40
 20652  004386                     i2u818_41:
 20653  004386  EFCD  F021         	goto	i2l1563
 20654  00438A                     i2u818_40:
 20655  00438A  0E02               	movlw	2
 20656  00438C  600A               	cpfslt	___xxtofl@exp^0,c
 20657  00438E  EFCB  F021         	goto	i2u819_41
 20658  004392  EFCD  F021         	goto	i2u819_40
 20659  004396                     i2u819_41:
 20660  004396  EFB8  F021         	goto	i2l6773
 20661  00439A                     i2u819_40:
 20662  00439A                     i2l1563:
 20663  00439A  B00A               	btfsc	___xxtofl@exp^0,0,c
 20664  00439C  EFD2  F021         	goto	i2u820_41
 20665  0043A0  EFD4  F021         	goto	i2u820_40
 20666  0043A4                     i2u820_41:
 20667  0043A4  EFD5  F021         	goto	i2l6781
 20668  0043A8                     i2u820_40:
 20669  0043A8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 20670  0043AA                     i2l6781:
 20671  0043AA  90D8               	bcf	status,0,c
 20672  0043AC  320A               	rrcf	___xxtofl@exp^0,f,c
 20673  0043AE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 20674  0043B2  6A06               	clrf	(??___xxtofl+1)^0,c
 20675  0043B4  6A07               	clrf	(??___xxtofl+2)^0,c
 20676  0043B6  6A08               	clrf	(??___xxtofl+3)^0,c
 20677  0043B8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 20678  0043BC  6A07               	clrf	(??___xxtofl+2)^0,c
 20679  0043BE  6A06               	clrf	(??___xxtofl+1)^0,c
 20680  0043C0  6A05               	clrf	??___xxtofl^0,c
 20681  0043C2  5005               	movf	??___xxtofl^0,w,c
 20682  0043C4  120B               	iorwf	___xxtofl@arg^0,f,c
 20683  0043C6  5006               	movf	(??___xxtofl+1)^0,w,c
 20684  0043C8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 20685  0043CA  5007               	movf	(??___xxtofl+2)^0,w,c
 20686  0043CC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 20687  0043CE  5008               	movf	(??___xxtofl+3)^0,w,c
 20688  0043D0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 20689  0043D2  5009               	movf	___xxtofl@sign^0,w,c
 20690  0043D4  B4D8               	btfsc	status,2,c
 20691  0043D6  EFEF  F021         	goto	i2u821_41
 20692  0043DA  EFF1  F021         	goto	i2u821_40
 20693  0043DE                     i2u821_41:
 20694  0043DE  EFF9  F021         	goto	i2l6791
 20695  0043E2                     i2u821_40:
 20696  0043E2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 20697  0043E4  EFF8  F021         	goto	i2u822_40
 20698  0043E8  EFF6  F021         	goto	i2u822_41
 20699  0043EC                     i2u822_41:
 20700  0043EC  EFF9  F021         	goto	i2l6791
 20701  0043F0                     i2u822_40:
 20702  0043F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 20703  0043F2                     i2l6791:
 20704  0043F2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 20705  0043F6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 20706  0043FA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 20707  0043FE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 20708  004402                     i2l1552:
 20709  004402  0012               	return		;funcret
 20710  004404                     __end_of___xxtofl:
 20711                           	opt callstack 0
 20712                           
 20713 ;; *************** function _ADC_GetConversion *****************
 20714 ;; Defined at:
 20715 ;;		line 113 in file "mcc_generated_files/adc.c"
 20716 ;; Parameters:    Size  Location     Type
 20717 ;;  channel         1    wreg     enum E12385
 20718 ;; Auto vars:     Size  Location     Type
 20719 ;;  channel         1    4[COMRAM] enum E12385
 20720 ;; Return value:  Size  Location     Type
 20721 ;;                  2    0[COMRAM] unsigned short 
 20722 ;; Registers used:
 20723 ;;		wreg, status,2, status,0
 20724 ;; Tracked objects:
 20725 ;;		On entry : 0/0
 20726 ;;		On exit  : 0/0
 20727 ;;		Unchanged: 0/0
 20728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20732 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20733 ;;Total ram usage:        5 bytes
 20734 ;; Hardware stack levels used:    1
 20735 ;; This function calls:
 20736 ;;		Nothing
 20737 ;; This function is called by:
 20738 ;;		_acende_led
 20739 ;; This function uses a non-reentrant model
 20740 ;;
 20741                           
 20742                           	psect	text79
 20743  006374                     __ptext79:
 20744                           	opt callstack 0
 20745  006374                     _ADC_GetConversion:
 20746                           	opt callstack 17
 20747                           
 20748                           ;incstack = 0
 20749                           ;ADC_GetConversion@channel stored from wreg
 20750  006374  6E05               	movwf	ADC_GetConversion@channel^0,c
 20751  006376                     
 20752                           ;mcc_generated_files/adc.c: 113: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 114: {;mcc_generated_files/adc.c: 116:     ADCON0bits.CHS = ch
      +                          annel;
 20753  006376  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 20754  00637A  4603               	rlncf	??_ADC_GetConversion^0,f,c
 20755  00637C  4603               	rlncf	??_ADC_GetConversion^0,f,c
 20756  00637E  50C2               	movf	194,w,c	;volatile
 20757  006380  1803               	xorwf	??_ADC_GetConversion^0,w,c
 20758  006382  0B83               	andlw	-125
 20759  006384  1803               	xorwf	??_ADC_GetConversion^0,w,c
 20760  006386  6EC2               	movwf	194,c	;volatile
 20761  006388                     
 20762                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.ADON = 1;
 20763  006388  80C2               	bsf	194,0,c	;volatile
 20764  00638A                     
 20765                           ;mcc_generated_files/adc.c: 123:     ADCON0bits.GO_nDONE = 1;
 20766  00638A  82C2               	bsf	194,1,c	;volatile
 20767  00638C                     i2l217:
 20768                           
 20769                           ;mcc_generated_files/adc.c: 126:     while (ADCON0bits.GO_nDONE)
 20770  00638C  B2C2               	btfsc	194,1,c	;volatile
 20771  00638E  EFCB  F031         	goto	i2u758_41
 20772  006392  EFCD  F031         	goto	i2u758_40
 20773  006396                     i2u758_41:
 20774  006396  EFC6  F031         	goto	i2l217
 20775  00639A                     i2u758_40:
 20776  00639A                     
 20777                           ;mcc_generated_files/adc.c: 131:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 20778  00639A  50C4               	movf	196,w,c	;volatile
 20779  00639C  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
 20780  00639E  6A03               	clrf	??_ADC_GetConversion^0,c
 20781  0063A0  50C3               	movf	195,w,c	;volatile
 20782  0063A2  2403               	addwf	??_ADC_GetConversion^0,w,c
 20783  0063A4  6E01               	movwf	?_ADC_GetConversion^0,c
 20784  0063A6  0E00               	movlw	0
 20785  0063A8  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
 20786  0063AA  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
 20787  0063AC  0012               	return		;funcret
 20788  0063AE                     __end_of_ADC_GetConversion:
 20789                           	opt callstack 0
 20790                           
 20791 ;; *************** function _INT0_ISR *****************
 20792 ;; Defined at:
 20793 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20794 ;; Parameters:    Size  Location     Type
 20795 ;;		None
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;		None
 20798 ;; Return value:  Size  Location     Type
 20799 ;;                  1    wreg      void 
 20800 ;; Registers used:
 20801 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20802 ;; Tracked objects:
 20803 ;;		On entry : 0/0
 20804 ;;		On exit  : 0/0
 20805 ;;		Unchanged: 0/0
 20806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20811 ;;Total ram usage:        0 bytes
 20812 ;; Hardware stack levels used:    1
 20813 ;; Hardware stack levels required when called:    3
 20814 ;; This function calls:
 20815 ;;		_INT0_CallBack
 20816 ;; This function is called by:
 20817 ;;		_INTERRUPT_InterruptManager
 20818 ;; This function uses a non-reentrant model
 20819 ;;
 20820                           
 20821                           	psect	text80
 20822  0066A2                     __ptext80:
 20823                           	opt callstack 0
 20824  0066A2                     _INT0_ISR:
 20825                           	opt callstack 17
 20826  0066A2                     
 20827                           ;mcc_generated_files/ext_int.c: 34:     (INTCONbits.INT0IF = 0);
 20828  0066A2  92F2               	bcf	242,1,c	;volatile
 20829  0066A4                     
 20830                           ;mcc_generated_files/ext_int.c: 37:     INT0_CallBack();
 20831  0066A4  EC68  F032         	call	_INT0_CallBack	;wreg free
 20832  0066A8  0012               	return		;funcret
 20833  0066AA                     __end_of_INT0_ISR:
 20834                           	opt callstack 0
 20835                           
 20836 ;; *************** function _INT0_CallBack *****************
 20837 ;; Defined at:
 20838 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20839 ;; Parameters:    Size  Location     Type
 20840 ;;		None
 20841 ;; Auto vars:     Size  Location     Type
 20842 ;;		None
 20843 ;; Return value:  Size  Location     Type
 20844 ;;                  1    wreg      void 
 20845 ;; Registers used:
 20846 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 20847 ;; Tracked objects:
 20848 ;;		On entry : 0/0
 20849 ;;		On exit  : 0/0
 20850 ;;		Unchanged: 0/0
 20851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20856 ;;Total ram usage:        0 bytes
 20857 ;; Hardware stack levels used:    1
 20858 ;; Hardware stack levels required when called:    2
 20859 ;; This function calls:
 20860 ;;		Absolute function
 20861 ;;		_INT0_DefaultInterruptHandler
 20862 ;;		_pulso_encoder
 20863 ;; This function is called by:
 20864 ;;		_INT0_ISR
 20865 ;; This function uses a non-reentrant model
 20866 ;;
 20867                           
 20868                           	psect	text81
 20869  0064D0                     __ptext81:
 20870                           	opt callstack 0
 20871  0064D0                     _INT0_CallBack:
 20872                           	opt callstack 17
 20873  0064D0                     
 20874                           ;mcc_generated_files/ext_int.c: 44:     if(INT0_InterruptHandler)
 20875  0064D0  503F               	movf	_INT0_InterruptHandler^0,w,c
 20876  0064D2  1040               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 20877  0064D4  B4D8               	btfsc	status,2,c
 20878  0064D6  EF6F  F032         	goto	i2u849_41
 20879  0064DA  EF71  F032         	goto	i2u849_40
 20880  0064DE                     i2u849_41:
 20881  0064DE  EF7D  F032         	goto	i2l326
 20882  0064E2                     i2u849_40:
 20883  0064E2                     
 20884                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          0_InterruptHandler();
 20885  0064E2  D802               	call	i2u850_48
 20886  0064E4  EF7D  F032         	goto	i2u850_49
 20887  0064E8                     i2u850_48:
 20888  0064E8  0005               	push	
 20889  0064EA  6EFA               	movwf	pclath,c
 20890  0064EC  503F               	movf	_INT0_InterruptHandler^0,w,c
 20891  0064EE  6EFD               	movwf	tosl,c
 20892  0064F0  5040               	movf	(_INT0_InterruptHandler+1)^0,w,c
 20893  0064F2  6EFE               	movwf	tosh,c
 20894  0064F4  6AFF               	clrf	tosu,c
 20895  0064F6  50FA               	movf	pclath,w,c
 20896  0064F8  0012               	return		;indir
 20897  0064FA                     i2u850_49:
 20898  0064FA                     i2l326:
 20899  0064FA  0012               	return		;funcret
 20900  0064FC                     __end_of_INT0_CallBack:
 20901                           	opt callstack 0
 20902                           
 20903 ;; *************** function _INT0_DefaultInterruptHandler *****************
 20904 ;; Defined at:
 20905 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 20906 ;; Parameters:    Size  Location     Type
 20907 ;;		None
 20908 ;; Auto vars:     Size  Location     Type
 20909 ;;		None
 20910 ;; Return value:  Size  Location     Type
 20911 ;;                  1    wreg      void 
 20912 ;; Registers used:
 20913 ;;		None
 20914 ;; Tracked objects:
 20915 ;;		On entry : 0/0
 20916 ;;		On exit  : 0/0
 20917 ;;		Unchanged: 0/0
 20918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20923 ;;Total ram usage:        0 bytes
 20924 ;; Hardware stack levels used:    1
 20925 ;; This function calls:
 20926 ;;		Nothing
 20927 ;; This function is called by:
 20928 ;;		_EXT_INT_Initialize
 20929 ;;		_INT0_CallBack
 20930 ;; This function uses a non-reentrant model
 20931 ;;
 20932                           
 20933                           	psect	text82
 20934  0066C2                     __ptext82:
 20935                           	opt callstack 0
 20936  0066C2                     _INT0_DefaultInterruptHandler:
 20937                           	opt callstack 18
 20938  0066C2  0012               	return		;funcret
 20939  0066C4                     __end_of_INT0_DefaultInterruptHandler:
 20940                           	opt callstack 0
 20941                           
 20942 ;; *************** function _pulso_encoder *****************
 20943 ;; Defined at:
 20944 ;;		line 32 in file "main.c"
 20945 ;; Parameters:    Size  Location     Type
 20946 ;;		None
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;		None
 20949 ;; Return value:  Size  Location     Type
 20950 ;;                  1    wreg      void 
 20951 ;; Registers used:
 20952 ;;		wreg, status,2, cstack
 20953 ;; Tracked objects:
 20954 ;;		On entry : 0/0
 20955 ;;		On exit  : 0/0
 20956 ;;		Unchanged: 0/0
 20957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20962 ;;Total ram usage:        0 bytes
 20963 ;; Hardware stack levels used:    1
 20964 ;; Hardware stack levels required when called:    1
 20965 ;; This function calls:
 20966 ;;		_TMR0_ReadTimer
 20967 ;;		_TMR0_StartTimer
 20968 ;;		_TMR0_StopTimer
 20969 ;;		_TMR0_WriteTimer
 20970 ;; This function is called by:
 20971 ;;		_main
 20972 ;;		_INT0_CallBack
 20973 ;; This function uses a non-reentrant model
 20974 ;;
 20975                           
 20976                           	psect	text83
 20977  006596                     __ptext83:
 20978                           	opt callstack 0
 20979  006596                     _pulso_encoder:
 20980                           	opt callstack 17
 20981  006596                     
 20982                           ;main.c: 33:     TMR0_StopTimer();
 20983  006596  EC5B  F033         	call	_TMR0_StopTimer	;wreg free
 20984  00659A                     
 20985                           ;main.c: 34:     ticks=TMR0_ReadTimer();
 20986  00659A  ECEB  F032         	call	_TMR0_ReadTimer	;wreg free
 20987  00659E  C001  F1BC         	movff	?_TMR0_ReadTimer,_ticks
 20988  0065A2  C002  F1BD         	movff	?_TMR0_ReadTimer+1,_ticks+1
 20989  0065A6                     
 20990                           ;main.c: 35:     TMR0_WriteTimer(0x00);
 20991  0065A6  0E00               	movlw	0
 20992  0065A8  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
 20993  0065AA  0E00               	movlw	0
 20994  0065AC  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
 20995  0065AE  EC4C  F033         	call	_TMR0_WriteTimer	;wreg free
 20996                           
 20997                           ;main.c: 36:     TMR0_StartTimer();
 20998  0065B2  EC5D  F033         	call	_TMR0_StartTimer	;wreg free
 20999  0065B6  0012               	return		;funcret
 21000  0065B8                     __end_of_pulso_encoder:
 21001                           	opt callstack 0
 21002                           
 21003 ;; *************** function _TMR0_WriteTimer *****************
 21004 ;; Defined at:
 21005 ;;		line 115 in file "mcc_generated_files/tmr0.c"
 21006 ;; Parameters:    Size  Location     Type
 21007 ;;  timerVal        2    0[COMRAM] unsigned short 
 21008 ;; Auto vars:     Size  Location     Type
 21009 ;;		None
 21010 ;; Return value:  Size  Location     Type
 21011 ;;                  1    wreg      void 
 21012 ;; Registers used:
 21013 ;;		wreg, status,2
 21014 ;; Tracked objects:
 21015 ;;		On entry : 0/0
 21016 ;;		On exit  : 0/0
 21017 ;;		Unchanged: 0/0
 21018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21023 ;;Total ram usage:        2 bytes
 21024 ;; Hardware stack levels used:    1
 21025 ;; This function calls:
 21026 ;;		Nothing
 21027 ;; This function is called by:
 21028 ;;		_pulso_encoder
 21029 ;; This function uses a non-reentrant model
 21030 ;;
 21031                           
 21032                           	psect	text84
 21033  006698                     __ptext84:
 21034                           	opt callstack 0
 21035  006698                     _TMR0_WriteTimer:
 21036                           	opt callstack 17
 21037  006698                     
 21038                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
 21039  006698  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
 21040  00669A  6ED7               	movwf	215,c	;volatile
 21041  00669C                     
 21042                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
 21043  00669C  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
 21044  0066A0  0012               	return		;funcret
 21045  0066A2                     __end_of_TMR0_WriteTimer:
 21046                           	opt callstack 0
 21047                           
 21048 ;; *************** function _TMR0_StopTimer *****************
 21049 ;; Defined at:
 21050 ;;		line 96 in file "mcc_generated_files/tmr0.c"
 21051 ;; Parameters:    Size  Location     Type
 21052 ;;		None
 21053 ;; Auto vars:     Size  Location     Type
 21054 ;;		None
 21055 ;; Return value:  Size  Location     Type
 21056 ;;                  1    wreg      void 
 21057 ;; Registers used:
 21058 ;;		None
 21059 ;; Tracked objects:
 21060 ;;		On entry : 0/0
 21061 ;;		On exit  : 0/0
 21062 ;;		Unchanged: 0/0
 21063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21068 ;;Total ram usage:        0 bytes
 21069 ;; Hardware stack levels used:    1
 21070 ;; This function calls:
 21071 ;;		Nothing
 21072 ;; This function is called by:
 21073 ;;		_pulso_encoder
 21074 ;; This function uses a non-reentrant model
 21075 ;;
 21076                           
 21077                           	psect	text85
 21078  0066B6                     __ptext85:
 21079                           	opt callstack 0
 21080  0066B6                     _TMR0_StopTimer:
 21081                           	opt callstack 17
 21082  0066B6                     
 21083                           ;mcc_generated_files/tmr0.c: 99:     T0CONbits.TMR0ON = 0;
 21084  0066B6  9ED5               	bcf	213,7,c	;volatile
 21085  0066B8  0012               	return		;funcret
 21086  0066BA                     __end_of_TMR0_StopTimer:
 21087                           	opt callstack 0
 21088                           
 21089 ;; *************** function _TMR0_StartTimer *****************
 21090 ;; Defined at:
 21091 ;;		line 90 in file "mcc_generated_files/tmr0.c"
 21092 ;; Parameters:    Size  Location     Type
 21093 ;;		None
 21094 ;; Auto vars:     Size  Location     Type
 21095 ;;		None
 21096 ;; Return value:  Size  Location     Type
 21097 ;;                  1    wreg      void 
 21098 ;; Registers used:
 21099 ;;		None
 21100 ;; Tracked objects:
 21101 ;;		On entry : 0/0
 21102 ;;		On exit  : 0/0
 21103 ;;		Unchanged: 0/0
 21104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21109 ;;Total ram usage:        0 bytes
 21110 ;; Hardware stack levels used:    1
 21111 ;; This function calls:
 21112 ;;		Nothing
 21113 ;; This function is called by:
 21114 ;;		_pulso_encoder
 21115 ;; This function uses a non-reentrant model
 21116 ;;
 21117                           
 21118                           	psect	text86
 21119  0066BA                     __ptext86:
 21120                           	opt callstack 0
 21121  0066BA                     _TMR0_StartTimer:
 21122                           	opt callstack 17
 21123  0066BA                     
 21124                           ;mcc_generated_files/tmr0.c: 93:     T0CONbits.TMR0ON = 1;
 21125  0066BA  8ED5               	bsf	213,7,c	;volatile
 21126  0066BC  0012               	return		;funcret
 21127  0066BE                     __end_of_TMR0_StartTimer:
 21128                           	opt callstack 0
 21129                           
 21130 ;; *************** function _TMR0_ReadTimer *****************
 21131 ;; Defined at:
 21132 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 21133 ;; Parameters:    Size  Location     Type
 21134 ;;		None
 21135 ;; Auto vars:     Size  Location     Type
 21136 ;;  readVal         2    4[COMRAM] unsigned short 
 21137 ;;  readValHigh     1    7[COMRAM] unsigned char 
 21138 ;;  readValLow      1    6[COMRAM] unsigned char 
 21139 ;; Return value:  Size  Location     Type
 21140 ;;                  2    0[COMRAM] unsigned short 
 21141 ;; Registers used:
 21142 ;;		wreg, status,2
 21143 ;; Tracked objects:
 21144 ;;		On entry : 0/0
 21145 ;;		On exit  : 0/0
 21146 ;;		Unchanged: 0/0
 21147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21149 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21151 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21152 ;;Total ram usage:        8 bytes
 21153 ;; Hardware stack levels used:    1
 21154 ;; This function calls:
 21155 ;;		Nothing
 21156 ;; This function is called by:
 21157 ;;		_pulso_encoder
 21158 ;; This function uses a non-reentrant model
 21159 ;;
 21160                           
 21161                           	psect	text87
 21162  0065D6                     __ptext87:
 21163                           	opt callstack 0
 21164  0065D6                     _TMR0_ReadTimer:
 21165                           	opt callstack 17
 21166  0065D6                     
 21167                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
 21168  0065D6  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 21169                           
 21170                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
 21171  0065DA  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 21172  0065DE                     
 21173                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 21174  0065DE  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 21175  0065E0  6E03               	movwf	??_TMR0_ReadTimer^0,c
 21176  0065E2  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 21177  0065E4  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 21178  0065E6  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 21179  0065EA                     
 21180                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
 21181  0065EA  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 21182  0065EE  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 21183  0065F2  0012               	return		;funcret
 21184  0065F4                     __end_of_TMR0_ReadTimer:
 21185                           	opt callstack 0
 21186                           
 21187 ;; *************** function _ADC_ISR *****************
 21188 ;; Defined at:
 21189 ;;		line 139 in file "mcc_generated_files/adc.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;		None
 21192 ;; Auto vars:     Size  Location     Type
 21193 ;;		None
 21194 ;; Return value:  Size  Location     Type
 21195 ;;                  1    wreg      void 
 21196 ;; Registers used:
 21197 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 21198 ;; Tracked objects:
 21199 ;;		On entry : 0/0
 21200 ;;		On exit  : 0/0
 21201 ;;		Unchanged: 0/0
 21202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21207 ;;Total ram usage:        0 bytes
 21208 ;; Hardware stack levels used:    1
 21209 ;; Hardware stack levels required when called:    1
 21210 ;; This function calls:
 21211 ;;		Absolute function
 21212 ;;		_ADC_DefaultInterruptHandler
 21213 ;; This function is called by:
 21214 ;;		_INTERRUPT_InterruptManager
 21215 ;; This function uses a non-reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text88
 21219  00644A                     __ptext88:
 21220                           	opt callstack 0
 21221  00644A                     _ADC_ISR:
 21222                           	opt callstack 19
 21223  00644A                     
 21224                           ;mcc_generated_files/adc.c: 142:     PIR1bits.ADIF = 0;
 21225  00644A  9C9E               	bcf	158,6,c	;volatile
 21226  00644C                     
 21227                           ;mcc_generated_files/adc.c: 144:  if(ADC_InterruptHandler)
 21228  00644C  5045               	movf	_ADC_InterruptHandler^0,w,c
 21229  00644E  1046               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
 21230  006450  B4D8               	btfsc	status,2,c
 21231  006452  EF2D  F032         	goto	i2u412_41
 21232  006456  EF2F  F032         	goto	i2u412_40
 21233  00645A                     i2u412_41:
 21234  00645A  EF3B  F032         	goto	i2l227
 21235  00645E                     i2u412_40:
 21236  00645E                     
 21237                           ;mcc_generated_files/adc.c: 145:     {;mcc_generated_files/adc.c: 146:         ADC_Inter
      +                          ruptHandler();
 21238  00645E  D802               	call	i2u413_48
 21239  006460  EF3B  F032         	goto	i2u413_49
 21240  006464                     i2u413_48:
 21241  006464  0005               	push	
 21242  006466  6EFA               	movwf	pclath,c
 21243  006468  5045               	movf	_ADC_InterruptHandler^0,w,c
 21244  00646A  6EFD               	movwf	tosl,c
 21245  00646C  5046               	movf	(_ADC_InterruptHandler+1)^0,w,c
 21246  00646E  6EFE               	movwf	tosh,c
 21247  006470  6AFF               	clrf	tosu,c
 21248  006472  50FA               	movf	pclath,w,c
 21249  006474  0012               	return		;indir
 21250  006476                     i2u413_49:
 21251  006476                     i2l227:
 21252  006476  0012               	return		;funcret
 21253  006478                     __end_of_ADC_ISR:
 21254                           	opt callstack 0
 21255                           
 21256 ;; *************** function _ADC_DefaultInterruptHandler *****************
 21257 ;; Defined at:
 21258 ;;		line 154 in file "mcc_generated_files/adc.c"
 21259 ;; Parameters:    Size  Location     Type
 21260 ;;		None
 21261 ;; Auto vars:     Size  Location     Type
 21262 ;;		None
 21263 ;; Return value:  Size  Location     Type
 21264 ;;                  1    wreg      void 
 21265 ;; Registers used:
 21266 ;;		None
 21267 ;; Tracked objects:
 21268 ;;		On entry : 0/0
 21269 ;;		On exit  : 0/0
 21270 ;;		Unchanged: 0/0
 21271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21276 ;;Total ram usage:        0 bytes
 21277 ;; Hardware stack levels used:    1
 21278 ;; This function calls:
 21279 ;;		Nothing
 21280 ;; This function is called by:
 21281 ;;		_ADC_Initialize
 21282 ;;		_ADC_ISR
 21283 ;; This function uses a non-reentrant model
 21284 ;;
 21285                           
 21286                           	psect	text89
 21287  0066C4                     __ptext89:
 21288                           	opt callstack 0
 21289  0066C4                     _ADC_DefaultInterruptHandler:
 21290                           	opt callstack 19
 21291  0066C4  0012               	return		;funcret
 21292  0066C6                     __end_of_ADC_DefaultInterruptHandler:
 21293                           	opt callstack 0
 21294                           
 21295                           	psect	text90
 21296  000000                     __ptext90:
 21297                           	opt callstack 0
 21298  000000                     
 21299                           	psect	rparam
 21300  0000                     
 21301                           	psect	temp
 21302  000050                     btemp:
 21303                           	opt callstack 0
 21304  000050                     	ds	1
 21305  0000                     int$flags	set	btemp
 21306  0000                     wtemp8	set	btemp+1
 21307  0000                     ttemp5	set	btemp+1
 21308  0000                     ttemp6	set	btemp+4
 21309  0000                     ttemp7	set	btemp+8
 21310                           tosu	equ	0xFFF
 21311                           tosh	equ	0xFFE
 21312                           tosl	equ	0xFFD
 21313                           stkptr	equ	0xFFC
 21314                           pclatu	equ	0xFFB
 21315                           pclath	equ	0xFFA
 21316                           pcl	equ	0xFF9
 21317                           tblptru	equ	0xFF8
 21318                           tblptrh	equ	0xFF7
 21319                           tblptrl	equ	0xFF6
 21320                           tablat	equ	0xFF5
 21321                           prodh	equ	0xFF4
 21322                           prodl	equ	0xFF3
 21323                           indf0	equ	0xFEF
 21324                           postinc0	equ	0xFEE
 21325                           postdec0	equ	0xFED
 21326                           preinc0	equ	0xFEC
 21327                           plusw0	equ	0xFEB
 21328                           fsr0h	equ	0xFEA
 21329                           fsr0l	equ	0xFE9
 21330                           wreg	equ	0xFE8
 21331                           indf1	equ	0xFE7
 21332                           postinc1	equ	0xFE6
 21333                           postdec1	equ	0xFE5
 21334                           preinc1	equ	0xFE4
 21335                           plusw1	equ	0xFE3
 21336                           fsr1h	equ	0xFE2
 21337                           fsr1l	equ	0xFE1
 21338                           bsr	equ	0xFE0
 21339                           indf2	equ	0xFDF
 21340                           postinc2	equ	0xFDE
 21341                           postdec2	equ	0xFDD
 21342                           preinc2	equ	0xFDC
 21343                           plusw2	equ	0xFDB
 21344                           fsr2h	equ	0xFDA
 21345                           fsr2l	equ	0xFD9
 21346                           status	equ	0xFD8


Data Sizes:
    Strings     146
    Constant    3536
    Data        7
    BSS         310
    Persistent  10
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      79
    BANK0           160    143     145
    BANK1           256     60     250
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[14]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), string_rpm(BANK2[100]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), string_rpm(BANK2[100]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), STR_24(CODE[3]), 
		 -> STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_114(CODE[3]), STR_110(CODE[3]), STR_105(CODE[3]), STR_101(CODE[3]), 
		 -> STR_96(CODE[4]), STR_92(CODE[4]), STR_87(CODE[3]), STR_82(CODE[3]), 
		 -> STR_77(CODE[4]), STR_72(CODE[3]), STR_67(CODE[3]), STR_62(CODE[4]), 
		 -> STR_57(CODE[3]), STR_52(CODE[3]), STR_47(CODE[4]), STR_42(CODE[3]), 
		 -> STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), STR_24(CODE[3]), 
		 -> STR_19(CODE[4]), STR_15(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK1[3]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK1[3]), STR_4(CODE[20]), STR_3(CODE[14]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), ticks(BANK1[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK1[80]), ticks(BANK1[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[14]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), string_rpm(BANK2[100]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    S2301_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), string_rpm(BANK2[100]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[14]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK1[2]), ticks(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), ticks(BANK1[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_draw_string@pS	PTR const unsigned char  size(2) Largest target is 100
		 -> string(BANK1[100]), string_rpm(BANK2[100]), STR_2(CODE[11]), STR_1(CODE[33]), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pulso_encoder(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pulso_encoder(), INT0_DefaultInterruptHandler(), Absolute function(), 

    ADC_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ADC_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> acende_led(), Absolute function(), IOCB4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _IOCB4_ISR->_acende_led
    _acende_led->i2___flmul
    i2___flmul->___xxtofl
    _pulso_encoder->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_init->_lcd_fill
    _lcd_fill->_lcd_set_cursor
    _lcd_draw_string->_lcd_draw_char
    _lcd_draw_char->_lcd_set_cursor
    _lcd_draw_line->_lcd_draw_pixel_at
    _lcd_draw_pixel_at->_lcd_set_cursor
    _lcd_set_cursor->_lcd_set_cursor_x
    _lcd_set_cursor->_lcd_set_cursor_y
    _lcd_set_cursor_y->_lcd_send
    _lcd_set_cursor_x->_lcd_send
    _lcd_draw_pixel->_lcd_send
    _lcd_send->_SPI_ExchangeByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _ADC_Initialize->_ADC_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  203432
           _INT0_SetInterruptHandler
          _IOCB4_SetInterruptHandler
                           _SPI_Open
                  _SYSTEM_Initialize
                            ___aldiv
                      _lcd_draw_line
                    _lcd_draw_string
                           _lcd_init
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            14     4     10   97788
                                            139 BANK0      4     4      0
                                             50 BANK1     10     0     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   96943
                                            125 BANK0     14    14      0
                                             42 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   95906
                                            123 BANK0      2     2      0
                                             36 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   95079
                                            113 BANK0     10     4      6
                                              0 BANK1     36    36      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11   10037
                                             27 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              6 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    8429
                                             27 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                              0 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                              0 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    6265
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2732
                                              9 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    7701
                                             27 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   31677
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1232
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     641
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3343
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    9283
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    6756
                                             27 BANK0      5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    6477
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     310
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1577
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2195
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     912
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   37212
                           _lcd_fill
                           _lcd_send
                            _msDelay
 ---------------------------------------------------------------------------------
 (2) _msDelay                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_fill                                             6     4      2   28321
                                              9 BANK0      6     4      2
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_string                                     18     8     10   31252
                                             31 BANK0     18     8     10
                      _lcd_draw_char
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_char                                       22    12     10   29124
                                              9 BANK0     22    12     10
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_draw_line                                       23    13     10   35466
                                             15 BANK0     23    13     10
                  _lcd_draw_pixel_at
 ---------------------------------------------------------------------------------
 (2) _lcd_draw_pixel_at                                    6     0      6   31732
                                              9 BANK0      6     0      6
                     _lcd_draw_pixel
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     0      4   18794
                                              5 BANK0      4     0      4
                   _lcd_set_cursor_x
                   _lcd_set_cursor_y
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_y                                     2     0      2    9006
                                              3 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (4) _lcd_set_cursor_x                                     2     0      2    9006
                                              3 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (3) _lcd_draw_pixel                                       2     0      2    9335
                                              3 BANK0      2     0      2
                           _lcd_send
 ---------------------------------------------------------------------------------
 (2) _lcd_send                                             2     1      1    8823
                                              1 BANK0      2     1      1
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI_ExchangeByte                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     543
                     _ADC_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0     121
            _ADC_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADC_SetInterruptHandler                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Open                                             2     2      0     124
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0    2127
                                             40 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (11) _PIN_MANAGER_IOC                                     0     0      0    1938
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (12) _IOCB4_ISR                                           0     0      0    1938
                   Absolute function *
      _IOCB4_DefaultInterruptHandler *
                         _acende_led *
 ---------------------------------------------------------------------------------
 (13) _acende_led                                          1     1      0    1938
                                             39 COMRAM     1     1      0
                  _ADC_GetConversion
                           ___xxtofl
                          i2___flmul
 ---------------------------------------------------------------------------------
 (14) i2___flmul                                          25    17      8    1518
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (14) ___xxtofl                                           14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversion                                   5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0     189
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0     189
                   Absolute function *
       _INT0_DefaultInterruptHandler *
                      _pulso_encoder *
 ---------------------------------------------------------------------------------
 (13) _pulso_encoder                                       0     0      0     189
                     _TMR0_ReadTimer
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) _TMR0_WriteTimer                                     2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_StartTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
                   Absolute function *
        _ADC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_SetInterruptHandler
   _IOCB4_SetInterruptHandler
   _SPI_Open
   _SYSTEM_Initialize
     _ADC_Initialize
       _ADC_SetInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
   ___aldiv
   _lcd_draw_line
     _lcd_draw_pixel_at
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_draw_string
     _lcd_draw_char
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
   _lcd_init
     _lcd_fill
       _lcd_draw_pixel
         _lcd_send
           _SPI_ExchangeByte
       _lcd_set_cursor
         _lcd_set_cursor_x
           _lcd_send
             _SPI_ExchangeByte
         _lcd_set_cursor_y
           _lcd_send
             _SPI_ExchangeByte
     _lcd_send
       _SPI_ExchangeByte
     _msDelay
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _ADC_DefaultInterruptHandler *
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _pulso_encoder *
         _TMR0_ReadTimer
         _TMR0_StartTimer
         _TMR0_StopTimer
         _TMR0_WriteTimer
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _IOCB4_DefaultInterruptHandler *
       _acende_led *
         _ADC_GetConversion
         ___xxtofl
         i2___flmul
           ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      64      10       39.1%
BITBANK1           100      0       0       7        0.0%
BANK1              100     3C      FA       8       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8F      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      4F       1       84.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     23E       6        0.0%
DATA                 0      0     23E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 26 17:51:58 2020

                   __size_of_pulso_encoder 0022                           fp__pulso_encoder 0000  
                           _SPI_Initialize 6656                               ___fldiv@aexp 0078  
                             ___fldiv@bexp 0077                               ___fldiv@sign 0070  
                              _SSPSTATbits 000FC7                                         l43 618E  
                                       l54 6682                                         l84 6594  
                                       l87 6678                               ___awdiv@sign 0065  
                      ___wmul@multiplicand 0062         __size_of_IOCB4_SetInterruptHandler 000A  
                              __CFG_BORV$3 000000                            _timer0ReloadVal 0041  
               ?_IOCB4_SetInterruptHandler 0060                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                                        l104 66B4  
                                      l205 6572                                        l142 5B20  
                                      l230 6696                                        l150 660A  
                                      l151 660E                                        l138 6666  
                                      l252 64A2                                        l148 65FC  
                                      l335 6654                                        l440 65D4  
                                      l329 668C                                        l450 60B6  
                                      l530 4BD0                                        l428 63E4  
                                      l604 3728                                        l293 6524  
                                      l461 5D06                                        l437 2A94  
                                      l454 6068                                        l446 6212  
                                      l606 3730                                        l624 396A  
                                      l720 409A                                        l457 6626  
                                      l490 6448                                        l642 219C  
                                      l722 40A2                                        l483 4D0A  
                                      l539 4FDA                                        l731 424E  
                                      l660 19D2                                        l740 47C6  
                                      l813 01AA                                        l486 4D3C  
                                      l750 48BC                                        l591 59A6  
                                      l729 41EA                                        l761 3E9C  
                                      l586 5926                                        l754 48C4  
                                      l738 47BE                                        l589 596A  
                                      l749 4872                                        l598 5F72  
                                      l686 1D6C                                        l774 39A4  
                                      l838 15DE                                        l759 3E94  
                                      l783 3A42                                        l776 39AC  
                                      l769 4060                                        l858 09D4  
                                      l890 5DEA                                        l891 5DF2  
                                      l973 5340                                        l797 3BE2  
                                      l894 654C                                        l799 3C44  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
               ??_INT0_SetInterruptHandler 0062                            _timer1ReloadVal 0043  
                                      _abs 6190                                        _pad 58E0  
                          __end_of_ADC_ISR 6478                                        _rpm 0106  
          __end_of_ADC_SetInterruptHandler 6698                               ___awmod@sign 0065  
                                      tosl 000FFD                                        wreg 000FE8  
                              i2___flmul@a 0013                                i2___flmul@b 000F  
                            _INT0_CallBack 64D0                               ___flmul@aexp 006D  
                             ___flmul@bexp 0072               ?_ADC_DefaultInterruptHandler 0001  
                             ___flmul@sign 006C                               ___flmul@temp 0077  
                             ___flmul@prod 0073                            ?_lcd_set_cursor 0065  
                             ___fltol@exp1 0069                         __size_of_IOCB4_ISR 002C  
                                     l1021 4EA2                                       l1008 4A4E  
                                     ?_abs 0072                                       l1125 5A6C  
                                     l1153 5C7E                                       l1138 5BD2  
                                     l1164 554E                                       l1332 5720  
                                     l1422 238E                                       l1342 57F2  
                                     l1159 5508                                       l1431 265E  
                                     l1423 237C                                       l1191 5448  
                                     l1512 2EC0                                       l1168 62FE  
                                     l1424 2342                                       l1611 4598  
                                     l1515 2D52                                       l1339 5740  
                                     l1508 2B5C                                       l1620 3E5A  
                                     l1525 2E82                                       l1517 2DCA  
                                     l1349 5812                                       l1614 45A0  
                                     l1518 2DB8                                       l1630 6250  
                                     l1439 24A8                                       l1623 3D9E  
                                     l1448 2578                                       l1464 60FE  
                                     l1481 34AA                                       l1449 2566  
                                     l1490 3592                                       l1650 62C4  
                                     l1714 5E54                                       l1722 5EAC  
                                     l1636 6372                                       l1644 601A  
                                     l1580 61C8                                       l1476 3686  
                                     l1709 5E4C                                       l1733 628A  
                                     l1478 34E6                                       l1583 61D0  
                                     l1487 352C                                       l1575 564E  
                                     l1727 5EB4                                       l1744 5232  
                                     l1665 58DE                                       l1673 6146  
                                     l1489 35A4                                       l1683 6416  
                                     l1676 66BE                                       l1749 520C  
                                     l1695 6338                                       l1689 5F14  
                                     l1699 5108                                       ?_pad 0070  
                                     l8003 6214                                       l8011 5E8E  
                                     l8021 6526                                       l8101 4E62  
                                     l8013 5EA0                                       l8023 6544  
                                     l8031 48DA                                       l8103 4E82  
                                     l8111 3308                                       l8007 5E56  
                                     l8017 633A                                       l8041 4930  
                                     l8033 48FA                                       l8201 353C  
                                     l8121 333C                                       l8113 330A  
                                     l9001 40F4                                       l8051 4984  
                                     l8043 493C                                       l8035 48FE  
                                     l8027 48C6                                       l8203 354A  
                                     l8131 336E                                       l8115 331A  
                                     l8123 3344                                       l8107 32EC  
                                     l9011 418A                                       l9003 4106  
                                     l8061 49F8                                       l8053 4996  
                                     l8045 495A                                       l8037 490C  
                                     l8029 48CC                                       l8213 35B4  
                                     l8221 35FC                                       l8205 354E  
                                     l8141 33A2                                       l8133 3370  
                                     l8125 3354                                       l8117 332A  
                                     l8109 32FA                                       l8301 2C06  
                                     l9021 420A                                       l9013 41A8  
                                     l9005 410C                                       l9101 4010  
                                     l8055 49C4                                       l8047 4962  
                                     l8063 49FE                                       l8039 492C  
                                     l8071 4D3E                                       l8231 3666  
                                     l8223 3616                                       l8215 35C0  
                                     l8207 355C                                       l8151 33E8  
                                     l8135 3380                                       l8143 33AA  
                                     l8127 335A                                       l8119 333A  
                                     l8311 2C58                                       l8303 2C12  
                                     l9023 4210                                       l9015 41C2  
                                     l9007 4112                                       l9031 473A  
                                     l9103 402A                                       l9111 397C  
                                     l8065 4A0E                                       l8057 49E4  
                                     l8049 4976                                       l8081 4D84  
                                     l8073 4D44                                       l8401 5A04  
                                     l8233 3674                                       l8225 362C  
                                     l8217 35CE                                       l8209 358A  
                                     l8161 3410                                       l8153 33EC  
                                     l8145 33BA                                       l8137 3390  
                                     l8129 3360                                       l8321 2CD6  
                                     l8313 2C68                                       l8305 2C22  
                                     l9025 4220                                       l9017 41DC  
                                     l9009 4170                                       l9041 4784  
                                     l9033 474C                                       l9105 4038  
                                     l9121 39EA                                       l9113 397E  
                                     l9211 457C                                       l9203 4518  
                                     l8067 4A2E                                       l8059 49E6  
                                     l8091 4DEC                                       l8083 4DA4  
                                     l8075 4D52                                       l8411 5A3E  
                                     l8403 5A0C                                       l8235 367A  
                                     l8227 3646                                       l8219 35F8  
                                     l8171 345E                                       l8147 33D0  
                                     l8139 33A0                                       l8331 2D50  
                                     l8323 2D0C                                       l8315 2C84  
                                     l8307 2C2E                                       l8251 2AB4  
                                     l9019 41F8                                       l9027 4226  
                                     l9051 47FC                                       l9043 478C  
                                     l9035 4754                                       l9131 3A26  
                                     l9123 39F2                                       l9115 3998  
                                     l8093 4E1A                                       l8085 4DC2  
                                     l8077 4D72                                       l8421 5A64  
                                     l8413 5A40                                       l8405 5A1A  
                                     l8237 367C                                       l8229 3662  
                                     l8181 34A8                                       l8173 346E  
                                     l8165 3424                                       l8149 33E0  
                                     l8157 3400                                       l8341 2DB0  
                                     l8333 2D62                                       l8325 2D1A  
                                     l8317 2C90                                       l8309 2C3E  
                                     l8261 2AFA                                       l8253 2AC4  
                                     l8245 2A96                                       l8501 62DE  
                                     l7701 628C                                       l9061 4850  
                                     l9053 4802                                       l9045 479C  
                                     l9037 4768                                       l9133 3A36  
                                     l9125 39FC                                       l9117 39C2  
                                     l9109 396C                                       l9301 01BA  
                                     l9207 4558                                       l8095 4E3A  
                                     l8087 4DCA                                       l8079 4D76  
                                     l8415 5A46                                       l8407 5A20  
                                     l8431 5B3E                                       l8191 34F6  
                                     l8183 34B4                                       l8175 3476  
                                     l8167 343E                                       l8159 3410  
                                     l8351 2E1E                                       l8335 2D70  
                                     l8327 2D38                                       l8319 2CAC  
                                     l8271 2B26                                       l8263 2B00  
                                     l8255 2AD4                                       l8247 2AA4  
                                     l8503 62EE                                       l7711 21BC  
                                     l9071 489E                                       l9063 4854  
                                     l9055 4820                                       l9039 4770  
                                     l9231 5088                                       l9223 5014  
                                     l9151 3B00                                       l9143 3AC2  
                                     l9127 3A02                                       l9119 39CA  
                                     l9311 0252                                       l9303 01E0  
                                     l8601 65BC                                       l9209 456A  
                                     l8097 4E4C                                       l8089 4DDE  
                                     l8409 5A36                                       l8417 5A4C  
                                     l8441 5B72                                       l8433 5B42  
                                     l8425 5B22                                       l8193 350C  
                                     l8185 34D2                                       l8177 3486  
                                     l8169 344E                                       l8361 2E86  
                                     l8345 2DDA                                       l8353 2E22  
                                     l8337 2D74                                       l8329 2D42  
                                     l8281 2B7C                                       l8273 2B36  
                                     l8265 2B06                                       l8257 2AE4  
                                     l8249 2AB2                                       l7801 2370  
                                     l7713 21CC                                       l7721 21F6  
                                     l7705 219E                                       l8521 53AE  
                                     l8513 536E                                       l9057 482C  
                                     l9049 47E8                                       l9233 50CA  
                                     l9225 5024                                       l9217 4FDC  
                                     l9081 3EC4                                       l9073 3E5C  
                                     l9161 3BBA                                       l9153 3B06  
                                     l9145 3AD4                                       l9137 3A76  
                                     l9129 3A0A                                       l9401 0850  
                                     l9321 02E4                                       l9313 0260  
                                     l9305 0216                                       l8603 65C8  
                                     l9243 6088                                       l9251 6034  
                                     l8611 5F28                                       l8099 4E52  
                                     l8419 5A5C                                       l8451 5BAC  
                                     l8443 5B7A                                       l8435 5B50  
                                     l8427 5B28                                       l8195 3512  
                                     l8187 34D4                                       l8179 349A  
                                     l8371 2EB0                                       l8363 2E96  
                                     l8355 2E3C                                       l8347 2DE6  
                                     l8339 2D82                                       l8291 2BBC  
                                     l8275 2B46                                       l8267 2B14  
                                     l8259 2AEA                                       l7811 23C0  
                                     l7803 237A                                       l7731 2226  
                                     l7723 2206                                       l7715 21DC  
                                     l7707 21AC                                       l8531 53DE  
                                     l8523 53BC                                       l8515 5398  
                                     l8507 5342                                       l9067 4884  
                                     l9059 484A                                       l9227 5056  
                                     l9219 5008                                       l9091 3F5A  
                                     l9083 3ECC                                       l9075 3E6C  
                                     l9171 3C1C                                       l9163 3BD4  
                                     l9139 3A88                                       l9147 3AE8  
                                     l9155 3B64                                       l9411 08EC  
                                     l9403 085E                                       l9331 037C  
                                     l9323 02EE                                       l9307 0224  
                                     l8605 65CA                                       l9245 60B4  
                                     l9237 606A                                       l9181 4422  
                                     l8613 5F34                                       l8381 59A8  
                                     l8445 5B88                                       l8453 5BB2  
                                     l8437 5B58                                       l8429 5B36  
                                     l8197 351C                                       l8189 34E4  
                                     l8461 5BD4                                       l8365 2EA4  
                                     l8357 2E50                                       l8349 2DF4  
                                     l8293 2BC8                                       l8285 2B90  
                                     l8277 2B4C                                       l8269 2B16  
                                     l7901 264C                                       l7821 23FC  
                                     l7813 23D0                                       l7805 239C  
                                     l7741 2266                                       l7733 2234  
                                     l7725 220C                                       l7717 21EC  
                                     l7709 21BA                                       l8541 5408  
                                     l8533 53E8                                       l8517 539A  
                                     l8509 535A                                       l8701 1658  
                                     l9069 4898                                       l9229 5074  
                                     l9093 3F60                                       l9085 3ED6  
                                     l9077 3E6E                                       l9165 3BF0  
                                     l9157 3B82                                       l9149 3AFA  
                                     l9501 0E9C                                       l9405 088E  
                                     l9341 0410                                       l9333 038A  
                                     l9325 02FC                                       l9317 02AC  
                                     l9309 0232                                       l9261 00AC  
                                     l7911 65F8                                       l8607 65D2  
                                     l9239 6082                                       l9255 603A  
                                     l9191 4482                                       l9183 4440  
                                     l9175 4404                                       l7671 5828  
                                     l8615 5F42                                       l8631 3700  
                                     l8623 3688                                       l8391 59D6  
                                     l8383 59AE                                       l8455 5BC2  
                                     l8447 5B9E                                       l8439 5B6A  
                                     l8199 352A                                       l8471 5C76  
                                     l8463 5C04                                       l8367 2EA6  
                                     l8359 2E6A                                       l8295 2BE0  
                                     l8287 2B9C                                       l8279 2B6C  
                                     l7903 264E                                       l7831 2442  
                                     l7823 240A                                       l7815 23DE  
                                     l7807 23AC                                       l7751 22A0  
                                     l7743 2268                                       l7735 2236  
                                     l7727 221E                                       l7719 21EE  
                                     l8375 60B8                                       l8543 5418  
                                     l8519 53AA                                       l8711 1690  
                                     l8703 1666                                       l8551 5650  
                                     l9087 3EDC                                       l9095 3FC4  
                                     l9079 3E88                                       l9167 3BF6  
                                     l9159 3BA0                                       l9415 095E  
                                     l9351 04C6                                       l9343 0420  
                                     l9327 0322                                       l9319 02BE  
                                     l9271 0104                                       l9263 00D2  
                                     l9257 6066                                       l9249 601C  
                                     l9193 4498                                       l9185 4478  
                                     l9177 441A                                       l7673 583A  
                                     l7921 591E                                       l7913 58E0  
                                     l8617 5F46                                       l8609 5F16  
                                     l8641 3758                                       l8633 3702  
                                     l8625 36A8                                       l8393 59DE  
                                     l8385 59BC                                       l8457 5BCA  
                                     l8449 5BA6                                       l8473 5C7C  
                                     l8465 5C14                                       l8481 548A  
                                     l8369 2EAC                                       l8297 2BEC  
                                     l8289 2BA6                                       l7841 24BE  
                                     l7833 2476                                       l7825 240C  
                                     l7817 23EC                                       l7761 22B4  
                                     l7753 22A4                                       l7737 2246  
                                     l7745 2270                                       l7729 2220  
                                     l8377 60CA                                       l8545 5428  
                                     l8529 53D4                                       l8801 1A68  
                                     l8721 16F6                                       l8713 1694  
                                     l8705 1678                                       l8561 56A6  
                                     l8553 565C                                       l9097 3FD8  
                                     l9089 3F54                                       l9169 3C06  
                                     l9601 153C                                       l9521 100E  
                                     l9513 0F56                                       l9505 0EDA  
                                     l9441 0B2A                                       l9433 0AA0  
                                     l9417 0970                                       l9425 09E8  
                                     l9409 08BA                                       l9361 0586  
                                     l9353 04F8                                       l9345 0458  
                                     l9337 03D6                                       l9329 035C  
                                     l9273 0106                                       l9265 00E0  
                                     l9195 44A0                                       l9187 447C  
                                     l9179 441E                                       l7675 5844  
                                     l7683 6100                                       l7691 6300  
                                     l7931 598C                                       l7923 5932  
                                     l7915 58EE                                       l8619 5F4C  
                                     l8651 37FA                                       l8643 375E  
                                     l8635 371C                                       l8627 36D2  
                                     l8395 59E2                                       l8387 59C4  
                                     l8467 5C42                                       l8491 54F6  
                                     l8483 54B8                                       l8299 2BF8  
                                     l7851 24FA                                       l7843 24CE  
                                     l7835 2478                                       l7827 2416  
                                     l7819 23F8                                       l7771 22C8  
                                     l7763 22B8                                       l7755 22A8  
                                     l7747 2280                                       l7739 2256  
                                     l8547 5438                                       l8539 53FC  
                                     l8811 1AB0                                       l8803 1A7A  
                                     l8723 1708                                       l8707 1684  
                                     l8715 169A                                       l8571 571A  
                                     l8563 56B8                                       l8555 567C  
                                     l9099 3FF6                                       l7907 6252  
                                     l9603 1562                                       l9611 1592  
                                     l9531 10BE                                       l9523 1046  
                                     l9515 0F8E                                       l9507 0F00  
                                     l9451 0BD8                                       l9443 0B50  
                                     l9435 0AD8                                       l9427 0A20  
                                     l9419 09A4                                       l9371 0678  
                                     l9363 05D0                                       l9347 0468  
                                     l9339 03E8                                       l9291 0130  
                                     l9283 0124                                       l9275 0118  
                                     l9267 00F0                                       l9701 6484  
                                     l9197 44A8                                       l7677 5862  
                                     l7669 5814                                       l7685 610E  
                                     l7693 630C                                       l7925 5946  
                                     l7917 5902                                       l8661 38A4  
                                     l8653 3800                                       l8645 3766  
                                     l8637 3738                                       l8629 36F2  
                                     l8397 59EA                                       l8389 59C8  
                                     l8469 5C52                                       l8493 5546  
                                     l8485 54C8                                       l8477 544A  
                                     l7861 2526                                       l7853 24FC  
                                     l7837 2488                                       l7829 241C  
                                     l7781 22DC                                       l7773 22CC  
                                     l7765 22BC                                       l7757 22AC  
                                     l7749 2292                                       l7941 5570  
                                     l8901 1F5A                                       l8821 1AF8  
                                     l8813 1ABE                                       l8805 1A8C  
                                     l8741 17DE                                       l8725 1724  
                                     l8717 16C2                                       l8733 1770  
                                     l8709 168C                                       l8565 56E6  
                                     l8557 5684                                       l8581 578C  
                                     l8573 5742                                       l9605 1570  
                                     l9517 0FD6                                       l9509 0F36  
                                     l9461 0C9A                                       l9429 0A68  
                                     l9381 0714                                       l9357 0514  
                                     l9349 04A0                                       l9269 00F6  
                                     l9711 6506                                       l9703 6486  
                                     l8591 5FCE                                       l9199 44DE  
                                     l7679 5898                                       l7687 6120  
                                     l7695 6312                                       l7927 594C  
                                     l7919 5912                                       l7935 6190  
                                     l8671 3906                                       l8663 38BE  
                                     l8655 3806                                       l8647 3770  
                                     l8639 374A                                       l8399 59FC  
                                     l8495 554C                                       l8487 54D6  
                                     l8479 547A                                       l7871 255E  
                                     l7855 250A                                       l7847 24E2  
                                     l7863 2528                                       l7839 2498  
                                     l7791 233A                                       l7775 22D0  
                                     l7767 22C0                                       l7759 22B0  
                                     l7783 22E0                                       l7943 55B0  
                                     l7951 55F0                                       l8911 1FB2  
                                     l8903 1F62                                       l8831 1C0E  
                                     l8823 1B08                                       l8815 1AD6  
                                     l8807 1A9A                                       l8743 17FA  
                                     l8735 1798                                       l8751 1816  
                                     l8727 173C                                       l8567 5706  
                                     l8559 5698                                       l8583 57BA  
                                     l8575 5762                                       l9607 1584  
                                     l9551 1230                                       l9471 0D22  
                                     l9463 0CA6                                       l9391 07D2  
                                     l9367 0608                                       l9359 054E  
                                     l9295 013E                                       l9287 012A  
                                     l9279 011E                                       l9633 667A  
                                     l9713 651E                                       l9705 649E  
                                     l9641 61EE                                       l9721 63CE  
                                     l8593 5FE2                                       l7689 6126  
                                     l7697 632A                                       l7929 5978  
                                     l7937 61AC                                       l8673 390C  
                                     l8681 3942                                       l8665 38D8  
                                     l8649 3776                                       l8657 386A  
                                     l8489 54E8                                       l7881 25DC  
                                     l7857 2512                                       l7849 24EC  
                                     l7865 2536                                       l7793 2350  
                                     l7785 22E4                                       l7777 22D4  
                                     l7769 22C4                                       l7953 5602  
                                     l7945 55D8                                       l7961 5EB6  
                                     l8921 1FF6                                       l8913 1FC0  
                                     l8905 1F66                                       l8841 1CAE  
                                     l8825 1B1C                                       l8833 1C14  
                                     l8817 1AE8                                       l8809 1A9E  
                                     l8761 18A0                                       l8753 182E  
                                     l8729 1746                                       l8569 5708  
                                     l8585 57DA                                       l8577 576A  
                                     l9561 12EC                                       l9553 1240  
                                     l9545 1198                                       l9537 110E  
                                     l9529 1098                                       l9481 0D92  
                                     l9457 0C2A                                       l9449 0BA0  
                                     l9377 06C8                                       l9369 0640  
                                     l9297 0196                                       l9617 15A4  
                                     l9801 51F4                                       l9635 668E  
                                     l9715 6520                                       l9707 64FC  
                                     l9811 6578                                       l9651 6610  
                                     l9643 620A                                       l9731 5CBA  
                                     l9723 63D2                                       l8595 6010  
                                     l8675 391E                                       l8659 3886  
                                     l8667 38E6                                       l8499 62C6  
                                     l7891 2622                                       l7875 2588  
                                     l7883 25DE                                       l7867 253A  
                                     l7859 2516                                       l7795 235C  
                                     l7787 230E                                       l7779 22D8  
                                     l7947 55E4                                       l7939 5550  
                                     l7963 5EC6                                       l7971 5E3E  
                                     l8931 202C                                       l8923 1FFE  
                                     l8915 1FD0                                       l8907 1F84  
                                     l8851 1D44                                       l8843 1CE2  
                                     l8835 1C32                                       l8827 1B80  
                                     l8819 1AF0                                       l8771 197C  
                                     l8763 18FC                                       l8739 17CC  
                                     l8691 1608                                       l8587 57EC  
                                     l8579 577E                                       l9619 15CC  
                                     l9563 1324                                       l9555 1278  
                                     l9547 11D0                                       l9539 1146  
                                     l9491 0E16                                       l9459 0C62  
                                     l9467 0CB2                                       l9387 0762  
                                     l9379 06EE                                       l9299 01B8  
                                     l9803 5214                                       l9637 6684  
                                     l9709 64FE                                       l9821 658C  
                                     l9813 657C                                       l9741 643C  
                                     l9733 5CC6                                       l9725 5C80  
                                     l9717 63B2                                       l9901 27CE  
                                     l8597 6014                                       l8589 5FC8  
                                     l8677 392A                                       l8669 38F8  
                                     l7893 2630                                       l7885 25EE  
                                     l7877 2594                                       l7869 2548  
                                     l7797 2360                                       l7789 232A  
                                     l7957 5646                                       l7981 3CD2  
                                     l7965 5DF4                                       l8941 208A  
                                     l8933 2034                                       l8925 200E  
                                     l8917 1FD4                                       l8909 1FA0  
                                     l8861 1DFA                                       l8853 1D58  
                                     l8845 1CF0                                       l8837 1C66  
                                     l8829 1BD8                                       l8781 19C6  
                                     l8773 1980                                       l8765 1930  
                                     l8757 1866                                       l8693 1610  
                                     l8685 15E0                                       l9581 1410  
                                     l9565 134C                                       l9573 139E  
                                     l9549 1208                                       l9469 0CEA  
                                     l9477 0D36                                       l9397 0824  
                                     l9389 079A                                       l9661 5DCC  
                                     l9805 522A                                       l9831 5AC6  
                                     l9671 617C                                       l9663 6148  
                                     l9823 6590                                       l9815 6580  
                                     l9647 6210                                       l9639 61D2  
                                     l9743 4A50                                       l9735 5CE2  
                                     l9727 5C92                                       l9719 63BC  
                                     l9911 280A                                       l9903 27DA  
                                     l8679 3932                                       l7895 2636  
                                     l7887 25FE                                       l7879 25A2  
                                     l7799 236E                                       l7983 3CE0  
                                     l7991 3DC2                                       l7975 3C46  
                                     l8951 20CA                                       l8943 2092  
                                     l8935 2040                                       l8927 2016  
                                     l8919 1FE4                                       l8871 1E4A  
                                     l8863 1E0E                                       l8855 1D64  
                                     l8847 1D00                                       l8839 1C9A  
                                     l8791 1A02                                       l8775 1992  
                                     l8783 19DE                                       l8767 1938  
                                     l8759 189A                                       l8695 1634  
                                     l8687 15EA                                       l9591 14C2  
                                     l9575 13C4                                       l9567 135C  
                                     l9559 12B4                                       l9479 0D5C  
                                     l9487 0DA6                                       l9399 0838  
                                     l9655 5D90                                       l9833 5AEA  
                                     l9825 5A72                                       l9673 617E  
                                     l9665 6164                                       l9681 6662  
                                     l9817 6584                                       l9809 6574  
                                     l9761 4B54                                       l9753 4AA4  
                                     l9745 4A5A                                       l9737 5CEA  
                                     l9921 2846                                       l9913 2816  
                                     l9905 27E6                                       l9841 266C  
                                     l7897 2638                                       l7889 261E  
                                     l7993 3DFE                                       l7977 3C66  
                                     l7969 5E2C                                       l8961 2106  
                                     l8953 20DC                                       l8937 2046  
                                     l8945 2098                                       l8929 2024  
                                     l8881 1E7E                                       l8873 1E58  
                                     l8865 1E20                                       l8857 1D88  
                                     l8849 1D34                                       l8793 1A1E  
                                     l8777 19A4                                       l8769 196C  
                                     l8697 163E                                       l8689 15FA  
                                     l9593 14EA                                       l9577 13EA  
                                     l9489 0DDE                                       l9497 0E2A  
                                     l9657 5D98                                       l9835 5B1E  
                                     l9827 5A80                                       l9691 6564  
                                     l9675 618C                                       l9667 616A  
                                     l9683 6664                                       l9819 6588  
                                     l9739 6418                                       l9771 4B86  
                                     l9763 4B64                                       l9747 4A9E  
                                     l9931 2882                                       l9923 2852  
                                     l9915 2822                                       l9907 27F2  
                                     l9851 26A2                                       l9843 2672  
                                     l7899 263E                                       l7995 3E12  
                                     l7987 3D52                                       l7979 3CBE  
                                     l8971 215E                                       l8963 210C  
                                     l8955 20E8                                       l8947 20AA  
                                     l8939 206E                                       l8891 1EB0  
                                     l8883 1E8E                                       l8875 1E68  
                                     l8867 1E2E                                       l8859 1DEC  
                                     l8795 1A54                                       l8779 19AC  
                                     l8699 1646                                       l9595 14FA  
                                     l9579 1402                                       l9587 1452  
                                     l9499 0E50                                       l9659 5DA4  
                                     l9829 5AC2                                       l9693 6640  
                                     l9677 66B2                                       l9685 6668  
                                     l9669 617A                                       l9773 4B96  
                                     l9765 4B70                                       l9941 28BE  
                                     l9933 288E                                       l9925 285E  
                                     l9917 282E                                       l9909 27FE  
                                     l9861 26DE                                       l9853 26AE  
                                     l9845 267E                                       l7997 3E3A  
                                     l7989 3D8E                                       l8973 2166  
                                     l8957 20F0                                       l8949 20C4  
                                     l8893 1EC2                                       l8885 1E92  
                                     l8877 1E6C                                       l8869 1E36  
                                     l8797 1A5C                                       l8789 19F0  
                                     l9589 148A                                       l9781 5126  
                                     l9687 654E                                       l9695 6644  
                                     l9679 6656                                       l9767 4B74  
                                     l9759 4AA8                                       l9775 4B98  
                                     l9951 28FA                                       l9943 28CA  
                                     l9935 289A                                       l9927 286A  
                                     l9919 283A                                       l9871 271A  
                                     l9863 26EA                                       l9855 26BA  
                                     l9847 268A                                       l9839 2660  
                                     l7999 3E4A                                       l8975 2176  
                                     l8967 2140                                       l8959 2100  
                                     l8895 1EC6                                       l8887 1E98  
                                     l8879 1E72                                       l8799 1A60  
                                     l8991 40CA                                       l8983 4062  
                                     l9791 516A                                       STR_1 FF6D  
                                     STR_2 FFB0                                       l9689 6562  
                                     l9697 6652                                       l9769 4B84  
                                     l9961 2936                                       l9953 2906  
                                     l9945 28D6                                       l9937 28A6  
                                     l9929 2876                                       l9881 2756  
                                     l9873 2726                                       l9865 26F6  
                                     l9857 26C6                                       l9849 2696  
                                     l8977 217C                                       l8969 2152  
                                     l8889 1E9E                                       l8897 1ECC  
                                     l8993 40D2                                       l8985 4072  
                                     l9793 517C                                       l9785 512E  
                                     l9777 510A                                       STR_3 FFA2  
                                     STR_4 FF8E                                       l9699 6478  
                                     l9971 2972                                       l9963 2942  
                                     l9955 2912                                       l9947 28E2  
                                     l9939 28B2                                       l9891 2792  
                                     l9883 2762                                       l9875 2732  
                                     l9867 2702                                       l9859 26D2  
                                     l8899 1F24                                       l8995 40D8  
                                     l8987 4074                                       l9795 51A2  
                                     l9787 514C                                       l9779 511E  
                                     STR_5 FFBB                                       STR_6 FFCB  
                                     l9981 29AE                                       l9973 297E  
                                     l9965 294E                                       l9957 291E  
                                     l9949 28EE                                       l9893 279E  
                                     l9885 276E                                       l9877 273E  
                                     l9869 270E                                       l8997 40E6  
                                     l8989 408E                                       l9797 51B6  
                                     l9789 515E                                       l9991 29EA  
                                     l9983 29BA                                       l9975 298A  
                                     l9967 295A                                       l9959 292A  
                                     l9895 27AA                                       l9887 277A  
                                     l9879 274A                                       l8999 40EC  
                                     l9799 51C6                                       STR_9 FFBF  
                                     l9993 29F6                                       l9985 29C6  
                                     l9977 2996                                       l9969 2966  
                                     l9897 27B6                                       l9889 2786  
                                     l9995 2A02                                       l9987 29D2  
                                     l9979 29A2                                       l9899 27C2  
                                     l9997 2A0E                                       l9989 29DE  
                                     l9999 2A1A                                       _LATA 000F89  
                                     _LATB 000F8A                                       _LATC 000F8B  
                                     _LATD 000F8C                                       _LATE 000F8D  
                                     i2l51 64CE                                       u9100 632A  
                                     u9101 6326                                       u9110 62BE  
                                     i2l47 663E                                       u9111 62B8  
                                     u9200 2292                                       u9120 62C0  
                                     i2l57 66C0                                       u9201 228E  
                                     u9050 5828                                       u9210 22A0  
                                     u9130 21BA                                       u9051 5824  
                                     u9211 229C                                       u9131 21B6  
                                     u9060 583A                                       u9300 23DE  
                                     u9220 230E                                       u9140 21CC  
                                     u9061 5836                                       u9301 23DA  
                                     u9221 230A                                       u9141 21C8  
                                     u9070 5862                                       u9310 23EC  
                                     u9230 2326                                       u9150 21DC  
                                     u9071 585E                                       u9311 23E8  
                                     u9231 2320                                       u9151 21D8  
                                     u9080 5898                                       u9400 2536  
                                     u9320 240A                                       u9240 2328  
                                     u9160 221E                                       u9081 5894  
                                     u9401 2532                                       u9321 2406  
                                     u9161 221A                                       u9090 6146  
                                     u9410 2548                                       u9330 2442  
                                     u9250 2350                                       u9170 2234  
                                     u9091 6142                                       u9411 2544  
                                     u9331 243E                                       u9251 234C  
                                     u9171 2230                                       u9500 2630  
                                     u9420 255E                                       u9340 2488  
                                     u9260 236E                                       u9180 2246  
                                     u9501 262C                                       u9421 255A  
                                     u9341 2484                                       u9261 236A  
                                     u9181 2242                                       u9510 264C  
                                     u9430 2574                                       u9350 24BE  
                                     u9270 238E                                       u9190 2256  
                                     u9511 2648                                       u9431 2570  
                                     u9351 24BA                                       u9271 238A  
                                     u9191 2252                                       u9440 2588  
                                     u9360 24CE                                       u9280 239C  
                                     u9600 5592                                       u9520 6284  
                                     u9441 2584                                       u9361 24CA  
                                     u9281 2398                                       u9521 627E  
                                     u9450 25A2                                       u9370 24FA  
                                     u9290 23AC                                       u9610 55B0  
                                     u9530 6286                                       u9451 259E  
                                     u9371 24F6                                       u9291 23A8  
                                     u9611 55AC                                       u9540 660A  
                                     u9460 25DC                                       u9380 250A  
                                     u9620 55D8                                       u9700 5E28  
                                     u9541 6606                                       u9461 25D8  
                                     u9381 2506                                       u9621 55D4  
                                     u9605 5586                                       u9550 58EE  
                                     u9470 25EE                                       u9390 2526  
                                     u9630 5602                                       u9710 5E3E  
                                     u9551 58EA                                       u9471 25EA  
                                     u9391 2522                                       u9631 55FE  
                                     u9711 5E3A                                       u9560 5912  
                                     u9480 25FE                                       u9800 3DFE  
                                     u9720 3C90                                       u9561 590E  
                                     u9481 25FA                                       u9801 3DFA  
                                     u9570 596A                                       u9490 261E  
                                     u9650 563C                                       u9810 3E3A  
                                     u9730 3CBE                                       u9571 5966  
                                     u9491 261A                                       u9651 5636  
                                     u9811 3E36                                       u9731 3CBA  
                                     u9580 5978                                       u9900 490C  
                                     u9660 563E                                       u9740 3CE0  
                                     u9820 624A                                       u9581 5974  
                                     u9901 4908                                       u9645 5614  
                                     u9741 3CDC                                       u9725 3C86  
                                     u9821 6244                                       u9590 61AC  
                                     u9670 5F02                                       u9830 624C  
                                     u9911 4936                                       u9591 61A8  
                                     u9920 495A                                       u9760 3D4E  
                                     u9680 5F14                                       u9840 5E88  
                                     u9921 4956                                       u9761 3D4A  
                                     u9681 5F10                                       u9841 5E82  
                                     u9930 4984                                       u9770 3D72  
                                     u9690 5E26                                       u9850 5E8A  
                                     u9931 4980                                       u9755 3CF4  
                                     u9691 5E20                                       u9940 49C4  
                                     u9780 3D8E                                       u9756 3CFE  
                                     u9860 5EA0                                       u9941 49C0  
                                     u9781 3D8A                                       u9757 3D0E  
                                     u9677 5EF8                                       u9861 5E9C  
                                     u9870 636C                                       u9950 4A0E  
                                     u9790 3DE2                                       u9871 6366  
                                     u9951 4A0A                                       u9775 3D68  
                                     u9880 636E                                       u9960 4D52  
                                     u9961 4D4E                                       u9890 48DA  
                                     u9970 4D84                                       u9891 48D6  
                                     u9971 4D80                                       u9795 3DD8  
                                     u9980 4DC2                                       u9981 4DBE  
                                     u9990 4DEC                                       u9991 4DE8  
                                     _WPUB 000F5B                                       abs@a 0072  
                                     _dbuf 016C                                       _atoi 4404  
                                     _ctoa 5F16                                       _main 45A2  
                                     _dtoa 3688                                       _font F19D  
                                     _prec 00EF                            _TMR0_StartTimer 66BA  
                                     _otoa 4062                                       _nout 0035  
                                     pad@i 0077                                       pad@p 0074  
                                     fsr1h 000FE2                                       fsr2h 000FDA  
                                     indf1 000FE7                                       indf2 000FDF  
                                     fsr1l 000FE1                                       pad@w 0079  
                                     fsr2l 000FD9                                       _stoa 473A  
                                     btemp 0050                                       _utoa 3E5C  
                                     _xtoa 396C                              ___fpclassifyf 5550  
                                     prodh 000FF4                                       prodl 000FF3  
                                     start 00A8                              __CFG_IESO$OFF 000000  
                          ___fldiv@new_exp 0071                     __end_of_SPI_Initialize 6668  
                             _tolower$2371 006C                              lcd_fill@width 006D  
                            __CFG_MCLRE$ON 000000                               ___param_bank 000000  
                                    ??_abs 0074                                      ??_pad 0076  
                  __end_of_TMR0_Initialize 6526                           __end_of_INT0_ISR 66AA  
           __size_of_OSCILLATOR_Initialize 0012              __end_of_OSCILLATOR_Initialize 667A  
                                    l10001 2A26                                      l10011 2A62  
                                    l10003 2A32                                      l10101 52AC  
                                    l10021 4BF6                                      l10013 2A74  
                                    l10005 2A3E                                      l10111 52FE  
                                    l10103 52B8                                      l10031 4C30  
                                    l10023 4BFE                                      l10015 2A80  
                                    l10007 2A4A                                      l10121 5330  
                                    l10113 5300                                      l10105 52C6  
                                    l10041 4C74                                      l10033 4C38  
                                    l10025 4C06                                      l10017 2A86  
                                    l10009 2A56                                      l10115 530A  
                                    l10107 52D0                                      l10051 4CD2  
                                    l10043 4C80                                      l10035 4C4E  
                                    l10027 4C12                                      l10019 4BD2  
                                    l10109 52EE                                      l10117 5310  
                                    l10053 4CFA                                      l10045 4C9C  
                                    l10037 4C56                                      l10029 4C28  
                                    l10061 4EBE                                      l10141 45A2  
                                    l10119 5320                                      l10055 4D28  
                                    l10047 4CB6                                      l10039 4C6C  
                                    l10071 4FA4                                      l10063 4EF8  
                                    l10151 4628                                      l10143 45C2  
                                    l10081 5234                                      l10065 4EFC  
                                    l10073 4FA8                                      l10057 4EA4  
                                    l10161 46D6                                      l10153 4656  
                                    l10145 45C8                                      l10091 526A  
                                    l10083 523A                                      l10067 4F4A  
                                    l10059 4EA8                                      l10331 44C8  
                                    l10075 63E6                                      l10163 4704  
                                    l10155 4658                                      l10147 45CC  
                                    l10093 527A                                      l10085 5248  
                                    l10069 4F76                                      l10077 63F0  
                                    l10157 4682                                      l10149 45FA  
                                    l10095 527E                                      l10087 5258  
                                    l10159 46A8                                      l10097 528E  
                                    l10089 525C                                      l10329 0168  
                                    l10099 52A4                              ___fltol@sign1 0068  
                          __end_of___aldiv 5342                            __end_of___aodiv 4A50  
                                    ?_atoi 0067                                      ?_ctoa 007B  
                          __end_of___fladd 2660                                      ?_main 0001  
                                    ?_dtoa 007B                            __end_of___aomod 4EA4  
                          __end_of___fldiv 3688                            __end_of___awdiv 5A6E  
                          __end_of___flneg 6300                                      STR_10 FFD3  
                                    STR_13 FFC7                                      STR_15 FFC7  
                                    STR_31 FFEA                                      STR_24 FFC8  
                                    STR_40 FFED                                      STR_33 FFEA  
                                    STR_17 FFCF                                      STR_42 FFED  
                                    STR_19 FFCF                                      STR_35 FFF0  
                                    STR_28 FFD0                                      STR_52 FFDC  
                                    STR_60 FFD7                            __end_of___awmod 5BD4  
                                    STR_37 FFF0                                      STR_45 FFDB  
                                    STR_62 FFD7                                      STR_70 FFF3  
                                    STR_47 FFDB                                      STR_55 FFF6  
                                    STR_72 FFF3                                      STR_57 FFF6  
                                    STR_82 FFE0                                      STR_90 FFE3  
                                    STR_67 FFD8                                      STR_75 FFDF  
                                    STR_92 FFE3                                      STR_77 FFDF  
                                    STR_85 FFF9                                      STR_94 FFC3  
                                    STR_87 FFF9                                      STR_96 FFC3  
                          __end_of___flmul 2EC2                                      ?_otoa 007B  
                TMR0_ReadTimer@readValHigh 0008                            __end_of___flsub 6100  
                          __end_of___fltol 544A          __end_of_IOCB4_SetInterruptHandler 6684  
                                    ?_stoa 0069                                      u10000 4E1A  
                                    u10001 4E16                                      u10010 4E62  
                                    u10011 4E5E                                      u10100 3486  
                                    u10020 3308                                      u10101 3482  
                                    u10021 3304                                      u10110 34A8  
                                    u10030 331A                                      u10111 34A4  
                                    u10031 3316                                      ?_utoa 007B  
                                    u10200 35B4                                      u10120 34D2  
                                    u10040 332A                                      u11000 1666  
                                    u10201 35B0                                      u10121 34CE  
                                    u10041 3326                                      u11001 1662  
                                    u10210 35CE                                      u10130 34F6  
                                    u10050 336E                                      u11010 1678  
                                    u10211 35CA                                      u10131 34F2  
                                    u10051 336A                                      u11011 1674  
                                    u10220 3616                                      u10140 350C  
                                    u10060 3380                                      u10300 2B36  
                                    u11100 1862                                      u11020 16C2  
                                    u10221 3612                                      u10141 3508  
                                    u10061 337C                                      u10301 2B32  
                                    u11101 185E                                      u11021 16BE  
                                    u10230 3646                                      u10150 352A  
                                    u10070 3390                                      u10310 2B6C  
                                    u11110 18F8                                      u11030 16F0  
                                    u10231 3642                                      u10151 3526  
                                    u10071 338C                                      u10311 2B68  
                                    u11111 18F4                                      u11031 16EA  
                                    u10240 3674                                      u10160 354A  
                                    u10080 33D0                                      u10400 2DF4  
                                    u10320 2B7C                                      u11200 1A7A  
                                    u11120 196C                                      u11040 16F2  
                                    u12000 5008                                      u10241 3670  
                                    u10161 3546                                      u10081 33CC  
                                    u10401 2DF0                                      u10321 2B78  
                                    u11201 1A76                                      u11121 1968  
                                    u12001 5004                                      u10170 355C  
                                    u10090 3410                                      u10410 2E3C  
                                    u10330 2CF6                                      u10250 2AB2  
                                    u11210 1A8C                                      u11130 1992  
                                    u11050 1708                                      u12010 5046  
                                    u10171 3558                                      u10091 340C  
                                    u10411 2E38                                      u10251 2AAE  
                                    u11211 1A88                                      u11131 198E  
                                    u11051 1704                                      u10500 5B36  
                                    u10180 358A                                      u10420 2E6A  
                                    u10340 2D50                                      u10260 2AC4  
                                    u11300 1D58                                      u11220 1A9A  
                                    u11140 19A4                                      u11060 1798  
                                    u12020 5056                                      u12100 01AA  
                                    u10501 5B32                                      u10181 3586  
                                    u10421 2E66                                      u10341 2D4C  
                                    u10261 2AC0                                      u11301 1D54  
                                    u11221 1A96                                      u11141 19A0  
                                    u11061 1794                                      u12021 5052  
                                    u12101 01A6                                      u10510 5B50  
                                    u10190 35A0                                      u10430 2EA4  
                                    u10350 2D70                                      u10270 2AD4  
                                    u11310 1DFA                                      u11230 1AB0  
                                    u11150 19C6                                      u11070 17C6  
                                    u12030 5074                                      u12110 01B8  
                                    u10511 5B4C                                      u10191 359C  
                                    u10431 2EA0                                      u10351 2D6C  
                                    u10335 2CEC                                      u10271 2AD0  
                                    u11311 1DF6                                      u11231 1AAC  
                                    u11151 19C2                                      u11071 17C0  
                                    u12031 5070                                      u12111 01B4  
                                    u10440 59BC                                      u10520 5B6A  
                                    u10600 54B8                                      u10360 2D82  
                                    u10280 2B14                                      u11400 1FB2  
                                    u11320 1E0E                                      u11240 1ABE  
                                    u11160 19EC                                      u11080 17C8  
                                    u12040 5088                                      u12200 03D0  
                                    u12120 01E0                                      _T0CON 000FD5  
                                    u10441 59B8                                      u10521 5B66  
                                    u10601 54B4                                      u10361 2D7E  
                                    u10281 2B10                                      u11401 1FAE  
                                    u11321 1E0A                                      u11241 1ABA  
                                    u11161 19E8                                      u12041 5084  
                                    u12017 503C                                      u12121 01DC  
                                    u10450 59D6                                      u10530 5B88  
                                    u10610 54D6                                      u10370 2DB0  
                                    u10290 2B26                                      u11410 1FC0  
                                    u11330 1E20                                      u11250 1AE8  
                                    u11170 1A02                                      u11090 17DE  
                                    u12050 50CA                                      u12210 03E8  
                                    u12130 0224                                      u10451 59D2  
                                    u10531 5B84                                      u10611 54D2  
                                    u10371 2DAC                                      u10291 2B22  
                                    u11411 1FBC                                      u11331 1E1C  
                                    u11251 1AE4                                      u11171 19FE  
                                    u11091 17DA                                      u12051 50C6  
                          __end_of___lodiv 5742                                      u12211 03E4  
                                    u12131 0220                                      u10460 59FC  
                                    u10540 5B9E                                      u10620 54F6  
                                    u10380 2DC6                                      u10700 5418  
                                    u11420 1FF6                                      u11340 1E2E  
                                    u11260 1C32                                      u11180 1A1E  
                                    u11500 4072                                      u12060 50EC  
                                    u12300 0714                                      u12220 0420  
                                    u12140 02A4                            ___awdiv@divisor 0062  
                                    u10461 59F8                                      u10541 5B9A  
                                    u10621 54F2                                      u10381 2DC2  
                                    u10701 5414                                      u11421 1FF2  
                                    u11341 1E2A                                      u11261 1C2E  
                                    u11181 1A1A                                      u11501 406E  
                                    u12301 0710                                      u12221 041C  
                                    u12141 029E                                      u12070 6082  
                                    u10470 5A1A                                      u10550 5BC2  
                                    u10630 5546                                      u10390 2DDA  
                                    u10710 5428                                      u11430 2024  
                                    u11350 1E4A                                      u11270 1C9A  
                                    u11190 1A54                                      u11510 408E  
                                    u12310 079A                                      u12230 0468  
                                    u12150 02A6                                      u12071 607E  
                                    u10471 5A16                                      u10551 5BBE  
                                    u10631 5542                                      u10391 2DD6  
                                    u10711 5424                                      u11431 2020  
                                    u11351 1E46                                      u11271 1C96  
                                    u11191 1A50                                      u11511 408A  
                                    u12055 50BA                                      u12311 0796  
                                    u12231 0464                                      ?_xtoa 007B  
                                    u12080 6034                                      u10800 6010  
                                    u10480 5A36                                      u10560 5C04  
                                    u10640 62DE                                      u11440 20AA  
                                    u11360 1E58                                      u11280 1CE2  
                                    u11520 414A                                      u12400 0B50  
                                    u12320 07D2                                      u12240 04C6  
                                    u12160 02BE                                      _T1CON 000FCD  
                                    u12081 6030                                      u10801 600C  
                                    u10481 5A32                                      u10561 5C00  
                                    u10641 62DA                                      u11441 20A6  
                                    u11361 1E54                                      u11281 1CDE  
                                    u11601 4744                                      u12057 50B0  
                                    u10721 5656                                      u12401 0B4C  
                                    u12321 07CE                                      u12241 04C2  
                                    u12161 02BA                                      u10490 5A5C  
                                    u10570 5C42                                      u10650 535A  
                                    u11450 20C4                                      u11370 1EB0  
                                    u11290 1CF0                                      u11530 418A  
                                    u11610 4768                                      u10730 567C  
                                    u12410 0BD8                                      u12330 0838  
                                    u12250 054E                                      u12170 02E4  
                                    u12090 00D2                                      u13107 63C4  
                                    u10491 5A58                                      u10571 5C3E  
                                    u10651 5356                                      u11451 20C0  
                                    u11371 1EAC                                      u11291 1CEC  
                                    u11531 4186                                      u11611 4764  
                                    u12067 50E2                                      u10731 5678  
                                    u12411 0BD4                                      u12331 0834  
                                    u12251 054A                                      u12171 02E0  
                                    u12091 00CE                                      u10820 5F28  
                                    u10900 3886                                      u10580 5C76  
                                    u10660 538E                                      u11460 20DC  
                                    u11380 1F84                                      u11540 41A8  
                                    u11620 479C                                      u10740 56A6  
                                    u11700 3E88                                      u12500 10BE  
                                    u12420 0C62                                      u12340 08EC  
                                    u12260 0586                                      u12180 0322  
                                    u10821 5F24                                      u10901 3882  
                                    u10581 5C72                                      u11461 20D8  
                                    u11381 1F80                                      u11541 41A4  
                                    u11525 4138                                      u11621 4798  
                                    u10741 56A2                                      u11701 3E84  
                                    u12501 10BA                                      u12421 0C5E  
                                    u12341 08E8                                      u12261 0582  
                                    u12181 031E                                      u10910 38A4  
                                    u10830 36BA                                      u10590 547A  
                                    u10670 53BC                                      u11470 213A  
                                    u11390 1FA0                                      u11550 41C2  
                                    u11630 47BA                                      u10750 56E6  
                                    u11710 3FD8                                      u12510 1146  
                                    u12430 0CEA                                      u12350 0956  
                                    u12270 0640                                      u12190 03CE  
                                    u10815 65C6                                      u10911 38A0  
                                    u10831 36B4                                      u10591 5476  
                                    u10671 53B8                                      u11471 2134  
                                    u11391 1F9C                                      u11551 41BE  
                                    u11631 47B6                                      u10751 56E2  
                                    u11711 3FD4                                      u12511 1142  
                                    u12431 0CE6                                      u12351 0950  
                                    u12271 063C                                      u12191 03C8  
                                    u10816 65C8                                      u10920 38BE  
                                    u10840 36BC                                      u10680 53D0  
                                    u11480 213C                                      u11560 41DC  
                                    u11640 47E4                                      u10760 5762  
                                    u11720 3FF6                                      u11800 3A70  
                                    u12600 1562                                      u12520 11D0  
                                    u12440 0D5C                                      u12360 0958  
                                    u12280 0678                                      u10921 38BA  
                                    u10681 53CC                                      u10665 5384  
                                    u11561 41D8                                      u11641 47E0  
                                    u10761 575E                                      u11721 3FF2  
                                    u11801 3A6A                                      u12601 155E  
                                    u12521 11CC                                      u12441 0D58  
                                    u12281 0674                                      u12610 61EE  
                                    u10930 38D8                                      u10850 36D2  
                                    u10690 53F8                                      u11490 2152  
                                    u11570 41EA                                      u11650 4820  
                                    u10770 578C                                      u11730 4010  
                                    u11810 3A72                                      u12530 1208  
                                    u12450 0DDE                                      u12370 0970  
                                    u12290 06EE                                      u12611 61EA  
                                    u10931 38D4                                      u10851 36CE  
                                    u10691 53F4                                      u11491 214E  
                                    u11571 41E6                                      u11651 481C  
                                    u10771 5788                                      u11731 400C  
                                    u12531 1204                                      u12451 0DDA  
                                    u12371 096C                                      u12291 06EA  
                                    u12620 620A                                      u12700 4B54  
                                    u10940 38E6                                      u10860 3700  
                                    u11580 41F8                                      u11660 4872  
                                    u10780 57BA                                      u11740 402A  
                                    u11900 3BD4                                      u11820 3A88  
                                    u12540 12EC                                      u12460 0E50  
                                    u12380 0A20                                      u12621 6206  
                                    u12701 4B50                                      u10941 38E2  
                                    u10861 36FC                                      u11581 41F4  
                                    u11661 486E                                      u10781 57B6  
                                    u11741 4026                                      u11901 3BD0  
                                    u11821 3A84                                      u12541 12E8  
                                    u12461 0E4C                                      u12381 0A1C  
                                    u12710 4B84                                      u10790 5FE2  
                                    u10950 38F8                                      u10870 371C  
                                    u11590 420A                                      u11670 4880  
                                    u11750 4038                                      u11910 3BE2  
                                    u11830 3ABC                                      u12550 1324  
                                    u12470 0F00                                      u12390 0AD8  
                                    u12630 5DEA                                      u12711 4B80  
                                    u10791 5FDE                                      u10951 38F4  
                                    u10871 3718                                      u11591 4206  
                                    u11671 487C                                      u11751 4034  
                                    u11911 3BDE                                      u11831 3AB6  
                                    u12551 1320                                      u12471 0EFC  
                                    u12391 0AD4                                      u12631 5DE6  
                                    u12800 4BF6                                      u12720 4B96  
                                    u12640 63E4                                      u10960 3906  
                                    u10880 374A                                      u11680 48BC  
                                    u11920 3BF0                                      u11840 3ABE  
                                    u11760 397C                                      u12560 13C4  
                                    u12480 0F8E                                      u12801 4BF2  
                                    u12721 4B92                                      u12641 63E0  
                                    u10961 3902                                      u10881 3746  
                                    u11681 48B8                                      u11921 3BEC  
                                    u11761 3978                                      u12561 13C0  
                                    u12481 0F8A                                      u12810 4C28  
                                    u12730 4BD0                                      u12650 5CB6  
                                    u11930 4440                                      u10970 391E  
                                    u10890 3758                                      u11690 3E6C  
                                    u11850 3AD4                                      u11770 3998  
                                    u12570 13EA                                      u12490 1046  
                                    u12811 4C24                                      u12731 4BCC  
                                    u12651 5CB2                                      u11931 443C  
                                    u10971 391A                                      u10891 3754  
                                    u11691 3E68                                      u11851 3AD0  
                                    u11771 3994                                      u12571 13E6  
                                    u12491 1042                                      u12820 4C4E  
                                    u12900 4FCA                                      u12660 5CE2  
                                    u11940 4478                                      u10980 1608  
                                    u11860 3B3E                                      u11780 39C2  
                                    u12580 148A                                      u12740 511E  
                                    u12821 4C4A                                      u12661 5CDE  
                                    u11941 4474                                      u10981 1604  
                                    u11781 39BE                                      u12581 1486  
                                    u12741 511A                                      u12830 4C6C  
                                    u12910 4FDA                                      u12670 5D06  
                                    u11950 4494                                      u10990 1658  
                                    u11870 3B82                                      u11790 3A26  
                                    u12590 14C2                                      u12750 514C  
                                    u12831 4C68                                      u12911 4FD6  
                                    u12671 5D02                                      u11951 4490  
                                    u10991 1654                                      u11871 3B7E  
                                    u11791 3A22                                      u12591 14BE  
                                    u12751 5148                                      u12920 5248  
                                    u12680 643C                                      u12840 4CB6  
                                    u11960 4552                                      u11880 3BA0  
                                    u12760 51B6                                      u12921 5244  
                                    u12681 6438                                      u12841 4CB2  
                                    u11961 454C                            __end_of___lomod 5814  
                                    u11881 3B9C                                      u11865 3B2C  
                                    u12761 51B2                                      u12930 526A  
                                    u12850 4CCE                                      u11970 4554  
                                    u11890 3BBA                                      u12770 51C6  
                                    u12931 5266                                      u12851 4CCA  
                                    u12907 4FC0                                      u11891 3BB6  
                                    u12771 51C2                                      u12940 52A4  
                                    u12860 4CFA                                      u11980 456A  
                                    u12780 51F4                                      u12941 52A0  
                                    u12861 4CF6                                      u11981 4566  
                                    u12781 51F0                                      u12790 5A80  
                                    u12950 52C6                                      u12870 4D28  
                                    u12694 4B32                                      u11990 457C  
                                    u12791 5A7C                                      u12951 52C2  
                                    u12871 4D24                                      u12695 4B2C  
                                    u11991 4578                                      u12960 52EE  
                                    u12880 4F26                                      u12961 52EA  
                                    u12970 5320                                      u12890 4F4A  
                                    u12971 531C                                      u12891 4F46  
                                    u12887 4F1C                                      i2l111 0062  
                                    i2l112 0094                                      i2l220 63AC  
                                    i2l117 0094                                      i2l109 003E  
                                    i2l302 65F2                                      i2l233 66C4  
                                    i2l305 66A0                                      i2l217 638C  
                                    i2l322 66A8                                      i2l227 6476  
                                    i2l332 66C2                            _TMR0_WriteTimer 6698  
                                    i2l326 64FA                                      i2l390 65B6  
                                    i2l296 66BC                                      i2l299 66B8  
                                    i2l387 5D8E                            ___awdiv@counter 0064  
                             vfpfcnvrt@fmt 00D3                                      _TMR0H 000FD7  
                             vfpfcnvrt@llu 01DA                                      _TMR1H 000FCF  
                                    _TMR0L 000FD6                                      _TMR1L 000FCE  
                                    _TRISA 000F92                                      _TRISB 000F93  
                           ?_INT0_CallBack 0001                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                            __CFG_WRT0$OFF 000000                            ??_lcd_draw_char 0073  
                            __CFG_WRT1$OFF 000000                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                            ??_lcd_draw_line 0079  
                           __CFG_EBTR0$OFF 000000                             __CFG_FCMEN$OFF 000000  
                           __CFG_EBTR1$OFF 000000                             __CFG_EBTR2$OFF 000000  
                           __CFG_EBTR3$OFF 000000                              _pulso_encoder 6596  
                            __CFG_WRTB$OFF 000000                              __CFG_WRTC$OFF 000000  
                            __CFG_WRTD$OFF 000000                            __end_of_msDelay 63E6  
                           __CFG_EBTRB$OFF 000000                    __end_of_PIN_MANAGER_IOC 6640  
                                    _flags 0039                                      _errno 0104  
                                    _fputc 5814                            __end_of_isalpha 6252  
                                    _fputs 6100                            __end_of_isdigit 6374  
                                    _ticks 01BC                                      atoi@n 0074  
                                    pad@fp 0070                                      atoi@s 0067  
                                    _width 0037                                      ctoa@c 007D  
                                    _putch 66BE                                      ctoa@w 007E  
                                    dtoa@d 007D                                      dtoa@i 009D  
                                    dtoa@n 0095                                      dtoa@p 008F  
                                    dtoa@s 0093                                      dtoa@w 0091  
                         __end_of_SPI_Open 5B22                            __end_of_islower 628C  
                          __end_of_isspace 601C                    __end_of_TMR1_Initialize 64A4  
                          __end_of_isupper 62C6                                      pclath 000FFA  
                                    tablat 000FF5                                      otoa@d 007D  
                                    otoa@i 009B                                      otoa@n 0093  
                                    otoa@p 008D                                      otoa@t 008F  
                                    otoa@w 0091                                      plusw1 000FE3  
                                    plusw2 000FDB                                      stoa@i 0075  
                                    stoa@l 007D                                      stoa@p 007B  
                                    stoa@s 006B                                      stoa@w 0077  
                                    ttemp5 0051                                      ttemp6 0054  
                                    ttemp7 0058                                      utoa@d 007D  
                                    utoa@i 0099                                      utoa@n 0091  
                                    utoa@p 008D                                      utoa@w 008F  
                                    status 000FD8                                      wtemp8 0051  
                           ?___fpclassifyf 0060                            __end_of_tolower 5E56  
                                    xtoa@c 00A0                                      xtoa@d 007D  
                                    xtoa@i 009E                                      xtoa@n 0096  
                                    xtoa@p 0092                                      xtoa@w 0094  
                                    xtoa@x 0085                              i2___flmul@grs 001C  
                          __end_of_strncmp 510A                            __end_of_toupper 5EB6  
                           lcd_fill@height 006B                           ___lodiv@dividend 0060  
                       __size_ofi2___flmul 042A                            ?_SPI_Initialize 0001  
          ??_IOCB4_DefaultInterruptHandler 0001                               _toupper$2386 006C  
                          __initialization 5F74                               __end_of_atoi 45A2  
                             __end_of_ctoa 5F74                               __end_of_main 473A  
                             __end_of_dtoa 396C                               __end_of_font FF69  
                             __end_of_otoa 4250                               __end_of_stoa 48C6  
                             __end_of_utoa 4062                               __end_of_xtoa 3C46  
                        __end_of_IOCB4_ISR 64D0                                  ??_ADC_ISR 0001  
              ?_INTERRUPT_InterruptManager 0001                                     ??_atoi 0069  
                                   ??_ctoa 007E                                     ??_main 00EF  
                                   ??_dtoa 0085                          ?_lcd_set_cursor_x 0063  
                        ?_lcd_set_cursor_y 0063                              lcd_send@value 0061  
                                   ??_otoa 0085                                     ??_stoa 006D  
                                   ??_utoa 0085                                     ??_xtoa 0086  
                            __activetblptr 000003                         ??_lcd_set_cursor_x 0065  
                       ??_lcd_set_cursor_y 0065                             __CFG_RETEN$OFF 000000  
                         ___lodiv@quotient 0070                             ?_pulso_encoder 0001  
                           lcd_draw_char@i 007E                             lcd_draw_char@j 007C  
                           lcd_draw_char@k 007D                   __end_of_SPI_ExchangeByte 6610  
                  __end_of_TMR0_StartTimer 66BE                             lcd_draw_char@x 0069  
                           lcd_draw_char@y 006B                                     _ADCON0 000FC2  
                                   _ADCON1 000FC1                                     _ADCON2 000FC0  
                                   ?_fputc 0060                                     STR_101 FFE4  
                                   STR_110 FFFC                                     ?_fputs 0069  
                                   STR_112 FFE7                                     STR_105 FFC4  
                                   STR_114 FFE7                                     _ADRESH 000FC4  
                                   STR_108 FFFC                                     _ADRESL 000FC3  
                                   _ANCON0 000F5D                                     _ANCON1 000F5C  
                         ___awdiv@dividend 0060                                     ?_putch 0001  
                                   _T1GCON 000FAA                            __CFG_BBSIZ$BB2K 000000  
                                   i2l1512 32EA                                     i2l1515 317C  
                                   i2l1508 2F86                                     i2l1525 32AC  
                                   i2l1517 31F4                                     i2l1518 31E2  
                                   i2l1552 4402                                     i2l1563 439A  
                                   i2l1556 433E                                     i2l1549 42A6  
                           __CFG_WDTEN$OFF 000000                                     i2l4143 644A  
                                   i2l4145 644C                                     i2l4147 645E  
                                   i2l7027 64D0                                     i2l6331 638A  
                                   i2l7123 6628                                     i2l6341 65D6  
                                   i2l7029 64E2                                     i2l6333 639A  
                                   i2l7125 6638                                     i2l6343 65DE  
                                   i2l6351 669C                                     i2l6327 6376  
                                   i2l7127 663C                                     i2l6345 65EA  
                                   i2l6337 66BA                                     i2l7145 66A2  
                                   i2l6329 6388                                     i2l6339 66B6  
                                   i2l7147 66A4                                     i2l6349 6698  
                                   i2l6801 2EDE                                     i2l6811 2F24  
                                   i2l6803 2EEE                                     i2l7451 0028  
                                   i2l6901 3248                                     i2l6821 2F50  
                                   i2l6813 2F2A                                     i2l6805 2EFE  
                                   i2l7461 007E                                     i2l7453 0036  
                                   i2l6751 4262                                     i2l6911 32B0  
                                   i2l6903 324C                                     i2l6831 2FA6  
                                   i2l6823 2F60                                     i2l6815 2F30  
                                   i2l6807 2F0E                                     i2l7463 008C  
                                   i2l7455 004C                                     i2l6761 42E0  
                                   i2l6753 4270                                     i2l6921 32DA  
                                   i2l6913 32C0                                     i2l6905 3266  
                                   i2l6841 2FE6                                     i2l6825 2F70  
                                   i2l6817 2F3E                                     i2l6809 2F14  
                                   i2l7457 005A                                     i2l7449 001A  
                                   i2l6771 4334                                     i2l6763 42E8  
                                   i2l6755 42B6                                     i2l6915 32CE  
                                   i2l6907 327A                                     i2l6851 3030  
                                   i2l6843 2FF2                                     i2l6835 2FBA  
                                   i2l6827 2F76                                     i2l6819 2F40  
                                   i2l6931 5D08                                     i2l7459 0070  
                                   i2l6941 659A                                     i2l6781 43AA  
                                   i2l6773 4370                                     i2l6765 42F4  
                                   i2l6757 42CC                                     i2l6749 4252  
                                   i2l6917 32D0                                     i2l6909 3294  
                                   i2l6861 3082                                     i2l6853 303C  
                                   i2l6845 300A                                     i2l6837 2FC6  
                                   i2l6829 2F96                                     i2l6933 5D16  
                                   i2l6943 65A6                                     i2l6791 43F2  
                                   i2l6783 43AE                                     i2l6775 437C  
                                   i2l6767 4326                                     i2l6919 32D6  
                                   i2l6871 3100                                     i2l6863 3092  
                                   i2l6855 304C                                     i2l6847 3016  
                                   i2l6839 2FD0                                     i2l6935 5D3A  
                                   i2l6785 43D2                                     i2l6777 438A  
                                   i2l6769 4328                                     i2l6881 317A  
                                   i2l6873 3136                                     i2l6865 30AE  
                                   i2l6857 3058                                     i2l6849 3022  
                                   i2l6937 5D48                                     i2l6939 6596  
                                   i2l6787 43E2                                     i2l6779 43A8  
                                   i2l6891 31DA                                     i2l6883 318C  
                                   i2l6875 3144                                     i2l6867 30BA  
                                   i2l6859 3068                                     i2l6795 2EC2  
                                   i2l6789 43F0                                     i2l6885 319A  
                                   i2l6877 3162                                     i2l6869 30D6  
                                   i2l6797 2ECE                                     i2l6895 3204  
                                   i2l6887 319E                                     i2l6879 316C  
                                   i2l6799 2EDC                                     i2l6983 64A4  
                                   i2l6897 3210                                     i2l6889 31AC  
                                   i2l6985 64B6                                     i2l6899 321E  
                                   _OSCCON 000FD3                              vfpfcnvrt@done 01C0  
                                   _SSPADD 000FC8                                     _SSPBUF 000FC9  
                         __end_of___xxtofl 4404                            _global_bg_color 003B  
                           __CFG_XINST$OFF 000000                           ??_lcd_draw_pixel 0065  
                         __end_of_lcd_fill 5D08                               vfprintf@cfmt 00DB  
                         __end_of_lcd_init 2A96       __size_of_ADC_DefaultInterruptHandler 0002  
         __size_of_ADC_SetInterruptHandler 000A                           __end_of_lcd_send 65D6  
                                   ___flge 544A                                     ___fleq 5BD4  
                                ??___aldiv 0068                                  ??___aodiv 0070  
                                ??___fladd 0068                                  ??___aomod 0070  
                                   ___wmul 6526                                  ??___fldiv 0068  
                                ??___awdiv 0064                                  ??___flneg 0064  
                           __CFG_STVREN$ON 000000                                  ??___awmod 0064  
                                ??___flmul 0068                                  ??___flsub 0081  
                                ??___fltol 0064                    __end_of_TMR0_WriteTimer 66A2  
                                ??___lodiv 0070                                  ??___lomod 0070  
                                   _efgtoa 15E0                                     _floorf 3C46  
                         ?_TMR0_Initialize 0001                                     clear_0 5F9A  
                                   clear_1 5FA6                                     clear_2 5FB8  
                         ___awdiv@quotient 0066                            ___awmod@divisor 0062  
                          ___awmod@counter 0064                                     pad@buf 0072  
                                   ctoa@fp 007B                            ??_INT0_CallBack 0009  
                                   dtoa@fp 007B                                     _strcpy 5EB6  
                                   _string 0108                                     _strlen 6300  
                                ??_msDelay 0060                                     fputc@c 0060  
                                   fputs@c 006D                                     fputs@i 006E  
                             __pdataCOMRAM 0049                                     fputs@s 0069  
                                ??_isalpha 0062                                  ??_isdigit 0062  
                        __end_ofi2___flmul 32EC                            ___fpclassifyf@e 0068  
                          ___fpclassifyf@u 006A                            ___fpclassifyf@x 0060  
                                ??_islower 0062                               __mediumconst F19C  
                                ??_isspace 0062                                     otoa@fp 007B  
                                   tblptrh 000FF7                                  ??_isupper 0062  
                                   tblptrl 000FF6                                     tblptru 000FF8  
                 ADC_GetConversion@channel 0005                                     stoa@cp 0079  
                                   stoa@fp 0069                                     putch@c 0001  
                         __end_of_vfprintf 5DF4                                     utoa@fp 007B  
 INT0_SetInterruptHandler@InterruptHandler 0060    ADC_SetInterruptHandler@InterruptHandler 0060  
IOCB4_SetInterruptHandler@InterruptHandler 0060                           ?_PIN_MANAGER_IOC 0001  
                         __end_of_snprintf 6418                                  ??_tolower 0068  
                                   xtoa@fp 007B                             i2___flmul@aexp 0020  
                           i2___flmul@bexp 0021                                  ??_strncmp 0066  
                                ??_toupper 0068                             i2___flmul@sign 001B  
                           i2___flmul@temp 0026                             i2___flmul@prod 0022  
            __size_of_INTERRUPT_Initialize 0004                                 ___flge@ff1 0079  
                               ___flge@ff2 007D                            ??___fpclassifyf 0064  
                         ?_TMR1_Initialize 0001                               ___xxtofl@arg 000B  
                             ___xxtofl@exp 000A                          _SYSTEM_Initialize 6574  
                             ___xxtofl@val 0001                                 ___fleq@ff1 0060  
                               ___fleq@ff2 0064                                 __accesstop 0060  
                 __size_of_lcd_draw_string 0138                    __end_of__initialization 5FBE  
                                ?_INT0_ISR 0001                                 ___flneg@f1 0060  
                       ?_SYSTEM_Initialize 0001                              ___rparam_used 000001  
                               ___fltol@f1 0060                             __pcstackCOMRAM 0001  
                      ??_SYSTEM_Initialize 0062                              __end_of_fputc 58E0  
                            __end_of_fputs 6148      __end_of_IOCB4_DefaultInterruptHandler 66C2  
   __size_of_IOCB4_DefaultInterruptHandler 0002              _IOCB4_DefaultInterruptHandler 66C0  
                            __end_of_putch 66C0                    __size_of_TMR0_ReadTimer 001E  
                                ?_SPI_Open 0001                                 _acende_led 5D08  
              ??_IOCB4_SetInterruptHandler 0062                           ??_lcd_set_cursor 0069  
                          ??_pulso_encoder 0009                __size_of_EXT_INT_Initialize 0016  
                         ?_TMR0_StartTimer 0001                                    ??_fputc 0064  
                __end_of_SYSTEM_Initialize 6596                                    ??_fputs 006D  
                                  ??_putch 0060                                 __pbssBANK0 00EF  
                               __pbssBANK1 0100                                 __pbssBANK2 0200  
                          __CFG_PLLCFG$OFF 000000                      _INT0_InterruptHandler 003F  
                               ??_INT0_ISR 0009                                 __pnvCOMRAM 003F  
                                  ?___flge 0079                                    ?___fleq 0060  
                  __size_of_TMR0_StopTimer 0004                                    ?___wmul 0060  
                                  ?_efgtoa 008D                           ?_TMR0_WriteTimer 0001  
                                  ?_floorf 0079                                    _ADC_ISR 644A  
                               ??_SPI_Open 0060                            lcd_draw_line@e2 0080  
                          lcd_draw_line@x0 006F                            lcd_draw_line@x1 0073  
                          lcd_draw_line@y0 0071                            lcd_draw_line@y1 0075  
                  __size_of_ADC_Initialize 0026                            lcd_draw_line@dx 0082  
                          lcd_draw_line@dy 0084                                    ?_strcpy 0060  
                          lcd_draw_line@sx 007A                            lcd_draw_line@sy 007C  
                                  ?_strlen 0060                           __CFG_CANMX$PORTB 000000  
                                ?___xxtofl 0001                                    _REFOCON 000F9A  
                                  _OSCCON2 000FD2                         __size_of_vfpfcnvrt 1534  
                                  _OSCTUNE 000F9B                                    _SSPCON1 000FC6  
                                  _SSPCON2 000FC5                                  ?_lcd_fill 0069  
                                ?_lcd_init 0001                                  ?_lcd_send 0061  
                                  _SSPSTAT 000FC7                           ___lomod@dividend 0060  
                         ??_SPI_Initialize 0060                  _IOCB4_SetInterruptHandler 667A  
        __size_of_INT0_SetInterruptHandler 000A                  ?_INT0_SetInterruptHandler 0060  
                          __CFG_PWRTEN$OFF 000000                       _ADC_InterruptHandler 0045  
                                  __Hparam 0000                    _ADC_SetInterruptHandler 668E  
                                  __Lparam 0000                         __size_of_vsnprintf 012A  
                        ??_lcd_draw_string 0089                                    ___aldiv 5234  
                          __size_of___flge 0106                            __size_of___fleq 00AC  
                                  ___aodiv 48C6                                    ___fladd 219E  
                                  ___aomod 4D3E                                    ___fldiv 32EC  
                                  ___awdiv 59A8                                    ___flneg 62C6  
                                  ___awmod 5B22                                    ___flmul 2A96  
                                  ___flsub 60B8                                    ___fltol 5342  
                          __size_of___wmul 0028                                    ___lodiv 5650  
                                  ___lomod 5742                                  ?_vfprintf 01E2  
                          __size_of_efgtoa 0BBE                                  ?_snprintf 01F0  
                          __size_of_floorf 0216                                    __pcinit 5F74  
                                  __ramtop 0F00                                ?_acende_led 0001  
                                  __ptext0 45A2                                    __ptext1 63E6  
                                  __ptext2 510A                                    __ptext3 5D90  
                                  __ptext4 00AC                                    __ptext5 396C  
                                  __ptext6 5E56                                    __ptext7 6252  
                                  __ptext8 6214                                    __ptext9 3E5C  
                                _T0CONbits 000FD5                                    _msDelay 63AE  
                                _IOCB4_ISR 64A4                            __size_of_strcpy 0060  
                          __size_of_strlen 003A                                  _T1CONbits 000FCD  
                    _OSCILLATOR_Initialize 6668                               __size_of_abs 0042  
                             __size_of_pad 00C8                                    _isalpha 6214  
                                  _isdigit 633A                                 ??___xxtofl 0005  
                         ___awmod@dividend 0060                           ___aldiv@dividend 0060  
                                  _islower 6252                   ??_PIN_MANAGER_Initialize 0062  
                                  _isspace 5FC8                          __CFG_MSSPMSK$MSK7 000000  
                                  _isupper 628C                                    efgtoa@c 0093  
                                  efgtoa@d 00B1                                    efgtoa@e 00C9  
                                  efgtoa@f 008F                                    efgtoa@g 00C5  
                                  efgtoa@h 00BB                                    efgtoa@i 00C3  
                                  efgtoa@l 00BF                                    efgtoa@m 00AD  
                                  efgtoa@n 00CB                                    efgtoa@p 00B5  
                                  efgtoa@t 00A9                                    efgtoa@u 00CD  
                                  efgtoa@w 00B8                                    atoi@neg 006D  
                    __end_of_lcd_draw_char 4BD2                      __end_of_lcd_draw_line 4D3E  
               __size_of_SYSTEM_Initialize 0022                                 ??_lcd_fill 006B  
                                  _tolower 5DF4                          ?_SPI_ExchangeByte 0001  
                               ??_lcd_init 006F                                 ??_lcd_send 0062  
                                  _strncmp 4FDC                                    _toupper 5E56  
                     end_of_initialization 5FBE                                    floorf@e 0087  
                                  floorf@m 0083                                    floorf@u 0089  
                                  floorf@x 0079                         ??_SPI_ExchangeByte 0060  
                __size_of_lcd_set_cursor_x 004E                  __size_of_lcd_set_cursor_y 004E  
                                  fputc@fp 0062                                    fputs@fp 006B  
                      lcd_draw_char@fIndex 006D                          __end_of_vfpfcnvrt 15E0  
                               efgtoa@mode 00BA                      TMR0_ReadTimer@readVal 0005  
                               efgtoa@sign 00B3                           ___aldiv@quotient 006A  
                                  postdec1 000FE5                                    postdec2 000FDD  
                   lcd_draw_pixel_at@color 006D                                    postinc0 000FEE  
                                  postinc1 000FE6                                    postinc2 000FDE  
                         lcd_fill@bg_color 0069                                 ??_vfprintf 00DB  
                           _TMR0_ReadTimer 65D6                                 ??_snprintf 00EB  
                                  strcpy@d 0068                                    strlen@a 0062  
                                  strcpy@s 0066                                    strlen@s 0060  
                        lcd_draw_string@pS 0083                                  _PORTBbits 000F81  
                        _spi_configuration FF69                                 ?_IOCB4_ISR 0001  
                              ___fladd@grs 006F                           __CFG_FOSC$INTIO2 000000  
      __end_of_ADC_DefaultInterruptHandler 66C6                _ADC_DefaultInterruptHandler 66C4  
                            ___xxtofl@sign 0009                                  _TRISCbits 000F94  
                        __end_of_vsnprintf 5234                                ___fldiv@grs 0073  
                              ___fldiv@rem 006C                                  i2___flmul 2EC2  
                              ___flmul@grs 006E              ??_ADC_DefaultInterruptHandler 0001  
                               lcd_send@dc 0062                  ??_ADC_SetInterruptHandler 0062  
                      __size_of_acende_led 0088                          __size_of_INT0_ISR 0008  
                           _TMR0_StopTimer 66B6                     __end_of_TMR0_ReadTimer 65F4  
                               _string_rpm 0200               __end_of_INTERRUPT_Initialize 66B6  
                     SPI_ExchangeByte@data 0060                             __end_of___flge 5550  
                           __end_of___fleq 5C80       __end_of_INT0_DefaultInterruptHandler 66C4  
    __size_of_INT0_DefaultInterruptHandler 0002               _INT0_DefaultInterruptHandler 66C2  
                __end_of_spi_configuration FF6D                                vfpfcnvrt@ap 00D5  
                              vfpfcnvrt@cp 01BE                                vfpfcnvrt@ct 01CC  
                              vfpfcnvrt@fp 00D1                                vfpfcnvrt@ll 01CF  
                           __end_of___wmul 654E                                vfpfcnvrt@vp 01D7  
                            __pidataCOMRAM 66AA                             __end_of_efgtoa 219E  
                           _ADC_Initialize 654E                             __end_of_floorf 3E5C  
                   ?_OSCILLATOR_Initialize 0001                                 floorf@F524 002D  
                    __end_of_INT0_CallBack 64FC                          __size_of_SPI_Open 00B4  
                           __end_of_strcpy 5F16                             __end_of_strlen 633A  
                      start_initialization 5F74                            ___lodiv@divisor 0068  
                          ___lodiv@counter 0078                          _lcd_draw_pixel_at 6418  
                 __size_of_TMR0_Initialize 002A            __size_of_PIN_MANAGER_Initialize 0048  
                              __end_of_abs 61D2                                __end_of_pad 59A8  
                       ?_lcd_draw_pixel_at 0069                                 ?i2___flmul 000F  
                           _codigo_digital 003D                      __end_of___fpclassifyf 5650  
                      ??_lcd_draw_pixel_at 006F                   __size_of_PIN_MANAGER_IOC 0018  
                   __end_of_TMR0_StopTimer 66BA             SPI_Open@spiUniqueConfiguration 0061  
                 __size_of_TMR1_Initialize 002C                                vfprintf@fmt 01E4  
                                 ??___flge 0081                                   ??___fleq 0068  
                          ?_TMR0_ReadTimer 0001                                   ??___wmul 0064  
                                 ??_efgtoa 0094                     __end_of_ADC_Initialize 6574  
                                 ??_floorf 007D                                   ?_ADC_ISR 0001  
               __end_of_EXT_INT_Initialize 6656            fp__INT0_DefaultInterruptHandler 0000  
            ?_INT0_DefaultInterruptHandler 0001                                   ??_strcpy 0064  
                                 ??_strlen 0062                                ??_IOCB4_ISR 0029  
                                ___fladd@a 0064                                  ___fladd@b 0060  
                  __size_of_lcd_draw_pixel 0018                  __end_of_lcd_draw_pixel_at 644A  
                             vsnprintf@cnt 00E3                               vsnprintf@fmt 01EC  
                                ___fldiv@a 0064                                  ___fldiv@b 0060  
                                ___flmul@a 0064                                  ___flmul@b 0060  
                              __pbssCOMRAM 002D                                  ___flsub@a 007D  
                                ___flsub@b 0079           __end_of_INT0_SetInterruptHandler 668E  
                    __end_of_pulso_encoder 65B8                              __pcstackBANK0 0060  
                            __pcstackBANK1 01BE                           ___aodiv@dividend 0060  
                              snprintf@fmt 01F4                          __size_of___xxtofl 01B4  
                          _lcd_draw_string 4EA4                           _lcd_set_cursor_x 606A  
                         _lcd_set_cursor_y 601C                          __size_of_lcd_fill 0088  
                        __size_of_lcd_init 0436                          __size_of_lcd_send 001E  
                                _atoi$2250 0071                                  _atoi$2248 006F  
                                _atoi$2249 0073                   __size_of_TMR0_StartTimer 0004  
                          ?_TMR0_StopTimer 0001                                _efgtoa$1603 009D  
                              _efgtoa$1612 00A3                                _efgtoa$1604 009F  
                              _efgtoa$1613 00A5                                _efgtoa$1614 00A7  
                              _efgtoa$1608 00A1                     _PIN_MANAGER_Initialize 6148  
                                _dtoa$1580 008D                                  __pintcode 0008  
                            __pmediumconst F19C                                   ?___aldiv 0060  
                                 ?___aodiv 0060                                   ?___fladd 0060  
                                 ?___aomod 0060                                   ?___fldiv 0060  
                                 ?___awdiv 0060                           ___aodiv@quotient 0072  
                                 ?___flneg 0060                                   ?___awmod 0060  
                                 ?___flmul 0060                                   ?___flsub 0079  
                                 ?___fltol 0060                                   ?___lodiv 0060  
                                 ?___lomod 0060                            ?_ADC_Initialize 0001  
                             ??_acende_led 0028               ??_INTERRUPT_InterruptManager 0029  
                        __size_of_vfprintf 0064                          __size_of_snprintf 0032  
                                 ?_msDelay 0001                            ___lomod@divisor 0068  
                          ___lomod@counter 0070                                   ?_isalpha 0060  
                                 ?_isdigit 0060                   __size_of_TMR0_WriteTimer 000A  
                                 ?_islower 0060                                   ?_isspace 0060  
                                 ?_isupper 0060                                   ?_tolower 0066  
                              ??i2___flmul 0017                           lcd_draw_line@err 007E  
                           __size_of_fputc 00CC                             __size_of_fputs 0048  
                                 ?_strncmp 0060                                   ?_toupper 0066  
                           __size_of_putch 0002                       _INTERRUPT_Initialize 66B2  
                  __size_of_lcd_set_cursor 0042                            ___aldiv@divisor 0064  
                        ??_TMR0_Initialize 0060                            ___aldiv@counter 0068  
                                 _INT0_ISR 66A2                             ___wmul@product 0064  
                                 _IOCBbits 000F5A                                   _LATAbits 000F89  
                                 _LATEbits 000F8D                         __end_of_acende_led 5D90  
                                 _PIE1bits 000F9D                            lcd_set_cursor@x 0065  
                          lcd_set_cursor@y 0067        __size_of_INTERRUPT_InterruptManager 00A0  
                                 i2u412_40 645E                                   i2u412_41 645A  
                                 i2u413_48 6464                                   i2u413_49 6476  
                                 _PIR1bits 000F9E                      lcd_draw_string@lIndex 008F  
                                 i2u820_40 43A8                                   i2u820_41 43A4  
                                 i2u821_40 43E2                                   i2u813_40 4262  
                                 i2u821_41 43DE                                   i2u813_41 425E  
                                 i2u822_40 43F0                                   i2u814_40 4270  
                                 i2u830_40 2FA6                                   i2u822_41 43EC  
                                 i2u814_41 426C                                   i2u830_41 2FA2  
                                 i2u815_40 42CC                                   i2u831_40 3120  
                                 i2u823_40 2EDC                                   i2u815_41 42C8  
                                 i2u823_41 2ED8                                   i2u831_45 3116  
                                 i2u816_40 4322                                   i2u840_40 3294  
                                 i2u832_40 317A                                   i2u824_40 2EEE  
                                 i2u816_41 431E                                   i2u840_41 3290  
                                 i2u832_41 3176                                   i2u824_41 2EEA  
                                 i2u817_40 436C                                   i2u841_40 32CE  
                                 i2u833_40 319A                                   i2u825_40 2EFE  
                                 i2u817_41 4368                                   i2u841_41 32CA  
                                 i2u833_41 3196                                   i2u825_41 2EFA  
                                 i2u818_40 438A                                   i2u834_40 31AC  
                                 i2u826_40 2F3E                                   i2u842_40 5D16  
                                 i2u818_41 4386                                   i2u834_41 31A8  
                                 i2u826_41 2F3A                                   i2u842_41 5D12  
                                 i2u850_48 64E8                                   i2u819_40 439A  
                                 i2u835_40 31DA                                   i2u827_40 2F50  
                                 i2u843_40 5D26                                   i2u850_49 64FA  
                                 i2u819_41 4396                                   i2u835_41 31D6  
                                 i2u827_41 2F4C                                   i2u843_41 5D20  
                                 i2u843_46 5D28                                   i2u836_40 31F0  
                                 i2u828_40 2F60                                   i2u836_41 31EC  
                                 i2u828_41 2F5C                                   i2u837_40 3204  
                                 i2u829_40 2F96                                   i2u837_41 3200  
                                 i2u829_41 2F92                                   i2u758_40 639A  
                                 i2u838_40 321E                                   i2u758_41 6396  
                                 i2u838_41 321A                                   i2u839_40 3266  
                                 i2u847_40 64B6                                   i2u839_41 3262  
                                 i2u847_41 64B2                                   i2u849_40 64E2  
                                 i2u848_48 64BC                                   i2u849_41 64DE  
                                 i2u848_49 64CE                                   i2u866_40 6638  
                                 i2u890_40 0070                                   i2u866_41 6634  
                                 i2u890_41 006C                                   i2u891_40 007E  
                                 i2u891_41 007A                                   i2u892_40 008C  
                                 i2u892_41 0088                                   i2u886_40 0028  
                                 i2u886_41 0024                                   i2u887_40 0036  
                                 i2u887_41 0032                                   _RCONbits 000FD0  
                                 i2u888_40 004C                                   i2u888_41 0048  
                                 i2u889_40 005A                                   i2u889_41 0056  
                __size_of_SPI_ExchangeByte 001C             fp__ADC_DefaultInterruptHandler 0000  
                         lcd_draw_string@k 008D                           lcd_draw_string@x 007F  
                         lcd_draw_string@y 0081                          ??_PIN_MANAGER_IOC 0029  
                                _vfpfcnvrt 00AC                   TMR0_ReadTimer@readValLow 0007  
                                _xtoa$1650 008E                                  _xtoa$1651 0090  
                                 _SPI_Open 5A6E                          ??_TMR1_Initialize 0060  
                         __size_of_ADC_ISR 002E                                 _ADCON0bits 000FC2  
                        ___wmul@multiplier 0060                           __CFG_SOSCSEL$DIG 000000  
               __size_of_lcd_draw_pixel_at 0032                    __end_of_lcd_draw_string 4FDC  
           ??_INT0_DefaultInterruptHandler 0001                               _isspace$2288 0066  
                                msDelay@ms 0061                                 vfpfcnvrt@c 01D9  
                               vfpfcnvrt@f 01C8                                _INTCON2bits 000FF1  
                                copy_data0 5F88                      ?_INTERRUPT_Initialize 0001  
                 _INT0_SetInterruptHandler 6684                                  _vsnprintf 510A  
                      lcd_draw_pixel@color 0063                                   __Hrparam 0000  
                               vfprintf@ap 01E6                                   __Lrparam 0000  
                               vfprintf@fp 01E2                          _ADC_GetConversion 6374  
                       __CFG_BOREN$SBORDIS 000000                    __size_of_SPI_Initialize 0012  
                  ??_OSCILLATOR_Initialize 0060                     __size_of_lcd_draw_char 0182  
                       ?_ADC_GetConversion 0001                          ??_TMR0_StartTimer 0001  
                         __size_of___aldiv 010E                           __size_of___aodiv 018A  
                   __size_of_lcd_draw_line 016C                           __size_of___fladd 04C2  
                         __size_of___aomod 0166                           __size_of___fldiv 039C  
                         __size_of___awdiv 00C6                           __size_of___flneg 003A  
                         __size_of___awmod 00B2                                vsnprintf@ap 01EE  
                         __size_of___flmul 042C                           __size_of___flsub 0048  
                         __size_of___fltol 0108                           __size_of___lodiv 00F2  
                         __size_of___lomod 00D2                                 ?_vfpfcnvrt 00D1  
                               snprintf@ap 00ED                            ___aodiv@divisor 0068  
                          ___aodiv@counter 0070                     _IOCB4_InterruptHandler 0047  
                           _lcd_draw_pixel 6610                         ___fpclassifyf@F463 0031  
                      ??_ADC_GetConversion 0003                           __size_of_msDelay 0038  
                                 ___xxtofl 4250                         lcd_draw_line@color 0077  
                         __size_of_isalpha 003E                           __size_of_isdigit 003A  
         fp__IOCB4_DefaultInterruptHandler 0000             ?_IOCB4_DefaultInterruptHandler 0001  
                         __size_of_islower 003A                           __size_of_isspace 0054  
                                 __ptext10 5742                                   __ptext11 5650  
                                 __ptext20 5550                                   __ptext12 4FDC  
                                 __ptext21 5342                                   __ptext13 473A  
                               _T1GCONbits 000FAA                                   __ptext30 59A8  
                                 __ptext22 60B8                                   __ptext14 4062  
                                 __ptext31 3688                                   __ptext23 219E  
                                 __ptext15 15E0                                   __ptext40 66BE  
                                 __ptext32 6190                                   __ptext24 62C6  
                                 __ptext16 5DF4                                   __ptext41 4404  
                                 __ptext33 4D3E                                   __ptext25 2A96  
                                 __ptext17 628C                                   __ptext50 4BD2  
                                 __ptext42 5FC8                                   __ptext34 48C6  
                                 __ptext26 544A                                   __ptext18 5EB6  
                                 __ptext51 6418                                   __ptext43 633A  
                                 __ptext35 5F16                                   __ptext27 5BD4  
                                 __ptext19 3C46                                   __ptext60 6478  
                                 __ptext52 61D2                                   __ptext44 6526  
                                 __ptext36 58E0                                   __ptext28 32EC  
                                 __ptext61 64FC                                   __ptext53 601C  
                                 __ptext45 2660                                   __ptext37 6300  
                                 __ptext29 5B22                                   __ptext70 668E  
                                 __ptext62 6656                                   __ptext54 606A  
                                 __ptext46 63AE                                   __ptext38 6100  
                                 __ptext71 5A6E                                   __ptext63 6148  
                                 __ptext55 6610                                   __ptext47 5C80  
                                 __ptext39 5814                                   __ptext80 66A2  
                                 __ptext64 667A                                   __ptext56 65B8  
                                 __ptext48 4EA4                                   __ptext81 64D0  
                                 __ptext73 6628                                   __ptext65 6668  
                                 __ptext57 65F4                                   __ptext49 4A50  
                                 __ptext90 0000                                   __ptext82 66C2  
                                 __ptext74 64A4                                   __ptext66 66B2  
                                 __ptext58 5234                                   __ptext83 6596  
                                 __ptext75 66C0                                   __ptext67 6640  
                                 __ptext59 6574                                   __ptext84 6698  
                                 __ptext76 5D08                                   __ptext68 6684  
                                 __ptext85 66B6                                   __ptext77 2EC2  
                                 __ptext69 654E                                   __ptext86 66BA  
                                 __ptext78 4250                                   __ptext87 65D6  
                                 __ptext79 6374                                   __ptext88 644A  
                                 __ptext89 66C4                           __size_of_isupper 003A  
                                 _lcd_fill 5C80                                   _lcd_init 2660  
                                 _lcd_send 65B8                           __size_of_tolower 0062  
                  TMR0_WriteTimer@timerVal 0001                          ??_TMR0_WriteTimer 0003  
                               strcpy@dest 0060                           __size_of_strncmp 012E  
                         __size_of_toupper 0060                                 ?_vsnprintf 01E8  
                            __size_of_atoi 019E                              __size_of_ctoa 005E  
                            __size_of_main 0198                              __size_of_dtoa 02E4  
                            __size_of_otoa 01EE                              __size_of_stoa 018C  
                            __size_of_utoa 0206                           ??_TMR0_ReadTimer 0003  
                            __size_of_xtoa 02DA                  __end_of_ADC_GetConversion 63AE  
                                 efgtoa@fp 008D                                   efgtoa@ne 00AF  
                                 efgtoa@pp 00AB                                   efgtoa@ou 0099  
                                stoa@F1174 0049                      lcd_draw_char@bg_color 0071  
                                 int$flags 0050                                   _vfprintf 5D90  
                    lcd_draw_char@fg_color 006F         __end_of_INTERRUPT_InterruptManager 00A8  
               _INTERRUPT_InterruptManager 0008                     __end_of_lcd_draw_pixel 6628  
                                 _snprintf 63E6                                _percentagem 0100  
                 __end_of_lcd_set_cursor_x 60B8                   __end_of_lcd_set_cursor_y 606A  
                      __CFG_INTOSCSEL$HIGH 000000                                   msDelay@k 0062  
                         ___aomod@dividend 0060                             _vfpfcnvrt$1665 01C2  
                           _vfpfcnvrt$1666 01C4                             _vfpfcnvrt$1687 01C6  
                               _INTCONbits 000FF2                              fp__acende_led 0000  
                         ?_lcd_draw_string 007F                                   isalpha@c 0060  
                                 isdigit@c 0060                     ??_INTERRUPT_Initialize 0060  
                       lcd_draw_pixel_at@x 0069                         lcd_draw_pixel_at@y 006B  
                               vsnprintf@f 00E5                                 vsnprintf@n 01EA  
                               vsnprintf@s 01E8                         _EXT_INT_Initialize 6640  
                 ?_ADC_SetInterruptHandler 0060                              _lcd_draw_char 4A50  
                                snprintf@n 01F2                                  snprintf@s 01F0  
                            _lcd_draw_line 4BD2                                   intlevel2 0000  
                           _lcd_set_cursor 61D2                           ??_TMR0_StopTimer 0001  
                        lcd_set_cursor_x@x 0063                          lcd_set_cursor_y@y 0063  
                                 islower@c 0060                                   isspace@c 0060  
                  ?_PIN_MANAGER_Initialize 0001                        ?_EXT_INT_Initialize 0001  
                                strcpy@src 0062                                   isupper@c 0060  
                                strncmp@_l 0060                                  strncmp@_r 0062  
                         ??_ADC_Initialize 0062                     __size_of_INT0_CallBack 002C  
                         _SPI_ExchangeByte 65F4                    lcd_draw_string@bg_color 0087  
                              efgtoa@nmode 00B7                         __CFG_WDTPS$1048576 000000  
                          ___aomod@divisor 0068                    lcd_draw_string@fg_color 0085  
                          ?_lcd_draw_pixel 0063                                ??_vfpfcnvrt 00D7  
                                 stoa@nuls 006E                            ___aomod@counter 0070  
                     ??_EXT_INT_Initialize 0062                                   tolower@c 0066  
                           _vsnprintf$2418 00E1                     __size_of___fpclassifyf 0100  
                          _TMR0_Initialize 64FC                                   strncmp@l 0067  
                                 strncmp@n 0064                                   strncmp@r 0069  
                                 toupper@c 0066                               ___aldiv@sign 0069  
                              _SSPCON1bits 000FC6                     __end_of_lcd_set_cursor 6214  
                           ?_lcd_draw_char 0069                             ?_lcd_draw_line 006F  
                            ___fladd@signs 006C                               ___aodiv@sign 0071  
           __end_of_PIN_MANAGER_Initialize 6190                                ??_vsnprintf 00DD  
                             ___fladd@aexp 006D                               ___fladd@bexp 006E  
                      __CFG_BORPWR$ZPBORMV 000000                            _PIN_MANAGER_IOC 6628  
               __size_of_ADC_GetConversion 003A                               ___aomod@sign 0071  
                          _TMR1_Initialize 6478  
